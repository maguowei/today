[
  {
    "title": "感觉现在的电脑比小时候耐用了？",
    "url": "https://www.v2ex.com/t/871817",
    "summary": "ttgo: 感觉小时候电脑没几年就几乎不能用了，<br /><br />我初中买的一台电脑，三四年后开机要 10 分钟，打开一个拳皇模拟器我得去看会儿报纸。<br /><br />而现在三四年前的电脑，正经能用呢。<br /><br />是电脑耐用了？？<br /><br />还是小时候时间过得比较快？？",
    "publish_time": "2022-08-10 08:30:01",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "[交流] 最近在看前端的内容，接触了一些前端的代码，有一些吐槽",
    "url": "https://www.v2ex.com/t/871818",
    "summary": "eryajf: <p>最近在看前端的内容，接触了一些前端的代码，从一个小白的角度，仅以过往一些 go 编程经历对比而言，对前端技术栈吐槽如下：</p>\n<ol>\n<li>html 标签里边，需要手写的内容太多，自动补全方面比起一些后端语言，差太多。</li>\n<li>外部的包，已经引入成功，也能正常使用，但是这个包的方法并不会自动补全，写起来很难受。</li>\n<li>函数的写法太多了，什么箭头函数之类的，而且感觉写法挺奇怪挺麻烦，老是记不住。</li>\n<li>前端编码不能很方便地看到函数的入参以及返回值，导致用的时候就很模糊，要么死死记住这个方法，要么就得再次看方法的源码。</li>\n<li>前端对方法的调用也是各有便道（混乱），没有参数的函数不加括号也可以以至于后来再看并不好区分这是用了一个方法还会一个参数。在 template 区域，大多方法都是在双引号的包裹当中，以至于补全不力，无法跳转，更无法直接通过调用的地方看到方法的具体实现。</li>\n</ol>\n<p>暂时想到这么多，以后可能还补充，欢迎前端朋友一起交流下你的感受。</p>\n<p>仅是一些个人角度的主观感受，没有任何恶意，请友善交流！</p>",
    "publish_time": "2022-08-10 08:39:58",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  }
]