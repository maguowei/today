[
  {
    "title": "2023 年我关注的 Telegram 频道",
    "url": "https://www.v2ex.com/t/999882",
    "summary": "LCINA: <h3>瘦瘦的绘画世界#</h3>\n<p>记录自己的绘画作品</p>\n<p>平时的素描写生、水彩、插画、彩铅手绘等都会分享在这里。</p>\n<p><a href=\"https://t.me/drawing1024\" rel=\"nofollow\">https://t.me/drawing1024</a></p>\n<h3>冰器库（ Bing's Toolkit ）#</h3>\n<p>范冰（ XDash ）的 TG 频道，主观推荐有料有趣的工具 / 影视 / 书等资源。</p>\n<p><a href=\"https://t.me/ifanbing\" rel=\"nofollow\">https://t.me/ifanbing</a></p>\n<h3>科技爱好者周刊#</h3>\n<p>记录每周值得分享的科技内容，周五发布。</p>\n<p><a href=\"https://t.me/scitech_fans\" rel=\"nofollow\">https://t.me/scitech_fans</a></p>\n<h3>404 [[ ]] KIDS SEE GHOSTS#</h3>\n<p>科技丨社科哲丨泛文化与艺术</p>\n<p>LLM/ AI/ Technology/ Space/ Academic/ Digital-Humanities/ Arts/ Culture/ Review/ Productivity/ TfT/ RSS/ PKM/ SRS/ Rabbit Hole</p>\n<p><a href=\"https://t.me/isaiahsystem\" rel=\"nofollow\">https://t.me/isaiahsystem</a></p>\n<h3>Newlearner の自留地#</h3>\n<p>不定期推送 IT 相关资讯，欢迎关注！</p>\n<p><a href=\"https://t.me/NewlearnerChannel\" rel=\"nofollow\">https://t.me/NewlearnerChannel</a></p>\n<h3>不周的生活觀察#</h3>\n<p>透過文字，觸摸到可能的不朽。</p>\n<p><a href=\"https://t.me/buzhouxiansheng\" rel=\"nofollow\">https://t.me/buzhouxiansheng</a></p>\n<h3>扫地僧 º 笔记#</h3>\n<p>每天所见所闻所想，是个树洞。</p>\n<p><a href=\"https://t.me/lover_links\" rel=\"nofollow\">https://t.me/lover_links</a></p>\n<h3>风向旗参考快讯#</h3>\n<p>风闻奏事，遍查访知。提供互联网科技新闻快讯。发布 VPS 、网盘等有价值虚拟资产的新闻和交易信息。⚡️</p>\n<p><a href=\"https://t.me/xhqcankao\" rel=\"nofollow\">https://t.me/xhqcankao</a></p>\n<h3>AI Copilot#</h3>\n<p>这是一个关于 AI 的非营利频道。</p>\n<p><a href=\"https://t.me/AI_Copilot_Channel\" rel=\"nofollow\">https://t.me/AI_Copilot_Channel</a></p>\n<h3>你不知道的内幕消息#</h3>\n<p>一些你不知道的内幕消息</p>\n<p>最新行业资讯、以及大公司的负面新闻、财经观点信息、好物推荐等</p>\n<p><a href=\"https://t.me/inside1024\" rel=\"nofollow\">https://t.me/inside1024</a></p>\n<h3>Levix 空间站#</h3>\n<p>最后推荐一下我自己的 Telegram 频道，哈哈，基本上每天都会更新，大部分应该都是关于技术文章（更多以前端为主）相关的，如果你不想看频道，你也可以直接在这个<a href=\"https://synctoai.com/2023article\" rel=\"nofollow\">链接</a>看所有的文章集合。</p>\n<p>现在频道只有 16 个人，还是期待各位朋友的加入。</p>\n<p><a href=\"https://t.me/synctoai\" rel=\"nofollow\">https://t.me/synctoai</a></p>",
    "publish_time": "2023-12-13 08:31:56",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "客户一定要我给他设计的程序里他的 UID 为 88888",
    "url": "https://www.v2ex.com/t/999917",
    "summary": "kaiki: <p>可是这个程序没有用户系统，毕竟只有他一个人用。\n没办法，只能在前端上写 UID:88888 了，没见过这种需求的。</p>",
    "publish_time": "2023-12-13 09:48:41",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "问一个并发程序可见性的问题， golang 语言",
    "url": "https://www.v2ex.com/t/999936",
    "summary": "rockyliang: <p><a href=\"https://go.dev/ref/mem\" rel=\"nofollow\">Go 官网</a>有一段代码例子：</p>\n<pre><code class=\"language-go\">var c = make(chan int)\nvar a string\n\nfunc f() {\na = \"hello, world\"\n&lt;-c\n}\n\nfunc main() {\ngo f()\nc &lt;- 0\nprint(a)\n}\n</code></pre>\n<p>官网说使用了 channel 后，这段代码可以确保能正常打印出\"hello, world\"，原因是什么？</p>\n<p>这是我的理解（有可能不对，欢迎指正）：\n假设 [ f 协程] 运行在 cpu0 核心上， [ main 协程] 运行在 cpu1 核心上， [ f 协程] 修改完 a 变量后，由于不同 cpu 核心之间存在缓存一致性问题，这个修改对于 [ main 协程] 来说有可能是不可见的，也就是 [ main 协程] 有可能会打印出一个空字符串</p>\n<p>那么，channel 在这段代码里发挥的作用是什么，它是怎么确保 [ main 协程] 可以正常打印出\"hello, world\"的呢？</p>",
    "publish_time": "2023-12-13 10:22:14",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "第一次在杭州过冬，有没有推荐的取暖方式？",
    "url": "https://www.v2ex.com/t/999921",
    "summary": "h4ckm310n: <p>自己以前一直都是在广西/广东生活，冬天也不算特别冷，今年才来的杭州工作，有点慌。</p>\n<p>也说一下自己的情况：</p>\n<ol>\n<li>住在公寓 loft ，活动范围主要就在电脑前，所以大概不需要做到全屋供暖；</li>\n<li>6 斤垫被+6 斤盖被（ 150x200 尺寸），晚上睡觉够暖（只是就目前的体验而言，再冷就不知道了）；</li>\n<li>电费：商电，1.1 ；</li>\n<li>空调：用的是中央空调，前台说公寓里冬天开空调的不多，中央空调的待机费平摊下来会贵一些，不如用取暖器划算（具体忘了怎么说的了，大概是这个意思）；</li>\n<li>如果要买取暖器的话，我大概也只会考虑暖风机这种体积小点的，一方面空间有限，另一方面这样将来搬家的时候也方便些。</li>\n</ol>\n<p>各位有没有什么取暖方面的建议？是需要弄个取暖器还是多穿点就行？</p>",
    "publish_time": "2023-12-13 09:57:55",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "我把我和我老婆从认识到现在的聊天记录跑了个词云出来",
    "url": "https://www.v2ex.com/t/999939",
    "summary": "Dogergo: <p>得益于开源项目：</p>\n<pre><code>https://github.com/LC044/WeChatMsg\n</code></pre>\n<p>现在导出微信聊天记录已经是一件相当简单的事情了。但是这个项目跑出的词云好像有点问题，好像聊天记录不完整一样。所以我去找了可以读取 SQLite 的软件，读了他解码出来的数据库文件。</p>\n<p>执行 SQL：</p>\n<pre><code class=\"language-SQL\">-- MicroMsg.db 文件中的 Contact 表存的用户信息，先根据备注查微信 ID\nSELECT UserName FROM Contact WHERE Remark=?\n-- Msg.db 中的 MSG 表存的历史聊天记录\nSELECT StrContent, localId, datetime(CreateTime, \"unixepoch\", \"localtime\") as CreateTime FROM MSG WHERE StrTalker = ? AND Type = 1 AND StrContent NOT like \"%[%\" ORDER by CreateTime asc\n</code></pre>\n<p>然后发现数据是全量的，但是词云不准确，不知道什么原因。迫于不想读源码，直接找了个词云工具，重新生成。</p>\n<p>感谢开源项目：</p>\n<pre><code>https://github.com/fuqiuai/wordCloud\nhttps://github.com/silsuer/wordcloud\n</code></pre>\n<h2>上图</h2>\n<p><img alt=\"1\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://i.imgur.com/V1H7sOD.png\" />\n<img alt=\"2\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://i.imgur.com/GzM7LCV.png\" />\n<img alt=\"3\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://i.imgur.com/qHsczCy.png\" />\n<img alt=\"4\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://i.imgur.com/RFMak6o.png\" />\n<img alt=\"5\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://i.imgur.com/Xy3HlS8.png\" /></p>\n<h2>教程</h2>\n<p><a href=\"https://mp.weixin.qq.com/s/d7K6np7wd3kPLONKikGe5Q\" rel=\"nofollow\">一键提取微信聊天记录，生成 HTML 、Word 文档永久保存，还能生成微信年度聊天报告</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/kS1De6DpNqX_4M_0WTkdhA\" rel=\"nofollow\">微信聊天记录只是备份就太无聊了，一键生成属于自己的词云图，让我们玩点有意思的</a></p>\n<h2>注意事项</h2>\n<p>所用到的工具被我放在公众号里了，如果有兄弟感觉被冒犯，那对此我感到抱歉，请联系站长帮我移动到推广节点。</p>",
    "publish_time": "2023-12-13 10:28:04",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "程序员如何从公司上班转型",
    "url": "https://www.v2ex.com/t/1000000",
    "summary": "toubi: <p>程序员如何从公司上班转型<br />\n环境不好，裁的比较多，感觉纯靠在公司上班哪天就要被裁掉<br />\n年龄也上来了，要提前考虑后面的出路了</p>",
    "publish_time": "2023-12-13 13:25:31",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  }
]