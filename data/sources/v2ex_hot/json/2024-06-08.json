[
  {
    "title": "ThinkPad X1 carbon 值得入手吗？想入手一款轻薄本出差+日常办公",
    "url": "https://www.v2ex.com/t/1047871",
    "summary": "FishStars: <p>已经很久没有使用 win 了，网上对 X1 褒贬不一，不太懂怎么选择。\n备注：因为时不时需要 U 盘读写，工作环境也不太好，所以 mac air 就排除了。总量+性能都兼顾的情况下，大佬们有啥推荐不（价格 5K-10K ）</p>",
    "publish_time": "2024-06-08 08:55:27",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "观《媳妇坐月子。。。。》有感，我敢说 95%的烟鬼不在乎别人感受",
    "url": "https://www.v2ex.com/t/1047883",
    "summary": "lfitzgerald: <p>在厕所抽烟，在电梯抽烟，在阳台抽烟把烟头往下丢\n没有常识</p>",
    "publish_time": "2024-06-08 10:27:45",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "支付宝支持 iPhone NFC 了",
    "url": "https://www.v2ex.com/t/1047855",
    "summary": "imTerry: <a href=\"https://i.imgur.com/9ycQ7bu\" rel=\"nofollow noopener\" target=\"_blank\">https://i.imgur.com/9ycQ7bu</a><br />首批城市好像好像只有上海，还集中在一个商场内。实现方式需要解锁 iPhone 状态才可以刷支付宝的专门的 NFC 设备。<br />看来支付宝也认识到了 NFC 的重要性。",
    "publish_time": "2024-06-08 00:57:29",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "各位使用自建节点的朋友都是用的什么内核和协议？",
    "url": "https://www.v2ex.com/t/1047885",
    "summary": "yoa1q7y: <p>自建的优势就是自由度很高，有了机器 + 域名 + 证书，各种内核和协议可以随便搭建折腾</p>\n<p>目前比较主流的内核有：</p>\n<ul>\n<li>Xray</li>\n<li>sing-box</li>\n<li>Clash</li>\n<li>mihomo</li>\n<li>...</li>\n</ul>\n<p>主流的协议有：</p>\n<ul>\n<li>Shadowsocks</li>\n<li>VMess</li>\n<li>VLESS</li>\n<li>Trojan</li>\n<li>Hysteria</li>\n<li>Hysteria2</li>\n<li>...</li>\n</ul>\n<p>用了很久的 VLESS-TCP-TLS-WS ，感觉兼容性和安全性相对好一些，也用过一段时间的 VLESS-TCP-XTLS-Vision-REALITY ，不过有些客户端不支持</p>\n<p>不知道各位都用的啥，选择的理由是什么</p>",
    "publish_time": "2024-06-08 10:45:28",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "Mac 显示器求推荐",
    "url": "https://www.v2ex.com/t/1047890",
    "summary": "AsianChampion: 618 到了，想给 14 寸 Mbp 加个显示器，技术日新月异，也不想一步到位，2000 以内求显示器推荐。如果有性价比很好的，也可以超点预算。目前看下来有几个选项:<br /><br />1.优派 23.8 英寸 4K 超清 IPS HDR400 TypeC96W 10bit 旋转升降 微边 广色域 电脑显示器 24 VG2481-4K<br /><a href=\"https://item.jd.com/100052760164.html\" rel=\"nofollow noopener\" target=\"_blank\">https://item.jd.com/100052760164.html</a><br /><br />2.LG 27 英寸 4K HDR400 IPS Type-C 90W 反向充电 满血版 27UP850N<br /><a href=\"https://item.jd.com/100022124835.html\" rel=\"nofollow noopener\" target=\"_blank\">https://item.jd.com/100022124835.html</a><br /><br />3.小米 Redmi 27 英寸显示器 4K 超清 100%sRGB HDR400 Type-C 反向充电<br /><a href=\"https://item.jd.com/100024459181.html\" rel=\"nofollow noopener\" target=\"_blank\">https://item.jd.com/100024459181.html</a><br /><br />听说 24 寸的 4k 比 27 寸的 4k 更适合 mac? 不知道实际使用体验如何。",
    "publish_time": "2024-06-08 11:14:04",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "自建 Docker Hub 镜像服务",
    "url": "https://www.v2ex.com/t/1047891",
    "summary": "marquina: <p>原文连接：<a href=\"https://www.yooo.ltd/2024/06/08/self-host-docker-hub-mirror/\" rel=\"nofollow\">自建 Docker Hub 镜像服务 - OrangeWolf 的博客</a></p>\n<hr />\n<h1>1. 前言</h1>\n<p><img alt=\"\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://picutres-1251933829.cos.ap-beijing.myqcloud.com//picgo/image-20240608093740935.png\" /></p>\n<p>最近在某些神秘力量的影响下，SJTUG/USTC 等知名 Docker Hub 镜像站陆续停止服务。</p>\n<p>文本使用<a href=\"https://distribution.github.io/distribution\" rel=\"nofollow\">CNCF Distribution</a>的 registry 项目，只需要运行一个 Docker 容器，就可以自建 Docker Hub 镜像服务。</p>\n<h1>2. 所需条件</h1>\n<ul>\n<li>可运行 Docker 容器的服务器</li>\n<li>可以访问 <a href=\"http://docker.io/\" rel=\"nofollow\">docker.io</a> 的 HTTP 代理（如果服务器无法直接访问的话）</li>\n</ul>\n<h1>3. 编写 registry 配置文件</h1>\n<p>下面是笔者的 registry 配置文件，设置 Docker Hub 镜像的核心配置是<code>proxy</code>：</p>\n<pre><code class=\"language-yaml\">version: 0.1\nlog:\n  fields:\n    service: registry\nstorage:\n  cache:\n    blobdescriptor: inmemory\n  filesystem:\n    rootdirectory: /var/lib/registry\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options: [nosniff]\nhealth:\n  storagedriver:\n    enabled: true\n    interval: 10s\n    threshold: 3\nproxy: # 关键镜像仓库配置\n  remoteurl: https://registry-1.docker.io\n  ttl: 168h\n</code></pre>\n<h1>4. 生成 SSL 证书</h1>\n<p>registry 默认使用 HTTP 协议对外提供服务，使用 HTTPS 更安全&amp;更通用。笔者生成自签名证书的命令如下：</p>\n<pre><code class=\"language-shell\">openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 \\\n  -nodes -keyout example.com.key -out example.com.crt -subj \"/CN=example.com\" \\\n  -addext \"subjectAltName=DNS:example.com,DNS:*.example.com,IP:100.x.x.x,IP:192.168.1.30\"\n</code></pre>\n<h1>5. 启动 registry 服务</h1>\n<p>准备好 registry 的存储目录，放入上一步生成的证书文件。然后编写如下 docker-compose 文件：</p>\n<pre><code class=\"language-yaml\">version: '3.1'\nservices:\n  registry:\n    image: registry:2\n    network_mode: \"host\"\n    environment:\n      REGISTRY_HTTP_ADDR: \"0.0.0.0:5000\"\n      REGISTRY_HTTP_TLS_KEY: \"/var/lib/registry/example.com.key\"\n      REGISTRY_HTTP_TLS_CERTIFICATE: \"/var/lib/registry/example.com.crt\"\n      HTTPS_PROXY: \"{HTTP 代理地址}\"\n    restart: always\n    container_name: registry\n    volumes:\n      - \"/{你的路径}/registry:/var/lib/registry\"\n      - \"/{你的路径}/registry_config.yml:/etc/docker/registry/config.yml\"\n</code></pre>\n<p>用 docker-compose 运行容器即可启动服务：</p>\n<pre><code class=\"language-shell\">docker-compose -f registry.yml up -d\n</code></pre>\n<p>此时 registry 会在笔者的服务器上，也就是<code>https://192.168.1.30:5000</code>提供服务。</p>\n<h1>6. 客户端使用</h1>\n<h2>6.1 信任 SSL 证书</h2>\n<p>由于 registry 使用的是自签名 SSL 证书，客户端要想成功拉取镜像需要先信任该证书。方式有两种，第一种是将证书加入客户端的的系统信任列表（推荐）：</p>\n<pre><code class=\"language-shell\">sudo cp /${你的路径}/example.com.crt /usr/share/ca-certificates\nsudo dpkg-reconfigure ca-certificates\n</code></pre>\n<p>然后重启 Docker/K3S 等需要拉取镜像的服务；第二种是让 Docker 拉取镜像时跳过证书校验：</p>\n<pre><code class=\"language-shell\">sudo vim /etc/docker/daemon.json\n</code></pre>\n<pre><code class=\"language-json\">\n{\n  ...\n  \"insecure-registries\": [\"192.168.1.30:5000\"]\n  ...\n}\n</code></pre>\n<p>然后重启 docker 服务。</p>\n<p>信任完证书后，此时就可以拉取 Docker Hub 上的镜像看到效果了：</p>\n<pre><code class=\"language-shell\">docker pull 192.168.1.30:5000/grafana/grafana:main\n</code></pre>\n<h2>6.2 设置 Docker 镜像源</h2>\n<p>同样是编辑<code>/etc/docker/daemon.json</code>，将上述 registry 服务作为 Docker 镜像源：</p>\n<pre><code class=\"language-json\">{\n  ...\n  \"registry-mirrors\": [\n    \"https://192.168.1.30:5000\"\n  ]\n  ...\n}\n</code></pre>\n<p>然后重启 Docker 服务，此时就可以快速拉取镜像了</p>\n<pre><code class=\"language-shell\">docker pull grafana/grafana:main\n</code></pre>\n<p>enjoy!</p>",
    "publish_time": "2024-06-08 11:25:56",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  }
]