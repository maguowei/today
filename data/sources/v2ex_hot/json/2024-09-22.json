[
  {
    "title": "1.1.1.1 带着新协议回归了， WARP 又复活了",
    "url": "https://www.v2ex.com/t/1074753",
    "summary": "Lotii: 更新了 1.1.1.1 版本，新协议可以连上 WARP 了<br /><br />在设置-高级-连接选项-Tunnel Protocol 里选择 MASQUE 即可<br /><br />测试了下 WARP 可以直连了，先感谢一下大善人<br /><br />但是，能用多久？",
    "publish_time": "2024-09-22 08:42:39",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "固定宽带 按流量计费 最公平",
    "url": "https://www.v2ex.com/t/1074762",
    "summary": "youx: 固定宽带 按流量计费 最公平<br /><br />下行<br />100M 每 TB  5 元，结转 1 个月<br />300M 每 TB 10 元，结转 1 个月<br />500M 每 TB 15 元，结转 1 个月<br />1G 每 TB 20 元，结转 1 个月<br />2G 每 TB 30 元，结转 2 个月<br />3G 每 TB 40 元，结转 3 个月<br />4G 每 TB 50 元，结转 4 个月<br />5G 每 TB 60 元，结转 5 个月<br /><br />上行<br /> 10M 每 TB  5 元，结转 1 个月<br /> 30M 每 TB 10 元，结转 1 个月<br /> 50M 每 TB 15 元，结转 1 个月<br />100M 每 TB 20 元，结转 1 个月<br />200M 每 TB 30 元，结转 2 个月<br />300M 每 TB 40 元，结转 3 个月<br />400M 每 TB 50 元，结转 4 个月<br />500M 每 TB 60 元，结转 5 个月",
    "publish_time": "2024-09-22 10:15:33",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "新西兰 IT 工作行情如何，留学移民成功率大吗？",
    "url": "https://www.v2ex.com/t/1074768",
    "summary": "zanderzhan: <p>打着移民的目的，申请了新西兰的 IT 硕士，怀卡托大学已经下了 offer ，学费巨贵，只学费这一 part 就要接近 30w 人民币。\n我已经毕业 8 年了，专业网络工程，想着如果按照移民规划，毕业后找到认证雇主工作，满一年可以申请 pr 。缺点是太贵，并且都说那边工作不好找。\n所以现在有点犹疑，大佬们见多识广，觉得这一条路可走吗？</p>",
    "publish_time": "2024-09-22 10:51:34",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "局域网内优雅的访问家庭内网服务",
    "url": "https://www.v2ex.com/t/1074771",
    "summary": "dhuzbb: <h1>局域网内优雅的访问家庭内网服务</h1>\n<h2>前情提要</h2>\n<p><a href=\"https://www.v2ex.com/t/1057803\" rel=\"nofollow\">《低成本家庭万兆内网搭建指北》</a><br />\n<a href=\"https://www.v2ex.com/t/1074592\" rel=\"nofollow\">《个人家庭网络布局分享》</a><br />\n<a href=\"https://www.v2ex.com/t/1074688\" rel=\"nofollow\">《家庭内网服务分享》</a> </p>\n<h2>缘起</h2>\n<p>自从有了 NAS ，烦恼似乎开始变得多了。</p>\n<p>当家庭部署的内网服务多了之后，例如笔记、DNS 、影音、Wiki 等等各种各样的服务，记忆和管理这些内网服务就成了一个问题。</p>\n<p>直接在浏览器中输入内网服务的 IP:端口号，又面临记忆的负担，似乎不是一个优雅的方案。</p>\n<p>如何在局域网优雅的访问这些内网服务，减少心智负担成了一个不得不解决的问题。</p>\n<ul>\n<li>恰好域名可以用来替代 IP+端口号，方便记忆。</li>\n<li>服务较多，个人服务导航页可以方便的集中化管理。</li>\n</ul>\n<p>2 者结合可以完美的解决上面的问题，下面开始详细描述如何实现上面的需求。</p>\n<h2>子域名规划</h2>\n<p>根据内网服务的实际用途规划子域名如下，大家可以根据自己的实际情况自由发挥。</p>\n<table>\n<thead>\n<tr>\n<th>域名</th>\n<th>后端服务</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://binhome.cn/\" rel=\"nofollow\">https://binhome.cn</a></td>\n<td><a href=\"http://192.168.0.4:3002/\" rel=\"nofollow\">http://192.168.0.4:3002</a></td>\n<td>极空间 Docker 部署的 Sun-Panel 导航页服务</td>\n</tr>\n<tr>\n<td><a href=\"https://note.binhome.cn/\" rel=\"nofollow\">https://note.binhome.cn</a></td>\n<td><a href=\"http://192.168.0.4:28080/\" rel=\"nofollow\">http://192.168.0.4:28080</a></td>\n<td>极空间 Docker 部署的笔记服务 Flatnotes</td>\n</tr>\n<tr>\n<td><a href=\"https://book.binhome.cn/\" rel=\"nofollow\">https://book.binhome.cn</a></td>\n<td><a href=\"http://192.168.0.4:8083/\" rel=\"nofollow\">http://192.168.0.4:8083</a></td>\n<td>极空间 Docker 部署的阅读服务 Calibre-Web</td>\n</tr>\n<tr>\n<td><a href=\"https://dns.binhome.cn/\" rel=\"nofollow\">https://dns.binhome.cn</a></td>\n<td><a href=\"http://192.168.0.10/\" rel=\"nofollow\">http://192.168.0.10:80</a></td>\n<td>PVE CT 容器部署的 DNS 服务 Adguard Home</td>\n</tr>\n<tr>\n<td><a href=\"https://git.binhome.cn/\" rel=\"nofollow\">https://git.binhome.cn</a></td>\n<td><a href=\"http://192.168.0.88/\" rel=\"nofollow\">http://192.168.0.88:80</a></td>\n<td>PVE CT 容器部署的 GitLab 服务</td>\n</tr>\n<tr>\n<td>以下省略 20 条</td>\n<td>以下省略 20 条</td>\n<td>以下省略 20 条</td>\n</tr>\n</tbody></table><p>想要实现的需求是：在局域网内部浏览器中输入 <code><a href=\"https://note.binhome.cn/\" rel=\"nofollow\">https://note.binhome.cn</a></code> 这样的子域名，就能访问到局域网内部部署的笔记服务 <code>http://192.168.0.4:28080</code>。</p>\n<h2>反向代理</h2>\n<p>上面子域名规划中的不同子域名映射到不同的后端 IP:端口，其实就是反向代理 Nginx 等服务需要做的事情。</p>\n<p><strong>由于 Nginx 需要绑定 80 和 443 端口，推荐使用 PVE 的 CT 容器来部署 Nginx Proxy Manager 。</strong></p>\n<p>Nginx Proxy Manager 非常的简单易用。无需编写复杂的 Nginx 配置就可以设置域名到后端服务的映射关系，非常适合小白用户。</p>\n<p><img alt=\"NPM\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://img.binhome.cn/access_local_service/npm.png\" /></p>\n<p>除了反向代理之外，NPM 还支持泛域名 SSL 证书的申请，简单易操作。前提是事先购买域名并设置好 DNS 解析到主路由的公网 IP ，如果不介意浏览器中的红色安全提醒，也可以忽略。</p>\n<p><img alt=\"NPM SSL\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://img.binhome.cn/home_service/npm_ssl.png\" /></p>\n<h2>内网 DNS 重写</h2>\n<p>完成了反向代理之后，还需要做的一步操作就是将所有 <code>*.binhome.cn</code> 的请求都指向 Nginx Proxy Manager 的机器 IP （假如是 192.168.0.8 ）。</p>\n<p>修改主路由或旁路由的 Hosts 文件可以简单的达到目的：</p>\n<pre><code>192.168.0.8 binhome.cn\n192.168.0.8 note.binhome.cn\n192.168.0.8 book.binhome.cn\n192.168.0.8 dns.binhome.cn\n192.168.0.8 git.binhome.cn\n以下省略 20 条...\n</code></pre>\n<p>上面的做法不是不行，但还是太繁琐了，需要 一条一条的添加，实现上不够优雅。能不能只需要 1 条记录就实现呢？类似下面这种：</p>\n<pre><code>192.168.0.8 *.binhome.cn\n</code></pre>\n<p>DNS 重写可以完美实现上面的诉求。</p>\n<p>AdGuard Home 这款 DNS 服务支持泛域名重写功能。</p>\n<p><img alt=\"DNS Rewrite\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://img.binhome.cn/home_service/dns_rewrite.png\" /></p>\n<p>如果使用的是 OpenWRT 内置的 DNS 服务 Dnsmasq ，也能非常简单的设置泛域名重写功能。</p>\n<pre><code class=\"language-java\"># 编辑 dnsmasq 的配置文件\nvim /etc/dnsmasq.conf\n\n# 在最后添加一行以下配置\naddress = /binhome.cn/192.168.0.8\n\n# 重启 dnsmasq 服务\nservice dnsmasq restart\n</code></pre>\n<p>完成了以上设置，这样在局域网环境下，所有访问 <code>*.binhome.cn</code> 的请求都会解析到内网的 NPM 机器 192.168.0.8 上。</p>\n<h2>原理解析</h2>\n<p>下面针对上面所讲的内容进行原理解析：</p>\n<pre><code class=\"language-java\">https://note.binhome.cn -&gt; 192.168.0.2(内网 DNS 服务器) -&gt; 192.168.0.8(NPM) -&gt; http://192.168.0.4:28080\n</code></pre>\n<p>局域网环境下整个访问流程如下:</p>\n<ul>\n<li>访问 <code><a href=\"https://note.binhome.cn/\" rel=\"nofollow\">https://note.binhome.cn</a></code> 时，会先请求内网的 DNS 服务器 (192.168.0.2) 进行内网 DNS 解析</li>\n<li>内网 DNS 服务器会将所有 <code>*.binhome.cn</code> 的请求都指向 NPM 的机器 IP （ 192.168.0.8 ）</li>\n<li>NPM 相当于 Nginx ，会在内部将请求根据域名匹配到真正的后端服务 <code>http://192.168.0.4:28080</code></li>\n</ul>\n<p>由此，就完成了请求不同的子域名，实际请求的是不同后端服务的需求。</p>\n<h2>个人服务导航页</h2>\n<p>集中化管理个人内网服务就需要导航页服务来实现了，推荐使用 Sun-Panel 。</p>\n<p>之前的文章有介绍过 Sun-Panel 是一个漂亮的服务器、NAS 导航面板、Homepage 、浏览器首页。</p>\n<pre><code class=\"language-curl\">Github: https://github.com/hslr-s/sun-panel\n</code></pre>\n<p>部署效果如下：</p>\n<p><img alt=\"sunpanel\" class=\"embedded_image\" rel=\"noreferrer\" src=\"https://img.binhome.cn/home_service/sunpanel.png\" /></p>\n<p>类似比较出名的个人导航页还有 Heimdall 。( <a href=\"https://github.com/linuxserver/Heimdall\" rel=\"nofollow\">https://github.com/linuxserver/Heimdall</a>) </p>\n<p>Sun-Panel 支持局域网和互联网 2 种模式，UI 更加简洁美观，个人更加倾向于使用 Sun-Panel 。</p>\n<h2>后续</h2>\n<p>完成上述操作之后，在局域网环境下，既可以直接在浏览器中输入 <code><a href=\"https://note.binhome.cn/\" rel=\"nofollow\">https://note.binhome.cn</a></code> 这样的子域名来访问家庭内网服务。也可以设置浏览器的主页为个人导航页服务<code><a href=\"https://binhome.cn/\" rel=\"nofollow\">https://binhome.cn</a></code>，一键点击访问对应的内网服务。</p>\n<p>解决完了内网环境下的访问之后，如何在外优雅安全的访问局域网内的服务呢？</p>\n<p>详见后续系列文章：《在外优雅访问家庭内网服务的姿势》。</p>",
    "publish_time": "2024-09-22 10:57:31",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "年龄 35， gap 一年，二本，没在大厂待过，在深圳还能找得到开发的工作吗？",
    "url": "https://www.v2ex.com/t/1074780",
    "summary": "Dottt:",
    "publish_time": "2024-09-22 11:56:21",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  },
  {
    "title": "电传动自行车的可行性",
    "url": "https://www.v2ex.com/t/1074808",
    "summary": "bobguo: <p>国内电动车普及率越来越高，并且自行车这块没太大的市场，来来去去就那么些配件有点无聊，萌生了电传动自行车的想法</p>\n<ol>\n<li>\n<p>这台自行车没有电池，顶多有一些大电容作为缓冲</p>\n</li>\n<li>\n<p>这台自行车脚踏和前后轮是解耦的，只是驱动一个发电机</p>\n</li>\n<li>\n<p>发电机通过电线驱动前轮或者后轮的轮毂电机</p>\n</li>\n</ol>\n<p>这样就完全绕开了链条传动和外置变速器，车速、扭矩 和 踏频 完全解耦，脚踏只负责功率</p>\n<p>这样基本用的都是电动车的配件，也能充分享受电动车市场的规模效应</p>\n<p>这样的车，可以通过电机的控制逻辑，做一个低速高扭，高速低扭的线性逻辑，实现电子化无极变速的 CVT 效果</p>\n<p>目前和一些人讨论，主要是脚踏发电效率民用的可能只有 80%，轮毂电机低速效率也可能只有 80%，这套基于电的传动系统最终轮端效率只有 60%</p>\n<p>但是是否这个效率可以为这样的场景做一些定制化设计提升？由于不是这个专业的，也不知道去哪找人聊，发到这里蹲蹲专业人士的建议</p>",
    "publish_time": "2024-09-22 15:48:26",
    "source": {
      "name": "v2ex_hot",
      "desc": "v2ex 最热主题",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/v2ex.png"
    }
  }
]