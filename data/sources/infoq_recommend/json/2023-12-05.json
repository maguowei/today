[
  {
    "title": "Visual Studio 17.9 Preview 1发布，带来新UI、调试器增强、AI功能等",
    "url": "https://www.infoq.cn/article/QVZ2huq5kLiK7tEEJTRq",
    "summary": "<p>微软发布了<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">Visual Studio 17.9的首个预览版</a>\"。该预览版带来了一系列旨在增强开发者生产力的改进和功能，包括GitHub Copilot等一些AI功能、对虚幻引擎项目的IntelliSense支持、内存管理和调试改进，并且这个预览版拥有全新的界面设计。</p><p></p><p>关于该预览版在生产力方面的提升，开发者可以使用<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">生成的git提交消息</a>\"功能。在源码提交的文件修改分析中，Copilot会检查变更，提供摘要，并详细说明每一个修改。</p><p></p><p>开发者可以选择插入或丢弃AI建议。为了测试这个功能，开发者需要一个已激活的GitHub Copilot订阅和预览版的GitHub Copilot Chat Extension。</p><p></p><p>内存泄漏是一件很危险的事，该预览版的Manage Memory Insights选项卡为此提供了额外的信息。这些功能将帮助开发者检测<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#event-handler-leaks-insights?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">事件处理器泄漏</a>\"。当事件发布者的生命周期长于事件订阅者时，订阅者会继续留存在内存中但没有被引用。</p><p></p><p>该预览版的其他生产力功能与<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#non-modal-debug-visualizers?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">调试可视化器</a>\"有关，现在不再是模态的，更易于与编辑器发生交互。同时，<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#instrumentation-tool-start-with-collection-pause-option?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">Instrumentation工具引入了*启动-暂停*</a>\"选项来为应用程序进行性能分析。这使得用户能够在分析器的控制下启动应用程序，而不会立即收集数据。</p><p></p><p><a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#include-references-diagnostics?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">*#include*引用诊断</a>\"特性使得用户能够可视化代码中每个#include指令的频率。用户可以通过点击指令顶部显示的引用计数来查看特定引用。在选项卡方面，开发者可以通过滚动鼠标轮在Visual Studio的文档窗口中<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#switch-between-single-and-multiple-rows-in-the-document-well?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">切换单个和多个选项卡</a>\"。</p><p></p><p>C++游戏开发者可以在Visual Studio中体验新功能，比如<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#improved-blueprint-experience-in-visual-studio?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">改进的Blueprint体验</a>\"。据报道，开发者现在无需安装Visual Studio Integration Tool插件就可以查看Blueprint引用和资源属性。</p><p></p><p>在该预览版中，Visual Studio中的<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#improved-intellisense-for-unreal-engine-projects?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">虚幻引擎IntelliSense</a>\"现在更加一致和准确。对UHT生成文件的刷新得到了优化，减少了不必要的错误显示。此外，开发者现在还可以指定<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#specify-custom-cmake-executable?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">自定义CMake可执行文件</a>\"。</p><p></p><p>在最近的.NET 8更新中，调试器会在调试过程中自动<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#automatic-deoptimization?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">优化</a>\"发布和外部代码，增强了调试过程。<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#razor-snippets?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">Razor文件中的HTML片段</a>\" (.razor)促进了常见模式的快速编码。对Razor文件<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#multi-tfm-support-for-razor-files?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">多目标框架（TFM）</a>\"的支持允许有针对性地包含代码。</p><p></p><p>此外，.NET 8中的Blazor项目现在提供了<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#blazor-scaffolding-for-net-8-projects?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">脚手架支持</a>\"，包括使用Entity Framework进行CRUD操作，通过解决方案资源管理器中的右键单击选项简化开发。</p><p></p><p>最后，该预览版的另一主要更新是<a href=\"https://devblogs.microsoft.com/visualstudio/the-visual-studio-ui-refresh-preview-is-here/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">Visual Studio IDE的UI Refresh</a>\"。开发者可以在Visual Studio的主菜单中进入Tools &gt; Manage Preview Features，启用Experimental control styles选项来激活UI Refresh。启用此功能后，重新启动Visual Studio将应用UI Refresh。</p><p></p><p>据报道，该预览版的基本用户体验与之前保持一致，主要目标集中在Fluent设计语言，强调将协调性、可访问性和生产力作为UI Refresh的主要支柱。</p><p></p><p>Visual Studio高级产品经理<a href=\"https://devblogs.microsoft.com/visualstudio/author/danteg/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">Dante Gagne</a>\"表示：</p><p></p><p></p><blockquote>在这一版的UI Refresh中，用户将看到我们针对可点击目标空间和减少视觉混乱等可访问性要求的反馈所做出的平衡。这意味着一种更具包容性的体验，有助于让每个人更高效、更舒适地工作，同时最大化代码空间，尊重用户为我们提供的反馈。</blockquote><p></p><p></p><p>微软和开发团队鼓励用户<a href=\"https://devblogs.microsoft.com/visualstudio/introducing-visual-studio-17-9-preview-1-is-here/#thank-you?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">提供反馈</a>\"和<a href=\"https://developercommunity.visualstudio.com/VisualStudio/suggest?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">分享建议</a>\"，体现了他们致力于不断增强Visual Studio体验的承诺。</p><p></p><p>最后，有兴趣了解Visual Studio的这个预览版和其他版本的开发者，可以查看详细的<a href=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes-preview?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDE3NDA4MjIsImZpbGVHVUlEIjoiMGwzTk14Uk1ReUlhVkJBUiIsImlhdCI6MTcwMTc0MDUyMiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.x8RO4Pxv00PJj3wu_yM250WM-J5yC_oBEXKpyZAPSTc\">Visual Studio 2022 IDE版本说明</a>\"，了解其他的更新和新功能。</p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/11/vs2022-v17-9-preview-1/\">https://www.infoq.com/news/2023/11/vs2022-v17-9-preview-1/</a>\"</p>",
    "publish_time": "2023-12-05 09:45:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "世界开发者说：当 AI 大咖遇上云计算“春晚”，会碰撞出怎样的火花？",
    "url": "https://www.infoq.cn/article/MNwwBacJ5Xle6lQzAavD",
    "summary": "<p>在 re:Invent 现场专访亚马逊云科技机器学习 Hero Cyrus Wong，数据专家、社区Hero、亚马逊云认证培训师，多重身份的他，在 2023 re:Invent 有什么收获？一起听听看！</p>",
    "publish_time": "2023-12-05 10:09:09",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "世界开发者说：为什么世界各地的开发者都爱 DeepRacer?",
    "url": "https://www.infoq.cn/article/7fY7biiRouR3mC5B8zpg",
    "summary": "<p>2023 re:Invent DeepRacer 冠军赛现场采访入围选手，看看他们如何玩转DeepRacer、听听他们如何通过比赛学习 AI 技术~</p>",
    "publish_time": "2023-12-05 10:09:13",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "直击现场 DAY5丨re:Invent 最后一天，尽情享受游戏的乐趣！",
    "url": "https://www.infoq.cn/article/tjZIzhReqxARoeSRPPVm",
    "summary": "<p>2023 re:Invent直击现场 DAY5：最后一天，开发者们同样步履不停，享受现场~</p>",
    "publish_time": "2023-12-05 10:09:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "直击现场 DAY4 丨开发者们都在沉浸式体验 re:Invent 现场的黑科技！",
    "url": "https://www.infoq.cn/article/2LwWPchwt9DIjw4YUa5m",
    "summary": "<p>2023 re:Invent直击现场 DAY4：2023 年的 re:Invent 现场，除了是技术盛宴，更是娱乐之城~</p>",
    "publish_time": "2023-12-05 10:09:16",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "有理有据：数据库选择集中式还是分布式",
    "url": "https://www.infoq.cn/article/i17Kob7yakR6LyxtqAa9",
    "summary": "<p></p><blockquote>OLTP类型的业务系统采用集中式数据库还是分布式数据库是在做国产数据库改造中经常被问到的问题，无论是对技术架构发展演变，还是对现有业务长期发展提供必要的支撑，这个问题都具有讨论意义。在分布式大行其道的背景下，似乎任何架构都需要分布式赋能。现实真的是这样吗？下面将全面地进行分析与阐述。</blockquote><p></p><p></p><p></p><h2>01 使用现状分析</h2><p></p><p></p><p>国产数据库厂商2022年就已经达到了200多家，传统集中式数据库以人大金仓、达梦为主，也有像polarDB这样的新兴数据库，分布式数据库有GaussDB、Kingwow、TDSQL、GoldenDB和OceanBase等，其实大部分这类的数据库都具备集中式和分布式两种部署模式，也就是你买分布式数据库的钱也可以用于集中式部署，可以满足你不同的业务需求。</p><p></p><p>这里有一点要注意，有的分布式数据库的厂商采用集中式部署，应用依然需要连接计算节点。通过计算节点（CN），去连接下面的数据节点，这可能是出于统一架构的考虑，也是出于计算节点在数据库发生主备切换时可以感知自动切换、对应用透明的考虑。但这样无意中增加了一层解析，会对性能产生一定的损耗。有的数据库厂商是通过自身提供的JDBC/ODBC驱动或VIP等方式直连数据库，从而避免了类似问题的出现。</p><p></p><p>从技术架构看，金融行业使用的数据库仍以集中式为主，分布式数据库在中大型金融机构形成了有力补充。《金融业数据库供应链安全发展报告(2022)》调研数据显示，集中式数据库在金融业总体占比仍高达 89%，其中银行80%，证券和保险业占比均超过 90%，集中式数据库在金融科技数字化进程中扮演重要角色。金融行业分布式数据库总体占比达到7%，银行业超过了17%，证券业和保险业相对较低。也就是说我们大部分业务采用集中式数据库是完全能够满足的。</p><p></p><p></p><h2>02 真的需要分布式吗</h2><p></p><p></p><p>集中式数据库由于只有一个主数据节点，天然具备架构简单、运维方便、兼容性好和性价比高等优势。</p><p>但也存在无法突破单机硬件限制、无法横向扩容、存在性能和容量瓶颈的问题。</p><p></p><p>所以当集中式数据库无法满足我们的性能和容量要求时，分布式就给我们提供了一个很好的技术手段。当我们打算选择分布式来解决集中式的问题的时候，建议大家先做如下的提问再做考虑：</p><p></p><p>1. 是否可以通过优化集中式数据库自身来解决问题，而不做大的架构改动，如优化参数、优化SQL语句，优化业务逻辑等方式。‍‍‍‍‍‍‍‍‍</p><p></p><p>2. 是否可以通过增加主机资源配置解决问题，如采用增加CPU和内存大小，或原来采用虚拟机而改用物理机等纵向扩展的方式解决。</p><p></p><p>3. 是否可以通过存算分离的方式解决问题，如果只是单机的容量无法满足要求，可以考虑外挂存储或采用存算分离架构，解决单机磁盘容量受限的问题。</p><p></p><p>4. 是否可以通过应用层解决，如改变业务架构，采用微服务或单元化架构，也就是在应用层实现数据拆分、分布式事务和水平扩展等能力，而数据库依然采用集中式。这种方式对开发人员的要求高，业务改造成本大，需要综合考虑。</p><p></p><p>5. 是否充分了解分布式架构的优缺点，是否做好分布式数据库的运维与备份等相关准备工作，是否充分考虑自己的业务必须要通过分布式数据库来解决。</p><p></p><p></p><h2>03 何时使用分布式</h2><p></p><p></p><p>早期有2000w行的表需要拆分的说法，这个主要是针对MySQL数据库。当OLTP类型的表超过2000W行，通过公式计算B+tree叶子层数会增加到4层，从而增加IO的读取次数。但随着硬件的升级或缓存技术的实现，可以基本忽略IO的影响。因此目前比较常见地通过TPS或QPS指标来决定是否需要做分布式改造，如单点TPS瓶颈达到4000，或QPS达到8W，或数据容量达到2TB后。一般情况下需要做横向扩容解决性能或容量瓶颈，相对来说比较合理，但这里没有一个固定公式，主要还是要结合自己的业务场景来做判断。也要考虑未来业务增长的需求，如是否满足业务3-5年的增长需求，做好峰值预测，提前做好规划，避免做二次改造。同时参考上面提到的几个问题，是否必须通过分布式数据库来解决。</p><p></p><p></p><h4>实验数据一（找拐点）</h4><p></p><p></p><p>硬件资源为基于ARM架构的鲲鹏虚拟机环境，具体配置为16C64G，中标麒麟v10操作系统，普通ssd磁盘。</p><p></p><p>下图为某国产分布式数据库测试结果，分布式为4分片，单位:秒。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a4/a4acc471a2e7387aae1b492c77af76d0.png\" /></p><p></p><p>对于单点基于索引的查询基本没有差距，对于全表扫描和双表关联（关联表为统一为200w行且都基于分片键作为关联条件）都在500w数据量的时候就已经有5倍左右的明显提升，这个弯儿说实话拐的有点早，其实还是要结合自己的业务场景验证会更加准确。</p><p></p><p>对于500w以下数据量的，大家可以结合业务自行测试。当然也可能在300w或者更低的时候出现拐点，这里也希望大家能给出更多的测试结果。实验数据受多种因素影响可能存在一定偏差，还请指正，并非常期望大家能将自己的测试结果放到评论区，大家一起验证分布式与集中式的性能拐点，这样可以提供一个更加准确的数据基础为选型做参考。</p><p></p><p></p><h4>实验数据二</h4><p></p><p></p><p>下图是某厂商基于sysbench工具压测的结果：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/36/362efcbf70749e70ea5bcae7e55fc3c6.png\" /></p><p></p><p>可以看到集中式数据库在中等规格配置下资源使用率达到75%时，所能达到的最大TPS在4595，延迟5ms，并发400。这是一个参考值，也就是上面提到的基本TPS超过5000需要拆分的一个依据。当然如果你的资源够大，这个值可以再大。不过最准确地，需要我们通过真实环境压力测试来验证我们的TPS值进行判断。</p><p></p><h2>04 如何用好分布式</h2><p></p><p></p><p>顾名思义，分布式，多个人干活，具备高可用、高扩展、高性能和弹性扩缩容能力等优势。</p><p></p><p>由于数据节点数量和数据库组件的增加，必然会出现架构复杂、运维复杂和成本高等问题，同时大部分分布式数据库不支持存储过程、自定义函数等特殊对象。</p><p></p><p>分布式是一把双刃剑，我们如何用好且不受伤很重要。</p><p></p><p></p><h4>1. 分片键的选择</h4><p></p><p></p><p>分片键的选择非常重要，选作分片键的字段取值应该比较离散，以便数据能在各个数据节点上均匀分布。当单个字段无法满足离散条件时，可以考虑使用多个字段一起作为分片键。一般情况下，可以考虑选择表的主键作为分片键。例如，在人员信息表中选择证件号码作为分布键。且大部分分布式数据库都不支持或不建议对分片键的修改。</p><p></p><p></p><h4>2. 分布方式的选择</h4><p></p><p></p><p>常见的选择是hash分布，相对来说分布更加均匀，另外还有range和list等分区，当然我们最终需要结合具体业务场景进行选择。另外需要将一些经常用的配置信息表或关联查询的小表定义成全局表，确保在一个数据节点可以获取到，避免跨节点数据交互。</p><p></p><p></p><h4>3. 规范SQL语句的编写</h4><p></p><p></p><p>应选择分片键作为查询条件，并采用分片键作为多表关联查询条件。如果不采用分片键会出现跨节点数据传输，有的分布式数据库会出现将所有数据汇聚计算节点做汇总关联排序，当数据很大时会瞬间将计算节点资源打满，导致数据库无法对外提供服务。</p><p></p><p></p><h4>4. 规避跨节点数据传输</h4><p></p><p></p><p>如上所说的将查询条件作为分片键就是最大限度地避免跨节点传输，因为跨节点数据传输是基于网络进行的，网络相比较磁盘的传输读写性能存在很大的差距，所以性能会明显下降，甚至会出现结果一直跑不出来的情况。</p><p></p><p></p><h4>5. 规避分布式事务</h4><p></p><p></p><p>分布式事务处理路径长，这个是他的性质决定的，大部分数据库就基于2PC原理实现，因此我们要最大限度地规避分布式事务，一般情况下控制在所有事务的10%以内，过多的分布式事务一定会给我们带来性能影响，也对业务数据的一致性问题带来了挑战。</p><p></p><p></p><h2>05 深入分析：分布式是数据库解决还是应用解决</h2><p></p><p></p><p>分布式的实现可以通过数据库解决（分布式数据库）也可以通过应用解决，大部分开发人员，尤其是传统行业或城商行等金融机构，开发能力比不上大行，人员规模有限，他们更希望数据库做的事情更多一些，比如分布式事务的实现、数据拆分的实现，尽量对开发人员透明。所以他们会直接采用分布式数据库，以单元化架构为例如下图：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4c/4cf5393d97deba4b76cc6557052f7788.png\" /></p><p></p><p>底层采用的分布式数据库的单元化架构</p><p></p><p>但一些重要的业务系统或具备一定开发能力的团队，更多地会考虑在应用层去实现。他们想拿到更多的控制权，如一个分布式事务出现异常，如果在数据库层实现，那么对应开发人员来说是个黑盒，他只能期盼数据库的分布式事务处理能力，他们无法介入。但如果要是在业务层实现，他们可以通过消息队列、TCC和saga等获取的日志信息并做数据补偿机制来做相应的处理。因此他们会在应用层实现分布式，数据库采用集中式的方式，每个数据库存放部分业务数据，以单元化架构为例如下图：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/03/038b53990750a42f88d051ce8566ef48.png\" /></p><p>底层采用的集中式数据库的单元化架构</p><p></p><p>集中式与分布式数据库在实现分布式方式上的区别汇总如下：</p><p></p><p></p><p></p><p>采用集中式数据库，应用层实现分布式对应用的要求比较高，要实现分布式特性，但在数据库层面反而改造的比较少，因为集中式数据库的兼容性要比分布式更好一些。</p><p></p><p>采用分布式数据库，应用不需要实现分布式特性，对应用透明，但分布式数据库对特殊对象，如存储过程、函数等兼容较差，甚至不支持，这就需要应用针对数据库做适配改造。</p><p></p><p></p><p></p><h2>06 小结</h2><p></p><p></p><p>在一次数据库创新的圆桌论坛上，一位同行的老师说集中式数据库就像绵羊，温顺而便于管理，而分布式数据库是一匹野马，放荡不羁难于控制，这让我想起了宋冬野在《董小姐》的歌里唱到的，“爱上一匹野马，可我的家里没有草原，这让我感到绝望...”。分布式数据库这匹野马能够驯服，会让你在大草原上飞奔驰骋，否则就会让你受尽苦难、步履维艰。其实大部分开发人员还是希望数据库做的多一些，开发人员改造少一些，数据库更透明一些，更简单一些，甚至是更智能一些。</p><p></p><p>最后我想说一句，我们国产数据库任重而道远，其实相比较新功能的增加，客户更关心基础功能的改进。如果我们能把数据库核心存储引擎做好，生态做好的话，那么OLTP的数据库我们也不会去深入讨论这个话题。</p><p></p><p>文章如有表达不准确、或不专业的地方还请大家指正，谢谢。</p>",
    "publish_time": "2023-12-05 10:47:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "免费下载！2023 全球金融科技大会 PPT 来啦",
    "url": "https://www.infoq.cn/article/4kCbbGuk6si8fiy8hfqi",
    "summary": "<p>日前，在上海成功举办的<a href=\"https://www.infoq.cn/article/BNiefsWtdjeQmreGkaUI?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">首届 FCon 全球金融科技大会</a>\"，以「科技 + 金融，激发创新力量」为主题，汇聚了来自金融龙头企业的数百名技术高管，掀起一场探讨新时代金融科技未来的高潮。</p><p></p><p>大会覆盖多个专题，既讨论了「金融行业大模型应用」、「创新的金融科技应用」、「数据要素流通与数据合规」等引领行业的前沿议题，也呈现了多个金融数智化建设的最干实践如「银行数智化建设」、「金融实时数据平台建设之路」、「金融安全与风险管控」等等。</p><p></p><p>当中主要亮点包括但不限于：</p><p>大模型为金融带来巨变，探讨大模型在金融行业的落地探索，金融行业因此面临的范式转换；新一代 HTAP 图技术、Web3 在金融行业的最新应用；数据是数字时代的黄金，但流通和合规是其关键。深入了解数据的流动与合规，探索隐私计算在智慧产业的实践应用；DevOps改变金融业态，加速创新与交付，了解大厂的创新实践；在AI时代，如何更高效地使用大模型、大数据等技术能力，让数据更好地服务于金融市场；揭秘金融实时数据平台的优化之道，深度探讨设计理念、技术挑战，解析未来趋势；围绕网络运行安全、用户个人信息保护、关键信息基础设施安全、网络信息安全等方面来展开讨论具体的技术手段；助力银行全面数智化建设，如何让数据资产充分共享、工具平台提升中台能力，AI应用实现数据化归因和自动优化......</p><p></p><p>经征得大会分享嘉宾同意，InfoQ数字化经纬为您奉上以下精彩演讲PPT！</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/96/a6/962290229f467a326fd761222f7290a6.png\" /></p><p></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/36/48/3688c3b9d621db85517ed79817d93348.png\" /></p><p></p><p>点击上方两张海报，扫码关注「InfoQ数字化经纬」公众号、并回复关键词即可获取对应的PPT。深度洞悉科技趋势，助您引领金融创新未来！</p><p></p><p>延展阅读：<a href=\"https://www.infoq.cn/theme/212\">《FCon全球金融科技大会专题报道》</a>\"</p>",
    "publish_time": "2023-12-05 11:13:08",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "字节跳动技术专家田昕晖博士确认出席 QCon 上海，分享解析云原生数仓 ByteHouse 如何构建高性能向量检索技术",
    "url": "https://www.infoq.cn/article/xGT9CxFabIo52wbCfa7j",
    "summary": "<p><a href=\"https://qcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9&amp;utm_term=1205&amp;utm_content=tianxinhui\">QCon 全球软件开发大会</a>\"，将于 12 月在上海召开。字节跳动技术专家田昕晖博士将发表题为《<a href=\"https://qcon.infoq.cn/2023/shanghai/presentation/5622?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9&amp;utm_term=1205&amp;utm_content=tianxinhui\">解析云原生数仓 ByteHouse 如何构建高性能向量检索技术</a>\"》主题分享，探讨火山引擎 ByteHouse 团队基于社区 ClickHouse 进行了技术演进，提出了全新的向量检索功能设计思路，以满足业务对向量检索稳定性与性能方面的需求。</p><p></p><p><a href=\"https://qcon.infoq.cn/2023/shanghai/presentation/5622?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9&amp;utm_term=1205&amp;utm_content=tianxinhui\">田昕晖博士</a>\"，本科毕业于北京大学，博士毕业于中国科学院大学计算技术研究所，研究方向为分布式图计算。毕业后长期从事分布式系统相关研究工作，近年专注于分析型数据库与向量检索相关方面的工作。目前火山引擎 ByteHouse 团队负责向量搜索相关功能开发。他在本次会议的演讲内容如下：</p><p></p><p>演讲：解析云原生数仓 ByteHouse 如何构建高性能向量检索技术</p><p></p><p>向量检索被广泛使用于以图搜图、内容推荐以及大模型推理等场景。随着业务升级与 AI 技术的广泛使用，用户期望处理的向量数据规模越来越大，对向量数据库产品的稳定性、易用性与性能需求也越来越高。为此火山引擎 ByteHouse 团队基于社区 ClickHouse 进行技术演进，提出了全新的向量检索功能设计思路，满足业务对向量检索稳定性与性能方面的需求。</p><p></p><p>演讲提纲：</p><p></p><p>向量检索概念以及在 LLM 场景的应用当前业界向量数据库发展情况ClickHouse 结合向量检索的优势，以及社区当前向量检索局限性与性能问题分析ByteHouse 向量检索功能设计思路介绍性能比较</p><p></p><p>听众收益点：</p><p></p><p>○ 向量搜索的使用场景</p><p>○ 向量搜索与 OLAP 结合的优势</p><p>○ 如何在 OLAP 系统中实现高效向量搜索</p><p></p><p>除上述演讲外，QCon 上海还将围绕&nbsp;<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1595?utm_source=infoqweb&amp;utm_medium=teacherart\">GenAI和通用大模型应用探索</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1596?utm_source=infoqweb&amp;utm_medium=teacherart\">AI&nbsp;Agent&nbsp;与行业融合应用的前景</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1597?utm_source=infoqweb&amp;utm_medium=teacherart\">LLM&nbsp;时代的性能优化</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1598?utm_source=infoqweb&amp;utm_medium=teacherart\">智能化信创软件&nbsp;IDE</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1602?utm_source=infoqweb&amp;utm_medium=teacherart\">面向人工智能时代的架构</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1604?utm_source=infoqweb&amp;utm_medium=teacherart\">性能工程：提升效率和创新的新方法</a>\"等专题进行交流。</p><p></p><p>QCon 上海 2023，相约 12 月！ 现在购票，享 9 折优惠，立减￥680！咨询购票请联系：18514549229（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/01/0113b3dfb187d5f9988b7eb16d2e0594.png\" /></p><p></p>",
    "publish_time": "2023-12-05 11:30:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]