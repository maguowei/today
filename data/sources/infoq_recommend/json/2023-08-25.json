[
  {
    "title": "Java近期新闻：Grails 6.0、PrimeFaces 13.0、，JUnit 5.10、GraalVM、TornadoVM、新的JEP草案",
    "url": "https://www.infoq.cn/article/Lc07oHhI7kCfgOdTv1Vb",
    "summary": "<p></p><h2>OpenJDK</h2><p></p><p></p><p>甲骨文（Oracle）的软件架构师<a href=\"https://www.linkedin.com/in/mcimadamore/\">Maurizio Cimadamore</a>\"已经提交了JEP Draft 8310626，<a href=\"https://openjdk.org/jeps/8310626\">外部函数和内存API</a>\"。该JEP提议在经过两轮孵化和三次预览后最终确定该特性：JEP 412，<a href=\"https://openjdk.org/jeps/412\">外部函数和内存API（孵化阶段）</a>\"，在JDK 17中交付；JEP 419，<a href=\"https://openjdk.org/jeps/419\">外函数与内存API（第二轮孵化）</a>\"，在JDK 18中交付；JEP 424，<a href=\"https://openjdk.org/jeps/424\">外部函数和内存API（预览版）</a>\"，在JDK 19中发布；JEP 434，<a href=\"https://openjdk.org/jeps/434\">外部函数和内存API（第二次预览）</a>\"，在JDK 20中发布；以及JEP 442，<a href=\"https://openjdk.org/jeps/442\">外部函数和内存API（第三次预览）</a>\"，将在即将发布的JDK 21中发布。自上一个版本发布以来的改进包括：一个新EnableNativeAccess&nbsp;清单属性，允许可执行JAR中的代码在不使用--enableNativeAccess标志的情况下调用受限方法；允许客户端以编程方式构建C函数描述符，避免使用特定于平台的常量；改进了对本地内存中可变长度数组的支持；以及支持本地字符串中的多个字符集。</p><p></p><p>Cimadamore和甲骨文技术人员顾问成员<a href=\"https://www.linkedin.com/in/minborg/\">Per-Åke-Minborg</a>\"还提交了JEP Draft 8312611，<a href=\"https://openjdk.org/jeps/8312611\">计算常量（Computed Constants）</a>\"。这个JEP引入了计算常量的概念，其定义为最多初始化一次的不可变值的占位符。这为final字段提供了性能和安全优势，同时在初始化时间方面提供了更大的灵活性。该特性将作为<a href=\"https://openjdk.org/jeps/12\">预览版</a>\"API首次亮相。</p><p></p><p>甲骨文OpenJDK开发团队的<a href=\"https://github.com/TheShermanTanker\">Julian Waters</a>\"已经提交了JEP Draft 8313278，<a href=\"https://openjdk.org/jeps/8313278\">Java虚拟机预先编译（Ahead of Time Compilation for the Java Virtual Machine）</a>\"。该JEP提议“增强Java虚拟机加载Java应用程序和编译成本机代码库的能力，以实现更快的启动和基线执行”。</p><p></p><p>JDK的回归测试工具<a href=\"https://openjdk.org/jtreg/\">jtreg</a>\"已经<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-July/008037.html\">发布了</a>\"7.3版本，并准备集成到JDK中。值得注意的变更包括：更新了一组用于在类Unix平台上进行测试的默认环境变量（DBUS_SESSION_BUS_ADDRESS、WAYLAND_DISPLAY和XDG-*）；修复了使用多模块设置运行测试时的竞争条件；以及修复了在<a href=\"https://github.com/openjdk/jtreg/blob/master/src/share/classes/com/sun/javatest/regtest/agent/AgentServer.java\">AgentServer</a>\"类中定义的log()，该方法不会刷新输出。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/openjdk/jtreg/blob/master/CHANGELOG.md\">发布说明</a>\"。</p><p></p><h2>JDK 21</h2><p></p><p></p><p>JDK 21<a href=\"https://jdk.java.net/21/\">早期访问构建版本</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-21+33\">第33版</a>\"已于上周发布，其中包括第32版中各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20=%20JDK%20AND%20fixversion%20=%2021%20and%20%22resolved%20in%20build%22%20=%20b33%20order%20by%20component,%20subcomponent\">问题的修复</a>\"和<a href=\"https://github.com/openjdk/jdk/compare/jdk-21+32...jdk-21+33\">更新</a>\"。有关该版本的更多详细信息，请参阅<a href=\"https://jdk.java.net/21/release-notes\">发布说明</a>\"。</p><p></p><h2>JDK 22</h2><p></p><p></p><p>JDK 22<a href=\"https://jdk.java.net/22/\">早期访问构建版本</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22+8\">第8版</a>\"也已于上周发布，其中包括第 7版中各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20=%20JDK%20AND%20fixversion%20=%2022%20and%20%22resolved%20in%20build%22%20=%20b08%20order%20by%20component,%20subcomponent\">问题的修复</a>\"和<a href=\"https://github.com/openjdk/jdk/compare/jdk-22+7...jdk-22+8\">更新</a>\"。有关该版本的更多详细信息，请参阅<a href=\"https://jdk.java.net/22/release-notes\">发布说明</a>\"。</p><p>对于<a href=\"https://openjdk.org/projects/jdk/22/\">JDK 22</a>\"和<a href=\"https://openjdk.java.net/projects/jdk/21/\">JDK 21</a>\"，均鼓励开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java缺陷数据库报告缺陷</a>\"。</p><p></p><h2>GraalVM</h2><p></p><p></p><p><a href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/graal-23.0.1\">GraalVM Community Components 23.0.1</a>\"已发布，由<a href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-20.0.2\">用于JDK 20 Community 20.0.2的GraalVM</a>\"和<a href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-17.0.8\">用于JDK 17 Community 17.0.8的GraalVM</a>\"组成，并提供了以下原生镜像（Native Image）的修复：jvm stat性能数据初始化；JDK Flight Recorder（JFR）事件常量池ID；用户体验问题；以及生成报告中的分析结果。对计数循环的剥离挖掘优化功能也进行了更新，其中挖掘溢出循环在Graal编译器中被定义为“不剥离”。这些新版本分别构建在JDK版本的<a href=\"https://wiki.openjdk.org/display/JDKUpdates/JDK+20u\">20.0.2+9</a>\"和<a href=\"https://wiki.openjdk.org/display/JDKUpdates/JDK+17u\">17.0.8+7</a>\"上。有关这些版本的更多详细信息，请参阅<a href=\"https://www.graalvm.org/release-notes/JDK_20/\">版本20.0.2</a>\"和<a href=\"https://www.graalvm.org/release-notes/JDK_17/\">版本17.0.8</a>\"的发布说明。</p><p></p><p>同样<a href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/vm-22.3.3\">，GraalVM Community Edition 22.3.3</a>\"也发布了，以与GraalVM社区版的2023年4月关键补丁更新（CPU）保持一致。该版本基于JDK的17.0.7和<a href=\"https://wiki.openjdk.org/display/JDKUpdates/JDK11u\">11.0.19</a>\"版本构建。有关该版本的更多详细信息，请参阅<a href=\"https://www.graalvm.org/release-notes/22_3/#2232\">发布说明</a>\"。</p><p></p><p>有关GraalVM最新版本的更多详细信息，请参阅这篇详细的<a href=\"https://www.infoq.com/news/2023/07/graalvm-java-17-20/\">新闻报道</a>\"，其中包括与Oracle实验室GraalVM的开发人员倡导者<a href=\"https://www.linkedin.com/in/alinayurenko\">Alina Yurenko</a>\"的问答。</p><p></p><h2>Spring框架</h2><p></p><p></p><p><a href=\"https://spring.io/projects/spring-cloud\">Spring Cloud</a>\"&nbsp;2022.0.4已<a href=\"https://spring.io/blog/2023/07/28/spring-cloud-2022-0-4-aka-kilburn-is-available\">发布</a>\"，代号为Kilburn，其带来了显著的变更，例如：支持<a href=\"https://spring.io/projects/spring-cloud-commons\">Spring Cloud Commons</a>\"中ServiceInstanceListSupplier接口的委托进行重试感知负载均衡；改进了在<a href=\"https://spring.io/projects/spring-cloud-stream\">Spring Cloud Stream</a>\"中加载共享bean的异常处理；<a href=\"https://spring.io/projects/spring-cloud-openfeign\">Spring Cloud OpenFeign</a>\"和<a href=\"https://spring.io/projects/spring-cloud-netflix\">Spring Cloud Netflix</a>\"分别升级到Feign 12.4和Eureka 2.0.1。该最新版本基于Spring Boot 3.0.9构建。需要注意的是，其子项目：<a href=\"https://spring.io/projects/spring-cloud-cli\">Spring Cloud CLI</a>\"、<a href=\"https://spring.io/projects/spring-cloud-cloudfoundry\">Spring Cloud for Cloud Foundry</a>\"和<a href=\"https://spring.io/projects/spring-cloud-sleuth\">Spring Cloud Sleuth</a>\"已从发布序列中删除。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/spring-cloud/spring-cloud-release/wiki/\">发布说明</a>\"。</p><p></p><p><a href=\"https://spring.io/projects/spring-security\">Spring Security</a>\"的6.1.2、6.0.5、5.8.5、5.7.10和5.6.2版本已经发布，以解决两个通用漏洞披露（Common Vulnerabilities and Exposures，CVE）：CVE-2023-34034，<a href=\"https://spring.io/security/cve-2023-34034\">WebFlux安全绕过无前缀的双通配符模式</a>\"，这是一个漏洞，在Spring WebFlux的Spring Security配置中使用双通配符（**）作为模式会导致模式匹配出现不匹配，从而可能导致安全绕过；和CVE-2023-34035，<a href=\"https://spring.io/security/cve-2023-34035\">使用多个Servlet时可能会错误配置授权规则</a>\"，该漏洞使用requestMatchers(String)方法和多个servlet（其中一个是Spring MVC&nbsp;DispatcherServlet类）可能会导致授权规则错误配置。有关这些版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.1.2\">版本6.1.2</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.0.5\">版本6.0.5</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.8.5\">版本5.8.5</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.7.10\">版本5.7.10</a>\"和<a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.6.12\">版本5.6.12</a>\"的发布说明。</p><p></p><p><a href=\"https://spring.io/projects/spring-shell\">Spring Shell</a>\"的3.1.3、3.0.7和2.1.12版本<a href=\"https://spring.io/blog/2023/07/27/spring-shell-2-1-12-3-0-7-and-3-1-3-are-now-available\">已经发布</a>\"，其特性包括：在CompletionProposal类中添加了complete()方法，以便通过多次单击选项卡（如文件路径）来完成单个参数。这些版本分别基于<a href=\"https://spring.io/projects/spring-boot\">Spring Boot</a>\"的3.1.2版本、3.0.9版本和2.7.14版本构建。有关这些版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v3.1.3now-available\">版本3.1.3</a>\"、<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v3.0.7now-available\">版本3.0.7</a>\"和<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v2.1.12\">版本2.1.12</a>\"的发布说明。</p><p></p><h2>Grails</h2><p></p><p></p><p>Grails基金会<a href=\"https://grails.org/blog/2023-07-25-introducing-grails-6.html\">发布</a>\"了<a href=\"https://grails.org/\">Grails</a>\"的6.0版本，它提供了：最小的JDK 11版本；对Spring Framework 5.3.28、Spring Boot 2.7.12和Gradle 7.6.1的支持；<a href=\"https://start.grails.org/\">Grails Forge UI</a>\"的首次亮相，这是一个类似于Spring Initializr等项目的入门项目；以及增强了对Micronaut Framework的集成。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/grails/grails-core/releases/tag/v6.0.0\">发布说明</a>\"，InfoQ将会跟进更详细的新闻报道。</p><p></p><h2>TornadoVM</h2><p></p><p></p><p>开源软件技术公司<a href=\"https://www.tornadovm.org/\">TornadoVM</a>\"发布了0.15.2版本的虚拟机，该版本提供了缺陷修复和显著的改进，例如：对<a href=\"https://tornadovm.readthedocs.io/en/latest/multi-device.html\">在多个设备上执行多个独立任务</a>\"的最初支持，可以在多个硬件加速器上执行多任务；支持OpenCL/PTX和SPIR-V后端的三角radian、cospi和sinpi函数；并与ComputeAorta（Codeplay针对RISC-V的<a href=\"https://codeplay.com/solutions/oneapi/\">oneAPI</a>\"构建套件的一部分）进行初始集成，以便在RISC-V上以仿真模式运行矢量指令。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/beehive-lab/TornadoVM/releases/tag/v0.15.2\">发布说明</a>\"。</p><p></p><p>曼彻斯特大学高级处理器技术研究小组副研究员<a href=\"https://jjfumero.github.io/\">Juan Fumero</a>\"于2020年3月在<a href=\"https://qconlondon.com/\">伦敦QCon</a>\"上<a href=\"https://www.infoq.com/presentations/tornadovm-java-gpu-fpga/\">介绍</a>\"了TornadoVM，并为InfoQ撰写了这篇<a href=\"https://www.infoq.com/articles/java-performance-tornadovm/\">最新的技术文章</a>\"。</p><p></p><h2>LibericaJDK</h2><p></p><p></p><p>BellSoft为JDK 17.0.8和20.0.2<a href=\"https://bell-sw.com/blog/liberica-native-image-kit-23-0-1-builds-are-released/\">发布</a>\"了<a href=\"https://bell-sw.com/liberica-native-image-kit/\">Liberica Native Image Kit</a>\"（NIK）的23.0.1版本，作为关键补丁更新（CPU）发布周期的一部分，其特性包括：对Windows操作系统上的ParallelGC的实验性支持；针对JavaFX FXML应用程序的编译修复；并修复了以下通用漏洞披露：<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22043\">CVE-2023-22043</a>\"；<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22041\">CVE-2023-22041</a>\"；<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25193\">CVE-2023-25193</a>\"；<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22044\">CVE-2023-22044</a>\"；<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22045\">CVE-2023-22045</a>\"；<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22049\">CVE-2023-22049</a>\"；<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22036\">CVE-2023-22036</a>\"；和<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22006\">CVE-2023-22006</a>\"。</p><p></p><h2>PrimeFaces</h2><p></p><p></p><p><a href=\"https://www.primefaces.org/\">PrimeFaces</a>\"的13.0.0版本<a href=\"https://dev.to/cagataycivici/primefaces-v1300-released-6io\">已经发布</a>\"，其中包括一些缺陷修复、依赖项升级，并增加了一些新特性，例如：支持SelectCheckboxMenu类中的列和页脚facet；在InputNumber类中添加selectOnFocus()和caretPositionOnFocus()方法；以及在OverlayPanel类中添加了缓存属性。需要注意的是，其存在一些破坏性变更。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/primefaces/primefaces/releases/tag/13.0.0\">发布说明</a>\"。</p><p></p><h2>Quarkus</h2><p></p><p></p><p>红帽（Red Hat）<a href=\"https://quarkus.io/blog/quarkus-3-2-2-final-released/\">发布</a>\"了<a href=\"https://quarkus.io/\">Quarkus</a>\"&nbsp;3.2.2.Final版本，以解决3.2.1版本中的两个回归问题以及文档方面的改进。值得注意的变更包括：恢复到了openjdk-17-runtime:1.16镜像，因为开发分支的版本号已升至1.17，预计下一个版本将于2023年8月发布；删除了有关quarkus.launch.rebuild属性的误报警告；并且如果OIDC状态cookie不匹配，则允许重新身份验证。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.2.2.Final\">变更日志</a>\"。</p><p></p><h2>Hibernate</h2><p></p><p></p><p><a href=\"https://hibernate.org/reactive/\">Hibernate Reactive</a>\"&nbsp;2.0.4.Final<a href=\"https://in.relation.to/2023/07/25/hibernate-reactive-2_0_4_Final/\">已发布</a>\"，其特性包括：对Hibernate ORM 6.2.7.Final的依赖升级；仅根据请求启动Docker容器，以确认远程数据库在执行完整构建之前已经启动；以及修复@SQLSelect注解在主实体上不起作用的问题。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/hibernate/hibernate-reactive/releases/tag/2.0.4\">发布说明</a>\"。</p><p></p><h2>Micronaut</h2><p></p><p></p><p><a href=\"https://micronaut.io/\">Micronaut Framework</a>\"&nbsp;4.0.2是第二个维护版本，它提供了缺陷修复、文档改进、依赖项升级和改进，例如：在BuildTestVerifier接口中添加了版本号检查；并将异步验证移动到了处理器模块，这是因为AsyncTypeElementVisitor类被定义成了compileOnly依赖项。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v4.0.2\">发布说明</a>\"。</p><p></p><p>Micronaut基金会已将其聊天社区从<a href=\"https://gitter.im/\">Gitter</a>\"<a href=\"https://micronaut.io/2023/07/28/micronaut-moves-to-discord/\">转移</a>\"到<a href=\"https://discord.com/\">Discord</a>\"，并且立即生效。该基金会表示，Discord提供了改进的桌面应用程序体验、更好的结构化对话和增强的通知。并且鼓励Gitter上的开发者转移到Discord，但该基金会将继续监控Giter上的对话，并提供Discord的链接。</p><p></p><h2>JBang</h2><p></p><p></p><p><a href=\"https://www.jbang.dev/\">JBang</a>\"&nbsp;0.110.0的<a href=\"https://github.com/jbangdev/jbang/releases/tag/v0.110.0\">发布</a>\"将其Maven Central ID从mavencentral更改为center，用于获取依赖项，以便在基于Maven和基于JBang的构建之间更好地共享下载。还修复了包含大写字母的Maven构件无法下载的回归问题。</p><p></p><h2>JHipster</h2><p></p><p></p><p><a href=\"https://www.jhipster.tech/jhipster-lite/\">JHipster Lite</a>\"的<a href=\"https://twitter.com/pascalgrimaud/status/168337588165216665610.0\">0.39.0</a>\"版本已经发布，其中包括了一些缺陷修复、依赖项升级和功能改进，例如：通过改进的配置增强了<a href=\"https://logback.qos.ch/\">Logback</a>\"依赖项，并且不再需要显式定义shutdown钩子；将getInstantOrDefault()方法添加到了JHipsterModuleProperties类中；以及在REST分页中将映射切换到非并行流，以确保流的顺序处理。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v0.39.0\">发布说明</a>\"。</p><p></p><h2>JUnit</h2><p></p><p></p><p><a href=\"https://junit.org/junit5/\">JUnit</a>\"&nbsp;5.10.0已经发布，新特性包括：ModuleSelector、EngineDiscoveryListener、EngineDiscoveryRequestResolver、LauncherSession和@Suite等实验性API已经提升到稳定状态；@SelectMethod注解中的新选择器；以及一个新的LauncherInterceptor接口，用于拦截Launcher和LauncherSessionListener接口实例的创建。有关该版本的更多详细信息，请参阅<a href=\"https://junit.org/junit5/docs/5.10.0/release-notes/\">发布说明</a>\"。</p><p></p><h2>Gradle</h2><p></p><p></p><p><a href=\"https://gradle.org/\">Gradle</a>\"&nbsp;8.3的<a href=\"https://github.com/gradle/gradle/releases/tag/v8.3.0-RC2\">第二个候选版本</a>\"提供了持续的改进，例如：对JDK 20的支持；使用工作进程将Java编译器作为编译器守护进程运行，从而更快地进行Java编译；使用<a href=\"https://blog.jetbrains.com/kotlin/2023/02/k2-kotlin-2-0/\">Kotlin K2编译器</a>\"进行实验的能力；以及改进了<a href=\"https://codenarc.org/\">CodeNarc</a>\"插件的输出。有关该版本的更多详细信息，请参阅<a href=\"https://docs.gradle.org/8.3-rc-2/release-notes.html\">发布说明</a>\"。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/07/java-news-roundup-jul24-2023/\">https://www.infoq.com/news/2023/07/java-news-roundup-jul24-2023/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/ClW8eLeOxRUqqpHWOJCC\">Java ZGC 垃圾收集器全面增强</a>\"</p><p><a href=\"https://www.infoq.cn/article/8SrWrwKkQYgLD2q5AQr8\">Java 近期新闻：Jakarta EE 11 更新、Quarkus LTS、Micronaut、Foojay 顾问委员会、DevBCN、JCrete</a>\"</p>",
    "publish_time": "2023-08-25 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "迅速登顶HackerNews！这款中国团队开发的编程语言月兔（Moonbit）将重塑WebAssembly的未来生态？",
    "url": "https://www.infoq.cn/article/GcViSGbTLONglSq7Rq06",
    "summary": "<p>知乎上有一个热门问题是：<a href=\"https://www.zhihu.com/question/359906573/answer/1709942996\">为什么中国出了这么多厉害的互联网公司，但没有自己设计过编程语言？</a>\"评论区的用户对此众说纷纭，大部分答主的回答并不乐观，对中国编程语言的未来并不看好。</p><p><img src=\"https://static001.geekbang.org/infoq/a3/a37952a46ad7075729e9c89fb6b5283c.png\" /></p><p></p><p>然而近日，事情有了微妙的变化。一个中国团队开发的<a href=\"https://news.ycombinator.com/item?id=37174619\">编程语言在Hacker News亮相</a>\"。Hacker News，简称HN，是由《黑客与画家》作者Paul Graham与Y Combinator联合创办的新闻社区，尽管其界面相对朴素，但社区的用户和评论质量很高。想要在首页上获得一席之地，需要通过社区的用户投票和联合讨论来决定，客观和真实的评价也使得很多知名项目在早期阶段都通过HN传播，例如Dropbox，Rust，Airbnb等，HN在推广早期项目和讨论高质量内容方面具有重要地位。</p><p></p><p>不到一天时间，这款中国团队开发的，名为“月兔（Moonbit）”的编程语言登上了<a href=\"https://news.ycombinator.com/item?id=37174619\">Hacker News</a>\"的头版头条，在IT工业界引发了热议。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5f/5f071a69289c1385625c851d89814b2d.png\" /></p><p></p><p>国际知名的Scala和函数式编程专家John A De Goes在试用月兔（Moonbit）后表示：月兔（Moonbit）看起来非常适合在@GolemCloud（WasmCon 2023的金牌赞助商、领先的WebAssembly Paas平台）上构建应用，并表示有兴趣尝试一下。</p><p><img src=\"https://static001.geekbang.org/infoq/d2/d2018355cf43d1ed5bdec0aa9a742265.png\" /></p><p>著名前端框架工具Vue.js作者尤雨溪、WebAssembly生态知名公司Wasmedge在试用后在Twitter（X）上转发了公告。</p><p><img src=\"https://static001.geekbang.org/infoq/20/20a2b984db634ce60dffcf8aa7cb7bd0.png\" /></p><p>全球各大技术爱好者纷纷在评论区留言和评价，部分开发者在试用后对其编译速度之快感到难以置信。月兔（Moonbit）通过自动内存管理使编程更加简便，从而与Rust区分开来。“我已经可以想象下一个‘100秒’视频了” ，“以这个速度，可能只需要500毫秒（就可以完成编译）”。</p><p><img src=\"https://static001.geekbang.org/infoq/f1/f1720f6aaee61d1ccd06f270aca962d9.png\" /></p><p>用于Chrome浏览器、LLVM以及Android等大型项目的构建系统<a href=\"https://en.wikipedia.org/wiki/Ninja_(build_system\">Ninja</a>\"的作者Evan Martain在公告发布后也在评论区表示对月兔（Moonbit）的期待：</p><p><img src=\"https://static001.geekbang.org/infoq/69/698264b7690f9efd4438d82b87ab77e8.png\" /></p><p>同时，已经有技术用户和语言爱好者结合自己的已有项目，探索与月兔（Moonbit）结合开发的可能。</p><p><img src=\"https://static001.geekbang.org/infoq/76/761c8490dfce474fbb8424104b75a0cb.png\" /></p><p>围绕着项目本身，目前大家普遍对于月兔（Moonbit）标准库、构建系统的发展表示期待。</p><p><img src=\"https://static001.geekbang.org/infoq/42/420e13308eee44090e847c57c9e58578.png\" /></p><p>在了解月兔（Moonbit）后，来自知名公司GreenLabs的工程师Woonki尝试使用月兔（Moonbit）重新编写著名的生命游戏，月兔（Moonbit）出色的编译速度让他深感惊叹，因此他在Twitter上发表感想，表示对这门语言的未来充满了激动和期待。</p><p></p><p>那么，备受瞩目的月兔（Moonbit）到底是什么？它为什么能在这么短的时间内获得大家的关注？接下来让我们一起深入了解这门语言的背景与特点。</p><p></p><h2>月兔（Moonbit） 到底是什么？</h2><p></p><p>月兔（Moonbit）：编译速度快、Wasm体积小、用户友好度高的Webassembly语言</p><p></p><p><a href=\"https://mp.weixin.qq.com/s/HcpB0YiU64J2duPikrr-cw\">月兔（Moonbit）</a>\"是一套专为云计算和边缘计算设计的端到端解决方案。它不仅包括了通用程序语言设计，还涵盖了编译器、构建系统、集成开发环境（IDE）、部署工具等各个方面。这使得月兔（Moonbit）能够实现高度垂直整合，从而为用户提供更出色的开发体验和性能。</p><p>&nbsp;</p><p>深挖它背后的团队，月兔（Moonbit）是由<a href=\"https://www.infoq.cn/article/z7Fo6dZC408iguGJiDzN\">张宏波</a>\"及其经验丰富的团队打造而成，仅用不到11个月的时间从立项到完成语言设计、IDE、编译器和构建系统。这个团队汇聚了多位在语言设计和开发领域拥有超过十年专业经验的成员。值得一提的是，张宏波本人不仅为多种编程语言做出了贡献，包括OCaml、ReScript（原ReasonML/BuckleScript）和Flow，还曾是Rescript语言工具链几乎所有关键组件的作者，包括高速编译器、标准库以及构建系统等。</p><p>&nbsp;</p><p>那么，月兔（Moonbit）究竟有哪些功能值得开发者关注呢？主要包括以下三个方面：</p><p>&nbsp;</p><p>首先是编译速度快，月兔（Moonbit）注重全局速度，采用多级中间表示（IR）的整体程序优化方法，优化内存布局以减少缓存失效，并为数据和控制流分析提供卓越的上下文。同时，月兔（Moonbit）在构建性能方面也表现出色，通过工具链的垂直整合，IDE性能得到了极大的提升，这对于开发人员的体验至关重要。根据测试，月兔（Moonbit）在冷启动环境无缓存模式下只需要不到7s就能检测到4000个package。</p><p>&nbsp;</p><p>第二是Wasm输出体积小，月兔（Moonbit）通过有效消除死代码，省略了妨碍此分析的语言特性，显著减小了最终代码的大小。据GitHub上可用的基准测试结果，月兔（Moonbit）输出的Wasm体积最小，仅约253字节。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2b/2b54808fd69b0b9660ca7acd6d5eb479.png\" /></p><p>第三是用户友好度高，月兔（Moonbit）通过自动内存来简化编程、避开了指针或左值等危险元素。此外，月兔（Moonbit）还提供了广泛的工具集，包括管理器、编译器、集成开发环境（IDE）以及一个无需容器支持、具备离线功能的云IDE。其中，云IDE采用了与传统的云IDE不同的架构，可在浏览器离线开发，用户输入能快速反馈，不再依赖网络宽带。</p><p>&nbsp;</p><p>这里放上月兔（Moonbit）的试用地址，大家感兴趣的话可以玩一下。</p><p>&nbsp;</p><p>试用地址：<a href=\"https://try.moonbitlang.com/\">https://try.moonbitlang.com</a>\"</p><p></p><h2>月兔（Moonbit）：重塑WebAssembly的未来生态</h2><p></p><p>&nbsp;</p><p>在Hackernews底部的论坛区，针对月兔（Moonbit）的亮相，有人问起张宏波：「这是否意味着你今后不再主导Rescript的工作，渐而把全部重心放在月兔（Moonbit）的建设上？」</p><p>&nbsp;</p><p>张宏波表示：除了月兔（Moonbit）在设计上学习Go语言和Rust语言优点的后来者优势外，从设计之初就考虑IDE，编译器和构建系统上的垂直整合，利于日后整个程序语言的生态发展和稳定，也从侧面回应了月兔（Moonbit）的设计初心——在Wasm生态缺乏优质供给端的今天，如果能量身为用户和消费端打造一门与标准高度适配的语言，这在整个程序语言界可以形成后发优势。</p><p><img src=\"https://static001.geekbang.org/infoq/46/46e503c0ba6c24493692a6a5b247a7f1.png\" /></p><p>作为计算机系统软件运行和网络环境的基础，基础软件扮演着至关重要的角色。尽管过去几十年中计算机性能取得了巨大突破，但令人遗憾的是，软件体验并没有同步提升，软件性能的潜力仍然未能充分挖掘。在这个背景下，2017年推出的新一代标准指令集WebAssembly因其高效、轻量、安全等特性，引起了广泛的关注。</p><p>&nbsp;</p><p>然而，目前在WebAssembly平台上，主流的开发语言仍然是一些对程序员门槛相对较高的底层编程语言，如C++和Rust。同时，一些应用层的语言，如Go语言，虽然在WebAssembly上运行，但其生成的代码体积巨大，无法充分发挥WebAssembly平台的优势。因此，在WebAssembly生态系统中，尽管已经有数十种开源的消费端运行时，但高质量供给端的匮乏是当前面临的最大挑战。</p><p></p><p>为了填补这一生态缺失，月兔（Moonbit）团队专注于<a href=\"https://zh.xn--(moonbit)lang-2q0vo93w.com/blog/first-announce/\">WebAssembly（简称Wasm）</a>\"，更好地支持这一技术，争取在这个领域取得后发优势。正如张宏波在回答知乎热门问题中所强调的，“做自己的语言是个很需要有情怀的事情，困难很多，但是长远意义上是一个国家在基础软件问题上的话语权的问题”。</p><p>&nbsp;</p><p>在这一愿景的推动下，月兔（Moonbit）诞生了，为编程软件的未来开辟新的道路。&nbsp;</p><p></p><h2>月兔（Moonbit）的未来之路</h2><p></p><p>&nbsp;</p><p>在月兔（Moonbit）的未来之路上，有许多令人兴奋的计划和发展方向。</p><p>&nbsp;</p><p>据了解，除了给用户提供现有的在线IDE和VS Code扩展插件，月兔（Moonbit）正在利用LLM大语言模型开发月兔（Moonbit）GPT，以辅助程序员代码准确性与提高开发效率，月兔（Moonbit）将在2024年Q2达到Beta状态，在稳定的同时，具备与Wasm宿主进行交互的外部函数接口（FFI）。在未来的战略计划中，团队会考虑将Wasm 2.0的Wasm GC集成到月兔（Moonbit）并且开发Wasm 1.0 GC。</p><p>&nbsp;</p><p>关于未来的长期计划，张宏波也在Hackernews的讨论区做出了回答，<a href=\"https://mp.weixin.qq.com/s/6m7xd5pUR20bGmTCtcQEFw\">月兔（Moonbit）</a>\"将会是他退休前的最后一个项目，月兔（Moonbit）团队有一个非常强烈的决心与长期愿景，将继续推动月兔（Moonbit）的发展。</p><p><img src=\"https://static001.geekbang.org/infoq/0a/0a1ab25f47278a189f9ad2dd5b62a5fe.png\" /></p><p>参考链接：</p><p>[1]https://www.zhihu.com/question/359906573/answer/1709942996</p><p>[2]Hacker News: https://news.ycombinator.com/item?id=37174619</p><p>[3] Ninja:<a href=\"https://security.feishu.cn/link/safety?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FNinja_(build_system)&amp;scene=ccm&amp;logParams=%7B%22location%22%3A%22ccm_default%22%7D&amp;lang=zh-CN\">https://en.wikipedia.org/wiki/Ninja_(build_system)</a>\"</p><p>[4]月兔（Moonbit）（月兔）平台背景&amp;应用场景介绍:<a href=\"https://mp.weixin.qq.com/s/HcpB0YiU64J2duPikrr-cw\">https://mp.weixin.qq.com/s/HcpB0YiU64J2duPikrr-cw</a>\"</p><p>[5]月兔（Moonbit）: the fast, compact &amp; user friendly language for WebAssembly：<a href=\"https://zh.moonbitlang.com/blog/first-announce/\">https://zh.</a>\"<a href=\"https://zh.moonbitlang.com/blog/first-announce/\">月兔（Moonbit）</a>\"<a href=\"https://zh.moonbitlang.com/blog/first-announce/\">lang.com/blog/first-announce/</a>\"</p><p>[6]编程语言月兔（Moonbit）开放内测：<a href=\"https://mp.weixin.qq.com/s/6m7xd5pUR20bGmTCtcQEFw\">https://mp.weixin.qq.com/s/6m7xd5pUR20bGmTCtcQEFw</a>\"</p><p>&nbsp;</p><p></p><p></p><p>&nbsp;</p><p>&nbsp;</p>",
    "publish_time": "2023-08-25 09:45:09",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "首届 FCon 全球金融科技大会：智能驱动，重塑金融数字化转型",
    "url": "https://www.infoq.cn/article/RZGMPJ7LgFy1HLhGy0KE",
    "summary": "<p>在数字化转型的浪潮中，金融行业正迎来前所未有的机遇与挑战。为此，极客邦科技旗下的 InfoQ 中国团队隆重推出——<a href=\"https://fcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=article\">2023·上海站 FCon 全球金融科技大会</a>\"。这是一个专为金融行业的高端技术管理者和技术专家设计的盛会，以下是详细介绍：</p><p></p><h4>演讲专题介绍：</h4><p></p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1592?utm_source=infoqweb&amp;utm_medium=article\">Keynote 主题演讲</a>\"：聚焦当前金融行业的主要技术方向，邀请金融业界知名的技术专家来分享金融业务、金融大模型、金融安全等大家关心的话题。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1575?utm_source=infoqweb&amp;utm_medium=article\">金融领域数字化转型挑战探索</a>\"：对于金融企业来说，加快数字化进程，运用数字技术可以加强金融数据分析能力，进而优化风控系统。此外，还可以通过数字化技术的运用，加强服务效率，使服务更加高效。但是这其中也存在很多挑战，例如数字资源价值没有得到充分发挥，缺乏支持数字化转型的技术人才，数字化转型影响金融业安全运作等等。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1578?utm_source=infoqweb&amp;utm_medium=article\">基于大数据和 AI 的风控系统</a>\"：黑产在技术进化的过程，已经在数据收集方面达到了丰富度、精准度、有效性等大幅提升的境地。这也使得各个公司在风控对抗中的有效性发挥越来越困难，风控对抗在数据方面向着黑产倾斜。实时改进和更新风控规则，能够对交易进程的风险控制更加全面，并且节省人力资源。本专题将分享如何利用机器学习、大数据模型，来提升数据在风控中的价值，并对未来的发展做展望。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1591?utm_source=infoqweb&amp;utm_medium=article\">金融行业大模型应用</a>\"：利用大数据、AI 和机器学习等技术构建庞大的模型来处理金融数据并应用于决策和预测，来提升运营效率、风险管理以及创新产品的开发。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1576?utm_source=infoqweb&amp;utm_medium=article\">创新的金融科技应用</a>\"：传统的银行、保险公司、券商在互联网技术的影响下，开始增加技术投入，用更加互联网的方式运营产品，利用技术提升自己的运营能力、研发效率，甚至是利用区块链、AI 等技术探索全新业务模式的，或者利用大数据加强风控水平的。本专题带你领略技术如何加速金融行业的效率，为它赋能，最终为用户带来更好的金融产品的。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1577?utm_source=infoqweb&amp;utm_medium=article\">金融实时数据平台建设之路</a>\"：随着金融业务的深入发展，如何让数据服务满足日益增长的时效性要求，已经成为业界瞩目的焦点。这其中，平台化建设的优化将直接影响到数据开发和应用的效率及效果。本次专题会议，我们将邀请到金融行业的数据技术专家，在充分考虑数据全生命周期和金融业务独特属性的基础上，深入探讨实时数据平台的设计理念、技术难题、组件选择以及场景应用等诸多议题。同时，也将结合 Cloud-Native 和 AI-Native 的最新发展，对实时数据平台的未来走向和演变进行展望。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1579?utm_source=infoqweb&amp;utm_medium=article\">核心系统国产化之路</a>\"：核心系统转型是银行业近几年一个很热门的话题。银行是最早开始构建自己的 IT 系统去做数字化和自动化的行业之一，经过几十年的发展，很多企业已经开始在数据库、中间件、消息系统等领域采用开源或者自研的模式。系统等领域采用开源或者自研的模式。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1580?utm_source=infoqweb&amp;utm_medium=article\">DevOps 在金融企业落地实践</a>\"：DevOps 已经被越来越多的金融企业所采用，来支撑软件生产过程的数字化转型。本专题主要和大家分享在金融行业落地 DevOps 的经验，帮助企业找到适合自己的 DevOps 实践之路。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1587?utm_source=infoqweb&amp;utm_medium=article\">金融企业数字人才培养</a>\"：数字技术正在金融领域发生着深刻变革，而人才是企业发展的核心。在人才价值创造上，如何帮助员工提升思维方式、技能、素质、绩效？本专题会围绕一些优秀的企业案例来介绍。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1588?utm_source=infoqweb&amp;utm_medium=article\">金融安全风险管控</a>\"：围绕网络运行安全、用户个人信息保护、关键信息基础设施安全、网络信息安全等方面来展开讨论具体的技术手段。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1589?utm_source=infoqweb&amp;utm_medium=article\">数据要素流通与数据合规</a>\"：隐私计算是当前网络数据计算安全保护的核心技术之一，隐私计算技术包括多方安全计算、联邦学习、可信执行环境等多个技术子集，本质上都是避免原始数据泄露的安全保护措施，实现数据计算过程结果的隐私保护；与传统的加密、去标识化单一技术相比，隐私计算因融合了密码学、统计学等交叉学科，为解决复杂数据处理过程中的隐私保护问题提供了更高效、更安全的解决方案。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1590?utm_source=infoqweb&amp;utm_medium=article\">金融数据治理</a>\"：数据治理是指通过对数据的分析和管理，来保证数据的高质量、高可靠性、高可用性和安全性等方面的要求，在金融行业中，数据治理的实践包括数据质量管理、数据安全管理，数据权限控制和数据分析等多个方面。本专题聚焦在相关的技术点上来帮助听众解决工作中的问题。</p><p></p><h4>联席主席介绍：</h4><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a0/a09358b22c55f14a0e83a0b1335924d3.png\" /></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/speaker/8127?utm_source=infoqweb&amp;utm_medium=article\">马国栋</a>\"先生是汇丰科技中国区的代理总经理，他带领的团队由一万多名技术专家组成，位于汇丰集团的中国科技中心，为汇丰全球的各个业务、职能和地区 / 市场提供创新和可持续的解决方案。他同时也是汇丰科技中国工商金融资讯科技的总监，专注于提高端到端的交付能力和持续提高效率。马先生以客户需求和体验为导向，致力于工作流程自动化，构建内外部生态系统，整合创新。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/speaker/8125?utm_source=infoqweb&amp;utm_medium=article\">杨青</a>\"先生是度小满金融的数据智能部总经理和技术委员会执行主席。他硕士毕业于清华大学计算机系，曾在百度和阿里担任重要职务，专注于 NLP、搜索、推荐、大数据架构等相关方向的研发工作。杨先生目前正专注于 AIGC 在金融场景中的应用，他带领团队发布了国内首个千亿中文金融大模型“轩辕”。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/speaker/8140?utm_source=infoqweb&amp;utm_medium=article\">韦韬</a>\"博士是北京大学客座教授，致力于让各种复杂系统变得更加安全可靠，多项成果帮助各主流操作系统提升安全性，领导和推动了多项著名开源安全软件的研发。韦韬博士因其杰出贡献和影响力被权威媒体评为“2021 年度数据智能新势力领军人物”，并入选 2022 年 IDC“中国 CSO 名人堂”。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/speaker/8137?utm_source=infoqweb&amp;utm_medium=article\">吴震操</a>\"先生现任上海恒生聚源数据服务有限公司总经理。作为国内头部的金融数据智能服务商，恒生聚源为银行、券商、基金、保险等近千家金融机构提供市场全面的数据、及时的资讯、和深度的分析及策略平台，以金融工程和大语言模型服务交易决策、投资研究、财富管理、投顾展业、产业融资、和风控合规等业务场景。</p><p></p><h4>专题出品人介绍：</h4><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/83/838870c1e7ad0612667e50b4d29353c5.png\" /></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1591?utm_source=infoqweb&amp;utm_medium=article\">费浩峻</a>\"先生，现任 360 数科的首席算法科学家，是金融科技领域的杰出领导者和专家。他主要负责 360 数科数据生态和人工智能相关工作的研究与实践落地。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1575?utm_source=infoqweb&amp;utm_medium=article\">李远鑫</a>\"先生，现任中邮消费金融市场部负责人及数字化转型办公室主任，是金融科技领域的杰出领导者和专家。他曾成功主导公司两次 IT 系统规划的制定、整体架构设计和落地实施，为公司实现从集中式到分布式、微服务的中台架构转型做出了巨大贡献。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1576?utm_source=infoqweb&amp;utm_medium=article\">李鑫</a>\"先生，现任德邦基金 CTO，著有《微服务治理：体系、架构及实践》一书。个人技术涉及并行计算、大规模分布式服务及治理、中间件云化及服务化（PaaS）、APM 监控、基础开发平台、数据治理等领域。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1577?utm_source=infoqweb&amp;utm_medium=article\">陈磊</a>\"先生，现任信也科技副总裁，上海市首批人工智能高级职称专家，致力于打通数据科技、AI 技术在金融场景的价值通路，形成数据、算法、工程的相互促进，最终实现在安全可信前提下的开发和服务的效率和效果的提升。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1578?utm_source=infoqweb&amp;utm_medium=article\">冯湧</a>\"先生，从业 20 余年，目前担任 Daraz 的 Principal Engineer Leader。技术领域涵盖金融和互联网行业的业务系统设计、风控系统设计，高可用架构设计，以及体系化的研发团队管理。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1590?utm_source=infoqweb&amp;utm_medium=article\">沈百军</a>\"先生，现任平安银行大数据平台 / 技术总监，长期从事大数据基础能力及应用、离线计算、流式计算等方面的研究与实践，是头部银行业数字化转型的领军人物。</p><p></p><h4>结语：</h4><p></p><p></p><p>随着金融科技的不断进步，我们正站在一个新的历史起点。2023·上海站 FCon 全球金融科技大会将于 11 月落地，不仅是一个展示技术成果的舞台，更是一个连接业界精英、共创未来的桥梁。我们诚挚地邀请您加入我们，共同探索金融科技的未来，为金融行业的数字化转型注入新的活力和创意。更多嘉宾与内容上线中...</p><p></p><p>扫码可查看全部演讲专题，目前 5 折 优惠购票，仅限前 100 人，咨询购票可联系：13269078023（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8b/8b1111281bd39604800e870b8807fd3b.png\" /></p><p></p>",
    "publish_time": "2023-08-25 10:17:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "智能技术在金融行业的应用与实践嘉宾分享合集",
    "url": "https://www.infoq.cn/article/d3zxqd7qPCxD4vdxpPb4",
    "summary": "<p><strong>金融行业智能化应用的实践及感悟</strong><br />\n分享嘉宾：周建华 太保寿险首席架构师<br />\n分享提纲：<br />\n1.金融行业智能化应用的现状<br />\n2.金融行业智能化应用的挑战<br />\n3.金融行业智能化应用的实践经验</p>\n<p><strong>银行智能化运营方向性思考</strong><br />\n分享嘉宾：李涛 富滇银行数字金融中心副主任<br />\n分享提纲：<br />\n1.银行数字化发展历程&nbsp;<br />\n2.智能技术在金融领域发展历程和现状<br />\n3.AIGC在金融领域的创新思考</p>\n<p><strong>华盛证券智能风控探索与实践</strong><br />\n分享嘉宾：黄曙光 华盛证券技术 VP<br />\n分享提纲：</p>\n<ol>\n<li>智能⻛控与传统⻛控的本质区别</li>\n<li>证券机构的智能⻛控实践分享</li>\n<li>智能⻛控在⾦融场景的落地挑战和解法</li>\n<li>真正发挥智能⻛控价值的路径和⽅法</li>\n</ol>\n<p>完整视频回放 &gt;&gt;&gt;<br />\n<a href=\"https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ\">https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ</a></p>",
    "publish_time": "2023-08-25 10:48:16",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "金融行业智能化应用的实践及感悟",
    "url": "https://www.infoq.cn/article/57QvJxrYrhq1DcTvmA2c",
    "summary": "<p>金融行业智能化应用的实践及感悟</p>\n<p>分享嘉宾：周建华 太保寿险首席架构师</p>\n<p>分享提纲：<br />\n1.金融行业智能化应用的现状<br />\n2.金融行业智能化应用的挑战<br />\n3.金融行业智能化应用的实践经验</p>\n<p>完整视频回放 &gt;&gt;&gt;<br />\n<a href=\"https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ\">https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ</a></p>",
    "publish_time": "2023-08-25 11:34:18",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "银行智能化运营方向性思考",
    "url": "https://www.infoq.cn/article/UootzcUo2C52ZsrFbKaw",
    "summary": "<p>银行智能化运营方向性思考</p>\n<p>分享嘉宾：李涛 富滇银行数字金融中心副主任</p>\n<p>分享提纲：<br />\n1.银行数字化发展历程<br />\n2.智能技术在金融领域发展历程和现状<br />\n3.AIGC 在金融领域的创新思考</p>\n<p>完整视频回放 &gt;&gt;&gt;<br />\n<a href=\"https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ\">https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ</a></p>",
    "publish_time": "2023-08-25 11:59:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "券商智能风控落地场景分析",
    "url": "https://www.infoq.cn/article/hZZVM2NUNYg0Gm96pUzL",
    "summary": "<p>华盛证券智能风控探索与实践</p>\n<p>分享嘉宾：黄曙光 华盛证券技术 VP</p>\n<p>分享提纲：<br />\n1.智能⻛控与传统⻛控的本质区别<br />\n2.证券机构的智能⻛控实践分享<br />\n3.智能⻛控在⾦融场景的落地挑战和解法<br />\n4.真正发挥智能⻛控价值的路径和⽅法</p>\n<p>完整视频回放 &gt;&gt;&gt;<br />\n<a href=\"https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ\">https://www.infoq.cn/video/k0QUqSaEI4Hxbb4V94hZ</a></p>",
    "publish_time": "2023-08-25 12:05:31",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "七年没能将Python 集成到 Excel，Python 之父加入微软三年后成了！",
    "url": "https://www.infoq.cn/article/fX1LcY4oSNpEYjiIwjd1",
    "summary": "<p>近日，微软宣布将流行的编程语言 <a href=\"https://www.infoq.cn/article/XHtQAsLqxiV10J9typAV\">Python</a>\" 引入到了 Excel。该功能的公共预览版现已推出，允许 Excel 用户操作和分析来自 Python 的数据。</p><p>&nbsp;</p><p>微软表示，Python in Excel能够在同一工作簿中将Python与Excel分析原生组合起来，无需任何额外设置。使用Python in Excel，用户可以直接在单元格内键入Python，相关计算将在微软云端运行，并将绘图和可视化等结果返回至工作表内。</p><p>&nbsp;</p><p>“听起来像愚人节玩笑，但这是真的！”“太棒了！它肯定可以加快我的工作速度。”网友们听到这个消息后纷纷发出了感叹。为什么大家都对此感到兴奋呢？我们先看下Python 的强大功能和 Excel 的灵活性结合后，都发生了哪些“化学反应”？</p><p>&nbsp;</p><p></p><h2>Python in Excel有何独特之处？</h2><p></p><p>&nbsp;</p><p>Python in Excel即将通过Excel for Windows的Beta Channel，向Microsoft 365 Insiders项目的会员们发布公共预览版。不过微软也表示在预览结束后，“如果没有付费许可证，某些功能将受到限制”。</p><p>&nbsp;</p><p>首先，Python in Excel专为分析师而构建。微软表示，每一天，全球各地都有数百万用户依靠熟悉的Excel工具（例如公式、图表和数据透视表）分析并理解自己的数据。Python in Excel将以原生方式被直接整合至Excel网格当中。</p><p>&nbsp;</p><p>用户只需使用新的PY函数即可将Python代码直接输入至Excel单元格中。Excel用户可通过Python访问强大的分析功能，从而实现可视化、数据清洗、机器学习和预测分析等目标。用户现在可以创建起无缝对接的Excel加Python端到端解决方案，且全程无需脱离于Excel之外。使用Excel的内置连接器加Power Query，用户还能轻松将外部数据引入Python in Excel的工作流程。Python in Excel还跟用户所熟悉并喜爱的各种工具相兼容，例如公式、数据透视表和Excel图表等。下面来看Python in Excel所能实现的几种分析示例：</p><p>&nbsp;</p><p>高级可视化</p><p>&nbsp;</p><p>充分利用Matplotlib和seaborn等著名Python图表库的功能构建各类图表，包括传统的条形图、线形图，乃至热力图、小提琴图和群图等专用可视化效果。</p><p>&nbsp;</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/9b/9b12136cb7507f962e7d89b5fba56d9f.png\" /></p><p></p><p>&nbsp;使用Seaborn生成的各种图</p><p>&nbsp;</p><p>&nbsp;</p><p>机器学习、预测分析和预期计算</p><p>&nbsp;</p><p>利用scikit-learn与statsmodels等Python库，可以实现目前人气极高的机器学习、预测分析与预期计算，包括回归分析、时间序列建模等等。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/53/53a1a44d2cedcfeeaa0c080e3a2d6011.png\" /></p><p></p><p>使用Python和Excel LAMBDA构建的天气预测机器学习模型</p><p>&nbsp;</p><p>数据清洗</p><p>&nbsp;</p><p>可有效利用先进的数据清洗技术，例如查找缺失值、标准化格式、删除重复项，并可采用正则表达式等技术进行基于模式的转换。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7d/7dd67e36ba882c25a5c68eb191d42520.png\" /></p><p></p><p>&nbsp;使用正则表达式提取日期</p><p>&nbsp;</p><p>&nbsp;</p><p>其次，Python in Excel通过Anaconda实现顶级Python分析功能。</p><p>&nbsp;</p><p>Anaconda是全球数千万数据从业者日常使用的领先Python项目。Python in Excel可使用运行在Azure当中的Anaconda Distribution for Python，其中包含最流行的各Python库（例如pandas、Matplotlib、scikit-learn等），并由Anaconda安全完成构建、测试和支持。Anaconda提供的Python功能，支持在Python in Excel中执行广泛的分析操作。</p><p>&nbsp;</p><p>再者，Python in Excel运行于微软云端，无需任何额外设置。</p><p>&nbsp;</p><p>Excel使用的Python代码运行在微软云端，并提供Microsoft 365兼容的连接体验。Python代码使用Azure容器实例在自己的虚拟机管理程序内隔离运行，并通过安全的软件供应链从Anaconda处获取源构建包。微软表示，Python in Excel可以防止运行的Python代码知晓用户身份，通过互联网打开的工作簿也在独立的容器内受进一步隔离，这就妥善保护了用户的数据隐私。工作簿中的数据只能通过内置xl() Python函数发送，且Python代码的输出只能作为=PY() Excel函数的结果返回。</p><p>&nbsp;</p><p>另外，Python in Excel专为团队协作而打造。</p><p>&nbsp;</p><p>用户可以在Excel工作簿内共享Python。各团队成员还可以在基于Excel的分析中无缝进行Python交互并刷新，不必分神安装其他工具、Python运行时，或者管理库和依赖项。用户可以随意选择自己喜爱的协作工作（例如Microsoft Teams和Microsoft Outlook）来共享工作簿，并通过评论、@提及还有与同事共同开发以进行无缝协作，整个体验过程与本地Excel无异。包含Python的工作簿还配合有敏感度标签，能够确保其符合组织内的信息保护策略。</p><p>&nbsp;</p><p></p><h2>Excel团队曾尝试过，但失败了</h2><p></p><p>&nbsp;</p><p>该消息发布后，自称曾在Excel工作过的开发者“vba”爆料，Excel早就试着将Python引入Excel，但最终失败了。</p><p>&nbsp;</p><p></p><blockquote>作为一个曾试图将Python引入Excel的前Excel开发人员，今天看到这个消息真的很惊喜。7年多前，我选择离开Excel团队。当时老板的老板知道我对将Python引入Excel很感兴趣，如果我选择留下的话，就给我一个机会来解决这个问题。后来，原本6个月的项目变成了大约3年的项目，Python的部分消失了，我们最终在Excel中启用了JavaScript自定义函数。&nbsp;对于Python，我们当时也是设计为在“云端”(AzureML v1)运行，尽管就是否应该在本地运行上前前后后做了很多讨论。我认为让Python部分消失的是我们的合作伙伴AzureML团队的重新重组、重新发布和重新雇佣，我们失去了一个PM。与此同时，我们的工作引起了另一个合作伙伴团队的注意，他们意识到他们可以使用我们的代码来执行进程外的JavaScript。所以我花了很多时间来确保功能成功发布，我想这对Python是不利的。&nbsp;我得到了一些优秀工程师的帮助，也学到了很多东西。这项工作的核心是修改Excel的计算引擎，使其允许函数异步计算，允许用户在远程终端（JavaScript、Python或其他工具）计算的同时继续处理电子表格的其他部分。以前，电子表格会在计算运行时被锁住，这对于长时间运行的无限计算来说不太友好。不知道我们当时构建的任何功能是否都被纳入了这项新功能。&nbsp;现在，非常高兴看到这个功能，并期待去尝试。</blockquote><p></p><p>&nbsp;</p><p>微软表示，Python in Excel的诞生，源自微软内部多个团队之间的密切合作，包括微软Excel、微软开发者部门、微软安全部门、微软Azure以及微软研究院等。其中，Python 创建者、BDFL 荣誉退休人员、现任 Microsoft 杰出工程师 Guido van Rossum 也参与了这项工作，并帮助定义了 Excel 中的 Python 架构。</p><p>&nbsp;</p><p>“我很高兴 Python 和 Excel 的这种出色的、紧密的集成现在已经面世。我希望两个社区都能在这次合作中找到有趣的新用途，从而增强每个合作伙伴的能力。三年前我加入 Microsoft 时，我做梦也没想到这会成为可能。Excel 团队非常出色！”Rossum 表示。</p><p>&nbsp;</p><p>Rossum如今已经67岁。2020 年 11 月，耐不住无聊退休生活的Rossum 决定加入微软的开发者部门。当时，微软组建了一个团队来提高Python解释器的速度，他一方面参与Python自身的优化工作，还帮助微软的其他团队集成面向公众或面向开发人员的Python微软产品。</p><p>&nbsp;</p><p>当然，除了官方团队，还有个人开发者也尝试过将python引入Excel。开发者“bubblebobble”表示自己几年前构建了一个可用的<a href=\"https://alphawolfxl.com/\">“Excel 中的 Python</a>\"”，还远程执行 sql 和 matlab&amp;r。“当我要求进行 beta 测试的一些人说‘他们的公司不会为此付费’、让我觉得我在浪费时间时，我放弃了......”有网友安慰他：“你只是超前于你的时代！”</p><p>&nbsp;</p><p></p><h2>网友：我想让它还支持本地运行</h2><p></p><p>&nbsp;</p><p>对于这项新功能，McKinney公司数据与分析执行总监&nbsp;Greg Barnes称，“对Python的全面支持，是我在整个职业生涯中经历过的最令人兴奋的Excel更新！”他表示，在Excel中运行Python的功能，让McKinney成功简化了原有报告工作流程。“我们曾经在Jupyter Notebook中操作数据结构、过滤和聚合数据，并在Excel中构建视觉效果。但现在，我们可以在Excel中管理整个工作流，这使得Excel变得更加强大，也让Python在整个组织中更易于使用。”</p><p>&nbsp;</p><p>而网友们也表示开心，但同时也有更多期待。“我希望它不仅仅由 Microsoft Cloud 提供支持，并且可以支持本地运行的 Python，但无论如何，我仍认为这会是巨大的项目，并且会在很大程度上使 Excel 现代化，仅此一点就可以消除只需要这种数据的网站的需求。我想到我以前做的一个项目，就是建立一个分析网站，内部只有少数几个人使用，如果当时有这样的东西，就能很好地满足他们的需求。”开发者“cableshaft”表示。</p><p>&nbsp;</p><p>对此，网友“rawgabbit”称，“公平地说，Tableau Desktop、Tableau Prep 和 Tableau Cloud 虽然价格昂贵，但仍然是很棒的产品。借助 Tableau Prep，您可以获得可视化 ETL 工具。从技术角度来说，我更喜欢 SQL，但对于业务人员来说，Tableau Prep 更像是一个 REPL，因此他们可以看到自己的操作将要做什么。他们可以在 Tableau Cloud 中安排这些 Prep 流程，该流程将进行 ETL 并生成每日数据集，然后用户可以通过 Tableau Cloud 上的仪表板进行交互。在我看来，Excel 走在正确的道路上，它具有与 Salesforce、Azure 数据库等开箱即用的连接器。它真正需要的是带有 REPL 输出的完整 SQL，以便用户可以看到其 SQL 的效果。（Tableau Prep 的做法是默认对行进行采样以输出即时结果）。”</p><p>&nbsp;</p><p>有开发者指出，云以及尽可能多的云集成是微软的核心战略。这是关于定期付款、锁定以及最终在他们自己计算机上真正拥有世界经济的知识和业务流程。这可能说明了为什么目前只支持云上运行。</p><p>&nbsp;</p><p>还有网友指出，“Python 进入 Excel，成为压死 VBA 的最后一根稻草。”VBA一直是Excel脚本编程的主要工具。VBA简单易学、功能强大，在长达几十年的时间里为提高Excel工作效率作出了贡献。但随着Python的流行，越来越多的人用Python进行Excel脚本编程来提高工作效率，VBA逐渐式微。</p><p>&nbsp;</p><p>你对Python in Excel有什么看法？欢迎评论区分享哦～</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://techcommunity.microsoft.com/t5/excel-blog/announcing-python-in-excel-combining-the-power-of-python-and-the/ba-p/3893439\">https://techcommunity.microsoft.com/t5/excel-blog/announcing-python-in-excel-combining-the-power-of-python-and-the/ba-p/3893439</a>\"</p><p><a href=\"https://news.ycombinator.com/item?id=37222191\">https://news.ycombinator.com/item?id=37222191</a>\"</p>",
    "publish_time": "2023-08-25 13:48:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "通义千问能看图了！阿里云开源视觉语言大模型Qwen-VL ，支持图文双模态输入",
    "url": "https://www.infoq.cn/article/94cdVSu567CBjOEaI9mV",
    "summary": "<p></p><blockquote>继 8 月初阿里云开源通义千问 70 亿参数通用模型 Qwen-7B 和对话模型 Qwen-7B-Chat 后，又一大模型实现了开源。&nbsp;</blockquote><p></p><p></p><h2>阿里云开源通义千问多模态大模型Qwen-VL</h2><p></p><p>&nbsp;</p><p>InfoQ 获悉，8 月 25 日，阿里云开源通义千问多模态大模型 Qwen-VL。这是继&nbsp;8 月初阿里云开源通义千问 70 亿参数通用模型 <a href=\"https://www.infoq.cn/article/JyR6k3JGacTcyTK3ffGS\">Qwen-7B </a>\"和对话模型 Qwen-7B-Chat 后，又开源的一大模型。</p><p>&nbsp;</p><p>据介绍，Qwen-VL 是支持中英文等多种语言的视觉语言（Vision Language，VL）模型。相较于此前的 VL 模型，Qwen-VL 除了具备基本的图文识别、描述、问答及对话能力之外，还新增了视觉定位、图像中文字理解等能力。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/61/61cb16a001b83076f8eb5cc7401860ee.png\" /></p><p></p><p>具体来说，Qwen-VL 可以以图像、文本、检测框作为输入，并以文本和检测框作为输出，可用于知识问答、图像标题生成、图像问答、文档问答、细粒度视觉定位等多种场景。比如，一位不懂中文的外国游客到医院看病，不知道怎么去往对应科室，他拍下楼层导览图问 Qwen-VL“骨科在哪层”“耳鼻喉科去哪层”，Qwen-VL 会根据图片信息给出文字回复。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c9/c9f831a836c25969d3d10122f6520d50.png\" /></p><p></p><p>此外，Qwen-VL 还是业界首个支持中文开放域定位的通用模型，可以通过中文开放域语言表达进行检测框标注。开放域视觉定位能力决定了大模型“视力”的精准度，这意味着具备该能力的大模型能在画面中精准地找出想找的事物。比如，输入一张上海外滩的照片，让 Qwen-VL 找出东方明珠，Qwen-VL 能用检测框准确圈出对应建筑。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/97/970a8dab0aab41aa45239106bca8df74.png\" /></p><p></p><p>据了解，Qwen-VL 以 Qwen-7B 为基座语言模型研发，在模型架构上引入视觉编码器，使得模型支持视觉信号输入，并通过设计训练过程，让模型具备对视觉信号的细粒度感知和理解能力。更高分辨率可以提升细粒度的文字识别、文档问答和检测框标注，相比于目前其它开源 LVLM 使用的 224 分辨率，Qwen-VL 是首个开源的 448 分辨率的 LVLM 模型。</p><p>&nbsp;</p><p>阿里云通义千问团队算法专家、Qwen-VL 开源模型负责人白金泽在接受 InfoQ 采访时表示，Qwen-VL 模型的训练分为三个阶段：</p><p>&nbsp;</p><p>在预训练阶段，团队主要利用大规模、弱标注的图像-文本样本对进行训练；在多任务训练阶段，团队整理了大量高质量多任务的细粒度图文标注数据进行混合训练，并升高了图像的输入分辨率，降低图像缩放引起的信息损失，增强模型对图像细节的感知能力，得到 Qwen-VL 预训练模型；在指令微调阶段，团队使用合成标注的对话数据进行指令微调，激发模型的指令跟随和对话能力，得到具有交互能力的 Qwen-VL-Chat 对话模型。</p><p>&nbsp;</p><p>白金泽表示，Qwen-VL 模型的研发难点主要体现在数据、训练、框架三个层面。“数据方面，多模态的数据整理和清洗是个难点，有效的数据清洗可以提高训练效率以及提升最终收敛后的效果。训练方面，在多模态大模型的训练中，一般认为大 batch 和较大学习率可以提升训练收敛效率和最终结果，但其训练过程可能更加不稳定。我们通过一些训练技巧有效提升了训练稳定性，具体细节将在相关论文中公布。框架方面，目前多模态大模型的并行训练框架支持并不完善，我们对多模态大模型的 3D 并行技术进行了优化，可稳定训练更大规模的多模态模型。”</p><p>&nbsp;</p><p>除了 Qwen-VL，本次阿里云还开源了 Qwen-VL-Chat。Qwen-VL-Chat 是在 Qwen-VL 的基础上，使用对齐机制打造的基于大语言模型的视觉 AI 助手，可让开发者快速搭建具备多模态能力的对话应用。</p><p>&nbsp;</p><p>白金泽补充说，团队主要通过两类方式评估了多模态大模型的效果。其一是使用标准基准数据集来评测每个多模态子任务的效果。例如评测图片描述（Image Captioning）、图片问答（Visual Question Answering, VQA）、文档问答（Document VQA）、图表问答（Chart VQA）、少样本问答（Few-shot VQA）、参照物标注（Referring Expression Comprehension）等。其二是使用人工或借助&nbsp;GPT-4&nbsp;打分来评测多模态大模型的整体对话能力和对齐水平。通义千问团队构建了一套基于&nbsp;GPT-4&nbsp;打分机制的基准“试金石”（ TouchStone），总计涵盖 300+张图片、800+ 道题目、27 个题目类别。</p><p>&nbsp;</p><p>在四大类多模态任务（Zero-shot Caption/VQA/DocVQA/Grounding）的标准英文测评中，Qwen-VL 取得了同等尺寸开源 LVLM 的最好效果。为了测试模型的多模态对话能力，通义千问团队构建了一套基于 GPT-4 打分机制的测试集“试金石”，对 Qwen-VL-Chat 及其他模型进行对比测试，Qwen-VL-Chat 在中英文的对齐评测中均取得了开源 LVLM 最好结果。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/18/18291128e4e311060ada8c764544c3fd.png\" /></p><p></p><p>目前，Qwen-VL 及其视觉 AI 助手 Qwen-VL-Chat 均已上线 ModelScope 魔搭社区，开源、免费、可商用。用户可从魔搭社区直接下载模型，也可通过阿里云灵积平台访问调用 Qwen-VL 和 Qwen-VL-Chat，阿里云为用户提供包括模型训练、推理、部署、精调等在内的全方位服务。</p><p></p><h2>大模型发展的下一站：多模态大模型</h2><p></p><p>&nbsp;</p><p>多模态大模型是指能够理解文字、图像、视频、音频等多种模态信息的大模型，与仅能理解单一文本模态的语言模型相比，多模态大模型的优势就在于可以充分利用语言模型的指令理解能力，来做图像、语音、视频等各种模态中的开放域任务，从而具备处理不同模态信息的通用能力。而单一模态大模型的任务形式通常都是预先定义好的，比如图像/视频/语音分类任务，需要提前知道这些类别，然后针对性的找训练数据去训练模型。</p><p>&nbsp;</p><p>有观点认为，多模态是预训练大模型最重要的技术演进方向之一。</p><p>&nbsp;</p><p>业界普遍认为，从单一感官的、仅支持文本输入的语言模型，到“五官全开”的，支持文本、图像、音频等多种信息输入的多模态模型，蕴含着大模型智能跃升的巨大可能。多模态能够提升大模型对世界的理解程度，充分拓展大模型的使用场景。比如，以 GPT-4、PaLM-E 为代表的一批模型，通过赋予大语言模型感知、理解视觉信号的能力，展现出大规模视觉语言模型在解决以视觉为中心的实际问题的前景，并显示出进一步拓展到具身智能、通向通用人工智能的广阔前景。</p><p>&nbsp;</p><p>其中，视觉作为人类的第一感官能力，也是研究者首先希望赋予大模型的多模态能力。因此，继此前推出 M6、OFA 系列多模态模型之后，阿里云通义千问团队又开源了基于 Qwen-7B 的大规模视觉语言模型 Qwen-VL。</p><p>&nbsp;</p><p>不过，多模态大模型的开发并非易事，白金泽表示，多模态大模型的开发难度包括但不限于以下几点：</p><p>&nbsp;</p><p>模态间表征差异大：大规模纯语言模型的输入输出一般是离散表征，而图像、语音等内容通常是连续表征，其模态间的信息密度、表征空间、输入输出方式等都存在巨大差异，这导致了设计的复杂性。多模态大模型收敛不稳定：由于模态间表征差异大、各模态网络异构等因素，相比纯文本大模型，多模态大模型的训练具有更多的挑战，更有可能出现训练不稳定的情况。缺乏稳定开源框架支持：目前常见的开源大模型训练框架，都只对纯语言模型的训练效率进行了极致的优化。为了处理多模态输入输出，多模态模型通常有非对称的网络结构，导致无法直接用常见开源训练框架扩展到超大参数量。通义千问团队对多模态的并行训练框架进行了多重优化，可稳定训练更大规模的多模态模型。</p><p>&nbsp;</p><p>“多模态是我们很看好的技术方向，这个领域还有很多技术难题有待解决，未来我们也会持续研究。就 Qwen-VL 来说，接下来的工作包括支持更高分辨率的图像输入，无监督地从图像中学习更多的世界知识，扩展更多模态，加深对多模态数据的理解，等等。”白金泽说道。</p><p>&nbsp;</p><p>开源地址：</p><p>ModelScope魔搭社区：</p><p>Qwen-VL&nbsp; &nbsp;&nbsp;<a href=\"https://modelscope.cn/models/qwen/Qwen-VL/summary\">https://modelscope.cn/models/qwen/Qwen-VL/summary</a>\"</p><p>Qwen-VL-Chat&nbsp; &nbsp;&nbsp;<a href=\"https://modelscope.cn/models/qwen/Qwen-VL-Chat/summary\">https://modelscope.cn/models/qwen/Qwen-VL-Chat/summary</a>\"</p><p>模型体验：<a href=\"https://modelscope.cn/studios/qwen/Qwen-VL-Chat-Demo/summary\">https://modelscope.cn/studios/qwen/Qwen-VL-Chat-Demo/summary</a>\"</p><p>HuggingFace：&nbsp;</p><p>Qwen-VL &nbsp;&nbsp;<a href=\"https://huggingface.co/Qwen/Qwen-VL\">https://huggingface.co/Qwen/Qwen-VL</a>\"</p><p>Qwen-VL-Chat &nbsp;&nbsp;<a href=\"https://huggingface.co/Qwen/Qwen-VL-Chat\">https://huggingface.co/Qwen/Qwen-VL-Chat</a>\"</p><p>GitHub：</p><p><a href=\"https://github.com/QwenLM/Qwen-VL\">https://github.com/QwenLM/Qwen-VL</a>\"</p><p>技术论文地址：</p><p><a href=\"https://arxiv.org/abs/2308.12966\">https://arxiv.org/abs/2308.12966</a>\"</p>",
    "publish_time": "2023-08-25 14:15:57",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "微盟高级技术总监裘皓萍确认出席 QCon 北京，分享 SaaS + AIGC 产品化与商业化实践",
    "url": "https://www.infoq.cn/article/wNLhVQXektOtcTzr1L4k",
    "summary": "<p>9 月 3 日 - 5 日，在 <a href=\"https://qcon.infoq.cn/202309/beijing/?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10&amp;utm_term=0825&amp;utm_content=qiuhaoping\">QCon 全球软件开发大会（北京站）</a>\"上，微盟高级技术总监裘皓萍将发表题为《SaaS + AIGC 产品化与商业化实践》主题分享，介绍 AIGC 在 SaaS 产品中落地的产品化和商业化实践经验，以及过程中的教训与反思。</p><p></p><p><a href=\"https://qcon.infoq.cn/202309/beijing/presentation/5401?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10&amp;utm_term=0825&amp;utm_content=qiuhaoping\">裘皓萍</a>\"，微盟高级技术总监，负责微盟 AI 产研、销氪（SaaS CRM）和 SaaS 企培产研团队、集团信息化产研。2015 年加入微盟，任算法团队负责人，实现电商平台的搜索、推荐、营销活动等算法能力，自研 OCR 用于风控、合同识别等场景，自研转化率预估模型，用于销售拓客场景等。2022 年基于 SD 开展 AI 图片生成应用落地，2023 年主导微盟 AI SaaS 产品的推出，并进入内测。2010 年加入百度上海研发中心，负责百度推荐、电商、品牌广告等算法工作。她在本次会议的演讲内容如下：</p><p></p><p>演讲：SaaS + AIGC 产品化与商业化实践</p><p></p><p>微盟产研团队从 2022 年年中开始，推进 AIGC 能力落地到实际应用场景中，包括文生图、文生视频、文生文、自然语言交互等能力，场景也涉及从企业内运营团队和设计团队的提效、赋能，到 SaaS 客户的日常操作、运营洞察、营销辅助等。本次演讲将从产研负责人的视角展开，结合实际业务场景设计、设计背后的思考、应用落地后的内测过程和反馈、基于反馈的启发和优化，阐述 AIGC 在 SaaS 产品中落地的产品化和商业化实践经验，包括电商零售和销售 CRM 等 SaaS 产品，也包括过程中的教训与反思。</p><p></p><p>演讲提纲：</p><p></p><p>一道“高考题”：AIGC 落地到业务产品形态“选择题”：Copilot 还是其他产品能力与大模型的“两人三脚”SaaS AI 与客户互相启发的内测过程与案例WAI 的规划与挑战</p><p></p><p>你将获得：</p><p></p><p>○ 了解微盟作为首批正式发布 AIGC 与 SaaS“多产品形态”、“多应用场景”落地的 SaaS 企业，在产品设计过程中有什么思考与经验</p><p>○ 客户对于 AIGC 的真实使用反馈，并基于此的迭代优化</p><p></p><p>除上述演讲外，QCon 北京还将围绕 <a href=\"https://qcon.infoq.cn/202309/beijing/track/1556?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10\">FinOps&nbsp;落地</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1570?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10\">云原生</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1567?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10\">AIGC&nbsp;浪潮下的研发效能提升</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1558?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10\">业务安全技术</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1552?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10\">面向&nbsp;AI&nbsp;的存储</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1557?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=10\">从&nbsp;BI&nbsp;到&nbsp;BI+AI，新计算范式下的大数据平台</a>\"等进行分享。</p><p></p><p>130+ 名嘉宾、近 30 个精彩专题、8 种交流活动，QCon 北京 2023，相约 9 月！咨询购票请联系 18514549229（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/33/33cbbbf20baa8b2a18db4f0681f159aa.jpeg\" /></p><p></p>",
    "publish_time": "2023-08-25 14:42:43",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "平安银行申请大模型微调方法专利；互联网金融四项国家标准发布；大连银行构建“一云多芯”技术架构｜金融科技资讯",
    "url": "https://www.infoq.cn/article/Zzh0jpqwPdhD3eOspYb7",
    "summary": "<p></p><h3>平安银行申请大模型微调方法专利</h3><p></p><p><a href=\"https://www.infoq.cn/article/DwEzOuzTXhom8J7c0M4L\">平安银行</a>\"申请了一项名为“银行业务中大模型的微调方法”的专利，该方法通过构建微调辅助模型并与大模型结合，使用少量样本数据即可对大模型进行微调，适用于银行不同业务场景。这种方法可以降低大模型在银行业应用中的训练成本，有助于推动大模型在提升银行业务服务质量和数字化转型中的应用。该专利申请体现了平安银行在运用人工智能技术增强银行核心业务能力方面的持续创新与布局。</p><p></p><h3>互联网金融四项国家标准发布</h3><p></p><p>中国互联网金融协会牵头制定的四项互联网金融国家标准正式发布，涉及个人网络消费信贷信息披露、金融行业开源软件测评、<a href=\"https://www.infoq.cn/article/tXdg1xI1YWGYG6iGg4rj\">智能风险防控</a>\"技术要求以及个人身份识别技术要求等方面。这有助于规范互联网金融行业参与主体的行为，提高信息透明度和风险防控能力，保护消费者权益，推动行业规范健康发展。下一步，互联网金融协会将加强标准宣传和培训，促进标准实施。</p><p></p><h3>大连银行构建“一云多芯”技术架构</h3><p></p><p>大连银行通过构建“一云多芯”的技术架构，实现了虚拟化、容器化、微服务等云平台建设，缩短了新业务上线周期，提升了数据处理能力。在此基础上，大连银行打造了面向企业用户的云上服务体验，将金融服务延伸到企业经营管理场景；并利用云计算实现智能风控，提升风险管理水平。“云”力量的应用有效推动了大连银行数字化转型升级，提高了技术核心竞争力。未来大连银行将继续发挥“云”的力量，提升金融服务质量。</p><p></p><h3>迪拜计划向 AI 和 Web3 公司发放商业许可证</h3><p></p><p>迪拜计划向从事人工智能和 Web3 相关业务的公司颁发商业许可证, 以助力企业开展业务并吸引更多投资。许可证由迪拜国际金融中心旗下的 AI 和 Web3 校区负责颁发, 重点面向提供分布式账本技术服务、人工智能研究咨询、IT 基础设施、技术研发和公共网络服务的公司。该举措将有助于推动迪拜在 AI 和 Web3 领域的发展, 并吸引更多投资进入相关行业。</p><p></p><h3>印度央行推出金融科技发展举措,UPI 系统增 AI 语音支付</h3><p></p><p>印度央行最近发布了一系列金融科技发展措施, 其中包括在 UPI 实时支付系统上增加 AI 驱动的语音支付功能, 提供印地语和英语版本, 以方便公众使用。同时, 印度央行正在建立数字平台, 以解决获取信用评估所需数据的困难, 鼓励金融科技公司提供信贷产品。这些举措有助于推动印度金融科技发展, 使金融服务更加便捷和普惠。</p>",
    "publish_time": "2023-08-25 14:47:49",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "特斯拉在华建数据中心；宁德时代新技术或加速淘汰燃油车；一汽获自动驾驶脑机接口技术专利｜汽车技术资讯",
    "url": "https://www.infoq.cn/article/QjClc1Xi6omUWqTWWl9A",
    "summary": "<p></p><h3>特斯拉在华建数据中心：落地自动驾驶关键一步</h3><p></p><p>8 月 14 日，特斯拉透露已在中国建立数据中心，用于存储在华销售车辆生成的数据。这可被视为特斯拉实现自动驾驶商业化迈出的关键一步。据悉，特斯拉的数据中心用于遵守《汽车数据安全管理若干规定》，将中国市场车辆数据本地化存储。作为试点企业，特斯拉将积极配合政府的数据本地化要求。同时，特斯拉还解释了“哨兵模式”的相关情况。该功能属主流智能汽车标配，默认处于关闭状态，需要车主手动开启。开启后，在特定情况下可向车主发出警报并记录视频，但特斯拉无法远程查看。</p><p></p><h3>深蓝与华为联手进军智能汽车赛道</h3><p></p><p>8 月 16 日，深蓝汽车与<a href=\"https://www.infoq.cn/article/H4PBesvZAjeMO1cA6mjy\">华为</a>\"正式签署合作框架协议。双方将在汽车智能化领域开展战略合作，推动汽车智能化技术的研发与应用。深蓝汽车一直致力于打造全场景智慧出行，而华为在智能化领域有着突破性进展，此次强强联手，将共同推动汽车智能化发展，让智慧出行惠及更多人。</p><p></p><h3>宁德时代发布全球首款磷酸铁锂 4C 电池，或将加速淘汰燃油车</h3><p></p><p>8 月 16 日，宁德时代发布全球首款 4C 超充磷酸铁锂电池“神行超充”，实现了快速充电和长续航两大技术突破。该电池充电只需 10 分钟，就可实现续航 400 公里，大幅提升了充电速度。同时，续航里程达到 700 公里以上，满足日常出行需求。此外，新电池抗低温性能优异，在 -10°C 环境下也能 30 分钟快速充电，显著提高电动车在寒冷地区的实用性。通过电解液和隔膜改良, 新电池安全性进一步提升。宁德时代表示，今年底可量产，明年上半年将率先在市场推出。该技术突破意味着超快充电将成为电动车标配，或将加速淘汰燃油车。</p><p></p><h3>百度地图 134 城高级辅助驾驶地图获批</h3><p></p><p><a href=\"https://www.infoq.cn/article/yHLEY0YUbmNtVe7jsyKb\">百度</a>\" Apollo 智能驾驶宣布，百度地图 134 座城市的高级辅助驾驶地图已获国家自然资源部审批，成为首批通过全国高级辅助驾驶地图审核的地图商。该批地图覆盖 30 个省份 134 座城市，实现一、二、新一线城市全覆盖，三线城市覆盖率超 85%。获批后，百度地图高级辅助驾驶地图覆盖道路近 150 万公里，位居行业第一。百度表示，在文心大模型技术支持下，地图制图成本降低 95%，地图制作技术得到大幅提升。百度认为，在当前阶段，高精地图对智能驾驶应用和推广仍不可或缺。百度城市领航辅助驾驶可准确识别交通标志等目标，为用户提供车道级导航服务，目前已在广州、重庆上线。百度地图碾压式的高精地图覆盖，将为智能驾驶的商业化应用奠定基础。</p><p></p><h3>一汽获自动驾驶领域脑机接口技术专利授权</h3><p></p><p>据国家知识产权局公告，中国第一汽车的一项“驾驶能力确定方法”专利近日获得授权。该专利涉及自动驾驶和脑机接口两个领域。专利内容显示，该发明通过获取驾驶员的脑电信号，输入预训练模型进行预测，来确定驾驶员的驾驶能力等级。模型的训练依赖驾驶员的脑电样本数据。背景介绍表示，该技术可以用于自动驾驶领域的脑机接口系统，帮助确定驾驶员和智能机器的控制权重分配。</p>",
    "publish_time": "2023-08-25 14:49:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Amazon CodeWhisperer 初体验，享受AI带来的效率提升",
    "url": "https://www.infoq.cn/article/L7Z4zVvRGPJu1ClFzb7e",
    "summary": "<p>随着Github Copilot在程序员中流行，越来越多的开源项目和大型公司也在代码生成这一领域发力。最近亚马逊就宣布了自家基于亚马逊云科技的代码生成项目CodeWhisperer开放测试，由于还在测试阶段，大家可以在各种IDE上免费体验，享受AI带来的效率提升。</p><p></p><h2>安装</h2><p></p><p></p><p>安装CodeWhisperer非常简单，只需要在插件市场搜索AWS Tookit即可。以VS Code为例：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/53/530e6e6e8402290fdf2fac0b01b8b46e.png\" /></p><p></p><p>安装完成之后侧边栏就会出现一个AWS的图标，点击最下面的DEVELOPER TOOLS登陆，登陆完成之后点击CodeWhisperer，选择开始就可以体验了。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/81/8124c3772458f46b1fc50f8c0065ba38.png\" /></p><p></p><p></p><h2>代码补全体验</h2><p></p><p></p><h4>获取当前时间</h4><p></p><p></p><p>首先我们尝试一个非常简单的例子，用Python获取当前时间：</p><p></p><p><code lang=\"null\">#&nbsp;get&nbsp;current&nbsp;time\nimport&nbsp;time\n\ndef&nbsp;get_current_time():\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;time.strftime(\"%Y-%m-%d&nbsp;%H:%M:%S\",&nbsp;time.localtime())\n</code></p><p></p><p>实际上我们输入第一行的注释，代码助手就会提示我们输入import time，然后我们可以输入函数的定义def，剩下的都可以自动补充完整：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4a/4af3fad54aa867af1a33ed29190ffb95.png\" /></p><p></p><p></p><h4>网页代码修改</h4><p></p><p></p><p>首先我们搭了一个简单的网页，网页上面有两个正方形，分别是橘色和红色的，里面还有一些文字，像是Test和Hello World：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c2/c22af1537a9b09c671524850246f77b0.png\" /></p><p></p><p><code lang=\"null\">\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class=\"test\">Test\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class=\"hello\">Hello&nbsp;World!\n&nbsp;&nbsp;&nbsp;&nbsp;\n\n</code></p><p></p><p>现在，我们需要给Test这个正方形加上阴影，将*Hello World!*这个较长的字符串省略并在后面加上省略号。尝试给出注释：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/76/76b7e6dd29ac625c0b82e3a6985be29d.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b2/b287f6ab64c0a563bd55d0389cb5b230.png\" /></p><p></p><p>这次它生成代码的时间比较长，不过还好最后还是顺利的生成了我们想要的格式：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3a/3a1e1694e3410ced60ed28709e902c9c.png\" /></p><p></p><p></p><h4>算法应用</h4><p></p><p></p><p>首先我们尝试一下经典的快速排序算法，它很顺利的生成出来了：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/60/60cafe1ca0ca916e99d9d7c4aef6b7ec.png\" /></p><p></p><p>基本上是满足了快速排序算法的要求。</p><p></p><p>接着我们挑战一个难一点的，在字符串中找到最长的回文子串。这个问题可以用中心扩展法在O(n ^ 2)的时间复杂度完成，最优的算法是使用马拉车算法（Manacher's Algorithm），其时间复杂度仅为O(n)：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/86/86733b2b685188157ede2763812a9956.png\" /></p><p></p><p>它也很快得到了，不过实践是检验真理的唯一标准，我们来看看它能不能通过LeetCode：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/22/2279034b7b559cd6782bde21e0dba3a5.png\" /></p><p></p><p>一次通过！代码补全还是很强大的，我自己写的时候在循环的部分很容易就写错了。</p><p></p><h4>单元测试</h4><p></p><p></p><p>在日常工作时，我们需要编写单元测试可以在一定程度上保证我们对代码的修改的把握。我们可以对上面的马拉车算法进行单元测试的编写：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/97/97437ceced7f05bc2274233406f257fe.png\" /></p><p></p><p>在Python中我们一般用断言可以完成一些简单的单元测试，这里它给出了一些测试用例。不过我觉得还不够完善，因为s有可能为空或者None，它并没有测试到这些用例。</p><p></p><h2>安全扫描</h2><p></p><p></p><p>安全扫描（Security Scan）&nbsp;是Amazon CodeWhisperer推出的一项崭新的功能。在测试阶段，我们每个月可以使用50次扫描。首先我们可以尝试一下官网的例子：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/87/8771a722970321a1aad9d72c18106c52.png\" /></p><p></p><p>直接报错了。从提示来看，应该是因为在一个大的文件夹进行了安全扫描。所以新建一个文件夹再尝试：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/96/96fed2bd812f19cac47f86d7eb9d9524.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/20/20068b8d08e011bcc4cc53fd7e184b1d.png\" /></p><p></p><p>这次顺利地得到了结果。不过其实这里面应该有两个安全问题，它只能检测到第一个。这是删除之后的扫描结果这时它才能检测到下一个安全问题：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/cd/cd2541bc68a3b92d4f8d9178cb91ed52.png\" /></p><p></p><p>这个功能确实能够检测出一定的安全问题，尝试使用Copilot Chat，它只能傻乎乎的回复一些车轱辘话：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e7/e76f4662f921fedcfec9dea14ee2b25a.png\" /></p><p></p><h2>结语</h2><p></p><p></p><p>总的来说，CodeWhisperer 还是有不少亮点。在代码生成方面几乎不逊色于Copilot，生成的速度可能稍微慢点，质量还是比较优秀。安全检查是这次最与众不同的地方，需要注意的是扫描的文件长度应该有限制，但是官网中没有提到，稍显不足，但是整个功能还是非常有自己的特色的。除了这些，CodeWhisperer比起Copilot还有一个不足是，没有一个理解代码，解释代码的工具。期待后续的功能更新和迭代。</p><p></p><p>版权声明: 本文源自微信公众号【air的代码小屋】未经授权禁止转载，文章转载请联系作者。</p>",
    "publish_time": "2023-08-25 14:54:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]