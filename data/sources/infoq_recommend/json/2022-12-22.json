[
  {
    "title": "Java近期新闻：JDK 20的JEP提升为Targeted状态，AWS推出Lambda SnapStart特性",
    "url": "https://www.infoq.cn/article/ZYvBqLEPNaY4FvJjyopx",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p>JEP 432，<a href=\"https://openjdk.org/jeps/432\">记录模式（第二次预览）</a>\"，已从JDK 20的Proposed to Target状态<a href=\"https://twitter.com/OpenJDK/status/1597674326425096192?cxt=HHwWgMCi1biViqwsAAAA\">提升</a>\"为Target状态。该JEP更新自JEP 405，<a href=\"https://openjdk.org/jeps/405\">记录模式（预览版）</a>\"，更新包括：增加了对通用记录模式类型参数推断的支持；增加了对记录模式出现在增强for语句条件判断中的支持；并删除了对命名记录模式的支持。</p><p>&nbsp;</p><p>JEP 433，<a href=\"https://openjdk.org/jeps/433\">switch模式匹配（第四次预览）</a>\"，已从JDK 20的Proposed to Target状态<a href=\"https://twitter.com/OpenJDK/status/1597674334771810304?cxt=HHwWgMCo7faViqwsAAAA\">提升</a>\"为Target状态。该JEP更新自JEP 427，<a href=\"https://openjdk.org/jeps/427\">switch模式模式匹配（第三次预览</a>\"），更新包括： 简化了switch标签语法；现在， switch表达式和语句以及支持模式的其他构造体都支持泛型类型模式和记录模式的类型参数推断。</p><p>&nbsp;</p><p>JEP 434，<a href=\"https://openjdk.org/jeps/434\">外部函数和内存API（第二次预览）</a>\"，已从JDK 20的Proposed to Target状态<a href=\"https://twitter.com/OpenJDK/status/1597674343168757760?cxt=HHwWgMCitbWWiqwsAAAA\">提升</a>\"为Target状态。该JEP在<a href=\"https://openjdk.java.net/projects/panama/\">Panama</a>\"项目的支持下不断演进：JEP 424，<a href=\"https://openjdk.org/jeps/424?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（预览）</a>\"，在JDK 19中交付；JEP 419，<a href=\"https://openjdk.org/jeps/419?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（第二个孵化器版本）</a>\"，在JDK 18中交付；以及JEP 412，<a href=\"https://openjdk.org/jeps/412?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（孵化器）</a>\"在JDK 17中交付。该JEP提议基于反馈进行改进，并在JDK 20中提供第二次预览。更新包括：统一了 MemorySegment 和 MemoryAddress 接口，即，内存地址由零长度的内存段建模；并且增强了MemoryLayout 密封接口，以便于与JEP 427，<a href=\"https://openjdk.org/jeps/427?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">switch中的模式匹配（第三次预览）</a>\"一起使用。</p><p>&nbsp;</p><p>JEP 429，<a href=\"https://openjdk.org/jeps/429\">作用域值（孵化器）</a>\"，已从JDK 20的Candidate状态<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-November/007225.html\">提升</a>\"为Proposed to Target状态。这个<a href=\"https://openjdk.java.net/jeps/11\">正在孵化</a>\"的JEP，最初名为范围局部变量（孵化器，Extent-Local Variables），由<a href=\"https://wiki.openjdk.java.net/display/loom/Main\">Loom项目</a>\"赞助，提议在线程内部和线程之间共享不可变数据。这优于线程局部变量，尤其是在使用大量虚拟线程时。</p><p>&nbsp;</p><p>JEP 436，<a href=\"https://openjdk.org/jeps/436\">虚拟线程（第二次预览</a>\"），已从JDK 20的Candidate状态<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-November/007223.html\">提升</a>\"为建议Proposed to Target状态。在<a href=\"https://wiki.openjdk.org/display/loom/Main\">Loom项目</a>\"的支持下，该JEP基于JDK 19中提供的JEP 425，<a href=\"https://openjdk.org/jeps/425\">虚拟线程（预览版）</a>\"，提出了第二次的预览，以便有时间为该功能的演进提供更多的反馈和经验。需要注意的是，除了少量在JDK19中被固化的JEP 425 API外，本预览版本没有进行任何更改，因此没有在第二次预览中提出。</p><p>&nbsp;</p><p>JEP 437，<a href=\"https://openjdk.org/jeps/437\">结构化并发（第二个孵化器）</a>\"，在JDK 20中从Candidate状态<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-November/007224.html\">提升</a>\"为Proposed to Target状态。该JEP也是在<a href=\"https://wiki.openjdk.org/display/loom/Main\">Loom项目</a>\"的支持下，提议基于从JDK 19中提供的JEP 428，<a href=\"https://openjdk.org/jeps/428\">结构化并发（孵化器）</a>\"中重新孵化该特性，以便有时间提供更多的反馈和经验。唯一的变化是更新了 StructuredTaskScope 类，以支持在任务作用域中创建的线程继承作用域值。这简化了跨线程不可变数据的共享。</p><p>&nbsp;</p><p>这三个JEP的审查将于2022年12月6日结束。</p><p>&nbsp;</p><p></p><h4>JDK 20</h4><p></p><p>JDK20<a href=\"https://jdk.java.net/20/\">早期访问构建版本</a>\"中的第<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B26\">26</a>\"版也已于上周发布，其中包括对第25版各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2020%20and%20%22resolved%20in%20build%22%20%3D%20b23%20order%20by%20component%2C%20subcomponent\">问题</a>\"的修复和<a href=\"https://github.com/openjdk/jdk/compare/jdk-20%2B22...jdk-20%2B23\">更新</a>\"。有关该版本的更多详细信息，请参阅<a href=\"https://jdk.java.net/20/release-notes\">发</a>\"<a href=\"https://jdk.java.net/20/release-notes\">布</a>\"<a href=\"https://jdk.java.net/20/release-notes\">说明</a>\"。</p><p>&nbsp;</p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/20/\">JDK 20</a>\"，鼓励开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java缺陷数据库</a>\"报告缺陷。</p><p>&nbsp;</p><p></p><h4>JavaFX 20</h4><p></p><p>JavaFX 20<a href=\"https://jdk.java.net/javafx20/\">早期访问构建版本</a>\"中的<a href=\"https://github.com/openjdk/jfx/releases/tag/20%2B10\">第10版</a>\"已提供给Java社区。JavaFX专为使用JDK 20早期访问构建版本而设计，应用程序开发人员可以在JDK 20上使用JavaFX 20构建和测试其应用程序。</p><p>&nbsp;</p><p></p><h4>Spring框架</h4><p></p><p><a href=\"https://spring.io/projects/spring-integration\">Spring Integration</a>\"&nbsp;6.0已<a href=\"https://spring.io/blog/2022/11/29/spring-integration-6-0-goes-ga\">发布</a>\"，其特性包括：JDK 17和Jakarta EE 9基线；支持GraalVM和Spring AOT引擎的原生镜像；具有千分尺和千分尺跟踪的可观测性仪器；以及对Jakarta EE 10的支持。有关该版本的更多详细信息，请参阅<a href=\"https://docs.spring.io/spring-integration/docs/current/reference/html/whats-new.html#whats-new\">最新动态页面</a>\"。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-vault\">Spring Vault</a>\" 3.0也已<a href=\"https://spring.io/blog/2022/11/28/spring-vault-3-0-goes-ga\">发布</a>\"，其特点包括：JDK 17基线；支持额外的HTTP客户端，包括响应式JDK HTTP客户端；并支持使用版本化密钥/值机密引擎的Vault存储库。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/spring-vault/wiki/Spring-Vault-3.0-Release-Notes\">发布说明</a>\"。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-cloud\">Spring Cloud</a>\"&nbsp;2022.0.0的<a href=\"https://spring.io/blog/2022/12/02/spring-cloud-2022-0-0-release-candidate-3-codename-kilburn-has-been-released\">第三个候选版本</a>\"，代号为Kilburn，已向Java社区提供。该版本提供了对Spring Cloud子项目RC3版本的更新，如：Spring Cloud OpenFeign 4.0.0、Spring Cloud Commons 4.0.0、SpringCloud Function 4.0.0和Spring Cloud Starter Build 2022.0.0。但是，由于Spring Cloud CLI、Spring Cloud for Cloud Foundry和Spring Cloud Sleuth等子项目的移除，也引入了一些破坏性的更改。Spring Cloud 2022.0.0-RC3要求Spring Boot 3.0.0。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2022.0-Release-Notes\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>亚马逊云科技</h4><p></p><p>在最近的<a href=\"https://reinvent.awsevents.com/\">re:Invent</a>\"大会上，亚马逊云服务为其<a href=\"http://aws.amazon.com/lambda/\">AWS Lambda</a>\"项目<a href=\"https://aws.amazon.com/blogs/aws/new-accelerate-your-lambda-functions-with-lambda-snapstart/\">推出了</a>\"一项新特性<a href=\"http://docs.aws.amazon.com/lambda/latest/dg/snapstart.html\">Lambda SnapStart</a>\"，旨在减少Java函数的冷启动，并加速Lambda函数。<a href=\"https://quarkus.io/blog/quarkus-support-for-aws-lambda-snapstart/\">Quarkus</a>\"和<a href=\"https://micronaut.io/2022/11/28/leveraging-aws-lambda-snapstart-with-the-micronaut-framework/\">Micronaut</a>\"已经实现了对Lambda SnapStart的支持。更多详细信息请参阅<a href=\"https://www.infoq.cn/theme/164\">InfoQ的新闻报道</a>\"和亚马逊云科技<a href=\"https://aws.amazon.com/blogs/compute/reducing-java-cold-starts-on-aws-lambda-functions-with-snapstart/\">博客文章</a>\"。</p><p>&nbsp;</p><p></p><h4>Quarkus</h4><p></p><p>红帽（Red Hat）<a href=\"https://quarkus.io/blog/quarkus-2-14-2-final-released/\">发布</a>\"了Quarkus 2.14.2和2.13.5版本，主要修复了CVE-2022-4116漏洞，CVE-2022-4116是Dev UI配置编辑器中的一个漏洞，容易受到本地主机驱动攻击，导致远程代码执行。该版本还加强了对跨源资源共享（CORS）的处理，包括在CORS请求因来源无效而被拒绝时将 200 OK 更改为 403 FORBIDEN 。有关这些版本的更多详细信息，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.14.2.Final\">2.14.2版</a>\"和<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.13.5.Final\">2.13.5版</a>\"的发布说明。</p><p>&nbsp;</p><p>在通往Quarkus 2.15.0的道路上，<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.15.0.CR1\">第一个候选版本</a>\"也提供了新特性，比如：与Quarkus CRaC/Firecracker的集成；将gRPC扩展迁移到新的Vert.x gRPC实现；使用Panache扩展支持在REST数据中根据命名查询进行过滤；以及对GraalVM 22.3.0、Mandrel 2.13和SmallRye GraphQL 1.9.0的依赖项升级。</p><p>&nbsp;</p><p></p><h4>Apache Camel</h4><p></p><p><a href=\"https://camel.apache.org/\">Apache Camel</a>\"&nbsp;3.18.4已<a href=\"https://camel.apache.org/blog/2022/12/RELEASE-3.18.4/\">发布</a>\"，对Spring Boot 2.7.6和HyperSQL DB 2.7.1进行了27个bug修复、改进和依赖项升级。有关该版本的更多详细信息，请参阅<a href=\"https://camel.apache.org/releases/release-3.18.4/\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>JHipster</h4><p></p><p>在<a href=\"https://www.jhipster.tech/\">JHipster</a>\"，已经开始将平台升级到Spring Boot 3.0。Okta的开发人员倡导者、Java Champion和JHipster开发团队成员<a href=\"https://www.linkedin.com/in/mraible/\">Matt Raible</a>\"提供了团队迄今为止遇到的问题的<a href=\"https://twitter.com/mraible/status/1597248481596706816?cxt=HHwWgMDUuYHCyKosAAAA\">最新情况</a>\"，即：<a href=\"https://github.com/reactor/BlockHound/blob/master/README.md\">BlockHound</a>\"需要一个新的<a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html\">WebFlux</a>\"的入口；健康检查在Elasticsearch 8+中不起作用；MongoDB和WebFlux与JUnit和MongoDB驱动程序4.2+死锁。有关这些问题的更多详细信息，请参阅此GitHub<a href=\"https://github.com/jhipster/generator-jhipster/pull/19791\">拉取请求</a>\"。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/12/java-news-roundup-nov28-2022/\">https://www.infoq.com/news/2022/12/java-news-roundup-nov28-2022/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/ATGFHsJa5HqNroEuNBLd\">对话Spring大神：Spring 生态系统的新时代来了！</a>\"</p><p><a href=\"https://www.infoq.cn/article/GGdb3Y7cO9Pw2Bf8NfIW\">Java 新闻汇总：Spring 发布，Resilience4j，Open Liberty，GlassFish，Kotlin 1.8-Beta</a>\"</p>",
    "publish_time": "2022-12-22 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]