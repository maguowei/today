[
  {
    "title": "实时分析全面赋能金融业务，马上消费基于 Apache Doris 构建实时数仓的技术实践",
    "url": "https://www.infoq.cn/article/d0m00wIHNWVkoFjJ8cVi",
    "summary": "<p></p><blockquote>作者：马上消费 陈政编辑整理：SelectDB</blockquote><p></p><p></p><p>导读： 近年来，马上消费的业务体量呈飞跃式增长，每天产生数据可达上千亿条，如何更高效挖掘这些数据的价值，成为了其必须要面临的挑战。随着各业务对实时数据分析的需求越来越强烈，马上消费于 2021 年引入 <a href=\"https://github.com/apache/doris\">Apache Doris</a>\" 构建实时数仓，目前已服务 10+业务团队的数据应用，99% 以上的查询响应耗时在 5 秒内，数据时效延迟均不超过 1 分钟，解决了其对于实时数据分析的强烈诉求，最终效果得到各业务部门的认可与肯定。</p><p></p><p>马上消费金融股份有限公司（简称“马上消费”）是一家经中国银保监会批准，持有消费金融牌照的科技驱动型金融机构。秉承“科技让生活更轻松”的使命，马上消费以用户为中心，聚焦普惠金融，通过科技赋能创新，致力于打造成为全球最被信赖的金融服务商，为有金融服务需求的社会各阶层和群体提供小额分散的消费金融服务。</p><p></p><p>自2015年6月正式开业至今，马上消费的业务体量呈飞跃式增长，截止目前品注册用户数达到一亿多。作为一家面向 C 端用户的互联网金融企业，我们不断在探索数据提升客户体验、数据驱动业务增长的方式，关注数据要素升级对生产关系所带来的深远影响。</p><p></p><h1>业务需求</h1><p></p><p></p><p>基于业务需要，马上消费内部自主研发了 400 多套与零售信贷相关的系统，同时与外部合作方多套系统进行对接，来服务整个业务链路的流转。这些系统源源不断的产生数据，每天可达上千亿条。如何更高效挖掘这些数据的价值，成为了我们必须要面临的挑战。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8f/8f837a3f4c46c0660fc53ef1beef1fea.png\" /></p><p></p><p>在正式建设<a href=\"https://www.infoq.cn/article/26ICMg30p0LS8UY8rbrw\">实时数仓</a>\"之前，业务上的数据应用以离线为主，用户使用 T+1 的数据来做数据建模和分析，依托数据进行业务决策，并回流到业务系统中。但随着业务体量的飞跃式增长、以及业务模式的不断优化升级，我们对数据分析的实时性提出了更高诉求，主要包括两类：</p><p></p><p>数据时效的实时。相比过去 T+1 的模式，希望在分析时的数据包含近 10 分钟以前的新增内容。查询响应的实时。 数据的查询响应要足够快，最好能在几秒钟甚至毫米级返回结果。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/26/26b9f9b33f696d787bde89e4536c35e6.png\" /></p><p></p><h1>早期架构</h1><p></p><p></p><p>早期公司内统一的大数据平台，构建在传统的 <a href=\"https://www.infoq.cn/article/8kwSM0CaUVYW1EzeO7GT\">Hadoop 体系</a>\"之上，以服务离线数据分析为主，缺乏统一的实时数据平台。每天晚上集中抽取业务数据到 Hive 表中，通过离线调度任务完成数据加工后，提供给用户做数据查询和分析。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9a/9aa39943e5fffbc8f324b460774c41b4.png\" /></p><p></p><h2>Hadoop 离线架构的不足</h2><p></p><p></p><p>这套技术架构对离线数据业务有较好的支撑，但在应对更广泛的实时分析场景时，痛点也很明显：</p><p></p><p>数据的时效性不足。平台中的 Hive 表，都是 T+1 的数据，没有当日最新数据。用户若想在平台上分析当日最新业务情况，简直是无米之炊，业务决策的准确性和及时性很难得到提升。数据查询效率不足。用户查询 Hive 表的数据时，通常需要等待数十秒甚至数分钟才能返回结果，工作效率受限。虽然也引入了 Presto、Spark 等计算引擎来提升查询效率，但查询效率的提升始终不理想，并且资源消耗也比较大。数据维护成本高。离线数据从采集到加工，链路复杂耗时长，任何一个环节出问题都将影响数据的及时产出。另外，当需要修复历史数据、或者是调整数据计算逻辑时牵涉面广，更是费时费力。除此之外，常规的离线数仓分层模型也带来一些问题，所有数据都是单独一份物理表，导致衍生出来的表数量庞大、存储消耗不低。技术成本较高。围绕 Hadoop 体系构建的平台，组件依赖较高，动辄需要数十种基础组件组合起来，才能满足不同功能需要。每一种组件复杂度都很高，各自难免存在一些缺陷，需投入大量的人力物力去维护。</p><p></p><h1>探索之路</h1><p></p><p></p><p>在公司没有统一建设实时数仓之前，部分业务团队为了满足实时数据分析的需要，也曾各自做过一些努力，但受限于实施的复杂度，基本都只局限在极少数特殊业务。</p><p></p><p>有的团队采用过相对粗暴的解决方式，直接在业务系统 MySQL 上面查询最新的数据，虽然查询速度慢但可以保证是实时数据，但对于跨数据库实例的关联分析，使用这种方式很难解决；有的团队采用过相对进阶的方式，将数据实时同步到 Elasticsearch、HBase 中，在其中完成简单的数据分析；有的团队也采用过较前沿的方式，使用 Flink 之类的流式计算框架，对流式数据进行预计算之后写入 HBase、ES 等存储，供用户和系统访问。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d6/d6c922a47bf7a59547c32dc9dd49cff4.png\" /></p><p></p><p>以上各业务团队对实时数据分析的分散式初步探索中，也发现了一些问题：</p><p></p><p>对分析的支持很不灵活。MySQL、ES、HBase 等存储组件，各自擅长的领域不同，对大规模数据的 OLAP 查询并不友好。用户要么只能用于简单的单表数据分析场景，要么需要设计很复杂的数据模型和数据处理逻辑来实现复杂的分析需求，这使得研发和维护成本非常高，需求交付时间很长。重复建设带来资源浪费。各业务团队采用零散的方案去解决需求，各自搭建 ES、HBase 小规模集群，资源利用率低，并投入技术学习成本，最终却很难共享复用。另外，不同团队的业务分析中都会用到账务、审批等核心数据，最终造成数据的重复拉取和存储。数据服务质量难以保障。数据通过不同的链路、不同的写入方式到达目标端供查询，服务链路的稳定性难以保障，导致数据的准确性、完整性、一致性等质量问题频发，各团队花费了大量精力也难以很好地保障整体数据服务质量。</p><p></p><h2>架构选型</h2><p></p><p></p><p>从我们当前大数据整体架构来看，实质上只需对原有架构做一些扩充和改造即可实现当前的需求。我们已有的平台产品，比如流式计算平台、数据交换平台等，已经足够支撑实时数据的采集和处理，这也为我们构建实时数仓奠定了良好基础。因此，我们当前较为迫切的是需要补充一款综合能力强劲的分析型数据库来解决问题。</p><p></p><p>对于这类分析型数据库，我们有一些基本诉求：</p><p></p><p>支持分钟级别延迟的数据近实时写入（insert）、更新（update）、删除（delete）；支持标准 SQL 语法来查询和分析数据，以及常用的函数；千万级别数据量的多表关联查询，能够在秒级别返回结果；存储容量和并发支持能够横向扩展；既能较好支持 OLAP 查询，也能根据主键查询数据毫秒级响应；具备一定的数据聚合模型或物化视图的能力，加速查询；</p><p></p><p>围绕以上基本诉求以及业务需求，我们对业界主流的商业和开源组件进行了调研，包括 Clickhouse、Doris、TiDB、Druid、Kudu、Kylin、Hologres 等产品。我们做调研的时间截止在 2020 年底，在这个时期内主流 OLAP 引擎或数据库都有其各自的优势与短板。我们对调研产品的功能特性和原理方面进行了分析对比，也对部分组件做了性能等方面的 POC 测试，最终决定引入 Apache Doris 作为我们实时数仓的基座。</p><p></p><p>我们对新技术的引入一直比较审慎，<a href=\"https://www.infoq.cn/article/XribUAr1cpdDALrNVN59\">Apache Doris</a>\" 以其全面的功能和极速的性能表现吸引了我们。自 2017年开源之后被小米、美团、链家、搜狐等数十家互联网知名企业引入使用。在 2018 年捐献到 Apache 基金会之后更是一路高歌猛进，各项核心能力大幅增强，并在 2022 年 6 月升级为 Apache 顶级项目，截止 2022 年底，Apache Doris 已被全球 1000 多家企业生产系统使用。它的几大重点能力对我们而言非常适用：</p><p></p><p>简单易用：其架构简洁只有两个进程服务，不依赖其他系统，部署和运维管理简单；使用标准 SQL 做数据查询，兼容 MySQL 协议;极致性能：依托现代化的 MPP 架构、列式存储、预聚合视图、数据索引等实现，在低延迟和高吞吐查询上达到了极速性能；统一数仓服务：一套平台系统，可同时支持实时数据服务、交互式数据分析等场景；支持联邦查询：支持对 Hive、MySQL、Elasticsearch 等数据库的联邦查询分析能力；</p><p></p><h1>新架构演进</h1><p></p><p></p><h2>技术架构升级</h2><p></p><p></p><p>各业务对实时数据分析的需求越来越强烈，但原有技术架构并不能很好的支撑当前的需求。在分析各业务的需求和痛点之后，我们决定对架构进行升级演进，构建公司级统一的实时数仓平台。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3d/3dc761f536b901397d9dc174a5054594.png\" /></p><p></p><p>在选定 Apache doris 作为我们的实时数仓底座之后，我们规划并构建了统一的实时数据服务链路。一方面我们以 Apache Doris 为核心，将实时增量数据、历史存量数据整合到 Doris 内提供极速查询服务；另外我们对数据交换平台、流式计算平台、消息服务总线、元数据中心、数据服务平台等都做了适配改造；最终达到实时数据统一采集、统一分析、统一服务的目标。</p><p></p><p>同时对于整个大数据平台而言，我们也在离线数据平台之外扩充了实时数据服务能力，进一步增强了大数据平台对不同业务场景的支撑能力，完善了大数据技术架构蓝图：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b3/b3e018301e9c8506f0b352bb46ca38b3.png\" /></p><p></p><h2>架构升级的落地</h2><p></p><p></p><p>我们对实时数仓的建设目标绝不仅仅是部署一套 Doris 数据库，当然也不是一朝一夕可建设成熟，只有诸多与之配套的能力逐步完善后，才能真正高效保质的运转起来。只不过，Doris 在我们实时数仓的建设中至关重要。</p><p></p><p>围绕新的实时数据架构，我们做了大量的配套工作：</p><p></p><p>实时数据的采集交换。 将实时数据采集到 Doris 中去。我们在现有数据交换平台上扩展功能，支持 MySQL Binlog 实时数据的采集和分发，并能在源头上对分库分表数据进行合并，以便下游处理。同时新增 Hive 到 Doris 的数据批量导入功能，解决大量历史数据需要加载到 Doris 库表的问题。实时消息服务总线。 不管是采集自 MySQL 的 Binlog 数据，还是应用埋点上报的数据等，均制定统一的数据格式，同时提供标准 SDK 来保障数据的规范性。另外对于消息数据，我们增加了消息元数据中心服务，来方便上下游对数据 Schema 的解析与演变。源端的实时数据，由专人负责接入到统一的 Kafka 中，共享给下游各类业务使用，避免数据被重复接入。扩展流式数据的处 理。我们的流式计算平台底层基于 Flink，为方便用户解析统一的消息数据，我们扩展了Flink SQL 函数以及 Kafka Connector。由于当时社区并未提供 Flink 跟 Doris 的读写连接器，我们自研了 Flink Doris Connector，并保障数据写入的 Exactly Once语义，性能上也压测到单表最大 20 万 QPS 的吞吐。增强 Doris 的服务能力。我们部署多个 FE 节点提供服务，面向访问端我们基于 Nginx 反向代理来实现不同 FE 节点之间的负载均衡、故障转移。扩展 Bitmap、字符串解析等函数，方便用户分析数据。Doris 各节点上的日志，统一集成到 ELK 供查询，以及将性能指标集成到 Grafana 实现监控告警。期间偶尔触发到 Doris 的缺陷也对其进行修复（或通过升级 Doris 版本的方式解决），比如数据写入过于频繁时，个别表 Tablet 与 Partition 中的版本元信息不一致导致查询异常，以及 FE 节点 HTTP 接口的兼容性 Bug 导致启动时拉取元数据失败等等。完善实时数据研发规范。 在 Doris 之上的数据模型设计、数据开发方式，相比常规的离线数仓都有较大区别。我们对于数据采集、数据表模型选择、数据域划分、分区分桶策略、数据生命周期、数据权限分配、各数据团队分工等方面都制定了规范，一方面期望实时数仓的数据从一开始就能够有序组织和管理，同时也罗列一些技术规范让开发者有据可循，达到性能最优，少走弯路。</p><p></p><h1>业务实践</h1><p></p><p></p><p>自 2021 年引入 Apache doris 之后，我们小步快跑，快速在一些业务场景中得到实践，初具效果。目前我们线上 Doris 集群有 50 个 BE 节点，已接入将近 800 个数据表，支撑每天约 5 万余次的查询分析；服务于 10 多个业务团队的数据应用，在其之上产出的数据报表、数据接口大约在 300 个左右；99% 以上的查询响应耗时在 5 秒内，数据时效延迟均不超过 1 分钟。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8a/8a4fb2ffa002d6c8d0fd985f7cff95ac.png\" /></p><p></p><p>一些重点业务在对接实时数仓之后，均取得了不错的效果，比如几个典型的业务场景：</p><p></p><p>广告投放：营销团队观察不同广告投放渠道、素材等维度的曝光、花费及用户转化情况，及时调整资金投放策略；风控策略评估：风控团队基于实时提现通过率等审批指标，判断审批策略效果，及时优化策略保障审批质量；消保降诉：运营团队基于话务、客户关系相关实时数据指标，分析电销运营质量及关键事件，保障客户服务质量；资管业务：资管团队基于现场过程实时数据、实时质检合规敏感词、实时催收投诉提供资管质检实时业务监控分析服务；科技大屏：各大部门基于大屏实时展示和监控业务及技术指标，例如风控大屏、资管大屏、人工智能大屏等；</p><p></p><p>虽然各个业务场景关注的数据指标不同，数据处理逻辑不同，但围绕 Doris 的数据开发模式基本一致。我们通过自研的工具将不同来源的数据实时投递到 Kafka，用户使用 Flink SQL 消费 Kafka 数据后写入 Doris，在 Doris 中按照经典的数仓分层模型来组织数据。Doris 作为我们数据链路的末端，被报表工具、业务系统直接访问，快速查询数据。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1b/1b9c46c8f170cb18243831b386964a2d.png\" /></p><p></p><p>在我们围绕 Doris 的实时业务实践过程中，也探索了一些不一样的实时数据开发模式：</p><p></p><p>数据不直接同步到 Doris。我们并没有选择将源头实时数据直接同步到 Doris，而是先把所有数据都集中发送到了 Kafka，启动一些 Flink 任务消费数据写入 Doris。这样做主要有两方面的考虑，一是 Kafka 中的数据可被重复利用，除了消费数据写入 Doris，其他特殊业务也可消费后流转到其他流程中，避免实时数据重复采集；二是数据在写入 Doris 之前，我们的 Flink 任务可预先做一些数据清洗或者聚合，尽量减少在 Doris 中再次处理。上层尽量使用视图表。 我们对公司的核心数据做了主题分类，遵循维度建模的思想把数据也分为了ODS、DWD、DWS、ADS 等层次，每一层的数据的聚合维度不同。区别于离线数仓的数据加工模式，我们围绕 Doris 的实时加工方式有较大不同：我们基本只有 ODS、DWD 层的数据是物理表，DWS、ADS 层中的数据主要为视图表。这样做的初衷也很简单，就是想减少传统方式的层层数据预处理，最大化利用 Doris 的极速分析能力直接从明细表中分析数据。这样做有几个大的收益，一是物理表数量少了，降低了存储开销；二是减少了大量的数据预处理计算任务，资源消耗低、维护成本低、业务交付速度快；三是上层数据基于视图表，当业务规则变化时，快速重建视图逻辑即可，无需把层层数据再重新处理一遍，简单高效。计算逻辑尽量交给 Doris。在没有 Doris 之前，比如 Flink 结合 HBase 的架构，我们通常会在 Flink 任务端做大量的数据预处理（包括复杂的流表关联、维度聚合、窗口计算）。而在引入 Doris 之后，我们将数据计算逻辑尽可能的转移到 Doris 内，Flink 只承担简单的数据读写与转换。这对数据开发者来说无疑会更友好，毕竟对于普通开发者来说 Flink 的门槛较高，比如对延迟数据的处理、历史数据回溯等方面很难控制。当然，我们会对数据的体量和分析复杂度做综合考虑，在必要时仍会在 Flink 端对数据先做聚合，灵活调整。合理利用 Doris 特性。我们期望基于 Doris 自身的极致查询性能，来降低数据加工链路的复杂度，提高需求交付效率。但任何数据库或计算引擎的性能，都受其自身设计、集群规模、数据规模、计算复杂度的综合影响，Doris 性能虽然很优越但也不是万能。我们尽量合理使用 Doris，来让他的性能表现更好，比如合理设计表的分区分桶、设定数据清理周期、主键字段的类型等；ODS 和 DWD 层的数据优先使用 Unique 模型，部分大表配套建立 Rollup 表；查询语句的 Join 关联注意大表在左小表在右，合理使用 Runtime Filter 等。</p><p></p><h1>总结与展望</h1><p></p><p><img src=\"https://static001.geekbang.org/infoq/d1/d1818df9ea89032fae0757ddbf89ff8a.png\" /></p><p></p><p>自 2021 年引入 Doris 构建实时数仓以来，很多以前只能使用头一天数据做离线分析的业务，纷纷尝试以新的方式来完成实时数据分析、制作实时数据报表。在新的实时数据架构下，数据分析的时效性有了极大的提升，不同类型用户均从中获得收益：</p><p></p><p>对于业务人员、数据分析师、决策者，他们能够基于最新的数据，更快速的洞察业务状态，及时调整业务策略；对于数据开发者，实时数据的开发变得更简单，以前需要花费好几天才能完成的工作，现在只需一天甚至半天时间即可完成；对于实时平台管理方，数据的存储成本、系统的运维成本、业务的运营成本均得到一定程度的降低。</p><p></p><p>技术和数据服务业务的脚步永不停歇，当业务与数据规模持续变化后，新的技术挑战必然又会产生。在当前环境下，不管是解决现有问题、还是为将来做准备，我们还有很多工作需不断深入：</p><p></p><p>Doris 能力的增强。由于引入 Doris 较早，我们升级几次之后停留在 0.15.3 版本，对比社区 1.1.4 版本和即将发版的 1.2  版本差距太大。新版本在性能和稳定性上都有了巨大的提升，比如向量化引擎等、Hudi 数据查询等，版本升级是我们近期首要的计划。另外 Doris 即将发布的版本将支持跨集群数据复制、存算分离的能力，我们的核心业务对这些需求也非常强烈，后续我们将联合社区一同完善，推进落地应用。生态系统的完善。Doris 成为了我们实时数仓的主力数据库，但同属于我们大数据生态的一部分，数据安全、数据质量等要素也是需要被共同关注的内容。原有元数据管理、数据质量、数据安全、运维监控等平台侧重对离线 Hadoop 体系数据的管理，需进一步扩展，支持将 Doris 链路的实时数仓纳入统管。另外尤其是面向数据开发者、数据分析用户，优化数据开发流程和工具，让大家获得更好的体验。更多业务的覆盖。一方面源自于业务侧旺盛的需求量，另一方面我们也期待基于 Doris 的实时数仓体系能够发挥更大的作用，在数据的接入数量和数据模型上，能够支撑到更多的业务域。在服务的应用类型上，除了传统的报表应用，也能支撑更多偏中后端的数据产品，比如用户行为分析平台等。</p>",
    "publish_time": "2023-02-07 10:17:29",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "每天工作超17个小时后，马斯克称终于把Twitter从“破产”边缘拉回来了",
    "url": "https://www.infoq.cn/article/GV2p2VQyx4G2yoQmqJPZ",
    "summary": "<p>2月6日，马斯克在Twitter上发文称，过去的三个月非常艰难，不得不在履行特斯拉和SpaceX的基本职责的同时，还要努力将Twitter从“破产”中拯救出来。Twitter仍然面临挑战，但现在有达到收支平衡的趋势。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f4/f428e7e0fb6d79f1855ed76d53a855e7.png\" /></p><p></p><p>去年10月，马斯克以440亿美元的价格收购了Twitter，回忆接手Twitter的几个月里，马斯克称，这是“极其艰难的”，“我不希望任何人遭受这种痛苦。”他还表示：“Twitter仍然面临挑战，但如果我们坚持下去，它现在有实现收支平衡的趋势。非常感谢公众的支持。”</p><p></p><p>收购Twitter后的一个月，马斯克曾在一档访谈节目中透露，自从10月收购Twitter之后，马斯克的工作时长已经从80小时跃升至120小时。算上周末，马斯克平均每天工作超17个小时。</p><p></p><p>“我睡觉，起床，工作，睡觉，起床，工作…就这么一周七天循环，必须得这么做一段时间，没别的选择。但等Twitter走上正轨，管理特斯拉和Space X要容易得多。”</p><p></p><p>马斯克不止这么要求自己，也这么要求手下员工。</p><p></p><p>收购Twitter后，他明确告诉Twitter员工：要么接受高强度工作，要么走人。甚至直接把Twitter的几间办公室改造成了卧室，方便员工通宵加班。</p><p></p><p>2018年，他在一条推文里写道：“世界上有很多不那么卷的公司，但没人能靠一周工作40小时改变世界。”</p>",
    "publish_time": "2023-02-07 10:50:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "低代码编程及其市场机遇剖析 | 低代码技术内幕",
    "url": "https://www.infoq.cn/article/Us10TOa418u2xwfZ19Gp",
    "summary": "<p></p><blockquote>自 2020 年来，网易数帆探索可视化低代码编程已两年有余，打造了轻舟低代码平台用于企业应用开发。然而，不少编程技术人员对这一领域还比较陌生。我们开设《低代码技术内幕》专栏，旨在讨论低代码编程领域中的困难、问题，以及高效的解决方案。本文为第一篇，深度剖析低代码编程带来的机遇。</blockquote><p></p><p></p><p>据说早期人类语言只有“听说”系统，后因国家税收之需，又演化出了“读写”系统。而读写相较于听说的方式，有易于复制传播、歧义少、保存持久等优点……类似的，早期用于人机交流的程序语言只有“字符”系统，现在因为某些诉求，市场上涌现出一批“可视化低代码”系统。什么是低代码，它有哪些优势，我为什么要学习、使用它？低代码未来的市场是怎样的？ 本文重点描述低代码未来 5~10 年的广阔市场 ，但仍循序渐进，从概述低代码编程的历史发展开始。（所以想要了解市场规模和前景的读者，请直接跳转到<a href=\"https://www.infoq.cn/article/Us10TOa418u2xwfZ19Gp#market\">低代码的市场和机遇</a>\"部分）</p><p></p><h2>低代码定义：发展与变迁</h2><p></p><p></p><p>提高生产效率是人类永恒的主题。正因此，我们认为广义的低代码编程，取其字面意思，应当是指在某个时间段内，完成项目所需的代码量（大幅）低于其他语言（平均值）的编程模式。无独有偶，我们的认知与&nbsp;<a href=\"https://www.itprotoday.com/no-codelow-code/evolution-low-codeno-code-development\">ITPro Today</a>\"相合 [1]：文中描述 Fortran 和 COBOL 在&nbsp;1950 年代刚出现时，它们作为高级编程语言的始祖，是那个年代里不折不扣的低代码编程语言——即便现在大多数的编程人员已经不这么认为。文章 [1] 还表示，1987 年苹果公司开发的&nbsp;<a href=\"https://zh.wikipedia.org/wiki/HyperCard\">HyperCard 编程语言</a>\"（尽管不为大多数人所知）是低代码发展中的一个里程碑。HyperCard 融合了一套图形化 、可扩展、可编辑的接口和数据库功能，它的部分设计理念与微软的 Visual Basic 相似，但早于后者 4 年发布。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/41/9d/41a40fe4f4a757f7192bd6540e1f259d.png\" /></p><p></p><p>图 1：HyperCard 图标。图片来源：<a href=\"https://en.wikipedia.org/wiki/HyperCard\">维基百科</a>\"。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/73/bc/73641126bdee7489bd883fab1afb9abc.png\" /></p><p>图 2：HyperCard 界面。图片来源：<a href=\"https://osxdaily.com/2017/05/27/run-hypercard-macos-web-browser-emu/\">OSXDaily</a>\"。</p><p></p><p>1990 年代，随着第四代编程语言（SQL、MATLAB、Clipper 等）的发展与成熟以及高效的应用程序开发工具如 Visual Studio，Delphi 等的横空出世，UML + 设计器 + MDD 红极一时，模型驱动设计、自动代码生成和可视化开发思想成为了当年低代码开发的核心 [2]。直到这时为止，低代码的核心诉求都是提高专业开发人员的开发效率 。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/c0/3a/c06f6b2e8b58e776f79b4cd32f63d33a.png\" /></p><p>图 3：UML 设计图</p><p></p><p>2010 年代，低代码的核心诉求发生剧烈变化，开始向“让业务专家将自己的专业知识和经验落地成在线应用 ”转移 [2]。很多公司没有经费聘用专业的开发人员，因此希望业务专家经过一定的培训也可以上手开发应用，这些应用很大一部分是用于市场营销、销售的，也比较同质化，容易从统一的模板中搭建出。由此，便有了我们所熟知的在当前时代背景下的（狭义）的低代码编程，国际上最具有影响力和代表性的产品有 OutSystems、Mendix、MicroSoft Power Apps 等，这些产品具有以下特点 [3]：</p><p>为让非专业编码人员易于使用，配备了完善的可视化开发框架，不仅提供可视化开发前端、UI 的能力，还提供可视化开发复杂逻辑 的能力：无需记忆编程语言的语法，通过拖拽和点击即可实现业务功能。提供完整的前后端、数据库、部署、运维等解决方案，屏蔽了前端（HTML、JS、Vue / React 等）、后端（NodeJs 或 Java + SpringBoot 等）、数据库（SQL 或 MongoDB 等）、云服务等技术，无需点击，即开即用。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/34/33/349af93ee00f46f43a3885d7ee644233.png\" /></p><p>图 4：OutSystems 可视化逻辑。图片来源：轻舟低代码团队为什么要做编程语言？</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/91/69/919a5ce0ca153e59911628548b25c369.jpeg\" /></p><p>图 5：轻舟低代码可视化逻辑。图片来源：轻舟低代码团队为什么要做编程语言？</p><p></p><p>了解了低代码的大致历史后，我们便知道它并不是先有定义再发展起来的事物 [2]：它的定义随着时代发展而变化，以反应当前时代市场的诉求。因此，我们不妨援引西门子 Mendix 的定义来概述 21 世纪 20 年代的低代码：低代码开发是一种可视化应用开发方法。通过低代码开发，不同经验水平的开发人员能够通过图形用户界面，使用拖放式组件和模型驱动逻辑来创建 Web 和移动应用。了解了低代码的概念后，我们来看看低代码在未来 5~10 年的广阔市场。</p><p></p><h2>低代码的市场和机遇</h2><p></p><p></p><p><span name=\"market\">本章我们先讨论低代码这一新兴技术在全球的发展，再描绘其在中国特定时代背景下（更大）的前景。</span></p><p></p><h3>全球的发展</h3><p></p><p></p><p>在低代码领域，目前海外大约活跃着六十七家供应商，而且它的生态系统正在迅速成长。2017年是一个分界点，在大型软件供应商中，2017 年之前只有 Salesforce 采用 Force.com 的低代码平台。随后，微软、甲骨文、IBM 和 SAP 等企业都纷纷加入了这个市场，低代码（含无代码）市场呈爆发式增长：</p><p>2020 年市场规模达到 108.2 亿美元 [4]。2021 年市场规模达到 163 亿美元 [5]。……2030 年市场规模达到 1485 亿美元 [5] 。……</p><p></p><p>更重要的是，目前低代码市场的增长是超过预期的，例如 2021 年 2 月曾有机构预测改年的低代码市场为 138 亿美元 [6]，而 2022 年回顾的市场实际值为 163 亿 [5]。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/c2/d4/c2c09fdeda44cc12b36c3036yy0208d4.png\" /></p><p>图 6：低代码全球市场份额。原始数据来源：<a href=\"https://www.spreadsheetweb.com/how-big-is-the-global-low-code-no-code-market-and-how-fast-is-it-growing/\">SpreadSheetWeb</a>\" [7]</p><p></p><p>当我们聚焦代表性的个体时，数据同样展现出了潜力 [2]：</p><p>2018 年 Outsystems 获得 KKR 和高盛 3.6 亿美元融资，估值超过 10 亿美元。WordPress、Wix 已逐渐成长为生态完善的可视化（低代码）建站平台，数以百万计的个人和企业在这些平台上搭建自己的官网或者应用。其中 WordPress 的生态厂商 Elementor 在 2020 年初获得 1500 万 A 轮融资，在过去一年中，该插件已部署了 300 多个新功能，还被翻译成 55 种语言，目前获得超过了 400 万活跃安装。低代码建站市场和低代码企业服务领域一样快速发展中。……</p><p></p><p>为什么低代码会有如此广阔的市场？正是因为低代码开发高效灵活稳定，降低了应用搭建的门槛和对专业工程师的依赖，让业务部门用拖拽的方式自行搭建应用平台，减少与 IT 部门反复沟通的流程，最终实打实地降低了人力成本，克服了传统开发交付周期长、定制能力差、难以应对不断变化的市场和客户期望等弱点 [8]：</p><p></p><blockquote>You don’t need to invest in expensive training programs for your employees. You can have them build apps faster, with less training. And at the end of the day, all of this makes your business more revenue [9]. 翻译：你不需要为你的员工投资昂贵的培训项目。你可以让他们以更快的速度建立应用程序，并减少培训。而在一天结束时，所有这些都使你的企业获得更多的收入。</blockquote><p></p><p></p><h3>中国的优势</h3><p></p><p></p><p>在《“十四五”数字经济发展规划》等政策以及企业数字化转型大背景下，能为企业提供降本、增效、提质，并推动数字经济发展的低代码、无代码在正在蓬勃发展 [10]；数字化转型是企业必经的可持续进化历程，越来越多的企业将从“不得不转”转变到“主动要转” [11]。其中无论是政企、医疗、金融业务，还是房地产、制造、零售等，我们都能看到低代码的身影 [12]（以下内容均来自该引用）：</p><p>泰康人寿-泰行销 APP 分公司专栏项目，包含新闻、文章管理，搜索、滚动新闻，消息提醒，新闻、文章列表，大量的数据统计、业绩数据、排名数据、考核数据以及客户数据等特性、内容。使用轻舟低代码平台，通过可视化方式实现数据建模、页面搭建以及业务逻辑编排，在教练指导下&nbsp;2 周完成开发。项目通过扩展组件实现 IT 资产复用，可导出为模板并成为平台资产，其他分公司从而可以通过模板快速搭建专栏。中国联通软件研究院针对业务部门业务需求多样化，开发门槛高，开发周期长等问题，通过研究低代码在轻量级业务场景、通用型业务场景下的应用，帮助企业开发人员提高研发效率，降低开发门槛，赋能企业运营，助力数字化转型。同时，中国联通低代码赋能政企业务受理集约，实现联通政企业务受理集约流程可视化、分钟级配置、所见即所得，流程发布由原来的 2 周提升至 0.5 天，支撑 30 省超 300 个地市，8 大类业务的受理集约。重庆长安汽车与华为基于&nbsp;AppCube 合作，构建智慧党建系统、在线业务预算系统等 6 个企业应用。其中在线业务预算系统需要将庞杂的表单业务在线化，实现计划管理系统、合同管理系统、整车利润分析系统，以及填报、审核、分析、自动生成相应财务报表等预算编制流程等。借助 AppCube 低代码，应用构建效率整体提升了 2~3 倍，经过 3 个多月的努力，基本实现预期目标。中国雄安集团电子招标采购交易平台，结合雄安集团业务复杂性和具体需求，最终在评审结果汇总计算、价格评审计算、费用计算等招采业务场景中使用计算规则引擎整体解决方案，只需 2 小时即可完成传统做法需要 5 天的业务系统升级迭代流程。此方案的计算代码部分由低代码组成。……</p><p></p><p>宏观统计数据也表明：</p><p>2022 年中国低代码无代码市场规模预计为&nbsp;40.6 亿元，并预计在 2025 年达到 118.5 亿元，其年均复合增长率高达 42.9%。其中，低代码产品是总体市场的主要构成，占比 77.6% [10]。2022 年将有&nbsp;40%~60% 的大型企业使用低代码开发应用 [13]。低代码的领军之一 Mendix 更是表示，低代码市场在中国展现出巨大潜力 [14]：低代码发展正当时，中国将取代美国成为低代码开发的全球领导者。报告显示&nbsp;85% 的 IT 决策者表示表示正积极拥抱低代码技术，认为低代码是他们不容错过的趋势，且近一半（44%）的日常开发工作可以在低代码平台上完成。尽管转型领军者的数字化优势进一步加大，2022 年进入转型领军者行列的企业比例仅为 17%，与去年（16%）基本持平。低代码在中国有着巨大的增量市场[11, 14]。低代码应用在高校放彩，促进产学研全链路一体化建设 [15]…………</p><p></p><p>立足中国市场，随着“十四五”规划的推进，中国企业的数字化转型必将取得长足的进步，在降本增效的驱使下，低代码也必将成为中国大多数企业的最佳选择。</p><p></p><h3>更多的统计数据</h3><p></p><p></p><p>根据 UserGuiding 的统计，人们对低代码持有以下观点 [16] ：</p><p><a href=\"https://code.org/promote\">美国有超过50万个</a>\"计算机科学职位空缺，预计它的增长速度是其他工作领域的2倍，但世界上只有&nbsp;<a href=\"https://www.weld.io/blog/only-0-5-percent-of-the-worlds-population-knows-how-to-code\">0.5%</a>\"的人口知道如何编码。到 2024 年，低代码将占到应用开发活动的 65% 以上。“易用性”是人们在描述 低代码 / 无代码开发平台时使用最多的<a href=\"https://aimultiple.com/low-code-platform\">(20%)</a>\"正面词汇，这是基于从所有低代码 / 无代码开发平台公司的客户评论中收集的数据。<a href=\"https://www.mendix.com/blog/infographic-low-code-application-development-trends/\">24%</a>\"的用户在使用低代码 / 无代码平台之前完全没有经验。其中 40% 的用户大多有商业背景。<a href=\"https://assets.appian.com/uploads/2019/03/forrester-tlp-lowcode.pdf\">84%</a>\"的企业转向低代码 / 无代码，因为它们能够减少IT资源的压力，提高上市速度，并让企业参与数字资产开发。<a href=\"https://assets.appian.com/uploads/2019/03/forrester-tlp-lowcode.pdf\">31%</a>\"使用低代码/无代码的企业没有使用它们来构建和交付任何最高价值的应用程序。<a href=\"https://www.mendix.com/blog/infographic-low-code-application-development-trends/\">72%</a>\"的用户在 3 个月或更短的时间内用低代码应用开发应用程序。低代码 / 无代码解决方案有可能将应用程序的开发时间减少&nbsp;<a href=\"https://www.redhat.com/cms/managed-files/mi-451-research-intelligent-process-automation-analyst-paper-f11434-201802.pdf\">90%</a>\"。<a href=\"https://assets.appian.com/uploads/2019/03/forrester-tlp-lowcode.pdf\">30%</a>\"的企业在未来更愿意使用定制的低代码 / 无代码来处理复杂的商业逻辑。……</p><p></p><h2>现有的低代码产品</h2><p></p><p></p><p>最后我们再介绍一些支撑起低代码市场的代表性产品，从离我们比较近的国内产品开始。时至今日，国内的低代码产品已经比较丰富，例如<a href=\"https://sf.163.com/product/lcap\">轻舟低代码平台</a>\"、<a href=\"https://lowcode-engine.cn/index\">阿里低代码引擎</a>\"、<a href=\"https://www.grapecity.com.cn/solutions/huozige\">葡萄城活字格</a>\"、<a href=\"https://www.h3yun.com/site/home?g=Chuanyun&amp;m=Index&amp;a=index\">奥哲氚云</a>\"、<a href=\"https://qingflow.com/\">轻流</a>\"、<a href=\"http://www.primeton.com/products/ep/\">普元 EOS 平台</a>\"等：</p><p>轻舟低代码是网易数帆打造的企业级应用开发平台，兼具（下述）原生低代码和开发工具的特点。它通过简单易上手的可视化编程语言，帮助企业搭建高复杂度、融合企业 IT 资产、交互视觉高保真还原的企业级应用，致力于帮助企业实现低成本、高效率的数字化转型和应用创新。阿里低代码引擎的代表产品有钉钉宜搭等。钉钉宜搭基于阿里云的云基础设施和钉钉的企业数字化操作系统，提供低门槛、高效率的数字化业务 [2]。云平台的厂商希望借助低代码吸引更多用户购买其云服务，因此其低代码产品的发展方向上以深度整合自家云资源，降低门槛为主。葡萄城活字格（Forguncy）是厂商整合自身的开发工具资源后推出了低代码产品，发展方向上以产品力提升为主，在技术门槛和扩展性中间会更倾向于后者 [2]。用户集中在初创型软件开发团队、行业软件代理商、系统集成商和中大企业 IT 中心，而不是一线业务人员。奥哲氚云是低代码行业的创业公司，正处于风口快速发展阶段，后获得阿里系投资，更关注流量和市占率。产品发展上倾向于在降低门槛、与钉钉等流量平台整合 [2]。类似的还有明道云、简道云等。轻流是专注于流程和表单的 BPM 厂商在自身软件的基础上增加可视化设计器，进一步降低使用门槛后，从而实现低代码转型的产品。这些产品的核心优势是强大的工作流引擎，但这种基于表单而不是数据模型的架构，在应对复杂应用场景时可能会遇到诸多障碍 [2]。类似的产品还有炎黄盈动 AWS PaaS 等。普元 EOS 平台可以看成行业软件向通用平台的演进的尝试，它希望利用低代码技术降低实施、特别是实施中客户化开发环节的工作量，提升行业软件自身的竞争力 [2]。典型产品还有用友的 iUAP 等。</p><p></p><p>目前上述产品的海外市场并不多。根据 Fortune Business Insights [4]，我们列出几个重要的海外低代码产品及其简介 [17, 18] 供参考：</p><p>Appian：Appian 配备了原生部署工具和与 Jenkins 等开发工具的集成选项，允许用户建立业务流程管理（BPM）应用程序，帮助企业组织和优化业务流程。Microsoft Power Apps：可快速构建客制化的商业应用程序，它包含了预建的人工智能组件，还具备良好的可扩展性。Salesforce：为每个用户创建个性化的体验，用拖放字段和动作来定制页面，在正确的时间提供正确的信息，构建智能的、可移动的应用程序。OutSystems：提供可视化、模型驱动的工具，以实现快速开发和部署应用程序。它还提供实时性能监控和拥有高安全性。Mendix：常被用于构建改善公司内部流程的解决方案，其用户只需最少量的编程知识和一个良好的策略。Mendix 被用于数字保险、SAP 供应链、货物交付管理和商业分析等各种市场领域。Oracle APEX：Oracle APEX 使开发人员能够快速构建应用程序并解决实际问题。开发人员不需要成为掌握大量网络技术的专家，他可以专注于要解决的问题，Oracle APEX 会完成其余繁重的工作。……</p><p></p><p>说了这么多，哪个低代码平台最火爆呀？对于这个程序员永远关注的话题，我们找到了来自 GradientFlow 的“排名” [19] 如下（选购产品时需综合考量，不能依赖单一排名）：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/de/3c/de39b441dbfdf748489293403e04403c.png\" /></p><p>图 7：低代码开发平台指数。数据来源：<a href=\"https://gradientflow.com/ranking-low-code-development-platforms/\">GradientFlow</a>\"</p><p></p><p></p><h2>小结</h2><p></p><p></p><p>我们概述了上世纪和本世纪的低代码产品定位（提高专业开发人员的开发效率 vs 让业务专家将自己的专业知识和经验落地成在线应用），讨论了低代码的大致定义，然后通过大量统计数据和一些中国的典型案例描绘了低代码在近年的高速发展和其在未来 5~10 年国内外的巨大市场，最后介绍了一些支撑起这个市场的国内外的低代码产品。为了较好地解决低代码产品的诉求，低代码平台具体需要怎么做，技术上有哪些挑战，不同的方案效果如何？我们会在本专栏文章的后续篇章中一一解明。 </p><p></p><h2>参考</h2><p></p><p></p><p><a href=\"https://www.itprotoday.com/no-codelow-code/evolution-low-codeno-code-development\">[1] The History of Low-Code/No-Code Development - ITPro Today</a>\"</p><p><a href=\"https://mp.weixin.qq.com/s/vN0Mk4q4bQMbilNlQXS8Yg\">[2] 低代码发展现状调研和思考 - 管中窥豹非其全</a>\"</p><p>[3] 轻舟低代码团队为什么要做编程语言？(起草中，后续发布)</p><p><a href=\"https://www.fortunebusinessinsights.com/low-code-development-platform-market-102972\">[4] Low Code Development Platform Market Scope with Size, Share - Fortune Business Insights</a>\"</p><p><a href=\"https://www.globenewswire.com/news-release/2022/09/15/2517120/0/en/Low-Code-Development-Platform-Market-Size-is-projected-to-reach-USD-148-5-Billion-by-2030-growing-at-a-CAGR-of-27-8-Straits-Research.html\">[5] Low Code Development Platform Market Size is projected to - Globe News Wire</a>\"</p><p><a href=\"https://www.gartner.com/en/newsroom/press-releases/2021-02-15-gartner-forecasts-worldwide-low-code-development-technologies-market-to-grow-23-percent-in-2021\">[6] Gartner Forecasts Worldwide Low-Code Development Technologies Market to Grow 23% in 2021 - Gartner</a>\"</p><p><a href=\"https://www.spreadsheetweb.com/how-big-is-the-global-low-code-no-code-market-and-how-fast-is-it-growing/\">[7] How Big is the Global Low-Code / No-Code Market and How Fast is it Growing? - Spread Sheet Web</a>\"</p><p><a href=\"https://pdf.dfcfw.com/pdf/H3_AP202103221474638909_1.pdf\">[8] 化繁为简：低代码行业研究报告 - 艾瑞咨询</a>\"</p><p><a href=\"https://kissflow.com/low-code/history-of-low-code-development-platforms/\">[9] The History of Low-Code Development Platform - kissflow</a>\"</p><p><a href=\"https://www.donews.com/news/detail/4/3210864.html\">[10]《2022年中国低代码无代码市场研究及选型评估报告》- 海比研究院</a>\"</p><p><a href=\"https://www.accenture.cn/content/dam/accenture/final/markets/growth-markets/document/Accenture-China-Digital-Transformation-Index-Report.pdf#zoom=50\">[11] 数字化转型：可持续的进化历程 - 埃森哲</a>\"</p><p><a href=\"https://www.sgpjbg.com/baogao/93515.html\">[12] 《2022 低代码 · 无代码 应用案例汇编》，2022 年 8 月第一版 - 企业数字化发展共建共享平台</a>\"</p><p><a href=\"https://new.qq.com/rain/a/20220106A03NY900\">[13] 2022中国“低代码”领域十大趋势 - 腾讯新闻</a>\"</p><p><a href=\"https://www.163.com/dy/article/GNQLJJUQ051494RM.html\">[14] 低代码发展正当时，中国将取代美国成为低代码开发的全球领导者 - 美通社资讯</a>\"</p><p><a href=\"https://www.163.com/dy/article/H34TF96605118VBB.html\">[15] 2022年中国低代码行业生态发展洞察报告 - 艾瑞咨询</a>\"</p><p><a href=\"https://userguiding.com/blog/no-code-low-code-statistics/\">[16] No-Code / Low-Code Statistics and Trends - User Guiding</a>\"</p><p><a href=\"https://www.trio.dev/blog/low-code-platforms\">[17] 9 Best Low-Code Platforms To Use in 2022 - Trio Developers</a>\"</p><p><a href=\"https://mobitouch.net/blog/10-best-low-code-no-code-platforms-to-create-an-effective-digital-product/\">[18] 10 Best Low-Code / No-Code Platforms To Create an Digital Product - Mobi Touch)</a>\"</p><p><a href=\"https://gradientflow.com/ranking-low-code-development-platforms/\">[19] Ranking Low-code Development Platforms - Gradient Flow</a>\"</p><p></p><p>作者简介： </p><p></p><p>网易数帆编程语言实验室负责轻舟低代码平台核心编程能力的设计，包括类型系统、语义语法、声明式编程、可视化交互等 NASL 的语言设计，Language Server、可视化引擎等，以及后续演进方案的规划和预研，旨在创造低门槛高上限的低代码开发体验。</p>",
    "publish_time": "2023-02-07 11:26:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "搜索引擎要变天了：谷歌正式宣布推出 Bard，应对突然上线的增强型Bing",
    "url": "https://www.infoq.cn/article/z30mE0bxrvItO9Mm52Nw",
    "summary": "<p>北京时间2月7日，谷歌CEO桑达尔·皮查伊突然在官方博客上宣布推出谷歌下一代AI对话系统 Bard。面对来自微软 Bing 和 OpenAI 的 ChatGPT 日益激烈的竞争，该对话系统将很快集成到谷歌的搜索引擎中。皮查伊说，该软件今天将提供给一组“受信任的测试人员”，然后“在未来几周内更广泛地向公众提供”。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7c/7cb0da3a8b8ef044c8a56ad1a12a451a.jpeg\" /></p><p></p><p>桑达尔·皮查伊署名文章</p><p>&nbsp;</p><p>“两年前，我们推出了对话应用程序语言模型（简称 LaMDA）提供支持的下一代语言和对话功能，”皮查伊在文章中说。“我们一直在研究一种实验性的对话式 AI 服务，由 LaMDA 提供支持，我们称之为 Bard。”</p><p><img src=\"https://static001.infoq.cn/resource/image/d2/e9/d2262fbabfbabdb5db0yya05b03bc7e9.gif\" /></p><p></p><p>&nbsp;</p><p>皮查伊还指出，Bard“利用网络信息提供新鲜、高质量的回复”，这表明它可能能够回答有关最近事件的问题——这是 ChatGPT 难以解决的问题。比如，Bard可以帮你向 9 岁的孩子解释 NASA 的詹姆斯·韦伯太空望远镜的新发现，或者为你提供关于当前足球界最佳前锋的信息。</p><p>&nbsp;</p><p>Bard 看起来可以与 ChatGPT 的对话能力相媲美，但似乎更侧重于搜索和可解释性，而不是成为能够写诗或散文的通用语言模型。Bard 的预览片段显示模型以要点形式生成响应。</p><p>&nbsp;</p><p>谷歌相信语言模型可以更有效地从互联网中提取信息，让人们更容易直接找到他们正在寻找的东西，而无需自己去浏览多个网站。</p><p>&nbsp;</p><p>“当人们想到谷歌时，他们通常会想到向我们寻求快速的事实性答案，比如‘一架钢琴有多少键？’ 但是，越来越多的人转向谷歌寻求更深入的见解和理解——比如，“钢琴还是吉他更容易学习？每个乐器需要多少练习？”了解这样的话题可能需要花费很多精力来弄清楚你真正需要知道的东西，人们往往希望探索各种不同的意见或观点。”皮查伊解释道。&nbsp;</p><p>&nbsp;</p><p>Bard 最初由LaMDA提供支持，随后会有一系列更多的模型。谷歌还表示，它计划创建一套让开发人员和企业可以使用的工具和API，该 API 将包含一系列基于其 LaMDA 系统的语言模型，如 OpenAI 基于 GPT-3 的模型。&nbsp;</p><p>&nbsp;</p><p></p><h2>ChatGPT 驱动的 Bing曾短暂上线</h2><p></p><p>&nbsp;</p><p>去年 ChatGPT 推出后，搜索巨头谷歌拉响了“红色代码”警报。这次关于Bard 匆忙、信息含糊不清的公告，很可能是谷歌“红色代码”的产物。</p><p>&nbsp;</p><p>尽管 ChatGPT 的基础技术不是革命性的，但 OpenAI 在网络上免费提供该系统后，让大众有机会接触到了这种新型的自动文本生成形式。其影响是巨大的，人们对这项新技术显然十分着迷，瑞银分析师最近的一份报告称，ChatGPT 每月用户已达到 1 亿，成为历史上增长最快的互联网应用程序。&nbsp;</p><p>&nbsp;</p><p>已向 OpenAI 投资数十亿美元的微软也适时抓住了这个机会，据说微软正在将 ChatGPT 集成到其 Bing 搜索引擎及其他办公软件套件中。</p><p>&nbsp;</p><p>前一两天，有几位 Bing 用户注意到，集成了 ChatGPT 的新版 Microsoft Bing 曾短暂地上线了，这表明该公司在准备推出一种革命性的网络搜索新方式。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/11/11cdb9a90da5f8d8d6e884ed5d780d5a.jpeg\" /></p><p></p><p>&nbsp;</p><p>根据其中一位用户提供的一些简单测试截图显示，新系统不仅可以回答问题，还可以以对话的方式提问。新Bing显然也可以引用其来源，这是一个重要的特性，因为像 ChatGPT 这样的语言模型无法描述它们的信息来源，这让它们显得不那么可靠。不过几分钟后，该AI增强的Bing就下线了……“当我意识到我在看什么时，下巴都惊掉了！”</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/38/38a70d8343d1a033e6e16ede96f1e798.png\" /></p><p></p><p>Bing与用户的对话</p><p>&nbsp;</p><p>根据这些截图来看，这些界面都与 ChatGPT 本身的 UI 相似，它还提供了有关如何最好地使用 AI 聊天机器人的建议，并警告自己的答案可能不可靠。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b1/b119990ea947a3a98a833684a150a1a8.png\" /></p><p></p><p>新Bing未能回答有关编码的问题。该UI 可能是一个早期的开发项目，被意外地推出了。</p><p>&nbsp;</p><p></p><h2>搜索引擎要变天了？</h2><p></p><p>&nbsp;</p><p>虽然谷歌在为 ChatGPT 提供支持的人工智能技术方面拥有深厚的专业知识（事实上，谷歌发明了关键技术——GPT 中的“T”，即transformer），但该公司一直以非常谨慎的方式进行公开。谷歌之前通过其AI Test Kitchen App应用程序提供了支持 Bard 的语言模型 LaMDA ，但这个版本非常受限，只能生成与少数查询相关的文本。</p><p>&nbsp;</p><p>LaMDA 和 GPT-3.5（为 ChatGPT 提供支持）等大型语言模型有可能会吐出仇恨言论等有毒内容，或者是虚假信息。谷歌一直对此表示担忧，但即将推出的 Bard 标志着谷歌对这项技术的态度发生了重大变化。</p><p>&nbsp;</p><p>关于微软想用AI改造其搜索引擎 Bing 的说法，一定程度上促使了谷歌推出Bard服务。</p><p>&nbsp;</p><p>谷歌在搜索市场占据主导地位，并利用其力量收获了数十亿美元的在线广告营收——Alphabet 最大的收入来源。由于微软的威胁，谷歌不得不迅速提出自己的人工智能搜索解决方案。&nbsp;</p><p>&nbsp;</p><p>如果微软用更强大的语言模型来增强网络搜索，用户会突然背弃谷歌而涌向Bing吗？这还有待观察，但很明显，搜索领域变革时代开始了。</p><p>&nbsp;</p><p>在谷歌发布 Bard 之后，微软也随即宣布将于 2 月 7 日北京时间晚上11点，与OpenAI一起在微软总部举办重大发布会。关于要发布什么内容该公司并没有太多预告，但很可能是关于传闻中的 ChatGPT 与 Bing 的整合，以及与 OpenAI 更广泛的合作。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4e/4e4aef4915e8b00b5ac819372f0d1d57.png\" /></p><p></p><p>&nbsp;</p><p>与此同时，谷歌也宣布将于 2 月 8 日举办一场关于搜索和人工智能的活动，该活动将会在Youtube上进行直播。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9f/9f5aaf1891ecc85757d2982d7a452a2d.jpeg\" /></p><p></p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://blog.google/technology/ai/bard-google-ai-search-updates/\">https://blog.google/technology/ai/bard-google-ai-search-updates/</a>\"</p><p><a href=\"https://www.youtube.com/watch?v=yLWXJ22LUEc\">https://www.youtube.com/watch?v=yLWXJ22LUEc</a>\"</p><p><a href=\"https://medium.com/@owenyin/scoop-oh-the-things-youll-do-with-bing-s-chatgpt-62b42d8d7198\">https://medium.com/@owenyin/scoop-oh-the-things-youll-do-with-bing-s-chatgpt-62b42d8d7198</a>\"</p><p><a href=\"https://www.theverge.com/2023/2/3/23584675/microsoft-ai-bing-chatgpt-screenshots-leak\">https://www.theverge.com/2023/2/3/23584675/microsoft-ai-bing-chatgpt-screenshots-leak</a>\"</p><p><a href=\"https://www.theverge.com/2023/2/2/23583701/google-search-ai-event-february-maps\">https://www.theverge.com/2023/2/2/23583701/google-search-ai-event-february-maps</a>\"</p><p><a href=\"https://twitter.com/Owen_Yin\">https://twitter.com/Owen_Yin</a>\"</p>",
    "publish_time": "2023-02-07 11:33:53",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "2022年主要趋势和2023年展望 | InfoQ软件发展趋势报告",
    "url": "https://www.infoq.cn/article/xjWuQz86DBT6Zfwe6dPr",
    "summary": "<p></p><blockquote>本文要点架构师的职责是与所有利益相关者有效地沟通架构决策。一些公司正在采用架构决策记录（Architecture Decision Record）并将其作为标准实践。认识到高级个人贡献者（被标记为“Staff Plus”）的价值。他们掌握了深厚的技术专业知识，通常也是“T型”人才，具备广泛的技能。这些人在软件开发职业生涯中可以在个人贡献者和管理者角色之间转换。DevOps和平台工程实践有助于降低开发人员的认知负担，带来更多积极的业务成果。将应用程序和数据平台视为产品，对它们进行适当的设计，为它们提供适当的配置和资源。AI/ML领域的建模、转换和处理数据方面出现了一些创新。每个人都可以在软件开发和IT领域为实现可持续的解决方案做出贡献。进行深思熟虑的文化设计。与其让人们整天往返于办公室、开视频会议，管理者需要考虑的是组织、环境和员工的收益和成本。</blockquote><p></p><p>&nbsp;</p><p>2022年又是软件行业和社区出现重大技术创新和趋势的一年。InfoQ播客联合主持人上个月开会讨论了2022年的主要趋势和2023年的看点。InfoQ新闻频道负责人Daniel Bryant主持了讨论。小组成员包括Wesley Reisz、Shane Hastie、Thomas Betts和Srini Penchikala。</p><p>&nbsp;</p><p>本文是对2022年软件趋势播客的总结，完整的播客和完整讨论记录可以在<a href=\"https://www.infoq.com/podcasts/2022-year-review/\">这里</a>\"查看。</p><p>&nbsp;</p><p>播客中讨论的主要话题和主题如下：</p><p>&nbsp;</p><p>架构决策记录（ADR）；Staff Plus工程师角色；平台即产品；基于AI的助手，比如ChatGPT；可持续发展与绿色IT；文化设计。</p><p>&nbsp;</p><p>下面总结了小组讨论的主要趋势。</p><p>&nbsp;</p><p></p><h2>架构师角色的转变</h2><p></p><p>&nbsp;</p><p>架构师是InfoQ关注的关键角色之一，关注他们如何为团队提供服务，如何为组织中的软件开发项目和计划取得成功做出贡献。架构师的角色正在转变为开发生命周期的一个活跃部分，通过协作而不是强制的方式协助应用程序团队做出架构决策，并将决策传达给组织不同级别的利益相关者。</p><p>&nbsp;</p><p>疫情和混合型工作导致团队的沟通进一步异步化。在这种情况下，架构师的角色变得更加重要，他们需要将事情记录下来，并确保决策能够符合组织的长期最佳利益。只是画出架构解决方案的图表已经不够了，他们需要证明为什么特定的解决方案要这样设计。</p><p>&nbsp;</p><p>架构决策记录（ADR）已经出现了一段时间，现在正被更多的公司采用。ADR有几个方面的好处，特别是在确定和记录架构决策方面。然后，团队可以讨论他们为什么要做出特定的决策。可以看出，这更像是一个合作的过程。</p><p>&nbsp;</p><p>ADR可用于记录架构决策并对其进行版本化管理，其中可以包含诸如“你试图做出怎样的决策？你在考虑哪些可能的选择？每种选择的利与弊是什么？”之类的问题。所有这些信息都可以被提交到一个集中式的Git存储库中，这样团队就可以建立共享上下文，说明他们为什么选择特定的技术或软件。</p><p>&nbsp;</p><p>架构决策应该协作进行，ADR可以在这个过程中发挥重要作用。架构师可以率先使用它，然后找到模式，总结出可以在公司内部有效使用它的方法。ADR也是一种活文档，团队可以改变他们的想法并更新过时的图表。ADR只是一种简单的文本格式，他们可以更新它，如果想要创建一个图表，可以考虑使用Mermaid图表。活文档的维护并为其打造支持文化也是很重要的。</p><p>&nbsp;</p><p>架构师应该避免采用“象牙塔架构师”所使用的方法，并积极地将架构成果和可交付成果提交到同一个Git存储库中。</p><p>&nbsp;</p><p></p><h2>增加“Staff Plus”角色的可见度</h2><p></p><p>&nbsp;</p><p>随着IT组织越来越多地采用“Staff Plus”角色，个体角色正在发生积极的变化。架构师在职业生涯的某个阶段常常会想：“我现在要做什么？我已经成为了一名架构师，我已经为成为经理和总监做好了准备。”现在，有了Staff Plus这个角色，公司的高层领导开始思考：“员工层面之外的发展路线图是怎样的？”公司有意关注Staff Plus这个角色就是在这方面取得的重大进展。</p><p>&nbsp;</p><p>架构作为一门学科和软件工艺而不仅仅是图表和工件也得到了适当的关注。架构师对企业变得更有价值，他们可以做的事情和对团队的贡献发生了变化，不只是做一些PowerPoint幻灯片然后把它们丢给别人。大多数架构师开始在整个软件开发生命周期中亲力亲为并参与其中。在向客户交付价值方面，架构过程变成了迭代和增量式的。</p><p>&nbsp;</p><p>组织中的Staff Plus工程师往往是T型人才，他们往往具备广泛的跨多学科知识，但在某个特定领域又具有深厚的专业知识。这种角色对于思考横切关注点、大项目以及如何解决多个问题的大背景下是非常有用的。</p><p>&nbsp;</p><p>Charity Majors在旧金山QCon大会上做了一个题为“工程师/经理的钟摆”的演讲，演讲内容是关于有意识地从Staff Plus角色切换到管理层然后再切换回来。通过这种方式，人们可以在不同的领域培养深度的能力，并可以来回转换。像管理产品一样管理你的职业，通过有意识地做选择来发展你的职业生涯。</p><p>&nbsp;</p><p>自发生疫情以来，我们看到的一个趋势就是离职。一些研究显示，30%的人换了工作，70%的人对目前的工作非常不满意。这促使领导层考虑为人们创造机会，让他们可以转到感兴趣的岗位，不让他们流失到其他公司去。</p><p>&nbsp;</p><p>在一些组织中，高级个人贡献者或Staff Plus更多地是作为一种发展机会而不是任命的岗位。所以，高层领导不会说：“好吧，我们会让你成为高级Staff Plus工程师。”事实正好相反。团队成员不仅可以在技术上做出贡献，也可以在组织层面做出贡献。他们能够管理自己的人和利益相关者，并“成为”Staff Plus。</p><p>&nbsp;</p><p></p><h2>平台工程与降低开发者认知负担</h2><p></p><p>&nbsp;</p><p>几年前，当DevOps出现时，它被认为是开发和运维世界中最好的实践。它在很多方面都很有帮助，但也给团队带来了认知负担。认知负担太高导致的倦怠也成为一个问题。从Kubernetes到Istio，从边车到Ingress，再到不得不编写代码，试图建立可以应对所有这些事情的心智模型成为一个相当大的认知负担。</p><p>&nbsp;</p><p>平台工程是最近另一个备受关注的领域。平台是一个巨大的杠杆，平台团队需要考虑的是如何通过拉动这个杠杆来减轻认知负担。如果做好了，就可以促进所有与价值流保持一致的团队（<a href=\"https://teamtopologies.com/\">团队拓扑</a>\"）交付价值。</p><p>&nbsp;</p><p>为了减少开发团队之间的摩擦，平台团队可以帮忙创建内部开发者平台，提供自助服务功能来安装和托管他们的应用程序。这些平台需要能够执行一些任务，如自动分配基础设施、无缝地在CI/CD管道中推送应用代码，以及在团队将应用程序部署到平台之前验证基础设施组件的质量。</p><p>&nbsp;</p><p>内部开发者门户网站，如Spotify的<a href=\"https://backstage.io/\">Backstage</a>\"（CNCF的一个开源项目）、<a href=\"https://www.infoq.com/news/2017/06/paved-paas-netflix/\">Netflix的微服务PaaS平台</a>\"和其他类似的工具，都有助于实现平台工程的目标。</p><p>&nbsp;</p><p>我们认为，明年将会有更多的人关注内部开发平台。</p><p>&nbsp;</p><p></p><h2>数据网格和数据平台即产品</h2><p></p><p>&nbsp;</p><p><a href=\"https://martinfowler.com/articles/data-mesh-principles.html\">数据网格</a>\"是一种重要的用于管理不同来源数据（这些来自不同数据源的数据被不同的客户端和消费者使用）的架构模型，并内置了治理层。</p><p>&nbsp;</p><p>公司很难实现数据网格，因为他们必须创建一个平台来制定规则和处理各种数据产品。其目标是建立一个标准化的网格，各方可以把数据放入其中，并获取它们需要的数据。</p><p>&nbsp;</p><p>我们也看到越来越多的人关注平台即产品。在这个领域出现了一个有趣的新趋势——一个平台需要有一个产品经理。这是一个有趣的角色，必须要有同理心，能够与开发人员、客户和用户互动，必须善于管理利益相关者，因为领导团队经常会问这样的问题：“为什么我要为这个平台付钱？它带来了什么价值？”平台产品经理需要清楚地表明，平台工程是一个有力的赋能因素，我们正在为应用程序和数据打下坚实的平台基础。</p><p>&nbsp;</p><p>我们也看到越来越多的人关注平台即产品。在这个领域出现了一个有趣的新趋势——一个平台需要有一个产品经理。这是一个有趣的角色，必须要有同理心，能够与开发人员、客户和用户互动，必须善于管理利益相关者，因为领导团队经常会问这样的问题：“为什么我要为这个平台付钱？它带来了什么价值？”平台产品经理需要清楚地表明，平台工程是一个有力的赋能因素，我们正在为应用程序和数据打下坚实的平台基础。</p><p>&nbsp;</p><p>IT不再只是成本中心，软件可以帮助提升业务效率。平台工程在软件开发和维护中起着至关重要的作用。</p><p>&nbsp;</p><p></p><h2>AI、ML和数据工程的新趋势</h2><p></p><p>&nbsp;</p><p>与架构和安全一样，数据也正在经历“左移”的过程。数据不再只是存储在某个地方的东西，它已经在建模、转换和处理方面成为一等公民。端到端自动化数据管道正受到越来越多的关注，因为你不能让数据形成孤岛，或者出现重复数据、数据质量低等问题。数据库是存储数据的解决方案之一，但其他趋势，如流式架构（数据以数据流的形式出现）也正在形成。我们处理这类数据的方式是数据工程领域出现新兴架构的推动因素。</p><p>&nbsp;</p><p>还有其他趋势，比如流式数据仓库（专注于捕获和分析以流形式出现的数据）。这一领域的主要发展有与数据相关的趋势、数据管理和数据工程。第二个领域是ML和AI。实现这一切的基础设施（数据平台等）是目前正在出现大量创新的第三个领域。</p><p>&nbsp;</p><p>我们需要把数据作为整个系统的一部分来考虑。我们如何获得系统和数据的可观察性，确保数据正确地流动？我们需要使用AI模型吗？我们能否按照可以将其输入到机器学习模型中的方式来获取数据，这样就能从中得到一些好处？所有这些问题都需要考虑。在这些方面，架构设计的思考方式必须有一些变化。</p><p>&nbsp;</p><p>正如他们所说，数据是任何公司仅次于人的第二大资产，所以我们绝对需要给予尽可能多的关注。数据正在经历类似于代码和架构在过去所经历的演变。对于数据，在接收数据、摄取数据、处理数据和控制数据版本方面，也有一种CI/CD解决方案。</p><p>&nbsp;</p><p>在机器学习方面，可能没有其他任何一个技术领域在2022年经历了像ML和AI那样程度的创新。GitHub的<a href=\"https://github.com/features/copilot\">Copilot</a>\"项目就是其中一个有趣的创新，它被认为是一种提高开发人员工作效率的工具。我们从一些开发人员那里听说，Copilot使他们的工作效率提升了100%，几乎是翻了一番。开发人员说他们不再需要编写基本函数了，也不需要记住它们是怎么写出来的，只要问下Copilot，它就会为他们生成所有的代码，他们甚至不再使用StackOverflow这样的网站了。我们也看到，像ChatGPT这样的新技术受到了广泛关注，它不仅可以改变开发者的生活，还可以改变其他人的生活。</p><p>&nbsp;</p><p></p><h2>计算的合法性、伦理和可持续性挑战</h2><p></p><p>&nbsp;</p><p>软件开发社区不仅在法律领域需要负起责任，在道德和可持续性领域也需要负起责任。我们需要关注道德方面的东西，确保我们构建的产品对环境（绿色计算）和社区（社会计算）有益。</p><p>&nbsp;</p><p>我们应该记住——任何模型都存在固有的偏见。构建模型所采样和读取的数据已经内置了偏见。有了像ChatGPT这样的新工具，与AI的交互不再局限于AI/ML专家，几乎任何人都可以使用这些AI助手工具来生成新的程序和脚本。这就是为什么现在比以往任何时候都更重要的是有意识地对我们交付的产品负起责任。</p><p>&nbsp;</p><p>每一个从事软件行业的人都应该开始问这样的问题：“我们能让这个成为一个绿色的解决方案吗？我应该在哪里运行这个？它是使用绿色能源，还是在一个全是燃煤能源的数据中心里运行？”</p><p>&nbsp;</p><p>最近，Adrian Cockcroft做了一个关于将可持续性问题引入DevOps的<a href=\"https://plus.qconferences.com/presentation/nov2022/devsusops-bringing-sustainability-concerns-development-and-operations\">演讲</a>\"。其思想是将可持续性作为软件系统DevOps的非功能性需求进行管理，包括度量和减少碳足迹、水资源管理、供应链中的社会责任以及通过循环利用实现循环经济。我们可以使用Thoughtworks的<a href=\"https://www.cloudcarbonfootprint.org/\">Cloud Carbon Footprint</a>\"之类的工具来估算托管在云供应商平台上的应用程序的碳足迹。</p><p>&nbsp;</p><p></p><h2>未来的工作会是怎样的</h2><p></p><p>&nbsp;</p><p>另一个将在2023年经历重大变革的是混合工作模式。如果处理得当，混合工作模式可以让两种工作环境——WFH（在家工作）和RTO（回到办公室）都发挥最好的作用。但如果管理不当，就会变成混合地狱。人们到办公室上班这件事并没有得到很好的协调，仅仅因为这是一项强制规定，每周两到三天。人们来到办公室，大部分时间都在Zoom上度过。我们必须开始认真思考为什么我们要把人们聚集在一起。面对面聚在一起是非常有价值的。</p><p>&nbsp;</p><p>假设领导层要把人们聚集在一起，在这种情况下，他们需要考虑组织、环境和人员的成本，并确保收益超过成本。如果我们来上班，也许是一周一天，那么对于团队中的每个人以及我们需要合作的所有利益相关者来说，就应该是同一天，这样我们就可以面对面地进行合作对话。</p><p>&nbsp;</p><p>面对面的交流并不是仅限于“每周二、周三和周四到办公室”，它应该根据上下文和产品生命周期进行调整，而不仅仅是基于日历上的日期。如果我们正在做冲刺计划、回顾或头脑风暴，那就需要每个人，最好是面对面，在一起合作一两天。等到进入开发阶段，就不是每个人都必须来办公室了。</p><p>&nbsp;</p><p>公司应该有充分的理由让员工来到办公室，这不是在屏幕前呆上几个小时的问题，而是关乎产出结果的问题。</p><p>&nbsp;</p><p>如果我们从环保的角度看，一些组织和政府正在转向每周工作四天的制度。这令人感到惊讶，因为在每一个转向每周工作四天的组织中，生产效率都保持不变或有所上升。人们在工作上更加专注了，因为他们只有四天的时间来完成工作。</p><p>&nbsp;</p><p>把它做好，把人们聚集在一起，让工作环境变得更舒适、更安全，这会让你更好地活在当下。面对面合作所起到的纽带作用是非常重要的。</p><p>&nbsp;</p><p></p><h2>展望2023年</h2><p></p><p>&nbsp;</p><p>作为一个群体，我们希望在2023年看到这些——组织中有意识的文化设计和实验，每周工作四天，越来越多的组织开始这样做，注重结果，人性化的工作环境。</p><p>&nbsp;</p><p>我们认为我们正处在AI成为主流的拐点上。AI助手可以增强架构师的作用。我们只需向聊天机器人提问，它们就会做出相应的回应，帮助我们思考，并让我们能够以10倍的速度为利益相关者提供价值。我们还认为，在未来的12个月里，我们将看到AI领域发生一些我们没有预料到的事情，它将变得非常主流，我们都将开始使用它。</p><p>&nbsp;</p><p>ChatGPT和其他未来的AI解决方案可以更好地帮助人类，但我们认为它们不会很快取代人类。我们期待数据和AI/ML技术在个人层面、社区层面、国家和政府层面让我们的生活发生变化。AI将如何在各个层面——不仅在办公室、工作和个人生活中，还有医疗保健、政府等其他领域——为我们提供帮助？</p><p>&nbsp;</p><p>我们越是深入研究技术问题，就越会发现它与人、组织和沟通有关。与技术相关的东西其实并不是最难的部分。我们希望看到关于平台对话的延续，建立更强大的团队，能够用更少的钱做更多的事情，降低认知负担，这样人们就可以更愉快和健康地开发软件。</p><p>&nbsp;</p><p>其他趋势，如低代码、无代码解决方案将为公民开发者赋能。世界交流和协作的方式也在发生变化，在大多数情况下利用了基于虚拟现实（VR）的技术。</p><p>&nbsp;&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/infoq-software-trends-report-2022/\">https://www.infoq.com/articles/infoq-software-trends-report-2022/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/theme/168\">特别专题：2022年度技术盘点与展望</a>\"</p><p><a href=\"https://www.infoq.cn/minibook/UGhD7MTY5Z43JG5YmWP3\">中国软件技术发展洞察和趋势预测报告 2023</a>\"</p>",
    "publish_time": "2023-02-07 14:11:55",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "2023年，技术圈还需要个人英雄主义吗？",
    "url": "https://www.infoq.cn/article/CHFMEwL6dcXxxpqx7Avc",
    "summary": "<p>&nbsp;</p><p></p><blockquote>“选择一个团队，而不是一个人单枪匹马。”</blockquote><p></p><p>&nbsp;</p><p>如果说从无到有的时代英雄属于个人，那么到了群星璀璨的现在，英雄已经成了“一群人”：没有团队，一个人难以应对每次高峰流量的冲击，也搞不定底层的技术建设……</p><p>&nbsp;</p><p>这种转变在千禧年前就完成了，但是人们似乎更喜欢个人崇拜，常常忽略个人背后的团队力量。独木难成林，而优秀的技术和产品也需要优秀团队的支撑。马化腾曾这样总结：“我认为腾讯的成功，首先就是技术、产品和用户感这个要非常强。第二，团队稳健、股东架构稳健很重要。”</p><p>&nbsp;</p><p>因此，纪录当代企业们优秀技术团队的故事，成为InfoQ<a href=\"https://www.infoq.cn/form/?id=898\">《中国卓越技术团队访谈录》</a>\"重点关注和报道的方向。</p><p>&nbsp;</p><p>自2021年首次发至今，我们采访了腾讯、阿里、字节跳动、蚂蚁、微软、微众银行、百度、网易、京东、金山办公、火山引擎、PingCAP、OceanBase、优麒麟、搜狗、文因互联、明源云、华润、得物、民生保险、众安保险、工商银行、Cocos、Mendix、海尔集团、金蝶软件、恒生电子、戴尔科技集团等约五十余家企业的技术团队，深入纪录了他们的成就和成长，同时也获得了读者们的喜爱和支持。</p><p>&nbsp;</p><p>“时代在变，而今天所处的行业正好处在这个时代变革的潮流之上，今天完全是一个全新的时代，甚至对于整个安全产业来说它都是一个全新的开始。”——《<a href=\"https://www.infoq.cn/minibook/zqS1Y4wpBJ3AhfavSmy8\">保卫腾讯云，专访云鼎实验室董志强（Killer）团队</a>\"》</p><p>&nbsp;</p><p>“在可见的未来，Web 开发还是会非常有生命力的。假设再加上 Web3.0 创造的可能性，未来五到十年的 Web 开发是非常值得看好的。再过十年，很有可能你的开发框架就换了，这一点都不让人觉得意外。”——《<a href=\"https://www.infoq.cn/minibook/TwGuGOHY5HDv3RLaeFLC\">IE 退役了，我们跟 Edge 团队聊了聊 Web 的过去和未来</a>\"》</p><p>&nbsp;</p><p>“全密态数据库在学术界有多种不同方向的探索，但并不是每一种路线都能够在商业场景落地，全球目前仅有极少数具备全密态数据库管理能力的厂商，阿里达摩院数据库存储与创新实验室做到了。”——《<a href=\"https://www.infoq.cn/minibook/EQzDrPI1dT9G8V6alV1I\">在阿里达摩院搞了四年数据库，我来聊聊实际情况</a>\"》</p><p>&nbsp;</p><p>“与公司内其他能直接创造收益的明星产品相比，我们是一个做减法的部门，通过技术手段降低基础设施成本。就像足球场上的后卫一样，要能守住系统稳定性/可靠性的基本盘不出问题，又要能够往前场助攻进球。”——《<a href=\"https://www.infoq.cn/minibook/AaximlxcD9Mp0xqGuBRM\">我们这群 90 后，正在字节跳动“死磕”Linux 内核</a>\"》</p><p>&nbsp;</p><p>……</p><p>&nbsp;</p><p>2023年，我们再度出发，继续讲述属于技术团队们的精彩故事，为他们在技术历史上留下浓墨重彩的一笔。想要寻求报道或者想要推荐企业团队的读者朋友，都可以<a href=\"https://www.infoq.cn/form/?id=898\">点击报名链接</a>\"或扫描下方二维码提报。我们期待与您一起记录。</p><p>&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/b7/2e/b7142b58f3ee3803ccb7d724e67c1f2e.png\" /></p><p></p><p>报名通道长期有效</p><p>&nbsp;</p>",
    "publish_time": "2023-02-07 14:59:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "对标 ChatGPT ，百度推出“文心一言”，将在 3 月份完成内测",
    "url": "https://www.infoq.cn/article/3ykO49FEVYiGOTpLq3lC",
    "summary": "<p>2022年12月，ChatGPT发布一周就拥有了超过100万的用户，迅速成为全球社交网络上的热议话题。这个由GPT-3进化而来的预训练语言模型，以对话的形式交互，经过OpenAI的训练，吸收了大量内容处理自然语言，能够在交互中不断强化学习。</p><p>&nbsp;</p><p>有人将ChatGPT称为“最强AI”，原因在于ChatGPT给出的回答反应了它更接近人的思考方式和回答方式，相比过去增强了适应情景的能力。ChatGPT“更接近人的思考方式”意味着AI语言模型的发展由量变走到了质变。据悉，瑞银集团的一份报告显示，截止2023年1月末，ChatGPT仅推出2个月，月活用户就突破了1亿。</p><p>&nbsp;</p><p>ChatGPT的大火带涨了AI概念股，让业内重新审视了AI行业巨大的发展机会。此前有说法称ChatGPT将挑战谷歌搜索的地位，今日凌晨，谷歌CEO亲自宣称将发布类似ChatGPT的产品Bard，已经提供部分公开测试机会。更早之前，微软表示未来将在必应搜索引擎中融合ChatGPT相关技术。由于国内手机号无法直接注册ChatGPT，网友纷纷喊话国内互联网大厂：做自己的ChatGPT。</p><p>&nbsp;</p><p>今日，百度宣布将推出类似ChatGPT的产品——文心一言，英文名ERNIE Bot，将在三月份完成内测，面向公众开放。联系去年9月，百度CEO李彦宏判断人工智能发展在“技术层面和商业应用层面，都有方向性改变”。据推测，百度那时候就开始做文心一言。</p><p>&nbsp;&nbsp;</p><p>文心一言位于百度人工智能四层架构中的模型层。百度在人工智能四层架构中，都有全栈布局，包括底层的芯片、深度学习框架、大模型以及最上层的搜索等应用。文心一言，位于百度人工智能四层架构中的模型层。百度表示拥有ChatGPT相关技术。数十年在人工智能领域深耕，百度拥有产业级知识增强文心大模型ERNIE ，具备跨模态、跨语言的深度语义理解与生成能力，在自然语言处理领域在国内属于前沿水平。</p><p>&nbsp;</p><p>不仅标志着自然语言处理技术的发展已经来到了一个新的阶段，ChatGPT更是AI技术发展的分水岭。从百度开始，我们期待看到更多国内AI技术产品的推出，也期待看到相关技术在更多应用场景的落地。</p>",
    "publish_time": "2023-02-07 15:00:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "B2B跨境支付平台XTransfer的质量保障体系建设之路：测试的左移与右移是关键",
    "url": "https://www.infoq.cn/article/EXuQFNJfQM3atQZ8B1GB",
    "summary": "<p>质量保障体系的建设是个复杂、长期的过程，基于业务发展阶段、团队规模和业务形态，每家公司都有不同的思考和实践。</p><p></p><p>近年来，跨境电商新业态的高速发展使得跨境支付赛道备受关注。一般来说，在交易模式上跨境电商分为B2B和B2C。相较于B2C，B2B模式交易流程更复杂，其背后的质量保障体系建设就显得尤为关键。</p><p>近期，InfoQ采访了XTransfer（上海夺畅网络技术有限公司）技术总监马吉武，请他与我们分享了XTransfer的质量保障理念，以及他对于质量保障体系建设的思考和实践经验。</p><p></p><p>XTransfer创立于2017年，聚焦于B2B跨境支付，为从事B2B出口的中小微企业提供跨境支付及风控服务。XTransfer对于质量保障体系的建设从2018年初第一款外贸收款产品问世便已开始。在业务发展初期，质量保障体系的工作主要体现在功能可用性测试层面；随着业务的发展和团队的精进，逐渐扩展为测试的左移与右移。发展至今，质量保障已不再停留在“功能性测试”这样一个工程化流程的单一环节，而是拓展到“大质量”的范畴，即协同工程化上下游的多个环节共同确保产品交付的稳定可靠。</p><p></p><p>关系到中小微外贸企业的资金安全，B2B跨境支付产品对于质量有着极高的要求，这给XTransfer的质量体系建设带来了不少挑战。“具体而言，主要体现在三个方面：首先在业务层面，绝不允许有任何一笔交易出现资金问题；其次，B2B跨境支付交易链路更长，相应的产品质量保障链路也更长，这给质量保障工作增加了难度；最后，XTransfer业务发展迅速，产品也在快速迭代优化，这也需要质量保障体系随之迭代优化。”马吉武介绍道。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4f/4f6a41e7564a4a75e105b04fb663eff5.png\" /></p><p></p><h2>质量保障理念</h2><p></p><p></p><p>XTransfer质量保障理念的核心体现在质量设计和质量实践两个方面。</p><p></p><p>据马吉武介绍，在业务早期发展阶段，主要是产品驱动、研发和测试互相配合。不同的测试方法是验证和保障交付质量的手段，而不是构建质量体系的基石。测试的努力带来的更多是一些“安全感”，而非安全保障。</p><p></p><p>因此，要做到高质量的交付，就需要回到质量的本质，好的产品依赖于其底层设计。简单来说，XTransfer的质量设计核心思路是“好的质量是设计出来的，而非测试出来的”。保障质量需要尽可能地“设计先行”，在前期充分讨论需求，严格把关设计，把质量问题在源头解决。与之相对应的则是，不同于早期阶段的完成测试动作，团队需要从交付质量保障转入质量共建。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f3/f3add572f5ad276c192dc7301ccb5ee7.png\" /></p><p></p><p></p><p>测试的左移与右移是XTransfer质量保障团队目前正在探索的质量保障路径的关键，也是XTransfer质量保障理念的落地尝试。测试的左移与右移指的是，让质量保障尽早地发生在整个SDLC（产品开发生命周期），同时确保稳定性得到持续保障。</p><p></p><p>在需求阶段，测试左移的目标着力于验证需求质量，包括方案验证、功能验证、支撑性验证等，由此分析需求的完整性，及时发现设计中可能存在的问题。“XTransfer质量保障团队有明确的需求评审规范，测试会在项目需求阶段介入，避免等到实际测试阶段时才发现问题，导致修复成本过高，无法高效提交项目。”</p><p></p><p>在开发阶段，XTransfer质量保障团队需要充分了解开发的代码框架，从而更好地评估改动范围和需要回归的内容。同时，质量保障团队可通过提供自动化测试脚本的方式，让开发团队在前期加强自测，避免在后续收到提测包时仍然有基础问题存在。此外，质量保障团队与开发团队会在共同的规范下有序推进开发工作，这也是测试左移的关键一步。“目前XTransfer质量保障团队已经确立了开发质量规范，制定动作、明确责任人。其核心目标是将问题在初始阶段解决，避免在产品提交后重复工作。”</p><p></p><p>在运营阶段，XTransfer质量保障团队会持续监控产品在生产环境下的运营体验，确保产品在实际环境、场景下，其功能和体验都能符合用户预期，而这也是测试右移的关键步骤。此时，质量保障团队会通过埋点数据、生产监控、用户反馈等措施，与运维团队一起完善监控体系，发现系统可能存在的漏洞并及时修正。例如，对用户名、访问时间、资源地址进行监测，判断是否符合规范和要求；对访问频率过高或者其他异常情况进行监控，若符合警告规则，系统可通过邮件等方式通知相关人员，并帮助其快速定位问题。</p><p></p><h2>质量数字化管理</h2><p></p><p></p><p>对XTransfer来说，质量数字化管理的本质是将需求质量、过程质量、交付质量通过数字化指标抽象出来，并以此为依据完成质量保障。例如，通过大量元数据的收集和管理，团队可快速发现问题、定位问题，这其中涉及到数字化指标包括如过程质量中的demo次数、转测次数等；交付质量中的UT覆盖情况、自动化覆盖情况、缺陷情况等。</p><p></p><p>其中，需求质量主要指的是在包括原型图、PRD 文档、交互设计、技术方案、测试用例等基础上，质量保障团队从不同于产品、研发的角度理解需求设计，同时根据已有的数字化指标提出建议并协同产品、研发团队进行修正。在项目启动阶段，质量保障团队就参与到整个设计过程中，充分汲取产品、研发等不同岗位角色的需求，降低后续产品的过程风险和交付风险。</p><p></p><p>“对于过程质量和交付质量而言，一方面是通过测试的左移右移确保整个产品从研发到交付全过程保持质量可控；另一方面则是构建一系列标准化门禁，如研发架构侧资损防控标准化设计检查清单、验收清单，以及QA侧的Sign off条件、严格上线验收清单，包括账务比对清单、用户交互验收清单等。不能达到设计预期的产品将无法完成交付。”</p><p></p><h2>大质量模型</h2><p></p><p>XTransfer大质量模型指的是“持续”的质量保障能力，可以从“质量金字塔模型”和“一切皆代码”层面理解。</p><p></p><p>其中，质量金字塔模型在不同公司均有实践，这套理论模型在XTransfer质量保障体系中同样有所应用，包括从UT、API、UI到E2E都是不可或缺的部分，但是在XTranser更为坚持的观点在于，一切理论的背后都是代码，对于质量的保障实际上最终要落到代码层面。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/88/882ea082b6c7658f3c269268308a6463.png\" /></p><p></p><p>快速的高质量交付，意味着持续的全回归测试，“智能化测试”在其中扮演了重要角色，能够实现精准和高效。精准，是通过代码去度量影响范围；高效，则是通过代码如UT/E2E等来实现快速测试。</p><p></p><p>为持续提升测试精准度和效率，XTransfer质量保障团队会把测试专项能力向服务化能力转型，建立自动化为主的测试能力，减少手工测试和手工操作。目前，测试自动化主要包括自动化环境创建与部署、生成测试数据、执行自动化测试，生成测试结果与日志；此外，也会对测试相关结果进行自动化监控与分析，自动生成测试报告，便于进行测试定位失败原因与快速修复。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/61/61f74083e953ade0c4bdb45b8ec7ce65.png\" /></p><p></p><p></p><h2>质量文化</h2><p></p><p></p><p>质量文化在XTransfer被抽象为质量规范、质量度量和技术延展。随着业务更加成熟、规模不断增长，质量文化需要不断强调、落地和迭代，这就需要制定一些规范来保证落地效果。这里的规范不是强制要求大家一定要做什么，而是为了大家在不同的工作阶段都有据可依，知可为、知不可为。质量规范体现在产品需求阶段，有针对性地构建PRD规范、技术方案规范，在后续的开发、测试、上线等阶段构建开发规范、提测规范、发布规范、运营规范等。</p><p></p><p>同时，在不断提高产品质量的过程中，如何评估质量的效率也颇为重要，XTransfer质量保障团队将其抽象为质量度量，包括需求度量、开发度量、交付度量、运营度量、故障演练度量等维度，确保大家在关注质量的过程中，也要同步关注效率。</p><p></p><p>“建立质量文化，还需要关注对质量技术的研究，这是确保质量保障体系在团队最终落地，并提高质量效率的基础能力。”在XTransfer，团队关注新的质量保障理论和技术层面的探索，质量不仅是后台支持保障，也是前沿技术的落地场景。</p><p></p><p>例如，随着业务快速发展，传统的自动化测试已经不能满足快速变化的业务需求，自动化前置是XTransfer目前研究的重要课题。“为了持续提升研发交付效能，XTransfer质量保障团队将进一步加强人工智能技术在测试领域的应用，其本质是结合AI算法和测试数据对测试多环节进行针对性的优化，达到对业务需求更强的适应性和响应能力。”</p>",
    "publish_time": "2023-02-07 16:26:33",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "全球化安全生产 & 质量保障体系建设探索",
    "url": "https://www.infoq.cn/article/a7d4a78023afb75f21cf17fe3",
    "summary": "<p>作者：肖刚毅、张俊、李晶磊（全球化业务平台团队）</p><p></p><p></p><blockquote>全球化电商中的业务、技术及架构和国内技术都有一定差异，从安全生产保障和质量保障角度，这些差异带来了更多的挑战，本文将为大家分享安全生产和质量保障相关的经验。</blockquote><p></p><p></p><p></p><h1>一、前言</h1><p></p><p></p><p>作为有丰富国内电商技术沉淀的团队，在服务全球化电商业务中，一方面会自然传承国内电商技术体系去解决电商业务通用问题。另一方面，面对业务、技术、组织、文化、政策等维度差异，促使我们演进新的或更合适的技术体系。比如，国际电商业务发展的阶段特征、海外基础设施特征、国际业务区别国内业务的特征、用户和文化特征、以及更不可控的政策和合规等。在我们摸索多年形成的技术体系中，我们上一篇分享讲解了开发技术和架构相关经验，在本文中，我们想分享技术领域不可或缺的另一大块，安全生产和质量保障相关的经验。</p><p></p><p>分享技术经验以前，我们先把所服务的全球化电商这个对象，在一些关键维度稍作拆解，也是多年经验对全球化电商的一些关键特征的理解，而这些理解对我们的技术构建是至关重要的。</p><p></p><p></p><h2>1.1 业务差异</h2><p></p><p></p><p>在业务上，全球化电商主要有本对本和跨境两种最基本的类型。</p><p></p><p>东南亚电商品牌Lazada就是典型的海外本对本业务，主要实现在国外某国或地区，敏捷的构建一套支持本地买卖家交易的电商系统。这样的模式，决定了商家大部分在海外国本地，币种会相对单一，运营能力需要更加本地化等等。</p><p></p><p>跨境电商品牌AliExpress就是典型的跨境模式业务，主要实现中国商家能在中国货品优势下通过我们的系统将货物销售给跨境的买家，这里涉及的问题会大不相同。从语言、币种、时差、品类、活动、汇率差、物流、供应链等方面，我们需要有种种差异的技术解决差异的问题。电商业务，主要由电商系统、支付系统、物流系统组成，这三大系统的国际技术实现和国内技术实现都有一定差异。</p><p></p><p></p><h2>1.2 技术架构差异</h2><p></p><p></p><p>在技术和架构方面，也有显著区别：</p><p></p><p>基础架构差异：海外电商服务的对象大部分场景是跨国家的，同时海外的硬件设施和国内是有差异的。所以我们的系统要在考虑稳定的前提下，更低成本的实现数据同步、系统可复用、合规等等。这里我们的技术关键词是多单元部署、多机房部署、云原生。这些点对我们构建的质量体系的差异，十分关键。</p><p></p><p>应用架构差异：在电商技术领域，我们常常是通过不同的应用或微服务，构建出一套大的技术系统网，各个应用依据各自的领域拆分而来。区别国内电商的是，我们的应用或服务需要考虑站点，也就是国家站，甚至一个服务器同时通过多个域名服务多个国家站。除此之外，在应用架构上，敏捷中台如何支持好业务的问题中，我们设计了教堂&amp;集市的应用架构，让应用的灵活度和研发生产关系实现了质的提升。同时，也对如何保障好系统质量和稳定性提高了要求。</p><p></p><p>研发过程差异：中台需要尽可能抽象和合并电商逻辑，但国家差异化的本质一定会推演出大量国别定制需求，也因此而形成更复杂的组织架构，无论是本对本的业务，还是跨级业务中的本地化运营。所以我们的系统会同时有更多的、更接近电商用户的工程师一起开发。我们需要实现更灵活的应用编排、代码并行编写、隔离发布、流量调度等能力。在更灵活、更大型的研发过程中，质量把控的难度自然上了一个阶梯。</p><p></p><p>运行态差异：考虑到QPS特征等，在运行态，从成本和效能的角度，我们实现了多租户并行和架构隔离。这也决定了我们系统在复杂度、可测性、问题排查、测试环境、自动化、数据构造等方面的工作会更加复杂。</p><p></p><p>数据同步差异：即便我们的系统在运行态可能是租户复用的，但在数据上，考虑隐私、安全、合规、性能、可扩展等，我们是按站点进行物理或逻辑隔离的。在跨境场景中，要实现中国的商品在全球可以快速访问，必然需要实现秒级的数据同步能力。这对系统的稳定性带来了难度，也提高了测试用例的复杂性。</p><p></p><p>这些差异，有的天然由业务属性决定。有的是我们从技术上解决业务或架构问题时带来的新问题。从安全生产保障和质量保障角度，这些差异给我们带来了更多挑战，也是技术创新的机会，这也正是整个全球化技术体系的内核。</p><p></p><p></p><h1>二、安全生产体系</h1><p></p><p></p><p></p><h2>2.1 全球化高可用架构概述</h2><p></p><p></p><p>系统可用性(Availability) 最早在Patrick O‘Connor的 Practical Reliability Engineering 一书被提出。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/74/745611366afbe20cb5c34ded4136f960.png\" /></p><p></p><p>其中，MTTR 为 Mean Time To Repair，即系统故障后平均修复时间，表示系统可维护性。MTBF 为 Mean Time Between Failure，即平均非故障时间，表示系统可靠性。</p><p></p><p>因此，保障系统实现日常态高可用主要分为两个方向：提升MTBF，增加系统非故障时间，通过保持稳定性模式、系统冗余等手段，提升整体系统可靠性&amp;容错性。以及，降低MTTR，缩短故障恢复所需时间，从事故、变更、监控运维等方便，增加系统可维护性。</p><p></p><p>除了上述两个日常态高可用建设方向，对于大型电商系统，大促时如何在洪峰冲击下保持服务高稳态，大促前又如何在相对短暂的备战阶段摸清系统瓶颈，掌握全局核心链路，也是高可用体系构建中不可忽视的一环。</p><p></p><p>因此，本文将分为三个领域对全球化高可用架构展开论述：</p><p></p><p>高可用体系建设大促稳定性保障建设应用高可用架构</p><p></p><p></p><h2>2.2 高可用体系建设</h2><p></p><p></p><p>目前业界通用衡量高可用的标准是1-5-10。1分钟发现，5分钟响应/定位，10分钟恢复。在过往的实践中，1-5-10的达成，非常依赖SRE团队，团队的业务熟悉程度、问题排查手段，实操的熟练程度。不过随着系统的复杂度越来越高，链路依赖关系越来越复杂，1-5-10对SRE团队的要求越来越高。</p><p></p><p>高可用故障跟业务故障是有一定的区别，高可用故障是有通用性的。围绕着故障，我们可以做有针对性的布防。接下来我们介绍的是在国际化板块，我们围绕着故障定义建设的一套高可用故障体系。</p><p></p><p>下面我们将从一个交易下单成功率下跌的故障来分析整个高可用体系处理的过程。先假设存在一个故障定义：下单成功率下跌 5%持续10分钟。</p><p></p><p></p><h3>2.2.1 一分钟发现</h3><p></p><p></p><p>在故障发现的场景，过往是等待下跌了5%持续10分钟才会发出故障通告。SRE团队开始介入问题的处理。</p><p></p><p>下单成功率下降了 1%、2%的时候，或者下跌了5%持续了5分钟的时候，大家是缺少感知的。我们希望将故障响应的时间提前。提前到系统指标发生异常的时候就开始介入。</p><p></p><p>我们在系统指标异常发现之后，在故障发生之前，加入了风险预警的机制（图1实线所示）。风险预警由GOC触发，触发后 SRE团队开始介入问题的处理。这样问题很有可能在故障发生时，完成风险的解除。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/42/42e84aa4ccdd9d1092665eae5129bb5f.png\" /></p><p></p><p>图1 风险预警流程与原故障应急流程对比</p><p></p><p></p><h3>2.2.2 五分钟定位</h3><p></p><p></p><p>当问题发现后，我们需要尽快的定位原因。高可用故障，分为两类：变更类与运行类。</p><p></p><p>这两类故障的定位，都需要知道几个信息：</p><p></p><p>故障关联的系统有哪些，及其依赖关系？当前报错是哪个系统导致的，哪个是表象哪个是根因？故障是否存在相关的变更：时间相关、范围相关？</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0e/0e56d532b697ee1a3a02b894e1de0212.png\" /></p><p>图2 五分钟定位产品</p><p></p><p>在全球化业务中，针对核心应用，通过了一套统一的日志框架，进行应用信息的收集。收集的信息包括所有的RPC调用链路、核心的出参（错误码、是否成功）、中间件信息。通过该日志框架收集的日志信息，我们能够还原所有核心应用的链路拓扑信息，与其接口的成功率、错误码、RT等实时信息。</p><p></p><p>当风险预警发生时，可以得知两个核心的信息</p><p></p><p>入口应用问题场景</p><p></p><p>通过入口应用与问题场景，及链路拓扑信息，我们能够定位到链路下游可能出问题的节点。</p><p></p><p>除了链路信息的收集，我们还做了变更信息的收集，包括发布变更、配置变更、运营操作变更。通过变更大脑中相关度的算法，计算出与当前故障场景最相关的变更。</p><p></p><p>通过上述的方式，对于高可用的发生，能做到90%以上的2分钟定位准确率。当定位后，接下来就要考虑如何恢复了。</p><p></p><p></p><h3>2.2.3 十分钟恢复</h3><p></p><p></p><p>在1-5-10三项中，10分钟恢复往往是最难的。</p><p></p><p>针对变更类故障，其中配置变更的回滚速度比较快，能够在10分钟内完成回滚。针对发布类的变更，由于涉及应用启动时间，10分钟恢复很难做到。针对发布过程中的情况，建立精细化切流的能力，能够切走有问题的机器的流量（已发布的机器）。但针对已经发布完的情况，还是基于应用完整的回滚。</p><p></p><p></p><h2>2.3 大促稳定性保障建设</h2><p></p><p></p><p>大促是每年投入人力最大的项目，光是大促稳定性保障，往往需要上千人日的投入。其中包括各种梳理的专项、多次全链路压测。另外机器资源也到了每年的峰值。在确保大促稳定的情况下，怎么降低人和硬件成本，成为了大促保障的主要命题。</p><p></p><p></p><h3>2.3.1 保障大促稳定，打造大促确定性</h3><p></p><p></p><p>在备战过程中，最关键的是压测。而压测又分为几个关键的步骤：流量评估、施压、压测复盘。</p><p></p><p>流量评估，我们将流量评估的过程和数据全部上翻到了系统，大促确认了关键指标后，将关键指标输入系统，将会得出各个核心链路的流量值，后续的保障我们会基于该流量值进行硬件资源的准备。各个业务域的开发同学只需要持续的维护关键指标与系统入口流量的计算公式即可。</p><p></p><p>在过往的压测中，时常会出现少压漏压而导致大促峰值出现异常流量的问题，这些异常流量还曾引起过P1的故障。为此，在施压过程中，我们通过关键系统流量、性能指标的收集，与上述的流量评估结果进行对比，发现流量不符合预期的链路。通过增加流量或者补压消除风险。另外通过链路的拓扑引擎，进行日常流量与施压流量的对比，发现可能漏压的链路。</p><p></p><p>通过这个方式，我们发现了多起的少压漏压的情况，确保了压测的真实性，保障了大促的稳定性。</p><p></p><p></p><h3>2.3.2 降本提效</h3><p></p><p></p><p></p><h4>2.3.2.1 硬件成本</h4><p></p><p></p><p>大促往往具有一个特点，周期短，流量大。在非压测、非大促峰值的情况，硬件资源并不需要那么多。因此，我们考虑从施压到链路，都具备自动扩缩容的能力，从而大大缩小我们使用的容器资源。</p><p></p><p>压测：在压测开始之前，进行施压机、业务容器的扩容。在压测结束后，对施压机、业务容器进行缩容。</p><p></p><p>大促日：大促周期进行扩容，非大促周期缩容。通过这个方式，我们能降低50%容器资源。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/73/73bf77419dc6e20fe47e3340f528806a.png\" /></p><p>图3 自动化压测</p><p></p><p></p><h4>2.3.2.2 人力时效</h4><p></p><p></p><p>全球化大促备战，涉及多个国家、多个时区，我们为了每个大促备战的专项，基本都把备战内容进行了系统上翻。除了review的工作，大部分都能在系统上完成。这样大大的减少了大家协同、数据整合的工作。大促的负责人也能从系统上，了解到当前大促备战的进展与风险。结合着自动化压测、无人守值等自动化工具，大大的减少了人员的投入。</p><p></p><p>过往几次大促看，施压人员减少80%，大促保障项目组投入减少了30%人次。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/92/9264b3f0e6c82a46393e2e856670ac56.jpeg\" /></p><p>图4 大促工作台</p><p></p><p></p><h2>2.4 系统高可用架构</h2><p></p><p></p><p>上述章节讲述了面向故障发生、大促备战的高可用的考虑。接下来主要是系统高可用架构。每个系统都具备高可用是整个业务高可用的基础。SRE团队做不到对每个系统十分了解，怎么做到所有的系统都具备相同的、较高的水准是我们要考虑的方向。</p><p></p><p>这里我们引入了一套高可用的度量体系。针对系统的可靠性、高吞吐、可监管、容错性进行了定量的评估。针对每项的分数，我们提供了建议的优化策略与方法。每个业务系统的同学，就可以有针对性的对系统进行优化。而SRE团队也有了一个运营的阵地。通过不断的完善度量体系，增添指标，可以不断的驱使系统负责人进行优化治理工作。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/81/8104b79eef3f41af32ac0be42b15946d.png\" /></p><p>图5 高可用度量体系</p><p></p><p>这些指标的统计往往都是根据线上的数据进行事后的统计。每次的变更质量，还是需要技术质量团队保障。安全生产体系是构建在技术质量体系上的二次防护，安全生产是质量体系的右移，质量体系是安全生产的底座。要确保系统和业务的稳定，我们在质量保障体系上也做出同样的努力和探索。</p><p></p><p></p><h1>三、质量保障体系</h1><p></p><p></p><p>全球化电商系统的质量保障，首先要解决电商业务的质量问题，需要在不同的电商链路构建不同的质量体系，解决各个领域最关键的问题。同时，考虑到国际电商和国内电商的业务、技术差异，质量体系或实现手段，也会有差异。比如：</p><p></p><p>因为多站点而出现的站点应用，应用数相对更加膨胀，业务中台负责的内核代码需要在各个业务各个站点应用同时运行，如何高效测试和覆盖，如何能准确的度量覆盖率。</p><p></p><p>因为线上qps相对较低，测试环境/正式环境的比例会显著变高，测试成本大幅提升。同时多个业务因为并行运营会有更多的并行迭代，更加显著提高了所需测试环境数量，加剧了被测对象的测试资源耗费过高问题。如何构建一套测试环境体系可以在更高效支撑业务并行迭代的同时，让环境成本大幅降低。</p><p></p><p>通过多年技术迭代，历经全球电商系统的各项大型技术重构战役，在支持好业务和技术升级的同时，解决了许多难题，不断迭代着质量保障体系。我们构建了高效的自动化和持续集成能力、建设了更高效的测试环境技术和运营体系，把资损防控从单点变为可左移和可右移的长周期可覆盖体系，在实践中推行了标准研发流程及配套工具度量和运营能力。这些努力，在技术和效能提升上有明显体现，同时通过质量平台将各领域测试能力产品化，友好的服务其他业务团队。</p><p></p><p></p><h2>3.1 自动化体系</h2><p></p><p></p><p></p><h3>自动化建设的挑战</h3><p></p><p></p><p></p><h4>全球部署&amp;法律合规</h4><p></p><p></p><p>在上一篇文章里面介绍国际化基础设施方面的挑战，自动化测试也面临着同样的挑战。由于被测对象的全球部署特点，再加上各国法律合规上数据不准出境、不准入境等规定的限制，测试用例与测试数据的展示、测试用例的运行与维护这些原本非常基本的诉求都面临着很大的挑战。</p><p></p><p></p><h4>开源架构</h4><p></p><p></p><p>国际化最新一代的架构实现了业务（集市层）和中台（教堂层）各自闭环、独立迭代，这就意味着需要能够独立测试，传统的接口测试只针对完整的应用进行测试，集市层和教堂层的独立测试需要自动化测试粒度更细，也要求自动化测试的重点从黑盒自动化转向灰盒自动化。</p><p></p><p></p><h3>3.1.1 自动化实践</h3><p></p><p></p><p>我们按照经典分层测试理论设计自动化体系，并将流量回放技术应用于分层测试中的多个环节中，包括单元测试生成、模块测试生成、接口测试、链路测试用例，并为其提供测试数据支撑。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/03/031de9e7e79ba06c6c732a439113b5e1.png\" /></p><p>图6 分层测试金字塔</p><p></p><p></p><h4>3.1.1.1 单元测试</h4><p></p><p></p><p>单元测试作为开发工程师保障质量的首选方法，但仍有几个问题需要解决。</p><p></p><p>存量的老应用缺乏单元测试基础，需要快速补齐；复杂系统的测试数据构造难，需要配套工具；系统重构会导致单元测试大批量失效，需要低成本的快速修复。</p><p></p><p>对于旧系统的存量代码，通过流量直接构建完整的单元测试用例，快速补齐存量代码的单元测试用例。</p><p></p><p>对于新增函数，我们通过静态分析快速生成单元测试用例的基本“骨架”，开发工程师补充测试数据后即可快速完成一个单元测试用例。</p><p></p><p>对于系统重构场景，通过静态分析、流量重采集方式批量重新生成单元测试用例，让单元测试成为可持续汰换资产，避免成为开发工程师的负担。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c5/c5d99ffecd12c44a4c6c908c986ba0d1.png\" /></p><p></p><p></p><h4>3.1.1.2 接口测试</h4><p></p><p></p><p>国际化业务涉及到多租户、多站点的特性，用例维护管理的成本会随着业务的水平扩展而显著增加，因此需要更高效的进行用例收集、用例维护管理。</p><p></p><p>在用例收集上，采用了自动特征分析及去重的策略，在无人参与的情况下，就可以自动沉淀用例集，然后有人工输入专家经验，提升特征丰富度和用例覆盖率。</p><p></p><p>在用例管理上，弱化了传统相对复杂的用例集管理功能，使用系统托管的方式进行用例维护，并且用例运行时自动根据多租户、合规等条件进行调度，保证准确性同时降低人工介入成本。</p><p></p><p>在回放结果上，通过对错位、断言等聚合分析，有效减少失败分类数量，降低人工排查的成本，并在运行后提供代码覆盖率和业务覆盖率度量结果。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3e/3ed0ddfd4d14bf4c1ff1d8453016e071.png\" /></p><p>图8 接口测试原理示意图</p><p></p><p></p><h4>3.1.1.3 模块测试</h4><p></p><p></p><p>对于开发工程师来说，除单元测试外，对于单一业务场景的小范围集成测试有很强的诉求。因此，我们提出了一种新的测试方法——模块测试。模块测试的测试粒度介于单元测试和接口测试之间，主要对逻辑相对比较内聚的模块进行测试。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6e/6ea496c462cb72404b3dc7799d70d1c7.png\" /></p><p>图9 模块测试与单元测试、接口测试的测试范围比较</p><p></p><p>模块测试的思想是将用例直接运行在应用中，可以在测试用例运行的过程中访问到应用中的资源、实例，更加简单、真实，但是测试用例仍就为一个JUnit用例，与单元测试一致。</p><p></p><p>整个方案利用JavaAgent技术，实现了测试用例与被测应用实时通信，保证了测试用例修改即时生效，实现了即改即测。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c1/c11b4ebbecf107b1a24ccf47920b10b8.png\" /></p><p></p><p>表1 模块测试与单元测试、接口测试的特点对比</p><p></p><p>模块测试不仅解决开发工程师小范围集成测试的问题，同时也能够满足国际化开源架构下对于集市层、教堂层独立测试诉求。</p><p></p><p></p><h4>3.1.1.4 研发辅助</h4><p></p><p></p><p>在分层测试之外，为了提升研发自测效率和将质量保证前置，我们为开发工程师提供了自测辅助工具，包括提测前的本地接口测试能力和本地独立联调能力。</p><p></p><p>接口自测</p><p></p><p>接口自测一般在单元测试和模块功能测试完成之后进行，策略是复用接口测试能力，在IDE中为研发提供一套完整的自测流程和相关功能，并与当前代码分支（变更）绑定，使开发工程师在其编码环境中即可快速完成测试。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/93/93ca1ee2c2e6109f19bc7941eb7a32dc.jpeg\" /></p><p>图10 接口自测流程</p><p></p><p>本地联调</p><p></p><p>联调是研发自测最后一个环节，也是上下游高度耦合、相互依赖和效率较低的环节。为了提高联调效率，我们实现了一套本地自测联调的方案。其思想是参与联调的上下游共用同一条链路用例，并按照接口约定为其依赖方修改对应的数据，使得所有参与联调的开发工程师仅依靠链路用例即可完成联调，实现彻底解耦。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5a/5a3729c15d025794f738c02d9f494fad.png\" /></p><p>图11 本地联调原理</p><p></p><p></p><h3>3.1.2 度量体系</h3><p></p><p></p><p></p><h4>3.1.2.1 代码覆盖率</h4><p></p><p></p><p>代码覆盖率是测试度量的有效手段之一，但是全量代码覆盖率往往基数庞大，不利于精细化管理。在日常迭代过程中，增量代码覆盖率更加直观，可以对每次代码变更做精细化的覆盖率管理，持续提升代码覆盖率。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f7/f79ef17be907b9e6078ba8cc7b792b5d.jpeg\" /></p><p>图12 增量代码覆盖率原理</p><p></p><p></p><h4>3.1.2.2 影响面分析</h4><p></p><p></p><p>在度量体系中，度量风险也是重要一环，影响面分析可以帮助研发工程师更加准确的评估每个函数改动对全局的影响。通过对生产环境采集流量中的函数调用关系进行建模，形成一张包含全部函数间关系的“图”，通过这张“图”可以分析出每个函数上游的调用方，即受影响的函数。</p><p></p><p>影响面分析不仅可以评估函数变更对分布式系统的影响，在国际化的开源架构体系中，还可以帮助教堂层的开发工程师准确评估教堂层变更对集市层的影响。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/83/83d3d9d84d17d6300d50e124cb46df29.png\" /></p><p>图13 影响面分析原理示意图</p><p></p><p></p><h3>3.1.3 自动化用例持续集成</h3><p></p><p></p><p></p><h4>3.1.3.1 什么是自动化用例持续集成？</h4><p></p><p></p><p>区别传统的持续集成是面向被测对象的概念，自动化用例持续集成是为解决自动化用例腐化问题而进行的创新。以主干预发部署单元为最小回放单位进行持续回放，降低了运行噪音和精细了用例运行态粒度，并提供更友好的量化能力，包括用例通过率，接口覆盖率，代码覆盖率，业务覆盖率等，帮助用例持续迭代。</p><p></p><p></p><h4>3.1.3.2 方案&amp;实现</h4><p></p><p></p><p>为了提高通用和可扩展能力，我们通过产品功能实现用例的生产、消费、防腐，替代人工维护。持续集成平台支持应用接入、用例集合管理、定时执行配置。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8ffc1b731466bbc478583c9b9cc75a2.png\" /></p><p>图14 自动化持续集成</p><p></p><p>持续集成平台主要分为4个模块：</p><p></p><p>用例管理：支持集团内多种自动化用例平台精准回放：定义用例源，提高用例的管理精度用例防腐：通过规则可配置、环境管控、实时告警，实现用例及时防腐结果度量：提供多维度的覆盖率报告，更有效便捷的帮助用例迭代</p><p></p><p></p><h4>3.1.3.3 效果</h4><p></p><p></p><p>可以便捷清晰的观测到核心被测对象最近20天的用例运行结果、各类覆盖率，也会给出其他优化建议。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/44/44769a8ccf279e6cf51542b82239b3a3.png\" /></p><p>图15 持续集成效果</p><p></p><p></p><h2>3.2 测试环境</h2><p></p><p></p><p></p><h3>3.2.1 测试环境问题</h3><p></p><p></p><p>测试效率问题：测试环境的稳定性，会严重影响上下游测试效率；测试环境资源问题：需求高峰期并发，涉及测试环境抢占；需求低峰期，多余测试环境被闲置；测试环境隔离问题：子域内需求需要相互隔离；子域之间快速支撑联调；测试环境使用成本：测试环境答疑成本，以及构建成本；</p><p></p><p></p><h3>3.2.2 测试环境难点</h3><p></p><p></p><p>测试环境隔离支持同步接口/HTTP服务和异步消息隔离；测试环境资源根据需求情况，弹性占用，同时也要控制预发环境膨胀的问题；测试环境问题答疑：往往业务问题、系统问题都会被上报为环境问题，导致排查耗时，如何快速定位问题？</p><p></p><p></p><h3>3.2.3 测试环境方案</h3><p></p><p></p><p></p><h4>3.2.3.1 测试环境管控方案</h4><p></p><p></p><p>方案：主干、项目预发建设；环境防腐与管控；环境问题排查工具建设</p><p></p><p>线下环境：针对DB、Tair以及资金相关的变更进行管控，其他需求不在管控范围内；</p><p></p><p>预发环境：引入项目预发环境支持日常需求变更，项目预发环境无管控，即用即建，变更发布或者关闭之后释放资源。项目预发环境用环境标签隔离，对其他应用的依赖，且不在变更列表中，路由主干预发环境。</p><p></p><p>发布阶段：发布阶段包含两类情况，一是测试完成之后，生产部署，在预发主干环境部署之后，进行功能回归验证。二是业务UAT验收，主干预发环境基于UAT变更进行部署；主干预发：增加功能回归和测试用例门禁(主干预发是指和生产环境代码版本一一致的环境，用于提供稳定的上下游依赖环境)</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/89/89da135245b46596eaf031407cb45f0d.png\" /></p><p>图16 一个变更在测试环境中的扭转&nbsp;</p><p></p><p></p><h4>3.2.3.2 项目预发环境隔离方案</h4><p></p><p></p><p>流量转发流程：</p><p></p><p>1）用户HTTP请求进入接入层，集团网络层将流量路由到主干预发环境；</p><p></p><p>2）主干预发环境将流量标组装项目预发环境的流量路由标识；</p><p></p><p>3）通过流量调度服务返回目标项目预发环境，由主干预发环境转发到目标项目预发环境。</p><p></p><p>流量隔离方案：</p><p></p><p>1）子域项目隔离：通过流量环境标进行隔离，需求之间互不影响，包含消息、接口服务；</p><p></p><p>2）多域联调需求：项目预发环境一键加入联调，将涉及变更的应用归属于一个预发联调环境中，相同隔离标识的应用相互调用，支持联调测试。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ab/ab7750509b4f883a667b5866af1a7749.png\" /></p><p>图17 项目预发环境隔离</p><p></p><p></p><h4>3.2.3.3 环境防腐&amp;问题排查</h4><p></p><p></p><p>目的：对预发、项目预发、线下主干环境采取监控等手段，保障环境可用，发现环境腐化现象并治理。</p><p></p><p>策略：通过服务可用性及业务正确性监测，主动发现环境异常。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ed/ed0ae0a3657376341cc22b09decc9564.png\" /></p><p>图18 环境稳定性</p><p></p><p>目前已累计产出治理项如“hsf服务异常”和“业务健康度不达标”若干，监测衡量环境是否腐化。</p><p></p><p>上文所说，目前业务中台流量隔离方案采取集团通用流量隔离方案，该隔离方案存在如下好处：</p><p></p><p>保障不同需求同一时间提测不互相干扰；开发自测修复bug和测试环境之间的隔离，保障高效率的开发和测试。</p><p></p><p>但是使用过程中可能会遇到以下问题：</p><p></p><p>隔离环境服务异常，导致流量路由至主干预发；云上云下没有对等部署，用户流量被路由到主干预发。</p><p></p><p>隔离失败带来的危害包括测试分支错误等导致的漏测，因此测试过程中需确认环境隔离生效正确。对于长链路应用来说，排查较麻烦。基于此，我们也提供了链路排查工具，可根据请求ID查询并分析经过的所有应用环境与机器信息，帮助业务测试同学能快速的排查出环境问题，在实战中效果很好。</p><p></p><p></p><h2>3.3 质量工具平台</h2><p></p><p></p><p></p><h3>3.3.1 问题</h3><p></p><p></p><p>为了降低重复工作量和提升测试专家经验的可传承度，很多测试团队都会建设效能工具门户，比如数据构造工具、度量工具等。但工具建设更深层次的问题是如何持续运营，如何持续正确迭代。</p><p></p><p>业务庞大团队历史悠久，导致工具分散，前后端链路复杂，也没有统一品牌心智。工具之间没有整体规划，有工具能力缺失和重叠，重复轮子泛滥。各领域新增测试工具开发&amp;维护有成本，对新手不友好。在devops研发体系、云原生等架构升级中，质量工具难以整合同步升级。工具效果没有统一度量指标，难以运营迭代。</p><p></p><p></p><h3>3.3.2 架构和设计</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8e/8ef51ab56f3db166478c2c038f6a95c6.png\" /></p><p>图19 质量工具平台设计</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/19/1953dfc91db006e64f1838ed2153bf66.png\" /></p><p>图20 质量工具平台方案</p><p></p><p></p><h3>3.3.3 效果</h3><p></p><p></p><p>统一了多个分散的领域测试工具的产品和技术架构，提高可持续运营能力；对外提供10+种平台测试能力，并且进行了2.0升级，包括自动化、环境、资金安全、测试账号、开放工具等；平台服务超过8个不同业务部门，日均UV&gt;100，日均PV&gt;1000。</p><p></p><p></p><h3>3.3.4 质量平台孵化的一个案例：特征识别&amp;业务度量</h3><p></p><p></p><p>质量平台的升级不但实现了对提升已有工具能力的目标，借助对各产品关系的厘清、对新问题的重新定义，也促成了不少新的工具产生。其中借助标签系统升级而实现的业务度量工具就是一个典例。对资深的测试而言，测试用例覆盖全不全是一定会面对的难题，区别代码覆盖率，我们打磨业务度量工具的目标是从更客观真实的视角去度量用力的有效覆盖度。</p><p></p><p></p><h4>业务痛点</h4><p></p><p></p><p>用例多：国际化电商各应用自动化主要基于流量采集沉淀用例，单应用的用例从几千~几十万不等。</p><p></p><p>场景多：消费者链路业务场景复杂，场景梳理困难，各域的场景梳理方式各不相同。存量场景覆盖不足：用例虽多，但场景覆盖率不足，以交易为例只能覆盖到主干链路，一些特殊场景易遗漏。场景覆盖更新不及时：新增功能新增场景，用例更新不及时，往往会遗漏对应场景的覆盖。无法度量：项目交付时无覆盖率计算口径，难以评估覆盖结果，发布标准只能依赖人的经验</p><p></p><p></p><h4>设计思路</h4><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ea/ea304ab730fdf91675a9405b93a133ab.png\" /></p><p>图21 测试用例特征识别与业务度量方案</p><p></p><p>对线上流量的更全面采集，通过算法分析以及少量的人工参与，实现对单应用业务标签可自动化获取，提高获取的准确度和降低标签维护成本。通过流量染色和其他数据分析能力，对标签链关系进行分析和在线管理，实现全量业务场景可分析。当然，这个过程需要多次的迭代，降低部分特殊参数的噪音，以及被测对象在不断迭代的同时需要对已经产出的全量业务场景同步维护。目前我们已经在部分核心应用落地，有效的补充了大量未覆盖测试用例。</p><p></p><p></p><h2>3.4 资损防控</h2><p></p><p></p><p>资金安全故障是指因技术原因（包括编码缺陷、变更执行、系统设计类漏洞、安全漏洞等）导致的线上产生资金损失的故障。根据产生资损的对象将资损场景分为以下两类</p><p></p><p>平台多出：买家、卖家、平台、供应商、合作伙伴等蒙受直接资金损失，或未获得相应的优惠折扣（例如红包、购物津贴无法使用等），且最终均需由平台赔偿或平台多出流量/权益/钱等。</p><p></p><p>平台少收：平台佣金、运费等应收款少收或收入减少。</p><p></p><p>国际电商技术服务多个业务和国家站，部署架构、运营模式都给资损防控加大了难度，如多单元部署架构下的数据同步延迟风险、跨境模式下多币种计算涉及复杂的汇率转换、财税合规问题、多时区、多语言等。我们主要通过持续在资损场景分析、监控降噪、智能监控规则三个方面投入，确保整体资损风险可控。</p><p></p><p></p><h3>3.4.1 资损场景分析</h3><p></p><p></p><p>业务拆分：对有资损风险的业务模块，比如交易下单、库存扣减、营销冻结等，针对业务模块的特性，开展接近白盒测试的内部一致性梳理和对账核对补充。一般会涉及业务梳理、技术风险梳理、强弱依赖梳理等。与上游一致性：对调到本应用的请求，或者本应用需要消费的消息，做一致性核对。与下游一致性：对本应用调到的应用，或者本应用发出消息的消费方，做一致性核对。</p><p></p><p></p><h3>3.4.2 资损监控降噪</h3><p></p><p></p><p>如果监控有大量噪音，那么监控本身就是无效的。特别在资损监控领域，如果不加治理，告警量往往在10W/天的级别。目前我们已经将电商中台、LAZADA、AE等所有站点的监控核对规则统一收拢到资金安全大盘，对已有的大量对账脚本进行逻辑持续防腐和脚本告警的持续防腐。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8e/8eec8f3d3e13b8cf2346d3ad88f07b12.png\" /></p><p>图22 资金安全监控大盘</p><p></p><p></p><h3>3.4.3 智能监控规则</h3><p></p><p></p><p>目前主流的资损监控工具都需要人工参与脚本的编写和调试工作，在站点和业务扩展很常态的国际电商中，边际成本很高，因此需要一种低成本且完善的资金安全核对脚本生成方式来降低技术投入成本。我们基于流量的字段级别进行算法分析关联度，自动化生成资金安全规则。</p><p></p><p>产品架构图：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/86/86cb09ab24fc47c1a3b965ae31998e0b.png\" /></p><p>图23 资金安全监控规则生成</p><p></p><p>其中，算法模块使用流量解析模块生成的数据集进行算法的分析，包括数据处理、字段关系分析、条件关系分析、结果处理，整体流程图如下：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/90/90b51c63f297f0076cfe7ca174e320cb.png\" /></p><p>图24 字段相关性判断</p><p></p><p>通过以上分析和数据聚合，算法模块的产出物为字段间关系 + 可靠度，供监控规则生成模块自动或者手动生成监控项。</p><p></p><p></p><h2>3.5 研发过程SOP</h2><p></p><p></p><p></p><h3>3.5.1 研发过程中已有的痛点</h3><p></p><p></p><p>根据调研，在没有SOP前，研发过程的痛点很多，其中Top痛点如下：</p><p></p><p>需求评审/技术评审/提测都是线下操作，线上数据缺失；</p><p></p><p>预发环境不稳定，研发环境和测试环境互相干扰；</p><p></p><p>CR时机过晚，未发挥出CR最佳的效果；</p><p></p><p>单元测试和持续集成测试覆盖不足，未发挥完整作用；</p><p></p><p>业务覆盖率难衡量，无卡点约束。&nbsp;</p><p></p><p></p><h3>3.5.2 逐步建设研发过程SOP</h3><p></p><p></p><p>构建整个研发SOP的推导过程如下：</p><p></p><p>1）观察：现有研发流程不规范影响了研发效能和研发质量。</p><p></p><p>2）调研：通过调研不同的干系人（PD、开发、测试等），获取不同视角的诉求或痛点。</p><p></p><p>3）筛选：筛选出TOP-N亟待解决的诉求或痛点。</p><p></p><p>4）分析：分析这些节点的现状，推导出解决方案。</p><p></p><p>5）落地：分析哪些痛点是可以复用或定制现有工具就可以解决，不需要重复造轮子，哪些痛点是需要开发新产品来支持的。</p><p></p><p>6）度量：SOP度量采用的是差异化运营方式，基础度量指标可以直接复用现有研发效能产品来分析和下钻数据，新增指标需要单独维护一套可视化报表来差异化运营。</p><p></p><p>7）生长：通过分析数据或干系人反馈会生成新的Top-N的痛点，进而形成持续迭代泛化的研发流程SOP体系。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d5/d534bc878039376b08bdda9ebd236f8f.png\" /></p><p>图25 研发流程SOP</p><p></p><p>研发流程SOP体系终态结果如下：</p><p></p><p>SOP覆盖了整个研发过程，采用“筛选关键节点+线下会议对焦+线上流程管控”的方式来规范研发过程，对在此过程中获取到的关键节点数据统计、分析和下钻，定位出研发流程中瓶颈问题，进而提升工程质量和研发效能。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/99/99200ba63a7b5d8e7d7161f02451af14.png\" /></p><p>图26 研发流程SOP管控</p><p></p><p></p><h3>3.5.3 SOP数字化运营</h3><p></p><p></p><p>研发SOP目标是将研发流程数字化产品化，提高研发交付过程顺畅度，规范研发流程，提升工程质量。</p><p></p><p>SOP实施路径主要将部门内的商家和交易两个团队作为试点，根据不同团队的习惯和研发流程现状采用不同的策略因地制宜地实施：</p><p></p><p>1）交易团队采用绑定技术架构升级项目的方式，推进研发效率升级，落地关键数据获取。</p><p></p><p>2）商家团队采用绑定卓越工程项目及OKR，分应用地推进SOP的落地和效能提升，重点关注过程增量指标。</p><p></p><p>获得关键指标数据后便可以用来做SOP的深度运营，SOP度量采用的是差异化运营方式，即基础度量指标直接复用现有集团研发效能产品的数据可度量方式，新增指标需要重新维护一套定制化度量报表，收集并分析研发流程关键节点信息 ( 需求评审、技术评审、创建变更、部署、提测、发布 )，助力研发效能治理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b3/b397b1b678200fe4160265563767e8af.png\" /></p><p>图27 研发过程SOP运营目标</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6e/6e2bf2d75f1558535b8008a0ace04c17.jpeg\" /></p><p>图28 研发过程SOP数字化运营结果</p><p></p><p></p><h2>3.6 全球化中台质量保障体系</h2><p></p><p></p><p>以上各领域的质量建设，汇为质量体系，即质量工作开展侧重点和关键路径。这是构建在质量基础设施的、可度量的、和业务关键指标绑定的体系，通过SOP建设和运营，贯穿和落地在全球化电商中台质量保障过程中。我们也通过质量月报持续的运营各维度质量数据，对体系迭代升级。</p><p></p><p></p><h1>四、未来展望</h1><p></p><p></p><p>跨境电商、海外电商、全球化电商，是近年互联网的热点，越来越多的公司开始构建各个维度的跨境电商技术能力或产品。在国际形式、政策不可预测的大背景中，我们面对的机会和挑战也很不确定。但从技术的角度看，被测对象、稳定性保障对象，一定有确定性。我们需要用经验和功底去摸索积累，支持好全球化电商技术的演进。未来我们会在安全生产高可用治理、质量保障的可度量可托管、自动化测试更接近智能化等方面继续探索，更高效、清晰、低成本的支持好全球化技术和产品快速迭代，能灵活的应对更多的变化。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8e/8eeeda2902965aa264c2418c990f8cf5.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fe/fe8bf159880c954ce1ab508b33144df5.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e2/e2abc39eaf8f4130d8dee5f6fd7a8542.png\" /></p><p></p>",
    "publish_time": "2023-02-07 17:49:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "“赋能制造 因你而耀”第六届全国工业互联网数据创新应用大赛算法赛题上新！",
    "url": "https://www.infoq.cn/article/FYSwjaR1k8vyzyVwWQjm",
    "summary": "<p>第六届全国工业互联网数据创新应用大赛（以下简称“大赛”）装箱百万赏金发布两道全新算法赛题。</p><p></p><h1>大赛介绍</h1><p></p><p></p><p>为进一步壮大以应用实践为导向的大数据算法人才队伍，挖掘更多工业互联网数据创新解决方案，本届大赛由中国信息通信研究院和深圳市宝安区人民政府主办，联合中国东方电气集团有限公司、TCL华星光电技术有限公司、阿里云计算有限公司天池平台、工业互联网产业联盟等合作伙伴，设置了三道工业大数据算法赛题，欢迎广大选手报名参赛，优胜者将分享百万奖金，更有机会在深圳市宝安区落户！</p><p>&nbsp;</p><p>继“氢燃料电池系统性能均值预测”之后，2月6日大赛官网两道全新赛题新鲜出炉，并启动选手报名程序。</p><p><img src=\"https://static001.geekbang.org/infoq/f8/f89bdcbfa9dbf55a4ae827a6dfcb05c9.png\" /></p><p></p><h1>赛题介绍</h1><p></p><p></p><p>新的赛题挑战分别来自TCL华星光电技术有限公司和阿里云计算有限公司天池平台，让选手在比拼大数据建模预测技术的同时，亲身参与到前沿领域的专业课题，实践算法技术与真实挑战的精彩碰撞。</p><p></p><h4>电子信息行业液晶面板产品量测值预测赛题</h4><p></p><p>场景：产品质检</p><p>赛题合作伙伴：TCL华星光电技术有限公司</p><p>在电子信息产业，液晶面板生产制程复杂且精度要求高，生产过程中需要设置多处量测站点频繁进行产品拦检以保证产品质量，然而这种方式也带来了生产成本的增加和生产效率的降低。本赛道旨在通过大数据建模预测技术，对产品实现实时模拟全检及异常实时监控拦截，有效地帮助工厂提升产品质量、缩短生产周期，提升经济效益。</p><p>选手可登录PC访问<a href=\"https://www.industrial-bigdata.com/Competition\">https://www.industrial-bigdata.com/Competition</a>\"报名参赛。</p><p></p><p>扫描二维码加入该赛题选手沟通群</p><p><img src=\"https://static001.geekbang.org/infoq/33/330119577f6a95f5eabf9165016b8e6a.png\" /></p><p></p><h4>化工行业工业生产反应装置的建模预测赛题</h4><p></p><p>场景：工艺优化</p><p>赛题合作伙伴：阿里云计算有限公司天池平台</p><p>本赛题与阿里云天池联合举办。在流程工业中，生产装置将不同原料经过物理或化学反应加工成高附加值产物，这个转变一般是由各类反应器负责完成的，往往处于黑箱状态，亟待通过综合经验数据构建算法，并结合化学原理固化成可复制的模型。本赛道构建模型预测控制器，控制器通过预测关键指标的未来趋势，自动调整操作变量，实现产线的自动化智能控制。由于预测模型需应用于实际生产控制，对模型的可解释性、泛化性、计算效率和预测方向的准确性等方面要求较高，本赛道希望研究一些典型的线性和非线性动态模型，探寻具备可解释性、且泛化性强的建模算法，为实现精确的过程控制与优化提供基础。</p><p>选手可登录选手可登录PC访问赛事合作伙伴网站<a href=\"https://tianchi.aliyun.com/competition/entrance/532046/introduction?spm=5176.12281949.0.0.605a3b745u21nA\">https://tianchi.aliyun.com/competition/entrance/532046/introduction?spm=5176.12281949.0.0.605a3b745u21nA</a>\"报名参赛。</p><p>&nbsp;</p><p></p><h1>赛程安排及报名方式</h1><p></p><p>1. 报名：至2023年3月24日0:00</p><p>2. 初赛：2023年2月6日9:00至2023年3月24日24:00</p><p>3. 决赛：2023年3月26日0:00至3月30日24:00</p><p>4. 决赛答辩：2023年春，深圳市宝安区，获答辩资格的选手由组委会提供国内城市间往返交通和住宿</p><p>5. 颁奖仪式：2023年春</p><p></p><p>“氢燃料电池系统性能均值预测”赛题初赛和决赛赛程保持不变。</p><p></p><p>高等院校、科研单位、互联网企业等人员均可通过大赛官方报名通道（请在PC上访问<a href=\"https://www.industrial-bigdata.com/Competition\">https://www.industrial-bigdata.com/Competition</a>\"）报名参赛。联系人：赵先生&nbsp;13825233551&nbsp;</p><p>&nbsp;</p><p>天生不凡的你，拉上小伙伴一起行动吧！</p><p>&nbsp;</p><p></p><blockquote>关于全国工业互联网数据创新应用大赛：首个由政府主管部门指导的工业大数据领域最具权威的全国性创新竞赛，为工业大数据人才培育、产业创新、生态打造提供支持。2017年起，中国信息通信研究院在工业和信息化部指导下，举办了工业大数据创新竞赛，并于2021年全面升级为“全国工业互联网数据创新应用大赛”。</blockquote><p></p>",
    "publish_time": "2023-02-07 20:28:30",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]