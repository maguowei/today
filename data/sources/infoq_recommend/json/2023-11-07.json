[
  {
    "title": "反面教材：搞砸Web开发的15种方法",
    "url": "https://www.infoq.cn/article/Jcw2CoqgL7kohbf5s6KP",
    "summary": "<p>现如今，网络上关于怎么构建健壮、可维护Web应用的文章随处可见，相信大家早就看烦了。那如果公司里刚好来了个你看着不顺眼的新同事，各位打算给这家伙点颜色瞧瞧，该怎么下手？别担心，坏事就由我来做。只要按照以下15条建议实施，绝对能让Web开发者在浪费一整天时间之后、陷入深深的沮丧与自我怀疑当中。</p><p>&nbsp;</p><p></p><h2>1. 抽象层</h2><p></p><p></p><p>多用抽象层、越多越好，直到：</p><p></p><p>代码已经难以理解和调试。代码变更变得极为困难。代码运行速度变慢、效率降低。代码失去复用性。</p><p></p><h2>&nbsp;</h2><p></p><p></p><h2>2. 用各种方式刁难PR变更</h2><p></p><p></p><p>一定要拖住PR请求，借此维护住你在项目中的主导地位。</p><p></p><p>下面提几个可行的刁难借口：</p><p></p><p>要求把变更名延长；要求把变量名缩短；要求重新命名变更名；要求代码更“紧凑”。</p><p></p><h1>&nbsp;</h1><p></p><p></p><h2>3. 不写提交信息</h2><p></p><p></p><p>高质量的提交信息多费工夫啊，我们时间宝贵、才没精力浪费在编写这种东西上：</p><p>&nbsp;</p><p><code lang=\"null\">[JIRA-1234] build: replace vue-cli with vite</code></p><p>&nbsp;</p><p>相反，大家可以直接用以下命令来推送不带任何提交信息的代码：</p><p>&nbsp;</p><p><code lang=\"null\">git commit --allow-empty-message -m \"\" &amp;&amp; git push --force</code></p><p>&nbsp;</p><p></p><h2>4. 多用“幻数”</h2><p></p><p></p><p>多用“幻数”，这样会显得你更专业、更神秘、更清楚自己到底在做什么：</p><p>&nbsp;</p><p><code lang=\"null\">window.scrollTo({\n  top: 89,\n  left: 12,\n  behavior: \"smooth\",\n});</code></p><p>&nbsp;</p><p></p><h2>5. 掺杂返回语句</h2><p></p><p></p><p>在函数里混杂返回语句，这样别人就永远不知道你接下来打算干什么了：</p><p>&nbsp;</p><p><code lang=\"null\">function shouldPayTax(income) {\n  if(income.amount &lt; 20_000) {\n    return false\n  }\n  if(income.amount &gt; 20_000 &amp;&amp; income.country == 'USA') {\n    return true\n  }\n  if(income.country == 'Panama') {\n    return false\n  }\n  if(this.totalWorkingHoursPerWeek &gt; 60) {\n    return true\n  }\n  if(income.amount &gt; 20_000 &amp;&amp; income.isCelebrity == true) {\n    return false\n  }\n  if(income.amount &gt; 20_000) {\n    return true\n  }\n}</code></p><p>&nbsp;</p><p></p><h2>6. Typescript</h2><p></p><p></p><p>如果有人厚颜无耻地把TypeScript添加到项目中，大家可以到处使用&nbsp;any&nbsp;来绕过类型检查。</p><p>&nbsp;</p><p><code lang=\"null\">function add(a:any, b:any):any {\n  return a + b\n}</code></p><p>&nbsp;</p><p></p><h2>7. 用双等号来替代三等号</h2><p></p><p></p><p>使用&nbsp;==&nbsp;来代替&nbsp;===，理由是在生产包中节约宝贵的存储空间。</p><p>&nbsp;</p><p></p><h2>8. 注释代码</h2><p></p><p></p><p>除了要编写难以理解的代码之外，也别忘了留下毫无意义的误导性注释，否则没准哪个聪明人就看懂了你的开发逻辑。</p><p>&nbsp;</p><p>相关参考规则如下：</p><p></p><p>注释应该与代码重复；注释的作用是解释代码为什么不够清楚；对于可以写出清晰注释的部分，什么都别写；注释的意义在于引起混乱，而非消除混乱；切勿提供复制代码的原始链接；切勿提供有帮助的外部参考链接；在修复bug时，切勿添加任何注释（或测试）；切勿使用注释来标记不完整的实现。</p><p>&nbsp;</p><p>这里还有更多“妙招”供大家参考：</p><p><a href=\"https://stackoverflow.blog/2021/12/23/best-practices-for-writing-code-comments/\">https://stackoverflow.blog/2021/12/23/best-practices-for-writing-code-comments/</a>\"</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/d0/d044d88543147b8859dc64054af1a412.png\" /></p><p></p><p>&nbsp;</p><p></p><h2>9. 使用Props实现状态共享</h2><p></p><p></p><p>使用props传递状态，能让大家更好地把组件层次结构耦合起来，从而大大提高重构难度。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/3f/3fd0f17c7bd486398111bb283cb14046.png\" /></p><p></p><p></p><h2>&nbsp;</h2><p></p><p></p><h2>10. 对组件状态使用状态管理</h2><p></p><p></p><p>另一方面，记得把组件状态移动至全局存储，这样每个人都可以修改其内容。</p><p>&nbsp;</p><p></p><h2>11. 让组件文件变长</h2><p></p><p></p><p>使用大型整体组件，理由是这样能更好地明确组件用途、改善变量的跨函数可复用性。</p><p>&nbsp;</p><p></p><h2>12. 不做linter检查</h2><p></p><p></p><p>Linter能够分析代码并检测出潜在错误、不一致性以及与既定编码标准间的偏差，而这显然跟我们的意图背道而驰。</p><p>&nbsp;</p><p>以下两个代码片段之间就存在明显差异：</p><p>&nbsp;</p><p><code lang=\"null\">const props=defineProps({\nelements:Array,\ncounter:{\ntype:Number,\ndefault:0,\n},\n});\nconst{data,method}=useComposable();\nconst isEmpty=computed(()=&gt;{returnprops.counter===0;});\nwatch(props.counter,()=&gt;{console.log(\"Countervaluechanged\");});\nconst emit=defineEmits([\"event-name\"]);\nfunction emitEvent(){\nemit(\"event-name\");\n}\nfunction getParam(param){\nreturn param;\n}</code></p><p>&nbsp;</p><p><code lang=\"null\">const props = defineProps({\n  elements: Array,\n  counter: {\n    type: Number,\n    default: 0,\n  },\n});\nconst { data, method } = useComposable();\nconst isEmpty = computed(() =&gt; {\n  return props.counter === 0;\n});\nwatch(props.counter, () =&gt; {\n  console.log(\"Counter value changed\");\n});\nconst emit = defineEmits([\"event-name\"]);\nfunction emitEvent() {\n  emit(\"event-name\");\n}\nfunction getParam(param) {\n  return param;\n}</code></p><p></p><blockquote>专业提示：关于linting规则，唯一可以接受的用法就是确保文件长度超过特定行数。这里不妨把数字设定为1000。</blockquote><p></p><p></p><h2>&nbsp;</h2><p></p><p></p><h2>13. 在翻译中使用HTML</h2><p></p><p></p><p>要想搞砸Web开发，对字符串进行硬编码永远是种好办法。有时候，使用包含html元素和类的翻译更能够“锦上添花”。</p><p>&nbsp;</p><p><code lang=\"null\">translation.key.name = Hello <span class=\"red\">World!</span></code></p><p></p><h2>&nbsp;</h2><p></p><p></p><h2>14. 编写测试</h2><p></p><p></p><p>不编写测试当然也挺好，但要想真正把人折磨疯，最好还是要测试、只是提供一套极差的套件。这里向大家分享折磨人测试的一般准则：</p><p>慢——测试时间足够我们去泡杯咖啡；不可靠——常测常新，永远不确定这测试到底靠不靠谱；耦合——会影响到其他测试；过度延伸——尽可能跟应用程序中的其他部分扯上关系。</p><p>&nbsp;</p><p>悟性高的朋友还可以参考这份单元测试进阶“教程”：</p><p><a href=\"https://fadamakis.com/8-tips-for-writing-better-unit-tests-8c0a8d8cde16\">https://fadamakis.com/8-tips-for-writing-better-unit-tests-8c0a8d8cde16</a>\"</p><p>&nbsp;</p><p></p><h1>15. 永远信任一切</h1><p></p><p></p><p>最后，只有懦夫和小白才需要防御性编程。这世上哪有那么多坏人？</p><p>&nbsp;</p><p></p><h1>总结</h1><p></p><p></p><p>请大家别把文章当真，因实操而遭解雇的话，本文作者概不负责。😅</p><p>&nbsp;</p><p>如果大家有自己的“奇思妙想”，请在评论栏中不吝分享。</p><p>&nbsp;</p><p>&nbsp;</p><p></p><h5>原文链接：</h5><p></p><p><a href=\"https://fadamakis.com/15-terrible-advice-for-web-developers-e821e95f5d18\">https://fadamakis.com/15-terrible-advice-for-web-developers-e821e95f5d18</a>\"</p><p></p><p></p><h5>相关阅读：</h5><p></p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&amp;mid=2649969927&amp;idx=1&amp;sn=cc8a7cee992d36202d86ee5068fcc66e&amp;chksm=beca250189bdac17511f9649f03ab3b0c6fee72a33cb1957ff5a6017924fe10b7c7d5581eb98&amp;scene=27#wechat_redirect\">Web3当下，最佳投资就是投资自己</a>\"</p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&amp;mid=2649969873&amp;idx=1&amp;sn=8cc0a44a1ab3255ea5973d41520a4c39&amp;chksm=beca24d789bdadc1f9085e3853dffff525aaa28a09a46c50169585b66650a1ac26ae67db9b57&amp;scene=27#wechat_redirect\">Web3的反思，不要抱怨</a>\"</p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&amp;mid=2649970108&amp;idx=1&amp;sn=25f73abae444b3b0107873e5764ee068&amp;chksm=beca25ba89bdacacdc16a5def20ec892652e302c1119efbb6476f94d8570c6570a060065a2b0&amp;scene=27#wechat_redirect\">给Web3创业者的28个原则</a>\"</p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&amp;mid=2649970054&amp;idx=1&amp;sn=1ccf271b4aea088d3beb777536ba2033&amp;chksm=beca258089bdac967b59fb03eaca2104a6038e99ff8483831976281428e80b4284add474346d&amp;scene=27#wechat_redirect\">和我一起学习Web3</a>\"</p>",
    "publish_time": "2023-11-07 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Apache Doris 在小鹅通的应用实践",
    "url": "https://www.infoq.cn/article/ENCAYOBCgma7ZdPewaIl",
    "summary": "<p></p><blockquote>本文导读：随着网络直播规模的不断扩大，在线知识服务在直播行业中迎来了广阔的发展机遇。小鹅通作为一家以用户服务为核心的技术服务商，通过多平台直播与推流服务吸引和转化潜在用户，同时通过直播数据分析平台，帮助商家分析直播指标数据、分析用户观看情况、构建精准用户画像。然而，随着直播用户数量的激增，平台在写入和查询方面的支持逐渐无法满足业务需求，为了应对挑战，小鹅通开启了架构升级之旅。本文将详细介绍小鹅通直播数据分析平台的优化过程，分享小鹅通基于 Apache Doris 优化写入与查询性能、完善用户标签功能和保障平台稳定性等实践经验，为商家提供了更精细化的用户经营支持。</blockquote><p></p><p></p><p>作者｜小鹅通 大数据开发工程师 宫贺</p><p></p><p>深圳小鹅网络技术有限公司，是一家以知识产品与用户服务为核心的技术服务商，创始至今已累计生产了 2000 万个知识产品，已服务的商家规模达 160 万，其中不乏腾讯学堂、华夏基金、西贝、吴晓波频道、十点读书、凯撒旅游等各行业一线知名品牌。作为私域运营的一站式工具，针对商家业务痛点，小鹅通提供了多方面的闭环解决方案，包括产品与服务交付、营销获客、用户运营、组织角色管理、品牌价值输出等以实现业务升级。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9e/9e81def8d5706bcba93a6fe1314c0c47.png\" /></p><p></p><p>随着“直播带货”消费模式的兴起，网络直播规模的持续上升，在线知识服务开始在直播行业中开拓广袤发展领域，借助直播工具的力量能够有效吸引和转化潜在用户，借助直播分析平台能够实现对 C 端用户数据留存与分析，助力 B 端商家客户的精细化用户运营。</p><p></p><p>在这一背景下，小鹅通直播为商家提供了多平台的直播与推流服务，以及多种直播带货的营销玩法，不仅能将公私域流量引导至直播间，实现商家引流目标，还提供了多维度的分析平台。商家可以通过直播数据分析平台导出和分析各项直播数据指标，生成用户标签，以了解用户观看直播的情况和动态、构建精准的用户画像。</p><p></p><p>目前，小鹅通直播场次已累积达 600 万次，终端用户数近 8 亿，最高同时在线观看人数超过 1000 万。然而，面对直播用户数量激增，直播数据分析平台在数据写、查方面的支持逐渐无法满足业务需求，我们希望能够借助分析平台掌握直播间在线人数、在线时长、商品转化率、交易额等数据，并在直播间波峰波谷时期记录以上数据的流量趋势图。为了满足上述的业务需求，小鹅通对于平台架构提出更高的性能要求：</p><p></p><p>写入性能：需具备海量数据实时写入的能力，确保在直播过程中高吞吐场景下数据稳定导入；数据更新：为了应对直播期间交易状态和用户数据的变化，我们需要架构具备高效准确的更新机制，确保业务人员及时掌握最新数据；查询性能：能够支持高并发点查，也能满足联邦查询的需求，保证不同查询场景下数据分析的时效性；平台运维：由于直播业务具有明显的波峰波谷时段，分析平台需要确保在直播高峰时段保持稳定的运行状态。同时，在波谷时段，平台应该支持节点弹性缩容，以提高资源利用率并控制运维成本。此外，为了避免系统运行故障导致站点破坏、为了保持系统高可用性，架构还需要提供可靠的灾备方案，以确保业务连续。</p><p></p><p>在遭遇系统业务瓶颈后，小鹅通开启了平台基础建设重构之旅，在经过业务调研、选型对比和内测应用后，基于 Apache Doris 对最初 Elasticsearch 与 HBase 的架构进行了迭代升级，并于今年 5 月份正式上线 Apache Doris 版本的直播数据分析平台。</p><p></p><p>本文将详细介绍小鹅通直播数据分析平台的优化过程，分享小鹅通如何基于 Apache Doris 提升平台查询性能、完善用户标签功能、保障平台稳定性等实践经验，最终赋能商家精细化用户经营。</p><p></p><h1>基于 Elasticsearch 与 HBase 早期架构</h1><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a9/a9a1e99af11bf0eacd129402fbaff6f1.png\" /></p><p></p><p>直播数据分析平台的原始数据主要来源于 MySQL 的业务数据库、学习 SDK、埋点 SDK，平台架构主要分为离线与实时链路：</p><p></p><p>离线链路：用户相关的数据通过 DataX  采集并全量存储于 HDFS ，由 Hive 计算写入 HBase，形成用户基本信息的主表。实时链路：MySQL 业务库与学习 SDK 中的相关指标数据（例如实时订阅、访问、直播互动、用户权益等）通过 Flink CDC 采集后上报至 Kafka，利用 Flink 实时计算并存入 Redis 中。</p><p></p><p>两类数据依据业务需求，将用户基本信息与直播相关业务指标关联，形成直播参与用户大宽表，其中当权益、订阅等主业务数据发生变更时，需要与 HBase 中的用户维表进行关联补全数据。数据每次更新都会在宽表补全后，将所有字段一起发送至下游 Elasticsearch 来承载业务人员的查询需求，避免并发修改的情况。</p><p></p><p>随着直播用户规模的扩大，我们对于数据时效性、查询性能等方面要求逐渐升高，而原架构的局限性也逐渐影响业务分析需求：</p><p></p><p>数据流转时效性低：由于组件过多，导致计算链路过长、节点过多，写入与查询的时效性也必然会受到影响，无法支撑直播波峰时段的实时导入与极速分析。数据更新链路复杂：直播数据每次发生变更时，都需要先将变更数据写入主表与维度表中，随后重新关联生成新的宽表以覆盖旧数据。这一过程涉及多个组件和长链路，更新机制的复杂度与低效也随之增加。查询性能不足：在高并发查询场景下，Elasticsearch 需要处理大量的查询请求和数据访问，导致查询负载过重，分析效率低；在关联查询场景下，Elasticsearch 无法满足 Join 计算需求，查询灵活度低。架构运维成本高：组件过多还会导致整体架构运维成本升高、开发人员学习成本加大、指标扩展较为局限等问题。</p><p></p><p>基于以上架构痛点，我们在 2022 年 7 月开启系统重构项目的调研工作，最终在众多数据仓库中选择了 Apache Doris 进行架构升级，并在同年 11 月开启长达 6 个月的内测工作，希望借助 Apache Doris 在实时写入、数据高效更新、极速查询性能和简易运维等方面的优势，在直播数据分析场景中强化直播用户数据挖掘，获取更多高价值的业务洞察。</p><p></p><h1>基于 Apache Doris 的全新直播数据分析平台</h1><p></p><p><img src=\"https://static001.geekbang.org/infoq/4e/4e7df921ef5d934a76a17caa4325ade1.png\" /></p><p></p><p>在升级到全新架构后，我们统一了实时和离线两条数据处理链路，全部交由 Apache Doris 来进行处理。如图所示，原始数据经过 Flink 流处理计算后，会实时写入到 Apache Doris 的表模型中，根据场景我们分别选用了不同的数据模型进行查询加速，数据表与对应的查询需求具体如下：</p><p></p><p>用户维度表：借助 Apache Doris 的 Aggregate Key 模型将用户维度数据聚合，同时通过 replace_if_not_null  方式实现部分列更新；标签表：为了更好地构建用户标签体系，实时更新用户画像，我们借助 Unique Key 将数据分为标签与标签版本两类表，通过 Merge on Write 更新数据，并借助 Doris 关联查询性能，使商家获取最新版本的用户标签。学习数据表：同样借助 Aggreagte Key 模型将用户在平台中的学习数据进行聚合，支持后续直播用户分析需求。</p><p></p><p>在 Apache Doris 引入后为我们提供了全新的数据流转，满足写入与查询时效性的需求，有效解决了原架构链路痛点。目前，我们基于 Doris 十余台集群规模为直播数据分析平台提供实时写入与极速分析，并带来了以下具体收益：</p><p></p><h2>01  写查接口统一、写入效率更高</h2><p></p><p></p><p>Flink-Doris-Connector 内置了 Flink CDC ，支持从业务数据库中全量和增量抽取数据，同时 Doris 也可以通过 Routine Load 来订阅 Kafka 中的数据、一流多表秒级写入，大幅提升了数据集成同步的效率。</p><p></p><p>利用 Apache Doris 替换原架构中 HBase 、Elasticsearch 等多个组件，减少了中间数据在不同链路中的流转，解决了链路过长、组件过多的问题，通过 Apache Doris 一套系统实现统一对外数据服务。</p><p></p><h2>02  数据写时合并、高效更新</h2><p></p><p></p><p>在 Apache Doris 聚合后，单表最大达数十亿的情况下，可以支撑每秒 20 万的数据 Upsert 与 Insert Overwrite，满足了直播高峰时期高吞吐写入需求。</p><p></p><p>在数据更新时，无需将字段补全后再重新开发宽表，可以直接利用 Merge On Write 功能进行轻量级 Merge，通过写时合并，实现微批高频实时写入与部分列更新。</p><p></p><h2>03 多场景下的查询加速</h2><p></p><p></p><p>在高并发点查时，我们高频使用 Doris 分区分桶裁剪功能，在查询时过滤非必要的数据，使数据扫描快速定位，加速查询响应时间。</p><p></p><p>在关联查询时，Apache Doris 支持对多张 10 亿级表进行 Join，满足分析人员将用户基础信息与学习、标签数据等关联查询需求。更重要的是，Doris 在标签检索、模糊查询、排序、分页等场景下都可以达到秒级甚至毫秒级的查询响应。</p><p></p><h2>04 开发周期缩短、运维成本降低</h2><p></p><p></p><p>Apache Doris 自身架构简单，FE 和 BE 两节点能够灵活扩缩容，易于部署、迁移与运维。在架构升级后，通过简化链路我们的运维成本相较于之前降低近 2/ 3。</p><p></p><p>同时 Doris 兼容 MySQL，使开发操作简单、使用门槛低，研发成本也随之降低。现在指标开发时间大幅度缩短，由原来单个指标耗时一个月缩短至现在仅需一周即可完成，加速指标迭代周期。</p><p></p><p>接下来，我们将从查询加速、容灾备份、数据可视化分析三方面分享 Apache Doris 在直播数据分析场景中应用实践，希望通过分享为读者提供更多关于 Doris 应用洞察。</p><p></p><h1>用户画像场景查询加速实践</h1><p></p><p></p><p>对于直播业务，用户标签是构成用户画像的核心因素，能够将用户在直播过程中所产生的行为数据分析提炼，生成具有差异性特征的标签词，以更好地掌握用户属性、用户偏好、直播习惯等信息。</p><p></p><p>在小鹅通直播分析平台中，商家可以自行定义规则生成标签，例如 “观看直播超过一分钟” 的用户为一类标签，“最近一分钟访问直播间”的用户为另一类标签。在这个过程中，商家会频繁不断地对用户“贴标签”（插入数据）或者“撕标签”（删减数据），与此同时每位用户也可能会存在多个自动或者手动标签。基于此，数仓需要具备以下能力：</p><p></p><p>面对标签变动频繁的情况，数仓需要支持实时写入与更新，并保证集群稳定。面对同一用户的多类标签，数仓还需要提供强大的关联查询能力，并支持快速查询检索性能。</p><p></p><p>我们以下面的 SQL 为例，介绍基于 Apache Doris 在标签场景如何快速抽取数据、如何通过主键模型创建标签表与标签版本表、如何对字符串开启模糊查询解析，实现用户信息的快速检索，加速用户行为与经营业务分析。</p><p></p><p>创建标签表：</p><p></p><p><code lang=\"text\">create table db.tags (  \nu_id string,  \nversion string,  \ntags string\n) with (  \n'connector' = 'doris',  \n'fenodes' = '',  \n'table.identifier' = 'tags',  \n'username' = '',  \n'password' = '',  \n'sink.properties.format' = 'json',  \n'sink.properties.strip_outer_array' = 'true',  \n'sink.properties.fuzzy_parse' = 'true',  \n'sink.properties.columns' = 'id,u_id,version,a_tags,m_tags,a_tags=bitmap_from_string(a_tags),m_tags=bitmap_from_string(m_tags)',  \n'sink.batch.interval' = '10s',  \n'sink.batch.size' = '100000' \n);\n</code></p><p></p><p>创建标签版本表：</p><p></p><p><code lang=\"text\">create table db.tags_version (  \nid string,  \nu_id string,  \nversion string  \n) with (  \n'connector' = 'doris',  \n'fenodes' = '',  \n'table.identifier' = 'db.tags_version',  \n'username' = '',  \n'password' = '',  \n'sink.properties.format' = 'json',  \n'sink.properties.strip_outer_array' = 'true',  \n'sink.properties.fuzzy_parse' = 'true',  \n'sink.properties.columns' = 'id,u_id,version',  \n'sink.batch.interval' = '10s',  \n'sink.batch.size' = '100000'  \n);\n</code></p><p></p><p>两类表写入：</p><p></p><p><code lang=\"text\">insert into db.tags\nselect\nu_id,  \nlast_timestamp as version,\ntags\nfrom db.source;  \n  \ninsert into rtime_db.tags_version\nselect \nu_id,  \nlast_timestamp as version\nfrom db.source;\n</code></p><p></p><p>Bitmap 索引加速标签查询：</p><p></p><p>在写入完成后，业务人员开始对用户相关数据进行查询分析。以常见查询场景为例，我们需要查找某位姓张用户在最新版本中的标签数据，首先会在用户主表中使用 LIKE 匹配符合要求的用户名，其次在分页查询中对标签字段分别创建 Bitmap 索引，如 “123”、“124”、“125”、“126”、“333”，最后通过三表关联快速找到标签信息。</p><p></p><p><code lang=\"text\">with t_user as (\n    select \n           u_id,\n           name\n    from db.user\n    where partition_id = 1\n    and name like '%张%'\n),\n\n t_tags as (\n         select \n                 u_id, \n                 version\n         from db.tags\n         where (\n                   bitmap_and_count(a_tags, bitmap_from_string(\"123,124,125,126,333\")) &gt; 0 \n           )\n ),\n \n t_tag_version as (\n         select id, u_id, version\n         from db.tags_version\n )\n\nselect \n    t1.u_id\n    t1.name\nfrom t_user t1\njoin t_tags t2 on t1.u_id = t2.u_id\njoin t_tag_version t3 on t2.u_id = t3.u_id and t2.version = t3.version\norder by t1.u_id desc\nlimit 1,10;\n</code></p><p></p><p>在直播数亿用户规模、每位用户存在上千个标签的场景下，**使用 Bitmap 索引来查询用户相关数据后，查询时间均能够在 1 秒内响应并准确地为业务人员提供所需结果，**大大加速了标签查询速度。</p><p></p><h1>双集群高可用方案</h1><p></p><p></p><p>在直播课程大促期间，为了带动直播间的下单氛围，提升用户秒抢积极性与下单率，平台会在直播间开启抽奖等活动。在引入 Doris 之前，我们将每日备份数据到对象存储中。当直播过程中优惠券领取、下单等出现故障时，从用户反馈、层层上报，再到故障恢复，需要花费数个小时。</p><p></p><p>然而，在这数小时中，成百上千的用户会因此流失，我们则需要承受用户退出直播间、寻找其他替代产品等巨大风险与损失。因此，平台面对海量用户访问的冲击，数据恢复与解决故障的速度成为了直播间业务效益的关键。</p><p></p><p>为了保障短期指数级业务波峰下平台的稳定运行，我们决定采取全新容灾方案。基于 Apache Doris 主备双集群的方式，实现热备；使用 Airflow 通过 Backup 与 Freeze 策略将每日数据备份至对象存储，以实现冷备，其中热备具体流程如下：</p><p></p><p>**数据双写：**改造 Flink Doris Connector，通过配置将数据写到两个集群或单个集群，在处理某个集群需要升级的场景时，先停止写一个集群后再去改造另外一个集群，有效保证集群的稳定性。**负载均衡：**通过反向代理来切换查询请求到指定集群。当某一集群出现了问题，我们可以及时把请求接到另外一个集群上面。**监控校验：**定期校验主从集群的数据及表结构的一致性，以便及时发现数据性不一致的情况。</p><p></p><p>我们还将进一步引入 Doris 2.0 版本中推出的 <a href=\"http://mp.weixin.qq.com/s?__biz=Mzg3Njc2NDAwOA==&amp;mid=2247523130&amp;idx=1&amp;sn=6aa27d86f4d88cf8d06bab3682074edf&amp;chksm=cf2f953df8581c2b1ce0a2b7ae9406567c526543f42435608594771dc8a7e2a0b73728cb3235&amp;scene=21#wechat_redirect\">CCR 跨集群数据复制功能</a>\"，尝试使用该功能减少开发运维成本，降低人工储备集群双写所导致两个集群 DDL 不一致的风险。</p><p></p><h1>自研数据可视化平台，统一实时查询出口</h1><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/17/179308ebb478ff7683ab706aa53411bd.png\" /></p><p></p><p>数据可视化分析平台主要用于离线报表、即席查询、实时数据大屏（Dashboard）三大场景，为商家业务人员、管理层等提供可视化分析功能。在引入 Doris 之后，我们将 MySQL、Elasticseach、本地文件等多种数据源统一交给 Apache Doris 实现。</p><p></p><p>同时，为了更好地将数据呈现给商家，我们还增加了数据源管理与数据集创建功能，业务人员可以直接在平台中选择数据源进行配置、测试等操作，形成可视化列表。除此之外，平台结合了 BI 工具中丰富的图表样式，满足商家配置数据看板的个性化需求。</p><p></p><p>在引入 Apache Doris 之后，通过数据集的配置实现了数据管理、权限管理等功能，并利用 Apache Doris 极速多维分析、联邦查询的能力加速了数字化平台的查询展示性能，摒弃了原来的 T+1 报表，在 Apache Doris 之上实现即时查询。</p><p></p><h1>未来规划</h1><p></p><p></p><p>目前，基于 Apache Doris 构建的分析平台主要用于小鹅通直播业务，为用户相关数据提供服务。在 Apache Doris 引入后，平台架构实现了写查出口统一、时效性大幅提升、用户数据多维分析场景拓展，同时 Doris 的加持还使后台系统具备稳定性、可扩展性、安全性等关键优势。这些突破促使平台基础技术能力进一步提高，也促进了用户数量、直播效益进一步增长。</p><p></p><p>后续我们希望继续拓展 Apache Doris 的使用场景，将课程分析、用户日志分析等交由 Apache Doris 对外提供统一的数据分析服务。同时，我们也希望继续探索 Apache Doris 2.0 版本的新特性，进一步提升集群稳定性能，包括：</p><p></p><p>Pipeline 执行引擎和基于成本的查询优化器：**在做用户直播列表时有许多复杂的售后场景需要人工优化，当有了 Pipeline 执行引擎和查询优化器后，不再需要人工调 SQL ，使执行性能更优；CCR 跨集群数据同步：通过用户多集群的数据库表自动同步以提升在线服务数据的可用性；倒排索引：利用 Apache Doris 2.0 版本的倒排索引功能，对现有的索引结构进行丰富，实现模糊查询、等值查询和范围查询等能力，进一步加速查询响应速度。</p><p></p><p>在此特别感谢 SelectDB 技术团队在使用过程中遇到任何问题都能及时响应，为我们降低了许多试错成本。未来，我们也会更积极参与 Apache Doris 社区贡献及活动，与社区共同进步和成长！</p>",
    "publish_time": "2023-11-07 10:12:21",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "火山引擎云计算解决方案负责人吴春龙确认出席 FCon，分享大规模混合部署基础设施探索与实践",
    "url": "https://www.infoq.cn/article/dcxN1gUJbMrBcc0d5K86",
    "summary": "<p><a href=\"https://fcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=atricle\">FCon 全球金融科技大会</a>\"，将于 11 月在上海召开。火山引擎云计算解决方案负责人吴春龙将发表题为《<a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5609?utm_source=infoqweb&amp;utm_medium=article\">大规模混合部署基础设施探索与实践</a>\"》主题分享，介绍大规模基础设施的建设、组网和监控运维的实践与方法论。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5609?utm_source=infoqweb&amp;utm_medium=article\">吴春龙</a>\"，资深云计算专家，致力于为汽车、银行、手机厂商等公司提供安全、稳定、易用、高效的云计算服务。他在本次会议的演讲内容如下：</p><p></p><p>演讲：大规模混合部署基础设施探索与实践</p><p></p><p>在大模型时代，AI 智能生产力无处不在，将重新定义数字金融、保险行业，火山引擎提供大规模 AI 基础设施解方案，保障效率、稳定性的同时提供创新的生产力，加速金融行业智能化。</p><p></p><p>演讲提纲：</p><p></p><p>大模型基础设施挑战；大算力基础设施技术探索；大算力基础设施推荐实践；展望技术发展。</p><p></p><p>你将获得：</p><p></p><p>○ 了解大规模基础设施的建设的实践与方法论；</p><p>○ 了解大规模基础设施的组网的实践与方法论；</p><p>○ 了解大规模基础设施的监控运维的实践与方法论。</p><p></p><p>除上述演讲外，FCon 上海还将围绕&nbsp;<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1580?utm_source=infoqweb&amp;utm_medium=atricle\">DevOps&nbsp;在金融企业落地实践</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1591?utm_source=infoqweb&amp;utm_medium=atricle\">金融行业大模型应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1576?utm_source=infoqweb&amp;utm_medium=atricle\">创新的金融科技应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1577?utm_source=infoqweb&amp;utm_medium=atricle\">金融实时数据平台建设之路</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1588?utm_source=infoqweb&amp;utm_medium=atricle\">金融安全风险管控</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1589?utm_source=infoqweb&amp;utm_medium=atricle\">数据要素流通与数据合规</a>\"等进行交流。</p><p></p><p>FCon 上海 2023，相约 11 月！现在购票，享 8 折优惠 ，立省 ￥1360！咨询购票请联系：17310043226（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8ec7f7fb25c7949931b2b8a5deffddd.png\" /></p><p></p>",
    "publish_time": "2023-11-07 11:30:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "华为高阶智驾系统首搭新M7智驾版；长城首推汽车产业知识大模型；三星开发业界首款车用级5nm eMRAM｜汽车技术资讯",
    "url": "https://www.infoq.cn/article/kZEzwhzsEtvdMhQfUD3o",
    "summary": "<p></p><h3>华为 ADS 2.0 高阶智驾系统首搭新 M7 智驾版</h3><p></p><p></p><p>11 月 3 日，AITO 汽车发文宣布，<a href=\"https://xie.infoq.cn/article/689dca69f0802727714cd437f?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">问界</a>\"系列 OTA 再升级，华为 ADS 2.0 高阶智驾系统首搭新 M7 智驾版，NCA 智驾领航辅助不再依赖高精地图。基于 GOD（通用障碍物检测）网络与 RCR（道路拓扑推理）网络 2.0 技术，不仅能实现障碍物种类 99% 识别率的精细处理，还能够实现自主看懂复杂路况，真正做到“看得懂物，看得懂路”。</p><p></p><h3>长城汽车与科大讯飞合作推出“首个汽车产业知识大模型”</h3><p></p><p></p><p>近日，长城汽车股份有限公司与<a href=\"https://www.infoq.cn/article/057ZDYfzOJZOZUfpOLH7?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">科大讯飞</a>\"股份有限公司今日签署了关于产业大模型及知识大脑战略合作协议，将基于讯飞星火认知大模型 V3.0 搭建产业首个知识大模型“长城汽车知识大脑”。长城汽车声称，作为面向智能汽车新时代可持续升级的 AI 底座，大模型将帮助企业建立智能知识库，从研发领域、售后服务、企业办公等多场景提供赋能，有效解决传统业务痛点，实现知识自动化构建、服务能力升级和打造数字化应用，并围绕汽车产业全场景构建智能汽车数字化服务新生态。</p><p></p><h3>三星宣布开发业界首款车用级 5nm eMRAM，2027 年量产</h3><p></p><p></p><p>近日，三星电子宣布正在开发业界首款用于下一代汽车技术的 5nm eMRAM。目前三星正在加大投入准备工作，为客户提供功率半导体、微控制器、先进的自动驾驶人工智能芯片等多种解决方案。eMRAM 是一种新型的非易失性存储器，其使用电荷捕获技术来存储数据，而不是像传统闪存（Flash）那样使用电子隧道效应。这种电荷捕获技术使得 eMRAM 具有更长的寿命和更高的写入速度，使其成为汽车应用的理想选择。此外，由于 eMRAM 具有出色的耐热性和可靠性，它可以在高温和恶劣环境下工作。因此，eMRAM 是一种用于汽车应用的下一代存储半导体，可实现高读写速度以及卓越的耐热性。</p><p></p><h3>vivo 与大众 CARIAD 成立联合实验室</h3><p></p><p></p><p>CARIAD 中国宣布与 vivo 成立“手车互融联合创新实验室”（Mobile x Mobility Fusion Joint Innovative Lab，简称 M² 实验室），双方协作拓展智能手机与智能汽车领域的互联创新，并建立长期合作关系。11 月 3 日，vivo 正式发布了旗下的自研通用 <a href=\"https://www.infoq.cn/article/Dhsl1B6yaEJUp5EgdWMZ\">AI 大模型</a>\"矩阵 —— 蓝心大模型，包含十亿、百亿、千亿三个参数量级共 5 款。按照计划，CARIAD 中国将充分发挥 CARIAD 在软硬件整合和出行产品方面的研发能力，依托 vivo 在智能手机行业的特色产品与应用生态的能力和经验，专注智能手机与智能汽车领域的互联创新，为消费者打造无缝、连续的数字化智能移动出行体验。</p><p></p><h3>首个粤港澳 5G 车载通信互联互通落地</h3><p></p><p></p><p>近日，天翼物联助力高合汽车实现了粤港澳三地 5G 自主漫游服务，实现了车主在内地与港澳地区车载网络的无缝衔接，确保了粤港澳三地各区域间往返车载 5G 网络的高速在线，打造了汽车行业首个港澳自主漫游标杆案例。为减少车主返厂升级带来的不便，天翼物联技术团队创新组网方案，通过自建专网用户漫出到海外运营商网络，支持 5G 公网、定制多 DNN、GRE VPDN 内网等多种业务场景，车企 / 车主无需更改车机配置，就能从国内车联网多 APN 快速切换到国漫专用 APN。同时，车主在三地行驶时，无需换卡换号换设备，就可以实现三地车载网络的无缝衔接，使用车载地图导航、座舱娱乐等功能。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/bf/a9/bf1622c0c2be73e4d19e8643444e2fa9.jpg\" /></p><p></p>",
    "publish_time": "2023-11-07 12:04:31",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "广发证券吴悠：BizDevOps落地需警惕过分侧重技术",
    "url": "https://www.infoq.cn/article/7thTCYelKa8POr7ghzZE",
    "summary": "<p>随着科技的飞速进步，技术研发已从传统的瀑布式开发演化到敏捷开发，再到今日的 DevOps。特别在金融领域，如何在追求稳定性与驱动创新之间找到平衡，始终是一个行业难题。</p><p></p><p>针对这些问题，InfoQ 采访了广发证券资深项目经理吴悠，她指出：过分侧重技术、忽视业务的核心参与，以及缺乏清晰的目标和评估机制是企业在 <a href=\"https://www.infoq.cn/article/RFGAkFHxTtyrAaphHBh0\">BizDevOps</a>\" 实践过程中遇到的三大挑战。为确保 BizDevOps 的成功落地，这些常见的障碍必须被妥善应对。</p><p></p><p>在 11 月 19 日的 FCon 全球金融科技大会上，吴悠还将详细介绍《广发证券在场外衍生品投资管理项目中 BizDevOps 的落地经验》。敬请关注！扫描下方二维码即可查看全部演讲专题：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/64/64917720e6d04a84c2948f5282c72184.png\" /></p><p></p><p>以下内容根据InfoQ对吴悠的采访编辑整理：</p><p></p><h5>InfoQ：您个人在项目管理、研发管埋领域积累了 10 多年经验，能不能介绍一下这么多年来，您观察到的技术研发经历了哪些不同阶段的演变和发展？</h5><p></p><p></p><p>吴悠：在过去的 10 多年里，我经历了通讯设备制造业、互联网行业、金融行业三种不同行业的公司。也见证了技术研发经历过的许多不同阶段的演变和发展。下面是我观察到的一些主要变化：</p><p></p><p>1、 瀑布式开发与 CMMI 模式</p><p></p><p>在通信设备制造业主要负责的是微电子行业相关的项目，大家都知道，芯片的投产成本是非常高的，所以，这个行业对缺陷的容忍度也是很低的。当时，我们都是严格按照瀑布模型，从项目论证，概要设计，详细编码，测试验收到最后的投片，环环相扣，无论文档还是代码，都要求非常严格的变更控制。虽然这一套流程是很重，但是我觉得，在设备成本非常高，重资产的这一类行业中，还是需要这样的一套研发模式进行严格的管控。否则，一次流片失败的代价太高了。</p><p></p><p>2、 敏捷开发和迭代开发的兴起</p><p></p><p>进入互联网行业时，正好是<a href=\"https://www.infoq.cn/article/zjw0tFPDEi6Rgmaf5N2o?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">敏捷开发</a>\"方法和迭代开发模式越来越受到重视的时期。这种方法强调快速反馈、持续交付和团队合作，有助于提高项目的灵活性和适应性，和互联网企业希望尽早把产品推送上线，尽早获取客户反馈的交付目标是非常适配的。所以，那时候，我们的变更、上线都是很轻量级的，整个研发团队的运作讲究的也是天下武功，唯快不破。</p><p></p><p>3、 DevOps</p><p></p><p>加入广发证券后，我发现证券行业的 IT 研发与通信行业、互联网行业还是很不一样，因为这个行业一方面有很多创新型的产品和业务想法，需要通过敏捷的方式尽早交付，以验证业务模式的可行性，但是，另一方面，这是一个强监管的行业，对系统的线上稳定性也有着极高的要求。那么，在这么一个行业背景下，<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1580\">DevOps</a>\" 作为一种开发和运维的整合方法，逐渐成为主流。它强调开发和运维团队之间的协作，自动化和持续集成，在敏稳双态中寻求平衡，以实现更快的交付和更高质量的软件。</p><p></p><h5>InfoQ：您如何看待 DevOps 这一理念对于证券行业的影响或者意义？是什么促使越来越多的金融企业引入 DevOps？</h5><p></p><p></p><p>吴悠：DevOps 理念对于证券行业有着重要的影响和意义。我个人认为，主要的影响有这么几个方面：</p><p></p><p>1、 提高交付速度和质量：</p><p></p><p>证券行业这些年一直在强调自主研发，而且在一些创新型的业务和产品研发上，对软件系统的交付速度和质量要求是非常高的。DevOps 通过自动化和持续集成、持续交付的实践，可以大大缩短交付周期，并提高软件系统的质量和可靠性。</p><p></p><p>2、 加强安全性和合规性：</p><p></p><p>因为行业的特殊性，证券行业对于安全性和合规性的要求也非常严格。DevOps 通过将<a href=\"https://www.infoq.cn/article/sCFWacrvvYWq1ltpfJkW\">安全</a>\"和合规性纳入整个开发和交付过程中，可以提前发现和解决潜在的安全问题，并确保符合相关法规和标准。</p><p></p><p>3、 促进团队协作和沟通：</p><p></p><p>和传统互联网行业不一样，证券行业的软件开发通常是业务驱动，所以整个的交付过程需要业务侧和 IT 侧多个团队和部门的合作。而 DevOps 强调跨职能团队的合作和自组织，通过打破部门之间的壁垒，促进更好的沟通和协作。</p><p></p><p>4、 改善客户体验：</p><p></p><p>证券行业的一些对客端的业务也是非常强制用户体验的，在这些产品的研发过程中，DevOps 通过持续交付和快速反馈的实践，可以更快地响应客户需求，改进产品功能和用户体验。</p><p></p><p>这几年，越来越多的金融企业引入 DevOps，我认为其中的一个重要原因是，Devops 提供了一种“又快又稳”的交付体验。比如说，从运维的角度出发，只要有变更，就有可能引入风险，那么，在金融这种强监管的环境下，肯定是维稳最重要，减少变更就能减少风险；但是现在越来越多的金融行业走向自研，走向敏捷开发，也会为了加快创新和市场响应，要求具备快速推出新产品和服务的能力，所以，对于金融行业来说，Devops 内置的质量门槛机制、持续交付、持续测试、自动化部署能力能很好地满足这两方面的诉求，降低人为错误和风险，提升交付速度，从而帮助金融企业更快地交付新功能和改进，提高市场响应能力。</p><p></p><h5>InfoQ：业界认为 BizDevOps 是 DevOps 发展的必然趋势，在您看来，二者从概念到落地执行等层面，有哪些异同？</h5><p></p><p></p><p>吴悠：BizDevOps 是 Bizness (业务) + Development (开发) + Operations (运维) 的缩写，代表了将业务、开发和运维三个方面整合在一起的一种方法论。它是在 DevOps 的基础上进一步演化而来的。</p><p></p><p>在概念层面上，DevOps 强调开发团队和运维团队之间的协作与沟通，目的是加强软件开发和交付的效率和质量；注重自动化、持续集成和持续交付，强调开发和运维之间的无缝衔接。而 BizDevOps 则更加强调业务的参与和价值，目标是将业务需求和价值传递作为整个软件开发和交付过程的核心，所以它将业务团队纳入 DevOps 的范畴，强调业务和开发、运维三方之间的协作与协调。</p><p></p><p>在落地执行层面上，DevOps 注重技术和工具的应用。它倡导使用自动化工具来实现持续集成和持续交付，以提高软件交付的速度和质量，比如要在组织层面搭建统一的 Devops 平台，统一研发工具链，优化分支管理策略，提升自动化测试和自动化部署的能力；BizDevOps 在执行层面上更加强调业务价值导向和业技融合。比如，我们需要打通业务需求与产品需求之间的交付链条，以达成业务目标为导向，让 IT 能参与到业务规划和业务方案的讨论与决策过程中，不是像以前一样，只是这个事的执行角色，而是与业务并肩做仗，共谋共建的一个过程。</p><p></p><p>总的来说，DevOps 和 BizDevOps 在概念上的主要区别是对业务的关注程度。DevOps 注重技术和流程的改进，以提高软件开发和交付的效率和质量；而 BizDevOps 则更加强调业务的参与和价值的实现，将业务团队纳入到 DevOps 的范畴，以实现业务和软件开发的无缝衔接。</p><p></p><h5>InfoQ：企业 BizDevOps 落地实践的成败关键是什么？</h5><p></p><p></p><p>吴悠：我认为，企业 BizDevOps 落地实践的成败关键有以下几个方面：</p><p></p><p>1、高层支持：BizDevOps 需要得到组织的高层支持和承诺。领导层的支持可以提供资源、推动文化变革和跨部门合作，从而确保 BizDevOps 的成功。</p><p></p><p>2、文化变革：BizDevOps 要求不同团队之间的协作和沟通，需要打破传统的职能隔离。企业需要建立一种合作和共享的文化，鼓励团队成员进行跨部门的合作和知识分享。</p><p></p><p>3、自动化和工具：BizDevOps 强调自动化，需要组织层统筹考虑布局，要有合适的工具和技术来支持持续集成、持续交付和自动化测试等流程，从而提高效率、降低出错风险，加速软件开发和交付的速度。</p><p></p><p>4、持续改进：BizDevOps 是一个持续改进的过程，企业需要持续地评估和改进其 BizDevOps 实践。通过不断的反馈和迭代，发现问题、解决问题，并寻求持续的改进和优化。</p><p></p><h5>InfoQ：企业在这个过程中，通常容易陷入哪些误区？</h5><p></p><p></p><p>吴悠：对于在 BizDevOps 落地实践的过程中，常见的误区包括：</p><p></p><p>1、过于强调技术：</p><p></p><p>BizDevOps 不仅仅是技术的问题，它涉及到组织文化、流程和团队协作等方面。过于强调技术，而忽视了其他方面的改变和调整，容易导致实践的失败。</p><p></p><p>2、缺乏业务参与：</p><p></p><p>BizDevOps 的核心是将业务与开发、运维整合在一起。但有时候业务部门可能被忽视或被排除在外，而缺乏业务参与可能会导致开发出的软件无法真正满足业务需求，从而影响到实践的成功。</p><p></p><p>3、缺乏明确的目标和度量指标：</p><p></p><p><a href=\"https://www.infoq.cn/video/KyeYYm9Zxro2SasFeBxb?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">BizDevOps</a>\" 需要明确的目标和度量指标来衡量实践的效果和价值。如果企业没有明确的目标和度量指标，就会在落地实践的推进过程中缺少抓手，也无法很好去衡量改进的效果，洞察过程中的一些问题。</p><p></p><h5>InfoQ：广发证券从 0 到 1 开始搭建场外衍生品投资管理系统，在这个过程中，遇到的最大挑战是什么？是否可以分享一下我们在其中总结的成功实践经验？</h5><p></p><p></p><p>吴悠：场外衍生品系统是纯自研的一个项目，我们当时面临的最大的挑战来自于，当业务进入快速发展期，研发团队的规模在短短几个月的时间内急剧扩张，研发过程管理的复杂度呈指数级上升，研发进度和研发质量在短期内遇到了挑战。那么，如何在这么一个背景之下，寻求一套适用于大规模研发团队业技协同，快速交付的管理方式，变成了我们当时需要解决的一个问题。</p><p></p><p>这个过程中，我们借鉴了  BizDevOps 的框架和方法论，基于项目自身的一些痛点，优化了我们的研发流程、工具平台，也摸索出了一套能够让我们的团队具备持续高效交付能力的研发实践。这些实践也是我在这次会上想重点分享的内容，也欢迎感兴趣的同行和专家们到时候一起参与讨论及交流。</p><p></p><p></p><h4>关于 FCon</h4><p></p><p>首届<a href=\"https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5\">FCon全球金融科技大会</a>\"将于 11 月 19-20 日在上海举办。本次大会已邀请到工商银行、招商银行、汇丰银行、兴业银行、中信银行、北京银行、平安人寿、度小满、蚂蚁集团等业界知名银行以及金融机构的大咖，前来分享大模型、 Web 3.0 、隐私计算、数字货币、区块链等前沿技术在金融领域的落地案例。</p><p></p><p>我们诚挚地邀请您加入我们，共同探索金融科技的未来，<a href=\"https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5\">点击链接</a>\"即可查看全部演讲专题。</p><p></p><p>目前是 <a href=\"https://fcon.infoq.cn/2023/shanghai/apply?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5\">8折特惠购票</a>\"，报名立减 ¥1360，咨询购票可联系：17310043226（微信同手机号）。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/e2/ca/e205602269fc52b1557a8c4a4e7b91ca.png\" /></p><p></p>",
    "publish_time": "2023-11-07 13:31:58",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]