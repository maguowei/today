[
  {
    "title": "DevEx：来自SPACE作者的一种全新的度量框架",
    "url": "https://www.infoq.cn/article/sF2is0yZ7B5yWcG8T8U9",
    "summary": "<p></p><h3>关键要点</h3><p></p><p>研究人员 Abi Noda、Nicole Forsgren 博士、Margaret-Anne Storey 博士和 Michaela Greiler 博士发表了一篇论文，为提高生产力提供了一种切实可行的途径，其重点聚焦在开发者体验 (DevEx)。开发者体验聚焦于开发者的真实体验及其在日常工作中遇到的摩擦点。作者断言，关注开发者体验是最大化工程效率的关键，并介绍了一个用于衡量和改进的 DevEx 框架。组织可以通过识别开发人员遇到的最大摩擦点来改善开发者体验，然后在可提高开发人员能力或满意度的可改进领域进行大力投入。DevEx 框架将影响开发者体验的因素提炼为三个维度：反馈回路、认知负荷和心流状态。领导者可以在这三个维度中选择指标，以衡量和确定需要关注的领域，最终推动生产力的提高。调查为获得一套全面的衡量标准提供了一个实践性的起点，以便充分了解开发者体验。有效的调查计划需要注重调查设计，以及按角色和团队分解结果并将结果与​​内部和外部基准进行比较的能力。</p><p>&nbsp;</p><p>&nbsp;</p><p>近期发布的一篇研究论文揭示了度量和提升开发者生产力的一种全新框架。</p><p>&nbsp;</p><p>该框架称作&nbsp;<a href=\"https://getdx.com/blog/news/measuring-developer-productivity\">DevEx框架</a>\" ，作者为 Abi Noda、Margaret-Anne Storey 博士、Nicole Forsgren 博士、和 Michaela Greiler 博士。</p><p>&nbsp;</p><p>领导者长期以来一直在寻求提升其工程团队的生产力，以便帮助业务更快发展、开发新产品及利用新兴趋势。</p><p>&nbsp;</p><p>然而，尽管近来也涌现出了 DORA 和 SPACE 这类方法，但要重点关注什么才能实现这一目标，想知道这一点仍然难以捉摸；而新的框架旨在解决这一差距。</p><p>&nbsp;</p><p>作者凭借广泛的研究和经验，断言关注开发者体验是最大限度提高工程效率的关键。</p><p>他们的论文提出了框架，将开发者体验提炼为三个核心维度，并提供了衡量它的方法。</p><p>本文包含论文要点摘要以及主要作者 Abi Noda 的评论。这里还有<a href=\"https://queue.acm.org/detail.cfm?id=3595878\">全文的链接</a>\"。</p><p>&nbsp;</p><p></p><h2>度量生产力有难度</h2><p></p><p>&nbsp;</p><p>谷歌研究员 Ciera Jaspan 和 Collin Green 在最近的一篇文章中提出了衡量开发人员生产力很有挑战性的两大原因：软件工程的不可重复性，以及开发人员的生产力受到外部力量的严重影响。</p><p>&nbsp;</p><p>对于后者，外部力量可能是工作的复杂性（以及是否一定有那么复杂）、完成工作时与他人的互动或组织设计。还有一些具体影响开发人员的因素，包括不稳定的测试、构建速度和技术债务。</p><p>衡量生产力困难的另一个原因是，软件开发是一项创造性的工作：它并不是在生产统一通用的产出物。\"试图通过借用操作机器的方法来量化生产力，并不适合软件工程\"。</p><p>&nbsp;</p><p></p><blockquote>我们必须记住，我们正在与一个本质上是人类的系统合作。为了了解如何改进该系统，我们需要从人类那里了解他们当前的体验如何。</blockquote><p></p><p>&nbsp;</p><p></p><h2>开发者体验提供了新视角</h2><p></p><p>&nbsp;</p><p>开发者体验提供了一种了解开发人员生产力的新方式：从开发人员本身的角度。开发者体验包括开发人员如何“感受、思考和重视他们的工作”，并关注开发人员在执行工作时面临的日常现实和摩擦。</p><p>&nbsp;</p><p>先前的研究已经确定了许多影响开发者体验的因素：例如，中断、不切实际的截止日期以及开发工具的摩擦，都会对开发人员对其工作的感受产生负面影响。明确的任务、组织良好的代码和轻松的发布可以改善开发者体验。</p><p>&nbsp;</p><p>组织可以通过确定开发人员遇到的最大摩擦点来改善开发者体验，然后投资于可提高开发人员能力或满意度的可改进领域。例如，组织可以专注于减少开发工具中的摩擦，以便让开发人员更无缝地完成任务。即使是减少了浪费的一小部分时间，如果在整个工程组织中是倍增的，那么对生产力的影响也会比雇用更多工程师更大。</p><p>&nbsp;</p><p></p><h2>越来越多的企业开始关注开发者体验</h2><p></p><p>&nbsp;</p><p>Gartner 最近的一项研究显示，78% 的受访组织已经制定或计划了正式的开发者体验倡议，而 Forrester 的一项类似研究表明，75% 的企业领导者认为开发者体验对于执行业务战略至关重要。这些发现表明，人们越来越认识到投资开发者体验计划可以带来的实质性好处。</p><p>&nbsp;</p><p><a href=\"https://www.mckinsey.com/industries/technology-media-and-telecommunications/our-insights/developer-velocity-how-software-excellence-fuels-business-performance\">麦肯锡</a>\"和 <a href=\"https://stripe.com/files/reports/the-developer-coefficient.pdf\">Stripe</a>\"的相关研究进一步验证了优化开发人员工作环境的业务影响，因此越来越多的组织围绕开发者体验制定了 C 级倡议举措。</p><p>&nbsp;</p><p></p><h2>开发者体验的三大维度</h2><p></p><p>&nbsp;</p><p>在论文中，作者将之前确定的影响开发者体验的因素提炼为三个核心维度：反馈回路、认知负荷和心流状态。</p><p></p><p></p><blockquote>此框架是根据我们之前的研究和经验得出的，并了解了组织在提高开发人员生产力和体验方面的差距。我们的目标是创建一个实用的框架，易于人们理解和应用，并获得开发者体验最重要的方面。</blockquote><p></p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/55/55674d390009463bc4035c85f19ec857.jpeg\" /></p><p></p><p>&nbsp;</p><p>总结一下每个维度。</p><p>&nbsp;</p><p>反馈回路是指相对于所执行的操作的响应速度和质量。快速的反馈回路是高效开发流程的关键组成部分，因为它们使开发人员能够以最小的摩擦快速完成工作。另一方面，缓慢的反馈回路可能会导致开发周期中断，导致开发人员感到沮丧并发生延迟。因此，组织必须努力缩短反馈回路，找出可以加速的开发工具和可以优化的人工交接流程的领域（例如构建和测试流程或开发环境设置）。</p><p>&nbsp;</p><p>认知负荷包括开发人员执行任务所需的心智处理量。高认知负荷可能是由于代码或系统文档记录不完善等挑战造成的，迫使开发人员投入额外的时间和精力来完成工作并避免错误。为了改善开发者体验，团队和组织应致力于通过消除开发过程中任何不必要的障碍来减轻认知负荷。</p><p>&nbsp;</p><p>心流状态是指在从事某项活动时全神贯注、精力充沛的精神状态，其特点是高度专注和享受。这通常被称为“如入无人之境”。在工作中经常体验心流状态可以带来更高生产力、创新和员工发展。同样，研究表明，从工作中获得满足感的开发人员往往会生产出更高质量的产品。因此，团队和组织应致力于创造促进心流状态的最佳条件，以促进员工的福祉和绩效。</p><p>&nbsp;</p><p>总的来说，这三个维度概括了开发人员遇到的所有摩擦类型。尽管开发者体验复杂且微妙，但团队和组织可以通过关注这三个关键领域来采取措施进行改进。领导者可以通过选择三个维度内的指标来发现提高生产力的机会。</p><p>&nbsp;</p><p></p><blockquote>DevEx 框架提供了一种以系统化和以开发者为中心的方式来提高开发人员生产力的方法。我们鼓励读者抓住三个维度中每个维度的指标，以阐明存在摩擦的领域，并有效地优先考虑对组织的预期结果影响最大的领域。</blockquote><p></p><p>&nbsp;</p><p></p><h2>度量什么</h2><p></p><p>&nbsp;</p><p>对于希望改善开发者体验的组织来说，首要任务是度量前文描述的三个维度中存在哪些摩擦。作者建议在每个维度中选择要度量的主题，针对每个主题抓住感知和工作流程指标，同时抓住关键的 KPI ，以便与预期的更高层次的结果保持一致。</p><p>&nbsp;</p><p>从三个维度度量主题。例如，组织可以选择度量测试效率（反馈回路）、代码库复杂性（认知负荷）、技术债务平衡（认知负荷）和深度工作时间（心流状态）。一些主题可能映射到多个维度。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/07/07696ebac08dd5a90518740a98809fad.jpeg\" /></p><p></p><p>&nbsp;</p><p></p><blockquote>我们主张领导者选择的指标可以全面覆盖三个维度，以全面了解开发者体验。例如，可以在反馈回路维度中评估的主题是测试效率，而代码库复杂性可以在认知负荷维度。</blockquote><p></p><p>&nbsp;</p><p>抓住每个主题的感知和工作流度量。除了有关工程系统和流程的客观数据之外，衡量开发者体验还需要抓住开发人员的看法（他们的态度、感受和意见）。这是因为单独的感知和工作流度量都无法讲述完整的故事。</p><p>&nbsp;</p><p>例如，看似快速的构建过程如果经常打断开发人员的工作进度，可能会给开发人员带来干扰。相反，即使开发人员对他们的构建过程感到满意，使用构建时间等客观衡量标准也可能会发现反馈回路比应有的速度要慢，并且开发工作流程的简化程度也比应有的要低。因此，分析感知和工作流度量对于全面了解开发人员在日常工作中遇到的摩擦点是必要的。</p><p>&nbsp;</p><p>度量 KPI，以聚焦推动重要的业务成果。 KPI 充当 DevEx 计划的北极星指标。精心设计的 KPI 应度量企业寻求推动的成果，包括生产力、满意度、参与度和保留率的提高。</p><p>&nbsp;</p><p></p><h2>如何度量</h2><p></p><p>&nbsp;</p><p>作者建议从调查开始来捕获上述指标。调查的优点是能够捕获开发者体验的各个方面，包括 KPI、感知度量和工作流度量。</p><p>&nbsp;</p><p></p><blockquote>谷歌、微软和 Spotify 等公司多年来一直依赖基于调查的开发者生产力指标。然而，设计和管理调查可能很困难，因此我们希望我们的框架为领导者提供一个不错的起点。</blockquote><p></p><p>&nbsp;</p><p>鉴于调查的重要性，作者概述了调查计划成功的几个重要考虑因素。</p><p>精心设计调查。设计不当的调查问题会导致结果不准确且不可靠。作者表示，至少，调查问题应基于明确定义的结构，并在访谈中经过严格测试，以获得一致的解释。按团队和角色细分结果。组织领导者常犯的一个错误是关注公司范围内的结果，而不是按团队和角色（例如角色、任期、资历）细分的数据。仅关注总体结果可能会导致忽视影响公司内少数但重要群体的问题。将结果与基准进行比较。比较分析有助于将数据置于情境中并帮助推动行动。例如，开发商对科技债务的情绪通常是负面的，这使得识别问题或衡量其规模变得困难。基准使领导者能够了解团队的情绪得分何时低于同行，以及组织的得分何时低于行业竞争对手。这些信号标志着显着的改进机会。混入事务调查。除了定期调查之外，组织还可以使用事务调查来收集基于特定接触点的反馈。例如，当 CLI 工具安装过程中发生特定错误时，平台团队可以使用事务调查来提示开发人员提供反馈。事务调查提供持续的反馈流，并且由于提出问题的及时性，可以产生更高质量的答复。注意调查疲劳。随着时间的推移，许多组织都在努力维持调查的高参与率。缺乏后续行动通常会导致开发人员觉得重复回应调查不值得。因此，领导者和团队跟进调查至关重要。</p><p>&nbsp;</p><p></p><h2>结论</h2><p></p><p>&nbsp;</p><p>DevEx 框架提供了一个用于了解开发者体验的实用框架，其配套的度量方法能系统地帮助指导改进。组织应该立即开始度量开发者体验，即使他们尚未建立或计划正式的 DevEx 投入。</p><p>&nbsp;</p><p></p><h2>作者简介</h2><p></p><p>Abi Noda 是 <a href=\"https://getdx.com/\">DX</a>\"的创始人兼首席执行官，负责领导公司的战略方向和研发工作。他的工作重点是开发衡量方法，以帮助组织提高开发者体验和生产力。在 DX 之前，Abi 在多家公司担任工程领导职务，并创立了 Pull Panda，该公司于 2019 年被 GitHub 收购。有关更多信息，请访问他的<a href=\"https://abinoda.com/\">网站</a>\"。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/devex-metrics-framework/\">https://www.infoq.com/articles/devex-metrics-framework/</a>\"</p><p>&nbsp;</p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/zxBarfLg4T9T1wivz0zx\">AI 时代背景下的平台工程之路 | 极客有约</a>\"</p><p><a href=\"https://www.infoq.cn/article/QEPvmRLAWsw735WWUNmB\">通用电气在平台工程上浪费70亿美元的教训</a>\"</p><p><a href=\"https://www.infoq.cn/article/kfKwKQiGwv0Zbht0fkLW\">一个价值70亿美元的教训！如何避免平台工程变成“大灾难”？</a>\"</p>",
    "publish_time": "2023-08-18 10:29:34",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "百度开放国内首个商用全场景智能编程助手Comate X，已有超100家企业合作伙伴",
    "url": "https://www.infoq.cn/article/Hgq3ssWvOACj7sLdagZl",
    "summary": "<p>8月16日，由深度学习技术及应用国家工程研究中心主办、百度飞桨和文心大模型承办的WAVE SUMMIT深度学习开发者大会2023举办。会上，百度对外发布文心大模型、飞桨平台、AI原生应用如流等一系列技术、产品最新进展及生态成果。百度集团副总裁、百度集团首席信息官李莹发表主题演讲，她认为，当前以AI大模型为核心技术的第四次科技革命，从根本上推动生产力变革，将赋能千行百业，也为企业办公领域带来前所未有的发展机遇。</p><p>&nbsp;</p><p>基于AI原生思维，李莹宣布，百度智能工作知识管理理念“创新流水线= AIx知识管理”升级到2.0，正式发布百度如流“超级助理”，并带来百度Comate系列产品的重磅升级。李莹提到，大模型压缩了人类对世界的认知，智能涌现，最重要的体现就是在知识方面的擅长。大模型是企业办公领域的重大机遇，而且能够率先发生更深刻的变革。</p><p>&nbsp;</p><p>李莹指出，以文心一言为代表的大语言模型已具备理解、生成、逻辑、记忆的能力，同时带动了更多能力的涌现，为智能工作带来重大变革，有三个主要的特点：一是交互方式会变成以自然语言交互为主；二是需求满足方式能做到端到端的极致满足；三是重塑工作模式和流程，最终带来基于AI原生构建的全新工作范</p><p></p><h3>如流“超级助理”正式发布，现场演示四大场景AI原生能力</h3><p></p><p>&nbsp;</p><p>会上，李莹重磅发布如流“超级助理”产品，基于文心一言能力，在原有的如流超级助手基础上全面升级。不同于助手概念的工具属性，“助理”意味着更多的人性化，更多的主动性。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/fe/c0/fe5255408bfed8e4b47704ac4b4a4dc0.png\" /></p><p></p><p>如流超级助理旨在打造人人可拥有的懂你、专业、实时陪伴的工作助理。现场李莹重点围绕移动端任务执行、智能文档处理、会话式商业智能CBI、智能沟通四大场景，对“超级助理”进行了10余个演示。</p><p>&nbsp;</p><p>如流将“超级助理”作为AI能力的入口，随时随地可以被唤起并响应，时刻陪伴用户左右。在移动端任务执行场景，现场展示了超级助理移动端的语音一键约会、一键休假、一键差旅能力。例如，“语音一键差旅”，现场在超级助理界面语音输入“我后天上午去上海研发中心开会，当天返回北京，请帮我规划行程”，超级助理可快速调用不同模块或平台的功能，自动提交差旅申请、预定往返机票和酒店，并能避让相关日程，根据用户习惯提供理想住宿地点，且为用户智能完成对公结算，无需个人再走报销流程，就像真正的助理一样。效率从小时级操作，压缩为分钟级甚至秒级完成。</p><p>&nbsp;</p><p>在智能文档处理场景，超级助理“查文档、学知识、看文献”的能力也非常抢眼。“找文档”，只需输入文档的出现场景，即可准确找到目标文档。“看文献”，面对英文论文，超级助理跨端至浏览器，一键点击可快速生成中文摘要，还有翻译、解释等能力。超级助理不仅大幅提升了知识获取效率，也极大拓展了员工增长能力的边界。</p><p>&nbsp;</p><p>超级助理还打造了基于大模型技术构建的会话式商业智能，Baidu Conversational BI，即CBI。在“Baidu CBI”场景，李莹演示了查询销售数据、分析团队数据、查询商机等能力。基于文心一言，不同于传统BI，只需要通过超级助理，输入自然语言，即可实现商业分析的快速计算和结构化输出，CBI甚至会给出建议。</p><p>&nbsp;</p><p>沟通是工作中最高频的场景之一，超级助理可以实现降噪减负，面对海量信息，抽取关键，聚焦核心。超级助理在沟通场景具有“IM智能总结、AI洞察、AI会议纪要”等多项能力。例如“超级助理IM智能总结”功能，划选多条对话之后会生成一段智能总结，一键转发，接收人便能看到这条精简准确的总结，快速决策和响应，据统计，该功能使消息阅读效率提升3倍；会议方面，AI洞察和 AI会议纪要将会议内容的阅读和应用量提升了3.5倍。</p><p></p><h3>Comate系列产品重磅升级，Comate X首次面向企业开发者开放</h3><p></p><p>&nbsp;</p><p>在研发智能化场景，百度Comate系列产品全新升级，重磅发布智能编程助手Comate X和Comate Stack工具套件。</p><p></p><p>Comate X智能编程助手，不仅可以提供基础的代码智能推荐，更能在研发全生命周期、全场景，做到帮助工程师『想』、『写』、『改』。除了代码解释、代码生成等，还有行间注释生成、单元测试生成、文档生成、命令行生成、接口生成代码等能力，目前已经支持30多种编程语言、十多种IDE。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/86/70/866da5eb7bce154c069a6f2657c2e770.png\" /></p><p></p><p>现场，李莹与百度工程师配合，以自然语言向Comate X输入了“写一个激活码程序”的任务后，几分钟内即实现了代码生成、代码解释、代码注释、单元测试等全流程操作。重要的是，工程师在整个过程中没有写一行代码，全部通过编程助手完成。</p><p>&nbsp;</p><p>作为国内首个商用全场景智能编程助手，李莹正式宣布Comate X面向企业开发者开放。Comate系列产品已经在百度内部全面使用，目前已服务和对接超过100家企业合作伙伴，处于成熟的商业化阶段。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/34/f7/34e168c79a24c1914ba882e9d05df2f7.png\" /></p><p></p><p>Comate X是用AI原生重构的研发工具链，另一方面，研发工具链服务于AI原生应用开发，研发流程也在发生重构，需要一整套适配AI应用的新架构，新工具套件。基于此，李莹还发布了Comate Stack 工具套件，可支持AI原生研发全过程。使用Baidu Comate Stack，2步即可开发上线一个超级助理插件。通过Comate Stack 工具套件，能显著降低AI原生应用的建设门槛，提高AI原生变革的效率。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/57/9f/576b6edd53a91562046d6ba86663349f.png\" /></p><p></p><p>目前，百度智能工作平台如流、研发智能化产品Comate系列已赋能包括金融、能源、AI、制造、通信等在内的数十大产业和领域。</p><p>&nbsp;</p><p>企业办公领域的重大变革，是以大语言模型为代表的人工智能加速各行各业转型升级的一个缩影。在这个进程中，技术创新和应用落地形成良性循环，理解、生成、逻辑、记忆等能力持续提升，产业应用的广度和深度持续拓展，大语言模型为通用人工智能带来曙光。</p>",
    "publish_time": "2023-08-18 10:58:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Presto 设计与实现（三）：依赖注入框架 Guice",
    "url": "https://www.infoq.cn/article/552c5ff923ec5df42e5467823",
    "summary": "<p>在上篇文章中已经介绍，Presto 依赖了众多的开源项目，下面让我们按照开源项目在 Presto 实现过程中的重要程度逐一分析，如果你对其中某些开源项目已经非常熟悉，你可以略过相关章节。</p><p></p><p>Google 开源的一款轻量级的依赖注入的框架，和 Spring 一样，只是更精炼，使用起来更自由。</p><p></p><p>我们用代码来模拟用户通过使用订餐服务，进行点餐的场景：</p><p><code lang=\"java\">// 1. 餐桌服务\ninterface TableService {\n    int provide();\n}\n\nclass TableServiceImpl implements TableService {\n    @Override\n    public int provide() {\n        return new Random().nextInt(10) + 1;\n    }\n}\n\n// 2. 菜品服务\ninterface FoodService {\n    String randomFood();\n}\n\nclass FoodServiceImpl implements FoodService {\n    private static final String[] FOODS = new String[]{\n            \"麻婆豆腐\",\n            \"锅包肉\",\n            \"蛋花汤\",\n            \"酸菜汆白肉\",\n            \"拍黄瓜\"\n    };\n\n    @Override\n    public String randomFood() {\n        return FOODS[new Random().nextInt(FOODS.length)];\n    }\n}\n\n// 3. 订餐服务\ninterface OrderService {\n    int order(int table, String food, int count);\n}\n\nclass OrderServiceImpl implements OrderService {\n    private AtomicInteger index = new AtomicInteger();\n\n    @Override\n    public int order(int table, String food, int count) {\n        return index.getAndIncrement();\n    }\n}\n\n// 4.实际应用\npublic class OrderExample {\n    public static void main(String[] args) {\n        TableService tableService = new TableServiceImpl();\n        FoodService foodService = new FoodServiceImpl();\n        OrderService orderService = new OrderServiceImpl();\n\n        int orderNo = orderService.order(tableService.provide(), foodService.randomFood());\n        System.out.println(\"Wait for: \" + orderNo);\n    }\n}\n</code></p><p>我们在代码实现中，需要创建各种服务，同时需要维护服务的引用，对服务进行全声明周期管理，这样实现势必会增加代码的复杂性，类的职责不清晰。</p><p></p><p>如果我们使用 Guice：</p><p><code lang=\"java\">// 1. 定义 Module，创建类的绑定关系\nclass OrderModule implements Module {\n    @Override\n    public void configure(Binder binder) {\n        binder.bind(TableService.class).to(TableServiceImpl.class);\n        binder.bind(FoodService.class).to(FoodServiceImpl.class);\n        binder.bind(OrderService.class).to(OrderServiceImpl.class);\n    }\n}\n\n// 2. 实际应用\nclass GuiceOrderExample {\n    public static void main(String[] args) {\n        Injector injector = Guice.createInjector(new OrderModule());\n        TableService tableService = injector.getInstance(TableService.class);\n        FoodService foodService = injector.getInstance(FoodService.class);\n        OrderService orderService = injector.getInstance(OrderService.class);\n\n        int orderNo = orderService.order(tableService.provide(), foodService.randomFood());\n        System.out.println(\"Wait for: \" + orderNo);\n    }\n}\n</code></p><p>使用 Guice 通过创建 Module ，在 Module 内存绑定接口和实现类，实际应用时通过 Injector 获取实际的服务，每个类的分工明确，后续代码也很容易扩展。</p><p></p><h2>1. 单实现绑定</h2><p></p><p>Guice 中支持很多中绑定方式，下面的绑定方式最终结果是相同的：</p><p><code lang=\"java\">// 方式 1：通过类名绑定\nclass BinderExample implements Module {\n    @Override\n    public void configure(Binder binder) {\n        binder.bind(TableService.class).to(TableServiceImpl.class);\n    }\n}\n\n// 方式 2：直接绑定实例\nclass BinderExample implements Module {\n    @Override\n    public void configure(Binder binder) {\n        binder.bind(TableService.class).toInstance(new TableServiceImpl());\n    }\n}\n\n// 方式 3：通过注解 @Provides\nclass BinderExample implements Module {\n    @Override\n    public void configure(Binder binder) {\n    }\n\n    @Provides\n    public TableService tableService(){\n        return new TableServiceImpl();\n    }\n}\n\n// 方式 4：通过实现 Provider 接口\nclass TableServiceProvider implements Provider{\n    @Override\n    public TableService get() {\n        return new TableServiceImpl();\n    }\n}\n\nclass BinderExample implements Module {\n    @Override\n    public void configure(Binder binder) {\n        binder.bind(TableService.class).toProvider(TableServiceProvider.class);\n    }\n}\n</code></p><p></p><h2>2. 多实现绑定</h2><p></p><p>如果服务有多个实现类，可以通过自定义注解或使用别名方式绑定。</p><p></p><h3>2.1 通过自定义注解</h3><p></p><p><code lang=\"java\">// 1. 定义不同的注解\n@Qualifier\n@Target({FIELD, PARAMETER, METHOD})\n@Retention(RUNTIME)\n@interface NormalTable {\n}\n\n@Qualifier\n@Target({FIELD, PARAMETER, METHOD})\n@Retention(RUNTIME)\n@interface VipTable {\n}\n\n// 2. 实际不同的实现类\nclass NormalTableService implements TableService {\n    @Override\n    public int provide() {\n        return new Random().nextInt(10);\n    }\n}\n\nclass VipTableService implements TableService {\n    @Override\n    public int provide() {\n        return 100 + new Random().nextInt(10);\n    }\n}\n\n// 3. 使用注解建立绑定关系\nclass CustomAnnotationModule implements Module {\n    @Override\n    public void configure(Binder binder) {\n        binder.bind(TableService.class).annotatedWith(NormalTable.class).to(NormalTableService.class);\n        binder.bind(TableService.class).annotatedWith(VipTable.class).to(VipTableService.class);\n        binder.bind(CustomAnnotationExample.class);\n    }\n}\n\n// 4. 通过使用自定义的注解进行依赖注入\nclass CustomAnnotationExample {\n    private final TableService normalTableService;\n    private final TableService vipTableService;\n\n    @Inject\n    public CustomAnnotationExample(@NormalTable TableService normalTableService, @VipTable TableService vipTableService) {\n        this.normalTableService = normalTableService;\n        this.vipTableService = vipTableService;\n    }\n\n    public void normal(){\n        System.out.println(normalTableService.provide());\n    }\n\n    public void vip(){\n        System.out.println(vipTableService.provide());\n    }\n\n    public static void main(String[] args) {\n        Injector injector = Guice.createInjector(new CustomAnnotationModule());\n        CustomAnnotationExample example = injector.getInstance(CustomAnnotationExample.class);\n        example.normal();\n        example.vip();\n    }\n}\n</code></p><p></p><h3>2.2 通过内置的 @Named 注解</h3><p></p><p><code lang=\"java\">// 1. 通过 Names.named 建立绑定关系\nclass NamedModule implements Module {\n    @Override\n    public void configure(Binder binder) {\n        binder.bind(TableService.class).annotatedWith(Names.named(\"normal\")).to(NormalTableService.class);\n        binder.bind(TableService.class).annotatedWith(Names.named(\"vip\")).to(VipTableService.class);\n        binder.bind(NamedExample.class);\n    }\n}\n\n// 2. 通过 Named 注解进行依赖注入\nclass NamedExample {\n    private final TableService normalTableService;\n    private final TableService vipTableService;\n\n    @Inject\n    public NamedExample(@Named(\"normal\") TableService normalTableService, @Named(\"vip\")  TableService vipTableService) {\n        this.normalTableService = normalTableService;\n        this.vipTableService = vipTableService;\n    }\n\n    public void normal(){\n        System.out.println(normalTableService.provide());\n    }\n\n    public void vip(){\n        System.out.println(vipTableService.provide());\n    }\n\n    public static void main(String[] args) {\n        Injector injector = Guice.createInjector(new NamedModule());\n        NamedExample example = injector.getInstance(NamedExample.class);\n        example.normal();\n        example.vip();\n    }\n}\n</code></p><p></p><h2>3. 集合绑定</h2><p></p><p></p><h3>3.1 Set 绑定</h3><p></p><p>需要使用 Multibinder 进行绑定：</p><p><code lang=\"java\">class MutilsModule implements Module {\n    @Override\n    public void configure(Binder binder) {\n        Multibinder binders = Multibinder.newSetBinder(binder, TableService.class);\n        binders.addBinding().to(NormalTableService.class);\n        binders.addBinding().to(VipTableService.class);\n    }\n}\n\n// 实际应用需要使用 Set 类型接收注入的所有实例\nclass MutilsExample {\n    @Inject\n    private Set tableServices;\n\n    public void provide() {\n        tableServices.forEach(table -&gt; System.out.println(table.provide()));\n    }\n\n    public static void main(String[] args) {\n        Injector injector = Guice.createInjector(new MutilsModule());\n        MutilsExample example = injector.getInstance(MutilsExample.class);\n        example.provide();\n    }\n}\n</code></p><p></p><h3>3.2 Map 绑定</h3><p></p><p>需要使用 MapBinder 进行绑定：</p><p><code lang=\"java\">class MapModule implements Module {\n    @Override\n    public void configure(Binder binder) {\n        MapBinder binders = MapBinder.newMapBinder(binder, String.class, TableService.class);\n        binders.addBinding(\"normal\").to(NormalTableService.class);\n        binders.addBinding(\"vip\").to(VipTableService.class);\n    }\n}\n\n// 使用 Map 类型接收注入的键和值\nclass MapExample {\n    @Inject\n    private Map map;\n\n    public void provide() {\n        map.entrySet().forEach(entry -&gt; {\n            System.out.println(entry.getKey() + \": \" + entry.getValue().provide());\n        });\n    }\n\n    public static void main(String[] args) {\n        Injector injector = Guice.createInjector(new MapModule());\n        MapExample example = injector.getInstance(MapExample.class);\n        example.provide();\n    }\n}\n</code></p><p></p><h2>4. AOP</h2><p></p><p>Guice 也支持 AOP，通过声明注解在标识注解的方法前后加入处理逻辑。</p><p><code lang=\"java\">// 1. 定义需要拦截的注解\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\n@interface AOP {\n}\n\n// 2. 对关心的类方法进行拦截\nclass AOPTableService implements TableService {\n    @Override\n    @AOP\n    public int provide() {\n        return new Random().nextInt(10);\n    }\n}\n\n// 3. 定义拦截逻辑\nclass LogService implements MethodInterceptor {\n    @Override\n    public Object invoke(MethodInvocation methodInvocation) throws Throwable {\n        System.out.println(\"Invoking: \" + methodInvocation.getMethod().getName());\n        Object result = methodInvocation.proceed();\n        System.out.println(\"Invoked: \" + result);\n        return result;\n    }\n}\n\n// 4. 建立规则：识别拦截执行拦截逻辑\nclass AOPModule implements Module {\n    public void configure(Binder binder) {\n        binder.bindInterceptor(any(), annotatedWith(AOP.class), new LogService());\n    }\n\n    public static void main(String[] args) {\n        Injector injector = Guice.createInjector(new AOPModule());\n        AOPTableService tableService = injector.getInstance(AOPTableService.class);\n        tableService.provide();\n    }\n</code></p><p></p><h2>5. Guice 在 Presto 中的使用</h2><p></p><p>在 Preto 节点启动过程中，通过 NodeModule 加载本地配置、通过 DiscoveryModule 向 coordinator 发送注册信息、通过 HttpServerModule 提供 HTTP 服务或创建 HTTP Client，每个模块内都可以看到 Guice 的身影，想了解 Presto 的实现，可以以 Guice 的 Module 作为切入点。</p>",
    "publish_time": "2023-08-18 00:23:04",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "中邮消费金融市场部负责人李远鑫，确认担任 FCon 金融领域数字化转型挑战探索专题出品人",
    "url": "https://www.infoq.cn/article/pQoBaSYx0xvKUGacvEZg",
    "summary": "<p><a href=\"https://fcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=atricle\">FCon 全球金融科技大会</a>\"，将于 11 月在上海召开。中邮消费金融市场部、数字化转型办公室 / 部门负责人、办公室主任李远鑫将担任「<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1575?utm_source=infoqweb&amp;utm_medium=atricle\">金融领域数字化转型挑战探索</a>\"」的专题出品人。在此次专题中，你将了解到企业内部的大数据平台需要满足数据时效和企业级大规模普惠用数的诉求，实时大数据平台建设思路，以及未来平台建设的发展方向。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/track/1575?utm_source=infoqweb&amp;utm_medium=atricle\">李远鑫</a>\"，硕士毕业于华南理工大学计算机专业，国有大型银行控股消费金融子公司创始团队成员之一，前科技发展部总经理助理，资深架构师，分管技术架构团队、研发团队、技术测试团队、科技管理团队，曾负责公司两次 IT 系统规划的制定、整体架构设计和落地实施，成功主导大型金融系统从集中式到分布式、微服务的中台架构转型。</p><p></p><p>现任市场部门负责人、数字化转型办公室主任，主要负责拓展股东生态业务合作、自营线下业务、同业及垂类客群三方市场拓展，以及负责全公司数字化转型工作的规划及落地实施。目前已获得系统架构设计师、信息系统项目管理师等认证，华南理工大学电子与信息专业博士在职研究生，研究方向为基于深度图神经网络的金融反欺诈，曾代表公司在 ArchSummit、MPD、GDevops 等峰会上发表演讲。</p><p></p><p>相信李远鑫的到来，可以帮助提升此专题的质量，让你学习到，数字化进程可以帮助金融企业加强数据分析能力，从而优化风险控制系统；数字化技术的应用可以提高服务效率，使服务更加高效；在数字化转型过程中，金融企业面临的一些挑战，例如数字资源价值没有得到充分发挥、缺乏支持数字化转型的技术人才、数字化转型可能会影响金融业的安全运作等。</p><p></p><p>除上述专题外，FCon 上海还将围绕&nbsp;<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1580?utm_source=infoqweb&amp;utm_medium=atricle\">DevOps&nbsp;在金融企业落地实践</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1591?utm_source=infoqweb&amp;utm_medium=atricle\">金融行业大模型应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1576?utm_source=infoqweb&amp;utm_medium=atricle\">创新的金融科技应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1577?utm_source=infoqweb&amp;utm_medium=atricle\">金融实时数据平台建设之路</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1588?utm_source=infoqweb&amp;utm_medium=atricle\">金融安全风险管控</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1589?utm_source=infoqweb&amp;utm_medium=atricle\">数据要素流通与数据合规</a>\"等专题进行交流。</p><p></p><p>FCon 上海 2023，相约 11 月！现在购票，前 100 人可享 5 折特惠购票，咨询购票请联系：13269078023（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8ec7f7fb25c7949931b2b8a5deffddd.png\" /></p><p></p>",
    "publish_time": "2023-08-18 14:04:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "首次公开收购！OpenAI 选择这家成立2年的8人游戏公司做什么？",
    "url": "https://www.infoq.cn/article/JAqkPkkgMFvV0JvcFMtj",
    "summary": "<p>当地时间8月16日，<a href=\"https://ill.inc/\">OpenAI 发布公告称收购了Global Illumination</a>\"的团队，此笔交易更成为OpenAI自2015年成立以来首次对外收购，但并未公开交易涉及金额。据悉，该团队将参与 OpenAI 核心产品产品的研发，包括 ChatGPT。</p><p>&nbsp;</p><p>那么，Global Illumination 凭借什么获得了OpenAI的青睐呢？</p><p></p><h2>谁是Global Illumination？</h2><p></p><p>&nbsp;</p><p>Global Illumination成立于2021，是一家利用人工智能构建创意工具、基础设施和数字体验的公司，由前Instagram团队成员Thomas Dimson、Taylor Gordon与Joey Flynn在美国纽约创立。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/af/af73744af5100fcb71b8f7bed0f626c4.png\" /></p><p></p><p>联合创始人兼CEO Thomas Dimson在Instagram 担任了七年的首席工程师/总监，是 Instagram 内容排名算法 (non-chronological feed, stories&nbsp;and explore) 的原作者。当时，Dimson还研发了 polling sticker、Hyperlapse和emojineering 等产品，并被Fast Company 评为商界<a href=\"https://www.fastcompany.com/person/thomas-dimson\">十大最具创造力人物</a>\"之一。</p><p>&nbsp;</p><p>联合创始人兼CTO Taylor Gordon的经历也很丰富。早年曾在谷歌、微软、YouTube担任AI方向的工程师，2015年加入Instagram，领导了feed排名算法的开发，后又到Facebook从事计算机视觉方面的研究。</p><p>&nbsp;</p><p>Joey Flynn则曾在Facebook、Instagram、Quip相继担任产品设计总监，在此期间联合创立的公司Unity&amp;Variety在2017 年被 Salesforce 收购。团队其他成员也曾为 YouTube、Google、Pixar、Riot Games 等其他知名公司做出过重大贡献。</p><p>&nbsp;</p><p>可以看出，该团队的创始成员都拥有着不错的研发能力，至少这次收购为OpenAI 增加了研发能力。</p><p>&nbsp;</p><p>但对于此次收购，OpenAI 只做出了这样一句简短的说明：“我们对他们对 OpenAI 产生的影响感到非常兴奋。”那Global Illumination到底对OpenAI 有哪些影响呢？我们只能从其在做的产品探知一二。</p><p>&nbsp;</p><p>Global Illumination最近的作品是Biomes，一款使用 Next.js、Typescript 和 WebAssembly 等 Web 技术为 Web 构建的<a href=\"https://github.com/ill-inc/biomes-game\">开源</a>\"沙盒 MMORPG，使用 React 和反应式范例进行游戏。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/7e/7ecedc3a0a2ac2b5c198ddc916783d7f.png\" /></p><p></p><p>收购消息公布后，引起网友纷纷猜测OpenAI的目的。NVIDIA高级人工智能科学家 <a href=\"https://twitter.com/DrJimFan\">Jim Fan</a>\"也表示，“在 GPT-5 上运行的多智能体文明模拟游戏？也许 Minecraft 确实是 AGI 所需要的一切？我很好奇。”</p><p>&nbsp;</p><p>这款游戏的命运尚不明朗，有人猜测：OpenAI 是否会涉足开发定制环境，或者更广泛地涉足游戏领域——也许会为 NPC 添加一点人工智能。也有网友分析称，“从Global Illumination做过的事情来看，他们的产品能力是OpenAI非常需要的，但是结合前几天的斯坦福AI小镇来看，这种高自由度运行成本低的沙盒游戏结合AI会有无限可能，所以OpenAI可能是看中了他们成员的产品能力，也可能纯粹看上了这个高自由度的游戏。”</p><p>&nbsp;</p><p>值得关注的是，此前，OpenAI 与Shutterstock 签署了一项新的 6 年协议，OpenAI通过对视频、图像和音乐库的访问，为 ChatGPT 开发人员提供“高质量”训练数据。</p><p>&nbsp;</p><p>还有网友推测，“这么明显迹象表明 OpenAI 着眼于面向消费者的出色项目，而不仅仅是一个神奇的 API。”</p><p>&nbsp;</p><p>对此，曾有媒体报道，Sam Altman 5月份时曾与一些开发人员和初创公司创始人闭门会面时讲到，Altman 强调 OpenAI 不会发布除ChatGPT以外的其他产品。“做平台的巨头企业确实掌握着不少杀手级应用程序，而 ChatGPT 的目标是把这些企业转化成客户来改进 API。”“ChatGPT 只想成为工作场景下的超级智能助手，OpenAI 也不会涉足众多其他 GPT 用例。”</p><p>&nbsp;</p><p>该公司到目前为止的商业模式意味着，技术仍然需要有其他公司买单，并为那些OpenAI自己无法服务的企业客户提供服务。</p><p></p><h2>OpenAI 的困境</h2><p></p><p>&nbsp;</p><p>OpenAI 一直在避免直接收购，但该公司在微软和主要风投公司数十亿美元资金的支持下，多年来一直在运行基金和资助计划来投资新兴人工智能公司和组织。</p><p>&nbsp;</p><p>但OpenAI 也必须寻求自己的商业胜利。据<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">The Information </a>\"报道，虽然 ChatGPT 享誉全球，但 OpenAI 去年花费了超过 5.4 亿美元来开发它，其中包括用于从谷歌等公司挖走人才的资金。</p><p>&nbsp;</p><p>The Information的最新数据与<a href=\"https://fortune.com/longform/chatgpt-openai-sam-altman-microsoft/\">《财富》1月份的报告</a>\"大致一致，后者披露了该公司 2022 年总计支出 5.445 亿美元，其中计算和数据支出 4.1645 亿美元，员工支出 8931 万美元，其他运营支出3875万美元，但未指明具体项目。在 OpenAI今年年初与微软达成一项为期多年、价值数十亿美元的协议之前，这些成本就已经积累起来了。</p><p>&nbsp;</p><p>4 月份，咨询公司 SemiAnalysis 的首席分析师Dylan Patel也向The Information表示，由于计算成本的原因，他估计每天运行 ChatGPT 的成本为 70 万美元。</p><p>&nbsp;</p><p>饶是如此，OpenAI 还是面临非常严峻的 GPU 限制，这也延迟了他们一些短期计划的实施。5余份闭门会时，Altman 称，客户投诉最多的是关于 API 的可靠性和速度问题，他解释客户抱怨的大部分问题是由于 GPU 短缺造成的。</p><p>&nbsp;</p><p>相比之下，OpenAI 去年的收入为 3000 万美元。<a href=\"https://www.reuters.com/business/chatgpt-owner-openai-projects-1-billion-revenue-by-2024-sources-2022-12-15/\">但据报道</a>\"，Altman 告诉投资者，该公司打算今年将这一数字提高到 2 亿美元，明年提高到 10 亿美元。这次收购或许也是OpenAI 进行商业变现的一步。</p><p>&nbsp;</p><p>但如今，OpenAI的先发优势正在迅速减弱，由于隐私保护规则、监管规定和激烈的市场竞争等因素，其用户数量在下降，该公司不太可能永远主导这一领域。</p><p>&nbsp;</p><p>外媒指出，问题的核心在于，ChatGPT 本身就是一个通用聊天机器人平台，但在现实世界中，构建适合特定目的的人工智能模型，并满足国际隐私保护和数据安全的严格要求，才会给行业带来真正的帮助。</p><p>&nbsp;</p><p>比如，医疗和金融公司希望使用强大的人工智能，但希望确保自己拥有数据，并且仅使用相关信息来训练人工智能。这也给了其他企业机会。</p><p>&nbsp;</p><p>目前，OpenAI 也正在努力寻找方向，同时也在扩展产品功能。就在公布收购消息前一天，OpenAI 声称开发出了一种使用GPT-4进行内容审核的解决方案，有望减轻人工审核员的负担。OpenAI在博文中写道，内容审核在维持数字平台健康方面发挥着至关重要的作用，使用基于GPT-4的内容审核系统可以更快地迭代政策变更，将工作周期从数月缩短至数小时。</p><p>&nbsp;</p><p>或许当下的OpenAI 也处于战略探索期，未来如何更好的在这一赛道走下去，我们拭目以待。</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://openai.com/blog/openai-acquires-global-illumination\">https://</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">opena</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">i</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">.com/b</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">l</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">og/openai-acquires-g</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">l</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">obal-illum</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">in</a>\"<a href=\"https://openai.com/blog/openai-acquires-global-illumination\">ation</a>\"</p><p><a href=\"https://www.infoq.cn/article/xzanyw2qszcxmnxuvkzv\">https://www.infoq.cn/article/xzanyw2qszcxmnxuvkzv</a>\"</p><p><a href=\"https://www.businessinsider.com/openai-versus-google-microsoft-startups-chatgpt-competitors-2023-4\">https://www.businessinsider.com/openai-versus-google-microsoft-startups-chatgpt-competitors-2023-4</a>\"</p><p><a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">https://</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">fu</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">t</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">u</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">r</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">ism</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">.com/</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">the-byte</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">/openai-</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">l</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">o</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">si</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">n</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">g</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">-mo</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">n</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">e</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">y-ch</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">at</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">gp</a>\"<a href=\"https://futurism.com/the-byte/openai-losing-money-chatgpt\">t</a>\"</p>",
    "publish_time": "2023-08-18 14:19:02",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "腾讯Q2金融科技营收486亿元，重回两位数增长",
    "url": "https://www.infoq.cn/article/dH29zFMDeTXLBeWzrcF3",
    "summary": "<p>8 月 16 日，腾讯发布 2023 年第二季度及中期业绩，二季度实现营收 1492 亿元，同比增长 11%，净利润 375 亿元，同比增长 33%。</p><p></p><p>值得关注的是，其中“金融科技及企业服务”业务成为第二大收入来源，占总营收比重 32%，达到 486 亿元，同比增长 32%（而去年同期，这一增速仅为 1%）。至今，金融科技及企业服务板块已连续九个季度营收占比超过 30%。</p><p></p><p>财报指出，<a href=\"https://xie.infoq.cn/article/067d7119638fbb13c7d9d86f4\">金融科技</a>\"服务收入实现双位数同比增长，主要得益于线下线上商业支付活动的增加。而受益于云服务增长、视频号直播等因素，本季度企业服务营收也回暖至同比双位数增长，毛利率明显改善。</p><p></p><p>自 2019 年起，腾讯将营业收入分为四个部分：增值服务、网络广告、金融 科技及企业服务、其他产品。增值服务多年来一直是收入占比最高的业务，具体包括社交媒体收入和游戏收入；网络广告业务根据其广告的性质可分为媒体广告、社交及其他广告；金融科技及企业服务对应金融科技业务线和<a href=\"https://www.infoq.cn/minibook/RuveM045ptfTNKwfeq6c\">云服务</a>\"业务线，金融科技业务线又可以进一步分解为支付业务和金融科技业务；其他产品则是将不属于上述三大部分的收入归于其中。</p><p></p><p>聚焦金融科技业务线，支付业务具体包括红包转账业务、提现业务、商业支付（线下 / 线上支付）业务三个部分。同时， 金融科技业务主要包含基金代销业务、导流分成业务以及备付金产生的利息收入。基金代销业务由全资子公司腾安基金以理财通平台为基础开展；导流分成业务主要为联营公司微众银行的消费贷产品微粒贷进行导流，收取分成收入；备付金产生于支付业务，但是由于第三方支付牌照由财付通持有，因此将其归入金融科技业务。</p><p></p><p>与此同时，财报还称，腾讯已完成对<a href=\"https://www.infoq.cn/article/0o5aTpM9L7k7XikKEpIf\">财付通</a>\"的自查和相应整改工作，并提升了支付业务的合规经营能力，公司期待在支持性监管框架下推进业务发展与创新。</p><p></p><p>7 月 7 日，中国人民银行公布的“银罚决字〔2023〕34—38 号”罚单显示，腾讯旗下财付通支付科技有限公司因违反消费者金融信息保护管理规定等 11 项规定被罚没 29.93 亿元，4 名责任人合计被罚 242.1 万元。</p><p></p><p>腾讯董事会主席兼首席执行官马化腾在财报中表示：“二季度我们保持了稳健的收入增长，并向更高利润率的优质收入来源倾斜。这一转变，结合自去年形成的严谨成本纪律，让我们的利润增速超过了收入增速。后续将继续推动创新，包括通过生成式人工智能等，我们正在以腾讯云模型即服务为合作伙伴提供模型库，同时也在打磨我们自研的专有基础模型”。</p><p></p><p>参考链接：</p><p><a href=\"https://finance.sina.com.cn/roll/2023-08-17/doc-imzhpazv3011967.shtml\">https://finance.sina.com.cn/roll/2023-08-17/doc-imzhpazv3011967.shtml</a>\"</p><p><a href=\"https://k.sina.com.cn/article_5816954579_15ab7aed3019019u8s.\">https://k.sina.com.cn/article_5816954579_15ab7aed3019019u8s.</a>\"</p><p><a href=\"\">htmlhttps://www.vzkoo.com/read/0fbad67dee12ea6f508b731085552d0e.html</a>\"</p>",
    "publish_time": "2023-08-18 14:22:58",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "又一知名证交所和微软合作大模型，监管警告：AI或引发金融危机",
    "url": "https://www.infoq.cn/article/37bFH2LvLVjZazsvjd9B",
    "summary": "<p>据金融时报消息，伦敦证券交易所集团 CEO David Schwimmer 表示，该公司正在与微软和几家银行合作创建”定制的大语言模型“，探索 AIGC 在交易策略、风险管理等方面的潜力。</p><p></p><p>毫无疑问，ChatGPT 的推出激起了各行各业对 AIGC 的兴趣，虽然许多金融公司对其充满兴趣，但他们对在模型中机密信息的输入持谨慎态度，因为模型会不断从所提供的数据中学习。</p><p></p><p>Schwimmer 表示，内部正在与银行客户积极沟通，探讨是否存在机会，能够以安全的专有方式将我们的大量现有数据与他们的数据进行融合。</p><p></p><p>他进一步指出，银行之所以想创建自身的 AI 大模型，是因为它们希望确保自己的数据不会被用于供其他大型语言模型获取信息。</p><p></p><p>作为十年战略合作伙伴关系的一部分，微软早于去年 12 月收购了伦交所集团 4% 的股份，并获得了董事会席位。事实上，伦交所集团也正因为面临伦敦上市不足的挑战，所以将人工智能相关产品视为潜在的新业务方向。自从它以 270 亿美元的价格收购了 Refinitiv 公司（金融市场数据和基础设施提供商）之后，就一直在积极扩展其金融数据业务。</p><p></p><p>目前，全球范围内不少金融机构都开始研究 AI 大语言模型，但市面上也一直涌现相关风险提示。比如本月，美国证券交易委员会主席 Gary Gensler 发出警告，指出人工智能或许会演变成金融体系的下一个巨大系统性风险。</p><p></p><p>在 2020 年，Gensler 与其他专家合作撰写了一篇关于深度学习与金融稳定性的论文。该论文得出的结论是：过去，基于网络和平台效应，科技巨头从中受益匪浅，然而只有极少数人工智能公司将建立支撑众多企业所依赖技术工具的基础模型。</p><p></p><p>Gensler 预测，美国很可能会涌现出 2-3 个基础人工智能模型。这将进一步加深整个经济体系的相互联系，增大金融崩溃的可能性，因为当一个模型或数据集成为中心时，很容易引发“羊群效应”，即每个人都会依赖相同的信息并做出类似的反应。</p><p></p><p>“这项技术将成为未来金融危机的核心因素。”Gensler 表示。</p><p></p><p>尽管业界一直在警示人工智能的潜在风险，但这股大模型浪潮显然已势不可挡。</p><p></p><p>参考链接：</p><p>https://www.ft.com/content/e380f4a7-1144-428e-9dfc-b541ae23c21a</p><p>https://www.axios.com/2023/08/12/artificial-intelligent-stock-market-algorithms</p>",
    "publish_time": "2023-08-18 14:47:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "广汽推出AI大模型平台，号称“汽车行业首创”；华为首款纯电轿跑即将登场；半导体巨头联手布局RISC-V架构｜汽车技术资讯",
    "url": "https://www.infoq.cn/article/jlhHomEmWzKRubo4DKWU",
    "summary": "<p></p><h2>华为首款纯电轿跑即将登场</h2><p></p><p></p><p>近日，华为智能汽车解决方案 BU CEO 余承东在社交平台透露华为智选车业务首款纯电轿跑车型将会成为第一个搭载 HarmonyOS 4 的新车，采用颠覆性的设计语言，将于本季度正式亮相。该车被认为是华为与奇瑞集团合作打造的首款智选车型，从其发布的图片看，该车命名为“Luxeed”。</p><p></p><h2>蔚来领投电驱动解决方案商</h2><p></p><p></p><p>蔚来资本宣布，领投电驱动解决方案提供商「马威 Mavel」的 A 轮融资。据悉，马威于1999年成立于意大利，已连续完成A轮及A+轮数千万美金融资，同时获得蔚来汽车下一代某平台核心零部件的项目开发定点，公司加速产业落地以及国内国外整车厂客户的持续扩张。</p><p></p><p>蔚来资本管理合伙人朱岩表示：“随着新能源汽车行业的快速发展，电驱动系统作为新能源汽车的核心部分，市场需求将持续增长，技术迭代也面临更高的要求和挑战。”</p><p></p><h2>重庆打造智能网联汽车示范区</h2><p></p><p></p><p>重庆西部科学城正在大力推进智能网联汽车的商业化应用。目前已有 7 种不同类型的自动驾驶车辆在进行道路测试。这些车辆都接入了云端控制平台, 可以通过道路边的感知设施采集数据并实现远程控制。</p><p></p><h2>广汽推出 AI 大模型平台，号称“汽车行业首创”</h2><p></p><p></p><p>广汽宣布正式推出 AI 大模型技术的最新研发成果——广汽 AI 大模型平台，该平台号称“汽车行业首创的大模型平台技术”，将在近期搭载于高端智能轿跑昊铂 GT 亮相。据介绍，广汽 AI 大模型平台聚合了多种 AI 大模型，能调用通用大模型的能力、基于智能汽车的应用场景构建专用模型。</p><p></p><h2>半导体巨头联手布局“第三”架构：RISC-V 架构时代加速到来</h2><p></p><p></p><p>日前，博世、高通、英飞凌、Nordic 半导体以及恩智浦等五家头部汽车电子芯片公司共同宣布，将投资成立一家基于开源 RISC-V 架构的合资公司，旨在通过下一代芯片开发来推动 RISC-V 架构在全球的应用。</p><p>该公司成立于德国，最初的应用重点将是汽车领域，随后将逐步将扩展到移动和物联网等更广泛的市场。新公司最终落地时间将取决于各国监管机构的批准进程。</p>",
    "publish_time": "2023-08-18 14:54:46",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "英国推出10亿英镑金融科技基金与硅谷竞争；支付宝多个核心产品升级，助力中小商家数字化转型｜金融科技资讯",
    "url": "https://www.infoq.cn/article/dVk2Zbk5YXsEOaLUGxiI",
    "summary": "<p></p><h2>英国推出 10 亿英镑金融科技基金与硅谷竞争</h2><p></p><p>英国政府牵头成立了一只名为 Fintech Growth Fund 的基金，由 Mastercard、巴克莱银行、伦敦证券交易所集团等机构参与，募集资金高达 10 亿英镑。</p><p></p><p>该基金旨在对准 IPO 前期的金融科技公司进行 1 亿到 10 亿英镑的投资。此举是响应去年一项政府委托的审查报告，以帮助英国金融科技公司更便捷地上市。该基金标志着英国政府与金融业巨头共同投资金融科技的罕见举措。尽管目前规模有限，但被视为增强伦敦作为全球金融科技投资中心地位的重要一步。</p><p></p><p>该举措还有可能为金融巨头获取新技术开发的专业知识提供机会。在年轻科技新贵的竞争下，大型银行和金融机构正积极推进数字化雄心，以保持竞争力。</p><p></p><h2>星展银行 AI 采用之路：数据整合是最大障碍</h2><p></p><p>近日，星展银行在接受媒体专访时透露，多年来在 AI 采用过程中遇到许多障碍，其中最大的障碍在于数据整合。该银行从 2018 年就开始布局 AI，要整合不同系统中的数据到一个中心化平台非常艰巨。现在 DBS 的数据平台 ADA 已经整合了 95% 以上的有用数据，共计 5.3PB 和 32,000 个数据集。</p><p></p><p>星展银行强调，AI 采用不能仅仅关注模型，还需要监控和持续改进，以确保员工和客户都能受益。随着新加坡政府新增 1.5 亿新元资助金融业 AI 应用，星展银行表示将继续推进 AI 规模化和普及化，以产生更大业务价值。</p><p></p><h2>支付宝合作伙伴大会召开：国际版支付宝发布，多个核心产品升级</h2><p></p><p>8 月 17 日，支付宝 2023 年度合作伙伴大会在杭州举行。大会发布小程序、灯火推广平台等核心产品升级，进一步助力中小商家数字化转型。同时，支付宝宣布推出面向境外用户的国际版 App，并加大对服务业数字化的支持力度。此外，小程序云等新产品也推出开放版，降低中小企业云服务成本。支付宝表示，将继续增强平台开放性，与生态伙伴深入合作，共建数字生态。</p><p></p><h2>万事达卡与摩洛哥 NAPS 合作推动数字支付</h2><p></p><p>近日，美国支付巨头万事达卡公司与摩洛哥金融科技公司 NAPS 达成合作，共同开发数字支付解决方案。这一合作旨在推动摩洛哥的数字支付和金融科技生态系统建设。</p><p></p><p>根据合作安排，万事达卡将为 NAPS 提供其拥有的全球支付网络、先进的支付技术、丰富的产品组合以及安全解决方案。借助万事达卡的专业支持，NAPS 希望可以提升自身的创新能力，加快推出全新的数字化产品和服务，为摩洛哥客户带来更便捷的支付体验。</p><p></p><h2>腾讯二季度金融科技收入占比 32% 同比增长 15%</h2><p></p><p><a href=\"https://www.infoq.cn/news/dH29zFMDeTXLBeWzrcF3\">腾讯发布</a>\" 2023 年第二季度财报显示，该季度金融科技和企业服务收入同比增长 15% 至 486.4 亿元，占营收总额的 32%，成为业绩最大贡献板块。得益于线上线下商业支付规模扩大，以及视频号直播电商收入增加。</p><p></p><p>放眼未来，在腾讯持续深耕用户粘性和线下支付网络的背景下，金融科技板块收入占比有望进一步提升。腾讯也表示已完成对财付通的自查整改，提升了支付业务的合规能力。</p>",
    "publish_time": "2023-08-18 14:59:13",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "微脉发布健康管理领域大语言模型应用CareGPT",
    "url": "https://www.infoq.cn/article/w2AiYzH7ObMvc4NEXucc",
    "summary": "<p>8月17日，全国最大的全病程管理平台微脉发布国内首款健康管理领域大语言模型应用——CareGPT。</p><p>与通用型的大语言模型产品不同，CareGPT致力于在真实的医疗服务场景中充分发挥健康管理价值，实现预防、咨询、预约、康复的全周期智能化健康管理能力。</p><p></p><p>据微脉技术中心总经理海马（花名）介绍，CareGPT将语言大模型AI技术与一系列工程调优技术以及全病程管理相结合，目前参数规模为70亿，可支持医疗健康场景下的多模态输入和输出。</p><p></p><p>微脉向InfoQ表示，当前构建和落地医疗大模型主要存在三方面的挑战：</p><p>首先是领域高质量数据的收集、清洗、整理和结构化，这也是最大的一个挑战。原先业务各环节沉淀下来的知识分散在人的头脑、PPT、PDF、Word文档、在线文档、内部论坛中，这些无法直接用于训练知识库，需要耗费大量的工作来整理和转换。其次是对大语言模型输出的内容的评判，目前评测需要人工进行，需要行业专家对回答进行判断。再次是大语言模型需要与全病程管理的业务系统整合，形成一个可用的链路。</p><p></p><p>为了应对上述挑战，微脉一方面持续建设高水平技术团队；另一方面除了输入现有最新的专家共识、医学指南等医学文本外，从16年开始做专科专病的管理，20年开始做数字疗法方面的研究，过程中沉淀累积了大量基于循证医学和真实世界研究的知识库、疾病管理SOP。同时微脉将一线健康管家、个案管理师、医学经理、产品经理的经验由统一结构化模版进行输出，在知识提纯加工后进行知识编码及部署，这个过程不断滚动迭代；在测试环节也加入专家及临床医生评审环节，确保大模型问答的准确性。</p><p></p><p>从医学AI建设角度来看，微脉CareGPT形成了一套独有的方法论。</p><p></p><p>其一是精准（Precise）。CareGPT训练阶段以循证医学为基础，使用了目前最新版本临床医学指南、疾病诊疗模型、专家共识等超10亿的医学文本数据，以及百万条微脉个案管理数据，形成专科专病管理的医疗健康知识库，并投入超过100位个案管理师参与RLHF监督调试训练，以保障CareGPT的准确性和一致性。</p><p></p><p>其二是高效（Efficient）。针对当前国内医疗服务供给不足，民众缺乏基础医疗常识和健康管理意识等痛点，CareGPT为医院、医生和微脉个案管理师提供全新的辅助工具。通过对患者聊天内容的分析，CareGPT能够相对准确地还原患者健康情况全貌，同时支持专业自评量表推送，帮助患者自主进行初步的身体状况筛查，实现分诊导诊的智能化辅助，从而实现更加高效的患者管理。凭借CareGPT的支持，医生和个案管理师同一时期的患者管理数量可提升至500个，而在此之前，这一数据为50-70个。</p><p></p><p>CareGPT还可以支持医生进行医院资料的高效召回，针对疾病信息进行高速检索，帮助医生在诊断时进行症状比对，改变传统查阅方式，辅助医生决策，提高医生工作效率。</p><p></p><p>其三是智能（Intelligence），CareGPT可以接入医院公众号、呼叫中心、企业微信、微脉APP等多应用场景。根据患者的有效交互和内容分析，为其提供文字、图片、视频等多形态的健康管理建议，覆盖诊前、诊中、诊后全流程。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3a/3a1042c7384aab891d34b14a684cb5b0.png\" /></p><p></p><p>微脉CareGPT整合了多样化的医疗多模态能力，对患者可能出现或已经出现的疾病情况，能够提供个性化的医疗资源匹配和推荐。如孕妇存在孕期心理健康、血压、血糖等问题，CareGPT会及时触发管理SOP，基于已有医疗参数和临床数据，为患者主动推送科普宣教和就诊建议，并提供专业医生、健康管家的联系方式。</p><p></p><p>其四是多病种（Multi-disease）。海马（花名）表示，CareGPT将结合微脉在孕产一体化全病程管理的优势，率先在妇幼全周期管理领域投入使用，而这只是CareGPT踏出的第一步。目前微脉全病程管理已覆盖32个科室，1000多个病种，凭借着多年的积累，沉淀了大量有价值的数据。后续，CareGPT将逐步拓展至其他专病管理板块，包括糖尿病、高血压、精神心理疾病等专病领域，实现健康管理+GPT的高效复制和应用。</p><p></p><p>除此之外，海马（花名）还透露，微脉CareGPT今后将根据医院科室的管理路径，进行定制化的开发应用，通过强大的AI能力，帮助医院进入全病程管理数字化、智能化的新阶段。</p><p></p><p>如今，微脉正不断探索AIGC技术在健康管理领域的创新应用，进一步丰富和完善全病程管理智能化体验。未来，微脉也将秉承初心，以科技赋能医学，通过CareGPT的应用和落地助力公立医院实现从“以治病为中心”向“以健康为中心”的转变，推动我国医疗卫生服务体系的建设和完善，为我国医疗事业的高质量发展贡献力量。</p>",
    "publish_time": "2023-08-18 15:53:34",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "去哪儿酒店大前端团队负责人任龙飞确认出席QCon北京，分享用户体验数字化建设和提效",
    "url": "https://www.infoq.cn/article/KpiwyRLxvmD1R6EA0322",
    "summary": "<p>9 月 3 日 - 5 日，在 <a href=\"https://qcon.infoq.cn/202309/beijing/?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9&amp;utm_term=0818&amp;utm_content=renlongfei\">QCon 全球软件开发大会（北京站）</a>\"上，去哪儿酒店大前端团队负责人任龙飞将发表题为《用户体验数字化建设和提效》主题分享，介绍用户体验数字化背景、用户体验数字化方案设计、前端数字化提效方案以及未来展望。</p><p></p><p><a href=\"https://qcon.infoq.cn/202309/beijing/presentation/5387?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9&amp;utm_term=0818&amp;utm_content=renlongfei\">任龙飞</a>\"，2014 年入职去哪儿网，负责酒店大前端团队。十年以上大前端开发和体验优化经验，专注于用户体验建设和效率提升，在可视化配置、Serverless 方面都也有研究和斩获，目前推进了可视化配置在业务的落地、Serverless 系统在前端的大型应用。2022 年主导的“用户体验提升和建设”项目获得去哪儿 TC 项目奖一等奖，主导的“端上信息优化”获三等奖。他在本次会议的演讲内容如下：</p><p></p><p>演讲：用户体验数字化建设和提效</p><p></p><p>演讲提纲：</p><p></p><p>用户体验数字化的背景</p><p></p><p>用户体验数字化方案设计</p><p></p><p>前端数字化提效方案</p><p></p><p>○ Serverless 方案和落地</p><p>○ 可视化配置方案和落地</p><p></p><p>未来展望</p><p></p><p>你将获得：</p><p></p><p>○ 如何做用户体验的数字化设计</p><p>○ 了解如何精细化提升用户体验</p><p>○ 了解前端开发提效的新思路</p><p></p><p>除上述演讲外，QCon 北京还将围绕 <a href=\"https://qcon.infoq.cn/202309/beijing/track/1556?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">FinOps&nbsp;落地</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1570?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">云原生</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1567?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">AIGC&nbsp;浪潮下的研发效能提升</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1558?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">业务安全技术</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1552?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">面向&nbsp;AI&nbsp;的存储</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1557?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">从&nbsp;BI&nbsp;到&nbsp;BI+AI，新计算范式下的大数据平台</a>\"等进行分享。</p><p></p><p>110+ 名嘉宾、近 30 个精彩专题、8 种交流活动，QCon 北京 2023，相约 9 月！咨询购票请联系 18514549229（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/33/33cbbbf20baa8b2a18db4f0681f159aa.jpeg\" /></p><p></p>",
    "publish_time": "2023-08-18 17:48:24",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "蚂蚁数科持续发力PaaS领域，SOFAStack布局全栈软件供应链安全产品",
    "url": "https://www.infoq.cn/article/2che1Izc72EfbxARdQou",
    "summary": "<p>8月18日，记者了解到，蚂蚁数科再度加码云原生PaaS领域，SOFAStack率先完成全栈软件供应链安全产品及解决方案的布局，包括静态代码扫描Pinpoint、软件成分分析SCA、交互式安全测试IAST、运行时防护RASP、安全洞察Appinsight等，帮助客户应用软件实现“发布前检测，运行时免疫”。</p><p></p><p>软件供应链安全合规已经成为各行业关注的焦点，软件产品在开发、测试、上线的各个阶段都存在引入各类安全风险的可能，例如危险开源组件的使用、自研代码缺陷漏洞引入、容器镜像漏洞引入等，这些风险导致软件系统的整体安全防护难度越来越大。</p><p></p><p>云原生安全既是一种全新安全理念，也是实现云战略的前提。以云原生的技术构建一体化安全体系部署，将云服务与安全结合才能达到云上业务部署、开发、运维、响应的全生命周期高质量发展。近些年，各大云计算厂商也都纷纷加大安全产品的投入，尤其是在多云架构趋势下，高复杂度、多重场景下，企业对一站式云原生应用安全防护解决方案的需求陡增。</p><p></p><p>对SOFAStack这类通用型PaaS平台，安全业务至关重要。据知情人士透露，早在今年上半年，该团队已完成产品层面的全面整合，并成立专门团队进一步提升云原生平台在安全方面的竞争优势。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/b6/71/b6dcdd5c82c14bea02b2cayy1fcf7a71.png\" /></p><p></p><p>&nbsp;</p><p>其中静态代码安全扫描产品Pinpoint，于近日首批入选中国信通院“软件供应链安全”产品名录，并通过了公安部计算机信息系统安全产品质量监督检测中心权威测评，这一认证标志着该产品具有国内领先的安全技术和质量保障。</p><p></p><p>静态代码扫描是一种代码分析技术，指在不运行代码的方式下，通过词法分析、语法分析、控制流、数据流分析等技术对软件代码进行扫描，验证代码是否满足规范性、安全性、可靠性、可维护性等指标，从而为软件开发与运行保驾护航。</p><p></p><p>根据官方介绍，Pinpoint通过自研的分析引擎，能够在均衡分析精度、速度、深度的同时保证分析结果，无需构造测试用例即可自动寻找软件编码错误，可以让程序员迅速理解和修复问题，从而投入更多的时间到创造性的工作中。</p><p></p><p>目前，该产品已是国内应用实践最广泛的静态代码安全产品之一，在金融、制造、教育、互联网等行业规模落地实践，包括南京银行、浙江农信、中泰证券、珠海格力、广东电网等。</p>",
    "publish_time": "2023-08-18 17:58:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]