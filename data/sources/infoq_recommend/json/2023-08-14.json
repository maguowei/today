[
  {
    "title": "每秒处理480万会员资料请求，LinkedIn是如何实现的",
    "url": "https://www.infoq.cn/article/vXAjOHKZIA1Sbg7vXrzF",
    "summary": "<p>LinkedIn<a href=\"https://engineering.linkedin.com/blog/2023/upscaling-profile-datastore-while-reducing-costs?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">将Couchbase作为集中式缓存层</a>\"，用于伸缩会员资料读取操作，以应对日益增长的、超出现有数据库集群处理能力的流量。新方案实现了超过99%的命中率，将尾延迟降低了60%以上，将年度成本降低了10%。</p><p></p><p>多年来，LinkedIn直接从其<a href=\"https://engineering.linkedin.com/espresso/introducing-espresso-linkedins-hot-new-distributed-document-store?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Espresso文档平台</a>\"提供会员资料。Espresso平台建立在<a href=\"https://www.mysql.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">MySQL</a>\"之上，并使用<a href=\"https://avro.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Avro</a>\"进行序列化，还包含了<a href=\"https://helix.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Apache Helix</a>\"和<a href=\"https://github.com/linkedin/databus?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Databus</a>\"（LinkedIn的变更捕获系统）组件。Espresso路由器处理资料读取请求，将读/写请求定向到正确的存储节点，并使用堆外缓存（OHC）进行热键缓存。</p><p></p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2023/07/linkedin-member-profile-caching/en/resources/1linkedin-espresso-1688241494720.jpeg\" /></p><p></p><p>图片来源：<a href=\"https://engineering.linkedin.com/blog/2023/upscaling-profile-datastore-while-reducing-costs?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">https://engineering.linkedin.com/blog/2023/upscaling-profile-datastore-while-reducing-costs</a>\"</p><p></p><p>随着存储请求量每年翻倍，峰值超过每秒480万次，为会员资料提供服务的Espresso集群已经达到了伸缩性的极限。团队决定引入一个基于<a href=\"https://www.couchbase.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Couchbase</a>\"的缓存层，而不是重构Espresso平台的核心组件，因为超过99%的请求都是读取操作。</p><p></p><p>LinkedIn软件工程师<a href=\"https://www.linkedin.com/in/estella-pham/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Estella Pham</a>\"和<a href=\"https://www.linkedin.com/in/guanlin-lu-bbba1517/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Guanlin Lu</a>\"解释了团队为什么选择Couchbase作为缓存：</p><p></p><p></p><blockquote>在LinkedIn，我们已经将Couchbase用作各种应用程序的分布式键值缓存。它被选中是因为它比memcached更强大，包括用于保存服务器重启之间持久化的数据，在集群中的个体节点发生故障时所有文档仍然可用的复制功能，以及可以在不停机的情况下添加或删除节点的动态可伸缩性。</blockquote><p></p><p></p><p>新的缓存层结合了OCH和Couchbase，并被集成到了Espresso中，不需要客户端做出修改。其设计重点是Couchbase的故障弹性、缓存数据可用性和数据分歧预防。Espresso路由器会在发生暂时性故障时重试请求，并监控Couchbase健康状况以避免将请求发送到不健康的桶。会员资料数据被复制了三次，如果首领副本不可用，路由器会将其转移到其中的一个跟随者副本。</p><p></p><p>所有的会员资料数据都缓存在每一个数据中心里，由<a href=\"https://samza.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Apache Samza</a>\"作业根据Espresso捕获的写操作进行实时的更新，以及根据数据库快照进行定期的更新。所有的缓存更新都使用了<a href=\"https://docs.couchbase.com/java-sdk/current/howtos/concurrent-document-mutations.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">Couchbase Compare-And-Swap</a>\"（CAS）来检测并发更新，并在必要时重试更新。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e5/e56046646710ea59d192e304223743a3.webp\" /></p><p></p><p>图片资料：<a href=\"https://engineering.linkedin.com/blog/2023/upscaling-profile-datastore-while-reducing-costs?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">https://engineering.linkedin.com/blog/2023/upscaling-profile-datastore-while-reducing-costs</a>\"</p><p></p><p>经过调整之后，Profile Backend服务将负责处理一些原先由Espresso处理的操作。它会动态评估请求字段并返回保存在缓存中的完整资料数据的子集。它还会处理Avro模式转换，并在必要时从注册表获取模式版本。</p><p></p><p>LinkedIn的团队进行了进一步的性能优化，简化了Avro/二进制格式的数据读取，并在反序列化性能方面实现了约30%的改进。因为引入了新的混合缓存方案，Espresso的节点数减少了90%。考虑到运行Couchebase集群、缓存更新作业所需的新基础设施和运行后端服务新增的计算资源，为会员资料请求提供服务的总成本每年下降了10%。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/07/linkedin-member-profile-caching/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTE3MjIzODksImZpbGVHVUlEIjoiR2FLVlFMTEs3WVlNeW9HZSIsImlhdCI6MTY5MTcyMjA4OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.l20WpuKCWg1YMp58-JLJVG-QQDn3w9P16C18szuxgF4\">https://www.infoq.com/news/2023/07/linkedin-member-profile-caching/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/ZQEP69byw99C818CzmF6\">领英采用 Protobuf 进行微服务集成，将延迟降低了 60%</a>\"</p>",
    "publish_time": "2023-08-14 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "再问低代码：AI巨浪下",
    "url": "https://www.infoq.cn/article/67FD5gszt7PPmv1ZUlj7",
    "summary": "<p>AI狂飙的100多天里，<br />\n有人神化，有人漠视，<br />\n有人恐慌，有人兴奋，<br />\n有人坐而论道，<br />\n有人早已躬身入局，<br />\n当AI涌入低代码，<br />\n新的问题，能否打败旧的争议？</p>\n<p>近期，InfoQ 联合钉钉围绕“AI浪潮下的低代码”，邀请了多位低代码赛道的资深从业者，他们分别是：钉钉宜搭平台负责人叶周全；易鲸云CEO刘金柱；伙伴云产品总监吴杨；轻流产研负责人陆琦；氚云产品总经理詹萧；简道云运营负责人沈涛以及主持嘉宾极客邦科技创始人兼CEO霍太稳，7位嘉宾共同打造了这期《再问低代码：AI巨浪下》，共同探讨AI新时代，低代码的未来方向。</p>",
    "publish_time": "2023-08-14 14:18:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "我的20年职业生涯：全是技术债",
    "url": "https://www.infoq.cn/article/MWPVDU3lqV9FH4x8Dm7a",
    "summary": "<p></p><blockquote>那些年，写过的代码终将成为技术债？</blockquote><p></p><p>&nbsp;</p><p>1992 年，Ward Cunningham 在敏捷宣言中首次提出了“技术债”概念，主要指有意或无意地做了错误的或不理想的技术决策所累积的债务。随后，《重构》一书的作者 Martin Fowler 基于 Cunningham 的比喻，创建了一个“技术债务四象限”，包括：</p><p>&nbsp;</p><p>鲁莽/有意：“我们没有时间去设计”；谨慎/有意：“我们必须现在交付，之后再处理因为追求速度所产生的结果”；鲁莽/无意：“什么是分层？”；谨慎/无意：“我们现在知道应该怎么做了”。</p><p>&nbsp;</p><p>前段时间，Reddit 上有关技术债的话题再次引起程序员的广泛讨论。用户 spo81rtyOP 表示，“大多数软件的实际使用寿命也就 5 到 10 年。即便软件能幸存下来，完全由过时技术栈编写这一现实也会让它的路子变得很窄。这就是软件工程师的真实命运。”</p><p>&nbsp;</p><p>创业公司 CTO Matt Watson&nbsp;则直言，他过去 20 年的职业生涯全是技术债。</p><p>&nbsp;</p><p>Watson&nbsp;13 岁开始编程，22 岁时创办了自己的第一家科技公司 VinSolutions，实现了 3000 多万美元的 ARR，并于 2011 年以 1.5 亿美元的价格将其出售给 AutoTrader。离开 VinSolutions 后，Watson&nbsp;创办了一家名为 Stackify 的公司，为软件开发人员提供应用程序监控。此外，Watson 还在菲律宾创办了离岸开发公司 Full Scale ，以支持他的 SaaS 公司。Watson 透露，Full Scale 已发展到拥有 300 多名员工。</p><p>&nbsp;</p><p>Watson&nbsp;在博客中提到，当他听到有人说“我们正在快速开发 MVP，同时最大限度地减少技术债”时，他只是笑笑，因为他知道，最终所有东西都会变成技术债。Watson&nbsp;在博客中介绍了自己的 20 年职业生涯发生的变化，他悲观地表示：“如果时间足够长的话，你的所有代码都将被删除。”</p><p></p><h2>“如果时间足够长，你所有的代码都将被删除”</h2><p></p><p></p><h3>&nbsp;那些早被遗忘的技术和过时的编程语言</h3><p></p><p>&nbsp;</p><p>Watson&nbsp;的职业生涯始于 Visual Basic 6 的开发。从 1999 年到 2003 年，Watson&nbsp;构建了多个不同的应用程序。后来，Watson&nbsp;又花了很多时间进行经典的动态服务器页面（ASP）开发，自己也成为了在 Internet Explorer 6 和 Netscape Navigator 制作兼容网站的专家。</p><p>&nbsp;</p><p>但在今天来看，Visual Basic、ASP、IE6 和 Netscape 都是早已被遗忘的技术了。</p><p>&nbsp;</p><p>与此同时，在过去的 20 多年里，很多编程语言也都“失宠”了，比如 Perl、Delphi、Fortran、FoxPro、ColdFusion。也许这些古老的编程语言还存在某些应用程序中，但大多数情况下，还应用这些编程语言的公司必须要对旧的应用程序进行现代化改造，并将其淘汰。如果你用这些过时的编程语言构建程序，最终的结果可能只有重写，因为很难再找到使用这些语言的程序员了。</p><p>&nbsp;</p><p>在 21 世纪初，人们认为 Adobe ColdFusion 是最热门的产品，但在今天呢？Ruby on Rails 也可能走上 Adobe ColdFusion 的老路，它已经失宠了，并且很难找到使用它的开发人员。曾经 Ruby on Rails 独有的东西，现在也可以在其他语言中使用了。</p><p>&nbsp;</p><p>Watson&nbsp;表示，编程语言来来往往，开发人员不希望学习工作中不需要的技能。同时，开发人员跳槽的速度也很快，他们总是希望自己的简历上有一些热门的新东西。</p><p></p><h3>曾辉煌过的ActiveX、Java Applets、Flash和Silverlight</h3><p></p><p>&nbsp;</p><p>Watson&nbsp;最初开发的一些应用程序使用了 Internet Explorer 6 中的 ActiveX 控件。当时，需要用它们来做打印和其他一些非常不安全的黑客工作。PDF 在当时并不常见，用浏览器打印简直就是一场噩梦。</p><p>&nbsp;</p><p>Java Applets 也曾辉煌过，但它运行缓慢，并且在电脑上安装正确版本的 Java 总是一团糟。Watson&nbsp;称自己永远不会忘记处理 Java 小程序网络防火墙的噩梦。“我一点也不怀念它们，幸运的是，它消失了。”</p><p>&nbsp;</p><p>此外还有 Macromedia/Adobe Flash。当时 Flash 游戏层出不穷，许多软件都是用 ActionScript 在 Flash 中构建的。现在，一个名为 CheerpX 的产品允许使用 WebAssembly 运行旧的 Flash 应用程序。</p><p>&nbsp;</p><p>微软曾推出一个名为 Silverlight 的 Flash 竞品。对于 C# 开发人员来说，这实际上是一个非常棒的框架。Watson&nbsp;的公司也曾用 Silverlight 构建了一些非常棒的东西。不过后来，苹果在浏览器中放弃了对 Flash 和 Silverlight 的支持，从而终结了它们。</p><p>&nbsp;</p><p>下图是十多年前，Watson&nbsp;在 VinSolutions 中使用 Silverlight 构建财务计算器的屏幕截图。Silverlight 现在早已不复存在，他们用 JavaScript 重写了它，但 Watson&nbsp;认为，新版本没有旧版本酷了。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f6/f64258df9144a05ea50fa957d66c6081.webp\" /></p><p></p><p></p><h3>开发工具的变化有多快？</h3><p></p><p>&nbsp;</p><p>2004 年还没有 iOS 和 Android，当时，Watson&nbsp;曾为 Compaq PDA 编写了一个应用程序，用于跟踪汽车经销商的库存。它是用 C# 编写的，用于在 Windows CE 上运行的 .NET Compact Framework 中。</p><p>&nbsp;</p><p>这个 PDA 有一个 100万 像素的摄像头，只要外面是阴天，照片就会糟糕些。这个应用程序很早以前就被淘汰了，但在 2005 年时它还很前卫。</p><p>&nbsp;</p><p>Swift</p><p>&nbsp;</p><p>Swift 是另一个很好地说明开发工具变化速度之快的例子。苹果公司发布 Swift 后，就很难再证明用 Objective C 编写代码是合理的了。虽然在某些用例中仍然需要用 Objective C，但 Swift 明显更易于开发，并且是向前迈出的重要一步。</p><p>&nbsp;</p><p>Watson&nbsp;认为，现在任何用 Objective C 编写的应用程序都可能是技术债了。</p><p>&nbsp;</p><p>WebForms</p><p>&nbsp;</p><p>在为构建 Web 应用程序编写了疯狂的内联脚本之后，Watson&nbsp;很乐意使用新的 ASP.NET Web 表单，其服务器端控件大大简化了开发。它们的目标是让创建 Web 应用程序变得像在 Visual Basic 6 中一样简单。开发者可以在服务器端构建可重用的 UI 组件以呈现给浏览器，就像今天使用 100% 的 JavaScript 所做的那样。</p><p>&nbsp;</p><p>WebForms 并不完美，但它是一个相当大的提升。在 Ruby on Rails 出现并普及了用于开发 Web 应用程序的 MVC（Model-View-Controller，模型-视图-控制器）框架之前，它一直运行得很好。</p><p>&nbsp;</p><p>MVC 很快就淘汰了开发者制作的所有 Web 表单应用程序。Watson&nbsp;认为，任何网页形式的东西都绝对是技术债。</p><p>&nbsp;</p><p>MVC</p><p>&nbsp;</p><p>不知不觉中，每种编程语言就都支持 MVC 框架了。Watson&nbsp;也曾转而使用 ASP.NET MVC 做所有的新功能。它无处不在，包括 Django、Laravel、Symfony、Spring 等。</p><p>&nbsp;</p><p>快进到今天，MVC已经过时了。现在一切都是在 React、Angular、Vue 和其他框架中完成的。在此之前，开发者还会使用 Javascript 框架。在 Stackify 工作时，Watson&nbsp;还曾使用过 Knockout，这是一个相当流行的前端框架。</p><p>&nbsp;</p><p>但在今天，还有人记得 Knockout、Ember、Aurelia、Meteor、Backbone、Handlebars 这些框架吗？它们都“失宠”了，甚至被划分为技术债。毫无疑问，第一代前端框架输给了 React 和 Angular。</p><p>&nbsp;</p><p>Angular JS</p><p>&nbsp;</p><p>2015 年，谷歌创建了 Angular，Angular 迅速成为最受欢迎的前端框架。2016 年，Angular 进行了一次重大升级，不再向后兼容。这意味着，原始版本中的任何内容现在都是技术债。</p><p>&nbsp;</p><p>Watson&nbsp;曾在项目中使用过旧版本的 Angular，如今却成了他必须升级的主要技术债。</p><p></p><h3>过时的SOAP和WCF</h3><p></p><p>&nbsp;</p><p>在 REST API 和 JSON 成为事实上的标准之前，另一种选择是 SOAP，它代表简单对象访问协议，主要由基于 XML 的 Windows 通信框架（WCF）来使用。它使得调用 Web 服务并通过自动代码生成代理类来正确调用服务变得更容易。</p><p>&nbsp;</p><p>Watson&nbsp;职业生涯中最糟糕的一个项目，就是要弄清楚如何在他的公司和另一家供应商之间通过 WCF 和 SOAP 使用安全证书。SOAP 和 WCF 的承诺令人惊叹，但随着时间的推移，维护它简直是一场噩梦。</p><p>&nbsp;</p><p>微软决定不再支持 .NET Core 中的 WCF，REST、gRPC 和 GraphQL 现在才是首选。尽管如此，有个社区项目最终使 CoreWCF 得以继续发展。</p><p>&nbsp;</p><p>随着时间的推移，开发者用来调用 Web 服务的技术类型已经发生了变化。旧的方式仍然有效，但大多数人可能更愿意淘汰它们。</p><p>&nbsp;</p><p>此外还有编程语言的版本更改问题。无论是 Ruby、PHP、.NET 还是其他语言，它们通常需要改写大量的代码，甚至是完全重写。</p><p>&nbsp;</p><p>当 .NET Core 刚发布时，它是专为在 Linux 上运行而设计的更新、更轻、更快的 .NET 版本。基本的 C# 代码都很容易移植过来，但没有人会在真实的应用程序中只使用基本代码。然而，在复杂的企业应用程序中，想要升级时可能会出现许多潜在的问题。这就成为了一笔必须解决的重大技术债。否则，开发者最终会陷在一个古老的版本中。</p><p>&nbsp;</p><p>这些主要版本的更新，最终会成为重大的技术债项目。</p><p>&nbsp;</p><p>Watson&nbsp;在 Stackiy 遇到的最大挑战之一是卡在了旧版本的 Elasticsearch 上。有一次，它们对其工作方式进行了一些重大的更改，但这些更改并不完全向后兼容。Watson&nbsp;的团队大量使用了它，于是所有的升级工作都变成了海量的技术债和升级项目。</p><p></p><h3>所有的代码都将被替换</h3><p></p><p>&nbsp;</p><p>在 Stactify 时，Watson&nbsp;曾为 6 种编程语言构建了自己的跟踪/测评分析库，这项工作的工作量令人难以置信。随着 OpenTelemetry 出现，Watson&nbsp;过去的这些工作变得毫无用处。既然可以使用开源的行业标准，为什么还要自己管理呢？Stackiy 正在慢慢地消除那些 Watson&nbsp;帮忙构建的.NET测评分析器。</p><p>&nbsp;</p><p>Watson&nbsp;在职业生涯早期开发的几个应用程序都已经被终止了，因为这些公司被收购了，并且决定使用完全不同的技术。</p><p>&nbsp;</p><p>Watson&nbsp;认为，随着时间的推移，你会看到你创造的几乎所有的东西都会因为各种原因而被废弃和替换，或者现在就已经都是基于旧技术的了。大多数软件的使用寿命都很有限，比你想象的要短。所有的代码最终都变成了技术债，每个人都想用更现代的方式重写，或者业务需求发生重大的变化。</p><p>&nbsp;</p><p>诚然，在企业界，更有可能拥有似乎永远存在的内部应用程序。像铁路或大型银行这样的公司使用同样的基于大型机的软件已经有 40 年了。</p><p>&nbsp;</p><p>Watson&nbsp;预测，WebAssembly 最终会超越当今的前端开发，一个全新的世界将不断发展。</p><p></p><h2>一切终将变成技术债？</h2><p></p><p>&nbsp;</p><p>在做新项目时，大家总是希望将技术债降至最低。但 Watson&nbsp;认为，不可能不产生技术债，因为根本没有十全十美的东西。随着时间的推移，今天完美的东西将来也会不完美，因此，我们需要学会与不完美共存。</p><p>&nbsp;</p><p>而技术债的另一面是，随着时间的推移，一切都会慢慢“腐烂”——要么在升级到最新版本方面存在重大问题，要么由于更新的操作方式而最终失宠。</p><p>&nbsp;</p><p>“一切最终都会变成技术债，否则项目就会夭折。如果幸运的话，你的代码能存活足够长的时间，从而成为别人的技术债。如果时间足够长的话，你的所有代码都将被删除。”Watson&nbsp;在博文的最后说道。</p><p>&nbsp;</p><p>Watson&nbsp;的观点引发了很多开发者的讨论。赞同者认为自己过去做的很多工作最终都被取代了，辛苦编写的代码可能几年后就没有了用武之地；反对者则认为不应如此悲观，因为有些代码真的可以长青不老。</p><p>&nbsp;</p><p>Reddit 用户、前几年刚退休的开发者 vital_chaos 提到，他这辈子在编写代码方面投入了 40 年时间，在他参与过的所有技术要素当中，只有一种至今仍在得到实际应用：</p><p>&nbsp;</p><p></p><blockquote>“我的团队从 1988 年起着手开发一款应用程序，直到 1994 年正式开发完成，这就是 Deltagraph。如今，它的持有公司已经在新冠疫情的冲击下倒闭。据我所知，我做过的所有其他工作最终都被取代了，或者是雇主倒闭，总之成果消失在了历史的长河中。当然，有些可能仍被使用，这个我也不敢完全确定。&nbsp;所以我觉得虽然很多事情在做的时候看似无比重要，老板也总在催促要加班加点完成任务，但事后回头再看，这些辛苦编写的代码很可能几年之后就丧失了生命力！”</blockquote><p></p><p>&nbsp;</p><p>用户 spo81rtyOP 也非常认可 Watson&nbsp;的观点：“感谢你让我确定，有这种感觉的不单是我自己。我觉得大多数软件的实际使用寿命也就 5 到 10 年。之后，因为企业倒闭或者其他原因，软件被替代的可能性会非常高。即便它能幸存下来，完全由过时技术栈编写这一现实也会让它的路子变得很窄。这就是软件工程师的真实命运。”</p><p>&nbsp;</p><p>用户 com2kid 表示，他曾于 2008 年前后在微软工作，当时他看到过一个版权为 1994 年的头文件，里面还有作者姓名。搜索后发现，那位程序员已经在微软当上副总裁了。所以他认为，有些代码真的可以长青不老。</p><p>&nbsp;</p><p>用户 chesterriley 则想象了一个极端可能：也许未来终有一天，人们会继续使用 100 年前就编写出来的代码。最终的大赢家可能会是 Unix 实用程序或者 TCP/IP 代码之类，又或者是某些编译器、运行时引擎或解释器。还有来自 Linux 或 Windows 等操作系统的代码。人们可能突然发现，自己修复的错误居然诞生自 100 多年前。</p><p>&nbsp;</p><p>也有开发者认为，有些代码受到当前炒作趋势的影响很大，而 Web 开发应该就是其中最典型的代表了。考虑到过去二、三十年间 Web 开发领域发生的一系列根本性变化，这种情况也在情理之中。</p><p>&nbsp;</p><p>用户 Otis_Inf 拥有 28 年从业经历，他表示，他还记得网景（Netscape）发布背景图像的那一天，cgi 处理程序中的 Perl 脚本也曾经是常态。无论是当年还是现在，技术的发展速度都相当惊人，开发者必须适应新的做事方式——包括提交给 cgi 处理程序的静态 html 页面，也包括异步获取部分新元素来构成视图的客户端渲染页面。</p><p>&nbsp;</p><p>当然，也有些代码并没真正受到当今炒作的影响。有趣的是，这类代码大多集中在服务器端。虽然一直有强大的力量在“颠覆”微服务、Lambda 函数等服务构建方式，但如果忽略掉这些实现细节，那服务器的内存空间里肯定还有 db+ 服务在运行、也还有空闲周期没有利用起来。</p><p>&nbsp;</p><p>Otis_Inf 认为，IBM DB2 仍能运行 30 年前的 SQL 代码是有原因的，这个原因就是组织仍然依赖这些功能。或者说，根本就没有足够多的人把它“重写”成新代码。那这些代码是“烂代码”或者说“技术债”吗？还是得看具体情况。你家的锤子可能也用了十来年了，它过时了吗？如果还能干活，那就没过时。只有当代码确实需要变更，但却没人处理这项工作时，它才会真正沦为“烂代码”。</p><p>&nbsp;</p><p>“我希望看到当下诞生的新项目能始终牢记长期可维护性的重要意义，甚至把它当作一项基本设计前提。毕竟真的没多少人有能力维护陈旧软件项目。尽管地球人口仍在增加，但掌握足够技能来维护这些古早软件的开发者数量一直都跟不上。”</p><p></p><h2>国内技术从业者怎么看？</h2><p></p><p>&nbsp;</p><p>针对技术债问题，InfoQ 曾采访过国内一些技术从业者。</p><p>&nbsp;</p><p>百分点 CTO 刘译璟认为，判断技术债务的重点在于“哪些事情是应该做的”，它是一个因组织而异、因项目而异、因人而异的过程，例如以下一些方面：</p><p>&nbsp;</p><p>组织上要求做但没做的：制度、流程、规范、分享学习等；业务和技术上要求做但没有做的：功能、性能、安全、高可用、扩展、监控、辅助工具等。</p><p>&nbsp;</p><p>如果按照软件工程环节分类，技术债务可以分为：需求分析、方案设计、架构设计（逻辑架构、功能架构、数据架构、部署架构、运行架构等等）、编码、测试、发布等。如果按照产出物类型分，可以分为：</p><p>&nbsp;</p><p>文档类：管理过程文档、需求分析文档、设计文档、测试案例文档等；代码类：代码、脚本、规范等；软件包类：产品软件包、依赖软件、依赖资源等；环境类：开发环境、测试环境、预上线环境、生产环境等。</p><p>&nbsp;</p><p>至于如何决定要重写还是继续维护，需要判断“继续维护的收益”和“重写的收益”哪个更大，来决定继续维护还是重写。可以综合考虑如下几方面的收益：</p><p>&nbsp;</p><p>开源：提升现有业务收入、支持新业务的开拓；节流：节省维护人员、节省运营费用；组织：人员结构调整、组织能力培养。</p><p>&nbsp;</p><p>债务是避免不了的，时刻判断“持有债务的价值”，当价值很低时要尽快处理。</p><p>&nbsp;</p><p>腾讯研发总监王辉表示，如果人力、物力和工期等资源丰富，能去优化的就都可以做到极致。但通常，资源都是不丰富的，或者说是捉襟见肘的，那就要根据实际业务情况来看。腾讯一向的方式是“先抗住再优化”，项目是否真的到了非优化不可的地步，是否真的到了不优化随时都可能宕机的时候，如果先抗住了，就等业务占领了市场，站住了用户，到了项目进度慢下来之后，一些优化再开展起来，此时可以要求高可用、高性能、高并发等。</p><p>&nbsp;</p><p>“如果项目资源允许，一些稍微过度的优化和重构，个人认为是可以被接受的，保持团队的技术热情是不错的，但如果资源不允许，就要数着钱花，判断技术债务的合理性，如何更好的还债，是否真的到了非还不可，是否真的到了影响业务发展，需要与业务优先级一起看，业务错过一个时间窗就可能永远错过，有些技术债务还可以后期再还。”王辉总结道。</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://blog.visionarycto.com/p/my-20-year-career-is-technical-debt\">https://blog.visionarycto.com/p/my-20-year-career-is-technical-debt</a>\"</p><p><a href=\"https://www.infoq.cn/article/xgP9W*MC6Svi9Zcqd5KX\">https://www.infoq.cn/article/xgP9W*MC6Svi9Zcqd5KX</a>\"</p><p><a href=\"https://news.ycombinator.com/item?id=35955336\">https://news.ycombinator.com/item?id=35955336</a>\"</p><p><a href=\"https://www.reddit.com/r/programming/comments/13ihrtx/my_20_year_career_is_technical_debt_or_deprecated/\">https://www.reddit.com/r/programming/comments/13ihrtx/my_20_year_career_is_technical_debt_or_deprecated/</a>\"</p>",
    "publish_time": "2023-08-14 14:29:06",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "OpenAI或于2024年底破产？大模型太烧钱了，快把OpenAI烧没了！",
    "url": "https://www.infoq.cn/article/datmEqVmS134ewFO7wel",
    "summary": "<p>作为让人工智能（AI）真正家喻户晓的传奇企业，OpenAI可能面临着新的严峻考验。根据《Analytics India Magazine》报道，如果Sam Altman执掌的这家公司继续以目前的速度烧钱，那么最快到2024年底就可能宣告破产。</p><p>&nbsp;</p><p>《Analytics India Magazine》指出，单是运行AI服务<a href=\"https://www.infoq.cn/article/bQHRqFcQ1TlJCqHuczGR\">ChatGPT</a>\"一项，每天就要花掉OpenAI公司近70万美元。尽管Altman一直努力推动GPT-3.5和GPT-4转为收益，但OpenAI仍远未能达到收支平衡，至于走向盈利更是天方夜谭。</p><p>&nbsp;</p><p>自去年发布之后，<a href=\"https://qcon.infoq.cn/202309/beijing/track/1560\">ChatGPT</a>\"已经成为有史以来增长最快的AI平台之一。但最近几个月，初期令人欣喜若狂的业绩数字已经停止增长，进一步削弱了该公司创造可观收入的期望。</p><p>&nbsp;</p><p>当ChatGPT6月份的用户数量较5月份有所下降时，有人猜测可能是因为学生放假，检索信息动作有所停滞才导致的下降。另一方面，也可能是因为自从该公司为用户发布 ChatGPT API 以来，人们开始构建自己的机器人，而不是使用原来的产品。&nbsp;</p><p>&nbsp;</p><p>根据外媒SimilarWeb介绍，与今年6月的17亿用户相比，ChatGPT在7月的用户数量环比下降12%、目前为15亿。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/de/dedf60d961bc6cc0d2c28bc159dbf7dd.png\" /></p><p></p><h2>开源大模型的兴起，让OpenAI处境更加艰难</h2><p></p><p>&nbsp;</p><p>X（原Twitter）上的一位用户表示，ChatGPT无法产生收入的一大原因就是API（应用程序编程接口）正蚕食其利润。虽然很多企业禁止员工使用ChatGPT处理工作，但人们正使用API在不同的工作流程中运用大语言模型（LLM）。而所谓API，代表的正是让一款程序向其他程序提供服务的结构化方式。</p><p>&nbsp;</p><p>OpenAI 认为用户数量下降只是因为人们开始使用 API 来构建自己的产品，但外界很多人却不这么认为。</p><p>&nbsp;</p><p>外界不少声音认为，OpenAI产品受欢迎程度下降是从开源大模型模型的兴起开始的。Meta 的 Llama 2 与微软合作，允许人们将该模型用于商业目的。&nbsp;</p><p>&nbsp;</p><p>那么，人们为什么不选择易于修改的 <a href=\"https://ai.meta.com/llama/\">Llama 2</a>\"，而去选择OpenAI提供的付费、专有和受限版本呢？可以说，与GPT相比，Llama 2在某些用例中也要好得多。人工智能开发人员Santiago表示，“我已经与两家初创公司进行了交谈，他们正在从专有模型迁移到 Llama 2。”</p><p>&nbsp;</p><p>另外，值得注意的是，尽管首席执行官 <a href=\"https://www.infoq.cn/article/iUfTz6eQa2k8KNtxlW4M\">Sam Altman</a>\" 并不拥有 OpenAI 的股权，但该公司很久以前就从非营利组织转变为盈利组织。尽管Altman可能并不关心利润，但作为一家盈利公司OpenAI不得不关心利润率。</p><p></p><h2>目前尚无可行的上市路线</h2><p></p><p>&nbsp;</p><p>报道还补充称，对于<a href=\"https://www.infoq.cn/article/SsGgljWxPa8VsAIElksJ\">OpenAI</a>\"、Anthropic或者Inflection等任何领先的AI厂商来说，通过首轮公开募股（IPO）从股市上寻求资金注入仍然为时过早。Investopedia发布的报道指出，任何成功的IPO都至少需要保持10年运营、再加上1亿美元的收入作为前提。</p><p>&nbsp;</p><p>OpenAI之所以眼下还没有“爆雷”，主要得益于微软慷慨拿出的100亿美元投资。然而，考虑到用户规模的直线下降，该公司提出的2023年预计收入2亿美元、2024年预计收入10亿美元的目标已经变得过于乐观，甚至可以断言其亏损态势只会进一步恶化。而且自从推出ChatGPT聊天机器人以来，OpenAI的财政状况其实越来越差，今年5月的亏损额已经翻番达5.4亿美元。</p><p>&nbsp;</p><p>目前市场上缺乏充足的企业级GPU（图形处理单元）供应，大国之间的<a href=\"https://qcon.infoq.cn/202309/beijing/track/1562\">技术战</a>\"也加剧了OpenAI面临的困境。Altman曾多次提到，GPU资源的稀缺已经在阻碍该公司训练更多新模型。</p><p>&nbsp;</p><p>但OpenAI也并非就“无药可救”。OpenAI向付费版本的转变可能为他们带来了大量的金钱。预期收入的预测可能来自购买 API 和使用基于 GPT-4 的聊天机器人或其他产品（例如 DALL-E2）的人们。但这方面的财务数据仍然模糊。</p><p>&nbsp;</p><p>即便如此，如果这家以大模型为重点的公司进行首次公开​​募股，它可能会被更大的公司收购。至于员工，虽然很多人可能会离开OpenAI去加入竞争对手，但该公司仍在以丰厚的薪水招聘人员，甚至将办事处扩展到了伦敦。</p><p></p><h2>大模型太烧钱了！</h2><p></p><p>&nbsp;</p><p>众所周知，训练大模型所需的计算资源是非常巨大的，并且在大型模型上运行推理的计算成本也会很高。大模型需要专门的硬件和软件才能有效运行。企业可能需要投资昂贵的基础设施来处理大型语言模型的处理要求。有专家估计，GPT3 的培训成本可能在 400 万美元到 1000 万美元之间，甚至更多。</p><p>&nbsp;</p><p>训练人工智能模型需要大量数据，并且标记这些数据可能既耗时又昂贵。此外，获取数据的成本也越来越高。例如，一项研究发现，为机器学习创建高质量数据集的成本从每项任务1美元到100美元不等，具体取决于任务的复杂性和所需的专业知识水平。斯坦福大学的另一项研究发现，为深度学习标记单个图像数据集的成本可能高达每张图像 3.50 美元。OpenAI 的 GPT-3 训练数据集大小为 45 TB。这些数字表明，训练人工智能模型的成本（包括数据采集和标记）是一项重大投资。</p><p>&nbsp;</p><p>更重要的是，想要训练一款大模型，需要付出的成本并不仅限于硬件和数据。训练、微调和部署大型语言模型需要高度专业的技能，而组织的员工可能不具备这些技能。雇用这样的人可能会很昂贵，并进一步增加整体研发成本。此外，近年来，对人工智能和机器学习专业人才的需求大幅上升，导致市场上此类人才短缺。结果就是雇用和留住这些人才的成本大幅增加。根据LinkedIn的一份报告，人工智能专家职位是最热门的新兴职位之一，在美国每年的平均基本工资为13.6万美元。同一份报告还发现，过去四年对人工智能专家的需求每年增长 74%。</p><p>&nbsp;</p><p>据微软第二季度财报显示，<a href=\"https://www.infoq.cn/article/ljYBv7FS7UCtPpIlkMdx\">微软</a>\"在今年该季度的资本支出（主要用于购买硬件和软件）超过了107亿美元，较去年同期相比增长了23％，是公司历史上最高的季度资本支出。</p><p>&nbsp;</p><p><a href=\"https://www.infoq.cn/article/9wzrGiMTl8XClRgSfL9A\">微软</a>\"首席财务官Amy Hood告诉投资者，这个数字在接下来的四个季度中会进一步攀升。此外，谷歌首席财务官Ruth Porat也释放出了同样的信号，Porat称公司的资本支出将在2023年下半年和2024年增加，主要是用于购买服务器和AI研发上。</p><p>&nbsp;</p><p>财力雄厚如微软、谷歌，也被大模型“削掉了一层皮”，更别提OpenAI了。</p><p>&nbsp;</p><p><a href=\"https://www.infoq.cn/article/1UyH2okZUKWlbwby3dQV\">GPU </a>\"短缺更是让OpenAI雪上加霜。Altman 曾表示，市场上 GPU 的短缺导致该公司无法训练进一步的模型并对其进行改进。现在该公司已经在“ GPT-5&nbsp;”上申请了商标，很明显该公司想要对其进行培训。这反过来又导致 ChatGPT 输出质量的大幅下降。</p><p>&nbsp;</p><p>因此，如果 OpenAI 不能很快获得更多资金，该公司可能不得不在 2024 年底之前申请破产。到那时，我们将面对的局面可能是：大模型市场竞争越来越激烈，损失越来越大，用户越来越少，诉讼越来越多，大模型质量越来越差。</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.wionews.com/science/openai-may-go-bankrupt-by-end-of-2024-costs-700k-to-operate-chatgpt-daily-report-625016\">https://www.wionews.com/science/openai-may-go-bankrupt-by-end-of-2024-costs-700k-to-operate-chatgpt-daily-report-625016</a>\"</p><p></p><p><a href=\"https://analyticsindiamag.com/openai-might-go-bankrupt-by-the-end-of-2024/\">https://analyticsindiamag.com/openai-might-go-bankrupt-by-the-end-of-2024/</a>\"</p><p>&nbsp;</p>",
    "publish_time": "2023-08-14 15:24:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "美团前端技术专家张舒迪，确认担任QCon北京大前端融合提效专题出品人",
    "url": "https://www.infoq.cn/article/FqC2B7lRaBzYaeKYOAze",
    "summary": "<p>9 月 3 日 - 5 日，在 <a href=\"https://qcon.infoq.cn/202309/beijing/?utm_source=infoqweb&amp;utm_medium=teacheart&amp;utm_campaign=9&amp;utm_term=0814&amp;utm_content=zhangshudi\">QCon 全球软件开发大会（北京站）</a>\"，美团前端技术专家张舒迪将担任「大前端融合提效」的专题出品人。在此次专题中，你将了解到新时期涌现出的优秀框架工具以及开发模式。目前专题已确认以下演讲：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1c/1c34f4629dc23bf9223239a808595652.png\" /></p><p></p><p><a href=\"https://qcon.infoq.cn/202309/beijing/track/1564?utm_source=infoqweb&amp;utm_medium=teacheart&amp;utm_campaign=9&amp;utm_term=0814&amp;utm_content=zhangshudi\">张舒迪</a>\"，美团前端技术专家，致力于移动前端、中后台技术基建及在本地生活场景的业务落地，着力推进前端标准化、配置化、智能化相关方向建设，沉淀平台及系统配套能力。</p><p></p><p>相信张舒迪的到来，可以帮助提升此专题的质量，让你了解到新时期对大前端研发效率提出了新的挑战，以及本时期涌现出的优秀框架工具以及开发模式。</p><p></p><p>除上述专题外，QCon 北京还将围绕<a href=\"https://qcon.infoq.cn/202309/beijing/track/1553?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">异构计算</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1554?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">向量数据库</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1556?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">FinOps&nbsp;落地</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1558?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">业务安全技术</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1557?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">从&nbsp;BI&nbsp;到&nbsp;BI+AI，新计算范式下的大数据平台</a>\"、<a href=\"https://qcon.infoq.cn/202309/beijing/track/1559?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=9\">从&nbsp;MLOps&nbsp;到&nbsp;LLMOps</a>\" 等进行分享。</p><p></p><p>近 100 名讲师、近 30 个精彩专题、8 种交流活动，QCon 北京 2023，相约 9 月！现在购票，享 9 折特惠，立省 ¥880！咨询购票请联系 18514549229（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/33/33cbbbf20baa8b2a18db4f0681f159aa.jpeg\" /></p><p></p>",
    "publish_time": "2023-08-14 16:32:17",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]