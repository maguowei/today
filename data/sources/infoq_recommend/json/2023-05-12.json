[
  {
    "title": "QCon全球软件开发大会（广州站）即将落地，与你探索数据架构的最佳实践",
    "url": "https://www.infoq.cn/article/mbT9rW1kGydYgSeG3Dap",
    "summary": "<p>如何在物理和虚拟层面整合各个分散的领域和数据“孤岛”；如何使用混合多云平台来管理和处理数据；如何凭借计算和存储可扩展性，应对不断增长的数据量；如何在整个过程中融入安全性、可扩展性和适应能力；以及如何在数据提供者和使用者之间的价值链中实现数据集成、数据工程和数据治理自动化等等，都是数据据架构所关心的问题。</p><p>&nbsp;</p><p>在在 5月26-27日<a href=\"https://qcon.infoq.cn/2023/guangzhou/schedule\"> QCon全球软件开发大会（广州站）</a>\"上，我们策划了【现代数据架构】专题，</p><p>我们很荣幸邀请到了罗庆超，阿里云资深技术专家来担任专题出品人。他是阿里云对象存储负责人，他在企业存储和云存储领域拥有丰富的技术与产品经验，曾就职于世界 500 强以及知名跨国公司的存储团队，并作为海量存储首席架构师负责文件存储、对象存储以及下一代分布式云存储的架构设计和实现；</p><p>&nbsp;</p><p>于此同时，我们也邀请了多位专家来分享他们的技术实践，下面是详细介绍：</p><p>&nbsp;</p><p><a href=\"https://qcon.infoq.cn/2023/guangzhou/presentation/5224\">谢凯</a>\"，字节跳动基础架构研发工程师。他将介绍字节跳动如何通过 Iceberg 数据湖支持 EB 级机器学习样本存储，实现高性能特征读取和高效特征调研、特征工程加速模型迭代。您将了解字节跳动数据湖方向的前沿技术与成果，并了解 EB 级机器学习样本存储的最佳实践；</p><p>&nbsp;</p><p><a href=\"https://qcon.infoq.cn/2023/guangzhou/presentation/5269\">柯维鸿</a>\"，网易游戏资深技术专家。他将分享⽹易互娱大数据平台出海上云架构设计与实践的经验。您将了解网易基于公有云构建 Hadoop 高性能存储层、计算层、数据分层方案设计，并了解整个方案的落地中的难点所在、实施效果和成本优化情况；</p><p>&nbsp;</p><p><a href=\"https://qcon.infoq.cn/2023/guangzhou/presentation/5285\">周皓</a>\"，阿里云高级架构师。他将介绍阿里云数据湖 3.0 架构与实践。您将了解行业最新的数据湖架构与技术，并了解数据湖架构在 AI、游戏等领域的实践应用。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f9/f9c92740ba012906494b90ce8ef44051.png\" /></p><p></p><p>&nbsp;</p><p>更多精彩议题持续上线中...</p><p>&nbsp;</p><p>活动推荐：</p><p>&nbsp;</p><p>在5月26-27日，QCon全球软件开发大会（广州）站即将落地，在此峰会上，共有十二个专题，近五十余场分享。其中包括稳定性即生命线、编程语言实战、DevOps vs 平台工程、AGI 与 AIGC 落地、下一代软件架构、数据驱动业务、出海的思考、云成本优化、现代数据架构、AIGC浪潮下的效能智能化、新型数据库、大前端技术探索。欢迎与你一起交流，更多详细信息可扫描下方海报二维码了解。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/af/afc56e32706b051a6e0cd52cadb31550.jpeg\" /></p><p></p>",
    "publish_time": "2023-05-12 09:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Slack实时消息处理架构，更新、更快、更稳定",
    "url": "https://www.infoq.cn/article/9lp0pYfij3bUxmHDXkxl",
    "summary": "<p>Slack最近公布了它们是如何实现在全球范围内<a href=\"https://slack.engineering/real-time-messaging/\">每天发送数百万条实时消息的</a>\"。该公司提供了对其<a href=\"https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern\">Pub/Sub</a>\"架构的全面讲解，这个架构的设计目标就是管理大规模的实时消息。它强调了在不同时区和地区发送实时消息的独特挑战，以及Slack的工程师如何设计基础设施来处理这些挑战的。</p><p></p><p>Slack的高级软件工程师<a href=\"https://www.linkedin.com/in/sameera-thangudu/\">Sameera Thangudu</a>\"阐述了这种架构的重要性：</p><p></p><blockquote>我们的服务器要为每台主机上的数千万个通道以及数千万个连接的客户端提供服务，我们的系统要在500毫秒内将消息传递到世界各地。凭借当前架构的线性可扩展性，我们可以为更多客户提供服务。</blockquote><p></p><p></p><p>她表示，该公司会加强其架构，以服务更多的客户群。</p><p></p><p>该系统的后端由多个服务组成。通道服务器（Channel Server，CS）是有状态的内存服务器，持有通道的历史。这里会有一个一致性散列机制将每个CS映射到通道的一个子集中。在峰值时期，每个主机大约为1600万个通道提供服务。一致性哈希环管理器（consistent hash ring manager，CHARM）会管理CS的一致性哈希环，确保在20秒内替换掉不健康的CS。Consul会存储一致性哈希值的最新配置。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2023/04/real-time-messaging-slack/en/resources/2Slack%20-%20Consul-1681645825634.jpg\" /></p><p></p><p>图片来源：<a href=\"https://slack.engineering/real-time-messaging/\">https://slack.engineering/real-time-messaging/</a>\"</p><p></p><p>网关服务器（Gateway Server，GS），与CS类似，是有状态的内存服务器。它们维护用户信息和WebSocket通道订阅，并作为Slack客户端和CS之间的接口。GS会被部署到多个地理区域，以优化连接速度。管理服务器（Admin Server，AS）是无状态的内存服务器，它们是Webapp后端和CS之间的接口。最后，状态服务器（Presence Server，PS）会跟踪在线用户，支撑Slack客户端的绿色状态点（green presence dot）。</p><p></p><p>每个Slack客户端有一个到Slack服务器的持久性WebSocket连接，以接收实时事件来维护其状态。客户端需要通过几个步骤来搭建WebSocket连接，比如从Webapp后端获取用户令牌和WebSocket连接的设置信息。然后，客户端会初始化一个WebSocket连接到最近的边缘区域，GS获取用户信息并向客户端发送第一条消息。<a href=\"https://www.envoyproxy.io/\">Envoy</a>\"会平衡传入的流量并处理TLS终止。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2023/04/real-time-messaging-slack/en/resources/1Slack%20-%20Client%20WebSocket%20Setup-1681645825634.jpg\" /></p><p></p><p>客户端设置完成后，在通道中发送的每条消息都会广播至通道中所有在线的客户端。消息在发送至全球范围的每个订阅的GS之前，要经过Webapp API、AS和CS。每个收到消息的GS都会将消息发送至订阅该通道ID的客户端。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2023/04/real-time-messaging-slack/en/resources/1Slack%20-%20Journey%20of%20a%20Message-1681645825634.jpg\" /></p><p></p><p>除了聊天消息，实时改变客户端状态的另一种消息类型是事件。瞬时事件，比如用户在通道中进行输入，会遵循一个略有差异的流程，因为数据库不会持久化保存这些事件。下图说明了这个流程。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2023/04/real-time-messaging-slack/en/resources/1Slack%20-%20Transient%20Event%20Flow-1681645825634.jpg\" /></p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/04/real-time-messaging-slack/\">Real-Time Messaging Architecture at Slack</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/hhh8OGLNbsz121H43Df4\">Slack工程师如何解决最常见的移动开发痛点</a>\"</p><p><a href=\"https://www.infoq.cn/article/Pwkm3Ro1IqSzM3wLXvMS\">Zoom和Slack的第二曲线</a>\"</p>",
    "publish_time": "2023-05-12 10:37:19",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "马斯克宣布将卸任推特CEO：已找到接班人，自己要去当CTO",
    "url": "https://www.infoq.cn/article/quI8GxF7WJOsOSR4FTlm",
    "summary": "<p>当地时间5月11日，马斯克在特推上发文宣布，他将在6个星期后正式卸任推特CEO一职，并且已经找到了一位女性接班人，自己将转到技术岗位。</p><p></p><p>马斯克在推文中写道：“很高兴地宣布，我为推特聘请了一位新的CEO。她将在6个星期后开始工作。”他没有透露新任CEO的名字，也没有提供有关此人工作经历的任何细节。</p><p></p><p>然而，《华尔街日报》援引消息来源报道称，NBC 环球公司的广告主管Linda Yaccarino正在就该职位进行谈判。</p><p><img src=\"https://static001.geekbang.org/infoq/b4/b436376cf1526859f44127f89cd8d7b4.png\" /></p><p>自去年 10 月收购公司以来，作为“推特掌门人”的马斯克一直处于混乱的管理状态，他表示他将成为推特的执行主席兼CTO，负责监督产品、软件和系统运营。</p><p></p><p>去年 12 月，马斯克在该平台上进行了一项<a href=\"https://www.cnn.com/2022/12/20/tech/elon-musk-twitter-ceo/index.html\">民意调查</a>\"，询问用户他是否应该辞去推特首席执行官一职，最终大多数用户投了赞成票。马斯克表示，他会遵守民意调查的结果，但后来又改口说，“一旦我发现有人愚蠢到可以接受这份工作，他就会交出这个角色！”&nbsp;</p><p></p><p>今年2 月，他<a href=\"https://www.cnn.com/2023/02/15/tech/musk-twitter-ceo/index.html\">重申</a>\"他计划在年底前找到替代者。</p><p></p><p>马斯克收购推特后对公司进行了大刀阔斧地改革，不仅“血洗”了管理成，还裁掉了大部分员工，甚至还允许被禁止的用户重新回到该平台上来，许多客户因担心推特的未来会受到影响而纷纷逃离，但马斯克一直在试图说服广告商们重新回到推特平台上来。</p><p></p><p>马斯克经营或参与包括特斯拉在内的许多其他公司——也面临特斯拉股东的批评，原因是股东们担心他被推特分散了注意力。</p><p></p><p>马斯克最近称，此前推特一度面临着破产风险，但逐渐“趋于收支平衡”。现在，公司新的CEO的任务是努力帮助这家陷入困境的公司扭亏为盈，并帮助马斯克收回用于收购该平台的 440 亿美元中的一部分。</p><p></p><p>即使马斯克准备辞去首席执行官一职，他仍可能控制着公司未来的发展方向。在 10 月接管公司后，马斯克辞退了高管团队并解散了董事会，他也就成为了该平台的CEO和唯一董事。</p>",
    "publish_time": "2023-05-12 11:09:49",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "因低薪、高强度工作感到被公司“虐待”，一程序员跳槽前炮制惊天数据窃取案，勒索上千万终获刑",
    "url": "https://www.infoq.cn/article/uvEDqIszV7cWFLuQkGHD",
    "summary": "<p></p><p></p><blockquote>该名工程师试图将这次黑客攻击解释成“未经批准的安全演习”。</blockquote><p></p><p></p><p>日前，一名前Ubiquiti工程师Nickolas Sharp在纽约法院承认自己窃取了数十GB机密数据并要求前雇主支付190万美元（约1320万元人民币）赎金，最终在要求被拒绝后愤然将数据公开。根据案情，院方决定对其判处六年徒刑。</p><p></p><p>Ubiquiti Networks(优比快科技有限公司，是一家于2003年在美国硅谷成立的高科技跨国公司（美国纳斯达克上市股票代码：UBNT）。公司主要为边远地区和新兴地区提供无线通讯产品。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/91/912fa04b3104dd2bc0620cf3f83a0b3c.png\" /></p><p></p><h2>一高级工程师盗窃数据，并向雇主勒索近200万美元</h2><p></p><p></p><p>彭博社报道称，Sharp向美国地方法官Katherine Polk Failla强调，这次网络攻击实际只是“未经批准的安全演习” ，目的是让Ubiquiti成为“对自身和客户而言都安全的地方”。</p><p></p><p>从法庭文件来看，Sharp声称，Ubiquiti公司 CEO Robert Pera不允许他“解决已经非常严重的安全问题”。Sharp告诉法官，他做出这些“愚蠢且过激的举动”完全为了修复这些安全漏洞。</p><p></p><p>但即使Sharp的出发点确实如此，法官Failla仍拒绝将此作为罪行的辩护理由，毕竟被告的电汇欺诈、故意入侵受保护计算机和向FBI说谎等行为很难做出合理的解释。</p><p></p><p>Failla法官认为，“即使在这种情况下，Sharp先生也无权扮演上帝的角色。”</p><p></p><p>美国纽约南区检察官Damian Williams也宣称，Sharp并非“网络安全义警”，而是“顽固的说谎者和数据大盗”，他“故意向法院说谎，坚称整个罪行只是一次出了偏差的安全演习。”</p><p></p><p>Williams坚持认为，Sharp做出了“几十个、甚至上百个犯罪决定”，还牵连无辜同事帮助自己“洗脱嫌疑”。Sharp在宣判前也已承认，这次网络攻击就是出于“经济利益”而策划。</p><p></p><p>因此在Williams看来，Sharp的行为似乎&nbsp;“单纯出于贪婪”和自负，理由是高强度工作和有限的薪酬让Sharp“感到自己被公司虐待”。</p><p></p><p>法庭文件显示，Ubiquiti公司投入了“远超150万美元的资金和数百小时的员工/咨询工时”，为的就是对Williams口中的“惊天”数据劫案施以补救。</p><p></p><p>但为了掩盖自己的罪行，Sharp通过一系列手段放大了公司损失——包括冒充举报人、编造虚假媒体报道，甚至联系美国和国外监管机构调查Ubiquiti是否存在故意淡化数据泄露的行为。法庭文件显示，在Sharp编造虚假报告的一天之内，Ubiquiti公司股价暴跌，市值损失一度超过40亿美元。</p><p></p><p>Ubiquiti公司和Sharp的辩护律师Matthew Myers均未就此事回应置评请求。</p><p></p><p>Williams曾向院方要求判处8至10年有期徒刑，理由是任何再短的刑期都会被公众理解为“轻判”。但从最终结果看，Sharp只需要入狱6年，并没有达到检方的最初目标。但在新闻稿中，Williams还是强调这一判决是对Sharp“无情罪行”的“严厉惩罚”。</p><p></p><p>Williams在量刑备忘录中写道，“他对雇主抱有不满，打算离开公司，意图在离开前勒索数百万美元并造成巨额损失。”</p><p></p><h2>因互联网短暂中断而被捕</h2><p></p><p></p><p>在量刑备忘录中，Williams提到Sharp坚持将此次网络攻击解释成安全演习，但这种说法与他2021年12月被捕时的情况有所冲突。</p><p></p><p>从当时的时间线来看，Sharp似乎在刻意隐瞒自己盗窃数据、向Ubiquiti勒索近200万美元的邪恶计划。</p><p></p><p>Sharp从2018年起担任Ubiquiti公司高级软件工程师兼云负责人，年薪25万美元，工作内容包括软件开发和云基础设施安全。</p><p></p><p>在工作约两年之后，Sharp于2020年7月购买了Surfshark的VPN服务，之后似乎开始考虑跳槽。2020年12月9日，他已经拿到新offer，次日开始用自己的Ubiquiti安全凭证尝试复制公司的数据仓库，同时配合Surfshark掩盖自己的真实IP地址。</p><p></p><p>不到两周后，Sharp的计划基本完成，只是期间发生了一点预料之外的“失误”。在复制了约155个数据仓库之后，偶发的互联网中断导致他的VPN暂时失效。</p><p></p><p>在互联网服务恢复之后，Ubiquiti在Sharp毫不知情的情况下记录了未及时得到VPN保护的家庭IP地址。</p><p></p><p>两天之后，Sharp大胆向一位高级网络安全员工咨询，称如果他向公司的HackerOne漏洞奖励计划提交漏洞，能不能同样拿到报酬。法庭文件认为此举非常可疑。</p><p></p><p>而且直到2020年12月26日，Sharp仍未意识到自己行动中的“瑕疵”，继续用Surfshark访问公司数据，在一天之内就删除了自己的活动证据，并修改记录使得他在攻击期间用到的凭证似乎是由其他同事所使用。</p><p></p><p>2020年12月28日，直到其他员工发现了攻击证据，Sharp才最终停止访问数据。Sharp似乎对自己的计划信心满满，甚至在2021年1月7日发出勒索邮件前加入了公司的攻击调查团队。</p><p></p><p>Ubiquiti决定不支付赎金，而是让FBI介入调查。不久之后，Sharp的失误被发现，FBI根据家庭IP盯上了他。期间，Sharp坚称攻击者登录他的家庭IP是想栽赃，并告诉同事“如果我在请求、下载和上传数据时还能留下自己的IP，那我也太废物了”，堪称“有史以来最差劲的掩饰行为”。 </p><p></p><p>在FBI分析Sharp的工作设备时，此人擦除并重置了自己在攻击中使用的笔记本电脑，但却偷偷把机器带回了家中。2021年3月，FBI在搜查中没收了作案设备。</p><p></p><p>在FBI开展搜查之后，Sharp开始冒充举报人，联系记者和监管机构谎称Ubiquiti的公开披露和对网络攻击的反应都不够充分。他说该公司存在客户欺骗，还故意淡化了违规事件的严重性，实际上此事已经引发“灾难性”后果。Williams在量型备忘录中认为，自始至终，Sharp都很清楚这次攻击是利用他自己的员工凭证完成的。</p><p></p><p>在Williams看来，“这绝不是针对开放漏洞的黑客攻击。Sharp是在利用公司合法委托给他的凭证来窃取数据，并尝试掩盖自己的行踪。”</p><p></p><p>“Sharp始终坚信自己的老练和狡猾能帮助他骗过他人、掩盖罪行。”</p><p></p><p>Sharp“提出的陈述”称他所犯下的罪行只是一次偏离轨道的安全演习，检方“严重怀疑”Sharp是否“真的在为自己的罪行承担责任”。</p><p></p><p>Williams在新闻稿中做出总结，“Nickolas Sharp每年领取近25万美元的报酬，负责帮助雇主保持安全。然而，他勒索雇主、妨碍执法、散布虚假新闻、伤害公司自身和投资方的利益。 Sharp如今因其无情罪行而面临着严厉惩罚。”</p><p></p><p>原文链接：</p><p></p><p><a href=\"https://arstechnica.com/tech-policy/2023/05/ex-ubiquiti-engineer-behind-breathtaking-data-theft-gets-6-year-prison-term/\">https://arstechnica.com/tech-policy/2023/05/ex-ubiquiti-engineer-behind-breathtaking-data-theft-gets-6-year-prison-term/</a>\"</p>",
    "publish_time": "2023-05-12 11:56:19",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "震惊！OPPO放弃芯片业务，传2000多名员工就地解散 | InfoQ 快讯",
    "url": "https://www.infoq.cn/article/6Q8UGcoPNC7mXczXm9xd",
    "summary": "<p>5月12日，据多家媒体报道，OPPO将终止旗下主打芯片设计能力ZEKU（哲库）的业务。</p><p>&nbsp;</p><p>来自职场平台脉脉的爆料显示，OPPO裁撤ZEKU整个芯片团队，2000多员工就地离职。有知情人士称，母公司因为战略决策，放弃芯片业务。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/55/55b65b4a0cb7c90c63b452215dd87def.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6b/6bddbb4a74d18097d1fca2d7ea869485.jpeg\" /></p><p>针对此传闻，OPPO回应21世纪经济报道称：面对全球经济、手机市场的不确定性，经过慎重考虑，公司决定终止ZEKU业务。“这是一个艰难的决定，我们会妥善处理相关事宜，并将一如既往做好产品，持续创造价值。谢谢各位朋友的关心与支持。”</p><p>&nbsp;</p><p>资料显示，哲库科技（上海）有限公司成立于2019年8月，哲库科技（北京）有限公司成立于2019年11月，哲库科技（广东）有限公司成立于2020年8月，法定代表人均为OPPO公司CTO刘君。</p><p>&nbsp;</p><p>据悉，ZEKU的产品线包括核心应用处理器、短距通信、5G Modem、射频、ISP和电源管理芯片等。</p><p>&nbsp;</p><p>对于这一消息，小米公关部总经理王化在微博发表评论称，“确实不容易！尤其是在最近这几年，我们总能见证历史。”</p><p></p><p>了解更多：</p><p></p><p><a href=\"https://www.infoq.cn/article/kBGBvfwe4l0Dcyi85YB3\">OPPO发布首颗自研NPU芯片：历时3年研发，算力比肩苹果</a>\"</p><p></p><p><a href=\"https://infoqadmin.geekbang.org/#/deplodManage\">OPPO 造芯计划加速，到处“挖人” </a>\"</p><p></p>",
    "publish_time": "2023-05-12 13:14:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "“TypeScript不值得！”前端框架Svelte作者宣布重构代码，反向迁移到JavaScript引争议",
    "url": "https://www.infoq.cn/article/dDXbcLHT7teNYSPL3sm7",
    "summary": "<p></p><blockquote>前端框架 Svelte 作者 Rich Harris：“我太老了，不能再胡闹了”。</blockquote><p></p><p>&nbsp;</p><p>作为 JavaScript 的超集，<a href=\"https://www.infoq.cn/article/wyGETHGV7BlRRkhIzcIF\">TypeScript</a>\" 自发布以来深受开发者喜爱，从 JavaScript 迁移到 TypeScript 也一度成为一种趋势。</p><p>&nbsp;</p><p>前段时间，State of JavaScript 对近 40000 名 Web 开发人员进行调查，在回答有关 JavaScript 编程风格问题的人中，TypeScript 的使用率高达 98.9%。其中，20.7% 的受访者仅使用 TypeScript 编写代码，而仅使用 JavaScript 的受访者比例为 8.2%。尽管 TypeScript 可以编译成 JavaScript，但对于许多开发人员来说，TypeScript 仍是优先选项。有声音甚至认为，“TypeScript 正在慢慢吞噬前端开发人员的世界”。</p><p>&nbsp;</p><p>但另一个有趣的趋势是，一些开发者正在“反向操作”——从 TypeScript 迁移到 JavaScript。</p><p></p><h2>Svelte计划重构代码：从TypeScript切换到JavaScript</h2><p></p><p>&nbsp;</p><p>今年 3 月，<a href=\"https://www.infoq.cn/article/F1F3Q7Ptb1jM2ptmGbOG\">前端框架 Svelte</a>\" 作者 Rich Harris 在接受 The New Stack 采访时表示，Svelte 的第一个主要修订工作正在进行中，目前，团队正在将底层代码从 TypeScript 切换到 JavaScript。Rich Harris 认为，这一更新将使团队能够在今年晚些时候为 Svelte 5 融入“伟大的想法”。</p><p>&nbsp;</p><p>作为一个在 2019 年才诞生的新兴框架，Svelte 发布之初的一大痛点就是不支持 TypeScript。2020 年 7 月，Svelte 终于加入了 TypeScript 支持。如今 3 年不到，就要从 TypeScript 切换到 JavaScript？</p><p>&nbsp;</p><p>消息一出，不少网友跑去 Twitter 求证，Rich Harris 当即给出了肯定的回复，并表示“原生支持 TypeScript 是很棒的选择，直到你有了 TypeScript 的依赖分布，那时它就变成了一个加载的 footgun。我们欢迎其他人去胡闹，但我太老了，不能再胡闹了”。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0d/0dbf16cb422f96ec552b533425dcf6e2.png\" /></p><p></p><p>5 月 9 日，Svelte 团队发布了一个名为 TS to JSDoc Conversion 的 PR，根据描述，Svelte 团队将会从 TypeScript 迁移到 JSDoc。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ce/ce83f919c40ea416bc7d0e61b5348a41.png\" /></p><p></p><p>该举动迅速引发网友激烈讨论。有用户提问“为什么要这么变？我一直在到处搜相关的问题和讨论，但找不到答案。”</p><p>&nbsp;</p><p>至于背后的原因，其实 Rich Harris 在上个月接受采访时就已作出回答。Rich Harris 认为 TypeScript 对开发库来说“不值得”，团队正转向 JavaScript 和 JSDoc。Rich Harris 在采访中提到：“我们已经决定，在 Svelte 核心代码库中完成从 TypeScript 到 JavaScript 的迁移。原因比较复杂，所以我一直没能做充分解释。”</p><p>&nbsp;</p><p>Rich Harris 表示：“我的观点是，类型确实很棒，但 TypeScript 有点麻烦……一旦用上了.ts文件，就必须同时使用支持它的工具……所以我逐渐觉得，使用 TypeScript 这样的非标语言并不值得。于是，我们开始将所有类型都放入 JSDoc 注释，这样既保证了类型安全，又回避了缺点。毕竟这只是 JavaScript，所有内容都在注释当中，只要运行代码就行。我们在 Sveltekit 代码中就是这么做的，效果非常好。所以对于 Svelte 4.0，我们也将采取同样的思路、借此加快开发速度。”</p><p>&nbsp;</p><p>Svelte 并不是第一个放弃 TypeScript 的社区。2020 年，<a href=\"https://www.infoq.cn/article/juXB8EaoJrlLx4vB7ttD\">Deno </a>\"完成了内部代码从 TypeScript 到 JavaScript 的迁移，以减少构建时间，生成高性能代码。最近，有消息称 Deno 也在考虑在内部切换到 vanilla JS。</p><p>&nbsp;</p><p>在相关设计文档中，“问题”部分展示了 Deno 迁移的原因：</p><p>&nbsp;</p><p></p><blockquote>在 cli/js 中更改文件时的增量编译时间需要几分钟，修改起来非常缓慢且痛苦。我们在 cli/js 中使用的打字稿组织/结构正在产生运行时性能问题。例如，我们最近意识到我们无法让 TS 生成一个名为“Header”的类，因为它隐藏了我们 d.ts 文件中的声明。因此，我们将类命名为“HeaderImpl”并将其分配给“window.Header”。但这会产生“Header.name”具有错误值的问题。所以我们被迫添加不必要的运行时代码&nbsp;&nbsp; Object.defineProperty(HeaderImpl, \"name\", { value: \"Header\" });&nbsp;修复“Header.name”。谁知道这是否会将 Header 踢出 V8 中的某些优化路径。最佳的做法是生成“class Header { … }”，任何不足都表明设计中存在根本缺陷。&nbsp;TypeScript 应该可以帮助我们组织代码，但有人可能会声称它具有相反的效果。例如，我们有两个独立的 Body 类<a href=\"https://github.com/denoland/deno/issues/4748\">https://github.com/denoland/deno/issues/4748</a>\"。由于生成运行时代码涉及的复杂性，因此很难了解这一点。理想情况下，我们会有一个系统，其中两个 Body 类显然是错误的。&nbsp;我们的内部代码和运行时 TS 声明必须已经手动保持同步。TSC 没有帮助我们生成 d.ts 文件——当我们之前尝试时，它的开销和复杂性太大了。</blockquote><p></p><p></p><h2>从TypeScript转向JavaScript是一个好选择吗？</h2><p></p><p>&nbsp;</p><p>虽然 Svelte 不是最流行的 JavaScript 框架，但在开发者心目中却有着极高的地位。开发人员之所以选择 TypeScript 是因为他们发现强类型有助于减少错误，并通过代码补全和弹出帮助等功能改善代码编辑器内的开发体验。</p><p>&nbsp;</p><p>JSDoc 则是一种 API 文档工具，同样可用于类型检查。Visual Studio Code 已经内置 JSDoc 支持，开发者只需添加以下内容：// @ts-check 至 JavaScript 文件开头即可。文档解释道，“当无法推断类型时，可以使用 JSDoc 注释进行指定。”此功能实际由 TypeScript 提供支持，所以 TypeScript 和 JSDoc 可以说是相互依赖。</p><p>&nbsp;</p><p>但一个容易被忽略的细微差别是，Rich Harris 指的主要是库开发场景下的 TypeScript。如果大家正在构建应用程序，那么实在没必要转向 JSDoc。“这就没必要了，因为在构建应用程序的过程中，大家无论如何都需要构建的步骤。应用开发的重点在于优化代码、控制它的体量，并把一切都捆绑起来。但如果是想构建一个库，那我强烈建议改用 JSDoc。”</p><p>&nbsp;</p><p>虽然 Rich Harris 解释了团队从 TypeScript 转向 JavaScript 和 JSDoc 的理由，但面对强势提升的 TypeScript 普及度，Rich Harris 的决策似乎显得有点“非主流”，在 Hacker News 上也引发了许多网友讨论。</p><p>&nbsp;</p><p>Rich Harris 本人也在 Hacker News 上回复道“没想到一个内部重构 PR 能在 Hacker News 上排名第一”，Rich Harris 还进一步介绍了迁移背景，以免大家面对变动胡猜乱想。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b6/b621c776b684407127034948562646e4.png\" /></p><p></p><p>Rich Harris 表示，“如果你是 TypeScript 的铁杆批评者，认为我们脱 TS 入 JS 的做法证明了你的观点……抱歉要让你失望了。但如果你是 TypeScript 的狂热拥护者，觉得我们脱离 TS 就是背叛了精神信仰……你同样会失望”。</p><p>&nbsp;</p><p>Rich Harris 补充道，首先，Svelte 不会放弃类型安全，只是决定将类型声明从 .ts 文件转向带有 JSDoc 注释的 .js 文件。作为 Svelte 用户，这不会影响大家在 Svelte 中使用 TypeScript 的能力——从 Svelte 导出的函数，仍拥有大家所熟悉的各种 TypeScript优点（类型检查、智能许可、内联文档等）。Svelte 对 TypeScript 的支持承诺，比以往任何时候都更加坚定（具体示例请参阅<a href=\"https://svelte.dev/blog/zero-config-type-safety\">https://svelte.dev/blog/zero-config-type-safety</a>\"）。</p><p>&nbsp;</p><p>此外，Svelte 用户基本感受不到任何变化。有限的区别就是包体积更小了（不需要传递巨大的 sourcemap 之类），还可以通过 cmd-clicking 使用“Svelte ”及其子包导入的函数来调试框架（它提供的不是无用的类型声明，而是引向实际源代码，开发者可以直接在「node_modules」中编辑并查看实际变化）。</p><p>&nbsp;</p><p>Rich Harris 表示，希望此举能显著降低框架的贡献参与门槛，现在开发者：1）不需要理解如何链入 repo；2）不必在监视模式下运行构建流程；3）不需要为了观察 source 和 dist 代码间的变更而理解其映射关系。</p><p>&nbsp;</p><p>Rich Harris 认为，这次调整将使 Svelte 的用户和贡献者受益，同时也给项目团队减轻负担。团队经常需要针对沙箱测试对源代码做修改，新的工作流要比以往的 build 步骤好很多。体验过 TypeScript 工具那参差不齐质量的朋友肯定都为此头痛过，这次的迁移也帮团队回避了此类问题。相对而言，最大的缺点就是在 JSDoc 中编写类型确实不像在 TypeScript 中那么舒服。这个缺点虽然相对可以接受，但团队内仍然存在争议，当前网上的激烈争论也主要来自这个角度。</p><p>&nbsp;</p><p>“总而言之，我们的迁移决定基于实际需求，而绝不是什么立场问题。长期以来，我们一直以求真务实的态度构建 SvelteKit（反而是在 Svelte 那边更多追求理想主义），毕竟在这边提高生产力才是硬道理。”Rich Harris 总结道。</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://devclass.com/2023/05/11/typescript-is-not-worth-it-for-developing-libraries-says-svelte-author-as-team-switches-to-javascript-and-jsdoc/\">https://devclass.com/2023/05/11/typescript-is-not-worth-it-for-developing-libraries-says-svelte-author-as-team-switches-to-javascript-and-jsdoc/</a>\"</p><p><a href=\"https://news.ycombinator.com/item?id=35892250\">https://news.ycombinator.com/item?id=35892250</a>\"</p><p><a href=\"https://gomakethings.com/ditching-typescript-for-javascript/\">https://gomakethings.com/ditching-typescript-for-javascript/</a>\"</p>",
    "publish_time": "2023-05-12 14:48:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]