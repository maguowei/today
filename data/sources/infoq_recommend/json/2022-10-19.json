[
  {
    "title": "Spring Boot 3将于2022年11月发布，延迟了对Java模块系统的支持",
    "url": "https://www.infoq.cn/article/5VMP2p3hLyEKpYIILxLr",
    "summary": "<p>在2022 JAX伦敦会议上，来自Spring的高级首席软件工程师Oliver Drotbohm做了一个非常及时的演讲，题目为<a href=\"https://jaxlondon.com/java-core-jvm-languages/spring-boot-3-and-spring-framework-6-a-new-generation\">Spring Boot 3 and Spring Framework 6 – A New Generation</a>\"。Drotbohm分享了Spring Framework 6和Spring Boot 3的预计发布日期，也就是会在2022年的11月底。他还指出，<a href=\"https://www.infoq.com/news/2022/09/spring-boot-migrator/\">最近发布</a>\"的Spring Boot Migrator项目能够将Spring Boot 2.7应用迁移至3.0版本，并能将Spring Boot 2.6应用迁移至2.7版本。迁移至Spring Boot 3是必要的，因为Spring Framework 6使用了Jakarta EE 9，支持jakarta.*<a href=\"https://www.infoq.com/news/2020/10/the-road-to-jakartaee-9/\">包命名空间</a>\"。</p><p></p><p>Drothbohm重申了这些版本的其他支柱性特性，包括使用JDK 17作为新的基线、对Spring Boot中<a href=\"https://www.infoq.com/news/2020/10/the-road-to-jakartaee-9/\">基于GraalVM实现原生Java</a>\"的开箱即用支持，以及基于Micrometer的内置可观测性。SpringOne计划于2022年12月6日至8日举行，该会议将会是成为Spring Framework 6和Spring Boot 3的发布平台。</p><p></p><p>Drotbohm没有讨论在Spring Framework 6中对Java Platform Module System（JPMS）的支持，<a href=\"https://www.infoq.com/news/2021/09/spring-6-spring-boot-3-overhaul\">去年InfoQ曾经首次报道过这个问题</a>\"。他随后向InfoQ证实，Spring Framework 6.0不会提供对JPMS的完整支持，但可能会在后续版本中实现：</p><p></p><p></p><blockquote>Spring Framework 6.0密切关注AOT和GraalVM原生镜像，以优化基于Spring的应用的部署。同时，我们的模块系统计划尚无法构建迁移至完整的JPMS模块描述符。在过去一年中，很少有人提出这样的要求。着眼未来，从长远来看，对应用/框架级别的模块来讲，基于jlink的模块约束方式可能会被基于GraalVM风格的独立可达性分析所取代。也就是说，&nbsp;<a href=\"https://www.infoq.com/news/2022/06/project-leyden-delays-aot\">OpenJDK的Leyden项目</a>\"旨在为其标准化的静态镜像方式重用模块系统的概念和工具，所以对于Spring Framework 6.x来说，更深入的模块系统调整依然是我们长期技术战略的一部分。</blockquote><p></p><p></p><p>作为目前的生产版本，Spring Framework 5.3和Spring Boot 2.7将会获得免费支持，直到2023年5月，在此之后，会提供扩展的商业支持，直到2025年8月。即将推出的Spring Framework 6和Spring Boot 3版本将获得一年的免费支持，直到2023年11月，然后是扩展商业支持，直到2025年2月。</p><p></p><p>Spring Boot 3一年的支持周期保持了与最近的Spring Boot版本相一致。VMware明确表示，Spring Framework用户应该更快升级到6.x版本，这一点InfoQ在去年曾经报道过：</p><p></p><p></p><blockquote>我们强烈鼓励Spring Framework 6用户加入我们的功能发布流，另外，不要期望长期停留在6.0.x版本上，而是希望让6.1、6.2等版本的升级成为常规使用模式的一部分。</blockquote><p></p><p></p><p>其他Java框架的升级速度甚至更快。例如，Quarkus大约每月发布一次<a href=\"https://quarkus.io/blog/tag/release/\">功能更新</a>\"，中间还有缺陷修复版本。</p><p></p><p>Drotbohm还对Spring Framework 6和Spring Boot 3的可观测性提出了新的见解。尽管Spring套件项目会基于Micrometer，但对于开发者来说，可观测性将更多地体现在基础设施层面（如对REST控制器的请求）。</p><p></p><p>Spring目前包括22个项目，支持大量的第三方库。Drotbohm指出，Spring Framework 6和Spring Boot 3在发布时可能不会提供对所有项目和库的原生Java与可观测性支持。未来的Spring版本将对此进行完善。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/10/spring-boot-3-jax-london/\">Spring Boot 3 Ships November 2022, Delays Java Module Support</a>\"</p>",
    "publish_time": "2022-10-19 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "倪光南：用好开源模式，聚焦RISC-V架构",
    "url": "https://www.infoq.cn/article/fAulr19Ues2ECIAEidgC",
    "summary": "<p>近日，中国工程院院士倪光南在《数字世界专刊》撰文指出，一直以来，我国芯片产业在“主流CPU”架构上受制于人，整体生态上与国际先进水平还有很大差距。<a href=\"https://www.infoq.cn/article/x4JNvgz3R55boVWr3ujy\">RISC-V</a>\"精简指令集采用开源模式、其架构先进、易于定制、生态也尚处于发展初期，这为我国万物智联时代掌握芯片产业发展主动权提供了发展机会。</p><p>&nbsp;</p><p>倪光南建议应积极抓住时代机遇，以全球视野谋划我国芯片产业发展，聚焦开源RISC-V架构，统筹规划、集中力量面向我国“主流CPU”领域，筑牢基础软件根基，加速推进其生态建设，推动全世界芯片产业新格局的到来。</p><p>&nbsp;</p><p>在文章中，倪光南分析了目前国内CPU主流技术路线以及开源RISC-V架构的优势。</p><p>&nbsp;</p><p>据其介绍，目前国内市场上存在六七种<a href=\"https://xie.infoq.cn/article/0ef1d7de419b71aa01e25ba03\">CPU架构</a>\"，但这并非长久之计。因为CPU架构具有很强的垄断性，长期以来，占据世界芯片主要市场份额的CPU（或称为“主流CPU”）只有<a href=\"https://www.infoq.cn/article/JjUNd4N551OmoQiV7zM2\">x86</a>\"和ARM两种架构，这种情况大概率还会持续下去。由此可见，目前多种国产CPU架构并存，未来可能会造成资源分散，低水平重复。如果不能及时改变这种状况，若干年后，中国将缺乏能在全球市场上与x86和ARM两家竞争的CPU架构，从而在“主流CPU”方面仍将受制于人。为此，我国发展芯片产业时，要从全球视野谋划和思考国产CPU架构发展的技术路线。</p><p>&nbsp;</p><p>倪光南表示，目前国内CPU技术路线大致有两种思路，值得商榷：</p><p>&nbsp;</p><p></p><blockquote>一种思路是“单打独斗”。“单打独斗”即主要依托本国架构进行发展。其好处是较易实现自主可控，并能满足国内若干应用领域的需求。但要在世界市场上与上述“主流CPU”相抗衡，我国CPU在技术方面，特别是在生态方面还存在着很大的差距，而这种状况不是凭主观愿望在短时期里所能改变的。作为对比，即使是新兴的、挟有众多后发优势的RISC-V架构也历经十多年“折腾”，才取得今天全球范围的繁荣发展。很难设想，一些有历史包袱的、较老的CPU，还能有足够时间和空间，从“主流CPU”激烈竞争的夹缝中脱颖而出。&nbsp;另一种思路是“从众跟随”。即跟着外国的架构走。国内也有企业在基于x86、ARM、Power等外国掌控的架构进行发展，其好处是可以利用已经成熟的生态，但坏处是很难实现自主可控。当前国际环境错综复杂，归根到底随时可能面临ISA（指令集架构）知识产权的制约，难以规避各种制裁和限制。</blockquote><p></p><p>&nbsp;</p><p>倪光南认为，开源RISV-V的出现顺应未来新一代信息技术的需求。RISC-V精简指令集采用开源模式、其架构先进、易于定制、人才培养便捷，研发周期短，大大降低芯片产业门槛，这些都使其后续发展具备强大生命力。</p><p>&nbsp;</p><p>最后，倪光南强调，我国要从战略上用好开源模式，聚焦开源RISC-V架构，充分发挥我国超大规模市场优势和人才优势，统筹推进RISC-V生态建设，与世界开源同行协同努力，最终使RISC-V架构能在世界CPU市场与x86和ARM三足鼎立，通过增加对开源社区贡献的方式逐步将“主流CPU”发展自主权牢牢掌握在自己手中，同时为世界科技创新贡献中国智慧和中国方案。</p>",
    "publish_time": "2022-10-19 10:14:55",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "观远CTO张进：追求极致，用数据驱动决策变革",
    "url": "https://www.infoq.cn/article/rJgB03Bauu187xi1yubJ",
    "summary": "<p>张进，观远数据联合创始人 &amp;CTO，<a href=\"https://tgo.infoq.cn/join\">TGO 鲲鹏会</a>\" (杭州）学员，拥有十余年数据分析与商业智能行业经验；</p><p>法国 UTC 数据挖掘硕士，曾就职于全球顶尖 BI 公司微策略（MicroStrategy）及蚂蚁金服集团旗下公司支付宝，2016 年作为联合创始人创立观远数据，负责产品研发。</p><p></p><p>1996 年，Gartner 机构对 BI-Business Intelligence（商务智能）重新定义，让<a href=\"https://xie.infoq.cn/article/3a5bb4f98ee38502d2d45cd0a\"> BI </a>\"技术步入全面商用时代。近年来，数字经济加速深化，企业的数字化转型进入深水区。在此背景下,BI 产品作为激活数据资产的便捷工具开始受到广泛关注。</p><p></p><p>2016 年，算法、<a href=\"https://www.infoq.cn/video/Yxq6QiXCKgp4Q4l8vL7O\">算力</a>\"、大数据浪潮三合一，形成了确定性的技术变革。伴随着科技洪流，观远数据正式成立。提及当初的创业决定，张进坦言并没有过多犹豫。张进与观远 CEO 苏春园相识十余年，二人不仅是工作中伙伴，更是生活上的朋友。「Chase（苏春园）是我早年毕业后，乃至现在持续的 mentor，所以只要他决定创业，我义无反顾。」在公司中，苏春园负责公司战略方向的制定，就像一艘大船的总舵手，引领航向；张进作为 CTO 则会结合自己在产品和技术方面的思考与观察，给到决策建议。</p><p></p><p>回望六年，我国商业智能软件市场规模迅猛增长，BI 逐渐成为现代企业信息化、数字化转型中的重要组成部分与催化剂。观远数据的一站式智能分析平台也经历层层迭代，不断向全面化、系统化发展。作为行业亲历者，张进也始终坚持思考与总结的习惯。</p><p></p><p></p><h1>极致追求，洞察用户价值</h1><p></p><p></p><p>在近六年的创业历程中，张进保持着“流水不争先，争的是滔滔不绝”的心态。取得成就并不自傲，因为在他眼中，很多成就的取得是团队或客户给到的灵感，功劳属于大家。创业维艰，碰到挫折和挑战时，拓宽眼界与视角也能够提升心理阈值。「一两天的情绪低落很正常，但不要把自己击垮。我曾在许多经典书籍中看到前辈们的鲜活案例与方法，某些阶段势必会经历颠簸，因此也就少了几分焦虑，在坎坷中积蓄力量，尽快走出来，向前看。」</p><p></p><p>工作日趋繁忙，张进认为不存在所谓“work life balance”的状态，更重要的是把握好每段时间的质量。他保持着阅读和学习的习惯，并总结了自己的一套方法和规律。在他看来，最核心的一点在于不要盲目学习，要带着问题出发，进行主题阅读，系统归因。虽然行业和技术发展很快，但很多问题背后的本质和底层逻辑是亘古不变的。企业大都在关注未来世界可能会发生的变化，但在做整体战略设计时，往往需要关注未来 10 年、20 年，不变的是什么，这个“不变”才能成为公司的战略锚点。例如在数据分析 BI 领域，客户会不断追求效率更高的操作体验，在数据量很大的情况下持续快速响应，在高并发状态下实现存储和底层架构良好适配，维持高性能、高稳定。这在过去乃至未来几十年，都是始终不变的。</p><p></p><p>作为产品技术人，张进始终将乔布斯奉为自己的精神导师和学习的榜样，乔布斯对于极致用户体验的产品追求，也给了张进许多鼓舞与启发。谈及最近正在阅读的一本书《Build》，其作者正是乔布斯的工作伙伴——iPod 之父 Tony Fadell。书中的许多观点，包括如何构建好的团队、是否持续怀有打造极致产品的初心、产品思考策略与挑战等，都给张进带来了很大启发。</p><p></p><p>作为 CTO，张进主要负责产品创新和技术研发两大板块，包括产品方向、市场策略，以及底层技术的使用和落地。他现在还保持着“走出去，和客户深入聊”的习惯，因为只有这样，才能真正知道客户想什么，要什么。创业之初，张进和苏春园共同拜访潜在客户，面对对方公司的 CEO 和业务高管，当时的“窘境”令张进记忆犹新。「客户提出的大多问题都是真实的场景和需求，当时我的认知里几乎只有技术相关，不知如何开口，所以只能坐在旁边点头微笑，心里干着急。所以结束后我也蛮沮丧，明明知道技术优势与特点，但真正碰到客户场景，却不能把自己的产品讲明白。」在 ToB 领域，采购负责人也许并不是真正使用产品的人，却要为产品买单，所以需要在交流中洞察企业的背后逻辑。此后，张进便抓住一切机会和客户交流，根据每次遇到的问题思考迭代，不断提升自己的表达和翻译技术的能力。</p><p></p><p>在观远，张进也提倡产品与技术人员多接触真实业务场景，不要闭门造车。「研究纯技术的时间比例要控制在 20% 以内，80% 的时间应该是主动跟客户交流。」张进认为，技术人应该以实现伟大的产品为目标，而不是抱着新技术自嗨。「最近在极客时间上看完了毕大师的访谈，他也提到了技术人最大的问题，就是比较容易陷入技术情怀。对于 ToB 领域，客户往往关注的是产品能否在成本最低的情况下解决所遇到的问题，而不是使用了哪些高新技术，所以本质一定要解决客户痛点。」</p><p></p><p></p><h1>大道至简，让业务用起来</h1><p></p><p></p><p>企业对数据驱动决策的需求促使了 BI 的诞生，支撑管理决策也就成了 BI 最核心的目的。人们对数据的需求层层递进，从数字本身，到可视化展现，再到交互式分析，接下来就要结合预测能力在若干种不同方案中进行权衡和取舍。</p><p></p><p>在传统 BI 时代，企业级数据更多是 IT 强管控，将汇总的数据制作成报表，层层下发给一线经理。这时巨大的挑战在于业务团队的逻辑和 IT 团队会大有不同，例如业务部门主要关注的同比、环比、MTD 等指标，IT 团队翻译成技术语言就是一个窗口函数。但数字背后是业务实际遇到的问题或者需要追踪的业务状况，所以二者之间会有隐形的知识鸿沟，数据仓库也无法满足不断变化的业务需求。这时面向业务的 BI 应运而生。业务用户可以自助加工数据，快速分析，过程中无需技术人员长期参与，大大缩短了业务用户与数据之间的距离。</p><p></p><p>发展至今，智能 BI 时代已来。从刚开始的专业人士操作的报表，到复杂度降低的适用于分析师的敏捷 BI，再到进一步拉低门槛的面向所有业务用户的智能 BI，都需要依靠强大的基础设施和底层技术。业务一线往往利用数据可以更好地解决业务问题，但无法投入大量时间学习面向分析师的复杂 BI 产品，因此易用性也正是观远的产品理念和优势之一。「在客户进行产品选型时，尽管是没有技术和分析师背景的业务人员，也能在半天内完全上手。这种快速的价值呈现，真正实现了让业务用起来，用数据赋能企业。」</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1f/1f6a0023323e9e4637220fb918f7a862.png\" /></p><p></p><p>中国的移动端渗透率居全球首位，Mobile BI 也是观远产品中的重要组成部分。传统的 Mobile BI 大多采用原生 APP 开发，周期较长；或用代码制作 HTML 页面形式嵌入，配置较复杂。观远数据识别到这个痛点后，做出了和龙头 OA（钉钉、企业微信、飞书） 融合的移动轻应用。利用拖拽式的方法快速制作移动数据应用，进而分发给广泛的一线业务用户。张进也分享道，在曾经的客户回访中，有位业务用户一天内制作并分发了 20 个移动轻应用，相比之前两周才能做一个应用，效率数倍提升，有效帮助各业务部门快速找到问题、解决问题。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7c/7c274018905239564ee08ead3a356f68.jpeg\" /></p><p></p><p>企业级架构是观远 BI 的第二大优势。云原生时代，产品背后的架构能否适配大数据基建，显得尤为重要。观远数据利用<a href=\"https://mp.weixin.qq.com/s?__biz=MzI5ODQ2MzI3NQ==&amp;mid=2247502489&amp;idx=1&amp;sn=099b6e0026d3af8135648dec3a0957d3&amp;chksm=eca7f3dddbd07acb6cc66bfa6097825af69dc726f2a616be28b02740f4c9e9b635dc36905b91&amp;scene=27#wechat_redirect\"> K8s</a>\"、容器化编排的整套体系，能够将 BI 融合到企业本身的底层基建体系内，解决复杂的企业问题。「观远一定是在这个层面做得最顺畅的服务商。」张进自信地表示。</p><p></p><p>场景化也是观远 BI 的优势之一。AI 是先进生产力，需要叠加某个行业或场景才能真正落地。例如零售消费领域的门店智能配补货，消费品领域的智能需求预测，银行业的 AI 增强化平衡计分卡等，和现实场景的强绑定，与 BI 相结合才能不断挖掘企业数据的价值。面向不同角色、不同业务关键场景的分析实践，能够帮助企业快速落地业务所需的数据应用，解决实际问题。</p><p></p><p>大势所趋，许多企业正在经历数字化转型的“爬坡阶段”。作为数字化服务企业，能够利用数字化产品贴合用户不同诉求，让产能效率更高，为企业持续赋能，是观远所关注的。在观远服务的客户中，一家水果零售企业的管理效率令张进很有感触。</p><p></p><p>「一款新品水果上市后，各门店销量数据实时回传，总部根据数据甄别，发现有一个门店销量很高。于是马上安排人员到店走访，发现他们果肉切口的露出比其他门店大了 30%，从视觉上就会提高顾客的购买欲。商品部则马上进行摆台 SOP 的迭代，从而使得所有门店的销量得到连带提升。」数据不会说谎，数字化会让业务由人力驱动转为数据驱动，使企业更高频地追踪优化点，从而实现降本增效。</p><p></p><p>在张进深耕 To B 市场多年的经验总结中，企业对于产品的选择往往是效果&gt;效率&gt;体验。企业是一个军队、一个营利性组织，要在市场上拼杀取得成果，盈利效果一定是放在首位，其次是产品帮助企业的运作效率提升，最后是和效果、效率等无关的 nice-to-have 体验。这也是 ToB 和 ToC 产品有较大区别的部分。</p><p></p><p>传统软件的售卖方式大多只卖产品、授权费和维保，但以 Salesforce 为首推出的订阅制方式已成为主流。把选择权交给客户，这就会倒逼软件公司不断迭代，秉承客户价值第一的理念，为科技的全生命旅程负责。所以观远数据建立了客户成功体系，用持续运营的思维关注企业，利用云巡检的方法，不仅关注 CPU 内存、负载、磁盘等技术指标数据，更关注行为数据，帮助企业发掘没有被很好利用的数据资产，使业务用户体会到产品价值，陪伴企业长期发展。</p><p></p><p>六年来，观远数据每年都会在进行产品的功能迭代，“Simplicity is the ultimate sophistication”。「不是每次更新都要叠加几十、上百个功能，更多的是对于同样的场景和客户痛点，有没有更便捷高效的解决方案。甚至在某个阶段我们会砍掉某些功能模块，做加法是容易的，做减法更难。」</p><p></p><p></p><h1>从数据中找答案</h1><p></p><p></p><p>虽然“啤酒尿布”的神话将 BI 送入主流视野，但从国际市场来看，其渗透率只有 30%，我国更是个位数。张进认为，如果能让 70%-80% 的业务由数据来决策，让关注数据成为工作习惯，就能真正实现赋能企业，让用户实现更高质量的决策与分析。「BI 只是眼下的符号或标签，我们还是要追随客户的价值和痛点，不断思考分析与决策链路中的潜在机会点，匹配需求的刚性与技术的成熟度。」</p><p></p><p>谈及 BI 行业未来的发展趋势与展望，张进认为，「BI 只是一个符号，企业的核心需求是分析与决策。所以未来的智能分析与决策平台会完整覆盖从战略层到运营层，打通数据决策全链路，观远正为之努力。」首先是决策助手，对于战略决策领域，在信息不完备、方向模糊的情况下，利用故事陈述、交互问答等方式辅助管理层进行决策。第二种场景是沉浸分析，在战术类决策领域，利用仿真测算、AI 增强分析等技术，在人机协同决策时可以让效率变得更高。最后，对于执行层面的决策，在信息完备、领域知识清晰的情况下，很多企业级决策则可以全部交由机器人完成，当然背后也需要图谱技术、推理引擎等支撑。</p><p></p><p>10 月 25-26 日，观远数据将举办主题为”让业务用起来“的智能决策峰会暨产品发布会，全新的“云上直播”模式，20+ 重磅嘉宾，2 天 4 场不间断持续输出深度干货内容。张进也将从行业经验及技术趋势角度带来分享，并正式发布智能分析平台 5.0 版本，进一步推进场景化，让企业共享数据价值与创新实践。</p><p></p><p>道阻且长，行则将至。怀着“追求极致用户体验，打造真正有价值的产品”初心的张进，致力于带领观远与 BI 行业共生，利用技术能力与深度洞察，实现价值增长。</p><p></p><p></p><h1>关于 TGO 鲲鹏会</h1><p></p><p></p><p>TGO 鲲鹏会是极客邦旗下科技领导者聚集和交流的组织，学员由 CTO、架构师、技术 VP、具有技术背景的 CEO 等组成，目前已经在北京、上海、深圳、广州、杭州、成都、硅谷、南京、台北、厦门、武汉、苏州等 12 个城市定期举办学习活动。</p><p>TGO 鲲鹏会采用了“学员共建”的组织形式，希望通过“共建、自治”的方式维护各城市的健康发展，为学员提供必要的服务，帮助学员个人更好地学习和成长，助力学员企业之间更好地合作与交流。加入 TGO 鲲鹏会，全方位提升自身价值，成为卓越科技领导者！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4c/4c5129d041d7023b2c328ccaa1b96277.png\" /></p><p></p>",
    "publish_time": "2022-10-19 11:48:07",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "探寻技术之美，云上如何自由构建",
    "url": "https://www.infoq.cn/article/sg5kFlsPyTzrCt2CXCEr",
    "summary": "<p>谈及技术，人们很少将其与美感联系在一起，而一旦这么做，神奇的事情就发生了......</p><p></p><p>最早在技术与美感之间建立连接的是《计算机程序设计艺术》一书的作者高德纳 (Donald Knuth)，他发现技术和艺术存在共同之处。他说：“计算机编程是一门艺术……一个潜意识地将自己视为艺术家的程序员会喜欢他所做的事情，并且会做得更好。”</p><p></p><p>在近期举办的“亚马逊云科技中国峰会”的 DEV DAY 上，我们再次领略了云时代的技术之美。作为技术构建的基础平台，计算机硬件与软件的发展历程也是通过抽象追求技术之美的历程。这其中包含了如何让开发变得更加简单和高效的内在逻辑，以及自由构建的要素和方法，相信能带给开发者们一些全新的启发。</p><p></p><p></p><h2>始于抽象，如何理解技术之美</h2><p></p><p></p><p>高德纳在《计算机程序设计艺术》中曾提到，程序员的心理特征主要是具备在不同的抽象层次之间转换的能力，从低层到高层，能看小的细节，也能看大的整体。可见，抽象是开发者需要具备的关键能力。</p><p>该如何定义抽象？UCCA 尤伦斯当代艺术中心副馆长、UCCA 集团艺术总监尤洋尝试用三个关键词去涵盖抽象。第一，上下文（Context），抽象源自某种渊源，离不开历史追溯的上下文；第二，技术（Technical），艺术家在创作抽象作品时候，如果关注科技，没有科学技术、计算机技术的支持，很难完成作品；第三，共构（Symbiosis），抽象离不开观众，在艺术家构思的路径之中，会影射作为观众的我们。</p><p></p><p>重新回到技术领域，不难发现艺术与技术有关抽象上的共通之处。<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247568591&amp;idx=2&amp;sn=ca14b392d884f73f7379e539e18c1d46&amp;chksm=fbeb7500cc9cfc16050268fbe68f2e29f722c83af6b70f24978f18f2f1cd8a26b2f70c9a5ce9&amp;scene=27#wechat_redirect\">编程语言</a>\"的发展就是通过不断抽象实现技术之美的有效例证。</p><p></p><p>八十年代，C 语言得到长足应用和发展，支持了大多数操作系统的编写，而操作系统是我们得以持续抽象的重要基础。九十年代，互联网日新月异，由于需要更高层次的抽象，大批围绕 Web 的解释性高级语言涌现。移动互联网时代，GO 语言、Rust 语言以及针对大数据、机器学习的一大批新语言出现，更简洁和更高效成为现阶段编程语言的目标。</p><p></p><p>不过本质上看，编程语言仍是开发者改变世界的表达方式，抽象让这种表达更加精准和具象。2008 年图灵奖得主 Barbara Liskov 提出，我们希望从一个抽象中得到的是一种机制，它允许表达相关的细节和抑制不相关的细节。在面向对象的编程理念成为共识后，Liskov 的研究涉足了网络计算，专注表达方式的抽象。此时的 Liskov 一定没有想到，表达对象本身即将经历翻天覆地的变化。</p><p></p><p></p><h2>云原生时代的开发革命，亚马逊云科技做对了什么？</h2><p></p><p></p><p>从局域网，到互联网，再到云时代。随着摩尔定律大行其道，产业浪潮一浪高过一浪，业务节奏越来越快，开发者表达的对象逐步变成了云上的基础设施。这时，复杂、繁琐、笨重，在更高的维度上再次涌现。</p><p></p><p></p><h4>建立更简单、更自由、更高效的云上世界</h4><p></p><p></p><p>2006 年 3 月 14 日，亚马逊云科技（Amazon Web Services）的第一款产品对象存储 Amazon S3应运而生，同年还发布了虚拟主机服务 Amazon EC2、和消息队列服务 SQS。这就把存储、计算、中间件抽象成为网络服务，以 API 的方式提供给开发者，通过全球分布式的架构，为开发者提供了按需获取资源的基础平台，这样的平台后来被称为“云”。</p><p></p><p>后来，亚马逊云科技通过不断对虚拟机、容器、无服务器抽象，简化底层复杂性，减少基础设施的感知和适配工作。</p><p></p><p>2011 年，亚马逊云科技发布 Amazon ElasticBeanstalk，实现了自动化部署负载均衡、虚拟机实例以及数据库实例，隐藏了底层集群的复杂度。随着软件的抽象层次不断提高，架构构建的方式也在发生很大的改变——容器化已经成为云端构建的主流。2014 年亚马逊云科技发布了容器服务&nbsp; Amazon ECS。当时，Kubernetes 还没有大行其道，亚马逊云科技选择自己构建框架来管理 Docker 容器；后来，Kubernetes 逐步成熟稳定，并成为很多客户管理容器的首选，亚马逊云科技拥抱开源社区，发布了托管的 Kubernetes 服务<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651031261&amp;idx=3&amp;sn=482ff41821695e946e4b21fb34608be3&amp;chksm=bdbe7e8e8ac9f7980ecd969fa9ab9cf6bcded26b7ad034168963f2afcb7516b882f83f8944d0&amp;scene=27#wechat_redirect\"> Amazon&nbsp; EKS</a>\"；2017年发布的Amazon Fargate更进一步，完全托管了运行容器集群的服务器节点，提供基于容器颗粒度的按需部署和自动扩展的能力，让用户关注的计算单元完全抽象到容器层级。</p><p></p><p>除了 Amazon ECS 的发布外，2014 年还有另一款服务的发布也引发了技术圈的无数关注，它就是 Amazon Lambda。事实证明，亚马逊云科技对 <a href=\"https://www.infoq.cn/article/MLKyYvB6dhjMeMB9WZtj\">Serverless </a>\"的投入及预判没有错。如今，无服务器计算已成为云原生时代的共识，大幅提升了云原生的技术美感。</p><p></p><p>Mobvista 技术副总裁 &amp; 首席架构师、亚马逊云科技 Data Hero 蔡超提到，他们在集团的游戏数据分析统计系统上选择迁移到了无服务器架构，利用 Amazon Lambda 简化了开发，提高了迭代速度，并将维护成本降低了 50% 。</p><p></p><p>经过 16 年的发展，亚马逊云科技的服务从 3 个增长到了 200 多个。在技术抽象和发展的历程中，蕴含着与艺术非常类似的逻辑——基于真实的需求进行构建。即使计算环境不断抽象，开发者依旧需要管理数据库、大数据、机器学习等诸多服务类别，解决资源生命周期各个环节的自动化。资源管理代码应运而生。</p><p></p><p>亚马逊云科技的服务都提供 Restful API。2011 年亚马逊云科技发布 Amazon CloudFormation，支持客户用声明格式的 JSON 代码来描述云上资源，后来又支持 YAML 格式。至 2019 年，亚马逊云科技陆续发布了命令行、IDE 工具、SDK 进一步抽象了 API 操作，让开发者可以使用更熟悉的 Shell 脚本、IDE 集成开发环境以及编程语言来管理云上资源，并重磅发布 Amazon CDK，让开发者可以使用命令式的编程方式去编写管理代码。去年，亚马逊云科技发布 Amazon Cloud Control API，让开发者采用自定义 API 的方式灵活管理亚马逊云科技和合作伙伴的第三方服务。值得一提的是，Amazon CDK 的出现如同面向对象在资源管理领域的重生，带来了巨大的效率提升，具有里程碑的意义。至此，对于云资源管理的编程友好达到全新的高度，而不断抽象的成就是技术之美在云资源管理旅程最好的体现。</p><p></p><p></p><h4>用技术之美成就自由构建</h4><p></p><p></p><p>云原生时代，亚马逊云科技通过不断抽象，探索出技术之美的实现路径。然而，技术之美在未来又该如何帮助开发者更自由、便捷地构建自己的业务系统呢？亚马逊云科技大中华区解决方案架构部总监代闻将其归结为架构典范之美、组件抽象之美、流程灵动之美三个方面。</p><p></p><p>关于架构之美，以亚马逊电商为例。2001 年之前，亚马逊电商采用的是单体式架构，在业务增长的过程中，单体式架构很快遇到瓶颈。2002 年亚马逊开始着手微服务架构改造，涉及技术、流程、组织等多个方面。截至 2020 年，亚马逊电商内部已有 10 万微服务运行。随着微服务的兴起，领域驱动设计驱动设计（Domain-Driven Design ）中相关的模块化服务设计方法论六边形架构得到了广泛的应用。在这个架构设计中任何一个服务的代码逻辑都面向特定领域，对外提供服务端接口。在去年的 re:Invent 上，亚马逊的 CTO Werner Vogels 也分享了亚马逊设计 API 的六条最佳实践。</p><p></p><p>API 永远存在永远不要破坏向后兼容性从客户场景出发，逆向工作创建具有显式有据可查故障模式的 API创建服务于明确目标的自描述 API不惜一切代价避免泄露实现细节</p><p></p><p>如今，云原生应用的架构充分利用按需交付、全球部署、弹性和更高级别的云服务，大大提高了开发人员的工作效率、业务敏捷性、可扩展性、可用性、资源利用率和成本优化。代闻认为，云原生是一个相对的概念，因为云服务本身就在不断演进中。在一个时间点上，如何选用合适的组件，就成为云原生架构落地最基础的一步。</p><p></p><p>亚马逊云科技经过多年发展，在虚拟机、容器、无服务器三个层面都提供了相应的服务支撑，在这三个抽象层次的计算能力也渗透到了各个服务类别中。如今，开发者不仅可以选择应用代码所在的运行环境的抽象层级，还可以根据业务场景选择需要调用的云资源的抽象层级，让不同抽象层级的应用代码和云服务彼此之间无任何阻碍地互相调用，从而真正实现自由构建。</p><p></p><p>有了好的架构、适合的组件，灵动的开发流程让应用得以顺利落地。代闻表示，在构建阶段，快速搭建和验证架构，快速交付 MVP 是非常重要的；治理阶段的关键在于，如果保持良好的可观测性，从而管理数据并且适时的应用安全策略；在应用落地之后，进入到持续的迭代阶段，自动化的部署、更多的组件服务化，以及运维的自动化和智能化转变为核心。在整个历程中，亚马逊云科技提供了一系列的服务和工具，帮助开发者灵活、动态地实现开发流程，让技术之美不止停留在探讨和设计阶段，而是贯穿应用的整个生命周期。</p><p></p><p></p><h2>面向未来，携手开发者共同成长</h2><p></p><p></p><p>技术抽象与自由构建让软件开发变得更加方便，开源让技术能力得以普及。如今的现代化应用程序中，我们大量地采用开源服务，亚马逊云科技近年来也在持续通过托管的开源服务加速企业在现代化应用程序上的构建和运营。</p><p></p><p>“我们开源的三大支柱实际上是来自于社区、代码和文化。本身亚马逊的这种文化实际上给了开源社区非常多的指导，我们的员工、用户，也不断地在社区里头去贡献出来他们自己的代码，把他们的一些经验和实践，变成了共享的资源，能够去加速其他客户的迭代和更新。”亚马逊云科技的现代化应用服务产品总监陈展凌表示。可见，开发者社区建设是亚马逊云科技一直以来非常关注的事情。</p><p></p><p>10 月 14 日的 DEV DAY 上，亚马逊云科技也上线了面向中国的亚马逊云科技开发者官网，定位世界级的开发者社区，为国内开发者链接全球资源，帮助国内开发者的内容走向全球。</p><p></p><p>那么，什么才是一个成功的开发者社区？在亚马逊云科技 Community Builder、Juniper 中国区创新事业部资深架构师范桂飓看来，开发者社区是一个有清晰定位、有客户画像、能够解决客户痛点需求的平台型产品，因此，一个成功的开发者社区就需要找准定位，在服务开发者的过程中具有“Serve it and deserve it”的精神。亚马逊云科技 User Group Leader、永乐拾光创始人李欣表示，一个成功的开发者社区是一个专业的、开放的、包容的，能够帮助开发者实现个人价值的平台。从开发者社区对于技术公司的价值维度，亚马逊云科技 Hero、SphereEx 联合创始人 &amp; CTO 潘娟认为，开发者社区是一个公司产品直接沟通开发者的重要渠道，社区内的良性反馈能够帮助公司厘清产品定位，建立技术品牌，帮助公司吸纳贤才。</p><p></p><p>行业发展早期，一些头部公司通过开发者社区的建设也推动了技术的落地。亚马逊云科技资深开发者运营专家郭悦认为，开发者社区的建设，让这些头部公司有了头雁效应，不仅担起了企业责任还提升了品牌形象。“一个技术公司，通过开发者社区，能够把产品与人，公司与人交流的这种行为，变成了人与人交流的一种行为，我觉得这会让一个技术公司看起来更有温度。”</p><p></p><p>一个重视开发者真正诉求的开发者社区才能拥有长久的生命力。那么，开发者社区怎么高效服务开发者？Zilliz 合伙人兼技术总监、LF AI &amp; Data 基金会技术咨询委员会成员栾小凡看来，首先要有很好的服务体验；其次要有足够多优质的内容，并能够帮助建立开发者之间的联系；最后要通过规则激励 UGC 内容的产生，让有潜力的开发者留在社区里，真正成为社区生态的一部分。潘娟则认为，本土化是开发者社区需要关注的事情之一。据她观察，国外的开发者更加注重自身开源经历的打造，将此看作自身的素质能力，国内开发者参与开源课题更多是兴趣使然。在潘娟看来，做好本土化的文化建设，能更加柔和地吸引开发者到社区当中。</p><p></p><p>亚马逊云科技中国开发者网站优先思考的正是本土化、全球性和开放性。其设计包含专栏、视频、问答、社区、活动、大赛六大核心板块，面向不同职业技能阶段的开发者设计不同的形式或内容呈现。一方面，亚马逊云科技全球的客户案例和开发者的分享，都将在亚马逊云科技开发者官网翻译分享给中国的开发者；另一方面，亚马逊云科技在官网上吸纳了很多海外技术大咖，加入社区进行本土化的内容创作。此外，亚马逊云科技鼓励开发者主动运营社区，希望通过双向互动让社区更加活跃、更加健康。毕竟，一个开源开放的社区，才会更有生命力。</p><p></p><p>开发者群体在亚马逊云科技眼中有着特殊的分量。DEV DAY 也始终以开发者为中心。今年是 DEV DAY 植根中国的第七年，亚马逊云科技创新地以技术之美为主题，带领大家探索云时代的开发规律，并分享前沿技术和云上最佳实践，帮助开发者更好地了解云计算，沉浸式地体验云计算技术的魅力。</p><p></p><p><a href=\"https://dev.amazoncloud.cn/\">亚马逊云科技中国开发者网站</a>\"</p>",
    "publish_time": "2022-10-19 13:50:01",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "只需10美元，AI就能“复活”已故亲人",
    "url": "https://www.infoq.cn/article/exy7ANYQwFEAixcJHrgK",
    "summary": "<p></p><blockquote>AI 让已故的亲人、朋友可以换种方式陪在自己身边，但，这真的是个好选择吗？</blockquote><p></p><p></p><p>去年，美国男子 Joshua Barbeau 用 AI “复活”已故未婚妻的故事感动了无数人，但这件事本身也伴随着不小的争议。</p><p></p><p>据英国《镜报》报道，2012 年，Barbeau 的未婚妻 Jessica Pereira 因肝病去世。8 年后，Barbeau 偶然发现了一个名为 Project December 的网站，该网站可以使用 AI 生成<a href=\"https://www.infoq.cn/article/an-interactive-history-of-chatbots\">聊天机器人</a>\"，用户只需上传一些旧短信样本，聊天机器人就能模仿其写作风格。</p><p></p><p>于是，思念亡故未婚妻过度的 Barbeau 提供了未婚妻的聊天记录和 Facebook 信息，并将机器人命名为未婚妻的名字“Jessica”，开始和其聊天。机器人能够精准地模仿 Jessica 的语气和风格，这让 Barbeau 觉得自己是真的在和已故未婚妻聊天。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/52/528ab5a10f4454093e4688eb1cbb2387.png\" /></p><p></p><p>这段历经十年但最终有缘无份的感情在 AI 上得以延续，一经报道感动了无数人，甚至有报道称环球电视已经买下这个故事，打算制作独家电视剧集。同时，也有越来越多的用户涌向 Project December 网站，期望模拟已故之人，打造属于自己的聊天机器人。</p><p></p><p>据了解，Project December 网站依托于 <a href=\"https://www.infoq.cn/article/mfxhTz8IAtav8CN4oYLR\">OpenAI </a>\"的 <a href=\"https://www.infoq.cn/article/9cb21vxX8tfDP3Kk6yqw\">GPT-3</a>\"，由独立游戏制作人 Jason Rohrer 创建。他原本打算让用户花上 5 美元来感受一下跟虚拟对象交谈是什么体验，在 Barbeau 的故事传开之前，他从来没想到人们会用 Project Decembe 来模拟已故之人。</p><p></p><p>同时，用 AI 模拟已故之人这件事本身也引发了巨大的争议，并引发了 OpenAI 的担忧。</p><p></p><p>OpenAI 方面认为 Project December 存在一定隐患：聊天机器人可能会被滥用或对人们造成伤害。对此，OpenAI 在去年与 Jason Rohrer 进行了视频会议，但效果并不理想。</p><p></p><h2>可以“复活”已故之人的Project December重新启动</h2><p></p><p></p><p>2021 年 9 月 1 日，OpenAI 给 Jason Rohrer 下了最终“判决”：“我们将在 9 月 2 日上午 10 点终止您的 APl 访问。”这意味着，Project December 网站将无法继续创建聊天机器人。</p><p></p><p>而近日，Project December 宣布重新启动，专门作为与逝者重新联络的工具。用户可以花 10 美元来创建聊天机器人，找回当初那种熟络的交流感觉。</p><p></p><p>Jason Rohrer 在采访中表示，“在听到 Barbeau 的故事之后，我发现Project December 社区中出现了大量同样的诉求，所以我决定为这样一个特定目标而服务。我想为大家打造更好的成果，希望他们能够从中得到所需的帮助。”“构建这样一种前沿、疯狂甚至颇有科幻色彩的东西确实非常有趣。作为创作者，这对我个人来说也很有吸引力。”</p><p></p><p>据了解，用户要想使用 Project December 为已故之人创建聊天机器人，需要填写一份关于想要模拟和交谈者的问卷，并提供对方的姓名、年龄和爱好，外加具体记忆和事实。Project December 会利用这些信息让整个对话更具个性，进而提升聊天机器人的可信度。</p><p></p><p>值得一提的是，由于 OpenAI 出于安全考虑关闭了 Jason Rohrer 的开发者账户，因此他没法继续使用 GPT-3 自然语言模型，而是采用了 Al21 Lab 语言模型支持。</p><p></p><h2>用 AI 模拟逝者，好坏参半</h2><p></p><p></p><p>事实上，用 AI 模拟逝者并不是什么新鲜事，早在 2017 年，微软就为一种利用 AI“复活”逝者的聊天机器人申请了专利。很多初创公司也已经在这一方向上发力，比如 Replika 和 HereAfter AI，前者是一款能够与人聊天的 AI 机器人，后者则记录人们的生活故事，并用这些故事创建一个嵌入智能音箱的人类“复制品”。</p><p></p><p>亚马逊的个人数字助手 Alexa 也能模仿人们的声音，在在今年夏季 re:MARS 大会上播放的一段视频中，有个孩子问：“Alexa，能像奶奶那样给我讲《绿野仙踪》的故事吗？”于是机器就开始以奶奶的语音语调讲起故事来。</p><p></p><p>此外，还有 AI 工具如 <a href=\"https://www.infoq.cn/article/XV44AZfQf8f5PJjMms4f\">Deep Nostalgia</a>\" 等会根据逝者过去的照片制作动画，让人物眨眼、微笑。</p><p></p><p>在技术上，用 AI 模拟逝者不是难事，但在伦理上，这种形式还存在一定的<a href=\"https://www.theregister.com/2022/10/15/would_you_pay_10_to/\">争议</a>\"。</p><p></p><p>比如，有人认为，让已故的人眨眼和微笑多少有点诡异。对此，照片软件 MyHeritage 在官方公告中写道，“有些人喜欢 Deep Nostalgia 的功能并沉醉于其中，也有些人觉得它令人毛骨悚然而且非常抗拒。事实上，结果确实可能引发争议，每个人都对这项技术有着自己的看法。但我们开发功能的初衷仅为缅怀前人，让自己能再次与他们对话。”</p><p></p><p>Alexa AI 首席科学家 Rohit Prasad 则表示，个性化技术是一种在人与机器之间建立信任的方法。在他看来，“很多人在新冠疫情期间失去了自己的挚爱”，这似乎是在暗指 Alexa 想用模仿已故亲人或好友的方式抚慰用户情感。</p><p></p><p>另一家总部位于洛杉矶的 StoryFile 公司，曾为一生推动大屠杀历史教育而奋斗的 Marina Smith 制作葬礼视频。在悼念者提问时，机器学习算法能从 Smith 预先录制好的视频中选择最适合的片段，让她如同在现场般与人们顺畅交谈。这种用算法重现逝者的作法看似癫狂怪异，但对于思想开放、勇于尝试的人们，却不失为一种有效的慰藉方式。</p><p></p><p>一位 Project December 用户就坦言，他在用该软件跟逝者交谈之前犹豫了很久，总觉得这事“有点犯忌讳”。但他发现，最终体验“非常治愈”。而且他的母亲前段时间刚刚被送进了临终关怀中心，不知道母亲去世后他是否会尝试跟模拟 AI 对话。</p><p></p><p>作为 Project December 的创建者，Jason Rohrer 也多次测试过 Project December，并将聊天机器人设置成自己熟悉的已故亲友，包括祖父母、阿姨和年幼时的钢琴老师。他说这让自己有机会重新感受他们、找回那段已经泛黄的记忆。</p><p></p><p>我们到底应该如何看待用 AI 模拟逝者？</p><p></p><p>对此，意大利都灵大学哲学家及专注于数字文化中的死亡问题的作家 Davide Sisto 表示，在某些方面，通过 AI 技术“复活”的虚拟数字人物只是人类历史上人们寻求与逝者保持联系或交流方式的一种延伸。“虽然照片可以用静态的方式代替死者，但当今的 AI 技术赋予了逝者数字化的‘永生’能力。”但要真正让人类接受逝者或“活着”的人类“复制品”存在于我们的生活中，可能还需要一段时间。</p><p></p><p>此外，伍斯特大学教授 Maggi Savin-Baden 与英国达登聊天机器人制造公司首席执行官兼作家 David Burden 合著了一本关于数字化“永生”的书，并制作了一个以自己为原型的虚拟人物形象，她让那些不认识她的同行们和虚拟的自己交流，然后再和她本人交流。结果是，“他们说，（虚拟形象）有些特征感觉很像我，有些则完全不像。所以这项技术仍然好坏参半。”</p>",
    "publish_time": "2022-10-19 14:03:46",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "中国工商银行基于eBPF技术的云原生可观测图谱探索与实践",
    "url": "https://www.infoq.cn/article/iZBMUMOvkY3JJdHADgBX",
    "summary": "<p></p><p>在互联网金融时代，各大银行业务量呈爆发性增长态势，业务模式更新迭代更加频繁，传统的 IT 架构越来越无法应对新业务形态所带来的巨大冲击与挑战。<a href=\"https://www.infoq.cn/topic/CloudNative\">云原生</a>\"相关技术使业务应用呈现微服务众多、多语言开发、多通信协议等典型特征，调用链路日益复杂，监控数据爆发性增长，传统监控方式已无法适应云原生场景。</p><p></p><p>在这个背景下，中国工商银行积极开展云原生可观测图谱的探索和实践，针对可观测体系中的痛难点，通过深入研究内核新技术，进一步完善云原生技术版图。</p><p></p><h3>业界云原生可观测体系痛点</h3><p></p><p></p><p><a href=\"https://www.infoq.cn/article/i0CftJvEiF8mbisle4NJ\">中国工商银行</a>\"早期基于业界对可观测性“三大支柱”（监控指标（Metrics）、日志（Logging）和链路（Tracing））的定义（如图 1 所示），建设了云监控、日志中心和全息监控等运维支撑平台，初步构建了可观测体系，支撑云上应用监控报警和分析诊断能力。随着运维架构转型，开发及运维部门对节点网络拓扑、监控指标、故障定位、性能调优等方面提出了更高的要求。为此，中国工商银行对业界云原生可观测性相关前沿技术进行了深入探索与研究。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/49/49be85b393cb3df16adca7b2aa9dab7c.jpeg\" /></p><p></p><p>图1 可观测三大支柱</p><p></p><p>云原生基金会的项目全景图（CNCF Landscape）根据项目特点与价值，将提供可观测性能力的项目分为了监控（Monitoring）、追踪（Tracing）、日志（Logging）三类（如图 2 所示）。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/90/9095ce4c7cb673ad9755000013dc6939.jpeg\" /></p><p></p><p>图2 CNCF Landscape</p><p></p><p>利用这些产品的组合，我们可以比较快速地搭建一个可观测性系统。但是从业界实践来看，这样组装的系统普遍存在两大类痛点：</p><p></p><p>缺乏全局性的系统和网络拓扑关系：云原生分布式网络相较于传统网络，应用节点间网络访问过程经过多层的映射转化后，网络拓扑关系更加复杂，传统监控工具链缺乏以容器、虚机、负载均衡器等系统节点为维度的网络调用链路监控拓扑数据，并且未将抓取的网络信息与 Kubernetes 资源信息结合，无法呈现应用容器间、网络关键组件的网络拓扑，无法形成有效的可观测性图谱。数据采集方式不具备普适性且内核态指标采集能力不足：传统的数据采集方式通常有两种，一是采用 SDK 集成的方式，随应用版本部署；二是采用 Agent 的方式，采集特定埋点的数据指标。但是基于这两种方式实现的节点拓扑关系，都依赖应用方进行适配改造，埋点的数据采集又局限于特定语言和技术栈。而在云原生环境中，多语言应用、不同通信协议共存的情况下，存在适配工作量极大、应用感知明显的问题。此外，当前指标采集方面还普遍缺失对部分内核资源的细粒度监控能力，影响对问题的深入分析和调优。</p><p></p><h3>中国工商银行在可观测图谱的技术选型</h3><p></p><p></p><p>要解决容器场景下的系统层网络链路拓扑缺失和内核资源监控不完善的问题，可观测性系统必须设法获取到相关资源的统计信息。但内核通过文件系统或系统调用暴露出的信息有限，单纯从用户态切入无法抓取这些信息，只有从内核本身调用的过程中获取调用信息才可以补足相关能力。具体而言，即需要对应的内核 Tracepoint 或者函数执行 hook 调用抓取相关的信息，并上报到用户态监控程序中。这样的内核技术选型很少，从调研结果来看，目前只有两种技术能达成上述目标，一是内核模块编程技术，二是 eBPF 技术。</p><p></p><p>对于内核模块编程技术而言，获取内核数据需通过在对应的跟踪点（Tracepoint）或者系统函数调用时执行钩子（Hook）操作来抓取相关信息，并通过 netlink 套接字、sysfs(/sys)、sysctl(/proc/sys) 或 procfs(/proc) 等方式与监控进程进行通信并上传采集的数据。对于普通开发，内核模块编程技术难度较大，且极易造成系统稳定性问题。</p><p></p><p><a href=\"https://xie.infoq.cn/article/34d62a334c9af2134e1ab0b02\">eBPF</a>\"（extended Berkeley Packet Filter）是一种能够在内核运行沙箱程序的技术，提供了一套在内核事件和用户程序事件发生时安全注入代码的机制，使得非内核开发人员也可以对内核进行控制。随着内核的发展，eBPF 逐步从最初的数据包过滤扩展到了网络、内核、安全、跟踪等领域，并且它的功能特性还在快速发展中。早期的 BPF 被称为经典 BPF（简称 cBPF），正是这种功能扩展使得现在的 BPF 被称为扩展 BPF（简称 eBPF）。相对来说，它是一种安全高效的内核技术，它的出现本质上是为了解决内核迭代速度慢和系统需求快速变化的矛盾，在对内核无侵入的前提下，往内核中动态地插入一段自己的代码，实现自定义监控及跟踪能力，极大地降低了用户获取内核态丰富观测指标的门槛（如图 3 所示）。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/43/437a95d9d25cd0b942c7883b67e294c2.jpeg\" /></p><p></p><p>图3 eBPF技术初印象</p><p></p><p>内核模块编程技术和 eBPF 技术的详细对比（如表 1 所示）</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/ad/ad2745c10c19a312622262074fce830c.png\" /></p><p></p><p>表1 内核模块编程技术与eBPF技术对比</p><p></p><p>由此可见，利用 eBPF 技术进行内核开发相比内核模块编程技术拥有诸多优势，包括更严格的安全检查、更稳定的 API、较高的内核开发能力、更优的数据结构与通信性能以及支持平滑升级等。同时，各大互联网公司均采用 eBPF 技术在可观测方面进行了实践，如阿里云提出了一种立足于容器界面和底层操作系统，向上关联应用性能监测的可观测性解决思路，通过 eBPF 技术无侵入地采集多语言、多网络协议的各项指标，实现了一站式可观测性平台；字节跳动通过内核的 eBPF 采集机制获取基于连接层面细粒度的内核网络监控指标，为多种运维场景提供支持。</p><p></p><p>综上，中国工商银行综合考虑技术优势、发展趋势等多个方面，最终选择基于 eBPF 技术进行内核相关的可观测功能开发，弥补当前网络拓扑和内核资源监控能力的不足，完善云原生场景下的可观测图谱。</p><p></p><h3>中国工商银行基于 eBPF 技术的云原生图谱的实践与应用</h3><p></p><p></p><p>在容器化场景下，需要采集的内核数据种类多样，为了更好地通过 eBPF 提升对系统节点间网络调用和内核资源的云原生监控能力，我们引入了 eBPF 探针无侵入式地部署在宿主机上采集相关系统调用信息及应用间互访的网络通信报文, 通过关联容器元数据信息后进行数据聚合压缩入库，并以此构建以云上拓扑自动发现为入口的可观测图谱，支持以节点系统网络性能指标分析为核心的一体化监控能力。中国工商银行的可观测图谱可以分为：内核态指标采集、网络拓扑分析、云上可观测图谱三部分（如图 4 所示）：</p><p></p><p>内核态指标采集：在宿主机部署 eBPF 探针实时采集云上应用访问数据，结合容器元数据，提供云上应用东西向访问关系的原始数据以及网络通信报文。网络拓扑分析：负责分析处理节点之间的调用关系，系统调用分析模块则负责处理应用系统调用的分类、聚合与信息关联。云上可观测图谱：提供面向业务和运维场景的可视化分析能力，以云上拓扑发现为入口提供面向应用和运维场景的可视化分析能力，支持联动全息监控、云监控以及日志中心进行关联分析，形成云原生可观测图谱。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/1d/1de384db0a1d0ebd6c6d6bd7b3f60f35.jpeg\" /></p><p></p><p>图4 eBPF可观测图谱架构</p><p></p><p></p><h4>内核态指标采集</h4><p></p><p></p><p>将 eBPF 探针通过 daemonset 的形式无侵入式地部署在宿主机上，负责采集容器网络报文、系统调用、资源使用详情信息，同时从 master 获取容器关联信息。（如图 5 所示）</p><p></p><p>负载业务间的网络信息采集：eBPF 探针采集不同网络环境下的网络通信报文等数据，以支持分析并展示负载间网络通信关系链与通信情况，包括带宽、TPS、平均响应时间、建联失败率、错误率等。负载的系统调用与资源监控的采集：高资源消耗系统调用、异常卡死系统调用；用户态与内核态资源使用情况的采集与展示，例如 cpu、内存、磁盘 io、半连接数、全连接数、页错误、文件句柄使用量、SWAP 内存使用量、inodes 使用量及可用量等。负载的容器元数据采集：eBPF 探针通过集群 master 获取集群以及容器元数据信息，对相关数据进行过滤、填充、采集、收集。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/83/83b324e43c435c8fc8030ab1e29a10ac.jpeg\" /></p><p></p><p>图5 内核态指标采集</p><p></p><h4>网络调用分析</h4><p></p><p></p><p>接收 eBPF 探针采集的指标数据，采用分类聚合算法与 Kubernetes 元数据进行关联分析、聚合存储，形成完整的节点间调用网络拓扑关系数据，同时为规则匹配报警提供支撑（如图 6 所示）。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d4/d457ce09e6c86f47b71ddea86863c616.jpeg\" /></p><p></p><p>图6 网络调用分析</p><p></p><h4>云上可观测图谱</h4><p></p><p></p><p>基于内核态指标采集和节点间调用网络拓扑分析的入库数据，构建面向用户的可观测图谱，具备丰富的系统调用指标及网络性能指标关联查询能力，面向一线问题支持人员和开发人员，提供了以下常见应用场景：</p><p></p><h5>应用拓扑感知</h5><p></p><p></p><p>在当前分布式服务的架构下，发生问题后进行分析定位是一个非常复杂的过程，不仅要求问题分析人员对全局应用有大致了解，还需熟知各个应用的特性、调用关系、部署方式。而应用拓扑感知（如图 7 所示）则提供了一个非常强大的功能：通过无侵入式采集的数据建立节点间全局的调用拓扑关系，在异常应用定位时，可以让问题一线人员非常快速的感知存在网络问题的节点。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/37/3720837549d6b8c4d996ca344b7c1af7.png\" /></p><p></p><p>图7 全局应用拓扑感知</p><p></p><p></p><h5>链路追踪分析</h5><p></p><p></p><p>区别于传统的分布式追踪，基于 eBPF 的链路追踪不止能跟踪某次调用，还具有无入侵、语言框架无关的特性，请求如果包含了分布式追踪 TraceID，也能自动识别，方便联动分布式监控平台进行排查。对某次请求来说，可以精确看到接收、处理、回应、耗时的数据，方便问题排查人员从问题节点定位到问题接口，从而进一步辅助问题的解决。（如图 8 所示）。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/86/862051908b57a3df9b0e3e51e8f0a2d4.jpeg\" /></p><p></p><p>图8 单次请求信息</p><p></p><p></p><h5>网络性能监测</h5><p></p><p></p><p>通过监测 HTTP 请求、平均响应时间、建链失败率、全连接半连接队列等网络指标辅助定位节点及链路访问连通性或性能问题。（如图 9 所示）。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/93/93c58e68d17fc99ecdb3ac8b180e2ad2.jpeg\" /></p><p></p><p>图9 网络性能监测</p><p></p><p></p><h5>黄金指标分析</h5><p></p><p></p><p>黄金指标是谷歌针对大量分布式监控实践的经验总结，4 个黄金指标可以在服务级别帮助衡量终端用户体验、服务终端、业务影响层面的问题。可观测平台层支持请求数、响应时间、错误率、慢调用情况，整体反映应用健康状态，快速评估故障影响，节约故障定位时间（如图 10 所示）。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/b8/b8c46ba5e4ce5a4ae3022b8a11f6b081.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/b8/b8c46ba5e4ce5a4ae3022b8a11f6b081.jpeg\" /></p><p></p><p>图10 黄金指标-平均响应时间</p><p></p><p></p><h5>上下游关联分析</h5><p></p><p></p><p>在现有的云原生环境中，应用间的拓扑非常复杂，除了提供全局的拓扑感知，快速定位问题节点后，对于问题分析人员来说，如何在具体问题节点尽可能收集更多的信息变成了关键所在。可观测平台不仅可以高亮显示问题节点的上下游（如图 11 所示），还关联了告警信息、黄金指标、Kubernetes 元信息等，在一个页面就可以提供问题分析人员多维度的展示，有助于加速问题排查。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/93/93c75c146198e96c2a1ec442b81aa051.jpeg\" /></p><p></p><p>图11 高亮显示上下游</p><p></p><p></p><h5>规则告警与压缩</h5><p></p><p></p><p>对于一个可观测平台来说，及时可靠的告警是发现问题“第一现场”最重要的功能，平台提供了预设模板的告警规则设定，支持通过选择告警检测对象、配置触发条件、设置告警内容和通知人员三步设置。告警检测方面，平台支持 Pod、节点、组件、工作负载、应用等五层丰富指标的告警，同时支持通过对指标进行逻辑运算来完成告警配置。告警规则配置方面，平台已经预设了模板，用自然化语言的方式，方便监控人员个性化的配置。最终经过压缩上报，精细化告警发送，减少一线处理人员的告警处理数量。</p><p></p><p></p><h3>未来展望</h3><p></p><p></p><p>中国工商银行将继续深入推进 eBPF 技术研究工作，积极探索云原生可观测性最佳实践，将云原生可观测图谱打造成为开发及运维人员面对系统异常时进行问题定位、分析、系统调优的首选工具。随着 eBPF 技术的应用场景被不断挖掘，业界涌现的各类开源产品已经覆盖安全、网络、跟踪与性能分析、观测与监控等领域。中国工商银行将持续关注业界 eBPF 技术及开源社区发展动态，进一步拓展 eBPF 技术在其它领域的能力并挖掘行内的落地场景。</p><p></p><p></p>",
    "publish_time": "2022-10-19 14:31:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]