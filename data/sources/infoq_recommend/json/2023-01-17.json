[
  {
    "title": "eBay如何提高通知平台的可靠性",
    "url": "https://www.infoq.cn/article/S1h2hqgFvbQphKV1ODG1",
    "summary": "<p>eBay工程师一直在使用<a href=\"https://tech.ebayinc.com/engineering/how-ebays-notification-platform-used-fault-injection-in-new-ways/\">故障注入技术</a>\"来提高通知平台的可靠性，并探索其弱点。虽然故障注入是一种常见的行业实践，但eBay尝试了一种利用插装将故障注入引入到应用程序层的新方法。</p><p>&nbsp;</p><p></p><blockquote>该平台负责向第三方应用程序推送平台通知，以提供商品价格、商品库存状态、支付状态等方面的最新变化。它是一个高度分布式和大规模的系统，有许多外部依赖，包括分布式存储、消息队列、推送通知端点等。</blockquote><p></p><p>&nbsp;</p><p>eBay工程师Wei Chen表示，通常情况下，故障注入是在基础设施层进行的，例如，通过服务器断开连接或超时，或使给定资源暂时不可用，引入HTTP错误，从而导致网络故障。这种方法代价高昂，并且对系统的其他部分有许多影响，因此很难单独探索故障的影响。</p><p>&nbsp;</p><p>但这并不是唯一可行的方法。相反，可以在应用程序层创建故障，例如，在HTTP客户端库中添加特定的延迟以模拟超时。</p><p>&nbsp;</p><p></p><blockquote>我们对依赖服务的客户端库的类文件进行了插装，以引入我们定义的不同类型的故障。当我们的服务通过插装API与底层资源通信时，将会引发引入故障。由于更改了代码，这些故障并没有真正发生在我们的依赖服务中，其效果是模拟的，使我们能够在没有风险的情况下进行实验。</blockquote><p></p><p>&nbsp;</p><p>三是eBay实现的强制调用方法显示错误行为的基本工具：阻塞或中断方法逻辑，例如抛出异常；更改方法的状态，例如更改 response.getStatusCode() 的返回值；以及替换方法参数的值，包括修改发送给方法的参数值。</p><p>&nbsp;</p><p></p><blockquote>为了实现上述三种类型的插装，我们创建了一个Java代理。在代理中，我们实现了一个 classloader ，它将插装应用程序代码中使用方法的代码。我们还创建了一个注解来指示将插装哪个方法，并将插装逻辑放在注解的方法中。</blockquote><p></p><p>&nbsp;</p><p>此外，eBay工程师还实现了一个配置管理系统，以动态更改故障注入在运行时的行为。特别是，对于eBay应用程序支持的每个端点，工程师可以更改一些参数来测试特定的行为。</p><p>&nbsp;</p><p>据Chen介绍，eBay是业界首个使用代码插装在应用程序层实施故障注入的组织。如果你对这种方法感兴趣，请不要错过原文中提供的完整说明。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/12/eBay-fault-injection-instrument/\">https://www.infoq.com/news/2022/12/eBay-fault-injection-instrument/</a>\"</p>",
    "publish_time": "2023-01-17 09:41:50",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]