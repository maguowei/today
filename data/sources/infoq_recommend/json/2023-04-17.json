[
  {
    "title": "使用Application Insights提升Logic Apps（标准版）工作流的可观测性",
    "url": "https://www.infoq.cn/article/PezBFEd0bajj98i5F2xL",
    "summary": "<p>微软最近<a href=\"https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/application-insights-enhancements-for-azure-logic-apps-standard/ba-p/3758909\">宣布</a>\"在Application Insights中发布<a href=\"https://docs.microsoft.com/en-us/azure/logic-apps/single-tenant-overview-compare\">Logic Apps标准版</a>\"的公开预览增强。这些增强特性将会为开发人员提供对标准Logic Apps的性能和健康情况的更深入洞察，使其更易于诊断问题和优化性能。</p><p></p><p>Logic Apps是微软的自动化工作流产品，其Logic App标准层允许开发人员在任何地方运行工作流。标准版是2021年6月份<a href=\"https://www.infoq.com/news/2021/06/azure-logic-apps-standard/\">正式发布</a>\"的。</p><p></p><p><a href=\"https://learn.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview?tabs=net\">Application Insights</a>\"是一项Azure服务，允许用户监控其应用的性能和使用情况。通过Logic Apps（标准版）的公开预览增强功能，开发人员能够更深入地了解Logic Apps的性能，包括监控和分析Logic App内单个action的执行情况。</p><p></p><p>利用这项新功能，开发人员可以从Azure Portal或通过修改Application Settings为其Logic Apps（标准版）项目启用Application Insights集成。该特性需要<a href=\"https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/azure-logic-apps-standard-now-supports-azure-functions-v4/ba-p/3656072\">Functions V4运行时</a>\"，并对新的Logic Apps（标准版）实例自动启用。</p><p></p><p>启用后，开发人员可以查看其Logic Apps（标准版）工作流的各种度量和日志，如运行次数、失败次数、触发器、action和自定义事件。此外，他们还可以使用Application Insights查询语言（<a href=\"https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/\">Kusto</a>\"）来分析和可视化数据。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d6/d6833a45906cea7f457f849d409fb52f.png\" /></p><p></p><p><a href=\"https://techcommunity.microsoft.com/t5/integrations-on-azure-blog/application-insights-enhancements-for-azure-logic-apps-standard/ba-p/3758909\">图片来源</a>\"</p><p></p><p>此外，用户可以利用Application Insights的<a href=\"https://learn.microsoft.com/en-us/azure/azure-monitor/app/distributed-tracing\">分布式跟踪特性</a>\"来跟踪跨多个服务和组件的Logic Apps（标准版）工作流的端到端流程。该特性提供了工作流程执行和每个步骤的持续时间、状态和依赖关系的图形化展示。</p><p></p><p>来自微软的Logic Apps的首席项目经理<a href=\"https://twitter.com/wearsy\">Kent Weare</a>\"告诉InfoQ：</p><p></p><p></p><blockquote>我们根据客户的反馈增强了Azure Logic Apps（标准版）的遥测方式。客户希望对事件的发布方式以及用于发布的模式有更多的控制。Application Insights存储是客户必须要承担的成本，所以我们希望尽可能高效，并让他们能够在源头上控制过滤哪些遥测数据。</blockquote><p></p><p></p><p>此外，他还补充到：</p><p></p><p></p><blockquote>我感到特别兴奋的一个特性是，我们会为正在发布的事件添加连接器元数据（connector metadata）。连接器是我们价值的重要组成部分，组织可能希望了解正在使用哪些连接器，以及它们被哪些工作流所使用。如果在一个简单的查询中提供这种类型的库存数据，将会使客户的管理和维护变得更加简洁明了。</blockquote><p></p><p></p><p>这项新功能目前处于公开预览阶段，可用于支持Logic Apps（标准版）的所有区域。此外，微软鼓励开发者通过<a href=\"https://feedback.azure.com/d365community/forum/cb47c115-7926-ec11-b6e6-000d3a4f032c\">Logic Apps User Voice</a>\"提供反馈和改进建议。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/03/logic-apps-application-insights/\">Improve Logic Apps (Standard) Workflows Observability with Application Insights</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/Zp4AN1SWYva38kqG7DDL\">微博增值团队可观测性落地实践与回顾 - 上篇</a>\"</p><p><a href=\"https://www.infoq.cn/article/YxIvZSIsLrXioeW9MFvO\">微软云 Azure 的容器平台能给游戏后端开发带来什么？</a>\"</p>",
    "publish_time": "2023-04-17 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "在RISC-V 中开发 Java 是一种什么体验？",
    "url": "https://www.infoq.cn/article/aqLULmKMHK4NEA8rfgHy",
    "summary": "<p></p><h2>背景介绍</h2><p></p><p></p><h4>1. Alibaba Dragonwell 发行版</h4><p></p><p></p><p><a href=\"https://dragonwell-jdk.io/\">Alibaba Dragonwell</a>\"是一款免费的 OpenJDK 发行版。它提供了长期支持，包括性能增强、安全修复以及 Dragonwell 上专有的一些特性，比如 Wisp 协程、多租户、JWarmup、G1 elastic heap 以及 serviceability 上的<a href=\"https://github.com/dragonwell-project/dragonwell8/wiki/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Dragonwell8%E7%94%A8%E6%88%B7%E6%8C%87%E5%8D%97\">特性</a>\"等等。Dragonwell 包括 8、11、17 三个版本，而每个版本又包括 standard&nbsp;(和 OpenJDK 基本保持一致)&nbsp;和 extended&nbsp;(基于 OpenJDK，搭载了 Dragonwell 的各种专有特性)&nbsp;两个子版本。而我们当前介绍的&nbsp;RISC-V 后端支持是在 Dragonwell11 上的 extended 版本上，已在 2023 年 2 月正式 release，其中 Dragonwell11 上的特性如 Wisp 暂时还不支持。</p><p></p><h4>2. RISC-V 指令集架构</h4><p></p><p></p><p>RISC-V&nbsp;是一个基于 RISC&nbsp;(精简指令集)&nbsp;的指令集架构。它主要的特性是开源、模块化、可扩展性以及非常精简的指令集。当前的 RISC-V 主要应用于物联网；而后续进入服务器领域也是未来可期的。同时，得到 Arm 等商业芯片指令集的授权都需要支付高额的商业费用，而 RISC-V 是完全开源的指令集架构，芯片厂商可以根据自己的需要做定制化。当前的商业 RISC-V 处理器有如 Alibaba 玄铁 C910 处理器、SiFive 的 RISC-V 半导体 IP 核等。从开发的角度而言，它们也都是使用体验很好的处理器/设备。</p><p></p><h4>3. OpenJDK on RISC-V</h4><p></p><p></p><p>在 2020 年的年末，华为的 Bisheng JDK 团队开源了基于 OpenJDK 的 RISC-V (64位) 后端实现，约 6w 行代码的 <a href=\"https://mail.openjdk.org/pipermail/discuss/2020-December/005657.html\">initial load</a>\"。Alibaba Dragonwell 团队也同期参与到了 RISC-V 后端研发当中。</p><p>从 Alibaba Dragonwell 团队的角度，在去年社区成立&nbsp;<a href=\"https://github.com/openjdk/riscv-port\">openjdk/riscv-port&nbsp;repo</a>\"，随后 RISC-V 后端正式合并到<a href=\"https://github.com/openjdk/jdk\">上游</a>\"&nbsp;openjdk/jdk&nbsp;repo到现在，我们对 OpenJDK RISC-V 后端的贡献包括在 OpenJDK 上的 RISC-V \"C\" 压缩指令扩展这个特性的实现；20 余个 bug fixes；部分 enhancements 和 refactoring；以及部分 Loom (协程) RISC-V port 的支持等。其中 C 扩展的实现已经在 OpenJDK 20 上的 RISC-V 后端中默认开启，可以减小 ~20% 的后端 Java compiled code 的 code size footprint。</p><p></p><h2>Alibaba Dragonwell11 on RISC-V</h2><p></p><p></p><h4>为什么是 JDK11？</h4><p></p><p></p><p>JDK11 是当前的主流版本。国内的 Java 客户大多都在使用 JDK8，但现在已经有越来越多升级到 JDK11 的趋势了。默认的 G1 GC&nbsp;(CMS 在后面 JDK 版本中已经弃用)、更好的性能、AArch64 后端更好的支持、AppCDS 特性、Safepoint 的 Threadlocal Handshake、能提升代码性能的 Segmented Code Cache 特性等都可以让 JDK11 相比于 JDK8 有更多的优势，也是用户升级 JDK 的动力所在。</p><p></p><p>虽然 JDK11 的确是当下的主流版本，但是社区上的 RISC-V 后端是在 19/20 这两个版本中支持的，因此这对于很多 Java 应用的维护者来说，升级到这么高的版本的确是略有些遥远且工作量颇高的事情。所以，如果要尝试在 RISC-V 上开发 Java 应用的话，能继续使用 JDK11 应该是一个比较好的选择。</p><p></p><h4>硬件特性支持平头哥 RISC-V 芯片</h4><p></p><p></p><p>因此，Alibaba Dragonwell 团队将 OpenJDK 上游的 RISC-V 后端移植回了 <a href=\"https://github.com/dragonwell-project/dragonwell11\">Dragonwell11</a>\"上，我们会长期维护 Dragonwell11 的版本和后端，同步上游社区的 bug fixes 保证用户的使用体验。从兼容性的角度上讲，我们完成了 QEMU / SiFive 开发板 / 平头哥开发板 上的验证，以及 JCK / jtreg / SPECjbb2015 等各种 benchmark 的支持。Dragonwell11 上的 RISC-V 和上游大部分保持一致；包括基础的 RVI 指令集支持的同时，我们还支持一部分平头哥芯片专有的指令集和其生态，如果在平头哥的硬件上如 C910，则可以使用&nbsp;-XX:+UseCSky&nbsp;开启相关的支持。</p><p></p><p>与此同时，我们还支持一些基于 RVV（RISC-V 的向量指令扩展）-0.7.1 的 vector intrinsic 的向量化，在支持 RVV-0.7.1 版本的（如平头哥的一些 RISC-V 芯片，如开启 vector 支持的 C910 等）开发板上可以自动开启。由于搭载 RVV-1.0 版本的芯片现阶段实际上很少，所以 Dragonwell 可能是目前唯一能够在硬件上运行 RVV 的 JDK。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/bb/bbf57f2c57af7a220c45d4491f839d81.png\" /></p><p></p><p>二进制版本下载</p><p></p><p>Dragonwell11 的<a href=\"https://github.com/dragonwell-project/dragonwell11/releases\">二进制版本</a>\"已经于二月份发布，有兴趣的开发者可以直接从 Github 链接下载。</p><p>此外，Dragonwell11 的 RISC-V 版本已经集成进龙蜥的 Anolis 源中，如果是使用 Anolis OS 的用户可以直接使用 yum 源来安装 Dragonwell11 JDK。</p><p></p><h4>使用方便的 QEMU Docker 容器镜像进行模拟</h4><p></p><p></p><p>RISC-V 现在还在快速发展阶段中。因此面临着硬件资源有限的问题：开发者有时并不容易得到硬件设备；拿到硬件设备之后还面临着需要搭建环境、初始化网络等比较麻烦的操作。在这种情况下，有一个模拟器就是非常有必要的了。主流的模拟器是 QEMU，如果把 QEMU 内置在 Docker 镜像当中，用户就可以得到最大程度上的使用便利：用户可以直接在 x86 机器上一键模拟 RISC-V 程序。并且，镜像是 portable 的：因为容器镜像可以随时迁移到其他机器上去。</p><p></p><p>我们维护了一个 RISC-V QEMU Docker 镜像的<a href=\"https://github.com/dragonwell-project/docker-qemu-riscv64\">仓库</a>\"，使用 Debian 的 RISC-V 源。用户可以直接查看 README 手动构建一个 QEMU Docker。省力一些的话，用户也可以直接将镜像 pull 下来：</p><p><code lang=\"null\">#&nbsp;现只支持&nbsp;x86&nbsp;宿主机\n\ndocker&nbsp;pull&nbsp;multiarch/qemu-user-static&nbsp;&amp;&amp;&nbsp;\\\ndocker&nbsp;run&nbsp;--rm&nbsp;--privileged&nbsp;--net&nbsp;host&nbsp;multiarch/qemu-user-static&nbsp;--reset\n\ndocker&nbsp;pull&nbsp;alibabadragonwelljdk/riscv-qemu&nbsp;&amp;&amp;&nbsp;\\\ndocker&nbsp;run&nbsp;-it&nbsp;--rm&nbsp;alibabadragonwelljdk/riscv-qemu&nbsp;/bin/bash</code></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/be/be009916feef30454114da3e2f23cbc1.png\" /></p><p></p><h4>Demo：Springboot 示例</h4><p></p><p></p><p><a href=\"https://start.spring.io/\">SpringBoot </a>\"是非常优秀的 Java 应用框架，我们可以从官网上下载其 Hello World demo 并使用 maven 构建。</p><p></p><p>我们也提供了一个预编译好的 SpringBoot demo 以供演示用：</p><p>https://dragonwell.oss-cn-shanghai.aliyuncs.com/demo-0.0.1-SNAPSHOT.jar</p><p></p><p>我们可以在实际的物理开发板上启动 Java 程序；也可以在上述的 QEMU Docker 中用同样的命令启动：</p><p><img src=\"https://static001.geekbang.org/infoq/e6/e6346404de357d7903f98900e9ddea14.png\" /></p><p></p><h2>总结和展望</h2><p></p><p></p><p>RISC-V 是一个有前景的指令集，中立和开放是它的两大优势。在成立了 Datacenter&nbsp;(数据中心)&nbsp;SIG 和 HPC&nbsp;(高性能计算)&nbsp;SIG 之后，RISC-V 也开始逐渐向高性能方向逐渐演进。除此之外，就 RISC-V 的软件生态而言，RISC-V 上的各种 toolchain (GCC、GDB 等) 的支持也已经十分完备，各种操作系统&nbsp;(Ubuntu、Debian)&nbsp;等都已经支持了 RISC-V 指令集，各种开源社区对相关软件的移植的支持也非常积极。Debian-port 上大约 95% 的软件包都可以在 <a href=\"https://wiki.debian.org/RISC-V\">RISC-V</a>\" 上使用，因此用户的开发流程是比较流畅的。</p><p></p><p>相比于 x86 平台的一些复杂指令及一些历史包袱，RISC-V 具有着较新、指令集简单、较强的拓展性等特性，已经 ratify 了多个指令集扩展。随着社区的蓬勃发展，我们相信 RISC-V 架构有着光明的前景。</p><p></p><p>致谢</p><p></p><p>感谢华为 Bisheng JDK 团队的开发同学们的工作，感谢中科院软件所 PLCT 实验室团队对硬件设施方面给予的帮助。感谢社区 RISC-V 后端的 reviewers 的各种帮助。我们也会持续输出并不断反馈社区，在社区的维护上贡献我们的力量。</p>",
    "publish_time": "2023-04-17 10:16:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "中国开源生态图谱 2023",
    "url": "https://www.infoq.cn/article/9j4NSEEh2JGJAUVdQGGu",
    "summary": "<h3>研究背景</h3>\n<p>近些年，代表着合作与创新的开源在国内热度居高不下，同时国内开源项目也逐渐走向国际。而开源领域一直是InfoQ 研究中心关注的重点领域之一。2022 年 8 月，InfoQ 研究中心推出《中国开源发展研究分析 2022》。报告中分析了中国开源的宏观发展背景、现有成绩和整体发展特征，同时还推出了 InfoQ 开源项目指数，并聚焦研究了中国 TOP100 开源项目。<br />\n2022 年 12 月，InfoQ 研究中心启动了《中国开源生态图谱系列研究》工作。截至目前，InfoQ 研究中心已经发布了操作系统、数据库、人工智能、云原生四大领域的开源生态图谱报告，并完成了对于大数据、前端和中间件领域的开源项目数据研究工作。<br />\n现在，2023 年 4 月，基于之前的研究成果，InfoQ 研究中心希望通过《中国开源生态图谱 2023》的发布，以中国开源项目名录和图谱的形式，为中国开源领域提供便捷易用的工具，让国内开发者、企业、研究院、基金会等开源生态了解中国开源的项目现状，并为中国开源产品添砖加瓦。<br />\n《中国开源生态图谱 2023》内共计收录了 931 个中国开源项目，涵盖七大细分领域和生态机构，其中七大细分领域分别为操作系统、数据库、人工智能、云原生、大数据、前端、中间件，生态机构包括实验室/研究院、开源基金会、开源产业联盟、开发者社区和代码托管平台。</p>\n<h3>目录</h3>\n<ul>\n<li>中国开源生态图谱</li>\n<li>中国各技术领域生态图谱</li>\n<li>中国开源项目数据解读</li>\n<li>中国开源企业和机构名录</li>\n</ul>\n<h3>中国开源生态图谱</h3>\n<p><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/b7/b5/b728c2c3931c2cd8dbd12b606a6783b5.png\" /></p>\n<h3>中国企业开源贡献 Top10</h3>\n<p><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/b3/0d/b372546ae5ae2ffde0db4188b08a650d.png\" /></p>\n<h3>中国 Github Top100 开源项目列表</h3>\n<p><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/82/80/82c4744a09394e27abc7d90259538080.png\" /><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/53/49/53507bc2049cc8b54d8ee0a1a6c0d849.png\" /><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/7c/9d/7c8b5e2ae9c5fd6e9da6ayyb62131e9d.png\" /><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/f0/b2/f0d7f46dcab3c3bba096fe49fca9d7b2.png\" /><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/9a/b5/9a93afdc6fc13f3d51a149a5bd68afb5.png\" /></p>\n<h3>联合发布机构（按拼音字母顺序排列）</h3>\n<ul>\n<li>北京开源创新委员会</li>\n<li>开源社</li>\n<li>华为开源</li>\n<li>腾讯开源联盟</li>\n<li>OpenI 启智社区</li>\n<li>字节开源</li>\n</ul>",
    "publish_time": "2023-04-17 11:17:44",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]