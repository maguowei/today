[
  {
    "title": "1月9日举办2023 ICT深度观察政企数字化转型分论坛",
    "url": "https://www.infoq.cn/article/6d18bb25abba45707c1fd5724",
    "summary": "<p></p><blockquote>ICT深度观察报告会是中国信通院每年举办的成果汇报会，自2009第一次举办到2023年已举办了13届，本次为第14届。“政企数字化转型分论坛”作为平行论坛之一，将于1月9日上午9:00在线上举办。</blockquote><p></p><p></p><p>自2020年9月开始，中国信息通信研究院（以下简称“中国信通院”），云计算与大数据研究所就在积极探索以标准的形式来指导和引领政企数字化转型，彼时发布了作为整体数字化转型方法论的《企业数字化成熟度模型IOMM标准》。经过2年发展，当下数字经济与实体经济正在加速融合，新技术与新挑战不断涌现，数字化转型也逐渐进入深水区，需要更深入、更全面、更精细的方向指引。</p><p>&nbsp;</p><p>基于此背景，本次“政企数字化转型分论坛”将以体系化的形式，发布并解读多项企业数字化成熟度模型IOMM标准最新内容，同时邀请多位行业深度参与者对当下数字化转型的热议领域展开讨论，3大亮点集中呈现：</p><p></p><p>亮点1：多项数字化转型成果重磅发布</p><p>数字化转型经过多年发展，已踏入深水区，企业需要更全面、更体系化的方法论来规划和引导数字化转型发展，不同规模的企业对于数字化转型的需求也大为不同，大企业更加关心顶层设计与全局落地方案，而中小企业则更多关注落地抓手，如很多中小企业以数字化营销作为转型切入点；同时在转型过程中越来越多的企业希望与标杆企业对标。为此在本论坛中将重磅发布如下成果：</p><p><img src=\"https://static001.geekbang.org/infoq/c2/c24831c654c6ebdc211caf189bde7c06.png\" /></p><p>发布企业整体视角的《企业数字化成熟度模型IOMM标准》来提供更加全面的方法指引；针对中小企业转型的特色和痛点，发布中小企业版《企业数字化成熟度模型IOMM标准》；发布《“鼎新杯”数字化转型应用案例汇编》为企业数字化转型提供更多对标参考案例。</p><p></p><p>亮点2：多项数字化标准权威解读及实践分享</p><p>在本论坛中，不仅仅发布转型成果，还将对以上发布的成果进行权威细致的解读，包括在企业整体视角层面以及中小企业层面的数字化转型6大能力建设，6大价值评估体系及5级成熟度模型，以便不同规模企业对转型方法论核心要义进行整体把握。同时，针对政企数字化转型密切相关的各领域，如业务数字化转型，数字化平台建设，云边端一体化标准以及数字政府等领域分享最新趋势及相关实践。</p><p><img src=\"https://static001.geekbang.org/infoq/63/631f2322c8e3ebb4200e64e08bed88aa.png\" /></p><p></p><p>亮点3：多轮圆桌对话探讨时下转型热点方向</p><p>在本次论坛中，不单以标准视角阐述数字化转型的方法论和实践，同时也邀请了行业中极具代表性的企业从产业视角对政企数字化转型涉及的相关热点领域展开深入探讨，讨论的议题包括《数字时代下的流程变革创新》、《数字化平台，数字化赋能》以及《云数共生，助力数字政府创新发展》等，参与讨论的企业代表既有来自联通、移动、电信等的运营商企业，也有来自阿里云、金蝶、浪潮云、中国电子云、神州泰岳等技术平台型企业，同时也有来自德勤、IBM等外资企业，期待能为大家带来精彩的观点碰撞。</p><p><img src=\"https://static001.geekbang.org/infoq/6d/6d6c27167ac973ca9d6d79e403344496.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8c/8c817d3d641b3fa6902a995faab85ba1.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3a/3ac44ebd5825c0a6aa3f2adccc520bd5.jpeg\" /></p><p></p><p>数启新征程，转型更当时，让我们共同期待1月9日上午9:00“政企数字化转型分论坛”的精彩内容。</p><p>&nbsp;</p><p>会议议程如下，期待您的参与！</p><p><img src=\"https://static001.geekbang.org/infoq/5e/5ebb64fbf62c6f7ac4d4415fd768e546.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5f/5f8503c3b1f32f2c02a0e8fe1b372df5.jpeg\" /></p><p></p><p></p>",
    "publish_time": "2023-01-06 06:41:44",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "1月11日举办数字化业务安全生产沙龙第2期",
    "url": "https://www.infoq.cn/article/add2bcea669d98025d85830d2",
    "summary": "<p>并不乐观的数字化业务安全生产现状</p><p>数字化时代，信息系统正在逐渐成为企业乃至整个社会的基础设施，任何类型的设备宕机、系统瘫痪、网络故障等安全生产事件都有可能导致业务停摆，轻则影响业务使用和用户体验，重则给企业和用户带来巨大损失，甚至危及民生。</p><p>2021年6月，美国云计算公司Fastly出现长达1小时的服务故障，导致全球数千家政府、网站受到影响；2021年7月，国外多家银行、航空、政府、新闻机构的系统受DNS故障影响无法正常服务；2021年10月，Facebook发生全球性宕机，宕机时间超过6个小时，同周周五，再次出现约2个小时的宕机；2021年12月，西安健康码在全市全员核酸检测的需求下崩溃了，导致公众生活受到极大影响；2022年5月，某证据交易系统宕机，影响股民正常交易；2022年12月，某云服务商的服务中断事件，导致多个关键机构的网站、平台无法访问使用；</p><p></p><p>为此，企业及社会各方，在采用多种新型技术实现效率与效益提升的同时，如将业务部署在云上，引入大数据，人工智能等新兴技术；也要将如何保障数字化业务安全生产息息相关的连续性、安全性、稳定性等作为头等大事。而不断与行业交流并汲取行业最佳实践，是有效提升自身安全生产能力的重要途径。</p><p></p><p>群策群力，推进数字化业务安全生产</p><p>为进一步响应国家关于安全生产工作的号召，中国信息通信研究院（以下简称“中国信通院”）与合作伙伴达成共识，联合各方在企业数字化发展共建共享平台（EDCC）下成立“数字化业务安全生产推进中心”，旨在凝聚各方力量，整合优质资源，开展技术攻关，完善标准体系，提升企业数字化业务连续性，增强企业数字化安全生产能力。数字化业务安全生产推进中心自成立以来已聚集20家行业龙头企业和25名行业资深专家，围绕数字化业务安全生产输出多项标准，陆续发布《基于云计算的数字化业务通用安全工程要求》（行标报批）、《数字化业务应用运维平台》（团标已发布）等多项成果，同时支撑了工信部信管局联合中国信通院组织开展的“云服务稳定安全运行应急演练专项活动”。</p><p></p><p>第2期数字化业务安全生产沙龙聚焦“业务连续性”</p><p>1月11日14:00，将线上举办 “数字化业务安全生产，创新业务连续性管理”第2期主题沙龙并全程直播。本次沙龙将公布第三批数字化业务安全生产推进中心成员单位和技术专家、发布2022年度数字化业务安全生产推进中心突出贡献技术专家，并邀请业内权威专家分享数字化业务安全生产的最新实践经验，共同探寻保障数字化业务连续性的新路径，亮点如下：</p><p></p><p>亮点一：发布及解读数字化安全生产系列最新标准</p><p>2022年数字化业务安全生产推进中心对各行业企业数字化安全生产工作展开研究，深入调研企业数字化业务安全生产现状和短板，形成数字化安全生产治理相关最新标准，本次沙龙将进行发布并解读：</p><p>《可信数字化服务能力要求：数字化安全生产平台》《可信数字化服务能力要求：基于CMDB的数字化全链路端到端监控平台》《云服务稳定运行故障分类分级》《云服务稳定运行要求：应急响应规范》《云服务稳定运行要求：应急管理平台</p><p></p><p>亮点二：行业资深专家分享数字化业务安全生产最佳实践</p><p>本次沙龙邀请到来自浦发银行、中国联通软件研究院、中电信数智科技有限公司、广州嘉为科技有限公司、北京同创永益科技发展有限公司的资深专家，围绕“数字化业务安全生产，创新业务连续性管理”主题，带来数字化业务安全生产在各自领域内的最佳实践。</p><p></p><p>亮点三：公布第三批数字化安全生产推进中心成员单位及专家</p><p>“数字化业务安全生产推进中心”已汇聚了20家行业龙头企业和25名行业资深专家，并输出了多项数字化业务安全生产标准，为推动我国数字化业务安全健康发展做出了贡献。本次沙龙中，将公布新加入的6家成员单位和技术专家名单。</p><p></p><p>亮点四：公布2022年数字化业务安全生产推进中心突出贡献专家</p><p>“数字化业务安全生产推进中心”自成立以来，相关单位和专家围绕数字化业务安全生产在标准制定、评估测试、技术研究等方面输出宝贵经验与成果。为感谢专家在2022年度对数字化业务安全生产推进中心的突出贡献，本次沙龙中将公布2022年度数字业务安全生产推进中心突出贡献专家名单。</p><p></p><p>沙龙议程及直播链接如下，期待您的参与！</p><p><img src=\"https://static001.geekbang.org/infoq/fc/fc9a0526c986634245672e03886dde1f.jpeg\" /></p><p></p><p>活动联系人：吴佳琦 18352634685 wujiaqi@caict.ac.cn</p>",
    "publish_time": "2023-01-06 06:56:39",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "在DevOps引入产品思维：将想法转化为优质产品的手段",
    "url": "https://www.infoq.cn/article/2vry4XbtjT8MDFF4wzJ1",
    "summary": "<p>想要成功，组织需要有两样东西：客户认为有价值的产品和服务，以及提供这些产品和服务的能力……</p><p>&nbsp;</p><p>在这篇文章中，我将展示为什么必须像对待产品或服务一样设计、实现和操作我们的交付管道（将想法转化为用户手中的产品的手段）：通过引入“产品思维”。</p><p>&nbsp;</p><p>我将分三部分来阐述这个问题：一、“管道”（和DevOps）是指什么；二、为什么应该将管道视为一种产品；三、什么是产品思维，以及在实践中，产品管理可以提供怎样的帮助以及如何将其引入到DevOps中。</p><p>&nbsp;</p><p></p><h2>什么是（交付）“管道”？</h2><p></p><p></p><p>交付管道是一种工具、技术和实践，通过它，我们可以将想法转化为产品和服务，然后用户可以使用它，组织可以运营、支持和演进它。（就本文而言，DevOps是设计、构建和操作管道的准则）。</p><p>&nbsp;</p><p>我想从更广阔的视角来看待这个管道的端到端流程：从识别问题和机会、制定战略目标、定义流程，到解决方案设计、分析、实施和质量保证，再到合规、运营和客户支持，当然，还有产品使用，整个价值链。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5b/5b81a336fa28aef27062bb7e4837fe3e.jpeg\" /></p><p></p><p>管道传统的“内”循环和覆盖整个价值链的更为全面的“外”循环。（图片来自<a href=\"https://www.flaticon.com/authors/elias-bikbulatov\">Flaticon: Elias Bikbulatov</a>\"）</p><p></p><h2>为什么管道很重要？</h2><p></p><p></p><p>我共事过的许多组织都认为，管道是“技术性的东西”，是那些汗流浃背的工程师在地下室的某个地方照管的东西，但非技术人员（当然不是管理人员）不用操心……</p><p>&nbsp;</p><p>事实远非如此，因为管道对于业务而言很重要，原因有三。</p><p>&nbsp;</p><p></p><h3>管道是驱动力</h3><p></p><p></p><p>最基本的，管道是将想法转化为用户手中的产品（并随后进行操作和管理）的驱动力。</p><p>&nbsp;</p><p>遗憾的是，许多组织的管道支离破碎（流程有断点，如阶段门或手动移交)、低效（手动测试、手动提供资源、有限的自助配置），或者满足了错误的要求（有些地方过度设计，有些不足却导致了其他方面的瓶颈，例如，认为难以配置的GUI工具比命令行更好用）。</p><p>&nbsp;</p><p>令人惊讶的是，人们经常认为“事情就是这样”，组织和团队基本上都接受了由此所导致的冗长而笨拙的流程，其结果就是：</p><p>用户可用的功能比较少质量比较低组织的学习速度比较慢并且总体上增加了交付和操作之苦（进而降低了团队的积极性）</p><p>&nbsp;</p><p>所以，如果仅仅是为了获得良好的流程、效率和效果，而不考虑其他方面的因素，那么你无疑需要一个灵活而流畅的管道。</p><p></p><h3>没有什么方法适用于所有情况</h3><p></p><p></p><p>我曾与早期初创公司合作，主要目标是快速进入市场，吸引用户并积累经验，使用Vercel或Heroku等轻量级工具将DevOps的成本和工作量降至最低，并能够每天多次直接部署到生产环境，通过LaunchDarkly等特性标记工具控制特性的可用性。</p><p>&nbsp;</p><p>我合作过的金融机构（也有许多其他机构）往往有一个多少有些零散的环境管道，包括开发、集成、UAT、过渡和生产，有时在本地，经常有非常正式的手工部署过程。最终，如何定义这些过程取决于每个组织的文化以及对风险和质量的态度。</p><p>&nbsp;</p><p>我还曾与一个大型政府部门合作，每天在多个环境中连续部署100多次，这些环境全部都是自动化的，并且最大可能地提供了自助服务能力，供工程师配置资源和运行测试。</p><p>&nbsp;</p><p>不久前，我的团队还曾与一家医疗服务公司合作。该公司曾为季度公开发布将代码和（手动创建的）发布说明刻录到DVD上，以满足监管要求。</p><p>&nbsp;</p><p>关键是：虽然存在管道的最佳实践模式和范例（如持续集成、高度自动化和通过自助服务赋能），但并不存在适用于所有组织的现成管道，也不存在随着时间推移不需要调整就适用于同一组织的管道；关于如何处理想法和需求，如何创建、部署和测试代码，如何保证质量，如何生成报告，如何运行、操作和审计，组织有着不同的需求和要求，他们的需求会随战略和环境（新的战略目标、新的客户期望、新的监管要求、新技术）而变化。</p><p>&nbsp;</p><p>所以，我们要根据当前的需求来调整、演进我们的管道，这样它们才能满足我们未来的需要。</p><p>&nbsp;</p><p></p><h3>管道是战略资产，可以带来竞争优势</h3><p></p><p></p><p>如果我们认为管道在组织中的内在角色是价值交付的“使能者”，并且它们的设计是环境相关的，那么我们不仅应该将其视为企业资产，而且还应该将其视为竞争优势的来源。</p><p>&nbsp;</p><p>三年来，我的团队帮助我上面提到的那家医疗服务公司简化了监管流程：允许合规部门针对史诗和故事提出风险，将它们与功能、代码库、测试用例和测试结果（在待办事项管理工具中）联系起来，并以可跟踪、可审计的方式自动生成涵盖所有这些方面并将它们联系起来的发布说明。这将每次发布的人天量由大约20天减少到几乎为零，并且提高了发布文档的质量。</p><p>&nbsp;</p><p>通过直接部署到生产环境，这家初创公司在一个竞争激烈、快速创新的领域中开展了业务，并依托更精简的机构（人员更少）和更快的上市速度（以更低的成本和更短的学习周期为客户提供更大的价值）获得了与其他公司竞争的优势。</p><p>&nbsp;</p><p>因此，如果我们把管道做好了，那么它就不仅仅是企业的又一个驱动力，而且还可以成为竞争优势的来源。</p><p>&nbsp;</p><p></p><h3>管道很重要，所以把它们当产品来对待</h3><p></p><p></p><p>如果管道很重要，那么我们不能拿一个现成的就用，我们需要仔细考虑慎重对待，知道现在和以后应该构建什么东西，并为我们的（DevOps）团队提供指导……所以换句话说，我们需要将它们视为产品，并引入产品思维。</p><p>&nbsp;</p><p>设想一下：我们不会只是要求工程团队为我们构建电子商务网站、支付门户或社交媒体应用。我们会确定目标、研究什么对用户有价值，并将其作为背景和指导信息，提供给我们的设计师和工程师……</p><p></p><h2>什么是产品思维？</h2><p></p><p></p><p>产品思维是指基于组织的战略和背景，为我们的用户提供有价值的产品，并做到可持续发展（即平衡现在和未来）。</p><p>&nbsp;</p><p>在这篇文章中，产品思维、产品意识和产品管理三个词可以互换。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/76/769d30d4d23ed4b6311e683a8cab0a0c.jpeg\" /></p><p></p><p>产品管理的工作就是通过平衡用户合意性、商业可行性和技术可能性来创造产品-市场契合点。</p><p>&nbsp;</p><p>在实践中，这意味着要通过平衡用户需要、想要并且发现有价值的东西（用户合意性）、我们作为一个组织需要实现（并且负担得起）的东西（商业可行性）和可能涉及的技术、文化、法律等（技术可行性），来实现产品与市场的匹配，与此同时，要谨防陷入过早优化或过早关闭选项的陷阱。</p><p>&nbsp;</p><p>举一个小而具体但很能说明问题的例子：对于那家医疗设备组织，我们选择将Bash作为脚本语言，因为DevOps主管对它很熟悉。最终，我们意识到，客户的工程师没有Bash经验，而作为.Net团队的成员，他们更熟悉Python。如果在早期阶段添加一个以用户为中心的方法（作为产品思维的一部分），就可以防止这种错误和由此导致的返工。</p><p></p><h2>如何对管道做“产品管理”？</h2><p></p><p></p><p>归根结底，你只是“添加产品”。这是一种比较随意的说法，意思是你所做的事情要与做任何其他产品或服务一样。</p><p>&nbsp;</p><p>在我共事过的一家初创公司中，这意味着首席工程师“要戴上产品的帽子”，从早期业务目标的视角来审视管道：在一个小而友好且高度可控的潜在客户群体中，使用MVP来衡量产品与市场的契合度。结果，他建议选择速度（如直接部署到生产环境）、管理特性可用性的特性标记、AWS Lambdas和AWS Cognito。然后，我们将监控业务发展，并在需要时扩展/构建更多的自定义功能（如身份认证）（而不是为可能永远不会到来的未来而构建）。</p><p>&nbsp;</p><p>我们在之前的例子中提到的保险公司曾要求我们帮助他们构建一个平台，用于支持100多个微服务，而且要云无关（以确保业务连续性）。由于这个环境很复杂，所以我们增加了一个专职的产品负责人来支持DevOps工程师团队。首先，她组织产品和工程团队召开了一系列研讨会，以了解他们目前的工作方式以及所做的工作。她很快就发现，组织错过了向客户承诺的里程碑，因为工程师无法高效地发布代码（原因是在环境之间迁移代码和配置资源是手动进行的，而且有资源限制）。她还发现，在接下来的12个月里，该组织将只有三个微服务，云无关只是一个长远的目标，并不是目前的必备要求。</p><p>&nbsp;</p><p>在深入了解了“价值”对于组织而言究竟意味着什么之后，所有人都一致认为，现在团队需要构建和发布高质量的功能，并达成向客户承诺的里程碑。因此，产品负责人与团队重新调整了优先级，制定了一个路线图，重点是消除只有两名工程师能够手动将代码部署到过渡环境和生产环境所导致的障碍，然后通过基本的自助服务（基于标准化模板自助配置新的微服务和其他资源）为工程师赋能。最初，他们会专注于一家云提供商，但也会考虑未来的云无关性。他们还指出，目前只有三个微服务，后续随着复杂性的增加，要解决构建微服务网格的问题……</p><p></p><h3>对管道做产品管理的工具</h3><p></p><p></p><p>一般来说，用于对管道做“产品管理”的工具和技术与“平常”用于产品管理的工具和技术一样。可以从下面这个“框架”入手：</p><p></p><h3>1. 确定环境</h3><p></p><p></p><p>从设定场景开始。理解管道的运行环境。定义并达成一致：</p><p>交付管道需要支持什么近期、中期和长期目标有什么重要的机会，有什么问题可以解决关键约束是什么，有什么可能性</p><p>&nbsp;</p><p>还记得医疗服务的例子吗？最初的任务概要是将现有的应用程序容器化，并迁移上云。虽然这样做是有必要的，但我们在分析过程中发现，单靠这一点并不能帮助组织实现预期的吞吐量提升，那只能通过简化监管审批流程来实现。</p><p>&nbsp;</p><p>在这个阶段，对现有任何流程建模都非常有用，特别是考虑到瓶颈和已错失的机会。</p><p>&nbsp;</p><p></p><h3>2. 识别潜在用户</h3><p></p><p></p><p>第二步，了解谁将使用管道，谁从管道受益，并受管道影响。这里要纵观全局。</p><p>&nbsp;</p><p>你会想到一些常见的岗位，如工程师、QA、DevOps工程师，但我建议你扩大受众范围，包括产品人员、销售和市场营销人员、专业涉众，如医疗软件示例中的合规和监管机构。涉众地图或涉众洋葱是我的首选模型，不过简单的列表也可以。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/93/9307967193c2ee78fc86ef3039155106.jpeg\" /></p><p></p><p>医疗服务组织的涉众洋葱图示例，重点关注法规遵从性涉众。</p><p></p><h3>3. 识别用户的工作、需求、收获和痛点</h3><p></p><p></p><p>在接下来的步骤中，你会希望了解这些用户需要完成什么工作、他们的基本需要、相关的收获和痛点、他们的期望和需求。价值主张画布或类似的模型，或用户角色，在这里很有效。在接下来的步骤中，我们可以使用这些工具开始为每个“需求”确定潜在的解决方案。</p><p>&nbsp;</p><p>注意，你可能不知道从哪里开始，但你也不想过度分析。这里，服务蓝图或体验地图可以派上用场了，我们可以利用它们将用户、需求和痛点联系起来，这样就可以确定哪些地方值得花费更多的精力分析。体验地图或服务蓝图也是很好的交流工具，我们甚至可以用它们来显示进展。</p><p>&nbsp;</p><p>回到医疗服务公司的例子，考虑一下合规经理：他们要考虑识别风险，他们的需求之一是证明可追溯性（解决方案：集成风险管理和待办事项跟踪），但是创建发布文档的过程很冗长且容易出错（解决方案：自动生成文档），并且他们希望可以将所有的文档都直接提交给监管人员（解决方案：集成）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7a/7ae519db955d414c9d4f35d09a4784cc.jpeg\" /></p><p></p><p>Futuris改版的构思画布（Ideation Canvas），用于识别用户期望和潜在解决方案（作为Strategzyer价值主张画布的替代方案）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/cc/ccba186bb43b7b8e52307f2aa9da9808.jpeg\" /></p><p></p><p>说明过程和痛点的体验图。</p><p></p><h3>4. 定义优先级</h3><p></p><p></p><p>最后，你需要基于前面的所有工作确定优先级：首先做什么，下一步提供什么支持。在这方面，功能图是一个完美的工具。这里，最好的做法是将特性分组，放到实现组织和团队长期目标的不同版本中，然后回过头来与第一个活动中确定的目标建立联系，创建我们的产品路线图。</p><p>&nbsp;</p><p>对于医疗服务公司来说，这意味着：</p><p>实现一个基本的端到端流程，以便团队可以轻松地跨所有环境部署代码创建一个经过监管机构认证的实际运行环境实现合规文档自动化实现强大的自助服务功能</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d1/d13b2c5651731484ffe31313469b6478.jpeg\" /></p><p></p><p>显示四个“版本”和功能优先级的功能地图示例，基于Jeff Patton首创的故事地图概念。</p><p></p><h3>自建还是购买？</h3><p></p><p></p><p>经常出现的一个问题是，在哪里投资和创新，在哪里构建，哪些方面要自有，哪些方面要外包、购买或租赁。</p><p>&nbsp;</p><p>我发现，在做这方面的决策时，沃德利（Wardley）地图是一个很好的工具，因为它根据整个价值链的相关内容和各种解决方案的行业成熟度来指导我们的战略方针，然后告知我们是“构建还是购买”，是实现商品化还是尽力防止商品化，以及如何促成或防止商品化。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/19/199783e4c2907bad53cedb9c6e1651b5.jpeg\" /></p><p></p><p>医疗器械公司的沃德利地图示例，说明了在创新法规遵从性流程方面具有的竞争优势。</p><p>&nbsp;</p><p>回到医疗服务公司，其交付管道的沃德利地图证实，有个好的集成服务器很重要，但也是商品化的，显然，我们应该选择一个最好的解决方案。更重要的是，它表明，合规过程的自动化是效率和竞争优势的来源，但没有现成的解决方案，这是一个我们应该进行创新的领域。沃德利地图随后提出的问题是，我们是应该对这一过程进行知识产权保护并保持其专有性，还是应该与竞争对手和监管机构合作创建一个行业标准，哪一种做法更有利。</p><p></p><h3>什么时候才算完成了呢？</h3><p></p><p></p><p>上述活动在管道工作的早期阶段特别有用，例如在启动阶段。这个<a href=\"https://www.beautifulabstraction.com/lean-inception-toolkit/\">启动工具包</a>\"为我们提供了用来制定计划的模式和模板。不过，就像开发任何产品一样，这个过程永远不会结束；产品管理是一个持续性的活动，而不是一次性的。</p><p>&nbsp;</p><p>组织的目标会变，用户的期望会变，有的技术会过时，也会有新的技术出现。因此，管道也得调整和演进。想想不断变化的合规环境，或者一个组织今天还在某个市场的某个行业中，明天所处的市场却已完全不同；此外，我们如何从本地托管迁移上云，再到无服务器，还有大数据和ML等新技术在基础设施方面提出了不同的要求。</p><p></p><h2>该怎么办？</h2><p></p><p></p><h3>引入产品思维是有好处的</h3><p></p><p></p><p>我从团队和客户那里得到的反馈，以及那些可度量的改进（吞吐量、周期时间、质量、价值交付），都清楚地表明，在DevOps中引入产品思维不是可有可无的，而是必须的。</p><p>&nbsp;</p><p>对于DevOps工程师来说，它使他们的生活更轻松，它使他们可以专注于正确的事情，它赋予他们能力：最基本的，它消除了噪音和担忧，使他们知道该做什么，使他们能够创建一个流畅的管道，让每个人都生活得更轻松；在最好的情况下，它使DevOps可以为组织创建战略资产。</p><p>&nbsp;</p><p>对组织来说，它可以保证价值交付，它使产品交付成为可能，并可以保证我们合理地使用资金，通过支持管道的创建，组织的所有部门都将朝着实现战略目标的方向努力，降低因为团队不确定应该做什么、不清楚应该听取谁的意见或不知道该专注于哪个解决方案而导致的风险和浪费。</p><p></p><h3>到底该怎么办？</h3><p></p><p></p><p>我们可以用一种非常轻量级的非正式方式“引入产品思维”：“只是在心里记着”。或者，我们可以用一种更正式的方式，增加一个专门的产品专家来支持DevOps工程师。也就是说，团队可以根据自己的喜好、文化和预算进行选择。</p><p>&nbsp;</p><p>当你觉得我建议的工具和实践适合自己，当你觉得这样会让自己很舒服，就没有理由不尽快采用它们。你甚至不需要做“每一件事”：我上面提到的任何一种技术，本身都可以带来增量价值。</p><p>&nbsp;</p><p>或许这一切对你来说都有点新鲜，不用担心，只要找一个产品的同事，让他们或多或少地参与下你的分析和决策过程……</p><p>&nbsp;</p><p>想要进一步了解这个主题或收听会议发言录音的话，请点击<a href=\"https://www.beautifulabstraction.com/productthinking-devops/\">这里</a>\"。</p><p></p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/product-mindset-devops/\">https://www.infoq.com/articles/product-mindset-devops/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/kxOYolQQcddhKtCyim4E\">DevOps的未来是无代码</a>\"</p><p><a href=\"https://www.infoq.cn/article/DcIUD_gi17sQjvSt5XSS\">DevOps&nbsp;团队结构类型汇总：总有一款适合你</a>\"</p><p><a href=\"https://xie.infoq.cn/article/9503db5caf3d41db0abead30b\">什么是&nbsp;DevOps？看这一篇就够了！</a>\"</p><p><a href=\"https://www.infoq.cn/article/Zlsv8XVdRxjCQvVWjda2\">如何让&nbsp;DevOps&nbsp;发挥期望的效益</a>\"</p><p></p><p></p>",
    "publish_time": "2023-01-06 13:02:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "OpenAI计划以要约收购的形式出售股票，投资者质疑其盈利能力",
    "url": "https://www.infoq.cn/article/ZWixRo76hFsOw38tRHNF",
    "summary": "<p></p><h2>OpenAI被曝就收购要约展开谈判</h2><p></p><p>&nbsp;</p><p>当地时间1月5日，据《华尔街日报》报道，有知情人士透露，爆红的<a href=\"https://www.infoq.cn/article/AWWsrfb54zTvglZ0I5qS\">聊天机器人ChatGPT</a>\"背后的研究实验室OpenAI正在谈判以收购要约的形式出售现有股份，交易对该公司的估值达到290亿美元左右，使其在没有什么收入的情况下成为账面上最值钱的美国初创公司之一。</p><p>&nbsp;</p><p>这些知情人士说，风投公司Thrive Capital和Founders Fund正在商谈投资该笔交易，交易中出售的股票总额至少为3亿美元。这些知情人士说，这项交易将以要约收购的方式进行，投资者将从现有股东譬如员工的手中购买股份。</p><p>&nbsp;</p><p>这笔新的交易将使OpenAI的估值较2021年完成的要约收购增加大约一倍，《华尔街日报》当时报道，OpenAI在该笔交易中的估值约为140亿美元。OpenAI已经产生了数千万美元的收入，部分来自于向开发者出售其人工智能软件，但一些投资者对于该公司能否从这项技术中获得有意义的收入表示怀疑。</p><p>&nbsp;</p><p>这个可以通过文本和图像与用户交谈的聊天机器人迅速走红，并在五天内获得了超过100万的用户。一位知情人士透露称，有关 <a href=\"https://www.infoq.cn/article/Rsk9FJE3Nk4U1Yc3KhKO\">OpenAI </a>\"收购要约的讨论正在进行中，目前尚未达成最终交易，交易条款也可能发生变化。</p><p></p><h2>OpenAI称2024年营收将达到10亿美元，投资者表示质疑</h2><p></p><p>&nbsp;</p><p>尽管一些投资者对OpenAI的收益问题提出了质疑，但在刚刚过去的去年年底，OpenAI还是给投资者送了一剂“定心丸”。据三位知情者透露，OpenAI向投资者表示，预计2023年营收将会达到2亿美元，2024年将达到10亿美元。一位知情者称，OpenAI在去年12月下旬曾二次发售股票，公司估值达到200亿美元。</p><p>&nbsp;</p><p>在OpenAI的引领下，一些竞争对手和企业利用OpenAI开发的<a href=\"https://www.infoq.cn/article/k1EU1cHr1FflCxRuATtv\">生成式AI软件</a>\"制作应用。使用OpenAI技术需要获得授权，拿到授权要付费，一美分或者稍多能生成2万单词的文本，按照书面提示生成一张图片大约要2美分。</p><p>&nbsp;</p><p>OpenAI新闻发言人拒绝谈论公司财务状况及策略。2020年OpenAI开始推出商用产品，它宣称自己的使命依然是为人类增强AI安全。</p><p>&nbsp;</p><p>Synthesia和Jasper等创业公司已经吸引《财富》500强企业使用它们的视频生成工具或者AI文案工具，Jasper引入了OpenAI技术。OpenAI有机会成为AI提供商，甚至有可能威胁谷歌搜索。</p><p></p><p>Jasper公司直接使用OpenAI技术，已经有8万名营销者使用Jasper软件，用它生成广告、邮件、博文及其它内容。Jasper增长很快，今年营收预计将会翻倍，达到8000万美元。</p><p>&nbsp;</p><p>今年年初时一些大型VC公司放弃了对OpenAI的投资，OpenAI配得上如此高的估值吗？真的可以和谷歌竞争吗？一些投资者对此表示怀疑。</p><p>&nbsp;</p><p>OpenAI在2019年时曾设定“有限盈利”（capped-profit）架构，对VC投资做出限制。为了守护使命，OpenAI规定投资者的回报不能超过投资金额的100倍。</p><p></p><h2>微软“押宝”ChatGPT，要和谷歌“抢地盘”</h2><p></p><p>&nbsp;</p><p>尽管投资者对OpenAI的盈利能力持怀疑态度，但在技术层面，微软对OpenAI似乎很有信心，并已经加倍下注。</p><p>&nbsp;</p><p>据 Information 本周二报道，<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247556939&amp;idx=2&amp;sn=c7661342e1b577fd05ad999d74ef03a4&amp;chksm=fbeaa684cc9d2f92d81224399dbf1603478d9a9b65a71754c76f5ddbc2c43760506bb7ccc15c&amp;scene=27#wechat_redirect\">微软公司于 2019 年向 OpenAI 投资</a>\"了 10 亿美元，该公司正在努力推出其搜索引擎 Bing 的一个版本，该版本使用现在流行的 ChatGPT 背后的人工智能。</p><p>&nbsp;</p><p>这位知情人士表示，微软相信，对于搜索用户来说，提供更具对话性和上下文回复，可以比链接提供更好的答案，从而赢得用户。微软可能在未来几个月内推出附加功能，但现在仍在权衡聊天机器人的准确性以及将其纳入搜索引擎的速度。该知情人士表示，最初的版本可能是对一小部分用户的有限测试。</p><p>&nbsp;</p><p>微软的 Bing 服务规模远小于 Alphabet Inc.占主导地位的谷歌搜索引擎，这位知情人士表示，微软几个月来一直在试用 ChatGPT。The Information 早些时候报道了微软的计划。</p><p>&nbsp;</p><p>与此同时，<a href=\"https://www.infoq.cn/article/lxDIGR1fQU5BRyH47mbe\">谷歌及其母公司</a>\" Alphabet 的首席执行官 Sundar Pichai 也在为谷歌做好准备以应对他所感知到的威胁。</p><p>&nbsp;</p><p>根据外媒报道， Pichai 参与了一系列探讨谷歌 AI 战略的会议，而且为了应对 ChatGPT 带来的威胁甚至推翻了内部众多团队的原有工作，并正在从其他部门抽调员工，以应对 ChatGPT 的威胁。谷歌的研究、信任与安全等部门和团队将进行组织重整，旨在帮助开发和发布新的 AI 原型和产品。</p><p>&nbsp;</p><p>未来会有更多企业拥抱AI，微软希望能借此东风拓展云业务。</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.reuters.com/markets/deals/chatgpt-creator-openai-talks-tender-offer-valuing-company-29-bln-wsj-2023-01-05/\">https://www.reuters.com/markets/deals/chatgpt-creator-openai-talks-tender-offer-valuing-company-29-bln-wsj-2023-01-05/</a>\"</p><p><a href=\"https://www.ft.com/content/10aadb2b-bd02-417d-ae34-8f162ad31dff\">https://www.ft.com/content/10aadb2b-bd02-417d-ae34-8f162ad31dff</a>\"</p>",
    "publish_time": "2023-01-06 14:20:15",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "论坛预告 | 1月9日举办2023 ICT深度观察政企数字化转型分论坛",
    "url": "https://www.infoq.cn/article/6d18bb25abba45707c1fd5724",
    "summary": "<p></p><blockquote>ICT深度观察报告会是中国信通院每年举办的成果汇报会，自2009第一次举办到2023年已举办了13届，本次为第14届。“政企数字化转型分论坛”作为平行论坛之一，将于1月9日上午9:00在线上举办。</blockquote><p></p><p></p><p>自2020年9月开始，中国信息通信研究院（以下简称“中国信通院”），云计算与大数据研究所就在积极探索以标准的形式来指导和引领政企数字化转型，彼时发布了作为整体数字化转型方法论的《企业数字化成熟度模型IOMM标准》。经过2年发展，当下数字经济与实体经济正在加速融合，新技术与新挑战不断涌现，数字化转型也逐渐进入深水区，需要更深入、更全面、更精细的方向指引。</p><p>&nbsp;</p><p>基于此背景，本次“政企数字化转型分论坛”将以体系化的形式，发布并解读多项企业数字化成熟度模型IOMM标准最新内容，同时邀请多位行业深度参与者对当下数字化转型的热议领域展开讨论，3大亮点集中呈现：</p><p></p><p>亮点1：多项数字化转型成果重磅发布</p><p>数字化转型经过多年发展，已踏入深水区，企业需要更全面、更体系化的方法论来规划和引导数字化转型发展，不同规模的企业对于数字化转型的需求也大为不同，大企业更加关心顶层设计与全局落地方案，而中小企业则更多关注落地抓手，如很多中小企业以数字化营销作为转型切入点；同时在转型过程中越来越多的企业希望与标杆企业对标。为此在本论坛中将重磅发布如下成果：</p><p><img src=\"https://static001.geekbang.org/infoq/c2/c24831c654c6ebdc211caf189bde7c06.png\" /></p><p>发布企业整体视角的《企业数字化成熟度模型IOMM标准》来提供更加全面的方法指引；针对中小企业转型的特色和痛点，发布中小企业版《企业数字化成熟度模型IOMM标准》；发布《“鼎新杯”数字化转型应用案例汇编》为企业数字化转型提供更多对标参考案例。</p><p></p><p>亮点2：多项数字化标准权威解读及实践分享</p><p>在本论坛中，不仅仅发布转型成果，还将对以上发布的成果进行权威细致的解读，包括在企业整体视角层面以及中小企业层面的数字化转型6大能力建设，6大价值评估体系及5级成熟度模型，以便不同规模企业对转型方法论核心要义进行整体把握。同时，针对政企数字化转型密切相关的各领域，如业务数字化转型，数字化平台建设，云边端一体化标准以及数字政府等领域分享最新趋势及相关实践。</p><p><img src=\"https://static001.geekbang.org/infoq/63/631f2322c8e3ebb4200e64e08bed88aa.png\" /></p><p></p><p>亮点3：多轮圆桌对话探讨时下转型热点方向</p><p>在本次论坛中，不单以标准视角阐述数字化转型的方法论和实践，同时也邀请了行业中极具代表性的企业从产业视角对政企数字化转型涉及的相关热点领域展开深入探讨，讨论的议题包括《数字时代下的流程变革创新》、《数字化平台，数字化赋能》以及《云数共生，助力数字政府创新发展》等，参与讨论的企业代表既有来自联通、移动、电信等的运营商企业，也有来自阿里云、金蝶、浪潮云、中国电子云、神州泰岳等技术平台型企业，同时也有来自德勤、IBM等外资企业，期待能为大家带来精彩的观点碰撞。</p><p><img src=\"https://static001.geekbang.org/infoq/6d/6d6c27167ac973ca9d6d79e403344496.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8c/8c817d3d641b3fa6902a995faab85ba1.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3a/3ac44ebd5825c0a6aa3f2adccc520bd5.jpeg\" /></p><p></p><p>数启新征程，转型更当时，让我们共同期待1月9日上午9:00“政企数字化转型分论坛”的精彩内容。</p><p>&nbsp;</p><p>会议议程如下，期待您的参与！</p><p><img src=\"https://static001.geekbang.org/infoq/5e/5ebb64fbf62c6f7ac4d4415fd768e546.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5f/5f8503c3b1f32f2c02a0e8fe1b372df5.jpeg\" /></p><p></p><p></p>",
    "publish_time": "2023-01-06 06:41:46",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "沙龙预告 | 1月11日举办数字化业务安全生产沙龙第2期",
    "url": "https://www.infoq.cn/article/add2bcea669d98025d85830d2",
    "summary": "<p>并不乐观的数字化业务安全生产现状</p><p>数字化时代，信息系统正在逐渐成为企业乃至整个社会的基础设施，任何类型的设备宕机、系统瘫痪、网络故障等安全生产事件都有可能导致业务停摆，轻则影响业务使用和用户体验，重则给企业和用户带来巨大损失，甚至危及民生。</p><p>2021年6月，美国云计算公司Fastly出现长达1小时的服务故障，导致全球数千家政府、网站受到影响；2021年7月，国外多家银行、航空、政府、新闻机构的系统受DNS故障影响无法正常服务；2021年10月，Facebook发生全球性宕机，宕机时间超过6个小时，同周周五，再次出现约2个小时的宕机；2021年12月，西安健康码在全市全员核酸检测的需求下崩溃了，导致公众生活受到极大影响；2022年5月，某证据交易系统宕机，影响股民正常交易；2022年12月，某云服务商的服务中断事件，导致多个关键机构的网站、平台无法访问使用；</p><p></p><p>为此，企业及社会各方，在采用多种新型技术实现效率与效益提升的同时，如将业务部署在云上，引入大数据，人工智能等新兴技术；也要将如何保障数字化业务安全生产息息相关的连续性、安全性、稳定性等作为头等大事。而不断与行业交流并汲取行业最佳实践，是有效提升自身安全生产能力的重要途径。</p><p></p><p>群策群力，推进数字化业务安全生产</p><p>为进一步响应国家关于安全生产工作的号召，中国信息通信研究院（以下简称“中国信通院”）与合作伙伴达成共识，联合各方在企业数字化发展共建共享平台（EDCC）下成立“数字化业务安全生产推进中心”，旨在凝聚各方力量，整合优质资源，开展技术攻关，完善标准体系，提升企业数字化业务连续性，增强企业数字化安全生产能力。数字化业务安全生产推进中心自成立以来已聚集20家行业龙头企业和25名行业资深专家，围绕数字化业务安全生产输出多项标准，陆续发布《基于云计算的数字化业务通用安全工程要求》（行标报批）、《数字化业务应用运维平台》（团标已发布）等多项成果，同时支撑了工信部信管局联合中国信通院组织开展的“云服务稳定安全运行应急演练专项活动”。</p><p></p><p>第2期数字化业务安全生产沙龙聚焦“业务连续性”</p><p>1月11日14:00，将线上举办 “数字化业务安全生产，创新业务连续性管理”第2期主题沙龙并全程直播。本次沙龙将公布第三批数字化业务安全生产推进中心成员单位和技术专家、发布2022年度数字化业务安全生产推进中心突出贡献技术专家，并邀请业内权威专家分享数字化业务安全生产的最新实践经验，共同探寻保障数字化业务连续性的新路径，亮点如下：</p><p></p><p>亮点一：发布及解读数字化安全生产系列最新标准</p><p>2022年数字化业务安全生产推进中心对各行业企业数字化安全生产工作展开研究，深入调研企业数字化业务安全生产现状和短板，形成数字化安全生产治理相关最新标准，本次沙龙将进行发布并解读：</p><p>《可信数字化服务能力要求：数字化安全生产平台》《可信数字化服务能力要求：基于CMDB的数字化全链路端到端监控平台》《云服务稳定运行故障分类分级》《云服务稳定运行要求：应急响应规范》《云服务稳定运行要求：应急管理平台</p><p></p><p>亮点二：行业资深专家分享数字化业务安全生产最佳实践</p><p>本次沙龙邀请到来自浦发银行、中国联通软件研究院、中电信数智科技有限公司、广州嘉为科技有限公司、北京同创永益科技发展有限公司的资深专家，围绕“数字化业务安全生产，创新业务连续性管理”主题，带来数字化业务安全生产在各自领域内的最佳实践。</p><p></p><p>亮点三：公布第三批数字化安全生产推进中心成员单位及专家</p><p>“数字化业务安全生产推进中心”已汇聚了20家行业龙头企业和25名行业资深专家，并输出了多项数字化业务安全生产标准，为推动我国数字化业务安全健康发展做出了贡献。本次沙龙中，将公布新加入的6家成员单位和技术专家名单。</p><p></p><p>亮点四：公布2022年数字化业务安全生产推进中心突出贡献专家</p><p>“数字化业务安全生产推进中心”自成立以来，相关单位和专家围绕数字化业务安全生产在标准制定、评估测试、技术研究等方面输出宝贵经验与成果。为感谢专家在2022年度对数字化业务安全生产推进中心的突出贡献，本次沙龙中将公布2022年度数字业务安全生产推进中心突出贡献专家名单。</p><p></p><p>沙龙议程及直播链接如下，期待您的参与！</p><p><img src=\"https://static001.geekbang.org/infoq/fc/fc9a0526c986634245672e03886dde1f.jpeg\" /></p><p></p><p>活动联系人：吴佳琦 18352634685 wujiaqi@caict.ac.cn</p>",
    "publish_time": "2023-01-06 06:56:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "国产金融级分布式数据库在金融核心场景的探索实践",
    "url": "https://www.infoq.cn/article/zr63g3IH0dA3oghNX5UT",
    "summary": "<p>本文整理自腾讯云数据库资深解决方案架构师贾瓅园在 DIVE 全球基础软件创新大会 2022 的演讲分享。</p><p></p><p>以下为贾瓅园演讲的精华内容，经编辑。</p><p></p><p>国内行业 IT 系统中，数据库领域长期被国外产品垄断，国内云计算厂商基于云计算带来的架构升级，以及产业互联网数字化实践，引领了新一代分布式云数据库技术与实践突破。</p><p></p><p>从金融级场景到传统金融核心系统场景，在云化的技术浪潮下，国产分布式数据库得以在对数据库最高要求的金融行业实现应用，并逐步拓展至政务、运营商、工业制造等，逐步支撑国民经济对数据库的国产化与数字化转型升级需求。</p><p></p><p>腾讯云数据库 TDSQL 正是走过了这样的历程，在技术突破，到支持客户转型实践过程中，积累了丰富的解决方案与实践经验。本次分享，将围绕“国产金融级分布式数据库在金融核心场景的探索实践”，探讨行业内的经验方案，以及展望未来前沿的探索与实践方向。</p><p></p><p></p><h2>回归本源，是什么驱动力促进金融核心场景分布式数据库发展？</h2><p></p><p>一方面是国家机构、监管机构给出的政策及指引，2021 年末，中国人民银行基于“十四五”规划发布了金融科技的发展规划，2022 年初银保监会发布了银行业、保险业的数字化转型指导意见，个人总结为三个词：安全、发展、创新。</p><p></p><p>第二方面是金融业务的发展对于技术架构的要求，银行业务与需求发展背景下，技术要求、技术多样性、功能细化性、架构复杂度、管理等维度的要求也逐级提高。</p><p></p><p>第三方面，金融业系统技术与架构的趋势之下所衍生的数据库要求、自主可控的软硬件要求等。</p><p></p><p>我们当下处在分布式数据库的快速发展过程当中，既要契合金融场景专业特性，技术上也要适配外部环境与生态以及通用性，面临着从技术角度、从公司实力角度、从数据库研发角度的多维度挑战。</p><p></p><p></p><h2>分布式数据库在金融领域的挑战与痛点</h2><p></p><p>金融架构里面的挑战维度有哪些？</p><p></p><p>第一是设计、规划、解决方案能力，相对于新事物，需要行业多方面的接受过程，这个时期国产分布式数据库不能像传统数据库，而是需要更贴合于业务场景和行业特性并抽象和分析使用特点，衍生变化为数据库通用特性和功能，更方便地让金融客户以及开发厂商使用。</p><p></p><p>第二方面是扩展能力，包括横向和纵向的扩展能力。</p><p></p><p>第三方面是稳定性和性能，围绕这个维度又衍生了广播表、单表、事务等功能与解决方案。</p><p></p><p>第四方面是高可用性，满足监管要求和行业特点，支持多中心多活、故障切换等方式。</p><p></p><p>第五方面是软硬件兼容性要求，我们正在使用的领域有自主可控软硬件、虚拟化、云化等基础底座。</p><p></p><p>分布式数据库在金融业务领域又面临哪些难点呢？</p><p></p><p>第一是保证业务系统兼容性，降低改造和引发的风险，比如关键字、函数、语法，甚至常规业务系统使用的软件驱动。</p><p></p><p>第二是迁移同步的方案与功能，这个往往在金融场景下容易被忽略掉，需要考虑异构迁移工具、方案，考虑如何处理业务场景数据同步、高可用要求下的数据同步。</p><p></p><p>第三是运维体系，分布式体系下特性带来的管控维度较多，因此可视化、智能化的管理平台和工具尤为重要，同时也要覆盖黑屏命令工具、监控工具等，匹配 DBA 使用习惯。</p><p></p><p>第四是服务与交付，分布式数据库还处在一个发展和高速迭代过程中，那么如何来契合金融场景设计特点与复杂度，都对人员能力、交付提供了更新的要求，当下走的路线应该既与金融行业系统开发厂商不同，又与传统数据库厂商不同。</p><p></p><p>第五是生态建设，这涉及到共享知识库如何建立、检索、查阅，社区如何运营、认证培训如何开展更有助于生态合作。</p><p></p><p>总结来说，分布式数据金融领域落地不仅仅是技术与产品力的考验，也是考验着金融场景理解能力、金融运转体系理解能力与设计能力等。</p><p></p><p></p><h2>金融级架构探索、思考与实践</h2><p></p><p>架构体系如何支撑金融核心业务发展和合规? 我们一直在探索和积累，来支撑金融级分布式的架构体系，以满足监管合规的要求，完整的实现自主可控，并契合金融核心的特点。</p><p></p><p>我们满足了金融级的“四高两低”的要求，包括未来都是以此为原则基础。并且实现了多内核。为什么要多内核？在金融银行业中，不同的金融业务场景，不同的分布式业务架构需求，以及每家银行的建设因素不同、系统历史遗留问题原因不同、系统的 AP/TP 属性等综合多方面和实践经验，因此必须要有多内核的兼容性来保障新旧数据库转换能力，保证业务系统能够平滑下移。</p><p></p><p>另外，贴近开发，解决“开发不规范，调优困难”的问题。契合金融业运维模式，解决“诊断难、维护难、时效长”的问题。同时也要考虑不单一绑定某一技术形态，采用兼容通用协议的技术形态，降低从业者的学习难度。</p><p></p><p></p><h2>业务系统兼容性探索</h2><p></p><p>在做业务系统兼容性探索时，要注意系统背景、特点、场景的不同，不能“通吃”，应按不同类型、不同纬度进行兼容适配，并考虑系统业务与当前的架构现状。</p><p></p><p>例如：我们按照金融银行业系统传统分类标准做了梳理和归纳，它们都有各自的特点以及兼容思路和技术诉求。</p><p></p><p>在语法与开发兼容性方面，我们通常关注：</p><p>数据结构梳理: 访问频度、数据量、关联关系、分片依据、水平垂直分库设计规则基础数据类型: 字段数据类型归纳，不兼容类型采用工具化配置转换对象使用: 存储过程、视图、非标准函数使用分析，与业务系统配合调整SQL 执行对象: 索引、函数、锁、大查询、大事务分析与调整数据库基础集成层面: 会话保持、链接池参数、探活机制、驱动设置</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c5/c546ac3b98f0abf34a0d6cd8953b6696.jpeg\" /></p><p></p><p></p><h3>数据迁移与同步的兼容和实践</h3><p></p><p>业务 场景数据迁移与异构数据库迁移项结合，数据库须具备异构库数据迁移能力，不同的数据迁移同步场景有着各自的关注点：</p><p></p><p>异构业务系统迁移场景：</p><p>业务逻辑复杂、数据业务关联度高适用定制化的业务数据迁移程序与方案并配合数据库工具，进行数据迁移</p><p></p><p>异构对抽迁移场景：</p><p>业务逻辑关联少，数据量大, 增量 / 全量数据迁移适用数据库提供异构库迁移工具进行数据的迁移</p><p></p><p>业务迁移与异构库结合场景：</p><p>兼具两种场景特点采用组合迁移方案，满足异构业务系统 + 异构数据库数据迁移</p><p></p><p>在贴源数据同步实践中，各场景的关注点如下：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9c/9c5fe5c24e775c07f9ca31583be40ba0.jpeg\" /></p><p></p><p></p><p></p><h3>运维架构探索与实践</h3><p></p><p>从运维角度来看，架构特性从最早的字符界面端到图形化、智能化运维发展迭代，字符界面操作上手速度快，但具有高度依赖人工、管理流程复杂、成本高、容错低、风险高等特点。图形化运维实现了工具化，降低了容错风险和管理成本，而智能化运维更进一步实现了风险预警、主动探测和提前预知，让运维从被动变主动。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/29/29465b9dfb80bd6cfe016ce7573b8add.jpeg\" /></p><p></p><p></p><h3>探索实践新的实施与服务模式</h3><p></p><p>大多数的开发人员、技术人员都具备一定程度的传统数据库的知识、开发经验和体系，基于系统的成熟稳定，技术的共识性实施角度不存在什么太多的问题。因此传统成熟的数据库厂商在经历了众多行业的积累后不断打磨，已走出了一条成熟的实施道路，即关键节点保障型。面向客户时技术团队基本上是以 DBA/ 架构师 1v1，或 1v 多的模式，不需要完整周期跟进实施全流程。</p><p></p><p>金融软件的开发厂商聚焦业务系统，这类型厂商为什么走的是需求差异化的路线，原因是业务通用性的同时每家银行的需求不同，业务复杂度不同，涉及每家银行技术架构、厂商特点也不同，导致了整体相关的工作，都需要在银行整体组织下进行大规模的完整周期实施和调整。所以团队有技术架构、DBA、业务专家、项目管理以及开发，基本上团队是一个 1v1 的模式，全周期保证。</p><p></p><p>基于我们多年的研发、实施经验来讲，当下兼容和融合以上两种相对比较好，既保障了数据库的交付与落地，同时兼顾成本和投入，以及经验回归和产品打磨。</p><p></p><p>具体的方法论而言，总结大致为：第一，帮助金融行业的客户将数据库融入到行业架构规划中，既然能够协助更好地理解知识体系，也能够为金融客户未来的数据库使用奠定基础。第二，跟进常规的 IT 系统建设，总结系统使用数据库的特点特性。第三，在设计交付之初，我们就考虑到兼容对应的业务性特点来进行分片、运营模式、数据吞吐量设计、数据节点等统筹安排。第四，有别于传统的数据库厂商，我们配备了行业架构师、数据库架构师以及 DBA 等角色来共同完成项目。这样兼顾了数据库以往的交付与服务模式，同时也兼顾了行业的特点，也包含成本管控以及诉求。</p><p></p><p></p><h3>生态建设</h3><p></p><p>高校、合作机构、金融 IT 同业、金融客户等，对当前分布式数据库都有一定的深入了解，但认知程度暂时达不到传统数据库所积累的程度，因此需要我们在数据库层面不停深入建设共享知识体系，包含社区、生态合作、培训等体系。</p><p></p><p>一、这个生态里面不只我们自己，包括分布式数据库领域的众多厂商、金融 IT 开发厂商，实践方案、调优指南、使用指南、技巧经验、系统兼容经验、金融系统运维等丰富到整个金融实践体系中。</p><p></p><p>二、增强社区广度和深度，聚集于碎片化问题解决、学习笔记、金融场景特点优化，开办技术论坛，让众多的行业以及未来有潜力从事这个行业的人才能够加入到其中。</p><p></p><p>三、深入生态合作，与学术研究机构、信创基础软硬件厂商、金融软件同业、金融客户合作，推进一些相关的标准甚至研发体系，进行产能体系的升级。</p><p></p><p>四、认证培训添加，联合第三方进行金融客户服务中知识转移、技术认证模式，通过认证培训普及常规知识，为未来金融 IT 领域人才储备夯实基础。</p><p></p><h2>建设模式探索与实践</h2><p></p><p>聚焦到建设模式共分为两类，一是关键系统 / 模块下移模式，二是业务系统升级 / 建设模式。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8b9dd5103326a3b76f265f7bfc8374d.png\" /></p><p></p><p>关键系统 / 模块下移模式实际是把整体分了 N 个阶段来做，并不是一次完成。这种模式具有很多优点，包括低成本、风险比较低，并且是循序渐进的。但对于系统的规划、建设周期布局以及管控能力要求较高。</p><p></p><p>分布式数据库要满足“四高两低”的要求，即高可用、高一致性、高扩展、高性能、低成本、低风险。从产品选型到适配业务，原则上必须要保证数据库兼容业务系统，相对来说业务结构要清晰，数据结构容易梳理、系统维护技术能力要强。</p><p></p><p>在基础适配压测阶段，重点是语义语法、业务使用场景和问题的筛选。在业务系统适配验证阶段，重点是联机业务，批量业务，供数、同步类业务，验证“四高两低”。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/bc/bc24daff00232c8ee9a56cc0d18a716a.png\" /></p><p></p><p>业务系统升级 / 建设模式其实相对来说容易一些。因为系统升级自然面临新系统的变化改造，通过开发设计过程，匹配数据库特性，没有历史包袱。此类模式对于管控能力的要求相对会低。</p><p></p><p>总体而言，从投入成本、核心能力、服务能力来讲，对厂商、银行也会有一定挑战。这些挑战主要集中在升级与适配、系统的架构设计、UAT 测试与基础底座验证、工具化与数据移植、切换投产演练等方面。</p><p></p><h2>未来挑战与探索思考</h2><p></p><p>将来，我们认为金融领域分布数据库仍然需要不断地面对挑战和打磨。</p><p></p><p>第一个是分布式事务的业务场景，当下我们能够保证分布式数据库的事务处理能力，能保证全金融业务场景，但我们也在不断地努力，探索将来按照分类去做一些实践研发工作，探索如何通过数据库解决事务场景，降低应用的复杂度。</p><p></p><p>第二是随着外部环境的发展，数据库不断提升兼容生态能力。</p><p></p><p>第三是全打包的金融级解决方案，符合金融级监管要求的同时，满足客户的个性化特点，最终走向多对一的、统一的数据库产品。</p><p></p><p>未来数据库时代，云原生数据库发展也在不断进行当中。云时代的特点是 IT 设施从零散走向集中化、规模化，交付方式从软件交付走向服务标准交付，开发方式从底层 (laaS+PaaS) 走向上层 (SaaS)，数据形式及应用场景从单一化走向多样化。</p><p></p><p>在这样的云时代的背景下，数据库将来要做到单一引擎极致化、多引擎统一智能管控融合、以及 DBaaS 形态在行业应用的探索。</p><p></p><h5>讲师介绍：</h5><p></p><p>贾瓅园 ，腾讯云数据库资深解决方案架构师。15 年金融银行 IT 工作经验，先后经历和主导国内多家银行核心系统架构设计与建设，长期从事银行核心业务系统、分布式技术架构、云原生、信创相关技术工作，现为腾讯云数据库团队行业架构专家，从事金融领域数据库赋能、行业架构设计相关工作。</p><p></p><p></p><h5>相关阅读：</h5><p></p><p><a href=\"https://xie.infoq.cn/article/4144a7c2fddde56e661b2b570\">必修课！深度解析金融级分布式数据库一致性技术</a>\"</p><p></p><p><a href=\"https://xie.infoq.cn/article/b392e5121441c50fe28c75402\">惊爆 GitHub！腾讯 T14 级 SQL 首席专家开源分布式数据库架构实践手册</a>\"</p><p></p><p><a href=\"https://xie.infoq.cn/article/4f6371ea04106f4ab8001509b\">GitHub 典藏版！腾讯 T14 级牛人亲码的分布式数据库实践，再次爆火</a>\"</p><p></p><p><a href=\"https://xie.infoq.cn/article/f85f4512c23fdd622557b4f82\">分布式数据库九大发展趋势｜文末附完整报告下载</a>\"</p>",
    "publish_time": "2023-01-06 14:45:21",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "快速构造String对象及访问其内部成员的技巧",
    "url": "https://www.infoq.cn/article/21c5b7bf1f6188bf561aeb19f",
    "summary": "<p>作者：温绍锦   阿里云计算平台团队</p><p></p><p></p><h1>一、相关知识JDK String的实现</h1><p></p><p></p><p>字符串在JDK 8及JDK 9之后的实现有很大不同的。JDK 8中，String的结构是这样的：</p><p></p><p></p><h2>1.1 String JDK 8的实现</h2><p></p><p></p><p><code lang=\"text\">class String {\n    char[] value;\n\n    // 构造函数会拷贝\n    public String(char value[]) {\n        this.value = Arrays.copyOf(value, value.length);\n    }\n\n    // 无拷贝构造函数\n    String(char[] value, boolean share) {\n        // assert share : \"unshared not supported\";\n        this.value = value;\n    }\n}</code></p><p></p><p></p><h2>1.2 String JDK 9及之后版本的实现</h2><p></p><p></p><p><code lang=\"text\">class String {\n    static final byte LATIN1 = 0;\n    static final byte UTF16  = 1;\n    \n    byte code;\n    byte[] value;\n\n    // 无拷贝构造函数\n    String(byte[] value, byte coder) {\n        this.value = value;\n        this.coder = coder;\n    }\n}</code></p><p></p><p>JDK9之后，通过byte[]来保存value，通过code字段区分是LATIN1或者UTF16。大多数的字符串都是LATIN1。针对这种情况，我们构造字符串或者对字符串进行编码为二进制时，针对性做ZeroCopy的实现，可以获得极致的性能。</p><p></p><p></p><h1>二、相关知识Unsafe</h1><p></p><p></p><p>JDK 8之后提供sun.Unsafe可以做一些原生的操作，性能更好，不安全，错误的调用会导致JVM Crash。如果用对了，能提升性能。Unsafe能帮你绕过任何限制。</p><p></p><p><code lang=\"text\">public class UnsafeUtils {\n    public static final Unsafe UNSAFE;\n    \n    static {\n        Unsafe unsafe = null;\n        try {\n            Field theUnsafeField = Unsafe.class.getDeclaredField(\"theUnsafe\");\n            theUnsafeField.setAccessible(true);\n            unsafe = (Unsafe) theUnsafeField.get(null);\n        } catch (Throwable ignored) {\n            // ignored\n        }\n        UNSAFE = unsafe;\n    }\n}</code></p><p></p><p></p><h1>三、相关知识Trusted MethodHandles.Lookup</h1><p></p><p></p><p>JDK 8开始支持Lambda，为了方便将一个Method映射为一个Lambda Function，避免反射开销。java.invoke.LambdaMetafactory可以实现这一功能，但这个也受限于可见性的限制，也就是说不能调用私有方法。有一个技巧，结合Unsafe，可以在不同版本的JDK都能构造一个Trusted MethodHandles.Lookup来绕开可见性的限制，调用任何JDK内部方法。如下：</p><p></p><p><code lang=\"text\">import static com.alibaba.fastjson2.util.UnsafeUtils.UNSAFE;\n\nstatic final MethodHandles.Lookup IMPL_LOOKUP;\n\nstatic {\n    Class lookupClass = MethodHandles.Lookup.class;\n    Field implLookup = lookupClass.getDeclaredField(\"IMPL_LOOKUP\");\n    long fieldOffset = UNSAFE.staticFieldOffset(implLookup);\n    IMPL_LOOKUP = (MethodHandles.Lookup) UNSAFE.getObject(lookupClass, fieldOffset);\n}\n\nstatic MethodHandles.Lookup trustedLookup(Class objectClass) throws Exception {\n    return IMPL_LOOKUP.in(objectClass);\n}</code></p><p></p><p>注意：在IBM OpenJ9 JDK 8/11版本上面的实现受到可见性限制，需要做额外处理，参考FASTJSON2 JDKUtils#trustedLookup的代码 ：</p><p></p><p>https://github.com/alibaba/fastjson2/blob/fastcode_demo_20221218/core/src/main/java/com/alibaba/fastjson2/util/JDKUtils.java#L254</p><p></p><p></p><h1>四、零拷贝构造String对象</h1><p></p><p></p><p>快速构造字符串的关键是要做减少拷贝，甚至零拷贝，在JDK 8、JDK 9~15、JDK 16及之后的版本的实现都不一样。</p><p></p><p></p><h2>4.1 JDK 8零拷贝构造String对象的实现</h2><p></p><p></p><p>在JDK8中，实现零拷贝构造String对象，需要调用其构造函数String(char[], boolean)，比如：</p><p></p><p><code lang=\"text\">BiFunction  stringCreatorJDK8\n    = (char[] value, boolean share) -&gt; new String(chars, boolean);</code></p><p></p><p>由于String(char[], boolean)方法不是public的，上面的代码会报错，要通过反射构造一个TRUSTED的MethodHandles.Lookup，然调用String的内部方法，映射成一个BiFunction，代码如下：</p><p></p><p><code lang=\"text\">import com.alibaba.fastjson2.util.JDKUtils;\n\nimport java.util.function.BiFunction;\nimport java.lang.invoke.MethodHandles;\nimport static java.lang.invoke.MethodType.methodType;\n\nMethodHandles.Lookup caller = JDKUtils.trustedLookup(String.class);\n\nMethodHandle handle = caller.findConstructor(\n        String.class, \n        methodType(void.class, char[].class, boolean.class)\n);\n\nCallSite callSite = LambdaMetafactory.metafactory(\n        caller,\n        \"apply\",\n        methodType(BiFunction.class),\n        methodType(Object.class, Object.class, Object.class),\n        handle,\n        methodType(String.class, char[].class, boolean.class)\n);\nBiFunction  STRING_CREATOR_JDK8 \n    = (BiFunction) \n      callSite.getTarget().invokeExact();</code></p><p></p><p></p><h2>4.2 JDK9及之后版本实现零拷贝构造String对象的实现</h2><p></p><p></p><p>在JDK 9~JDK 15中，我们要构造一个这样的Function用于零拷贝构造String对象：</p><p></p><p><code lang=\"text\">BiFunction STRING_CREATOR_JDK11 \n    = (byte[] value, byte coder) -&gt; new String(value, coder);</code></p><p></p><p>同样，JDK 9中的String(byte[], byte)方法不是public，无法直接调用，上面的代码会报错，要构造一个TRUSTED MethodHandles.Lookup方法调用String内部方法，如下：</p><p></p><p><code lang=\"text\">import com.alibaba.fastjson2.util.JDKUtils;\nimport static java.lang.invoke.MethodType.methodType;\n\nMethodHandles.Lookup caller = JDKUtils.trustedLookup(String.class);\nMethodHandle handle = caller.findConstructor(\n        String.class, \n        methodType(void.class, byte[].class, byte.class)\n);\nCallSite callSite = LambdaMetafactory.metafactory(\n        caller,\n        \"apply\",\n        methodType(BiFunction.class),\n        methodType(Object.class, Object.class, Object.class),\n        handle,\n        methodType(String.class, byte[].class, Byte.class)\n);\nBiFunction STRING_CREATOR_JDK11 \n    = (BiFunction) \n      callSite.getTarget().invokeExact();</code></p><p></p><p>注意：当用户配置JVM参数-XX:-CompactStrings时，上述方法无效。</p><p></p><p></p><h2>4.3 快速构造String对象应用举例</h2><p></p><p></p><p><code lang=\"text\">stiatic BiFunction  STRING_CREATOR_JDK8 = ...\nstatic BiFunction STRING_CREATOR_JDK11 = ... \n\nstatic String formatYYYYMMDD(LocalDate date) {\n    int year = date.getYear();\n    int month = date.getMonthValue();\n    int dayOfMonth = date.getDayOfMonth();\n\n    int y0 = year / 1000 + '0';\n    int y1 = (year / 100) % 10 + '0';\n    int y2 = (year / 10) % 10 + '0';\n    int y3 = year % 10 + '0';\n    int m0 = month / 10 + '0';\n    int m1 = month % 10 + '0';\n    int d0 = dayOfMonth / 10 + '0';\n    int d1 = dayOfMonth % 10 + '0';\n\n    String str;\n    if (STRING_CREATOR_JDK11 != null) {\n        byte[] bytes = new byte[10];\n        bytes[0] = (byte) y0;\n        bytes[1] = (byte) y1;\n        bytes[2] = (byte) y2;\n        bytes[3] = (byte) y3;\n        bytes[4] = '-';\n        bytes[5] = (byte) m0;\n        bytes[6] = (byte) m1;\n        bytes[7] = '-';\n        bytes[8] = (byte) d0;\n        bytes[9] = (byte) d1;\n        str = STRING_CREATOR_JDK11.apply(bytes, JDKUtils.LATIN1);\n    } else {\n        char[] chars = new char[10];\n        chars[0] = (char) y1;\n        chars[1] = (char) y2;\n        chars[2] = (char) y3;\n        chars[3] = (char) y4;\n        chars[4] = '-';\n        chars[5] = (char) m0;\n        chars[6] = (char) m1;\n        chars[7] = '-';\n        chars[8] = (char) d0;\n        chars[9] = (char) d1;\n\n        if (STRING_CREATOR_JDK8 != null) {\n            str = STRING_CREATOR_JDK8.apply(chars, Boolean.TRUE);\n        } else {\n            str = new String(chars);\n        }\n    }\n    return str;\n}</code></p><p></p><p>上面的例子中，根据JDK版本，在JDK 8中直接创建char[]，JDK 9中直接创建byte[]，然后通过零拷贝的方式构造字符串对象，这样就实现了快速格式化LocalDate到String，这样的实现远比使用SimpleDateFormat/java.time.DateTimeFormat等实现要快得多。</p><p></p><p></p><h1>五、直接访问String对象内部成员</h1><p></p><p></p><p></p><h2>5.1 JDK 8快速访问value</h2><p></p><p></p><p><code lang=\"text\">static final Field FIELD_STRING_VALUE;\nstatic final long FIELD_STRING_VALUE_OFFSET;\n\nstatic {\n    Field field = null;\n    long fieldOffset = -1;\n    try {\n        field = String.class.getDeclaredField(\"value\");\n        fieldOffset = UnsafeUtils.objectFieldOffset(field);\n    } catch (Exception ignored) {\n        FIELD_STRING_ERROR = true;\n    }\n\n    FIELD_STRING_VALUE = field;\n    FIELD_STRING_VALUE_OFFSET = fieldOffset;\n}\n\npublic static char[] getCharArray(String str) {\n    if (!FIELD_STRING_ERROR) {\n        try {\n            return (char[]) UnsafeUtils.UNSAFE.getObject(\n                str, \n                FIELD_STRING_VALUE_OFFSET\n            );\n        } catch (Exception ignored) {\n            FIELD_STRING_ERROR = true;\n        }\n    }\n\n    return str.toCharArray();\n}</code></p><p></p><p></p><h2>5.2 JDK 9及之后版本直接访问coder &amp; value</h2><p></p><p></p><p>我们需要构造如下的函数：</p><p></p><p><code lang=\"text\">ToIntFunction stringCoder = (String str) -&gt; str.coder();\nFunction stringValue = (String str) -&gt; str.value();</code></p><p></p><p>但由于String.coder和value方法不是public可见的，和上面的4.2类似，要通过TRUSTED MethodHandles.Lookup构造，如下：</p><p></p><p><code lang=\"text\">import com.alibaba.fastjson2.util.JDKUtils;\nimport static java.lang.invoke.MethodType.methodType;\n\nMethodHandles.Lookup lookup = JDKUtils.trustedLookup(String.class);\nMethodHandle coder = lookup.findSpecial(\n        String.class,\n        \"coder\",\n        methodType(byte.class),\n        String.class\n);\nCallSite applyAsInt = LambdaMetafactory.metafactory(\n        lookup,\n        \"applyAsInt\",\n        methodType(ToIntFunction.class),\n        methodType(int.class, Object.class),\n        coder,\n        MethodType.methodType(byte.class, String.class)\n);\nToIntFunction STRING_CODER \n    = (ToIntFunction) applyAsInt.getTarget().invokeExact();\n\nMethodHandle value = lookup.findSpecial(\n        String.class,\n        \"value\",\n         methodType(byte[].class),\n        String.class\n);\nCallSite apply = LambdaMetafactory.metafactory(\n        lookup,\n        \"apply\",\n        methodType(Function.class),\n        methodType(Object.class, Object.class),\n        value,\n        methodType(byte[].class, String.class)\n);\nFunction STRING_VALUE \n     = (Function) apply.getTarget().invokeExact();</code></p><p></p><p></p><h2>5.3 直接访问举例</h2><p></p><p></p><p><code lang=\"text\">static Byte LATIN1 = 0;\nstatic ToIntFunction STRING_CODER = ...\nstatic Function STRING_VALUE ...\n\nbyte[] buf = ...;\nint off;\n\nvoid writeString(string str) {\n    if (STRING_CODER != null &amp;&amp; STRING_VALUE != null) {\n        // improved for JDK 9 LATIN1\n        int coder = stringCoder.apply(str);\n        if (coder == LATIN1) {\n            // str.getBytes(0, str.length, buf, off);\n            byte[] value = STRING_VALUE.apply(str);\n            System.arrayCopy(value, 0, buf, off, value.length);\n            return;\n        }\n    }\n    // normal logic\n}\n</code></p><p></p><p></p><h2>5.4 巧用String.getBytes方法</h2><p></p><p></p><p>String有一个Deprecated的getBytes方法，当有非LATIN字符时，结果不对。但当在coder为LATIN1时，可用于直接拷贝其中value。</p><p></p><p><code lang=\"text\">class String {\n    @Deprecated\n    public void getBytes(int srcBegin, int srcEnd, byte dst[], int dstBegin) {\n        int j = dstBegin;\n        int n = srcEnd;\n        int i = srcBegin;\n        char[] val = value;   /* avoid getfield opcode */\n\n        while (i &lt; n) {\n            dst[j++] = (byte)val[i++];\n        }\n    }\n}</code></p><p></p><p><code lang=\"text\">static Byte LATIN1 = 0;\nstatic ToIntFunction STRING_CODER = ...\n\nbyte[] buf = ...;\nint off;\n\nvoid writeString(string str) {\n    if (STRING_CODER != null) {\n        // improved for JDK 9 LATIN1\n        int coder = STRING_CODER.apply(str);\n        if (coder == LATIN1) {\n            str.getBytes(0, str.length, buf, off);\n            return;\n        }\n    }\n    // normal logic\n}</code></p><p></p><p>参考实现：FASTJSON2项目使用了上面的技巧，其中JDKUtils和UnsafeUtils有上面技巧的实现：</p><p></p><p>JDKUtils：https://github.com/alibaba/fastjson2/blob/fastcode_demo_20221218/core/src/main/java/com/alibaba/fastjson2/util/JDKUtils.javaUnsafeUtils：https://github.com/alibaba/fastjson2/blob/fastcode_demo_20221218/core/src/main/java/com/alibaba/fastjson2/util/UnsafeUtils.java</p><p></p><p>注意事项：上面的技巧不建议新手使用，需要先清楚原理，才可使用。</p>",
    "publish_time": "2023-01-06 15:54:44",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "2022年全球程序员收入报告出炉：首席工程师最高年薪超700万，字节跳动成国内唯一上榜公司",
    "url": "https://www.infoq.cn/article/eDh8eBxoEfZBMr5DfopW",
    "summary": "<p></p><blockquote>又一地区强制要求企业公开薪酬数据，律师：未来<a href=\"https://www.infoq.cn/talk/vDLP5fwzUqBFRGyDPqaB\">薪资透明</a>\"才是常态。</blockquote><p></p><p></p><p>近日，美国数据收集网站 Levels.fyi 发布了 2022 年度程序员薪酬报告，根据职位、地域对各公司的薪酬情况进行了总结。据介绍，Levels.fyi 在 2022 年共收集了超过 15 万份薪资申请，数据包括工资、福利等。此外，报告中的薪酬数据是年度薪酬总额中位数，Levels.fyi 不对特定企业做区分，仅从中提取职级结构与汇总数据。</p><p></p><p>Levels.fyi 表示，就像 2022 年年初市场迅速升温一样，到 2022 年年底，市场已经彻底冷却。2022 年第四季度以裁员和招聘冻结结束。在 2023 年，仍有很大的不确定性。尽管如此，与 2021 年相比，2022 年顶级公司和最高级别的薪酬总体上仍有所增长。</p><p></p><p>其中，国内程序员薪酬最高的地区是上海（8.6 万美元，约合 59 万元人民币），其次是香港（8.5 万美元），北京、深圳、台湾新竹分别以 7.9、7.7、6.9 万美元排在第三、四、五位。而对比 2021 年国内薪资报告，国内程序员薪酬最高的前三城市分别是北京、上海和杭州，平均月薪分别为 25731、23463、23278 元。</p><p></p><p>在 2022 年度程序员薪酬报告中，字节跳动是唯一上榜的中国公司。在中级工程师薪酬排名中，字节跳动以 32.3 万美元（约合 221 万元人民币）排在第五位，对应字节跳动职级 2-1；在资深工程师薪酬排名中，字节跳动以 56.4 万美元（约合 387 万元人民币）位列第七，对应字节跳动职级 3-1。</p><p></p><p>在 Levels.fyi 发布的 2021 年度程序员薪酬报告中，字节跳动以 43 万美元（约合 295 万元人民币）高级工程师薪酬排在第五，对应字节跳动职级为 2-2。这也是中国科技公司首次出现在这份报告中。</p><p></p><h2>2022 年度程序员薪酬报告</h2><p></p><p></p><h3>不同职级的软件工程师薪酬情况</h3><p></p><p></p><p>报告将软件工程师分为五个职级：初级工程师、中级工程师、高级工程师、资深工程师以及首席工程师。</p><p></p><h4>初级工程师</h4><p></p><p></p><p>初级工程师通常需要 0-2 年工作经验，主要指应届毕业生或其他职场新人。这类工程师主要负责团队内中低复杂度组件的开发和维护，通常需要其他经验丰富的团队成员的指导和支持。</p><p></p><p>报告显示，在初级工程师薪酬排名中，美国量化巨头 Two Sigma 以 27.4 万美元（约合 188 万元人民币）的中位数薪酬占据榜首；谷歌旗下自动驾驶汽车公司 Waymo 以 22 万美元薪酬排在第七位。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/8b/8b53a2b59cc019719c149b7936285009.png\" /></p><p></p><h4>中级工程师</h4><p></p><p></p><p>中级工程师通常具备 2-5 年工作经验，负责开发和管理中高复杂度组件。可能领导小团队或小项目，能够指导其他工程师、提供技术支持，完成对小型项目的端到端代码审查、设计和交付，影响范围通常集中在所在团队之内。不少企业将“中级工程师”视为职业生涯的真正起点，因为这是从业者在长期未获晋升之下所能接受的最低岗位职级。</p><p></p><p>报告显示，在中级工程师薪酬排名中，数据湖提供商 Databricks 以 44.3 万美元（约合 304 万元人民币）的中位数薪酬占据榜首；自动驾驶汽车公司 Cruise 和游戏平台 Roblox 分别以 36.1、35.4 万美元紧随其后；字节跳动作为国内唯一上榜的科技公司，以 32.3 万美元排在第五位，对应字节跳动职级 2-1。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/8b/8b4ac66b5299c7eb839a0a7919fc50ac.png\" /></p><p></p><h4>高级工程师</h4><p></p><p></p><p>高级工程师通常具备 5 年以上工作经验，企业中此职级的员工一般不超过 30%。高级工程师有能力领导并管理复杂的技术规划，可为团队设定发展愿景和未来方向。在组织内多个相关团队中具备影响力，可根据业务规模和发展预期完成灵活的角色转换，更多侧重于设计而非具体实现。</p><p></p><p>报告显示，在高级工程师薪酬排名中，排在第一的依旧是数据湖提供商 Databricks，薪酬为 55.2 万美元（约合 378 万元人民币）；职场社交平台 LinkedIn 以 45.8 万美元的薪酬位列第七。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/5e/5e3cbe654b08b53dae8a5b4967676169.png\" /></p><p></p><h4>资深工程师</h4><p></p><p></p><p>资深工程师通常具备 10 年以上工作经验，此职级在薪酬待遇方面远高于前几个级别，企业中拥有此职级的员工一般不超过 10%。资深工程师具备跨组织影响力，可受托为单一或多家组织执行关键业务项目，负责跨组织审查并提供技术设计反馈。资深工程师的日常工作几乎不涉及编码，角色定位主要取决于组织和公司需求，定义较为灵活多变，往往具备完全自主的决策空间。</p><p></p><p>报告显示，在资深工程师薪酬排名中，支付公司 Stripe 以 68.8 万美元（约合 472 万元人民币）的中位数薪酬位列第一；字节跳动再次上榜，以 56.4 万美元（约合 387 万元人民币）位列第七，对应字节跳动职级 3-1。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/bb/bb0f1c5efc36cdfb9763c73dff5e3134.png\" /></p><p></p><h4>首席工程师</h4><p></p><p></p><p>首席工程师通常具备 15 年以上工作经验，企业中拥有此职级的员工一般不超过 3%，中小型企业可能不设此职级。首席工程师具备跨企业，甚至是跨行业影响力，往往具备完全自主的决策空间。</p><p></p><p>报告显示，在首席工程师薪酬排名中，Facebook 以 104.4 万美元（约合 716 万元人民币）薪酬位列第一；Netflix、Twitter 分别以 72.5、70 万美元排在第五和第六位。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/70/70b7bdeda4aff05c858027b745aa833d.png\" /></p><p></p><h3>不同地域的程序员薪酬情况</h3><p></p><p></p><p>Levels.fyi 对全球多个地区薪酬数据进行分析，发现以下大都市的中位数年薪总额最高。</p><p></p><p>在亚洲范围内，程序员薪酬最高的前三个地区是以色列首都特拉维夫（15.9 万美元）、迪拜（ 9.4 万美元）和新加坡（ 9 万美元）。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/6f/6f266d2aba52cc4af32f582428daff63.png\" /></p><p></p><p>国内共有 5 个城市上榜，按薪酬高低顺序依次是：上海（8.6 万美元）、香港（8.5 万美元）、北京（7.9 万美元）、深圳（7.7 万美元）、台湾新竹（6.9 万美元）。</p><p></p><p>在美国，程序员薪酬最高的前三个地区是旧金山（23.4 万美元）、西雅图（21.3 万美元）和纽约（18.7 万美元）。</p><p></p><h2>薪资透明开始成为强制要求，或成未来企业招聘优势</h2><p></p><p></p><p>2022 年度程序员薪酬报告一出炉便在程序员群体中引发热议，除了讨论各公司、地区的薪酬情况，也有部分讨论集中在薪酬透明度上。在全球范围内，不少公司都要求员工<a href=\"https://www.infoq.cn/article/Ju7CPk0MyPYRwEI7dyJx\">对薪酬保密</a>\"。</p><p></p><p>前几年线上职业社区网站 Glassdoor 发布的《全球薪酬透明度调查》报告显示，全球 57% 的员工认为由于缺乏对薪酬透明度的了解，他们必须通过跳槽来获得有意义的加薪。调查还显示，全球近一半的员工（47%）认为他们的雇主仍然不会共用内部薪酬资料。同时，69% 的员工希望他们能更好地了解在本地市场内，基于其职位和技能的公平待遇是怎样的。</p><p></p><p>不过，随着地方法律的介入，部分地区的员工即将迎来薪酬透明。</p><p></p><h3>加州强制要求企业公布薪酬数字</h3><p></p><p></p><p>据 CNBC 1 月 5 日报道，美国加州本周生效的一项新法律，要求大部分加州企业（员工数量在 15 人以上）雇主在招聘清单中附上薪酬数字。对于员工人数超过 100 名的企业，必须向加州提交薪酬数据报告，其中包含按种族、性别和工作类别进行细分的具体薪酬信息。不过，对于基本工资外的股权、股票期权、福利和奖金等收入，法律并没有强制要求公布。</p><p></p><p>继科罗拉多州和纽约市之后，加州成为又一推行薪酬透明法的州。据专注于薪酬统计的软件厂商 Payscale 称，美国目前已经有 13 个州 / 城市要求企业雇主公布薪酬信息，覆盖全美约四分之一劳动力。</p><p></p><p>加州推动的这项薪酬透明度法令旨在缩小性别和种族造成的薪酬差距，帮助少数族裔和女性在劳动力市场上获得公平竞争地位。例如，可以将实际工资与同类职位间的收入做比较，观察是否存在不公平待遇。</p><p></p><p>作为新法的推动者，加州参议员 Monique Limón 认为，“薪酬透明非常重要，因为我们无法解决自己看不到的问题。”Limón 希望新要求能帮助加州企业招聘到最优秀的人才，对那些不要求雇主公布工资的州形成比较优势。Limón 指出，<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651019697&amp;idx=1&amp;sn=f44c665415a752bef8e397510858fbcf&amp;chksm=bdbea1e28ac928f4ac956ff22265bf09b1eaf2bc26eae4e7d4e5ba4ff3cc913d68fffbc4b618&amp;scene=27#wechat_redirect\">薪酬透明度</a>\"法案也可能会刺激企业，让他们在看到竞争对手开出的更高价码后提升岗位工资。部分企业甚至会在非强制要求的位置主动发布薪酬，彰显自己的人才竞争优势。最终，这将有助于保障女性和有色人种获得平等报酬、提振加州经济。</p><p></p><h3>上有政策，下有对策？</h3><p></p><p></p><p>不过，有评论认为，新法提出的披露要求可能不足以涵盖全部收入所得。企业可以列出更大的薪酬范围，借此回避条款的约束。事实上，已经有公司这么做了。</p><p></p><p>据了解，目前全美 20% 以上的财富 500 强企业位于加州，其中包括 Meta、Netflix、苹果等多个科技巨头。受该条法律影响，Netflix 的最新招聘信息附带上了薪酬数据，并迅速在网站上引发讨论。</p><p></p><p>Netflix 本次是为音频视频 (AV) 测试和工具团队招聘 L5 级别软件工程师，岗位要求：在软件开发角色运输产品方面拥有 4 年以上的经验，擅长 Python/Javascript 或 C/C++，拥有微控制器、Teensy、AVR、IOT、协议（SPI、I2C、I2S）方面的经验，等等。Netflix 表示该岗位的薪酬范围是 9-90 万美元。</p><p></p><p>对此，网友 phailhaus 批评 Netflix 在“玩弄法律”：法律要求公司报告他们的薪水范围以提高透明度，而公司给出的回答基本是“我们的薪水在 0 到 100 万美元之间”。也有网友认为加州的薪资透明法律还不够健全，理想情况下，薪酬平均数和中位数才能让求职者 / 在职者进行真正的评估。</p><p></p><p>Payscale 公司高级律师 Lulu Seikaly 表示，企业可能倾向于在特定岗位上选择具备相应经验的候选人，所以在设定薪酬范围时难以精确定位。Seikaly 建议客户在招聘清单中明确列出资质要求，借此缩小潜在的薪酬范围。</p><p></p><p>“在与客户的交流中，他们会问起怎样划定明确可靠的薪酬范围。这其实是一种商业决策，所以根据法律要求，如果非要按职级进行发布，那最好选择足够宽泛、肯定能覆盖掉真实数字的范围。”</p><p></p><p>Seikaly 总结道，“目前，薪酬透明还属于特殊情况。但再过五到十年，我认为这最终会成为常态。”</p>",
    "publish_time": "2023-01-06 16:05:51",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "2023年，这9个项目助你成为前端高手",
    "url": "https://www.infoq.cn/article/3DC06JU9B9Xl7q19CLD9",
    "summary": "<p>无论你是编程新手还是资深开发人员，学习新的概念和语言（或框架）都是跟上快速的技术发展节奏的必要条件。</p><p></p><p>以React为例，它由Facebook在四年前开源，现在已经成为全球JavaScript开发者的首选。</p><p>当然，Vue和Angular也有它们自己的追随者。还有Svelte以及像Next.js或Nuxt.js这样的通用框架，还有Gatsby、Gridsome，等等。</p><p></p><p>如果你想成为一名出色的JavaScript开发专家，除了使用好JS之外，至少还应该有使用不同框架和库的经验。</p><p></p><p>为了帮助你成为一个前端高手，我收集了9个项目，每个项目都有一个特定的主题和一个不同的JavaScript框架或库作为技术栈，你可以尝试构建它们。记住，没有什么比亲自动手去构建东西对你更有帮助的了，所以请勇往直前，磨砺你的头脑，放手去做吧。</p><p></p><h2>1. 用 React 构建一个电影搜索 App</h2><p></p><p>首先，你可以用 React 开发一个电影搜索 App。下图是这个 App 最终的样子。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/17/177a09510393dcb0098b3bf316c5f5a6.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>在构建这个App时，你将使用相对较新的Hooks API，这有助于提高你的React技能。这个示例项目使用React组件、Hooks、一个外部API，当然，还使用CSS进行样式化。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>Reactcreate-react-appJSXCSS</p><p></p><p>这个项目不使用任何类，为你提供了一个进入React世界的完美入口，在2023年肯定对你有所帮助。</p><p>你可以在这里（https://www.freecodecamp.org/news/how-to-build-a-movie-search-app-using-react-hooks-24eb72ddfaf7/）找到这个示例项目。请跟着教程做，或者提供你的反馈。</p><p></p><h2>2. 用 Vue 构建一个聊天&nbsp;App</h2><p></p><p>另一个项目是使用我最喜欢的JavaScript库VueJS构建一个聊天App。</p><p></p><p>这个App看起来像这样。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/05/057678ccbe166518ad4a57ecb6f825b8.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>跟随本教程，你将学习如何从零开始构建一个Vue应用程序——创建组件、处理状态、创建路由、连接到第三方服务，甚至是进行身份验证。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>VueVuexVue RouterVue CLIPusherCSS</p><p></p><p>这真的是一个入门Vue的好项目，它也有助于提高你现有的技能，解决2023年的开发问题。</p><p>你可以在这里（https://www.sitepoint.com/pusher-vue-real-time-chat-app/）找到教程。</p><p></p><h2>3. 用 Angular 8&nbsp;构建一个漂亮的天气 App</h2><p></p><p>下面的例子将帮助你用谷歌的Angular 8构建一个漂亮的天气App。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/99/995a6f304552ed87dfe6703e29624fcd.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>这个项目将教你从零开始创建应用程序时的宝贵技能——从设计到开发，一直到生产就绪的部署。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>Angular 8Firebase服务器端渲染CSS网格布局和Flexbox移动，响应迅速暗色模式漂亮的界面</p><p></p><p>我之所以非常喜欢这个项目，其中一个原因是你学到的东西并不是相互独立的。相反，你将了解整个开发过程——从设计到最终部署。</p><p>你真的应该尝试一下这个项目。</p><p></p><h2>4. 用 Svelte 构建一个待办事项 App</h2><p></p><p>Svelte是这个领域的新进者——至少与React、Vue和Angular相比是这样。尽管如此，它仍是2023年的热门框架之一。</p><p></p><p>好吧，待办事项App不一定是最热门的，但它确实可以帮助你磨练你的Svelte技能。它看起来是这样的。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a6/a68a3a689f59693237d68b5ba25e4fa3.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>这个教程将向你展示如何从头到尾使用Svelte 3开发App。它使用了组件、样式和事件处理器。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>Svelte 3组件CSS样式ES 6语法</p><p></p><p>现在也并没有那么多好的Svelte启动项目，所以我发现这个项目（https://medium.com/codingthesmartway-com-blog/building-a-svelte-3-todo-app-from-start-to-deployment-1737f72c23a6）可以作为一个很好的起点。</p><p></p><p>而且，谁知道呢，也许你就是那个创建另一个更全面的Svelte教程的人。</p><p></p><h2>5. 用 Next.js 构建一个电子商务购物车</h2><p></p><p>Next.js是创建React应用程序的最流行框架，它支持开箱即用的服务器端渲染。</p><p>这个项目将向你展示如何构建一个电子商务购物车，它看起来像这样。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fd/fdb41e8efb5d4bae1c685d33d234e01c.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>在这个项目中，你将学习如何搭建Next.js开发环境——创建新的页面和组件、获取数据、样式化和部署App。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>Next.js组件和页面数据抓取样式部署SSR和SPA</p><p></p><p>通过真实的例子（比如电子商务展示）来学习新技术总是很好的。你可以在这里（https://snipcart.com/blog/next-js-ecommerce-tutorial）找到教程。</p><p></p><h2>6. 用 Nuxt.js 构建一个完整的多语言博客网站</h2><p></p><p>Nuxt.js之于Vue就像Next.js之于React——一个结合了服务器端渲染和单页应用程序的强大框架。</p><p>创建的应用程序看起来像这样。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7b/7b3750c353764c852b62162b28c94fb6.jpeg\" /></p><p></p><h4>你将学到什么</h4><p></p><p>这个示例项目将教你如何使用Nuxt.js构建一个成熟的网站——从初始搭建到最终部署。</p><p>它使用了Nuxt提供的许多很酷的功能，比如页面和组件，以及SCSS。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>Nuxt.js组件和页面Storyblok模块Mixin用于状态管理的VuexSCSSNuxt中间件</p><p>这对你来说可能是一个非常酷的项目（https://www.storyblok.com/tp/nuxt-js-multilanguage-website-tutorial），它涵盖了Nuxt.js的许多特性。我个人也喜欢使用Nuxt。你应该尝试一下它，因为它也将帮助你成为更好的Vue开发者。</p><p></p><h2>7. 用 Gatsby 构建一个博客</h2><p></p><p>Gatsby是一个很好的静态站点生成器，它在底层使用了React和GraphQL。这个项目看起来是这样的。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c3/c30552c907c6d83d54a9faba24126050.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>在这个教程中，你将学习如何利用Gatsby、React和GraphQL构建一个出色的博客。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>GatsbyReactGraphQL插件和主题MDX/MarkdownBootstrap CSS模板</p><p></p><p>如果你曾经想过要开发一个博客，这就是一个很好的例子（https://blog.bitsrc.io/how-to-build-a-blog-with-gatsby-and-boostrap-d1270212b3dc）。它将教你如何利用React和GraphQL做到这一点。</p><p></p><p>我并不是说WordPress是一个糟糕的选择，但有了Gatsby，你可以使用React构建一个高性能的网站——这是一个很棒的组合。</p><p></p><h2>8. 用 Gridsome 构建一个博客</h2><p></p><p>Gridsome之于Vue……好了，我们已经有Next/Nuxt了。</p><p>Gridsome与Gatsby一样，两者都使用GraphQL作为数据层，不一样的是Gridsome使用了VueJS。它也是一个很棒的静态站点生成器，可以帮你构建出很好的博客。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e3/e336d6cccf915267122a5f6a9c7c9067.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>这个项目将教你如何使用Gridsome、GraphQL和Markdown构建一个简单的博客。</p><p>它还介绍了如何通过Netlify来部署应用程序。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>GridsomeVueGraphQLMarkdownNetlify</p><p></p><p>当然，这不是最全面的教程，但它确实涵盖了Gridsome和Markdown的基本概念（https://www.telerik.com/blogs/building-a-blog-with-vue-and-markdown-using-gridsome），可以作为一个很好的起点。</p><p></p><h2>9. 用 Quasar 构建一个类似SoundCloud 的音频播放器</h2><p></p><p>Quasar是另一个Vue框架，也可以用来构建移动App。</p><p>在这个项目中，你将构建这样的一个音频播放器。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4a/4a39cfb01d4b96609c5c6e7b3301116f.png\" /></p><p></p><h4>你将学到什么</h4><p></p><p>其他项目主要关注Web应用程序，而这个项目将向你展示如何使用Quasar框架构建一个移动App。</p><p>你应该已经有一个可用的Cordova和Android Studio/Xcode开发环境。如果没有，教程中提供了一个Quasar网站的链接，在那里他们会告诉你如何搭建。</p><p></p><h4>&nbsp;技术栈和特性</h4><p></p><p>QuasarVueCordovaWaveSurferUI组件</p><p></p><p>这是一个小项目（https://www.learningsomethingnew.com/how-to-build-a-sound-cloud-like-audio-player-app-with-vue-js-quasar-and-wave-surfer），展示了Quasar在构建移动App方面的能力。</p><p></p><h2>总结</h2><p></p><p>我在本文中展示了9个可以构建的项目，每个项目都关注一个JavaScript框架或库。</p><p>现在，选择权就在你的手中——你是否会通过使用以前从未使用过的框架来尝试一些新东西？或者你想通过做一个你已经掌握了一些知识的技术项目来加强你的技能？还是继续使用你最喜欢的框架/库，在2023年用它们完成所有的项目？</p><p></p><h5>原文链接：</h5><p></p><p><a href=\"https://levelup.gitconnected.com/9-projects-you-can-do-to-become-a-front-end-master-in-2023-a4389153148c\">https://levelup.gitconnected.com/9-projects-you-can-do-to-become-a-front-end-master-in-2023-a4389153148c</a>\"</p><p></p><h5>相关阅读：</h5><p></p><p><a href=\"https://xie.infoq.cn/article/af5f8cd40e98e968650f8c190\">手写一个 react，看透 react 运行机制</a>\"</p><p></p><p><a href=\"https://xie.infoq.cn/article/af5f8cd40e98e968650f8c190\">vue 和 react 的区别有哪些，哪个好</a>\"</p><p></p><p><a href=\"https://www.infoq.cn/article/oONc5r5opJF64kBCtzIv\">Angular v15 发布：可以脱离 NgModules 构建组件了</a>\"</p><p></p><p><a href=\"https://www.infoq.cn/article/F1F3Q7Ptb1jM2ptmGbOG\">Vue 3 不是最佳选择? 耗时两周从 Vue 2 迁移到 Svelte 后：代码执行更快、体验更佳</a>\"</p>",
    "publish_time": "2023-01-06 20:17:37",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "展望后端研发工程师的 2023 | InfoQ《极客有约》",
    "url": "https://www.infoq.cn/article/8oZi40ex8z5R9OB9A8YR",
    "summary": "<p>后端开发很卷吗？学习路线是什么样的？就业前景如何？本期，我们邀请到了微财数科资深工程师周正杭，一起聊聊后端研发工程师的 2023。</p>",
    "publish_time": "2023-01-06 22:07:03",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]