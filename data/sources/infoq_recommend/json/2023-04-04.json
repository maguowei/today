[
  {
    "title": "百分点科技正式发布数据科学基础平台",
    "url": "https://www.infoq.cn/article/9sNSgBAUxsco2usLJpPl",
    "summary": "<p>3 月 30 日，由百分点科技主办的“ 2023 数据科学峰会”在北京金隅智造工场·科技秀场成功召开。此次大会以“数据·进阶”为主题，邀请权威专家学者以科学视角和全球视野解读数据科学、数字政府建设及数字化业务，在现场重磅推出一站式数据价值实现平台，并联合全球权威咨询机构 <a href=\"https://www.infoq.cn/article/AkkcQgZIZK26glVAe17o\">IDC</a>\" 发布首份数据能力进阶白皮书。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/69/692d48cee9d095f8692f4fdb8e2a4e07.png\" /></p><p></p><p></p><h2>权威专家趋势洞见</h2><p></p><p></p><p>当前，数字经济成为全球经济增长的关键动力，也成为我国经济发展的新引擎，带动产业数智化转型进入纵深阶段。数据科学以其价值的基础性和技术的集大成性成为新一代信息技术浪潮中浓墨重彩的一笔。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/39/39418f897ab918a170b9e4054561832e.png\" /></p><p></p><p>北京大学数学科学学院、光华管理学院教授，中国科学院院士陈松蹊从统计学科的角度阐述了数据科学的发展历程。他表示，数字中国建设，释放数据生产力是关键。真正要把生产力释放出来，不能只靠存储和算力等基础设施建设，更需要“数据文化”建设，尤其是场景驱动的数据分析等数据科学“软”实力建设。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/56/56df9f1c58660cbaa68a181f08cab50b.png\" /></p><p></p><p>北京大学政府管理学院副院长黄璜介绍，新时期数字政府建设，需要在推进国家治理现代化总体目标下提升政府治理能力，建立“用数据”和“治数据”思维，形成多层次数据治理体系，通过治理与技术架构平台化，统筹资源与能力建设，实现决策支持数据化、协同治理平台化、服务交互智能化。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4a/4adc949344bd51777f1076581318f2eb.png\" /></p><p></p><p>上海纽约大学全球杰出商学讲席教授陈宇新认为，目前应用型人才较多，进一步原创性的突破要从更基础的数学理论上发掘潜力。对于数字经济来说，数据质量的认证将会变得非常重要，认证和确认数据源可靠性的技术或服务将会兴起。</p><p>&nbsp;</p><p></p><h2>IDC 首份数据能力进阶白皮书正式发布</h2><p></p><p></p><p>聚焦数字化转型的痛点和需求，百分点科技联合全球权威咨询机构 IDC 重磅发布首份数据能力进阶白皮书——《用数据创造价值 以智能激发增长——数据科学基础平台白皮书》，IDC 中国副总裁兼首席分析师武连峰出席大会并进行了正式发布。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f7/f754cdbe635b0474e5b6b99d01cf84ad.png\" /></p><p></p><p>在《白皮书》中，调研数据显示，政企普遍对基础设施承载能力、行业经验成果、全流程一体化数据应用能力以及数据方法论等较为关注，其中“一体化数据链路能力，支持端到端的数据价值实现”占比达到29%。</p><p>&nbsp;</p><p>武连峰表示，数字化业务时代已经来临，数据要素在资金、客户、运营、创新等领域创造价值，需要打造数据获取与治理、数据挖掘与展示、数据变现与创新三大能力。在此基础上，他提出聚焦组织数字化转型的核心需求、将数据科学纳入发展战略、评估数据就绪度与成熟度、选用可持续迭代的全栈能力平台、选择合适的数据科学服务商等八大策略。</p><p></p><p></p><h2>数据科学持续进阶 百分点科技重磅产品发布</h2><p></p><p></p><p>随着数字经济持续增长，政企机构进入数字化转型的纵深阶段，大量的数据需要进入到可分析、可解释、可参与预测和决策的场景中来，并加速实现由数据驱动的全面业务整合和创新。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2b/2bcf56af53f4572744b69d87f3f3e0f7.png\" /></p><p></p><p>百分点科技董事长兼 CEO 苏萌表示，数据科学在过去 50 年里从 1.0 的小数据时代，2.0 的大数据时代，走入了 3.0 的 AI 时代，未来将迈向数据原生时代。当下市场需求不再是断点式技术和工具，而是端到端的数据科学解决方案，在长链条里实现数据价值。</p><p></p><p>随着数据科学通用工具的一体化和平台化、领域知识的程序化和服务化，交互方式的自然语言化，数据科学技术将像互联网一样普惠大众，业务和决策人员将可以跨过程序员直接与数据进行交互，提高分析和决策效率。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d7/d7bee8eaa6df647b4aa3628f090b1833.png\" /></p><p></p><p>为此，<a href=\"https://www.infoq.cn/article/gmreAOyFEktdSoZzapHd\">百分点科技</a>\"基于十多年的理论和技术积淀，推出一站式数据价值实现平台——百分点数据科学基础平台（ DeepMatrix ），服务于数据工程师、数据分析师和数据科学家，助力便捷高效地将数据转化为业务知识并辅助决策和行动，最终释放数据价值。</p><p></p><p>百分点科技 CTO 刘译璟介绍，数据科学基础平台具备两大特征。首先是知识化，平台不断沉淀领域中的数据科学知识，包括程序性知识、事实性知识和概念性知识。传统企业的数字化转型面临着冷启动问题，平台能够借助行业内已有的专业知识为其破局。其次是智能化，数据科学基础平台内置了智能辅助开发系统，可以自动化地辅助开发者选择方案以及完成数据适配，并智能化地进行方案精调和改进。同时，能够在数据治理的多个环节依托知识库及语义理解等智能技术帮助开发者提高效率。</p><p></p><p></p><h2>立足全球视野 聚焦产业实践</h2><p></p><p></p><p>在此次大会上，来自产业链上下游的知名企业领袖同台分享了数智化转型中的经验、问题与思考，立体而全面展示了当前产业发展现状。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4f/4fde466b7d81ca69a27d22a3d11776ec.png\" /></p><p></p><p>中国中免科技信息部总经理徐刚表示，数字化转型是企业发展的必然选择，而数据是转型的关键，需要十年育“数”，立足长远，拉通全链条数据，形成内外部数据生态圈，应用数据科学指导业务决策，打造以客户为中心的全流程数据支撑能力，用数据驱动企业效能提升。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/21/2172e0bf2ac3836803d3856dc3df26c8.png\" /></p><p></p><p>华为 EBG 全球公共事业系统部数字化转型咨询规划总监王煜认为，以数据为核心的数字化转型，需要以“数据”为生产要素，以 5G、云、AI 等 <a href=\"https://www.infoq.cn/article/mWqDclNHFXPRjbmKZKMX\">ICT</a>\" 技术为生产工具，以软件为载体，以服务为目的，从而实现企业管理和运营效率的提升，以及产品和商业模式的创新。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d0/d0e7f8815f945f61165fe74a7a16ce87.png\" /></p><p></p><p>百度智能云智慧城市总经理刘捷表示，AI 知识增强大模型出现，推动城市由感知智能向认知智能迈进，通过数据驱动和 AI 赋能，城市数字化场景持续创新，实现洞察有深度、治理有精度、兴业有高度、惠民有温度，城市生活越来越幸福。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d3/d39915d4ce34b6a62194e1eef342d2a2.png\" /></p><p></p><p>最后，在以“全球视野下的数据科学发展趋势与展望”为主题的圆桌对话环节，来自学界、咨询机构、企业的专家分别从不同的角度进行解读，不断进行思想碰撞。对于数字经济发展的未来趋势，数字技术与产业深度融合成为各方共识。</p>",
    "publish_time": "2023-04-04 09:35:25",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "从8000元起步到年产值超800亿，藏在郊县里的农牧数字化探索者",
    "url": "https://www.infoq.cn/article/1mdmikVizJFiI3WS5oij",
    "summary": "<p>今时今日的农户为什么通过手机 App 或小程序就可以照看养鸡场，甚至一个人一年就能养上数万只鸡？本期《行知数字中国》走进位于郊县的广东温氏股份，在数字化成为企业“必修课”的今天，温氏却早已打下 30 多年的信息化基础，并发展为年产值超 800 亿的农业龙头企业。</p>\n<p>作为一个农业企业，驱动温氏敢为人先落地信息化、数字化的原因是什么？在这个过程中，温氏又是如何思考并实践数字化的？让我们一起来揭秘答案。</p>",
    "publish_time": "2023-04-04 12:22:57",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "农牧数字化：IT 要冲到前面去引领，“天花板”才能被打开",
    "url": "https://www.infoq.cn/article/Hup8kmUYBGCGTlP6LpHG",
    "summary": "<p></p><p></p><blockquote>出品｜InfoQ ·《行知数字中国》访谈主持｜霍太稳，极客邦科技创始人兼 CEO访谈嘉宾｜蒋荣金，温氏股份总裁助理、数字化牵头人 ；邝颖杰，温氏数字流程部&nbsp;IT&nbsp;技术中心主任</blockquote><p></p><p></p><p>在企业数字化的进程中，农业行业的数字化往往不会受到太多的关注；然而，数字化始终是推动我国乡村振兴的一股重要力量。</p><p></p><p>2023 年 2 月 13 日，我国发布《中共中央 国务院关于做好 2023 年全面推进乡村振兴重点工作的意见》（2023 年中央一号文件），明确指出要深入实施数字乡村发展行动，推动数字化应用场景研发推广；加快农业农村大数据应用，推进智慧农业发展。</p><p></p><p>本期《行知数字中国》走进广东农业龙头企业温氏股份，40 年前从“七户八股”和 8000 元人民币起步，发展到今天，温氏已经成为年产值 800 多亿元的企业。</p><p></p><p>虽然坐落于云浮新兴这个当时还是一个小乡镇的偏远地区，但温氏始终遵循“用科学 办实事”的精神，与时代同频共振。在数字化成为企业“必修课”的今天，温氏早已打下 30 多年的信息化基础，从上世纪 90 年代开始使用计算机记账，到后来又成为最早涉足数字化转型的农业企业。</p><p></p><p>让人尤为好奇的是，作为一个农业企业，驱动温氏敢为人先落地信息化、数字化的原因是什么？在这个过程中，温氏又是如何思考并实践数字化的？本期<a href=\"https://www.infoq.cn/album/79\">《行知数字中国》</a>\"将为你揭秘温氏股份的数字化故事，<a href=\"https://www.infoq.cn/video/1mdmikVizJFiI3WS5oij\">点击此处链接可查看视频</a>\"。</p><p></p><h2>基因里早已写下数字化</h2><p></p><p></p><p>农业企业发展主要由两大技术支撑：一是生物技术，主要指育种、兽医、营养，这是农业企业的核心能力；二是 IT 技术，这是农业企业实现精细化管理的必要手段。</p><p></p><p>据温氏数字流程部 IT 技术中心主任邝颖杰回忆，早在一台电脑价格高达 2 万元的 90 年代，温氏就毅然选择与华南农业大学计算机系合作推进信息化，开创畜牧养殖电脑管理的先河。这是温氏使用 IT 技术进行自我“武装”的开端。谈及背后的原因，邝颖杰介绍，当时温氏的业务规模迅速扩大，传统通过手工记录每个养殖场的生产层级、账本、结算单的方式已经无法为继，于是催生了利用信息技术进行自动化管理的需求。</p><p>在国内信息化发展仍然处于初步探索的 90 年代，IT 技术人员是非常稀缺的人才，加上温氏的业务体量和资源投入还比较有限，其信息化的建设主要还是原来外部力量的支持。</p><p></p><p>最初，温氏主要通过与华南农业大学计算机系进行全面合作，把高校专家请到温氏，由双方合作开发局域网范围内的专业户管理等业务系统；此后，2005 年温氏开始与金蝶进一步合作建设集中式管理系统；2010 年启动养殖物联网相关技术的探索和研究；2015 年投入“互联网 +”建设；2018 年作为网易数帆第一批数字化建设的种子用户，温氏与之合作建设统一大数据平台；2021 年与华为合作，启动数字化转型，提出打造全方位的数字化体系。</p><p></p><p>温氏的信息化和数字化，在自己的发展节奏里，有条不紊地进行。</p><p></p><p>“温氏会一直紧追时代进步，不管是生物技术、IT 技术还是管理技术，都会向先进学习，不断提升自我。这是我们变革的动力。”温氏股份总裁助理、数字化牵头人蒋荣金在访谈中强调，数字化可以理解为温氏对用科学、办实事精神的传承，是会不断深入直至‘为我所用’的技术和手段。</p><p></p><h2>让养殖农户走出鸡舍</h2><p></p><p></p><p>可以看到，温氏对技术投入的价值深信不疑，但这种坚信并非迷信，而是来自于实实在在的业务获益。</p><p>以鸡场养殖场景为例，在肉鸡饲养行业尚没有引入自动化、信息化的传统人工饲养模式下，人均饲养约 5000 只鸡 / 年。但到了今天，以温氏的勒竹三黄笼养小区为例，单批次可养 3.5 万，单人单栋年可养 4.8 批次，单人年产能可达 16.8 万只。</p><p></p><p>据邝颖杰介绍，养殖效率大幅提高的背后，源于自动化、机械化、集成化、AI、软硬件结合等各种数字化手段的支撑。</p><p></p><p>十多年前，在传统的人工饲养模式下，养鸡农户往往不敢轻易离开养殖场，他们不但需要亲自喂料、清粪，很多时候还要睡在养殖场里，以防出现异常或者突发情况，比如鸡舍温度异常或者缺水。为了及时跟进鸡的生长情况，农户还需要每天对鸡进行抽查，使用人工秤对其进行称重。</p><p></p><p>这种纯靠人工的养殖模式，不但效率低，而且极度依赖农户个人经验，比如，如何通过鸡的叫声辨别它们的健康状况，这需要农户长时间的经验积累，对新人的培养周期和成本比较高，很难快速复制。</p><p></p><p>随着时代的变迁，农户年纪渐长，而年轻的“农二代”“农三代”从事畜牧业的意愿越来越低，有经验的农户的数量会越来越少。这时候，借助技术实现养殖方式的智能化、自动化、机械化，成了解决以上问题的重要手段。</p><p></p><p>邝颖杰表示，在温氏养殖场生产管理逐步机械自动化系统和设备后，现在的鸡舍实现了自动喂水、自动喂料、自动清粪，以及环境自动控制等等。并且，农户通过手机 App 或小程序就可以“照看”养鸡场，包括监控鸡群鸭群的叫声分贝值以判断活跃状态，有异常就自动反馈，还可以实时监控温度、湿度、通风量等指标，甚至什么季节适合养什么品种的鸡，应该是怎么样的温度和湿度，系统都可以提前预设好。</p><p></p><p>这意味着，农户再也不需要长时间待在鸡舍里，工作体验大大提升，帮助养殖场吸引更多年轻且高精尖的人才加入，人均劳动效率和产值也得以大幅提高。与此同时，通过把丰富的养殖经验沉淀到数字化系统中，则在很大程度上解决了对人的依赖，即便是经验尚浅的新手，也能快速上手。</p><p></p><p></p><h2>IT 人员要从后方冲到前面做引领</h2><p></p><p></p><p>不过，回顾整个数字化历程，蒋荣金表示，温氏也遇到了一系列挑战。尽管合作伙伴带来了先进的方法和理念，但温氏必须从中探索出属于自己的特色数字化路径，蒋荣金认为这是其数字化转型最大的挑战之一。他指出，外部的专家经验更多是理论层面的，可以起到指引和指导作用，但落地实践要与自身业务结合，这要求温氏所有参与数字化转型的人才都要深度参与，特别是文档以及方案输出，尽量亲自完成。</p><p></p><p>“比如说某个项目是华为在承接，我们会规定由对方交付 70% 的内容，我们自己要交付 30% 内容，通过联合团队的模式，由华为带着我们的人共同完成，最终完成项目落地。”邝颖杰表示，这有助于内部培养数字化人才，能够为组织持续发展练就“肌肉”。</p><p></p><p>显然，这对 IT 技术团队的能力提出了全新的要求。在信息化时期，温氏股份的信息中心基本是由 IT 人员组成，IT 人员只需要等待业务部门的需求，实现需求并上线就基本完事。“但如果再以这样的形式发展 10 年，IT 部门的天花板永远都不会被打开。”邝颖杰强调，数字化时代，IT 人员不能只在后方干活，而是需要冲到前面去引领。</p><p></p><p>业务人员也是同理，业务部门原来处于“弱改进”状态，想要推进变革也存在较大的难度。为了让 IT 跟业务能深度融合，温氏前两年组建“数字流程部”，把 IT 人员和各业务线的精英抽调至数字化转型团队里面，让业务与 IT 一同去重新审视业务流程，把控每一个可以实现降本增效的环节，从而推进流程变革和数字化项目落地。</p><p></p><p>某种程度上，当数字化转型团队里有了业务人才，也就有了与业务部门对话的“权威性”，同时这些业务人才也因为身处数字化团队，与 IT 人员有了更深入的交集之后，也更能从全局的视角去思考和提需求。</p><p></p><h2>温氏数字化的三个特色</h2><p></p><p></p><p>值得一提的是，数字化建设非常考验企业的耐心和耐力的投入。对于大多数企业而言，短期内做一个项目或者一个系统实际上难以见效，很多时候往往需要三四年甚至更长时间才能体现出价值。而总结当前温氏数字化转型的独特路径，主要涵盖几个方面：</p><p></p><p>首先是“点线面”结合的推进方式，“面”是指用蓝图作为整体策划，“点”是指高效进行类似 MVP 的速效项目，挖掘落地的数字化场景；找到切入点、有所突破后再拉成“线”，让业务线能更全面地理解数字化，让管理者感受到数字化对业务的赋能作用，见到实效，也就能更深入理解公司发展蓝图。</p><p></p><p>第二个特色是强调价值导向，不追求大而全，也不追求高大上的技术应用，踏踏实实立足于场景，从最大的、业务亟需突破的痛点的角度去探索。对外要价值：IT 项目必须要量化价值才能开展，不量化价值则不予立项。对内也要价值：数字化转型的基础是流程建设，温氏为此重新探索了符合新时期数字化要求的流程，打牢基础。</p><p></p><p>“哪怕只是一个很小的流程点，经过重新梳理和设计，都有可能给业务带来显著的价值。”邝颖杰举例道，温氏以前是以批发的模式销售鸡，经销商分布在全国各地，原来线下销售是难以管控，任意降价销售的情况时有出现。后来把销售平台的审批流程做了改善，不同的降价区间需要走不同级别的审批流程，如此一来降价卖鸡的现象就迅速减少，原有的利润空间也就不容易被打破。</p><p></p><p>第三个特色是“长短结合”，短期目标和中期目标相辅相成，温氏把数字化转型之路分成三个阶段：2020～2023 年的目标是打好数字化基础，2024～2025 年的目标是深化应用，这些短期目标都是为了能在后期“形成一个面”，构建起温氏的特色数字化转型之路。</p><p></p><p></p><h2>围绕全产业链重构</h2><p></p><p></p><p>进入数字化时代，温氏的目标远不止于赋能“养殖”本身，而是变成围绕全产业链进行多方面重构。整体来看，利用数字化技术，温氏实现了“智能养殖”“数据中台”“技术应用的拓展”等多方面的升级，包括利用农业物联网技术来监控猪和鸡的生长指标，通过智能养殖大数据平台对养殖风险进行预测和预警，此外还在采购和销售链条上线了同时面向供应商和消费者的线上商城。</p><p></p><p>另一方面，温氏通过数字化管理实现业财一体化：不但将温氏股份业务链条上的数据全部与财务数据打通，实现人、财、物以及产、供、销等各个环节的全面对接，还建设了财务共享中心，逐步实现财务人员、业务、流程、数据的高度集中，财务重心从一般企业的核算与编报表转变为预算、分析以及向管理层提供决策信息。</p><p></p><p>因此，从生态圈的维度来看，温氏的数字化之路也可以视为“农户连接”“供应商连接”“经销商连接”的生态建设进程，对应地打造人财物覆盖的系统、生态圈全覆盖的系统以及下游客户以及消费者的全覆盖系统。</p><p>“怎么样服务好农户，服务好客户，服务好我们自己内部的员工，怎么样把这帮人连接起来，成为公司里齐心前进的一股力量。”蒋荣金强调，温氏非常期望能通过数字化找到一条好的路径去解决各项挑战。</p><p></p><h2>写在最后</h2><p></p><p></p><p>古话有云“农业靠天吃饭”，尽管在技术的助力下，畜牧养殖已经可以实现生产现场跟信息系统的对接，但农业的数字化转型相比起其他领域，整体的数字化建设基础还是处于比较薄弱的阶段，其未来发展仍面临多重挑战：</p><p></p><p>首先，由于养殖农户的数字化转型意识不足，因此数字化建设应用的推广还存在一定的阻力；其次，畜牧养殖的主体是“活物”，是“带毛的产品”，其形态不像工业产品般标准，数字化管理难度较大；第三，防疫要求高对数字化维护运营带来挑战；第四，既懂农业又理解 IT 的复合型人才和产品人才，目前仍存在很大的缺口。此外，由于农业养殖场大多在偏僻的农村或郊区，地域分散，因此整体数字化成本会偏高，但农业企业整体的利润率又普遍偏低，所以很多农业企业也做不到长期持续地支撑数字化投入。</p><p></p><p>对于温氏而言，即便面对这些重重困难，也开辟出了一条自己的数字化之路。用蒋荣金的话说，这是因为他们非常注重寻找数字化和业务结合的“价值点”。“我们不是说要使用一个多么新的技术，或者说应用一台多先进的设备，应用一个多么前沿的方案。”蒋荣金强调，我们要考虑企业的承受能力，把价值点找出来，让业务认可、企业得益才是数字化转型的关键。</p><p></p><p>总而言之，数字化对企业来说从来不是一蹴而就的事，“务实”是温氏数字化的关键词，即便下定决心推进数字化转型，但温氏也并非盲目将命运押注于此，而是务实地思考转型的本质，结合现实情况合理地投入人力、物力。这种心态和理念成为其数字化顺利推行的重要因素。</p><p></p><p>更值一提的是，温氏在这个过程中尤为注重数字化给农户带来的价值，让农户“用更少的劳动力，更少的时间，能够赚到更多的钱”，最终目的是提升效率，帮助更多的养殖户或者农民发家致富。这正是这家从郊县走出来的农牧企业特有的企业责任，也恰恰是温氏得以成功的关键。</p><p></p><p>如果你对《行知数字中国》栏目或者更多企业数字化转型案例感兴趣，欢迎关注「InfoQ数字化经纬」公众号，我们将持续为您推送更多、更优质的数字化案例内容和线上线下活动。</p>",
    "publish_time": "2023-04-04 12:38:58",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "刚刚！AI赛道又跑出一个IPO",
    "url": "https://www.infoq.cn/article/TgDwhWZ8vi7cGUJ6UoSs",
    "summary": "<p></p><blockquote>据悉，云天励飞是业内少有的拥有横跨算法、芯片和大数据能力的人工智能企业。</blockquote><p></p><p></p><h2>云天励飞成功上市</h2><p></p><p></p><p>4月4日，深圳云天励飞技术股份有限公司（以下简称“云天励飞”）正式在上交所科创板上市，股票代码688343。截至发稿前，<a href=\"https://www.infoq.cn/article/dbLYT47GWIIccobhQap5\">云天励飞</a>\"股价为 100.37 元 / 股，市值达 356.45 亿元。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/79/79d7deee349c4facf2557bb7c9f114ac.jpeg\" /></p><p></p><p>据了解，云天励飞成立于2014年，是拥有算法、芯片和大数据全栈式能力的人工智能企业。云天励飞董事长兼CEO陈宁博士曾任中兴通讯 IC 技术总监，公司首席科学家王孝宇博士曾任 SNAP 首席研究科学家。自成立起，云天励飞就深耕人工智能领域，搭建了人工智能算法平台、人工智能芯片平台，并具备了算法<a href=\"https://www.infoq.cn/article/LRDYqxQeiWuV18ig2whL\">芯片</a>\"化能力，面向下游场景提供 “端云协同”的 AI 产品及解决方案。</p><p></p><p>截至2023年1月，云天励飞已授权专利400余项（含境外专利25项），其中发明专利300余项，已登记的软件著作权160余项。相关发明专利覆盖了人脸识别软件算法、图像处理技术、人工智能芯片设计等计算机视觉及人工智能核心技术领域。</p><p></p><p>凭借“算法芯片化”的核心能力和“端云协同”的技术路线，目前，云天励飞已经在深圳、东莞、青岛、成都、杭州、上海、北京等多个城市实现项目落地，并打造了深圳巴士集团智慧公交OD项目、深圳龙华智能运算平台、青岛崂山智慧社区项目、深圳中心书城项目、深圳富士康智慧园区项目、深圳元平智慧校园等项目。</p><p></p><p>云天励飞董事长兼CEO陈宁博士表示：今天，云天励飞在科创板成功上市，这既是我们创业路上重要的里程碑，也是崭新征程的起点。“功不唐捐，玉汝于成，行而不辍，未来可期”！</p><p></p><h2>去年营收超5亿元，研发支出占比过半</h2><p></p><p></p><p>营收数据方面，招股书显示，报告期内（2019-2021年以及2022年1-6月），云天励飞的营业收入分别为2.3亿元、4.26亿元、5.66亿元、1.85亿元，净亏损分别为5.1亿元、3.98亿元、3.9亿元和2.3亿元。云天励飞在招股书中表示，公司所在的人工智能领域存在前期研发投入高的特点，在产品实现规模化销售前，公司需要持续进行投入。</p><p></p><p>同时，云天励飞坦承，未来一段时间，由于<a href=\"https://www.infoq.cn/minibook/G0mJVbQDuB4v0RTlDPWg\">人工智能行业</a>\"属于技术密集型行业，存在持续进行高强度研发的需求，该公司收入规模有可能无法支撑其进行持续大规模研发投入和市场开拓等活动，可能将面临持续亏损的风险。即使将来能够实现盈利，亦未必能在其后期间保持盈利。预计首次公开发行后，该公司短期内无法现金分红。</p><p></p><p>研发支出方面，报告期内，公司的研发投入分别为 1.99 亿元、2.19 亿元、2.95 亿元和 1.47 亿元，占营业收入的比例分别为 86.79%、51.42%、52.17%和 79.13%。</p><p></p><p>云天励飞在招股书中表示，公司自成立以来注重技术研发团队的建设，截至 2022 年 6 月末，公司拥有一支覆盖人工智能算法、人工智能芯片、大数据处理三大技术平台的 511 人的研发团队。截至报告期末，公司研发团队中，有 167 人拥有硕士及以上的相关学历。</p><p></p><p>在行业竞争方面，云天励飞在招股书中提到，近年来，国内人工智能行业发展迅速，竞争愈加激烈。在视觉人工智能领域，国内主要企业除云天励飞外还包括商汤科技、旷视科技、依图科技、云从科技等，该等企业与云天励飞业务和盈利模式更接近，都主要聚焦在视觉人工智能技术和产品的研发和应用，依赖自身技术先进性和创新性生存和发展。</p><p></p><p>此外，海康威视、大华股份、宇视科技、苏州科达、东方网力等传统安防厂商，以通信设备起家的华为和以视频存储硬件起家的浪潮等企业也通过产业链延伸的方式涉足行业，该等企业更多是立足在其既有的产品优势基础上，通过切入视觉人工智能行业来巩固和扩大其在既有产品领域的优势，行业在此基础上形成百花齐放的局面。同时，在人工智能芯片领域，亦有寒武纪、英伟达等重要参与方。</p><p></p><h2>“算法芯片化”与“端云协同”</h2><p></p><p></p><p>据介绍，云天励飞的核心能力是“算法芯片化”，让算法和芯片这两大技术能够相互配合，为解决方案和应用场景更高效地赋能。</p><p></p><p>云天励飞董事长兼CEO陈宁此前在接受采访时曾谈到，算法芯片化不等于“算法+芯片”，而是指一种算法与芯片融合发展的设计理念和流程，是基于设计者对算法的深刻的理解，把里面共性的操作提炼出来去设计芯片架构。</p><p></p><p>算法方面，云天励飞的算法项目作为工信部的国家人工智能重点任务揭榜。2018 年，云天励飞获得被誉为“中国智能科学技术最高奖”的吴文俊人工智能科学技术奖。</p><p></p><p>芯片方面，云天励飞通过自定义指令集、处理器架构及工具链的协同设计，自主研发芯片并已实现流片、量产及市场化销售。2019年云天励飞自研芯片 DeepEye1000实现独立商用，2022年底新一代芯片DeepEdge 10开始流片，预计今年量产投入使用。</p><p></p><p>能够配合“算法芯片化”能力，实现面向场景的快速落地，则依赖于端云协同的技术路线。</p><p></p><p>端云协同指通过端侧和云侧的深度交互，优化算力算法在端侧和云侧的动态分配。传统的方案是：终端负责采集数据，采集到的数据直接传输到云端，由云端分析处理数据，但这不仅为传输带来巨大压力，云端输出数据处理结果时也往往存在时延。而采用端云协同路径的方案是：终端不仅负责采集数据，同时也负责部分的数据的识别和分析，处理数据后，仅上传与场景业务需求相关的特征要素，这样一来，不仅可以减缓传输的压力，云端分析也能够更快。</p><p></p><p>在端侧，云天励飞应用自研的AI芯，部署可重定义智能相机，实现数据的高效采集和前端处理；在云侧，与基于云天励飞自有算法和大数据分析技术为核心的业务系统高度适配，从而根据不同业务场景需求进行灵活调整，实现数据的前端智能采集和云端处理。</p><p></p><p>通过算力前置，实现终端分布式算力与云端中心算力的动态平衡；通过在终端设备中部署公司的可重定义芯片，实现云端业务系统与终端设备的动态适配，大幅提升AI解决方案整体的动态适应能力和灵活处理能力，加速AI解决方案的推广与落地。</p>",
    "publish_time": "2023-04-04 12:40:57",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "微众银行区块链助力大湾区一体化；农业银行发布金融AI大模型应用ChatABC；Bloomberg推出金融大语言模型BloombergGPT|金融科技新闻速览（3.31-4.3）",
    "url": "https://www.infoq.cn/article/TVocv80lDp1Y9BOkDY8H",
    "summary": "<p>厦门国际银行优化线上金融服务；<a href=\"https://www.infoq.cn/article/qoXrPQ52pAxL9xAU67R2\">微众银行区块链</a>\"助力大湾区一体化；招商银行已支持在招行 App 、柜面、网银、等多个渠道使用数字人民币；农业银行发布自主创新金融 AI 大模型应用 ChatABC ……一文速览金融科技领域最新动态！</p><p>&nbsp;</p><p></p><h4>厦门国际银行：优化线上金融服务，手机银行财富功能用“新”升级</h4><p></p><p></p><p>近日，为进一步深化“客户为尊”经营理念，满足消费者的个性化财富管理需求，厦门国际银行优先围绕客户使用频率最高的个人手机银行 APP ，通过升级优化财富功能，持续提升客户线上旅程服务体验，为广大客户提供更加高效、优质、便捷的财富管理服务。据悉，厦门国际银行手机银行 APP “理财”版块中产品展示、购买操作流程、持仓功能体验的使用体验均有大幅度提升。在新推出的“如 e 加”服务中，客户在线上即可完成签约以及设置、调整活期留存金额，并查询交易记录、资产变化等信息。同时，客户超过留存金额的活期资金将自动买入至底层现金类产品，实现闲置资金自动化收益升级，能够享受提供更便捷、更省心的闲钱管理服务。此次升级还推出了 AI 智能双录系统，能够提供手机银行端 7×24 小时信托申购双录服务，客户购买信托产品无需前往营业网点、不再受营业时间限制，极大提升客户财富体验；同时创新推出贵金属个性化定制服务，上线手机银行贵金属定制专区功能，满足客户日益丰富的黄金投资需求。</p><p>&nbsp;</p><p></p><h4>区块链赋能材料银行，让数据多跑路群众少跑腿</h4><p></p><p></p><p>近日，杨浦区大数据中心结合“区块链+政务服务”，为“材料银行”赋能，实现了用户自助上传电子材料的可信授权，帮助企业群众更快速、更便捷地完成事项办理。“和一般意义上的电子材料库不同，应用‘区块链’技术赋能‘材料银行’，能够有效解决跨省材料互认互通。”据“材料银行”数据工程师介绍，目前每名用户可以在“材料银行”自主上传 50 份电子材料，只要通过数据治理认证，外省市核发的证照、证明就可以在办理业务过程中直接使用。目前这项便民服务已在与杨浦签订“跨省通办”的“四省九地”得到落地推广，杨浦政务服务的深度和广度再一次得到拓宽。</p><p>&nbsp;</p><p></p><h4>全国医保电子票据区块链应用在杭启动</h4><p></p><p></p><p>3 月 30 日，全国医保<a href=\"https://www.infoq.cn/article/RyDv9VbUdmW4fElkNjeg\">电子票据区块链</a>\"应用在杭州启动，国家医保局相关负责人表示，该应用上线标志着医保零星报销将步入智能化新时代，这不仅是国家推进医疗保障领域社会治理现代化的一项重要举措，也是政府公共服务与现代信息技术的一次深度融合。据了解，医保电子票据区块链应用是全国统一医保信息平台建设的重要组成部分。借助区块链技术，医保电子票据可实现即时生成、传送、储存和报销全程“上链盖戳”，能有效破解群众报销材料繁琐、各地票据样式不一、窗口审核效率不高、积压件和假票据时有发生等堵点问题，改善医保经办效率，提升参保群众的获得感幸福感。</p><p>&nbsp;</p><p></p><h4>微众银行区块链助力大湾区一体化</h4><p></p><p></p><p>作为国内首家数字银行，<a href=\"https://www.infoq.cn/article/oe0f*ixOWmzAzAjGuwjq\">微众银行</a>\"立足粤港澳大湾区，依托自身科技创新的基因，于 2015 年即开展区块链领域的技术攻关和应用实践，自主研发一整套覆盖底层、中间件、应用组件的联盟链全栈技术体系，并自 2017 年起，将牵头研发的区块链底层平台 FISCO BCOS 等核心研发成果面向全球开源。迄今，微众区块链发布 12 个开源项目，实现全链路国产化支持，在数字经济发展、数字社会建设等方面落地了系列创新实践，如珠三角征信链、澳门智慧城市建设之证书电子化等，有效助力了粤港澳大湾区一体化融合发展。</p><p>&nbsp;</p><p></p><h4>招商银行：已支持在招行 App、柜面、网银、等多个渠道使用数字人民币</h4><p></p><p></p><p>近日，各大行陆续发布 2022 年年报。其中，招行在报告中透露，招行数字人民币服务自 2022 年 1 月 4 日面客以来，积极探索与业务的融合，完善客户服务能力，已支持在招商银行 App、柜面、网上企业银行、招商银行企业 App、薪福通等渠道和多个业务场景中使用数字人民币服务，并达成合作输出数字人民币服务方案。</p><p>&nbsp;</p><p></p><h4>Bloomberg 推出金融领域大型语言模型 BloombergGPT</h4><p></p><p>近日，财经资讯公司 Bloomberg 发布专门为金融领域打造的大型语言模型 BloombergGPT，该模型已在广泛的金融数据上进行了专门的训练，以支持金融行业内一系列不同的自然语言处理（ NLP ）任务。此外，该模型将帮助 Bloomberg 改进现有的金融 NLP 任务，如情绪分析、命名实体识别、新闻分类和问题回答等，将通过整理 Bloomberg 终端上的大量数据提供新的机会，以将人工智能的潜力带入金融领域，更好地帮助公司的客户。</p><p>&nbsp;</p><p></p><h4>农业银行发布自主创新金融 AI 大模型应用 ChatABC</h4><p></p><p></p><p>近期，以 ChatGPT 等为代表的人工智能大模型应用百花齐放，引发了各行各业对人工智能大模型的广泛讨论，大模型在金融行业的应用也成为同业金融科技创新探索的热点。中国农业银行主动拥抱 AI 大模型前沿技术，以技术探索创新为牵引，以场景价值赋能为目标，推出金融行业首个自主创新的金融 AI 大模型应用 ChatABC。据了解。ChatABC 依托农业银行人工智能服务体系的算力、算法、数据、人才四位一体的基础能力，重点着眼于大模型在金融领域的知识理解能力、内容生成能力以及安全问答能力，对于大模型精调、提示工程、知识增强、检索增强、人类反馈的强化学习（ RLHF ）等大模型相关新技术进行了深入探索和综合应用，结合农业银行研发支持知识库、内部问答数据以及人工标注数据等金融知识进行融合训练调优，实现了全方位的金融知识理解和问答应用，同时实现了全栈 AI 技术的自主可控。 1.0 版本 ChatABC 大模型拥有百亿级参数，可初步具备自由闲聊、行内知识问答、内容摘要等多类型任务的服务能力，已在行内多个渠道以多轮问答助手、工单自动化回复助手等形式面向内部员工开放试用，并可通过 MaaS（ Model as a Service ）方式面向其他场景提供一站式决策辅助服务，未来将逐步形成大模型服务生态。</p>",
    "publish_time": "2023-04-04 13:44:34",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "华为云以人工智能技术加速智能驾驶量产车数据迭代；腾讯获杭首批高级辅助驾驶地图许可资质；奔驰 L3 级驾驶领航系统迎来中国首试|汽车技术新闻速览（3.31-4.3）",
    "url": "https://www.infoq.cn/article/J8cbCCtGIa3BCz39cWb9",
    "summary": "<p>比尔盖茨预测自动驾驶汽车技术将在未来十年内达到“临界点”；小鹏汽车计 2024 年实现从车位到车位的智能导航辅助驾驶能力；芯驰推出基于车规处理器 X9U 的舱泊一体解决方案；梅赛德斯-奔驰量产 L3 级自动驾驶体验……一起看看汽车技术领域又有哪些新动向！</p><p></p><p></p><h4>比尔盖茨试乘自动驾驶汽车并发文</h4><p></p><p></p><p>比尔盖茨近日发表了一篇关于自动驾驶的博客文章。他预测，自动驾驶汽车技术将在未来十年内达到“临界点”。一旦汽车真正实现自动驾驶，它们将像个人电脑一样具有革命性。盖茨表示，“到那时，自动驾驶汽车将彻底改变交通，就像个人电脑彻底改变了办公室工作一样。” 此外，比尔盖茨认为，只有在自动驾驶技术应用到长途卡车、快递车、出租车和租赁汽车之后，个人车辆才会具备自动驾驶功能。他预测，自动驾驶汽车最终将比普通汽车更便宜。</p><p></p><p></p><h4>小鹏汽车吴新宙：计划 2024 年实现从车位到车位的智能导航辅助驾驶能力</h4><p></p><p></p><p>3 月 31 日，小鹏汽车自动驾驶副总裁吴新宙透露，小鹏汽车计划今年上半年发布基于高精地图（新增上海），以及全国范围内无图城市的 NGP ；今年下半年实现大部分无图城市开放变道、超车、左右转能力；2024 年实现全场景打通，实现从车位到车位的智能导航辅助驾驶（ XNGP ）能力，接近<a href=\"https://www.infoq.cn/article/YO5X94HqNPzFimWS46sk\"> L4 级自动驾驶</a>\"。</p><p></p><p></p><h4>芯驰推出基于车规处理器 X9U 的舱泊一体解决方案</h4><p></p><p></p><p>4 月 3 日，芯驰科技推出了基于车规处理器 X9U 的舱泊一体解决方案，成功在单个芯片上实现智能座舱、360 环视和泊车功能的融合，在保障安全性的前提下优化系统 BOM 成本。芯驰科技官方表示，芯驰车规处理器 X9U 的 CPU 算力达到 100KDMIPS ，支持最多 10 个高清显示输出，可以覆盖 HUD 、仪表、中控、电子后视镜、副驾娱乐等常规智能座舱功能；同时，X9U 的 GPU 可以实时处理 4 路高清环视摄像头，支持 360°全景环视的拼接和渲染；X9U 内置 AI 加速单元，用于车位识别、障碍物检测等功能，实现辅助泊车。</p><p></p><p></p><h4>恒驰 5 迎来 OTA 升级，智能辅助驾驶系统正式开放</h4><p></p><p></p><p>恒驰汽车 4 月 3 日宣布，恒驰 5 迎来重要 OTA 升级，H-PILOT 智能辅助驾驶系统正式开放，并对车机交互体验和智能用车进行优化。据悉，本次升级版本为 H-SMART OS V1.4.0 版软件，将实现高速公路驾驶辅助、全速自适应巡航控制、自动紧急制动等。</p><p></p><p></p><h4>奔驰 L3 级驾驶领航系统迎来中国首试</h4><p></p><p></p><p>近日，梅赛德斯-奔驰自动驾驶科技日圆满落地。此次科技日期间，全球首个获得国际认证并量产的 L3 级有条件自动驾驶系统—— DRIVE PILOT 驾驶领航系统迎来中国首试。据了解，L3 级 DRIVE PILOT 驾驶领航系统真正做到了由系统接管驾驶任务，解放驾驶员的双手双眼。面对复杂路况，DRIVE PILOT 驾驶领航系统通过激光雷达、摄像头、毫米波雷达等 30 多种传感器全面感知、精准识别，并以毫秒级的响应，智能实时规划 400 条路径，通过车速、转向、舒适等多维度的代价评估，选择最安全且舒适的行驶路径，同时搭载的电控冗余、转向冗余、制动冗余等“双备份”的冗余系统，以安全储备提升安全性。</p><p></p><p></p><h4>腾讯获得杭州首批高级辅助驾驶地图许可资质</h4><p></p><p></p><p>4 月 3 日消息，腾讯获得杭州市首批高级辅助驾驶地图许可资质。此前，腾讯已经获得广州、深圳、上海发放城市高级辅助驾驶地图许可。据悉，腾讯支持一体化地图数据采集体系，可实现标准地图、车道级地图、高精地图数据的“三图合一”，在人工驾驶、辅助驾驶、智能驾驶等不同驾驶模式下，可为用户提供连续、流畅的导航体验。截至目前，腾讯已经覆盖全国 38 万公里高速及城市快速路<a href=\"https://www.infoq.cn/article/CjNxyJtOKcZ4hPuXOPfV\">高精度地图</a>\"数据，未来，腾讯还将持续深入在重点城市开展高精度地图研发应用等工作，加速覆盖全国上百个城市普通道路，推进智能网联汽车及智慧交通等业务布局。</p><p></p><p></p><h4>华为云以人工智能技术加速智能驾驶量产车数据迭代</h4><p></p><p></p><p>3 月 31 日- 4 月 2 日，由中国电动汽车百人会主办的中国电动汽车百人会论坛（ 2023 ）在北京召开。<a href=\"https://www.infoq.cn/article/mQIaoR9f9ALaurIcEb0k\">华为云</a>\"计算公司 EI 服务产品部部长尤鹏作为云计算领域的代表，受邀在智能汽车论坛发表主题演讲。他表示，自动驾驶领域开发业务需求中面临着诸多业务痛点，而打造自动驾驶数据闭环，是实现高阶自动驾驶的必由之路。华为云提供“训练加速、数据加速、算力加速”三层加速方案，使能模型的高效训练和推理，实现自动驾驶数据的快速闭环流转。</p>",
    "publish_time": "2023-04-04 13:44:37",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "从石器时代到成为“神”，一文讲透eBPF技术发展演进史",
    "url": "https://www.infoq.cn/article/Y8NP88aKpFBtG7H2kK4a",
    "summary": "<p></p><h2>1.前言</h2><p></p><p>&nbsp;</p><p>技术的发展往往是积跬步而至千里的。Linux从1992年诞生，发展至今已经覆盖大小各类的信息基础设施。是什么样的力量让Linux能够始终保持发展活力？又该如何看待Linux之上出现的新的技术趋势？</p><p>&nbsp;</p><p>本文试图通过梳理<a href=\"https://www.infoq.cn/theme/181\">eBPF</a>\"的演进过程，探索Linux内核的发展动力来源与发展轨迹，与大家一同畅想eBPF给内核技术、Linux生态带来的全新变局。</p><p></p><h2>2.eBPF技术概览</h2><p></p><p></p><h3>2.1.实现原理</h3><p></p><p>&nbsp;</p><p>大家可能都知道图灵机，这是一个可计算理论模型，可以用来判断计算机的计算能力。图灵机是目前有可能实现的计算能力最强的理论模型，目前我们常用的计算机，理论上都是等价于图灵机的。</p><p>&nbsp;</p><p>BPF的出现是对计算能力的渴求，其原理就是通过IR模拟一台RISC指令集的计算机嵌入到内核中，将内核内部的静态编译逻辑转变为更加灵活的动态编译逻辑，使内核获得近似于图灵机的动态逻辑定制能力。而从classic BPF到extended BPF的发展，是将这一计算方式进一步夯实和通用化。</p><p>&nbsp;</p><p>BPF的出现乃至到eBPF的进一步发展，为内核带来了巨大的改变，使内核具备了更加强大、可编程的动态变化的能力。这种能力在各种需要定制化的应用场景中，将发挥巨大的价值，既可以用于扩展功能，也可以用于优化性能。</p><p>&nbsp;</p><p>在实现上，为适应不同业务场景的需求，使eBPF具备等价于一台RISC指令集计算机的计算能力，通过输入参数、Map数据存储、Helper帮助函数，构成了eBPF程序与内核交互的运行环境。eBPF指令集的计算和控制能力、运行环境与内核的交互能力，两者叠加构成了eBPF程序强大的处理能力。</p><p>&nbsp;</p><p>在安全方面，通过Verifier严格检查eBPF程序的可完成性、数据访问的合法性等，保证了eBPF程序与内核交互过程中内核不被挂起、核心数据不会被破坏。</p><p>&nbsp;</p><p>在BPF发展过程中，由cBPF发展成为eBPF是一次大的技术升级。eBPF在cBPF的基础上重新设计了指令集、引入了JIT、增加了辅助函数，大大扩展了复杂逻辑的设计能力。虽然eBPF有巨大的进步，但是基本的底层设计还是一致的，因此两者统称为BPF。</p><p>&nbsp;</p><p>由于eBPF兼容cBPF，在未指定时，BPF更多指eBPF所定义的内涵。后文用BPF泛指整个BPF相关的基础机制，eBPF特指最新的BPF标准。</p><p></p><h3>2.2.技术特点</h3><p></p><p>&nbsp;</p><p>BPF还在快速发展，它的计算能力和完备性也在迅速提高，前景无限。但就具体的版本而言，却又呈现具体技术特点，主要是其支持的能力和受到的约束两个方面。下面以最新的BPF技术标准(v6.1)为蓝本，介绍BPF的主要技术特点。</p><p>&nbsp;</p><p>RISC指令集</p><p>&nbsp;</p><p>BPF的核心是一个虚拟计算机，它采用类RISC指令集，支持跳转、算数运算、尾调用等基本操作。在运行BPF程序的计算机上，BPF指令会被内核的JIT编译器动态编译为物理机原生指令，实现运行效率的“零”损耗。在支持BPF卸载的设备上，BPF程序也可以卸载到设备上执行。在BPF的指令集中还支持伪调用指令，可以调用到内核帮助函数。</p><p>&nbsp;</p><p>同时，BPF的指令的编码空间中还有大量的储备，未来根据需要一定还会继续增加指令，提升BPF实现复杂逻辑的能力。</p><p>&nbsp;</p><p>Map</p><p>&nbsp;</p><p>基于键值对的数据存储机制，可用于实现内核、用户态的数据存储和交换。</p><p>&nbsp;</p><p>Helper函数</p><p>&nbsp;</p><p>专用于BPF程序调用的函数接口，用于封装内核中的功能，使BPF程序可以和内核互操作，同时保持BPF程序和内核的安全隔离。</p><p>&nbsp;</p><p>BPF子程序</p><p>&nbsp;</p><p>实现了BPF程序之间的调用。</p><p>&nbsp;</p><p>上下文</p><p>&nbsp;</p><p>BPF程序的语境和运行上下文，是一种内部透明的数据结构。只有在明确BPF程序的类型时，上下文的定义和内部数据结构才是确定的。不同的BPF程序类型，上下文也各不相同。</p><p>&nbsp;</p><p>CO-RE</p><p>&nbsp;</p><p>通过运行时类型支持，实现一次编译、随处运行。</p><p>&nbsp;</p><p>支持特权和非特权级两类运行模式</p><p>&nbsp;</p><p>分为特权级（百万ins）和非特权级（4096ins）两类运行方式。特权级模式下BPF程序可以获得更宽的权限，实现更复杂的逻辑功能。</p><p>&nbsp;</p><p>保证向后兼容</p><p>&nbsp;</p><p>这一原则对于BPF的推广应用非常重要，可以保证旧标准的BPF程序在新标准下也可以正确执行。但同时，也对未来BPF发展带来了约束，只有把握好BPF的发展方向，做好底层设计，才能两者得到兼顾。</p><p>&nbsp;</p><p>比如，从老版本遗留下来的cBPF程序在eBPF中都会被JIT正确翻译和执行。</p><p>&nbsp;</p><p>稳定的ABI</p><p>&nbsp;</p><p>BPF稳定的ABI包括，BPF程序类型对应的输入参数定义，可调用的内核帮助函数定义，返回值定义等。使用稳定的ABI的BPF程序，可保证与不同版本的内核都是兼容的。</p><p>&nbsp;</p><p>另外，BPF还在快速发展中，它的功能特性需要逐步释放，因此目前还有诸多限制，其中有些是基于安全、可靠性考虑，有些是没有超出范围的应用需求的保守设计等等。随着安全机制的完善、应用程序的扩展、生态体系的成熟，相应的限制也会逐步的改变。</p><p>&nbsp;</p><p>目前的实现中，有如下限制：</p><p>&nbsp;</p><p>总运行时间有界：有界性这是基本原则，应该在比较长的时间内都不会改变。但是，在不改变有界性的前提下，根据具体需要适当调整更合理的上限，这是存在极大可能的。指令总数限制：非特权用户最大指令数4096，特权用户最大指令数1百万。分支数限制。BPF调用嵌套层次限制。Map实例数限制。验证状态数限制。最大分支数限制。堆栈长度限制：目前支持的堆栈最大长度为512字节。上下文限制：每一种类型的BPF程序，都有其对应输入参数定义，彼此不同。也就是说，BPF程序只能接受特定的输入并进行处理，不能访问内核的全部状态空间。辅助函数限制：每一个BPF程序类，都有其对应的辅助函数集合。这些辅助函数，由内核各子系统提供，是BPF程序类上下文的一部分。它们帮助BPF程序与内核各子系统交互，同时又保护内核不会被破坏。</p><p>&nbsp;</p><p>上面赘述了很多特性，大家可能会有很多疑问，比如：为什么采用精简指令集呢？因为这是目前最主流的指令集类型，相对于复杂指令集，精简指令集更有利于实现更高密度、更高吞吐量、更高主频的处理器。因此x86之后出现的新型指令集系统，绝大多数都是精简指令集，包括现在的开源指令集RISC-V。另外也有人会问，为什么不采用原生的指令集呢？为什么5个参数寄存器呢？本篇暂不深入讨论，后续主题涉及到的时候再详细讲解。</p><p></p><h3>2.3.应用价值</h3><p></p><p>&nbsp;</p><p>BPF的应用价值与其动态和可定制特性强相关。内核研发中一直坚守的原则是：“机制与策略分离”，即：内核负责提供机制，将策略开放给上层。在机制与策略之间需要一层界面来进行交互。系统调用是最初方案。它是单向发起的，缺少事件模型。虚拟文件系统，提供了双向的交互方式，但难以灵活定制复杂的逻辑。</p><p>&nbsp;</p><p>由于软件功能越来越复杂，无法用简单规则来表达，软件的基础功能设施与业务逻辑，需要进行解偶。而业务逻辑部分，需要根据业务定制，因此很适合用BPF实现。比如：过滤器、权限检查、模糊测试等类型的功能，比较适合用BPF实现。另外，视具体问题，也可以应用于调度算法、用户态交互（替代系统调用，实现更加可变的服务逻辑）、加载器、模拟器、兼容层、轻量化内核、多态内核、启动方式。</p><p>&nbsp;</p><p>每一种业务类型都有其独具特征的逻辑模型，通过更形式化地定义这些业务模型，可以更好地理解它们和BPF的结合性，找到更好的实现方案，充分发挥BPF带来的强大能力。后续篇章，我们会对典型的应用模型进行更深入的讨论，以及BPF在这些应用场景中，应该在哪些特性方面进行加强或改进。</p><p></p><h2>3.eBPF技术发展溯源</h2><p></p><p>&nbsp;</p><p>回顾技术的发展过程，就像观看非洲大草原日出日落一样，宏大的过程让人感动，细节部分引人深思。每天循环不辍，却又每天不同。</p><p>&nbsp;</p><p>BPF的应用早已超越了它最初的设计，但如果要追溯BPF最初的来源，则必须回归到它最初的应用领域，再进行理解分析。BPF最初的用途在于观测，最初用于网络报文的抓取和分析。因此BPF的最初、最根本的来源，是作为一种观测手段出现的。而在这个领域中，技术的演进迭代，是一个很长的过程，体现了内核技术发展的艰辛、也同时充满了趣味。</p><p>&nbsp;</p><p>如果把内核看作一个世界，在这个广袤的土地上，观测技术的发展，也同样经历了从蒙昧到现代的发展过程。每个时代都有其独具特色的观测技术，它决定了当时的开发人员需要具备什么样的功底，什么样的开发方式，这构成了一个时代特色，也谱写了时代的故事。</p><p>&nbsp;</p><p>而每次时代的更迭，总是在某些方面颠覆了或者突破了传统的思维，从而引发了观测方式的巨大进步，促进了效率和可观测性的提升。对现有技术的深入研究与颠覆性的思想所构成的创新，是技术领域演进的基本形式。而其创新的动力又是什么呢？我们在后文逐步揭示。</p><p></p><h3>3.1.石器时代</h3><p></p><p>&nbsp;</p><p>曾几何时，内核的开发还在初始阶段，由于内核的原理复杂、所处的位置特殊，开发方式和用户态有很大不同。内核开发难度远远大于用户态的应用开发，尤其调试比较困难。犹记得那时对于内核是否引入GDB调试机制，有过一些争论。其分歧点就在于，引入过于复杂的机制会改变内核的行为特性，影响问题的稳定性，反而不利于问题的分析定位。</p><p>&nbsp;</p><p>那时最值得信赖的工具就是Printk。这是一种低介入的观测工具，使用简单，几乎可以用于任何地方，帮助开发人员观测内核的运行状态。但显著的缺点是不够灵活，如果问题涉及的逻辑路径比较长、分支比较复杂的话，需要反复多次才能定位问题的根源。因此，那时候对内核开发人员的一个必不可少的要求，就是对所负责子系统的实现原理和代码逻辑的熟悉程度需要非常高，能够根据比较少的观测信息，准确定位问题的根源。</p><p>&nbsp;</p><p>事物总是存在两面性，就像当初产生的那场争论一样，Printk除了基本的信息输出机制外，几乎没有提供任何强有力的特性。这固然体现了当时的技术水平还在比较原始的阶段（没错，就像是石器时代），但同时也倒逼当时的内核开发人员超强的代码理解和分析能力，以便弥补简陋的工具对效率的掣肘，更快地解决程序中的BUG。</p><p>&nbsp;</p><p>另一方面，客观地讲，Printk固然简单，卓尔无往不利。它可以使用在任何地方，具有完全的上下文访问能力，不受约束的表达能力。它的观测能力和程序本身完全相等，程序本身能看到什么，它就能看到什么，可以说是强大到巅峰。这种强大也是其无法被取代的根本原因，尽管内核的调测技术不断在发展，这一点始终未被超越。它可以用任何线性的文本形式，输出开发人员关注的上下文信息。在后来，这种表达能力得到了进一步发展，支持了部分正则文法。</p><p>&nbsp;</p><p>它的缺点在于缺乏交互性，任何一点改变都需要修改程序。另一方面，不管上层流程是否被关注，它的信息都会被输出，大大影响了性能。</p><p>&nbsp;</p><p>Printk可以说是最强大的工具，至今我也是这样认为。但它同时也是最粗糙的工具。就像石头一样，prink随处可见，随处可用，用了就一定有所得。简单、强大、直接。但是同样像石头一样，如果用得多了，就会成为垃圾。</p><p>&nbsp;</p><p>Printk相比于BPF，拥有完全不受限制的上下文访问能力，使用的地方几乎没有限制，仅从观测的角度，强大之处有过之而无不及。但是使用方式过于原始，缺乏工业化的扩展能力，因此如果在更长的时间尺度、更广的应用领域来看的话，Printk无法和BPF相提并论。</p><p></p><h3>3.2.铁器时代</h3><p></p><p>&nbsp;</p><p>在石器时代，人们使用石头磨制的工具进行生产，这些工具粗糙、非标准化、材质原始容易损坏，笨重、使用寿命短。Printk也是一样，每次执行时都会输出信息，但大多数时候是不需要的；寿命短，每次改变需要修改代码。</p><p>&nbsp;</p><p>随着内核越来越成熟，架构设计、模块划分、内部功能等等都越来越规范合理。内核的特性，由各个子系统分别负责，内核的整体表现是各个子系统行为表现的综合。而子系统内部的关键路径，决定了子系统主要的行为表现，比如：调度系统中的CPU时间统计、上下文切换，迁移等等；内存管理系统中的内存分配、NUMA平衡；虚拟内存中的页面错误、交换次数等等。</p><p>&nbsp;</p><p>随着内核设计的规范化，其内部的关键节点和呈现在外部的语义都越来越清晰和标准化。要掌握内核的运行状态，其实并不需要随处观察，只需要掌握几个关键节点、关键信息就可以了。</p><p>&nbsp;</p><p>以关键变量为基础，工具得以升级；以语义规范化为基础，为交互式的观测机制提供了基础。至此，观测手段不再是单纯的信息输出，它也可以反过来影响系统行为实现多维度的观测。</p><p>&nbsp;</p><p>虚拟文件系统Proc首先打通了用户态和内核态的交互通道，从原来只能控制日志级别，到可以控制数据本身，可以控制的范围更广、更深了；从文本交互，转换为二进制交互，内核性能受到的影响进一步降低。提供了标准化的API、类型的支持，降低了开发难度，便于推广使用。提炼出关键参数，通过虚拟文件系统进行交互式的系统观测，反过来有利于内核的规范化。</p><p></p><h3>3.3.蒸汽时代</h3><p></p><p>&nbsp;</p><p>Proc的定义很大一部分还是与具体的上下文相关，并不适合大批量的使用。而Trace定义了协议规范，抽象层次更高，可以批量使用。</p><p>&nbsp;</p><p>Trace是一个更加纯粹的观测机制，给用户提供了通用简单的接口，底层实现了很丰富的机制。可以支持大量使用，对于可观测性的提升起到了根本性的推动。可以批量重复使用，这是它和其他观测方式的区别。</p><p>&nbsp;</p><p>如果说Proc采用了代码数据化的思想，那么Trace采用很多元编程的思想，极大简化了外部接口，减少了重复代码。</p><p></p><h3>3.4.电气时代</h3><p></p><p>&nbsp;</p><p>Trace机制固然好用，只要预先铺设了基础设施，运行时就可以随时开启观测。但缺点是，对于没有铺设铁轨的地方，火车的承载能力再强也是无法到达的。</p><p>&nbsp;</p><p>Trace的机制很通用，但另一方面，它无法深入业务层面进行更进一步的调测。要实现这一点，需要完整的上下文能力和可编程能力，因此kprobe出现了。只要由函数的地方，就像通了电一样，随时可以点亮，这是Kprobe强于Trace的覆盖能力。能够完整访问函数上下文，这是Kprobe强于Trace的业务理解能力。</p><p></p><h3>3.5.智能时代</h3><p></p><p>&nbsp;</p><p>Kprobe是动态性的萌芽，但是存在很多不足。它在内核态运行需要对内核编程有一定了解，编程门槛较高。此外，它还存在安全性问题、可扩展性问题，等等。</p><p>&nbsp;</p><p>从计算能力来说，所有图灵机的计算能力是相等的，要解决能力问题，最终是要实现一个虚拟机的。而在内核态实现一个虚拟机，所涉及到的安全问题是必须考虑的，通过Verifier和运行时Helper函数，做到了逻辑约束和上下文隔离。虚拟机、Verifier和Helper函数，是BPF和Kprobe的根本区别。</p><p>&nbsp;</p><p></p><p></p><h2>&nbsp;4.内在驱动</h2><p></p><p>&nbsp;</p><p>由以上简要的回顾和梳理可见，内核开发者们所不断寻找的是一种充分表达能力的动态机制，进而打破内核和用户态的壁垒（至少在逻辑层面），从而实现一种自由、直接的需求实现。技术成为内核开发者们锋利的工具，不断突破限制，揭示事物的本质。</p><p>&nbsp;</p><p>BPF技术的出现和发展，从时间尺度来说并不长，但是从其内在的驱动来说，有着复杂的动因，是很多因素就和在一起的必然结果。由于其复杂性，从任何一个孤立的角度进行分析都是不充分，只有从各个不同的角度分析，才可以体会出不同的趣味。</p><p>&nbsp;</p><p>通过探寻其深层次的原因，可以梳理出更加清晰的发展脉络，从而可以更好地展望BPF及其相关技术领域的未来发展，为我们学习、研究和加入BPF的发展打下基础。</p><p>&nbsp;</p><p>下面，我们试着从复杂性、微内核化两个方面，分析BPF发展的内在动力。</p><p>&nbsp;</p><p>内核的发展历史就是一个复杂性不断递增的历史，内核的发展也是不断控制复杂性、维持内核代码的可理解性的过程。因此，内核的开发始终坚持一个原则，就是机制与策略的分离。</p><p>&nbsp;</p><p>在不同时期，如何进行机制与策略的分离，有着不同的答案。随着技术和应用的不断发展，维持这一原则的的难度是不断增加的，需要更新的思想、更先进的技术才能支撑。或者也可以说，正因为内核的发展过程中，始终坚持了这个原则，所以才不断有影响深远的基础技术的出现。</p><p>&nbsp;</p><p>我相信，要实现定制与动态，有很多不同的方案。但我认为BPF的出现是最佳的选择，使内核的发展有了应对未来变局的基础。</p><p>&nbsp;</p><p>这是BPF出现的契机，也是其未来快速发展的动力。</p><p></p><h3>4.1.代码规模问题</h3><p></p><p>&nbsp;</p><p>Linux项目发展至今，其代码总量早已超过千万，是一个非常庞大的项目。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/18/18002074940e509d0b2338938e35909e.png\" /></p><p></p><p>注：来源<a href=\"https://www.phoronix.com/misc/linux-eoy2019/lines.html\">https://www.phoronix.com/misc/linux-eoy2019/lines.html</a>\"</p><p>&nbsp;</p><p>由统计数据可以看出，Linux项目的复杂度（从代码量角度）一直在不断增长。</p><p></p><h3>4.2.软件结构的复杂</h3><p></p><p>&nbsp;</p><p>整个软件系统，从应用程序到内核是一个繁杂的层次结构，又由于模块之间的交叉，实际的运行流程是一个复杂的有向图结构。</p><p>&nbsp;</p><p>以完成一次简单的文件操作为例，首先应用程序需要open一个文件，这首先会运行到某种运行时库，完成资源分配、接口转换等等处理。然后，流程才会到系统调用这一层。系统调用中，由VFS解析文件路径信息，找到对应的文件系统信息。再由具体的文件系统完成文件打开的操作。</p><p>&nbsp;</p><p>这其中至少涉及到了应用程序、运行时库、系统调用、VFS、文件系统等多个层次。如果再细分的话，还涉及到用户态内存管理，内核态内存管理、权限管理、命名空间管理、句柄管理、缓存管理、锁、钩子等次级模块。</p><p>&nbsp;</p><p>目前Linux支持的文件系统至少已经达到七十多种，有基于本地存储设备的、基于网络的、分布式的、基于内存的、虚拟的等等。有的文件系统在内核态实现，有的在用户态实现。</p><p>&nbsp;</p><p>另外，C语言的条件编译，可以针对使用场景选择适合的代码编译。每一个条件编译选项就是对现实条件的一个考量。从Linux整个源码树中使用的条件编译选项的数量，也可以反映出Linux整个源码的复杂度。对Linux 5.10的源代码粗略统计，条件编译选项已经多达18000多个；而在6.1版本中，已经达到了19000多个。</p><p></p><h3>4.3.业务系统的复杂</h3><p></p><p>&nbsp;</p><p>在虚拟化技术以前，不同应用场景的业务系统的结构差异，主要表现为平面性的拓扑结构的差异，比如：对等式的、分布式的、客户服务器模式的等等，由于网络拓扑结构的不同、节点承担的业务角色的不同，形成了各种各样的业务系统。</p><p>&nbsp;</p><p>在虚拟化技术出现后，云计算迅猛发展，云成为了信息系统的基础设施。业务系统的差异不仅仅体现在横向拓扑结构上，其自身逻辑的深层组成也是非常复杂。它可以运行在真实计算机上也可能在虚拟机上，可能在一个独立的命名空间，也可能和别的业务共享。不同业务模块之间的联系有可能是直接的，也可能在无法感知的情况下被层层嵌套。</p><p>&nbsp;</p><p>业务系统的复杂性，体现在业务的复杂性与业务系统的复杂性两个方面。业务的复杂，导致我们需要对业务系统进行分层设计，需要有定制化的能力，需要有运营与持续开发并行的能力。上线前的产品级的开发很重要，但是上线后的业务级的持续定制和开发同样重要。复杂的业务必然导致复杂业务系统的产生，如何以一个统一的、足够强大的方式来解决复杂性问题，使复杂业务系统的复杂性是可以拆解的、可管理的，就非常重要。</p><p></p><h3>4.4.维护限制的要求</h3><p></p><p>&nbsp;</p><p>Linux系统已经规模化运行在各种类型的设备上，每一个商业系统，在其运行期间都是需要进行维护的。</p><p>&nbsp;</p><p>于大型的服务器系统，承载在成千上万的在线业务，是不能中断服务的，需要在线的定制能力。对于个人终端，每个人的使用习惯不同，如何使每个用户都能获得最佳的使用体验，需要数据分析和个性化的定制能力。对于散布在各处角落的边缘节点乃至物联网设备，需要内核提供更智能的介入方法，使维护人员能够远程完成对大量设备的维护工作。</p><p></p><h2>5.eBPF技术的意义</h2><p></p><p>&nbsp;</p><p>BPF最初来源于解决网络报文过滤的问题，实现灵活的过滤规则。网络报文的过滤规则，最初只需要正则语言就能表达，但后来就不够了。而BPF提供了更强大的表达能力，BPF具有近似图灵完备性，必将成为问题分解、解决复杂问题的神级工具。</p><p></p><h3>5.1.图灵完备性</h3><p></p><p>&nbsp;</p><p>讨论BPF的计算能力，涉及到图灵完备。BPF目前的基本设计中，有限性是基本设计原则，这是保证内核不被扩展逻辑挂死的基本要求。而有限性，是BPF和图灵机的根本差异，因此它不是图灵完备的。这个结论固然没错，但如果讨论仅止于此的话，那么这一论断过于粗糙，换个有趣一点的说法，这样的讨论不是图灵完备的，因此还需要具体分析。</p><p>&nbsp;</p><p>完备性，不是评价工具优劣的完全准则。一般认为，C语言是图灵完备的。但C语言的所有数据类型都是有界的，其实是弱于图灵机的。但不妨碍人们认为C是图灵完备的，因为它的能力边界距离实际应用的需求很远，我们感受不到。虽然C语言图灵不完备，但是不妨碍它的发展潜力，在它的成长过程中，也在不断的改版、丰富。这是因为它的完备性不足吗？显然不是。一种工具，在工程实践中，完备性是次要的，因为他被选择，就说明它是够用的。其他方面才是当下更应该关注的问题。</p><p>&nbsp;</p><p>图灵机是一种无限的自动机，人们穷尽办法也只能逼近，即使全世界所有计算机加在一起的总和，也弱于图灵机。所以图灵完备现实中根本不存在，讨论逼近图灵机的能力可能更现实。在实际的语境中，人们实际上把无限接近图灵机的逼近能力，等同于图灵完备性。一个很好的例子就是C语言，它显然不是图灵完备的，但人们一般认为它是图灵完备。从这点说，BPF语言同样是图灵完备的。</p><p>&nbsp;</p><p>排除语言的问题，那么BPF是图灵完备的吗？仍然不是，BPF的图灵不完备，并不主要来源于BPF语言本身，而是来源于运行环境。从这点说，BPF语言是图灵完备的，BPF虚拟机不是。从这点也可以说，只要有需要，通过改造运行环境，BPF可以无限逼近图灵机的计算能力。</p><p>&nbsp;</p><p>因此，从图灵完备这一点，我们既不能过度的否定BPF，认为它的能力有限。但同时，也不能认为它的能力可以无限扩张，因为需要满足特定的条件。总之，BPF还在快速发展过程中，一切可能性皆在其中，任何定论皆言之过早。</p><p>&nbsp;</p><p>从另一个角度来看，就BPF目前的应用领域而言，输入和状态空间是有限的，因此在有限的输入下，图灵完备并不是必须。这是从现实的需求来说，BPF足以完成指定语境下的任何计算。</p><p>&nbsp;</p><p>但显然BPF的计算能力还有很大的提升空间。</p><p>&nbsp;</p><p>语言方面，BPF的指令集的提出，在计算能力上，它就是超配的。现在的问题是，如何安全地释放他的能力。运行时系统和工具链的设计，是目前的焦点问题。已经呈现出思想分歧，基于运行时环境的思路和直接开放的思路同时存在。未来这两个思路应该都会有一定程度的发展，形成面向不同领域的高低搭配的解决方案。</p><p>&nbsp;</p><p>因此，我认为运行时的改进可能更加迫切。这需要我们及早确定问题边界，提供面向问题的运行环境，才能更有效的提出平衡安全和可计算性的问题的方案，即：运行环境+必要的计算能力，构成完备的面向问题域的解决方案。定义一个安全的虚拟机，保证操作不逃逸，一个安全的运行时库，导出或者链接内核对象（Helper），在这个集合上，定义安全的操作，这样语言本身就可以不再受具体逻辑和访问对象的限制，做到语言本身的图灵完备。</p><p></p><h3>5.2.编程模型的发展</h3><p></p><p>&nbsp;</p><p>在BPF之前，Linux开发的编程模型，可以分为内核编程和用户态编程两种。分别使用不同的编程接口和编程规范，是两者最大的区别。BPF出现之后，出现了新的编程模型，既不能称之为内核编程，也不能称之为用户态编程。</p><p>&nbsp;</p><p>这是一种全新的编程模型。它运行于内核态，但是不使用任何传统的内核接口（5.13可以调用经过筛选和处理的内核函数。至今，它仍然受限于特定函数和指定的上下文，还不是一种通用的机制。且这种机制进一步通用化之前，它的安全性仍然值得先进一步的讨论），不通过符号与内核进行链接。它使用应用编程逻辑和范式，但是不使用应用编程传统的接口，而是使用BPF提供的帮助函数。它所能访问的数据对象还在不断发展过程中，远未定型。</p><p>&nbsp;</p><p>因此，笔者称这种编程模型为：临界编程。也许它未来会有更好的名字，但这个名字一方面，表明它的跨界特性，一方面表面它日新月异的发展。也表明对它未来的期待。</p><p></p><h3>5.3.用户态比重的加大</h3><p></p><p>&nbsp;</p><p>由于虚拟化和软件工程的原因，网络报文处理和文件系统，呈现出往用户态迁移的趋势。BPF和用户态化的共通点和差异点在于，都将更多的内核扩展性放在了用户态，但BPF的逻辑仍然从属于内核。</p><p>&nbsp;</p><p>他们都和传统内核通过一层良好定义的接口进行了隔离。用户态驱动和文件系统，使内核的功能更容易扩展。而BPF则是对内核本身的扩展。两者存在根本差异，因此也存在相互结合的可能，从而形成更加强大的软件架构。</p><p>&nbsp;</p><p>而这种架构会用于什么地方呢？我们已经做了初步尝试，FUSE和BPF进行结合。可以实现用户态文件系统和内核更加高效的交互（这一话题，我们在后续的篇章中再详细讨论）。推而广之，内核的网络、安全、文件系统、驱动，都可以放在用户态来实现，通过BPF来优化交互。</p><p></p><h3>5.4.微内核</h3><p></p><p>&nbsp;</p><p>BPF的运行基础是运行时环境，随着BPF应用的增加，一定会促使内核子系统的更进一步的抽象和解偶，这在逻辑上为微内核化准备了条件。</p><p>&nbsp;</p><p>BPF真正避免了纯粹用户态编程的性能问题，为应用开发人员开发特色功能提供了一种临界编程工具。这或许是微内核的另一种实现路径。</p><p></p><h3>5.5.观测代码与业务代码合一</h3><p></p><p>&nbsp;</p><p>BPF出现的时候，最初是观测工具，但后来它也能用于实现更复杂的功能，影响网络子系统的报文转发逻辑。BPF计算能力的强大、性能的优势，使它不仅能用于观测还可以做更多复杂的事情。</p><p>&nbsp;</p><p>通过高度抽象化的设计，我们可以设计出复杂、通用的业务系统，但是我们设计不出“最佳”的业务系统。最佳的业务系统一定是在真实的应用场景中，通过不断的观测、分析、优化，才能达成的。</p><p>&nbsp;</p><p>将一个复杂系统优化到“最佳”同样是一个复杂问题，多目标的一致性、动态系统的不稳定性、巨大的状态空间等等，都可能导致这个问题没有最终答案，只有采用动态反馈机制。因此，将观测代码和优化代码（业务代码的策略优化部分）合一，是使这一优化模式能够更加准确、高效、稳定的必然选择。</p><p></p><h3>5.6.编译器和内核合一</h3><p></p><p>&nbsp;</p><p>从本质上讲，计算问题、语言问题其实是一个问题。最初我们解决计算问题，是在纸带上打孔，后来有了编译器。解决计算问题的效率大大提升，但是解决计算问题的能力其实没有变化。</p><p>&nbsp;</p><p>后来有了操作系统，软件的分层模型逐渐成型，开发应用程序的效率大大提升，但其实通过编程解决计算问题的能力并没有提升，反而是在下降。因为软件的每一个分层，在带来工程化效率的同时，也导致了能力的损耗。API的设计是一个大命题，但是没有完美的API设计。</p><p>&nbsp;</p><p>开发效率的提升，带来了应用的高度发展，现在计算能力的问题出现了。回归本原，将编译器和内核合一，构建更加强大的计算能力，是未来发展的基础。</p><p></p><h2>6.走向未来</h2><p></p><p>&nbsp;</p><p>未来BPF将如何发展呢？</p><p>&nbsp;</p><p>它已经具备图灵机的雏形，拥有巨大的计算能力潜能。它目前的计算能力仍然受到约束，但是已经足够改变现有应用开发的基础，必将引发应用的蓬勃发展，会衍生出开发工具、测试方法等等的发展，使业务逻辑的开发与BPF的开发统一在一个开发模型当中，甚至引发新的开发语言出现。当在应用领域中生根后，就会继续发芽壮大，需要吸收计算能力作为养料才能抽枝散叶。BPF应用与BPF技术内涵的发展就像两面相对的镜子，相互映照，形成斑斓的德罗斯特效应图景。</p><p>&nbsp;</p><p>随着近几年云计算、人工智能、智能设备的蓬勃发展，信息系统基础设施结构、设备类型、业务复杂度都迎来再一次的变革。</p><p>&nbsp;</p><p>Linux系统作为现今最为广泛使用的操作系统，其自身也在发展变化。初期，沿着原有的技术路线，通过量的积累，足以应对时代的演进，这一点从代码增长就可以看出来，其背后是Linux支持的设备、驱动、特性、机制也来越多。产品构型也越来也复杂，Web服务器、并行计算、异构计算、桌面、智能终端、嵌入式系统。Linux的技术设施，需要面对不同的应用场景和问题。量的积累，可以解决一段时间的问题。但是，当这种变化积累到一定程度时，需要新的手段，才能支持上层结构的灵活度。</p><p>&nbsp;</p><p>需要指出的是，现有的文档中，大多将BPF定位为网络和安全工具的利器。但是BPF作为一种通用的动态逻辑机制，绝不仅仅可以应用这两个地方。</p><p></p><h3>6.1.通用性</h3><p></p><p>&nbsp;</p><p>BPF已经从最初网络报文分析技术，扩展到了很多应用领域，以后必然成为一种通用的内核开发技术，在定制化和功能扩展两方面推动内核发展。目前BPF的核心组件基本轮廓已经确定，由运行上下文、帮助函数、Map、指令集、Verifier、JIT、系统调用等关键模块构成BPF的核心运行机制。</p><p>&nbsp;</p><p>运行上下文是BPF程序运行的语境，目前除了网络语境发展比较快速之外，其他程序类型的运行上下文发展相对落后，文件系统目前甚至还没有。对于运行上下文应该设计成什么样子，达到什么要求，有怎样的约束，还没有统一的范式，主要由各程序类型根据实际应用需要进行定义。彼此间缺乏共通性，发展比较随意，还处于比较原始的阶段。</p><p>&nbsp;</p><p>帮助函数还不完备，各个程序类型存在差异。程序类型的定义，缺乏逻辑基础，其设计元语还需澄清。语境相关部分和通用部分划分不清楚，影响到安全机制也无法针对性设计，安全性无法验证。</p><p>&nbsp;</p><p>Map担负的角色过于宽泛，既是通讯机制，也是存储机制，既是Local的也是Global的。是对BPF核心机制补全的过渡手段。随着，远程调用、间接调用、跳转表、全局变量等的实现，Map的作用和使用方式也将改变。</p><p></p><h3>6.2.表达能力</h3><p></p><p>&nbsp;</p><p>内核已经在扩展性方面在不断改进，但是这些始终还是不能根本解决问题，引入更多编译器技术特别是动态编译技术、可信编译技术才是解决问题的根本。</p><p>&nbsp;</p><p>目前BPF的程序的表达能力相当于弱化的C语言，这显然是不够的。实现一种和传统应用开发相同的开发体验，让程序员专注于理解业务逻辑，自由地表达，需要编译器填补通用语言与BPF自身限制之间的沟壑，需要语言层面的扩展，也需要运行时和工具链的支持。</p><p></p><h3>6.3.开发工具</h3><p></p><p>&nbsp;</p><p>目前还没有在前端支持BPF的开发工具，只是实现了后端的支持，这显然还远远不够。这种情况，正说明了BPF的发展急需编译器的支持，在前端支持BPF，通过语言特性的扩展和新的开发支持库，实现BPF与通用编程语言的融合，将大大缩减包含BPF特性的应用程序的开发、测试和维护难度。对于BPF作为一项应用开发技术大力推广至关重要。</p><p></p><h3>6.4.开发流程</h3><p></p><p>&nbsp;</p><p>目前，在设计阶段，需要将BPF的逻辑部分和一般编程逻辑部分分离出来，这增加了设计的开销，同时对于设计人员的要求加大。原本的应用设计人员，只了解业务逻辑，这显然不够，还需要了解内核的基本原理，才能够做好逻辑划分工作。既了解内核又懂应用开发和业务逻辑的人员，是交叉性人才，这样的人员往往少且难以培养。如果让原本的应用开发人员，学习掌握内核相关的知识，以便可以满足BPF应用开发的需要，显然费时费力不说，费效比更是难以达到商业决策的最低门槛。</p><p>&nbsp;</p><p>而在开发阶段，BPF和应用需要分开编码，这无疑增加了联调联试的开销。特别是，出现问题的时候需要频繁的跨组跨部门沟通，效率实在太低。如果能把BPF的开发完全应用化，让一个程序员承担所有工作，成本、效率都可以得到优化。在测试阶段，还缺少专用的高效率的工具。</p><p>&nbsp;</p><p>因此，以开发工具的进步为基础，目前采用的开发流程也一定会同步地被改进。可以预想，未来的开发流程一定是融合和简化的。</p><p></p><h2>7.结束语</h2><p></p><p>&nbsp;</p><p>Linux内核的发展，将技术发展与创新演绎得淋漓尽致。源自于用户和开发者的需求，始终是推动技术不断进步的根本动力。在需求的推动下，Linux内核始终在快速的发展，保持着强劲的动力。同时，热爱与坚持，还有最重要的开发原则的坚守，是Linux能够将源源不断的需求转化为创新动力的基础，而不至于被爆炸的需求摧毁。基本原则体系的维护，使Linux内核始终保持如一的设计框架。</p><p>&nbsp;</p><p>在Linux的发展过程中，一些很小的需求，最终也可以发展成为复杂的架构。坚持与打破壁垒，是创新的范式。</p><p>&nbsp;</p><p>在不断寻求问题的最终答案的过程中，有很多优秀的思想启发我们的认知，但限于技术发展阶段、条件是否成熟，这些优秀的思想有的潜入水底，有的浮现水面独领一段风骚。历史会有所偏好，作出它的选择，但不可否认的是这些优秀的思想，都一直在发挥着它们的作用。当历史的拐点到来的时候，它们又会重新融合，以一种全新的方式继续推动技术的进步。</p><p>&nbsp;</p><p>BPF是内核交互问题不断挖掘、迭代后的最新答案。内核的交互问题，本质上是内核结构问题。BPF的强大计算能力，将推动更好地实现内核与用户态的动态交互，使内核能够更加灵活满足各种应用场景的需要，使整个系统的性能不因为这种能力而遭受损失。保持软件良好分层的基础上，减小分层对信息交互、资源共享的阻碍。而围绕BPF的基础设施的发展，也必定会为内核结构带来巨大改变，将安全性、规范性更加深入地融入到内核的细微层次。</p><p>&nbsp;</p><p>安全可靠是BPF持续发展的原则的，在BPF的功能性不断扩展、计算能力不断释放的过程中，安全检查、可信编译的加持是可持续性的基础。而作为一种全新的编程方式，BPF的开发和传统编程范式具有同样的地位和发展前景。从语言的支持到代码的生成乃至JIT的优化等等，是必不可少的一环。</p><p>&nbsp;</p><p>BPF来源于Linux内核发展过程中，众多优秀的开发者在效率、能力方面的不断改进，以及对技术本源的孜孜以求。它是内核发展中，众多优秀思想的集大成者，但同时，它也仅仅是新时代的开始。新的方法、新的语言、新的架构都在不断出现，催生着巨大的变革，如汹涌的波涛。而BPF将成为乘波之舟，它存在很多可能性，相信以此为起点，开发者们将会谱写更华丽的篇章。这是包括作者在内的众多开发者，所期待的广阔未来。</p><p></p><h4>作者介绍</h4><p></p><p>&nbsp;</p><p>钟俊，统信软件研发技术专家，专注于内核与编译器技术，长期在通信、云计算、安全、信创等多个行业从事底层软件技术研发及相关工作。</p>",
    "publish_time": "2023-04-04 14:06:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Java近期新闻：JDK 20发布、Spring多个版本发布、Quarkus、Helidon、Micronaut和Open Liberty",
    "url": "https://www.infoq.cn/article/LxsO27ZvvcHHRuS7J1VT",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p></p><p>JEP 431，<a href=\"https://openjdk.org/jeps/431\">序列集合（Sequenced Collections）</a>\"，在JDK 21中已经从Proposed to Target状态<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-March/007493.html\">提升</a>\"到了Targeted状态。该JEP提议引入“一个新的接口系列，代表了元素能够以明确的序列或顺序排列在集合中的概念，使其作为集合的结构化属性”。该JEP的动机在于集合框架（Collections Framework）中缺乏定义良好的排序和统一操作集。关于JEP 431的更多信息，请参阅InfoQ的<a href=\"https://www.infoq.com/news/2023/03/collections-framework-makeover/\">新闻报道</a>\"。</p><p></p><p>JEP 443，<a href=\"https://openjdk.org/jeps/443\">未命名的模式和变量（Unnamed Patterns and Variables，预览）</a>\"已经从JEP Draft 8294349状态提升到了Candidate状态。该预览JEP提议“使用未命名模式和未命名参数对语言进行增强，未命名模式与record组件匹配，但不用说明组件的名称或类型，未命名参数可以被初始化但不使用”。这两种模式都是由下划线来进行表示的，如r instanceof _(int x, int y)和r instanceof_。</p><p></p><h4>JDK 20</h4><p></p><p></p><p>甲骨文<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-March/007517.html\">发布了</a>\"Java编程语言和虚拟机的<a href=\"https://jdk.java.net/20\">20</a>\"版本。更多细节请参阅InfoQ的<a href=\"https://www.infoq.cn/article/SZXNxA7DaBzCddCNAUxG\">新闻报道</a>\"。</p><p></p><h4>JDK 21</h4><p></p><p></p><p>JDK 21的<a href=\"https://jdk.java.net/21/\">早期访问构建</a>\"版本<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-21%2B15\">Build 15</a>\"发布，它是对Build 14的<a href=\"https://github.com/openjdk/jdk/compare/jdk-21%2B14...jdk-21%2B15\">更新</a>\"，包含对各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2021%20and%20%22resolved%20in%20build%22%20%3D%20b15%20order%20by%20component%2C%20subcomponent\">问题</a>\"的修复。关于该版本的更多细节，可以参见<a href=\"https://jdk.java.net/21/release-notes\">发布说明</a>\"。</p><p></p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/20/\">JDK 20</a>\"和<a href=\"https://openjdk.java.net/projects/jdk/21/\">JDK 21</a>\"，鼓励开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java Bug数据库</a>\"报告缺陷。</p><p></p><h4>Amazon Corretto</h4><p></p><p></p><p>亚马逊云科技<a href=\"https://aws.amazon.com/about-aws/whats-new/2023/03/amazon-corretto-20/\">发布了</a>\"Amazon Corretto 20，这是他们的OpenJDK 20的下游发行版，可用于Linux、Windows和macOS。开发人员可以从该<a href=\"https://docs.aws.amazon.com/corretto/latest/corretto-20-ug/downloads-list.html\">网站</a>\"下载这个最新版本。</p><p></p><h4>Liberica JDK</h4><p></p><p></p><p>与之类似，BellSoft也<a href=\"https://bell-sw.com/blog/liberica-jdk-20-is-released/\">发布</a>\"了Liberica JDK 20，这是他们的OpenJDK 20的下游发行版。开发者可以从该<a href=\"https://bell-sw.com/pages/downloads/#/java-20-current\">网站</a>\"下载这个最新版本。</p><p></p><h4>Spring Framework</h4><p></p><p></p><p>对于Spring项目团队来说，最近是非常忙碌的，他们发布了<a href=\"https://spring.io/projects/spring-boot\">Spring Boot</a>\"、<a href=\"https://spring.io/projects/spring-framework\">Spring Framework</a>\"、<a href=\"https://spring.io/projects/spring-data\">Spring Data</a>\"、<a href=\"https://spring.io/projects/spring-integration\">Spring Integration</a>\"、<a href=\"https://spring.io/projects/spring-vault\">Spring Vault</a>\"、<a href=\"https://spring.io/projects/spring-graphql\">Spring for GraphQL</a>\"、<a href=\"https://spring.io/projects/spring-authorization-server\">Spring Authorization Server</a>\"、<a href=\"https://spring.io/projects/spring-hateoas\">Spring HATEOAS</a>\"和<a href=\"https://github.com/spring-projects-experimental/spring-modulith/blob/main/readme.adoc\">Spring Modulith</a>\"的里程碑版本以及小版本。其中一些版本解决了公共漏洞和暴露（Common Vulnerabilities and Exposure，CVE）：</p><p>CVE-2023-20859，<a href=\"https://spring.io/security/cve-2023-20859\">当撤销令牌失败时，会将敏感信息插入到日志中（Insertion of Sensitive Information into Log Sourced from Failed Revocation of Tokens）</a>\"，该漏洞会在应用试图撤销Spring Vault批处理令牌时，将敏感信息插入到日志文件中。CVE-2023-20860，<a href=\"https://spring.io/security/cve-2023-20860\">特殊匹配模式下身份认证绕过漏洞（Security Bypass With Un-Prefixed Double Wildcard Pattern）</a>\"，当Spring Security使用<a href=\"https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.html\">MvcRequestMatcher</a>\"配置并将“**”作为匹配模式时，在Spring Security 和 Spring MVC 之间会发生模式不匹配，最终可能导致身份认证绕过。CVE-2023-20861，<a href=\"https://spring.io/security/cve-2023-20861\">Spring表达式DoS漏洞（Spring Expression DoS Vulnerability）</a>\"，在该漏洞中，攻击者可以提供特制的<a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#expressions\">Spring表达式语言（SpEL）</a>\"的表达式，从而可能导致拒绝服务（Denial-of-Service）的情况。</p><p></p><p>Spring Boot 3.0.5<a href=\"https://spring.io/blog/2023/03/23/spring-boot-3-0-5-available-now\">发布</a>\"，该版本带来了文档改进、依赖性升级和重要的缺陷修复，比如，当嵌入式服务器未配置时，<a href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.html\">EmbeddedWebServerFactoryCustomizerAutoConfiguration</a>\"类不应该被调用；<a href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/context/properties/ConfigurationProperties.html\">@ConfigurationProperties</a>\"注解不再用于可变的Kotlin数据类；使用<a href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/domain/EntityScan.html\">@EntityScan</a>\"注解导致AOT实例供应者出现代码生成错误。关于该版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.0.5\">发布说明</a>\"。</p><p></p><p>与之类似，Spring Boot 2.7.10<a href=\"https://spring.io/blog/2023/03/23/spring-boot-2-7-10-available-now\">发布</a>\"，该版本带来了文档改进、依赖性升级和重要的缺陷修复，比如，在使用SnakeYAML 2.0时，加载application.yml文件会出现<a href=\"https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/lang/NoSuchMethodError.html\">NoSuchMethodError</a>\"异常；如果classpath包含“.”字符，<a href=\"https://docs.spring.io/spring-boot/docs/2.7.10/api/org/springframework/boot/context/config/StandardConfigDataResource.html\">StandardConfigDataResource</a>\"类的实例可能会导入同一个文件两次；在使用project.build.outputTimestamp属性时，一个Maven插件使用了本地时区的时间戳。关于该版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.7.10\">发布说明</a>\"。</p><p></p><p>Spring Boot 3.1.0的<a href=\"https://spring.io/blog/2023/03/24/spring-boot-3-1-0-m2-available-now\">第二个发布候选版本</a>\"提供了一些新的特性，比如，<a href=\"https://docs.spring.io/spring-boot/docs/3.1.0-M2/api/org/springframework/boot/actuate/endpoint/SanitizableData.html\">SanitizableData</a>\"类的新方法withSanitizedValue()，它会返回一个脱敏（sanitized）值的新实例；支持GraphQL分页和排序的默认配置；支持Spring Authorization Server。关于该版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.1.0-M2\">发布说明</a>\"。</p><p></p><p>Spring Framework的6.0.7和5.3.26版本<a href=\"https://spring.io/blog/2023/03/20/spring-framework-6-0-7-and-5-3-26-fix-cve-2023-20860-and-cve-2023-20861\">发布</a>\"，主要解决上述的CVE-2023-20860和CVE-2023-20861漏洞。这两个版本还提供了新的特性，比如，在SpEL中改进了对matches运算符和重复文本的诊断；更新了<a href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/handler/HandlerMappingIntrospector.html\">HandlerMappingIntrospector</a>\"类；允许兼容SnakeYaml 2.0运行时。关于这两个版本的更多细节，请分别参阅<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.0.7\">6.0.7版本</a>\"和<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.26\">5.3.26版本</a>\"的发布说明。</p><p></p><p>Spring Framework 5.2.23的<a href=\"https://spring.io/blog/2023/03/20/spring-framework-5-2-23-fixes-cve-2023-20861\">发布</a>\"也解决了CVE-2023-20861漏洞，并提供了与Spring Framework 5.3.26相同的新SpEL特性。关于这个版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.23.RELEASE\">发布说明</a>\"。</p><p></p><p>Spring Data的2023.0-M1（代号为Ullman）、2022.0.4和2021.2.10<a href=\"https://spring.io/blog/2023/03/20/spring-data-2023-0-m1-and-service-release-2022-0-4-and-2021-2-10-released\">发布</a>\"。这些服务版本包含了缺陷修复和文档改进，分别可用于Spring Boot 3.0.5和2.7.10。里程碑版本中的新特性包括，新的滚动API，支持偏移和基于key的分页；改进对HQL和JPQL的JPA查询解析；支持MongoDB的显式字段级加密；<a href=\"https://spring.io/projects/spring-data-rest\">Spring Data REST</a>\"中的聚合引用请求参数。关于该里程碑版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2023.0-%28Ullman%29-Release-Notes\">发布说明</a>\"。</p><p></p><p>Spring Integration的6.1.0-M2、6.0.4和5.5.17版本<a href=\"https://spring.io/blog/2023/03/23/spring-integration-5-5-17-6-0-4-and-6-1-0-m2-available\">发布</a>\"，带来了重要的变更，包括，<a href=\"https://docs.spring.io/spring-integration/docs/current/api/org/springframework/integration/support/leader/LockRegistryLeaderInitiator.html\">LockRegistryLeaderInitiator</a>\"类的改进，如在当前线程被中断的情况下，调用目标锁提供者将会被延迟；<a href=\"https://docs.spring.io/spring-integration/docs/current/api/org/springframework/integration/file/remote/AbstractRemoteFileStreamingMessageSource.html\">AbstractRemoteFileStreamingMessageSource</a>\"类在远程调用方面的改进；修复与代码覆盖工具Sonar和JaCoCo的关系。关于这些版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-integration/releases/tag/v6.1.0-M2\">6.1.0-M2</a>\"、<a href=\"https://github.com/spring-projects/spring-integration/releases/tag/v6.0.4\">6.0.4</a>\"和<a href=\"https://github.com/spring-projects/spring-integration/releases/tag/v5.5.17\">5.5.17</a>\"的发布说明。</p><p></p><p>Spring Vault的3.0.2和2.3.3版本<a href=\"https://spring.io/blog/2023/03/20/spring-vault-3-0-2-and-2-3-3-fix-cve-2023-20859\">发布</a>\"，以解决上述的CVE-2023-20859漏洞，并带来了新的特性，如完善令牌撤销失败后的日志记录；在<a href=\"https://docs.spring.io/spring-vault/docs/current/api/org/springframework/vault/client/ClientHttpRequestFactoryFactory.html\">ClientHttpRequestFactoryFactory</a>\"和<a href=\"https://docs.spring.io/spring-vault/docs/current/api/org/springframework/vault/client/ClientHttpConnectorFactory.html\">ClientHttpConnectorFactory</a>\"类中重用来自库的特定配置代码；在<a href=\"https://docs.spring.io/spring-vault/docs/current/api/org/springframework/vault/config/EnvironmentVaultConfiguration.html\">EnvironmentVaultConfiguration</a>\"类中添加AWS IAM Authentication功能。关于这两个版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-vault/releases/tag/3.0.2\">3.0.2</a>\"&nbsp;and&nbsp;<a href=\"https://github.com/spring-projects/spring-vault/releases/tag/2.3.3\">2.3.3</a>\"的发布说明。</p><p></p><p>Spring for GraphQL 1.2.0的<a href=\"https://spring.io/blog/2023/03/21/spring-for-graphql-1-2-0-m1-released\">第一个里程碑版本</a>\"发布，提供了新的特性，包括，在<a href=\"https://docs.spring.io/spring-graphql/docs/1.2.0-M1/api/org/springframework/graphql/data/method/annotation/SchemaMapping.html\">@SchemaMapping</a>\"注解标注的方法中支持分页返回值和分页请求；支持<a href=\"https://docs.spring.io/spring-graphql/docs/1.2.0-M1/api/org/springframework/graphql/data/method/HandlerMethodArgumentResolver.html\">HandlerMethodArgumentResolver</a>\"接口的自定义实例；依赖升级到<a href=\"https://www.graphql-java.com/\">GraphQL Java</a>\"&nbsp;20.0。关于该版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-graphql/releases/tag/v1.2.0-M1\">发布说明</a>\"。</p><p></p><p>Spring for GraphQL的1.1.3和1.0.4版本发布，其中包含了新的特性，<a href=\"https://docs.spring.io/spring-graphql/docs/current/api/org/springframework/graphql/server/WebGraphQlInterceptor.html\">WebGraphQlInterceptor</a>\"接口中的访问请求属性和cookie；<a href=\"https://github.com/spring-projects/spring-graphql/blob/main/spring-graphql/src/main/java/org/springframework/graphql/execution/ContextDataFetcherDecorator.java\">ContextDataFetcherDecorator</a>\"类的实例在名称变更时忽略订阅的修复。这些版本分别可用于Spring Boot 3.0.5和2.7.10。关于这两个版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-graphql/releases/tag/v1.1.3\">1.1.3</a>\"和<a href=\"https://github.com/spring-projects/spring-graphql/releases/tag/v1.0.4\">1.0.4</a>\"的发布说明。</p><p></p><p>Spring Authorization Server 1.1.0的<a href=\"https://spring.io/blog/2023/03/21/spring-authorization-server-1-1-0-m2-available-now\">第二个里程碑版本</a>\"包含了缺陷修正、依赖性升级和新特性，如RFC 8628，<a href=\"https://www.rfc-editor.org/rfc/rfc8628\">OAuth 2.0设备授权（Device Authorization Grant）</a>\"的实现；为OAuth2客户端secret启用<a href=\"https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/crypto/password/PasswordEncoder.html\">PasswordEncoder</a>\"接口中定义的upgradeEncoding()方法。关于该版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/1.1.0-M2\">发布说明</a>\"。</p><p></p><p>Spring HATEOAS的2.1-M1、2.0.3和1.5.4版本<a href=\"https://spring.io/blog/2023/03/23/spring-hateoas-1-5-4-2-0-3-and-2-1-m1-released\">发布</a>\"。这些服务版本包括了文档改进和依赖性升级。里程碑版本包含如下特性，支持在表单上使用JSR-303定义的<a href=\"https://javadoc.io/static/javax.validation/validation-api/2.0.1.Final/javax/validation/constraints/Size.html\">@Size</a>\"注解的属性元数据；添加新的<a href=\"https://docs.spring.io/spring-hateoas/docs/2.1.0-M1/api/org/springframework/hateoas/SlicedModel.html\">SlicedModel</a>\"类，这是<a href=\"https://docs.spring.io/spring-hateoas/docs/2.1.0-M1/api/org/springframework/hateoas/PagedModel.html\">PagedModel</a>\"类的简化版本，可以浏览切片，但不计算总数。关于这些版本的更多细节，请参阅<a href=\"https://github.com/spring-projects/spring-hateoas/releases/tag/2.1.0-M1\">2.1-M1</a>\"、<a href=\"https://github.com/spring-projects/spring-hateoas/releases/tag/2.0.3\">version 2.0.3</a>\"和<a href=\"https://github.com/spring-projects/spring-hateoas/releases/tag/1.5.4\">version 1.5.4</a>\"的发布说明。</p><p></p><p>Spring Modulith 0.5.1的<a href=\"https://spring.io/blog/2023/03/24/spring-modulith-0-5-1-released\">发布</a>\"提供了一个重要的缺陷修正，即spring-modulith-runtime模块意外地包含了一个只用于测试的<a href=\"https://logback.qos.ch/\">Logback</a>\"配置文件。此外，还有一个依赖性升级到Spring Boot 3.0.5。关于这个版本的更多细节，请参阅<a href=\"https://github.com/spring-projects-experimental/spring-modulith/releases/tag/0.5.1\">发布说明</a>\"。</p><p></p><p><a href=\"https://spring.io/projects/spring-data-jpa\">Spring Data JPA</a>\"团队为开发者<a href=\"https://spring.io/blog/2023/03/21/spring-data-jpa-introduces-query-parser\">引入了</a>\"HQL和JPQL查询解析器，以便在Spring Data JPA应用程序中结合@Query注解更容易地定制查询。</p><p></p><h4>Quarkus</h4><p></p><p></p><p>Quarkus 3.0.0的<a href=\"https://quarkus.io/blog/quarkus-3-0-0-beta1-released/\">第一个beta版本</a>\"包含对管理接口的支持，该接口能够将选定的路由（即管理路由）暴露到不同的HTTP服务器上，避免在主HTTP服务器上暴露这些路由，之前的方式可能会导致对这些端点的泄漏和预料之外的访问。关于这个版本的更多细节，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.0.0.Beta1\">更新日志</a>\"。</p><p></p><p>Quarkus 2.16.5.Final是<a href=\"https://quarkus.io/blog/quarkus-2-16-5-final-released/\">第五个维护版本</a>\"，重要的变更包括，过滤掉执行测试类<a href=\"https://github.com/quarkusio/quarkus/blob/ca208585b097c778c72f578a487c7263a74192fd/extensions/resteasy-classic/resteasy/deployment/src/test/java/io/quarkus/resteasy/test/config/ProviderConfigInjectionWarningsTest.java\">ProviderConfigInjectionWarningsTest</a>\"时与RESTEasy相关的警告；修复加载工作区模块时的NullPointerException；防止来自<a href=\"https://github.com/jakartaee/rest/blob/a345c3c6a3427156f906000033e4e585b3afa560/jaxrs-api/src/main/java/jakarta/ws/rs/ext/MessageBodyWriter.java\">MessageBodyWriter</a>\"的服务器端事件可能会写入一个不断累积的头信息中。关于这个版本的更多细节，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.16.5.Final\">更新日志</a>\"。</p><p></p><h4>Helidon</h4><p></p><p></p><p>甲骨文<a href=\"https://twitter.com/helidon_project/status/1638813079046868994?cxt=HHwWhMDS3YD0nb4tAAAA\">发布了</a>\"Helidon 3.2.0，其中的变更包括，对<a href=\"https://helidon.io/docs/v3/apidocs/io.helidon.media.multipart/io/helidon/media/multipart/WriteableMultiPart.html\">WriteableMultiPart</a>\"类中定义的重载create()方法的修复；对<a href=\"https://github.com/helidon-io/helidon/blob/helidon-3.x/integrations/jta/jdbc/src/main/java/io/helidon/integrations/jta/jdbc/JtaConnection.java\">JtaConnection</a>\"类中关闭数据库连接的错误行为的修复；对SnakeYAML 2.0的依赖升级。值得注意的是，在SnakeYAML 2.0中存在着破坏性的变更。如果直接使用SnakeYAML，Helidon应用程序可能会受到影响。然而，依然可以使用降级的SnakeYAML 1.3.2将应用程序升级到Helidon 3.2.0。关于这个版本的更多细节，请参阅<a href=\"https://github.com/helidon-io/helidon/releases/tag/3.2.0\">发布说明</a>\"。</p><p></p><h4>Open Liberty</h4><p></p><p></p><p>IBM<a href=\"https://openliberty.io/blog/2023/03/23/23.0.0.3-beta.html\">发布了</a>\"Open Liberty 23.0.0.3-beta，支持JDK 20、Jakarta EE 10 Platform和MicroProfile 6.0。</p><p></p><h4>Micronaut</h4><p></p><p></p><p>Micronaut基金会提供了<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v4.0.0-M1\">第一个里程碑版本</a>\"的Micronaut Framework 4.0.0，其特性包括，对<a href=\"https://docs.micronaut.io/snapshot/guide/#ksp\">Kotlin符号处理（Kotlin Symbol Processing）</a>\"的实验性支持；对<a href=\"https://docs.micronaut.io/snapshot/guide/#virtualThreads\">虚拟线程</a>\"的支持；改进了缺失Bean的错误信息；对<a href=\"https://docs.micronaut.io/snapshot/guide/#filtermethods\">过滤器方法</a>\"的支持。</p><p></p><h4>Apache软件基金会</h4><p></p><p></p><p>正如Apache Tomcat团队所<a href=\"https://www.mail-archive.com/announce@apache.org/msg08041.html\">披露的</a>\"，CVE-2023-28708，这是使用<a href=\"https://tomcat.apache.org/tomcat-11.0-doc/api/org/apache/catalina/filters/RemoteIpFilter.html\">RemoteIpFilter</a>\"类的一个安全漏洞，在通过HTTP接收到的、X-Forwarded-Proto头信息设置为HTTPS的反向代理请求时，Tomcat创建的会话cookie不包括secure属性。这一漏洞可能导致攻击者通过不安全的通道传输会话cookie。受此漏洞影响的Tomcat版本包括： 11.0.0-M1至11.0.0-M2、10.1.0-M1至10.1.5、9.0.0-M1至9.0.71以及8.5.0至8.5.85。</p><p></p><p>Camel Quarkus 3.0.0的<a href=\"https://camel.apache.org/blog/2023/03/camel-quarkus-release-3.0.0-M1/\">第一个里程碑版本</a>\"，包含Quarkus 3.0.0.Alpha5和Camel 4.0.0-M2，它是以JDK 17和Jakarta EE 10为基线的第一个Camel Quarkus版本。其他值得注意的变化包括，废弃了<a href=\"https://javadoc.io/doc/io.quarkus/quarkus-core-deployment/latest/io/quarkus/deployment/builditem/nativeimage/ReflectiveClassBuildItem.html\">ReflectiveClassBuildItem</a>\"类；修复了在用Camel 4和Quarkus 3测试时使用<a href=\"https://github.com/apache/camel-quarkus/blob/10e54c9cb072f216a3ffa07c2b6282713daa149e/tooling/perf-regression/src/test/java/org/apache/camel/quarkus/performance/regression/it/PerfRegressionIT.java\">PerfRegressionIT</a>\"类抛出的异常；将Infinispan测试拆分成分别由Quarkus和Camel管理的客户端独立模块。关于这个版本的更多细节，请参阅<a href=\"https://camel.apache.org/releases/q-3.0.0-M1/\">发布说明</a>\"。</p><p></p><h4>JBang</h4><p></p><p></p><p><a href=\"https://github.com/jbangdev/jbang/releases/tag/v0.105.1\">0.105.1</a>\"和<a href=\"https://github.com/jbangdev/jbang/releases/tag/v0.105.2\">0.105.2</a>\"版本的JBang带来了重要的变更，包括，改进的jbang edit编辑命令，它假定支持的JBang IDE<a href=\"https://www.jbang.dev/ide/\">插件之一</a>\"已被安装；基于modulepath进行持续改进，以替换classpath；jbang export jlink命令现在是一个选项，允许开发人员导出一个嵌入Java运行时的JBang应用程序或脚本；对Apple Silicon&nbsp;<a href=\"https://vscodium.com/\">VSCodium</a>\"下载的修正。</p><p></p><h4>Failsafe</h4><p></p><p></p><p><a href=\"https://failsafe.dev/\">Failsafe</a>\"是一个在Java 8+环境中处理故障的轻量级、零依赖性的库，它<a href=\"https://github.com/failsafe-lib/failsafe/releases/tag/failsafe-parent-3.3.1\">发布了3.3.1版本</a>\"，其特性是API的变更，比如，在Failsafe JAR中增加了完整的Java模块描述符；发布了Failsafe提供的<a href=\"https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/util/concurrent/CompletableFuture.html\">CompletableFuture</a>\"类实例内部的执行引用。有关该版本的更多细节，请参阅<a href=\"https://github.com/failsafe-lib/failsafe/blob/master/CHANGELOG.md\">更新日志</a>\"。</p><p></p><h4>Maven</h4><p></p><p></p><p>Maven 3.9.1<a href=\"https://github.com/apache/maven/releases/tag/maven-3.9.1\">发布</a>\"，改善之处包括，改进了“missing dependency”的错误信息；使用replace()方法替换replaceAll()方法中的所有非正则表达式模式，或使用预编译模式来提高性能；废弃Mojo插件的参数表达式${localRepository}，因为${localRepository}注入的<a href=\"https://github.com/apache/maven/blob/master/maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java\">ArtifactFactory</a>\"接口实例由于缺乏上下文，与Maven解析器接口<a href=\"https://maven.apache.org/resolver-archives/resolver-1.6.3/apidocs/index.html?org/eclipse/aether/repository/LocalRepositoryManager.html\">LocalRepositoryManager</a>\"不兼容。</p><p></p><h4>Gradle</h4><p></p><p></p><p>Gradle 8.1的<a href=\"https://github.com/gradle/gradle/releases/tag/v8.1.0-RC1\">第一个候选版本</a>\"发布，该版本提供了如下特性，<a href=\"https://docs.gradle.org/8.1-rc-1/userguide/configuration_cache.html\">配置缓存</a>\"的持续改进，现在可以认为它业已稳定；<a href=\"https://docs.gradle.org/8.1-rc-1/userguide/kotlin_dsl.html\">Kotlin DSL</a>\"的持续改进，这是Groovy DSL的替代方案，包括Kotlin DSL脚本中的实验性简单属性设置；对JDK 20的支持。关于这个版本的更多细节，请参阅<a href=\"https://docs.gradle.org/8.1-rc-1/release-notes.html\">发布说明</a>\"。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/03/java-news-roundup-mar20-2023/\">Java News Roundup: JDK 20 Released, Spring Releases, Quarkus, Helidon, Micronaut, Open Liberty</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/F6cg96zpRMMi9uAq1zyU\">Java 近期新闻：新 JEP、GraalVM 23 早期访问构建、Infinispan、Mojarra、Micrometer Metrics</a>\"</p><p><a href=\"https://www.infoq.cn/article/SZXNxA7DaBzCddCNAUxG\">Java 20 发布，新特性一览：Amber、Loom 和 Panama 项目</a>\"</p>",
    "publish_time": "2023-04-04 14:23:48",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "旷视的6年智慧物流梦",
    "url": "https://www.infoq.cn/article/8aSr9CdqPweZhkL9sCt9",
    "summary": "<p>成立12年来，AIoT一直是旷视核心的战略关键词。</p><p></p><p>旷视认为，AI 未来将沿着两个大方向演进，一是“AI in Digital”，以 ChatGPT 为代表的技术，将给数字世界带来新技术范式的迁移。二是“AI in Physical”，以特斯拉为代表的企业，将 AI 技术引擎与硬件载体结合，产生自动驾驶、机器人等不同类型的智能机器，对物理世界进行改造。旷视的目标是要做影响物理世界的 AI 技术创新。</p><p></p><p>在供应链物联网领域，旷视致力于用AI+自动化技术，提供最优ROI的智慧物流产品和解决方案。</p><p></p><p>近日，旷视科技联合创始人、物流业务事业部产研负责人唐文斌和旷视科技物流业务事业部的负责人徐庆才在与InfoQ等媒体的交流会中详细阐述了旷视的智慧物流愿景和6年布局。</p><p></p><p>唐文斌表示，旷视内部一直把AI场景和技术分成三类：感知、决策和执行。以物流场景为例，感知层，通过摄像头的感知能力，做自动化收货、自动化商品校验、自动化环境感知等。决策层，包括机器人通过对周围环境的感知，对其他机器人的感知等，做出行动路线的决策。在执行层，通过控制算法让物流机器人运动得更好。总结来说，旷视希望通过更好的感知技术、决策技术、执行技术等，对物流场景实现闭环交付。</p><p></p><h2>智慧物流迎来发展春天</h2><p></p><p>随着疫情过去，智慧物流行业迎来了春天。徐庆才观察到，“春江水暖”体现在两个方面，一方面，基于过去几十年物流行业的积淀，这几年AI物流行业发展迅速，在技术端已搭建起了基础。另一方面，在与头部物流企业的接触中深切感受到，这些实体企业在数字化转型上的需求是真真切切的，需求十分紧迫。</p><p></p><p>而且，一个很重要的变化是，物流企业的数字化更注重“去伪存真”。十年前，很多企业做智能物流，可能更多出于“展示”的目的，为了智能而智能。而最近几年，随着自动化进展加快，实体企业更加会算“细账”了，首先实现各个业务流的精细化，细化完再降本增效，企业会计算智能化为其带来的真正价值，以及未来几年能够带来的真实效益，计算ROI。</p><p></p><h2>智慧物流6年发展史</h2><p></p><p>旷视自2017年开始入局智慧物流领域，至今已历时6年。</p><p></p><p>对这块业务，旷视有着明确的定位，即做新一代物流产品解决方案的提供商，提供软硬一体的产品，包括AI赋能的智慧物流操作系统“旷视河图”；自研了智能托盘四向车系统（PS）、自主移动机器人系统（AMR）等多款AI赋能的机器人和智能物流装备；将AI技术与物流自动化系统融合首创了3A智慧物流解决方案（AS/RS+AMR+AI）。</p><p></p><p>徐庆才表示，旷视做智慧物流业务有诸多优势。首先在人才结构上，具有一支“技术创新+行业经验”双轮驱动的业务团队，物流业务有大量行业人才，其中不乏有在物流行业深耕15年以上的人才，具有行业基础，这保证了技术研发团队能够与在物流自动化领域深耕多年的业务团队相结合。</p><p></p><p>此外，旷视在AI算法上具有优势，拥有视觉、调度、机电控制等核心算法，拥有自主研发的深度学习框架天元。AI的理解加上物流行业的深度理解，结合在一起进行不断创新，这是这几年旷视智慧物流发展的扎实基因。</p><p></p><p>徐庆才坦言，旷视物流的发展史是一个从做加法到做减法的过程，起初将90%的仓储物流场景都放在托盘上，自2020年进入物流元年后，从更广的面去理解物流的场景，关注物流在各个环节的需求，做出了不少硬件、软件等产品。而现在，旷视更聚焦于对整个物流行业有更多社会价值以及对旷视自身有更多商业价值的产品和解决方案。因此这几年旷视一直在聚焦、聚焦再聚焦，希望做更少但做得更好。</p><p></p><h2>核心产品和解决方案</h2><p></p><p>这几年，传统制造企业也加入了数字化的大潮中，实体企业面临着客户需求多样化、订单履约实时化、商业模式快速迭代，以及劳动力短缺、城市用地成本上升、全球经济不确定形势下自身物资品类和存量快速增长等诸多挑战，对工厂仓库和物流中心进行自动化、数智化升级是必然选择。</p><p></p><p>然而，实施难度高、投资大、对仓库要求高、未来扩展难度高等因素阻碍了自动化、智能化仓储的进一步普及。</p><p></p><p>现阶段，物流系统集成正在向标准化、模块化方向发展，要求更加柔性灵活、初期投入成本低、易于部署和扩展的方案。</p><p></p><h3>智能托盘四向车系统</h3><p></p><p>“仓库就像人体的‘心脏器官和‘血管’，心脏器官就是有托箱件，血管就是这些连接的搬运设备”，唐文斌表示。仓库物流的场景可以分解成以托盘为单元，以箱为单元，以件为单元。</p><p></p><p>一个智能仓库可以被解构化成托盘单元自动化，箱单元的自动化和件单的自动化。仓库有托盘存储区域，存储大宗货物一般会用托盘形式做存储，托盘是自动化操作的第一个模块。在托盘区域，现在很多商品是整箱发送，也会拆零，这是箱的自动化。此外会把托盘上箱子的件通过软件和机械臂拣选出来，再通过件单位资源化，可以用机器人把不同商品丢到不同订单箱里面，这是件的自动化。</p><p></p><p>现在，托盘存储在物流的仓储领域占比最大，从整个产品思路来讲，旷视今年的核心重点，是要把托盘场景解决足够好，提供柔性化的托盘解决方案。</p><p></p><p>为此，旷视推出了智能托盘四向车系统，旨在打造新一代托盘柔性物流解决方案。托盘四向车是针对原来较成熟的托盘堆垛机做升级，在如今多变的环境下，在大量仓库要改动的情况下，托盘四向车有更大的优势。</p><p></p><p>智能托盘四向车系统具有离散性设备、分布式控制两大特点，可以像搭积木一样，根据需要灵活组合。不同于传统自动化设备只能在固定路径工作，四向车可以一车跑全仓，并能够根据淡旺季以及业务增长等需求变化，增减车辆。</p><p></p><p>据介绍，旷视智能托盘四向车具有诸多核心优势。</p><p></p><p>它有稳定可靠的智能硬件——旷视托盘四向车PS1500。目前，旷视已经针对四向车做极致优化，从各个维度和环节来提升四向车的工作效率。具体如下：</p><p></p><p>超薄：机身厚度仅125mm，是目前市场上实际投入使用的最薄的四向车。超快：空载换向时间2.5s、带载换向时间3.5s，升降时间2.5s，空载加速度2m/s2，实现综合工况运行效率提升30%。超稳定：基于旷视成熟的机器人平台打造，与旷视T系列、S系列AMR同平台，本体软件系统、电源管理系统、芯片控制器、二维码相机等完全复用，平台已历经数千台AMR交付验证。超安全：避障激光*6、磷酸铁锂电池/钛酸锂电池，核心零部件均选自头部供应商，品质严苛有保障。超长续航：电池容量60Ah、功耗40W、充电电流50A，可以充电1小时，连续工作8小时。目前，旷视已经在上海落地了一个80台四向车的项目，现在是全球最大的四向车的标杆案例。</p><p></p><p>这背后是**超大集群调度的智能软件****——****旷视河图软件平台。**作为基于AI技术的全局中控系统，河图可连接旷视自有及第三方自动化、智能化物流设备，实现集群作业的高效协同。</p><p></p><p>在旷视河图的指挥下，借助旷视领先的AI底层技术，将AI技术与物流自动化系统深度融合，将AI算法赋能仓储物流。</p><p></p><p>针对四向车场景，传统意义上，四向车被定义为一种高存储密度，但低流量进出的方式。因为托盘存储涉及到大量优化问题，四向车在仓库里如果存得很密集，就很难做到高效。而通过河图软件调度能力，不仅可以做到高密度存储，也可以做到高效率进出，可以实现每小时600-1000多进出流量，这使得四向车应用场景和原先只是做高密度存储，现在变成了更加通用化的托盘解决方案。</p><p></p><h3>柔性越来越重要了</h3><p></p><p>可以看到，旷视推出的硬件和软件都更加在强调柔性化，这几年，柔性越来越重要了。从实施周期上，很多时候物品必须按照步骤，柔性设备可以比较灵活，一部分先实施部署，企业先用起来，并在这个基础上不断扩展。</p><p></p><p>此外，柔性和物流系统能否规模化复制密切相关，现在客户变化很快，柔性本身代表了可以快速变化，更适应企业面临的需求侧的快速变化。相对传统方案，柔性系统可以实现快速落地，基于客户适应各种变化，能够快速部署，对企业来说，系统设备可能拼图少了，但对于部署和后期维护的成本也更低了。</p><p></p><h2>落地实践</h2><p></p><p>据了解，目前旷视在智慧物流领域的服务客户超过200个，包括助力中粮、万纬冷链、徐福记、宁德时代、赣锋锂业、国药广州、公牛、新和成等众多实体企业的自动化、智能化升级，行业覆盖食品冷链、新能源、医药、鞋服、化纤氨纶、机械电子电器、3PL等领域。</p><p></p><h3>案例解析</h3><p></p><p>京新药业智能密集库</p><p></p><p>京新药业采用旷视四向车、AMR和河图软件为核心的3A智慧物流解决方案，建设其位于内蒙古中药生产基地的智能密集库，实现降本增效和信息全程可追溯。</p><p></p><p>在进行方案规划时，旷视为客户算了一笔账：方案用柔性、智能的四向车方案取代了传统的物流自动化方案，设备购买费用一次性节约100万元，土建投资成本大幅降低30%，电费每年节省几十万元，维修费、备件费每年节省10万元。</p><p></p><h3>AI 视觉感知解决系统应用于国药广东物流</h3><p></p><p>徐庆才介绍，医药行业十几年前就开始部署物流自动化，做数智化升级有比较好的基础。医疗器械在管理上非常精细，名称、批次、效期等很多信息都要全程跟踪。比如在牙科里，一些细小的器械要全程跟踪，从入库复核，拣选，到医院给到某一个患者使用等环节，以前这些完全靠人去识别，这非常困难，每一个环节都要花很多精力核对。此外，进口的器械还有很大的语言障碍，需要多人核对，总体来说，投入人力很大，工作效率却很低。</p><p></p><p>为此，2020年，旷视成立了研发小组，研发了 AI 视觉感知系统。在此基础上，2021年，国控广东物流与旷视进一步联合开发了“信息自动复核和数据采集系统”，采用视觉识别技术实现药械外包装的信息识别和数据采集，提高了生产效率。</p><p></p><p>2022年12月，由国控广东物流和旷视联合研发的“药械自动识别和数据采集系统”在国控广 东物流佛山物流中心进入运作使用。在药械收货环节，该系统通过人机协作，数秒内就能完成单批产品的多轮信息复核和数据自动采集，实现高准确率的同时，整体工作效率提升超 50%。</p><p></p><h3>落地“踩的坑”</h3><p></p><p></p><p>唐文斌分享了智慧物流在实际应用中的踩到的一些“坑”和总结的经验。</p><p></p><p>“我的一个体会是要贴近现场。 实际的问题跟你想象的问题是存在差距的。很多经验、知识来自于现场，只有真正到现场才能够去获得这样的反馈。我觉得，很多搞技术出身的人，大家其实会容易用一种模型化的方式去思考问题，都会对问题进行建模、理解、抽象，这是好的地方，但一旦去把问题进行抽象之后，跟实际的现场是否足够的贴合，跟真正遇到的问题是不是那么的匹配，最终是不是那么好用，其实还是存在差距”。</p><p></p><p>因为物理世界异常太多了，包括商品异常，设备异常，有各种各样的人为介入导致干扰异常，人可能突然走到了机器前面，商品可能掉下来，机器人可能突然某个部件坏了....这些虽然概率都不高，但各种各样的事情都有可能会发生。</p><p></p><p>整个系统不会完全按照数字世界里的处理方式来执行。比如在数字世界可以向上抛出异常，上面有一个程序可以处理，但现实世界抛出异常却无法立即处理。因此，系统需要考虑到对于异常情况的友好方式，比如系统可以自己把问题解决，采用对于现场操作人员比较友好的方式，使之有好的操作规范去对应，这才是好的系统。因此，这些要贴近现场，要谨慎的看待抽象的问题和现实情况的贴合度。</p><p></p><h2>智慧物流技术演进思考</h2><p></p><p>感知，决策，执行，在这三个方面未来技术上还有什么发展方向，AI跟物流的场景到底该如何更好的结合？唐文斌觉得，未来还有很多值得探索的空间。</p><p></p><p>例如，一个问题是，场景解构之后有不同的商品业务特性要求、业务要求、场地限制、人力成本和场地成本平衡，这些可以做到细分。那细分之后，比如托盘自动化的终极方案是什么呢？是堆垛机还是四向车，会有什么新形态？比如说箱式的方式，我们看到一些优秀公司出现了，还存在不存在别的形态，这个终极形态是什么？</p><p></p><p>“我们一直在思考在不同环节下把场景细分之后的终极场景形态如何，能够带来最好的ROI，能够快速部署，又能够容易维护，这个终极方案是什么呢？这个问题解释会不断的出现，会有不断的创新东西出来”。</p><p></p><p>此外，在自动化场景，现阶段，人跟自动化系统之间的交互还非常愚蠢，比如人在向机器人发出位置移动的非数字信息指令后，系统会将一个东西从某一个坐标移动到另一个坐标。那么问题来了，为什么不能像人类一样交互呢？现在行业的自动叉车还无法做到像人类那么快，这背后是安全和控制的问题。此外，现在的机器人在仓库里移动，其导航方式虽然是自动导航，但最终走的横平竖直的路线，这和人类的活动方式并不相同，未来机器人行动的最终极形态会是这样横平竖直方式吗？这都是未来需要一直思考和解决的问题。</p><p></p><p>采访嘉宾介绍：</p><p></p><p>唐文斌，旷视联合创始人，CTO，负责公司的技术战略制定和关键产品研发。唐文斌带领旷视核心团队研发的AIOT产品和解决方案，被广泛应用于城市治理、仓储物流、零售、金融、消费电子等行业场景。这其中包括：面向城市治理领域的城市物联网操作系统，以及覆盖云边端的产品架构；面向仓储物流领域的以“四向车+AMR+河图”为核心的软硬体系化产品体系，以及一批行业标杆项目；唐文斌与团队自主研发了新一代AI生产力平台Brain++。唐文斌本科毕业于清华大学姚智期实验班，拥有清华大学计算机科学硕士学位，在校期间，他曾赢得全国信息奥林匹克竞赛金牌、ACM/ICPC国际大学生程序设计竞赛世界总决赛第6名，并担任中国计算机学会中国信息学奥林匹克集训队教练达7年时间。</p><p></p><p>徐庆才，旷视科技物流业务事业部的负责人，全面负责旷视物流业务的运营和战略。毕业于上海交通大学，在物流行业拥有超过20年的从业经验，是中国物流自动化装备系统领域的知名专家。徐庆才曾主导研发了具备国际领先水平的新一代成套物流装备，获得了10多项国家发明专利和实用新型专利；主持或参与了自动化立体仓库、医药工业仓储工程等方面的多项国家及机械行业标准制修订；主持完成了全自动快速巷道堆垛机系统、智能化环形穿梭车输送系统等多项国家科技部、国机集团基金研究课题，还负责完成国家首批智能制造装备发展专项项目。</p>",
    "publish_time": "2023-04-04 17:21:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Serverless时代，如何应对不确定性？",
    "url": "https://www.infoq.cn/article/vKxRHa1sslR0AeiTIIck",
    "summary": "<p>3月30日，亚马逊云科技举办了“全面拥抱Serverless时代”创新大会，分享了亚马逊云科技17年引领Serverless发展的技术创新、应用场景以及全球客户的创新实践。</p><p>&nbsp;</p><p>Serverless 是描述云服务、应用开发实践和云原生应用架构的一种方式，能够帮助企业更加敏捷地构建应用程序，从而更快地创新和应对变化。具体而言，Serverless主要四大优势特征：</p><p>&nbsp;</p><p>无需管理服务器：用户不需要关心底层的物理资源。自动扩展与缩减容量：用户不需要关心底层的物理资源是如何规划的，甚至不用担心当业务的流量和负载发生变化的时候，底下的物理资源如何去反应。按使用量付费：如果企业的波峰波谷有非常明显的征兆，可以采用Serverless降低成本。更高的安全与可用性：Serverless架构从根本上改变了安全性。</p><p>&nbsp;</p><p>当前，Serverless 覆盖的技术场景正在不断变广。亚马逊云科技大中华区产品部总经理陈晓建表示，“当前很多应用都可以使用Serverless来实现。开发者无需花费太多力气去了解新服务，或是更改架构即能实现。”</p><p>&nbsp;</p><p>据了解，亚马逊云科技Serverless服务广泛覆盖计算、存储、网络、容器、数据库、数据分析等多方面。其中，亚马逊云科技的全部的分析服务已全面实现Serverless化，包括交互式查询服务Amazon Athena、大数据处理服务Amazon Managed Streaming for Apache Kafka (Amazon MSK)、实时分析服务Amazon Kinesis和Amazon MSK、数据仓库服务Amazon Redshift、数据集成服务Amazon Glue、商业智能服务Amazon QuickSight以及运营分析服务Amazon OpenSearch Service。</p><p>&nbsp;</p><p>据陈晓建介绍，今天，全球已经有数百万的客户在使用亚马逊云科技的Serverless服务。以美国电影评价网站IMDb为例。IMDb最早采用的是传统的基于虚拟机的方式，随着企业意识到Serverless的价值，IMDb把所有的服务进行了Serverless改造。通过Amazon Lambda，可以在1分钟进行80万次调用，企业无需担心业务资源的配置，节省开支。</p><p>&nbsp;</p><p>那么，Serverless将如何应对不确定性？</p><p>&nbsp;</p><p>1、快速创新响应不可预测。Serverless 应用无需管理 API、消息队列、存储、数据库，企业只需要专注于业务逻辑，将更多的精力放在业务创新上，加速应用推出时间。以Amazon Lambda Snapstart为例，可将Lambda函数的冷启动时间降低90%，实现10倍的快速启动性能，消除在系统启动的时候带来的突发延时，企业不需要做任何的代码改变，也无需支付费用。</p><p>&nbsp;</p><p>2、全栈Serverless应对错综复杂的诉求。Serverless可以消除业务不稳定起伏带来的隐性成本，轻松应对峰值、非频发的复杂工作负载；还可以消除数据管理系统按需扩展的复杂实施难题，无需考虑计算和存储资源的比例，也不会出现节点读写状态不一致等问题。</p><p>&nbsp;</p><p>3、故障隔离，应对潜在风险。Amazon Lambda融入了潜水艇隔离仓的安全理念，满足企业级生产所需的99.99%高可用。无服务器消除了管理基础架构的需要，也就是说使用无服务器架构，更多的责任例如给服务器扩容或者打补丁，由亚马逊云科技承担。</p><p>&nbsp;</p><p>陈晓建表示：“如同云计算将客户从复杂的物理基础设施中解放出来一样，亚马逊云科技进一步通过Serverless将这一过程延展到了云上的虚拟基础设施和云服务领域。我们希望客户写的每一行代码都是业务逻辑，Serverless正在让它变为现实。过去17年，我们持续推进Serverless的发展，将Serverless提供的极致弹性和自动扩展能力带给越来越多的客户。此外，亚马逊云科技大规模云服务的运营能力以及标准、安全的产品API体系，确保了我们的Serverless服务为客户提供极致的瞬间并发能力，应对极端业务激增，并帮助他们实现大规模部署，把应用快速部署到全球。”</p>",
    "publish_time": "2023-04-04 17:34:58",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "一把手挂帅、管理层“换血”、警惕大而全......汽车零部件企业如何蹚出数字化路径",
    "url": "https://www.infoq.cn/article/KoLQapkaEhIahPkoN5FY",
    "summary": "<p>作为具有近70年历史的企业，大连亚明具有深厚历史背景 + 传统制造业两重特性，但其信息化道路自1997年就开始，并一直坚持走自主研发的路线。目前大连亚明是国家工业互联网试点示范企业、大连市首家5G+工业互联网应用示范企业。</p><p></p><p>本次访谈聚焦在大连亚明的数字化历程和推进思路，从2000年开始，亚明在每一次信息化和数字化转型阶段都面临着巨大的挑战和困难，它是如何在这个漫长的“摸着石头过河”的路程中找到解决办法？面对汽车行业价格战给自身带来的新一轮冲击，亚明又是如何应对的？我们相信大连亚明的案例和经验能给<a href=\"https://xie.infoq.cn/article/9b57abcdbe5eae37e39f36c60\">制造企业的数字化转型</a>\"带来一定的参考价值。</p><p></p><p>以下内容整理自《InfoQ 数字化经纬》与大连亚明汽车部件股份有限公司副总经理、CIO肖庆阳的对话：</p><p></p><p>InfoQ：工业互联网是近年来制造业的热词，从大连亚明的角度看，工业互联网的核心思想和本质是什么，它和智能制造的关系是什么样的？</p><p></p><p>肖庆阳：因为我们是一家生产制造企业，多年来主要做一些智能制造和工业互联网相关研发以及实施应用的工作，所以我们对工业互联网的本质有着自己的理解：基于工业生产，本质是工业生产要素（人、机、料、法、环）之间的互联互通；目标是解决在工业生产制造和经营过程中的遇到一些实际的问题，包括研发、生产、质量、营销等等。</p><p></p><p>早些年我们谈得更多的是智能制造，实际上我们将工业互联网理解为整个智能制造总体技术路线的一环，是必备的技术手段，它可以收集工业生产的数据，基于数据进行分析从而优化改善生产工艺和生产经营，并能给企业决策者带来数据的参考和支撑。</p><p></p><p></p><h2>20 多年历经 4 个转型阶段</h2><p></p><p></p><p>InfoQ：大连亚明从1997年就开始信息化道路，这对于制造业来说也算是挺早的。如果进一步将大连亚明的数字化历程分几个阶段来看，您会如何划分？这里面每个阶段的目标是什么，遇到了什么问题，以及是如何解决的？</p><p></p><p>肖庆阳：第一个阶段，2000年左右公司开始实行“甩图版”计划，计算机制图取代手工制图，花费200多万引入三维的计算机辅助设计软件后，研发能力得到大幅提升。</p><p></p><p>当时“甩图版”的主要阻力来自于内部不少员工对信息化的不理解和不信任。尤其对于工作已经有些年头的工程师来说，这在思想或理念层面都是很大的跨越。但引入三维计算机辅助设计之后，企业也实实在在地尝到了甜头。公司的产品研发能力提升之余，产品也随之实现了创新，从最初的只能做一些简单零部件，提升到可以研发复杂的发动机零部件。</p><p></p><p>第二个阶段，2005年上ERP系统，实现进销存财务一体化。当时的生产计划软件、仓储软件、财务软件都是独立的系统，存在信息孤岛的问题，而ERP系统能完成信息的集成和应用。主机厂客户对零部件工厂信息化转型的要求牵引着这场变革。</p><p></p><p>当时企业一把手亲自挂帅，跑客户了解需求的同时也定下了企业的战略方向、目标和任务。随后内部花了2年多时间做整体的业务流程重构，ERP系统也经历了2次比较大的升级迭代。但实施过程还是比较艰难，进展缓慢，因为落地的过程中，固有的传统思维和新的信息化理念仍会不断产生碰撞，摸着石头过河的过程中难免有磨合和弯路，最终花了三四年时间才把ERP系统真正实施下来。</p><p></p><p>在这个转型阶段，来自内部的阻力依然不小，虽然许多经营管理层对数字化的重视程度有所加深，但对于数字化的理解还处在初级阶段，不够深刻。后来内部通过“换血”的方式来推动信息化改革，比如将当时2个车间的车间主任都更替成更加年轻的干部，且每个生产车间都配备了年轻的“关键用户系统的关键用户”，同时 IT 部门也从一个技术部门调整为可以参与生产决策的部分。</p><p></p><p>第三个阶段，2010年推行<a href=\"https://xie.infoq.cn/article/c7365e79b7de38712c9843f9b\">MES系统</a>\"（制造执行系统），打通生产制造环节的最后一公里。该阶段转型的核心驱动力源于汽车主机厂对于零部件厂的质量追溯要求非常高，为此，一方面我们通过MES实现生产管理、生产运营流程的追溯，另一方面，也基于此实现了生产工艺的可视化监控。我们不允许任何有一一个缺陷零件流到客户端。</p><p></p><p>在推行MES系统的过程中，我认为有两个比较大的“坑”可以分享出来给同业借鉴：</p><p></p><p>首先，采购设备时，IT 部门要在采购协议里提出开放通讯接口，让设备的供应商提供数据采集的接口，便于后面做数据采集的工作。这对于广大的制造企业来说是特别值得注意的一点，因为我们之前没有设备通讯的认知和经验，所以最初采购设备之时并没有跟设备厂家提出需要数据采集接口的要求，等到了需要给设备联网、进行智能化改造的阶段，由于老旧设备型号和品牌比较繁杂，所以我们当时投入了很多资金进行改造，比如有些进口设备的通讯接口和协议是要单独收费的，还有些设备在出厂的时候不含通讯接口，那么当我们要对设备进行二次改造让其具备通讯接口时，设备厂家往往就要收取很高的改造费用。</p><p></p><p>第二，MES系统要想顺利实施落地，需要全员参与。比如在设计车间的人机交互终端系统的时候，要着重考虑易用性，考虑一线工人的可操作性，避免把系统设计得复杂。后面再慢慢经历2～3次的升级和优化，来达到在生产端提效的价值。</p><p></p><p>一开始做系统就全面铺开的话，工作量会非常大，需要改变很多的基层员工的习惯，使得大家容易在数据录入和操作上出现滞后，从而导致数据不准确，容易导致用户失去信心，项目失败，恶性循环后系统最终变成“僵尸MES”。</p><p></p><p>总的来说，做MES不能贪大求全，要分阶段，一步步做实施上线的工作。先实施简单的模块，让生产管理人员尝到一点甜头，让大家建立起信心，然后再进入下一个阶段，循序渐进。</p><p></p><p>第四个阶段，2021 年开始对外进行经验复制和推广。一方面随着大连亚明自身的数字化平台和应用逐渐成熟，内部的研发、生产、运营、工艺、物流等业务都集成到工业互联网平台上，实现数字化管控的目的；另一方面，大连亚明从2017年开始承接了很多国家级还有省部级的科研项目，国家也鼓励其带动同行数字化转型的发展。近几年也的确有很多同行前来参观和考察，认为我们的平台和系统非常契合他们的生产制造过程以及需求，提出希望亚明推出相关产品和解决方案的需求。</p><p></p><p></p><h2>数字化不是结果，是为生产制造服务的手段</h2><p></p><p></p><p>InfoQ：围绕数字化生产，能否介绍下大连亚明是从哪些方面推进数字化生产的转型？是否有系统性思路引导着整体的转型进程？</p><p></p><p>肖庆阳：最初我们是用自下而上的思路去走自主研发的道路，没有站在很高的高度推进，而是从基层解决实际生产问题的角度出发，这过程中我们也做了很多发明专利来解决生产管理、生产工艺的问题。</p><p></p><p>等到了后期，由于我们在前面做了大量的加工的工作，尤其像是我刚提到的“让企业先做一些简单的应用，初步建立起信心，尝到一些甜头”，接着企业才能自上而下地、有更明确的思路去规划和设计整体的战略规划。这样一来，后期有了总体的数字化规划做指引，我们再基于此持续改进，不断优化。这个过程是反复循环的。</p><p></p><p>现在我们作为国家级的工业互联网试点示范企业，也算是行业标杆企业，所以我们在数字化的投入都很大，每年都会立项推进数字化系统建设，这是一个需要持续挖掘、持续不断优化的过程。它永远没有一个终点，我们永远有不完善的地方，永远有需要提升的地方。只有企业这么样去看待这件事情，才能够把它做好，而不是像很多企业为了上一个数字化的项目，把手段作为结果，把上数字化作为一个结果，实际上这样是不对的。</p><p></p><p>我们的数字化是为生产制造服务的，而生产制造是需要不断创新，不断提高效率和降低成本，如果企业停下来了，可能就面临着被市场淘汰的风险，不进则退。</p><p></p><p>InfoQ：2023 年在生产制造板块，会从哪几个方面做深化应用？</p><p></p><p>肖庆阳：今年我们首先要专注人工智能在生产产线的应用，主要目标是基于 5G 和 AI 的工业视觉检测，做零件外部和内部缺陷的识别。第二是基于大数据和云计算的工艺优化系统，能够实现预测性维护，为质量管理提供数据的支撑，实现工艺的分析优化。</p><p></p><p></p><h2>当“力不从心”，如何推进数字化</h2><p></p><p></p><p>InfoQ：您曾<a href=\"https://www.infoq.cn/article/OuAe5PBxryakC5IliQru\">谈到</a>\"咱们大连亚明进行数字化转型背后的核心驱动力是“客户的牵引”，并举例说福特在 2005 年的时候提出，凡是给福特供货的零部件厂必须要有 EDI（电子数据交换）平台，这也要求包括亚明在内的零部件厂商必须进行整改，这看起来是非常有代表性的事件。能否展开说说，在发展过程中，大连亚明是如何结合客户需求去设定合理的数字化目标，会不会遇到“力不从心”的情况？</p><p></p><p>肖庆阳：会有的，我们的客户都是顶级的汽车厂，软硬件水平非常高，要求自然就更高。而且他们的研发投入资金很大，我们作为传统的汽车零部件厂，拥有的资源不像整车厂那么多，所以说我们肯定要走适合自己的道路。</p><p></p><p>但是主机厂客户实际上也在帮助供应商一步一步实现数字化转型的目标，客户会提出目标，但具体如何去做，客户也会尊重供应商的建设的步伐。</p><p></p><p>比方说客户有准时供货的目标，我们就要提高生产效率，同时降低库存，实现成本控制。另外还有价格的影响，现在汽车行业竞争非常残酷，零部件价格每年都在降价，所以说这也逼迫着我们这些零部件供应企业要不断提质降本增效，采用数字化的手段和工具达成客户对供应商的一些要求。我们必须在激烈的市场竞争中，通过数字化的转型，来提高企业自身的核心竞争力。</p><p></p><p>InfoQ：既然资源有限，怎么去结合客户的需求给自己设定合理化的目标，更合理的、能实现的数字化目标？</p><p></p><p>肖庆阳：实际上我们的客户很好，他们不会轻易放弃任何一家供应商，每年都会多次到零部件企业去做质量和技术评审，评审过程中，客户给的目标也是循序渐进，也不会一下子给很高的目标。我们的方法是持续改善，设定够得着的目标，从短期、中期、长期来层层落地。</p><p></p><p>InfoQ：您提到要不断改善，但现在市场竞争也是非常激烈，零部件也一直在降价，就亚明自身而言，研发投入比例有产生哪些变化吗？</p><p></p><p>肖庆阳：变化是比较大的，变化主要来自于我们近两年的产品结构，现在正在转型到新能源汽车的研发制造的方向。新能源汽车相比于传统的燃油车，要求研发周期更短，这对于零部件企业是一个比较大的冲击，对零部件企业的研发效率、生产效率和工艺技术都提出了更高的要求。</p><p></p><p>所以研发投入也比以前高了，我们很多的生产设备和检测设备都需要升级换代。而且不管是软件、硬件，还是人才的投入，都比过去要增加很多。投入加大对于现阶段的企业来说是比较艰难，利润空间也比较小，但是没办法，企业必须要生存下去，我们必须要有创新的手段，还有创新的意识。</p><p></p><p></p><h2>小步快走，先解决生产和经营遇到的最急迫的问题</h2><p></p><p></p><p>InfoQ：大连亚明的数字化生产转型主要涉及哪些技术？这些技术是如何作用到生产制造过程中的不同环节？</p><p></p><p>肖庆阳：现在涉及很多技术，比如比较典型的是 5G 通讯技术，凭借其低时延、广连接的特点，能突破一些生产工艺的短板。进一步地，5G + AI 工业视觉检测，原来需要在现场部署许多边缘计算，现在通过 5G 可以把边缘端计算移到中心机房，使得现场的工位的部署更加灵活，更加方便，总体的投资也更加节省。</p><p></p><p>另外，当我们把很多通讯模组换成 5G 通讯模组之后，工厂内的产线布局和改造就变得更加灵活，也会降低总体的 IT 技术架构的投入。目前，大连工厂现在已经全面实现 5G 网络的覆盖。</p><p></p><p>InfoQ：区别于普通离散制造业，压铸制造企业的核心痛点是生产过程管控，为了解决这一问题，大连亚明选择自主研发MES系统。接下来大连亚明的MES系统会朝着哪些方向和目标演进？为此，团队需要做哪些努力？</p><p></p><p>肖庆阳：未来，我们想做到 5G 全链接，实现工厂的生产要素全面互联，并且更加智能，用最少的人实现管理的升级和优化。</p><p></p><p>目前MES已经开始对外推广，并做了十几家客户项目，通过这些项目，我们现在希望把 MES 做进一步的凝练和封装，把它打造成模块化、插件化的数字化产品并推向市场，让更多的制造企业能用上我们的产品。并且，大连亚明只做自己最擅长的领域，我们不会涉及更多的行业领域。</p><p></p><p>InfoQ：要实现长期目标，现阶段我们会不会面临人才上的难题？</p><p></p><p>肖庆阳：现阶段企业数字化的需求非常大，我们的项目也非常多，所以确实面临着人才和资金的不足，我们也希望能够有更多的人才加入到我们的团队，也希望能有更多的投资者能够看到这样的机遇，能够来共同推进制造企业数字化转型的建设。</p><p></p><p>InfoQ：最后想再请您总结下，由于汽车零部件厂商的预算有限、利润率较低，您刚刚也提到缺人缺资金，而数字化投入往往需要拉长战线，更加讲究目标拆解，小步快跑，在这点上，亚明有哪些可以分享给同行的心得吗？</p><p></p><p>肖庆阳：其实我们属于中小企业，中小企业不像大企业，有比较充裕的资金保障和还有人才队伍，所以我认为不能一上来就做大而全的系统，也不要投入巨额资金引进一个数字化的平台或者系统，那样风险非常大，难度也高。</p><p></p><p>我建议通过小步快走的方式推进，先解决生产和经营中遇到的最急迫的问题，把问题做排序，解决最关注的前两个问题。通过调研，研究哪些数字化手段和工具能解决问题，建立可视化的初步目标。只有初步尝到甜头，才能更理解数字化转型是怎么一回事。有了一定的经验积累之后，再来做整体的规划和设计，就可以把之前做的一些工作串起来，一步一步实现最终的数字化转型战略。</p>",
    "publish_time": "2023-04-04 18:28:30",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "阿里云云原生网关 Higress 最佳实践 ｜InfoQ《公开课》",
    "url": "https://www.infoq.cn/article/62uOgU5QxeUyitu4I9iw",
    "summary": "<p>Higress 是基于阿里内部两年多的 Envoy Gateway 实践沉淀、以开源 Istio + Envoy 为核心构建的下一代云原生网关，在标准上全面支持 Ingress 与 Gateway API，积极拥抱云原生下的标准 API 规范。此外，Higress Controller 支持 Nginx Ingress 平滑迁移，用户可以几乎零成本快速迁移到 Higress。</p>\n<p>讲师简介：</p>\n<p>李艳林（彦林），Higress发起人，阿里云微服务负责人。</p>",
    "publish_time": "2023-04-04 18:54:53",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]