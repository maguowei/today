[
  {
    "title": "亚马逊云科技 Lambda引入响应有效负载流",
    "url": "https://www.infoq.cn/article/YgsLlr5LXF1yvoZfkm2i",
    "summary": "<p>亚马逊云科技最近宣布，AWS Lambda函数可以<a href=\"https://aws.amazon.com/about-aws/whats-new/2023/04/aws-lambda-response-payload-streaming/?utm_source=newsletter&amp;utm_medium=email&amp;utm_content=offbynone&amp;utm_campaign=Off-by-none%3A%20Issue%20%23229\">将响应有效负载以流的方式逐步传回客户端</a>\"。新特性提高了Web和移动应用程序的性能，目前在Node.js 14.x及以上版本的运行时以及自定义运行时中可用。</p><p>&nbsp;</p><p>响应流帮助开发人员将响应从他们的函数以流的方式传输给他们的用户，而不必等待整个响应完成。对于这项<a href=\"https://stackoverflow.com/questions/39381139/how-to-stream-aws-lambda-response-in-node\">期待已久的特性</a>\"，可以使用<a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html\">Lambda函数URL</a>\"和SDK来调用其API，但目前还无法使用API网关或应用程序负载均衡器（ALB）对响应有效负载进行流式处理。对于它的优势，首席开发大使<a href=\"https://twitter.com/julian_wood\">Julian Wood</a>\"是这样<a href=\"https://aws.amazon.com/blogs/compute/introducing-aws-lambda-response-streaming\">说</a>\"的：</p><p></p><p></p><blockquote>在传统的请求-响应模型中，在将响应返回给客户端之前，需要完全生成和缓存响应。客户端等待响应生成会降低TTFB（Time To First Byte）性能。Web应用程序对TTFB和页面加载性能尤其敏感。</blockquote><p></p><p>&nbsp;</p><p>响应流是为图像、视频、大型文档或数据库结果等大型有效负载而设计的，它需要用streamifyResponse()装饰器封装Lambda函数处理程序，如下所示：</p><p></p><p><code lang=\"null\">exports.handler = awslambda.streamifyResponse(\nasync (event, responseStream, context) =&gt; {\n    responseStream.setContentType(\"text/plain\");\n    responseStream.write(\"Hello, world!\");\n    responseStream.end();\n}\n);</code></p><p>&nbsp;</p><p>其中，新的responseStream对象提供了一个流对象，函数可以向该对象写入数据并立即发送到客户端。开发人员可以选择设置响应的Content-Type报头来传递关于流的额外信息。Datadog工程团队负责人<a href=\"https://www.linkedin.com/feed/update/urn:li:activity:7051209952417206274?updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A7051209952417206274%29\">AJ Stuyvenberg</a>\"<a href=\"https://dev.to/aws-builders/introducing-streaming-response-from-aws-lambda-511f\">测试了这一新功能</a>\"。他评论道：</p><p></p><p></p><blockquote>这次发布可能看起来微不足道，但它解锁了几个关键的用例——对于希望利用服务器端渲染并减少第一字节时间的Next.js和React开发人员来说尤其如此。</blockquote><p></p><p>&nbsp;</p><p>新特性目前支持的最大响应大小为20MB（软限制），流函数的最大带宽吞吐量限制为16Mbps（2MB/s）。目前，响应流仅在Node.js SDK中原生提供，不过开发人员可以<a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-custom.html#runtimes-custom-response-streaming\">在支持其他编程语言的自定义Lambda运行时中实现它</a>\"。虽然有些开发人员关注的是<a href=\"https://twitter.com/ashishpandeyone/status/1644480011276091392\">它的局限性</a>\"，但Ampt首席执行官兼联合创始人<a href=\"https://www.linkedin.com/in/jeremydaly\">Jeremy Daly</a>\"在其新闻通讯中写道：</p><p></p><p></p><blockquote>该特性不仅让Lambda函数可以将响应流逐步返回给客户端以减少TTFB，而且还允许开发人员超过标准的6MB负载限制。</blockquote><p></p><p>&nbsp;</p><p>云咨询顾问、亚马逊云科技无服务器英雄<a href=\"https://www.linkedin.com/in/theburningmonk/\">Yan Cui</a>\"写了一篇文章，演示了如何使用新的流式响应<a href=\"https://lumigo.io/blog/return-large-objects-with-aws-lambdas-new-streaming-response/\">返回大型对象</a>\"，而无需将结果存储在S3中。</p><p>&nbsp;</p><p>Lambda的响应流并不是云计算领域中第一个可用的选项，Vercel最近就在Node.js（Lambda）和Edge运行时中提供了<a href=\"https://vercel.com/blog/streaming-for-serverless-node-js-and-edge-runtimes-with-vercel-functions\">HTTP响应流支持</a>\"。</p><p>&nbsp;</p><p>亚马逊云科技在<a href=\"https://serverlessland.com/patterns\">无服务器模式集合</a>\"中发布了Lambda流应用程序示例。这些应用程序支持用AWS SAM来构建和部署资源。流式响应增加了<a href=\"https://aws.amazon.com/lambda/pricing/\">Lambda的网络传输成本</a>\"，不过，除了每个请求的前6MB之外，亚马逊云科技免费套餐现在还包含每月100GiB的HTTP响应流。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/04/aws-lambda-response-streaming/\">https://www.infoq.com/news/2023/04/aws-lambda-response-streaming/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/OzPQdde0UPv9O5Cs9xAu\">亚马逊云科技开源 Mountpoint for Amazon S3，通过挂载点技术简化 Amazon S3 对象存储的使用</a>\"</p><p><a href=\"https://www.infoq.cn/article/EvMkADbFYlbaphLm8ywY\">容器与无服务器，是竞争对手还是队友？</a>\"</p>",
    "publish_time": "2023-05-24 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]