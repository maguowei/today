[
  {
    "title": "Spotify如何可视化系统架构图",
    "url": "https://www.infoq.cn/article/s5UwbP01ga8akJIFgtZV",
    "summary": "<p>Spotify的工程师最近分享了他们在公司内部是<a href=\"https://engineering.atspotify.com/2022/07/software-visualization-challenge-accepted/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">如何标准化架构图</a>\"的。他们定义了一种叫作<a href=\"https://backstage.io/docs/features/software-catalog/system-model?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">Spotify软件模型</a>\"的标准系统模型，并采用<a href=\"https://c4model.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">C4模型</a>\"来可视化它。这一组合创造了一种可在整个组织中使用的公共语言，有助于沟通、辅助决策，并为Spotify的软件开发提供支持。</p><p></p><p>Spotify高级工程师Renato Kalman和工程师Johan Wallin解释了创建这个框架的动机：</p><p></p><p></p><blockquote>架构图是软件设计的基本要素，也是软件开发中沟通和协作的基本工具。在Spotify，我们拥有一个非常复杂的应用程序网络，数百个团队开发的数千个相互关联的软件系统组成了这个复杂的网络，所以我们需要一种简单的方法来可视化这些复杂的连接。从技术上说，我们可能可以用一个大型的图表来捕获所有的系统，但它会非常难以理解和查看。为了做出好的设计决策，并以可持续的方式开发我们的软件，我们需要一些可以在不同的抽象级别上观察架构的工具。</blockquote><p></p><p></p><p>Spotify的工程师将软件组件的元数据保存在一个<a href=\"https://backstage.io/docs/features/software-catalog/software-catalog-overview?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">软件目录</a>\"中。为了支持标准的架构图，他们创建了Spotify系统模型，它包含了一组核心实体和抽象，Spotify工程师可以使用这些实体和抽象来合成有关软件健康状况、所有权和依赖关系的数据。Kalman和Wallin说：“我们相信，一门有关软件和资源的公共语言有助于促进沟通和协作，这对于我们这种规模的公司取得成功至关重要。”</p><p></p><p>C4模型是一种轻量级图形符号技术，用于建模软件系统的架构，由Simon Brown创建。它将系统分解为容器和组件。在Spotify，工程师们采用了C4模型符号及其最佳实践。不过，他们用Spotify系统模型取代了上下文、容器和组件的抽象层。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2022/07/spotify-system-model-c4/en/resources/1Spotify-c4-overview-1658874293923.png\" /></p><p></p><p>C4模型，来源：<a href=\"https://c4model.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">https://c4model.com/</a>\"</p><p></p><p>Spotify使用<a href=\"https://backstage.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">Backstage</a>\"存储软件目录元数据。Backstage是一个开源平台，用于构建开发者门户网站。这个项目由Spotify推动，是CNCF的一个孵化器项目。他们利用Backstage的<a href=\"https://backstage.io/docs/plugins/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">可扩展性</a>\"创建了一个叫作Architecture的插件，这个插件可以根据存储在Backstage中的Spotify系统模型元数据生成C4图表。Kalman和Wallin说：“在Backstage中存储系统模型元数据对于组件发现、理解软件组件之间的生命周期、所有权和关系，以及自动生成软件可视化图都非常有帮助。”</p><p></p><p>Spotify系统模型由几个核心实体组成，包括表示软件组件之间边界的API、表示单个软件块的组件，以及运行时操作组件所需的基础设施资源。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2022/07/spotify-system-model-c4/en/resources/1Spotify-figure-1-1658874293923.png\" /></p><p>核心实体之间的关系，来源：<a href=\"https://engineering.atspotify.com/2022/07/software-visualization-challenge-accepted/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">https://engineering.atspotify.com/2022/07/software-visualization-challenge-accepted/</a>\"</p><p></p><p>随着目录数量的增长，这些组件变得越来越难以理解、审查和相互关联。因此，他们引入了额外的抽象，有助于理解更广泛的软件生态系统。系统是协作执行某些功能的实体的集合，而领域是与部分业务相关的实体和系统的集合。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2022/07/spotify-system-model-c4/en/resources/1Spotify-figure-2-1658874293923.png\" /></p><p></p><p>领域、系统与核心实体的关系，来源：<a href=\"https://engineering.atspotify.com/2022/07/software-visualization-challenge-accepted?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">https://engineering.atspotify.com/2022/07/software-visualization-challenge-accepted</a>\"</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/07/spotify-system-model-c4/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NTk2NjUwNzMsImZpbGVHVUlEIjoiMUVnUXAxN0w4djBhMUtGQSIsImlhdCI6MTY1OTY2NDc3MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.I5M6urBb5jGHWotRP03JgwclL-LuyCmxC0zYVxl7GRE\">The Spotify System Model: Automated Architecture Visualization at Spotify</a>\"</p><p></p>",
    "publish_time": "2022-08-07 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]