[
  {
    "title": "AWSGoat：对AWS云解决方案进行渗透测试",
    "url": "https://www.infoq.cn/article/MV5Lp3yF1d3ewP1MPD9w",
    "summary": "<p><a href=\"https://github.com/ine-labs/AWSGoat?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">AWSGoat</a>\"是一个设计漏洞（Vulnerable by Design）基础设施，包含最新发布的<a href=\"https://owasp.org/Top10/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">OWASP十大Web应用安全风险</a>\"（2021年），以及IAM、S3、API Gateway、Lambda、EC2和ECS等服务的错误配置。它模拟了有缺陷的真实基础设施，使用了黑盒方法，包含了多个升级路径。</p><p></p><p><a href=\"https://ine.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">INE</a>\"团队开发了AWSGoat项目，并在最近举行的2022年黑帽大会上（在OWASP新加坡分会之前）展示了它。该团队还针对微软Azure开发了<a href=\"https://github.com/ine-labs/AzureGoat?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">AzureGoat</a>\"。这两个项目都包含以下漏洞和错误配置。</p><p>XSS；SQL注入；不安全的直接对象引用；App Function环境的服务器端请求伪造；敏感数据暴露和密码重置；存储帐户配置错误；身份配置错误。</p><p></p><p>彭泰斯学院在推特上表示：</p><p></p><p></p><blockquote>AWSGoat是为信息安全社区而开发的，是#AWS安全技术的一个真实的训练场。</blockquote><p></p><p></p><p>要使用AWSGoat，用户需要一个AWS帐户（就像AzureGoat需要Azure账户一样）和具有管理权限的AWS Access Key。要使用AWSGoat代码库，用户可以分叉它，将他们的AWS帐户凭证添加到GitHub秘密中，并运行Terraform Apply Action。这个工作流将部署整个基础设施，并输出托管应用程序的URL。除此之外还有一个<a href=\"https://github.com/ine-labs/AWSGoat/blob/master/README.md#manual-installation?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">手动执行流程</a>\"。</p><p></p><p>安装好以后，用户可以利用项目中包含的一个模块，这是一个使用了AWS Lambda、S3、API Gateway和DynamoDB的无服务器博客应用程序。这个模块包含了各种Web应用程序缺陷，并允许利用配置错误的AWS资源。YouTube上有一个<a href=\"https://www.youtube.com/playlist?list=PLcIpBb4raSZEMosUmY8KpxPWtjKRMSmNx&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">播放列表</a>\"为此提供了参考。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3e/3e685cd3763f561cf8aa5de394e15c32.png\" /></p><p>来源：<a href=\"https://github.com/ine-labs/AWSGoat?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">https://github.com/ine-labs/AWSGoat</a>\"</p><p></p><p>类似地，AzureGoat也包含了一个模块，提供了一个无服务器博客应用程序，使用了Azure App Function、Storage Accounts、CosmosDB和Azure Automation。这两个项目未来都将推出更多的模块。</p><p></p><p>在AWSGoat的一篇INE博文中，INE首席架构师（实验室平台）和项目贡献值之一Jeswin Mathai说：</p><p></p><p></p><blockquote>虽然还处于起步阶段，但这个团队对AWSGoat有着雄心勃勃的计划。下一个（第二个）模块已经在开发中，是一个使用了AWS ECS基础设施的内部人力资源薪资应用程序。未来增加防御/缓解功能，包括安全工程、安全编码和监控，以及检测攻击。</blockquote><p></p><p></p><p>此外，他还说：</p><p></p><p></p><blockquote>这将是未来几年的一个大项目，而且它是开源的，任何人都可以参与贡献。</blockquote><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/08/awsgoat-pentesters-open-source/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjI0NDI1MzksImZpbGVHVUlEIjoiN1ZkWVJ3ZXJJMEVJTjd2YiIsImlhdCI6MTY2MjQ0MjIzOSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.Fkahw_0yfOHbZ9u7he0opdpN9N65adj6xRbcVo5prJY\">AWSGoat Open-Source Project for Pen Testing AWS Cloud Solutions</a>\"</p>",
    "publish_time": "2022-09-07 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "范珂：数字化时代下数据驱动决策组织文化的打造 ｜ DTDS 8 月",
    "url": "https://www.infoq.cn/article/ZCY91qtMLIJUA9PPxu6V",
    "summary": "<p>在工业和信息化部人才交流中心和中国移动通信联合会教育与考试中心的大力支持与指导下，由极客时间企业版、培训杂志共同举办，甫瀚咨询联合举办的 DTDS 全球数字人才发展线上峰会于 8 月 9 日拉开帷幕。</p>\n<p>经过多年在企业数字人才发展领域的耕耘，极客时间于 2022 年发布了数字人才粮仓模型，深入定义了五层数字人才，收获了来自各行各业的企业客户的认可。我们也看到许多企业都在加大对数字人才的培养，并且希望向行业标杆学习，完善自己的数字人才培养体系，融入数字人才标准和生态。</p>\n<p>为此，DTDS 峰会汇聚了来自政府和产业的权威，以及金融、汽车、制造、ICT、零售、互联网、风控审计企业的数字化先锋人物，旨在建立数字人才培养“朋友圈”，让大家从多维视角了解企业数字化转型，人才发展，和组织变革的先进经验。</p>",
    "publish_time": "2022-09-07 10:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "微财在构建企业级金融云服务上的探索和实践",
    "url": "https://www.infoq.cn/article/SI16VGwPgrhwpqL7uN9O",
    "summary": "<p></p><h2>一、金融云的背景以及存在的问题</h2><p></p><p></p><p>金融行业的特殊性决定了对金融企业构建企业云服务时一定要满足企业对高稳定性和安全性的要求。传统的云服务在这两方面都不能完全满足，需要一定改进和优化才能符合金融企业的要求。微财数科之前已经有一套完整的云管理平台，但存在以下缺陷：</p><p></p><p>构建类型支持少，构建速度慢。构建类型支持少，原平台只支持通用构建类型，编译阶段和构建阶段在一起，项目镜像不够精简，不支持自定义的Dockerfile。构建性能方面表现为Jenkins集群白天繁忙，夜晚空闲，构建效率低。流量管理不够稳定和精细。原平台服务发现、流量管理依赖Registrator + Etcd + Confd + Nginx的组件组合，在持续发布的过程中，其中一个组件出问题就会导致服务的流量切换故障。并且仅支持了Rolling（滚动）的方式去发布服务，这种发布方式缺乏精细的流量控制和管理。安全管理不规范。Web终端开启，方便了开发人员进入容器排查服务问题，同时也带来了安全隐患，并且存在没有命令白名单和网络不隔离带来的风险。风控业务支撑不足。风控平台程序的特点是负载高、实例多、计算密集、迭代发布频繁。这种业务场景，按照普通的云平台建设是不能满足的。审计不全面。平台中构建日志只能查看最近一次构建日志，服务操作的日志简单，以及Web终端没有命令审计。缺乏统一的监控和告警。集群容器的监控采用cAdvisor采集，存储Prometheus，使用Grafana可视化。同时采用Zabbix进行CPU、内存、文件系统以及网络的监控，并且还有一些自定义的监控告警。总之就是依赖组件多，不好维护，不统一。</p><p></p><h2>二、微财的解决方案和实践</h2><p></p><p></p><p>为了提升公司云服务的可靠性和安全性，以及公司CI/CD的效率，我们基于Kubernetes构建公司新一代的云平台，逻辑架构图如下：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/a4/53/a49032a3064b57d87a2d485f7eaf5453.png\" /></p><p></p><h4>2.1、构建镜像</h4><p></p><p></p><p>新平台构建不再依赖Jenkins，使用构建脚本充分利用集群的大资源池构建，Build In Pod。构建完成推送镜像仓库后，构建容器销毁，做出资源释放，这样做有三个好处：</p><p></p><p>提高了构建效率，并发构建表现更优，解决了Jenkins集群白天繁忙构建效率低的问题集群的资源得到充分的利用，Jenkins的机器资源也可加入集群中对平台来说，减少了一个中间件的维护</p><p></p><p>另外微服务时代，所使用的开发语言多样（Java，Golang，Python，NodeJS等），且项目的构成也多样，比如类似GitHub上的开源项目，代码根目录直接就有Dockerfile文件的情况。我们在新的平台中支持了四种构建方式：通用构建、编译和构建分离、代码内Dockerfile以及自定义Dockerfile。尤其是编译和构建分离（多阶段构建）的方式，精简了镜像，直接节约了镜像的存储成本。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/50/12/50c239d281d6efd29174e8b5c6089312.png\" /></p><p></p><h4>2.2、流量管理</h4><p></p><p></p><p>新平台不再依赖同步Nginx的Upstream做服务发现，利用Service资源对象来选择后端的EndPoint。利用Istio的VirtualService资源对象来绑定hosts做路由转发，底层是利用Envoy做路由转发，性能可与Nginx比肩。这么做的优势是摆脱了一堆组件来实现服务发现的依赖，自从新平台上线后实现了流量管理的零故障。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/55/97/557dda7d36195b6a857c106ba4de6697.png\" /></p><p></p><p>同时业务驱动我们要有精细化的流量切换管理，比如金丝雀发布（灰度发布）和蓝绿发布。这两种发布方式的优点是可以快速回退版本，最大程度减少用户暴露在错误代码的时间，原生的Kubernetes只有Rolling Update的更新方式（启动对应比例或者数量的容器，销毁对应比例或者数量的容器，直到发布完成）。</p><p></p><p>所以我们基于Istio的流量管理实现了蓝绿发布和金丝雀发布，以金丝雀发布为例，使用DestinationRule定义新老版本的Subset，然后再使用VirtualService控制打到新老版本的流量权重，来实现对新版服务的灰度验证，流程图如下：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/40/92/403ec1fa80c79968c3521560ca9edf92.png\" /></p><p></p><h4>2.3、安全保障</h4><p></p><p></p><p>云平台的安全，关系着集群的安全、服务的安全以及数据的安全。尤其是数据的安全，在金融行业显得尤为重要，需要云平台有更严格的权限控制和操作审计，通过以下几个方面，新的云平台做到了权限控制、资源隔离、操作详细审计，兼顾效率的同时最大限度的保障了平台的安全：</p><p></p><p>权限控制</p><p>资源分组，各组资源隔离角色的划分，细粒度的角色权限分层划分</p><p></p><p>加固Web终端</p><p>Web终端Shell命令审计进入服务运行操作的命令白名单，屏蔽危险的命令，比如 rm 命令等日志安全终端：与集群网络隔离的亲和容器的终端，仅有查看日志的功能</p><p></p><p>操作审计</p><p>记录详细的镜像构建操作记录详细的服务发布操作服务发布动作在企业微信群告警</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/c9/6c/c9b2b942fac0e6cd6ffc184f6836a26c.png\" /></p><p></p><h4>2.4、风控服务支持</h4><p></p><p></p><p>风控服务是微财数科的重点服务，服务的特点前面也提到：负载高、计算密集、实例多、迭代发布频繁等。我们的云平台为了满足风控的要求做了以下特殊策略或者改造：</p><p></p><p>在集群Node硬件配置不统一的背景下，对于风控负载高、计算密集的服务，如果调度到硬件配置低的机器上，可能会导致两个问题：一个是自身的延时过高，另一个是会影响到别的业务线的服务。针对这样的情况我们做了两种调度策略：</p><p></p><p>获取服务器的压力数据，筛选出压力相对小的机器设置更高的调度优先级。服务器打标签，人工标记性能更好的新机器作为调度首选。</p><p></p><p>对于实例多、迭代频繁，我们之前依赖Nginx的时候，由于节点多，滚动发布的过程中服务流量密集切换会导致Nginx频繁Reload，进而导致Nginx机器负载陡然升高，影响业务稳定。针对这种业务我们新老云平台分别做了改造：</p><p></p><p>老平台依然是Nginx做流量管理，我们使用了 ngx_http_dyups_module 这个模块，直接更新 upsteam 内存的方式避免Nginx频繁 Reload 的方式解决了此问题。新平台使用Kubernetes Service对象来发现流量，可以满足对风控服务的发布要求。</p><p></p><h4>2.5、统一监控告警</h4><p></p><p></p><p>云原生时代Prometheus已经成为Kubernetes集群以及组件的监控标准，目前全方位的监控均采用Prometheus来实现，包括宿主机监控，集群监控，组件监控，降低了监控平台的维护成本。建设了告警平台，统一了告警的机制。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/dc/ae/dcf7365271cf47c86dd165342cd2deae.png\" /></p><p></p><h2>三、方案的效果</h2><p></p><p></p><h4>3.1、稳定性的提升</h4><p></p><p></p><p>高可用的Kubernetes集群，节点故障都可实现转移，目前集群可用性达到了99.99%，改变老平台服务发现导致流量故障率月均1次的问题。</p><p></p><h4>3.2、安全性的提升</h4><p></p><p>容器Web终端屏蔽敏感命令Web终端命令审计提供网格隔离的Web日志安全终端，只能查看日志用</p><p></p><h4>3.3、效率提升</h4><p></p><p></p><p>很明显的就是构建效率的提升，直接提升了服务CI/CD的效率，根据现有集群的统计，构建效率提升26%。</p><p></p><h4>3.4、技术支撑</h4><p></p><p>支持了4种构建方式，多构建方式让平台更灵活的去创建构建，不用再强制项目去适应平台实现了金丝雀发布和蓝绿发布，降低发布带来的错误或者不一致的风险统一了监控告警，有统一的地方去查看监控和维护告警</p><p></p><h4>3.5、风控业务支撑显著</h4><p></p><p></p><p>不论是风控服务的稳定性，还是发布的流畅度都比之前好很多，大大降低了风控业务的故障率。</p><p></p><h2>四、未来的思考以及下一步的规划</h2><p></p><p></p><p>金融行业以及我们自身的业务形态也不是一层不变的，我们需要时刻从内外部挖掘我们的云平台的功能需求，更好的为我们金融业务服务。</p><p></p><h4>4.1、与业务深度融合，继续提升稳定性</h4><p></p><p></p><p>场景一：用户触达活动导致的流量暴增</p><p></p><p>此场景需要限流和熔断，业务也可以做，但是需要改造业务代码。新的云平台作为基础设施计划实现无代码侵入的熔断、限流以及链路追踪，从基础层面来保护我们的微服务以及系统整体的健壮性。</p><p></p><p>场景二：代码安全/Bug检查</p><p></p><p>金融的场景下，安全是重中之重，目前各团队有自己的代码检查方式，我们计划把执行代码检查做到新云平台的构建流程执行之前，支持通过静态代码分析扫描来检测项目中的Bug、代码错误和安全漏洞，及时发现问题。</p><p></p><h4>4.2、构建云原生AI应用</h4><p></p><p></p><p>为了让风控平台的开发人员更容易、更高效地在基于Kubernetes的容器集群环境构建 AI 系统，提高生产 AI 应用的能力。我们计划开始构建AI特征平台，深度整合大数据和风控算法，提升云端特征的生成和发布。</p><p></p><p>作者简介：</p><p></p><p>周俊鹏，微财数科高级工程师</p><p>李军，微财数科技术总监</p><p>王利明，微财数科高级工程师</p><p>周正杭，微财数科资深工程师</p>",
    "publish_time": "2022-09-07 11:22:17",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "DeepMind又放大招！用大型语言模型实现可信推理，距离模型可解释性又近了一步",
    "url": "https://www.infoq.cn/article/5kbN0qw43VmNQK2GBFPh",
    "summary": "<p>可解释性，已经成为当今<a href=\"https://qcon.infoq.cn/2022/beijing/track/1308\">机器学习研究与开发</a>\"领域最紧迫的难题之一。尽管目前的<a href=\"https://www.infoq.cn/article/EFIHo75sQsVqLvFTruKE\">大规模语言模型</a>\"（LM）已经展现出令人印象深刻的问答能力，但其固有的不透明性却导致人们无法理解模型如何得出最终答案，因此用户难以论证答案合理性、也不易发现答案中的潜在错误。</p><p></p><p><a href=\"https://www.infoq.cn/article/5qb7juMN4zSAT2Gu8Qs3\">DeepMind </a>\"研究团队在最新论文《<a href=\"https://www.researchhub.com/paper/1272848/faithful-reasoning-using-large-language-models\">使用大型语言模型实现可信推理</a>\"》（Faithful Reasoning Using Large Language Models）中解决了这个问题。论文提出一套前向链选择推理模型，能够执行忠实推理并提供有效的推理跟踪，用以提高推理质量并帮助用户检查 / 验证最终答案。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b0/b0187490aa8ee534c4ebf1a8fe1b87bd.png\" /></p><p></p><p>论文地址：</p><p>https://www.researchhub.com/paper/1272848/faithful-reasoning-using-large-language-models</p><p></p><h2>如何利用因果逻辑原理提高推理质量？</h2><p></p><p></p><p>为了突破<a href=\"https://qcon.infoq.cn/2022/beijing/track/1300\">机器学习</a>\"可解释性这道难关，DeepMind 研究团队在论文中展示了如何通过因果结构反映问题的潜在逻辑结构，借此过程保证语言模型忠实执行多步推理。研究团队的方法会将多个推理步骤联系起来共同起效，其中各个步骤均会调用两套经过微调的<a href=\"https://www.infoq.cn/article/Y8tED9lYr0AiCJiRDg9Y\">语言模型</a>\"：其一用于选择，其二用于推理，借此产生有效的推理跟踪。</p><p></p><p>该方法还会对推理轨迹空间执行定向搜索，借此提高推理质量。</p><p></p><p>论文中提出的方法基于这一基本思想：如果给定问题的潜在逻辑结构，可以通过因果结构来反映，则语言模型可以忠实执行多步推理。为了实现这个目标，DeepMind 团队开发出选择推理（SI）作为系统主干。作为一种新颖架构，其中包含两套经过微调的语言模型，一套用于选择、一套用于推理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e6/e6d37f5b8e6327aaa7c66fc39281b400.png\" /></p><p></p><p>分步前向推理主干会将各个推理步骤拆分为两个：</p><p></p><p>1）给定一个问题，由选择模型首先从上下文中选择一组语句；</p><p>2）推理模型随后从选择中计算一个语句，预测其含义（推理）</p><p></p><p>在推理步骤结束时，该推理会被添加至上下文内。通过迭代整个选择与推理过程，模型即可产生推理轨迹，而最终推理将用于回答问题。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b9/b96cbf1f157a4db6ffe835335fc9b3f4.png\" /></p><p></p><p>为了让模型能够确定何时停止推理，该团队还引入了一个两段式 halter。它会利用微调的语言模型来预测该模型能否在当前推理之下回答给定问题。如果模型无法以高置信度回答问题，则执行另一次选择推理迭代；如果 halter 的输出就是答案，则终止此过程并返回答案。假设选择推理循环持续到预先指定的迭代次数，但仍未得出答案，则系统不会直接给出最佳猜测、而是返回 “未知”。</p><p></p><p>研究人员观察到，在删除掉模型认为无法忠实回答的问题之后，模型性能得到显著提高。他们相信，这种方法有助于提高模型在以精确度（而非召回率）为优先的现实世界中的可信度与安全性。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3c/3cf936880bfdabd7ab096b5632379e23.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0e/0e01dad8ef107f6094059a394f66e036.png\" /></p><p></p><h2>实际效果</h2><p></p><p>在这次实证研究中，该团队将自己的选择推理系统与 Proof Writer（PW）和 EntailmentBankQA（EB）数据集上的基准模型进行了比较。他们提出的模型在 PW 和 EB 上分别实现了 88.1% 和 78.1% 的最终答案准确率，大大优于基准模型。</p><p></p><p>这项工作表明 DeepMind 提出的新方法确实能在不牺牲模型性能的前提下，通过多步推理对问题做出忠实回答。虽然该研究目前只侧重于给定上下文中的多步骤推理，但该团队已经计划在未来的工作中利用检索进一步充实上下文信息。</p><p></p><p>从实际性能来看，尽管存在“只能执行可信推理”的限制，该模型的实际表现仍然非常出色。考虑到如果一项技术要想安全普及、为大众所接受，就必须能够通过审计检验，此次研究可能代表语言模型正向着可解释性迈出重要一步。</p><p></p><p>原文链接：</p><p></p><p>https://medium.com/syncedreview/deepminds-selection-inference-language-model-system-generates-humanly-interpretable-reasoning-8707817ad098</p><p></p><p>https://www.researchhub.com/paper/1272848/faithful-reasoning-using-large-language-models</p>",
    "publish_time": "2022-09-07 14:02:30",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "一封给所有 AI 和元宇宙开发者的邀请函，NVIDIA GTC 大会重磅来袭！",
    "url": "https://www.infoq.cn/article/11LyTNF1Ls0UPImW0KTi",
    "summary": "<p></p><p>1956 年，一场主题为用机器模拟人类智能的研讨会在美国召开。在本次研讨会上，约翰·麦卡锡提议用人工智能作为这一交叉学科的名称。于是，这次会议成为了人类历史上第一次人工智能的研讨会，标志着人工智能学科的诞生。后来，人工智能在争论中不断发展，机器翻译、专家系统、聊天机器人等应用纷纷出现。</p><p></p><p>到了 21 世纪，人工智能的发展迎来了高潮。移动互联网与大数据的发展、深度学习的成功应用，大规模语言模型的落地，让人工智能迅速成为学术界和工业界的热点。</p><p></p><p>如今，元宇宙、5G、AI 工厂、数字孪生、自动驾驶、XR、数字虚拟人等概念的出现，再次引爆了对人工智能的需求。当今时代，无疑是属于人工智能的时代。</p><p></p><p>对于普通人来说，可能并不需要了解最前沿的技术，更多的是享受技术带来的便捷；而对于开发者来说，作为时代的缔造者，又该如何借东风从而走在科技的最前沿？</p><p></p><p>9 月 19 日至 22 日，NVIDIA 将再次举办全球 AI 开发者大会（<a href=\"https://www.nvidia.cn/gtc-global/?ncid=pa-dis-othe-483508\">GTC 大会</a>\"），其创始人兼首席执行官黄仁勋将在 GTC 主题演讲中解读 AI 和元宇宙如何让现实世界不断突破创新，带你深入了解那些能够帮助我们应对全球严峻挑战的颠覆性技术！</p><p></p><p>除此之外，还有数百位来自各行业及 AI 领域的领导者将带来 200 多场精彩演讲、会议、培训及展示。紧凑的探索之旅，汇集了开发者、研究人员、企业领袖、创作者以及 IT 决策者，你将在这里了解如何利用 AI、计算机图形、数据科学等力量重塑我们的世界！</p><p></p><h2>部分议题介绍</h2><p></p><p></p><p>本次 GTC 大会为各行各业以及处于职业生涯各个阶段的参与者都提供了独特的学习和发展机会，部分议题介绍如下：</p><p></p><p>立即采用 AI 就绪的基础设施，驱动未来 AI 工厂 [WP41144]</p><p></p><p>当今社会，数据称王。随着企业逐渐趋向于以数据为中心，数据中心也正在转型为利用数据生成智能的“AI 工厂”。为了充分发挥 AI 的潜能，企业需要构建安全、加速和准备面向未来挑战的全栈式计算基础架构。</p><p>本议题将邀请 NVIDIA 网络副总裁 Ami Badani 及网络产品副总裁 Yael Asseraf Shenhav，和你探讨什么是 AI 就绪型基础架构，以及 NVIDIA DPU 和 GPU 技术如何融合以加速 AI 工作负载的计算。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7f/7fc516ba35ec05ebf3d273ae5c95cb2f.png\" /></p><p></p><p>AI 的未来：与图灵奖得主进行炉边谈话 [WP41191a]</p><p></p><p>从表面来看，人工智能的目标可能是推动机器智能的发展，但它真正的目的，在于改变以智能驱动现实应用的方式。</p><p></p><p>此次炉边谈话，我们邀请到了 2018 年的 ACM 图灵奖得主 Yoshua Bengio、Geoffrey Hinton 和 Yann LeCun，针对 AI 会如何改变我们生活，以及 AI 驱动的应用如何应对当今时代的挑战等问题进行讨论。作为 AI 领域的思想领袖和远见者，他们为全世界的自然语言处理、医学成像、以及自主机器等各种应用中采用 AI 技术建立了坚实基础。</p><p></p><p>通过本次谈话，你将直观了解到“ AI 教父们”眼中的世界，无疑站在巨人的肩膀上！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8a/8a36b1feb6ad61cdef12cba9bb20a41b.png\" /></p><p></p><p>5G 杀手级应用：让增强现实和虚拟现实成为现实  [A41234]</p><p></p><p>何为 5G 时代的杀手级应用？它能够利用新的网络能力，执行以前在早期网络中被视为天方夜谭的解决方案。而需要超低延迟和大带宽来为用户提供与有线同等的体验的扩展现实（XR，包括增强现实、虚拟现实和混合现实），一直被设想为 5G 的关键杀手级应用之一。</p><p></p><p>在本场会议中，我们将邀请 Verizon 设备技术副总裁 Brian Mecum、AWS GTM 空间计算全球负责人 David Randle 和爱立信 5G 营销北美区负责人 Peter Linder，来分享他们是如何将 5G 和 XR 技术与 NVIDIA GPU、RTX vWS 和 CloudXR 相结合，并为各行各业的商业 XR 服务建立基础设施。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1d/1d73d4ed04e9d00b7d9d57d153de3b77.png\" /></p><p></p><p>基于浪潮和 NVIDIA 联合认证的 OVX 元宇宙服务器 MetaEngine 构建虚拟数字人 [A41390]</p><p></p><p>如今，各行各业都在驱动数字虚拟人进入发展快车道。作为真实世界在虚拟世界的映射，数字人被视为虚拟世界的核心资产和元宇宙发展基础。</p><p></p><p>本议题中，我们邀请到浪潮开发技术工程师王鹏飞，为我们介绍数字人构建和内容生成的计算能力要求，以及 MetaEngine 对数字人构建的支持，并解释 MetaEngine 中的 Omniverse 企业如何在数字人类中发挥重要作用，最终通过 Omniverse 应用程序 Audio2Face Machinima 给出一个活生生的数字人类驱动演示。</p><p>在未来，我们究竟需要什么样的数字虚拟人？这里将会给出答案。</p><p></p><p>更多议题介绍，请<a href=\"https://www.nvidia.cn/gtc-global/?ncid=pa-dis-othe-483508\">点击链接</a>\"了解详情！</p><p></p><h2>中国开发者专属</h2><p></p><p></p><p>GTC 主题演讲全球首播将于北京时间 9 月 20 日晚 11 点开始，中国重播将于 9 月 21 日上午 10 点开始。</p><p>其中，为了保证中国开发者的极客体验，本次 GTC 大会将精选以下演讲，专为中国开发者特设“Watch Party（在线观看派对）”，届时将由中文主持人对会议作出独到分析与见解，更有实时在线答疑与你互动！</p><p></p><p>AI 的未来：与图灵奖得主进行炉边谈话 [WP41191a]边缘 AI 和机器人的下一波浪潮 [WP41201]永无止境的计算演变 [WP41175a]立即采用 AI 就绪的基础设施，驱动未来 AI 工厂 [WP41144]工业元宇宙的未来与机遇 [WP41370b]端云结合：蔚来如何开发智能汽车 [WP41182b]大型语言模型的高效大规模训练和部署 [WP41200a].......</p><p></p><p>【<a href=\"https://www.nvidia.cn/gtc-global/?ncid=pa-dis-othe-483508\">点击连接</a>\"】或【扫描海报二维码】，立即免费报名，最新的技术和业务发展趋势等你来探！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8e/8ecfa690f56238618cd7424af17fd356.png\" /></p><p></p>",
    "publish_time": "2022-09-07 14:04:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "产业智能化升级的最短路径是什么？我们在“云智一体3.0”中找到了答案",
    "url": "https://www.infoq.cn/article/zjNolqefbu6PgizTmZhm",
    "summary": "<p>根据中国中小商业企业协会数据显示，数字化成熟度高的企业在疫情冲击下 3 个月内恢复比例高达 60%，而数字化成熟度低的企业恢复比例只有 48%。透过这组数据不难发现，身处 VUCA 时代，中国实体经济的发展命脉与数字化技术捆绑地愈发紧密。</p><p></p><p>基于此，传统企业也纷纷开始思考如何利用数智化技术来寻找产业升级的突破口。而云计算作为数字化转型的关键基础设施，也成为了对抗不确定性的重要因素。这几年，各地数据中心、算力中心的建设突飞猛进，据统计，国内算力产业近五年平均增速超过 30%，算力排名全球第二，目前算力已经不是产业遇到的真正瓶颈，如何用算力来解决产业的关键问题，才是产业的核心需求。</p><p></p><p>在 9 月 6 日的 2022 智能经济高峰论坛上，百度集团执行副总裁、百度智能云事业群总裁沈抖给出的答案是：“云计算必须与实体经济深度融合，真正深入到实体产业，去解决产业遇到的实际问题”。除此之外，沈抖还在会上重磅发布了新一代云战略——“云智一体 3.0”。</p><p></p><h1>产业智能化升级进行时，行业壁垒亟需打破</h1><p></p><p></p><p>虽然传统企业对于 AI 技术所产生的价值是高度认同的，各类数智化转型的升级方案也已经层出不穷，但传统企业的智能化升级进程依然不尽人意，尤其是在规模化落地方面存在较大的挑战。</p><p></p><p>若想彻底解决这个问题，仅仅停留在技术层面是远远不够的，还需要具备很深的行业壁垒，储备大量的企业需求、行业属性以及行业知识，而这也为云厂商等技术供给侧提出了更大的考验。</p><p></p><p>众所周知，百度已经在人工智能领域摸爬滚打整 10 年。近些年，我们也观察到百度也一直在与传统企业打交道，有不少传统企业依托于百度智能云提供的人工智能解决方案，走在了产业智能化的前列：</p><p></p><p>据了解，在广汽本田的工厂，利用 AI 技术可以仅用 1 秒钟完成 120 多张图片的全车车灯质检；在恒逸集团的车间，通过智能质检设备可以让质检女工晋级为人工智能数据标注师，单个螺丝钉的检验时间缩短到了 2.5 秒，检验效率相比人工质检提高了 70%。同样，在油气能源领域也有一些企业走得比较靠前，大榭石化管廊智慧巡检系统通过管廊机器人自动采集、远程监控，安全异常报警响应速度比原先提升了 6 倍，帮助企业每年约节省成本 240 万元。</p><p></p><p>为了进一步加速产业智能化升级的进程，使得百度智能云过往在产业中的实践经验能成功复制给千行百业，百度智能云也已经将通用的需求和能力沉淀到了智能云和通用云底座，并全新推出了“云智一体 3.0”架构。</p><p></p><h1>我们应该如何理解“云智一体 3.0”？</h1><p></p><p></p><p>在 2021 年的智能经济高峰论坛中，宣布将百度智能云从战略、架构、产品、生态四大层面全面升级，推出了“云智一体 2.0”全新架构。而本次升级的“云智一体 3.0”，其最大的变化在于，更加强调在实体产业的核心场景中去解决实际问题，利用 AI 高效调用云算力，以提升行业的效率。</p><p></p><p>单从图中的分层结构来看，“云智一体 3.0”与业内主流打法并无二致，而实际上，百度在每一层中都有领先的自研技术、产品和生态。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/71/7181ee806898b8dcae90ba97e6342437.jpeg\" /></p><p></p><p>如果上述提到的抽象定义，不能很好地帮助你理解“云智一体 3.0”的真正内核，我们不妨可以拆解下“云智一体 3.0”四层框架的组成情况：</p><p></p><p>在第一层，百度智能云切入了几个重点行业的核心场景，例如交通、工业、政府以及金融等等，通过打造行业标杆应用，来带动、沉淀 AI PaaS 层和 AI IaaS 层的能力；</p><p></p><p>第二层是 AI 通用产品，将第一层中不同行业的的通用需求沉淀到 AI 产品中，打造成智能客服、数字人等标准化的产品，进而再去支撑行业的智能应用；</p><p></p><p>第三层便是百度智能云最具差异化优势的部分，是由 AI IaaS 和 AI PaaS 组成的 AI Cloud；</p><p></p><h2>AI IaaS：百度百舸 2.0 以及昆仑芯 2 代</h2><p></p><p></p><p>在数字化转型和产业智能化升级的时代，传统的 CPU 算力已经不足以支撑智能化时代，这时以异构算力为主的智能算力走上了舞台中央。在算力和产业的相互促进之下，构建新型智能计算基础设施的必要性呼之欲出，为了建设 AI 原生的云计算基础设施，百度于去年推出了<a href=\"https://cloud.baidu.com/solution/ai-heterogeneus-computing-platform.html\">百度百舸·AI 异构计算平台</a>\"。今年又推出了百度百舸 2.0， 并在 AI 计算、AI 存储、AI 容器方面进行了重大升级：</p><p></p><p>在 AI 计算层面，构建了无损超高性能的网络架构；昆仑芯 2 代上云后提供了多元的 AI 算力，并且，与传统网络相比，弹性 RDMA 网络的通信时延降低了 2~3 倍；在 AI 存储层面，高性能存储 PFS 极速版的计算访问延迟低至百微秒，有效提升了小文件场景的访问效率；在 AI 容器层面，适配多元 AI 芯片，支持多元芯片统一；双引擎的虚拟化方案，还可以满足不同业务对强隔离和高性能的需求。</p><p>同时，百度百舸 2.0 还新增了 AI 加速套件，可以将 AI 计算对于数据的读取和查询性能提升 5 至 10 倍。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2c/2cd3a4e5dc477ea470cff9ab474129a6.jpeg\" /></p><p></p><p>此外，为了进一步提升 AI 应用和 AI 作业的效率，百度还宣布将 AI IaaS 层最核心的自研 AI 通用芯片——昆仑芯 2 代进行量产，并实现了大规模的商业化落地。百度内部已经将其部署在搜索、小度、自动驾驶、爱奇艺等业务，在外部，也已经在金融、工业等客户的业务中使用。</p><p></p><p>针对典型的 AI 场景，昆仑芯 2 代的性能相比 1 代提升了 2-3 倍；针对典型的 AI 负载，其平均加速是业界主流 GPU 的 1.5 倍。据了解，在工业质检场景中，用昆仑芯替代非国产芯片，成本降低了 65%，从性价比角度来看，其也已经优于优于国外同级别的高端芯片产品。</p><p></p><h2>AI PaaS：AI 中台 3.0、知识中台 3.0 以及文心行业大模型</h2><p></p><p></p><p>在降低人工智能技术的应用门槛层面，AI PaaS 层又提供了哪些支持呢？那就不得不提起 AI PaaS 层最核心的组成部分——飞桨深度学习框架。一方面，它解决了基础软件层的开发、训练、推理部署以及模型库、开发套件等问题，提供全生命周期的通用基础组件；另一方面，它还通过开源的方式，让开发者可以直接调用飞桨框架和飞桨开发平台的相关模块。</p><p></p><p>除此以外，百度智能云还进一步升级了对于行业应用更加适配的专业模型——文心产业级知识增强大模型系列，其已经可以适配交通、制造、能源、金融等多个行业需求，可以高效地支持 AI 的产业落地。</p><p></p><p>在飞桨深度学习框架和文心行业大模型的支撑下，AI PaaS 的整体能力得到了大幅提升：</p><p></p><p>具体来说，AI 中台 3.0 可自动化适配超过 1 万 6 千种网络和芯片组合，覆盖市场上大部分 AI 硬件；其次，AI 中台 3.0 还能够带来最高 8 倍的效率提升，模型迭代周期从 2 个月缩短到了 1 周；最后，AI 中台 3.0 全新发布的模型风险管理平台和 AI 工具集，还可以满足金融级安全审计的要求。</p><p></p><p>在最新发布的知识中台 3.0 中，能够将标注成本减少 30%-50%，并且在搜索、推荐场景中，模型落地和调优的开发周期可缩减一半；在智能文档分析领域，文档单据抽取场景只需原有不到 10% 的标注数据量，便能达到同样的效果。</p><p></p><p>总体来看，“云智一体 3.0”可以向上更新已有应用、孵化新应用，向下改造数字底座，使基础云更加适合 AI 应用。从重点行业核心场景切入的打法，也可以不断沉淀行业实践，支撑业务提效。看到这里想必也就不难理解，为何百度智能云有底气说自己是“适合跑 AI 的云”，也是“懂场景的云”。</p><p></p><h1>AI Cloud 将为行业应用带来哪些改变？</h1><p></p><p></p><p>基于 AI Cloud 全栈式端到端的基础设施，百度智能云发布了<a href=\"https://www.infoq.cn/article/psD4hJhDwFpOq07z5B9f\">智算中心</a>\" 1.0，以解决区域对于智能化的需求。在现有千卡并行环境下，百度智算中心加速比实现了 90%，并可以做到单机群万卡规模，完美支持大规模训练场景。在绿色低碳方面，百度拥有 600 多项自主研发的技术专利，PUE 可以低至 1.08，做到了低能耗、高性能运行。</p><p></p><p>在 AI Cloud 澎湃算力的支持下，百度智能云的行业应用也迎来了全新的升级迭代。在会上，沈抖正式发布了“开物 2.0”，新版本聚焦应用、平台、AI 核心三大升级，累积超过 200 个工业解决方案，沉淀了 3.8 万个工业模型，可以为汽车、电子制造、能源、水务等行业的核心场景提供全栈 AI 技术支持。</p><p></p><p>此外，基于过往百度智能云在汽车制造和智能驾驶行业的深厚积淀，百度智能云针对汽车行业推出了三朵云：</p><p></p><p>集团云：面向车企集团的数字化底座建设，覆盖整车的研发、生产、交付、营销等全部流程，让车企实现高效管理、产品优质、服务智能；网联云：为车企提供自动驾驶和智能座舱的云解决方案，在百度自动驾驶领域的经验加持下，可以帮助车企更好地运用数据，提升车机系统的智能化交互能力；供应链协同云：打通车企上下游配套企业的核心，为了解决汽车供应链长，管理难度大等问题，百度智能云可以通过订单协同、物流调度、质量追溯、库存优化等应用，打通车企和上下游合作伙伴的系统，保障产业链、供应链的安全问题。</p><p></p><p>在金融领域，百度智能云也提出了全新的产业金融方案：</p><p></p><p>第一，面向老年人等特殊群体的无障碍金融服务，结合当下新生的数字人、虚拟员工等技术，改善业务流程，提升老年人的服务体验；第二，利用大数据及 AI 技术，将环境效益测算、碳排放核算等关键环节自动化、智能化，助力绿色金融实现业务战略落地；第三，在农村农业金融方向，百度以数智创新手段解决农村金融发展痛点，解决三农金融服务的“普”和“惠”的问题；第四，以产业场景生态及大数据为锚点，提升金融服务中小微的业务效率与资源利用率，解决中小微企业融资难题。</p><p></p><p>为了进一步降低中小企业使用 AI 技术的门槛，百度智能云还推出了面向中小企业的数字化解决方案，提供存储、管理、加工、分享等服务，帮助中小企业实现数字化升级。</p><p></p><h1>写在最后</h1><p></p><p></p><p>如何才能让数智化技术与产业实际场景实现真正的融合？基于百度智能云最新发布的 8 项技术、产品和解决方案，我们能够感受到，答案其实就藏在“云智一体 3.0”的智能化闭环中。</p><p></p><p>无论是以昆仑芯为核心的软硬一体 AI IaaS，还是由飞桨深度学习框架、文心大模型等核心自研技术组成的 AI PaaS，AI Cloud 都汇聚了百度最核心的自研技术能力。此外，通过智算中心、开物 2.0、汽车云、九州区县大脑、产业金融、中小企业数字化解决方案等系列产品，也能帮助传统企业快速找到 AI 技术的真正价值。</p><p></p><p>用智能化解决产业重点场景核心需求”的旗帜已经高高扬起，我们有理由相信，伴随着“云智一体 3.0”的全新发布，产业智能化的发展趋向也将随之清晰。</p>",
    "publish_time": "2022-09-07 14:14:15",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "SRE运维思考与实践",
    "url": "https://www.infoq.cn/article/JQOWxupkqWgDyOJpQYEq",
    "summary": "<p>&nbsp;</p><p>作业帮业务大体可分为几种类型，有工具场景、电商场景、在线直播场景和智能硬件场景等。这些业务背后，服务数量已达数千级别，NS数量达上百级别，域名数量达数千级别，节点数量已经上万级别。此外，技术栈也遍地开花，语言多达近十种类，主流开发语言是 Go 和 PHP。在如此规模化的业务背后，有两大技术底座支撑：一个是以容器技术和服务治理为代表的云原生架构，另一个是以专线组网构建公有云多云多活的运维架构。</p><p><img src=\"https://static001.infoq.cn/resource/image/8e/9f/8e4f4f80dcb55781552184c7995c239f.png\" /></p><p></p><p></p><p></p><h2>团队分工</h2><p></p><p>&nbsp;</p><p>怎样高效运维这样量级的业务？我们可以先看下作业帮基础技术的团队分工。</p><p>&nbsp;</p><p>自底向上，团队按IaaS、PaaS、SaaS类型进行划分。最底层的IaaS主要负责向上提供计算、网络、存储等资源。中间的PaaS 切为三块：有以数据存储、消息队列等为主的中间件服务，有以容器技术和服务治理为主的云原生架构服务，还有以真合规为目标的安全服务。再往上就是业务应用，有流量、营销、直播、中台支撑等。</p><p>&nbsp;</p><p>这些不同分工背后，自然就衍生了不同的配套运维岗位，比如最底层的 IaaS 衍生了CloudOps、NetOps和FinOps，中间件服务衍生了MiddleOps，云原生架构衍生了InfOps，安全服务衍生了SecOps，业务应用衍生了SRE。</p><p><img src=\"https://static001.infoq.cn/resource/image/58/9b/583521886f5aea8106b0eb23ed7b0a9b.png\" /></p><p></p><p></p><h2>运维实践</h2><p></p><p>&nbsp;</p><p>谷歌把服务生命周期划分为五个阶段。它认为，从 Idea 确定那一刻，服务就诞生了，然后进行架构设计，接着进行开发，再灰度/全量放量，最后到该服务弃用，终结生命。转化到运维视角来看，在架构设计阶段就开始进行标准化建设，在开发阶段就开始进行服务准入，在放量阶段就开始进行持续交付和持续运营，最后就是服务下线。那么，再服务生命周期的这几个阶段中，我们是怎么介入运维的？</p><p><img src=\"https://static001.infoq.cn/resource/image/d4/a2/d460b02e79bd57aee5d5b7yy4056cda2.png\" /></p><p></p><p></p><h2>标准化建设</h2><p></p><p></p><p>关键思路表现为：</p><p>&nbsp;</p><p>规范前置。强制植入运维规范和架构规范，力求共性运维、架构归一、开箱即用，力求通过标准规范来挡住大面稳定性问题。</p><p>&nbsp;</p><p>架构重塑。践行云原生架构理念，以业务服务为中心，让业务聚焦价值、敏捷交付，通过容器技术磨平底层资源差异，通过服务治理磨平多云环境差异。</p><p>&nbsp;</p><p>关键实践表现为：</p><p>&nbsp;</p><p>偏向运维。服务归一，主要进行混部解除和域名拆分。</p><p>&nbsp;</p><p>虚机时代，为了提升资源利用率，大量服务混部在一起，这给运维带来灾难性的麻烦，比如混部态下，ODP服务间上线互相干扰，没法按服务维度精准封线和权限管控，也没法进行精准容量评估等。域名拆分则就是从www公共域名拆分出来，让每个业务拥有独立域名，方便南北向流量调度和容器化迁移。</p><p>&nbsp;</p><p>部署归一，主要定义部署环境规范，把发布环节分为Tips（预发）、Small（灰度）、Online（全流量）三个烟冲式生产环境，并要求它们代码同构、配置同构、路由同构和环境同构。若用CD平台部署，代码同构很容易搞定，配置同构则稍有复杂，我们借助服务发现特点，把配置异构细节隐藏到服务发现背后实现，让它对业务透明。</p><p>&nbsp;</p><p>网络归一，主要把专线接入点归一到IDC POP点，物理专线归一到传输专线，网络探测协议归一化到BFD协议，QoS控制归一化到CPE等。</p><p>&nbsp;</p><p>机型归一，主要收敛到主流通用机型，并借助容器部署磨平机型差异，同时不让SaaS业务触摸到机器，避免研发黑屏登机后不讲武德造成运维失控。</p><p>&nbsp;</p><p>偏向架构。</p><p>&nbsp;</p><p>服务发现归一，主要把东西向服务发现归一化到SVC，南北向服务发现归一化到DNS。早期服务发现使用BNS，后来演化到ZNS支持多云能力，它俩都属于大中心式架构，再后来演化到当前SVC模式，一改往日风格，从中心式架构模式转变到集群内自治的服务发现模式，避免云间互为影响。</p><p>&nbsp;</p><p>框架归一，主要收敛PHP框架到ODP，Go框架归一化到ZGIN框架。</p><p>&nbsp;</p><p>组件归一，就是自建关键组件服务，并让它们类型归一，比如去MemCache、去NMQ等。大数据组件采买云PaaS服务。通信归一，主要使用统一的标准通信协议，比如HTTP，TCP等，去业务自定义的协议。</p><p><img src=\"https://static001.infoq.cn/resource/image/27/87/27b8bfb3742c787ece2b5875ca5ce687.png\" /></p><p></p><p></p><h2>服务准入</h2><p></p><p>&nbsp;</p><p>服务准入阶段，主要思路是让业务做选择题，不要让他们做填空题，同时给业务灌输标准化理念：“只有按我们的套路来，才能享用开箱即用的配套运维服务。”</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/d8/fe/d86b52d0ae47b9e08fc2dbe83dbae9fe.png\" /></p><p></p><p></p><h2>持续交付</h2><p></p><p>&nbsp;</p><p>持续交付概念略做泛化，它覆盖到所有变更交付场景，包括业务变更和运维变更。主要思路：</p><p>&nbsp;</p><p>拥抱方法论。对于变更方向，业界方法论比较成熟，严格按照变更五条军规抄作业就可以。重构变更面。引入主责思路、划分工作边界、变革合作方式，把带有业务逻辑的变更下移到业务，把运维属性的变更上移到运维。交付平台化。运维变更也是引发故障的变量，变更方式上最好不要依赖人的专业性，而是通过平台沉淀军规/SOP，让SRE都可以低成本操作和互备。</p><p>&nbsp;</p><p>关键实践主要体现在业务更变和运维变更上。</p><p>&nbsp;</p><p>业务变更。关于代码变更，有敏捷发布和瀑布流发布模式，敏捷发布主要给ToC业务，瀑布流发布略偏传统，主要给ToB业务，它们往往需要攒一周的代码，然后集中一个时间窗口一次性发布，并喜欢在灰度环境观察一周，没问题后再放全量。关于配置发布，集成到CD流程，并从集中式配置推送，重构到按服务粒度进行推送。关于任务发布，引入审批环节，质量把关后再上线。数据存储变更主要通过DBA工单平台进行交付。运维变更。主要有机器交付、节点交付、域名交付、EIP/LB交付、路由交付、容量交付、作业交付、预案交付、迁移交付、组件交付和非标交付等。除了EIP/LB这种多云异构，以及非标交付外，我们基本都具备了工单平台交付能力，让业务提单，SRE聚焦审批把关。标准化建设之后变更质量大有好转，但微服务拆分后，运维需求频次也随之增涨，工单平台化有效提升运维交付效率，少数几个SRE就可以按住全业务的呼声。</p><p><img src=\"https://static001.infoq.cn/resource/image/c4/7b/c4a4b68d9cb74ff54b581be87acb527b.png\" /></p><p></p><h2>持续运营</h2><p></p><p>稳定性建设大体可分为业务质量、架构归一和运维管控三部曲，每个维度背后都有各自对应的若干服务。</p><p>&nbsp;</p><p>通常，业务若想更快迭代起来，需要对架构进行很好的服务治理。同时，业务若想更稳迭代起来，则需要运维进行优雅的管控，运维也要通过技术手段多盯架构，防止架构裂变造成稳定性问题。架构也需要多加考虑，怎样设计以及演进才不会导致运维失控。除此之外，不管是业务、运维，还是架构，若想要稳定性能力得到极致提升的话，背后都需要进行标准化建设。</p><p>&nbsp;</p><p>当然，这些还不够。从底层逻辑出发，让业务聚焦价值，我们还要变革全新合作方式。从运维角度看，把带有业务逻辑的事情下移到业务，比如配置发布、任务发布、接入层掺杂的业务逻辑下移等。从业务角度看，把非业务逻辑的事情左移到架构，比如服务发现、统一鉴权、流量调度等。从架构角度看，把ToC控制面上移到运维，比如容量管理、流量调度等，总不能让业务直接穿透运维管控直撸我们的容器吧。最后，这三者之外，还有一个威力巨大的组织建设，才能够确保刚才讲的事情良性运转起来。</p><p>&nbsp;</p><p>这就是作业帮三位一体的稳定性体系，如下图所示：</p><p><img src=\"https://static001.infoq.cn/resource/image/51/ed/516afc8abec0ff4b1549bd31ebd7daed.png\" /></p><p></p><p>磨合出以上体系之后，我们自然就产生这样的运营思路：</p><p>&nbsp;</p><p>强化主责意识，明确服务提供方责任主体，业务问题回归到业务，运维问题回归到运维，架构运维回归到架构，各找各妈，各回各家。强化平台理念，避免运动式重复人肉投入，注重沉淀可持续运营能力，我们认为平台是最能看懂和最易传承的方式。强化数据驱动，建立多维度运营平台，开放数据分析能力，将运营问题归属到责任方，并善用TC威力，驱动整个体系持续优化演进。</p><p></p><h4>多活架构</h4><p></p><p>多活架构建设，属于业界老话题，任意一个中大厂都会或深或浅地卷入其中。从业界来看，多活已有成熟方法论，但缺乏成熟的标准指导。很多人善于把多活架构从0到1建好，但往往运营不善，最终功亏一篑。这里主要从运营面，讲讲我们不一样的打法。</p><p>&nbsp;</p><p>固化运营能力，构建多活信息化平台。结合运营场景沉淀多维度运营数据，逐渐脱离人肉重复投入，让它具备可持续的运营价值，并安全ToC。健全跨云观测，深入业务。摸清业务代码和配置特点以及服务依赖行为，结合跨云专线CPE流量特点和内核eBPF的建连数据，建立跨云观测能力，感知跨云流量详情。云间常态断网，挺进无人区。强势落地多云间常态断网，力求从根上解决问题，防止非标问题新增或者多活架构裂变，并建立多云度量视角，约束架构行为，引导业务改造。独立视角验收，引入混沌工程思想，安全打破其爆炸半径规范之说，从线上进行全局单云故障注入演练，并且引入QA视角，让他们从用户角度客观验收多活能力。&nbsp;</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/82/1c/82dffd19f1d185c518a850d7cef9001c.png\" /></p><p></p><h4>预案平台</h4><p></p><p>&nbsp;</p><p>前面提到，标准化建设、服务准入、持续交付和多活架构，主要从故障预防层面，狠下功夫，多管齐下，力求延长MTBF时间来达到高稳定性诉求。若预防环节拦不住，接下来就要想尽办法缩短MTTR时间。</p><p>&nbsp;</p><p>有多活架构之后，怎样放大它的价值，预案就是最好的切入点。我见证过不少中大厂对预案的定义模糊不清，掺杂太多业务属性，最终运维都不敢操作，所以有必要对预案进行全新定义和重构。</p><p>&nbsp;</p><p>预案定义：预案是高度固化的复杂操作集合体，底层需要复杂技术支撑，最终需要抽象为一键盲切的能力。不要遇到故障的时候给操作人太多决策思考和使用成本，谁值班谁就有能力无脑操作。预案边界：预案最好不要带有业务逻辑，若有，就把它下移到业务层实现。预案稳定：预案属于强控制面，它的稳定性需要比业务的稳定性还要高，数据存储需要单元化多主部署，且不允许有循环依赖，尤其是入口账号体系的依赖。预案编排：预案不光是高度固化的复杂操作集合体，它也可以带有技术含量。我们引入编排思想，将原子预案编排为场景预案和全局预案，最后把业务预案、运维预案、自定义预案的差异磨平，一键操作。自定义预案是技术亮点，它把自定义的命令、脚本、或者其他复杂API调用沉淀到git仓库中，然后通过作业平台固化其操作方法，最后编排到场景预案进行打平，达到一键盲切效果。&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/86/ec/86ac9598616312dfyybd3cb76d597eec.png\" /></p><p></p><p></p><h4>流量调度</h4><p></p><p>运维聚焦在南北向全局的流量调度，架构聚焦在东西向长尾流量调度，业务聚焦在特征流量调度，比如按lesson进行分流。调度对象是域名，从公网入口开始调度，流量一旦进入本云之后，单云闭环，除底层数据存储之外，不允许有跨云流量请求。调度方式有两，一种是DOH按权重进行精准调度，另一种是DNS按解析线路进行非精准分流调度。</p><p><img src=\"https://static001.infoq.cn/resource/image/a4/f0/a4c7e2200592e98c56efac2819ac4df0.png\" /></p><p></p><h4>监控定位</h4><p></p><p>监控告警偏向上层运维，问题定位偏向服务可观测，怎么合二为一为我所用？</p><p>&nbsp;</p><p>建基础，按可观测三个黄金指标进行切入。标准化建设之初，约定日志规范，产出4个场景8类日志，固化到框架中。指标采集主要是基础指标、服务指标和业务指标。链路注册，主要在入口生成或者透传链路ID，在Mesh统一注册链路相关的信息，让业务低成本接入、开箱即用。搭中台，日志中心。我们摈弃传统ELK烧钱方案，而是根据日志场景写多读少的特点，巧妙地自建分块存储和冷热数据分离的多级数据存储方案，支撑业务半年以上优雅日志检索。链路追踪主要拥抱开源工具Jaeger。监控中台主要使用普鲁米修斯Victoria Metric方案，结合Grafana和OpenFalcon一起用。造场景。首先建立服务视角，让业务聚焦服务价值。其次，建立运维宏观定位和问题排查视角，上能宏观定位、下可微观排查。同时，几千个服务监控报警，若眉毛胡子一把抓就容易失焦，这时我们就要区别对待，联动服务等级元数据，以达到收敛监控和报警关注面。最后就是对它进行红绿灯建模打分，构建全局视角。</p><p>&nbsp;</p><p>产品形态如下图所示，第一个就是宏观定位大盘。从大盘飘红的地方，可以下钻到异常服务详情；从服务详情站位，可以快速下钻到Mesh入向调用详情、出向调用详情、以及失败链路调用详情，也可以横向钻到服务容量和变更事件等。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/48/fd/488747b4b0d4eb77f231c049cc2bb7fd.png\" /></p><p></p><p></p><h4>容量监控</h4><p></p><p>容量监控和业务监控思路类似。它覆盖到CPU&amp;GPU算力，容器宿主容量，云主机容量，子网IP容量，专线带宽容量，VPN容量等。</p><p><img src=\"https://static001.infoq.cn/resource/image/cf/e5/cf35c143cceb872bcfd3f2de45ee7be5.png\" /></p><p></p><h4>其他运营</h4><p></p><p>&nbsp;</p><p>报警层面，构建全局通用服务报警大盘，力求扮演好故障第一跳角色，同时把未恢复和近期报警做一个快捷查询，方便支撑全局决策。权限运营主要感知关键权限点的异动，防止因运维失控，造成越界授权和越界操作。变更管控主要围绕五条军规落地。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/1e/21/1eecf2a9c17f96b213f264a63f772c21.png\" /></p><p></p><p></p><h2>环境变化</h2><p></p><p></p><p>为何能在短时间建成这样体系和能力？主要有四大环境变化，它们互相关联，互相驱动。</p><p>&nbsp;</p><p>领域变化，当前云原生技术已经高度成熟，业界实践如火如荼。内部变化，技术团队务实，按照云原生理念进行架构重塑，屡试不爽。行业变化，互联网红利逐渐消退，也正因为这样，业务才有时间静下心来修炼内功。组织变化，强势老板带队，自上而下，由表及里，推崇技术信仰，践行主责文化。</p><p>&nbsp;</p><p>也正因为这四个变化，同时也给SRE带来前所未有的冲击，倒逼我们深度思考，转型探索。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/8c/c5/8cdc4ff27ace06da908253d6f7a60dc5.png\" /></p><p></p><p></p><h2>转型思考</h2><p></p><p></p><h4>岗位思考</h4><p></p><p>从团队分工可看出，每个运维角色背后都有自己的主营服务，唯独业务运维，它不是业务服务的提供方，而是依附业务，无限延伸和放大业务的价值。长期下去，容易演变为一个横向支持团队，大大弱化SRE方向的专业性。因此，运维服务化呼之欲出。</p><p>&nbsp;</p><p>再回归初心，看看SRE的内在定义，它是Site Reliability Engineering首字母缩写，最后一个单词强调工程化而非工程师，关键点在于用工程化的思路和方法来定义和重构运维，让运维更加自动化，更加服务化，而不是狠砸工程师原地重复挖坑。</p><p>&nbsp;</p><p>传统运维偏向被动执行，不出问题就好，作风求稳，重流程规范和SOP。云原生时代的运维，更强调构建业务数据度量业务风险，给出标准化解决方案建议，并主动作为，善于把流程规范和SOP固化到架构或者平台中去。</p><p>&nbsp;</p><p>最后要认清SRE的岗位职责，让业务高效迭代，让业务稳定运行。</p><p>&nbsp;</p><p></p><h4>能力探索</h4><p></p><p>&nbsp;</p><p>对岗位有全新的认知之后，再看看云原生时代，SRE需要具备什么样的能力模型。我觉得主要有四点：</p><p>&nbsp;</p><p>产品能力：特别强调一下，并不是让每个SRE都成为人人都是产品经理，而是有意识地把工作痛点转化为产品若干功能需求点，而不是坐地抱怨，因为SRE是距离线上环境和稳定性问题最近的团队。开发能力：SRE也是技术工种，显然需要开发能力。纯粹依靠DEV/架构不靠谱，远水救不了近火，缺乏开发能力，就不能把事情精细化地做好。若大家都做开发，那跟DEV有何区别？边界在于DEV搭中台，SRE依托中台建场景。运营能力：要求有意识地使用已有工具体系或者建设工具进行技术全方位运营，善用数据说话。拥抱开源：身处云原生时代，可能以上三个能力都具备之后，开源已经做得很完美了，这时候需要打开眼界，真心拥抱开源，融合开源产品，低成本应用到运维实践中。</p><p>&nbsp;</p><p></p><h4>方向探索</h4><p></p><p>&nbsp;</p><p>能力模型具备之后，如何在云原生时代中找到自己的方向呢，我认为有四个方向还可以大展拳脚。</p><p>&nbsp;</p><p>需求交付：可以建立统一运维需求交付面，弥补DevOps视角缺失，拉近SRE和业务距离，提升运维交付体验，让业务快速迭代。技术运营：充分发挥SRE岗位角色，健全业务全局视角能力。构建底层业务数据模型，掌握服务全生命周期元数据，在此基础上，结合运营标准规范沉淀运维场景和建立运营平台。稳定体系：持续健全稳定性机制，流程规范，故障全生命周期管理，沉淀和演进稳定性方法论，定义和重构稳定性完备的工具链体系。左移业务：运维左移，深入业务，抽象和沉淀其通用运维场景，并推进共性运维。一些好的AI能力，往往需要深度学习业务场景和行为特点。同时把规范前置到业务架构萌芽阶段等等。</p><p>&nbsp;</p><p></p><h2>未来展望</h2><p></p><p>&nbsp;</p><p>对于未来，我们主要有两点展望：第一是能力升级，第二是运维服务化。</p><p><img src=\"https://static001.infoq.cn/resource/image/e7/e2/e71f8d4a05ab7d44a03a19db409b44e2.png\" /></p><p></p><p>为了更加适应云原生时代，始终坚持和深化技术信仰，升级团队技术能力，通过技术手段成就业务。其次要深化运维服务化理念，运维的价值最终会体现到业务身上，但体现该价值最好的方式就是运维服务化，最大限度地给业务赋能。能力升级，就是为了更好地进行运维服务化。而运维服务化则打开了一扇窗，给SRE更多的成长空间，让他们能够升级迭代，就像太极理念一样，让这个团队生生不息。</p><p></p><p>作者介绍：</p><p>邓瑞龙，作业帮SRE负责人</p><p>聂安安，作业帮运维负责人</p>",
    "publish_time": "2022-09-07 18:12:01",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]