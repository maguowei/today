[
  {
    "title": "甲骨文推出新的Java SE通用订阅",
    "url": "https://www.infoq.cn/article/R4gOIJ1ILgX1KF8vU4Y2",
    "summary": "<p>甲骨文（Oracle）推出了新的Java SE<a href=\"https://www.oracle.com/us/corporate/pricing/price-lists/java-se-subscription-pricelist-5028356.pdf\">通用订阅和定价</a>\"，从2023年1月开始取代现在遗留的Java SE和Java SE桌面订阅。根据甲骨文发布的<a href=\"https://www.oracle.com/java/technologies/java-se-subscription-faq.html\">常见问题解答</a>\"，这一新变化将简化许可证环境的跟踪和管理，桌面、服务器和第三方云上通用。</p><p>&nbsp;</p><p>在过去的几年中，甲骨文已经多次更改其许可证和策略。2019年，甲骨文宣布Java SE将不再免费。2020年，甲骨文为JDK 17及后续版本推出了NFTC（免费条款和条件），允许在某些用例中免费使用。</p><p>&nbsp;</p><p>运行Oracle JDK 8和11的应用程序不需要更新，可以使用这些版本继续不间断地运行，无论是免费的个人使用还是付费更新。对于想要更新这些旧版本的用户来说，唯一的途径是在续订时选择最新的Java SE通用（Java SE Universa）订阅。</p><p>&nbsp;</p><p>使用最新LTS版本Java 17的开发人员可以继续使用Java 17的更新路径，直到下一个LTS版本Java 21，该版本计划于2023年9月发布。甲骨文于2021年9月15日发布了<a href=\"https://www.oracle.com/news/announcement/oracle-releases-java-17-2021-09-14/\">Java 17</a>\"。从那时起，已经进行了八次小版本更新。</p><p>&nbsp;</p><p>对于Java SE通用订阅，甲骨文还允许免费使用多达50000个处理器（甲骨文定义的处理器）。这主要适用于服务器部署。这只适用于新客户许可模式。甲骨文在定价文件中指出，任何超过该限额的客户都应联系甲骨文以获得特价。然而，这笔赠款是迈向简化的一步。</p><p>&nbsp;</p><p>这些新的变化解决了运行多个Java版本的任何组织在许可方面的复杂性。正如<a href=\"https://blogs.idc.com/2023/01/30/oracle-java-subscription-changes-what-is-the-impact-to-customers/\">IDC</a>\"和<a href=\"https://houseofbrick.com/\">House of Brick</a>\"首席执行官<a href=\"https://www.linkedin.com/in/nathanbiggs/\">Nathan Biggs</a>\"在<a href=\"https://houseofbrick.com/blog/oracle-java-pricing/\">这篇博客文章中</a>\"所解释的那样，在某些情况下，简化的成本可能高于以前的许可证模式。</p><p>&nbsp;</p><p>&nbsp;</p><p>虽然甲骨文的许可证更改可能是朝着简化OracleJDK许可证的方向迈出了一步，但商业替代方案确实存在。自Java 8以来，OpenJDK一直都是Java的上游社区。它包括许多供应商，他们与甲骨文一起致力于使Java成为一种支持数十亿设备并为全球数百万开发人员提供服务的企业语言。如今，OracleJDK和OpenJDK之间几乎没有技术上的差异。</p><p>&nbsp;</p><p>甲骨文许可政策的具体内容可能很复杂，而且可能会发生变化。客户应咨询甲骨文，以确定适合其特定需求的最佳许可选项。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/03/new-java-licensing-by-oracle/\">https://www.infoq.com/news/2023/03/new-java-licensing-by-oracle/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/NxuqQb5Xt6VaPu1mEWIG\">Oracle 将 GraalVM 贡献给 OpenJDK，以解决“采用障碍”</a>\"</p><p><a href=\"https://www.infoq.cn/article/2a4wyAUCqEjD2ilr0s41\">Oracle正式发布MySQL Heatwave on AWS</a>\"</p><p></p>",
    "publish_time": "2023-04-06 09:53:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "每分钟可处理8.14亿笔交易、腾讯云数据库TDSQL刷新TPC-C纪录对国产数据库行业意味着什么？",
    "url": "https://www.infoq.cn/article/IXyjIQka6rVgQxG3RTHP",
    "summary": "<p>3月30日，据数据库领域权威测评机构国际事务处理性能委员会（TPC，Transaction Processing Performance Council）官网披露，腾讯云数据库TDSQL顺利通过TPC-C基准测试，性能达到每分钟8.14亿笔交易（tpmC），打破世界纪录。这也标志着国产数据库TDSQL的分布式架构设计和资源调度能力，均达到了业界顶级水平。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/ec/ecde28bca26783ae2306956842ca85c6.png\" /></p><p></p><p>TPC-C被誉为数据库领域的“奥林匹克”。它是一个非常严苛的基准测试模型，考验完整的关系数据库系统全链路能力。因此，在TPC-C 的榜单前列，永远出现的只是那些在数据库领域有着几十年积累，从关系数据库理论开始发展就差不多同步出现的知名数据库厂商。</p><p>&nbsp;</p><p>TPC-C benchmark测试必须通过TPC组织的审计，通过审计的TPC-C结果，会有完整详实的测试报告公布在TPC官网上，包括测试厂家、数据库版本、详细的软硬件配置、测试过程等。</p><p>&nbsp;</p><p>往细了说，TPC-C是一种典型的在线交易处理 OLTP (On-Line Transaction Processing) 场景测试，考察数据库在高并发压力场景下的事务处理能力，最终的性能指标以tpmC（transaction per minute，也就是每分钟系统处理 TPC-C 模型中的 new order 事务的数量）和平均到每 tpmC 的系统成本作为衡量标准。</p><p>&nbsp;</p><p>在 OLTP 场景中，每个请求的响应时间都是极短的。因此，在进行TPC-C测试中，各个数据库厂商都会尽一切可能将每一个操作时间压缩到最短，毫不夸张的说，在 TPC-C 测试中，一些关键操作的优化往往需要细化到CPU指令级别。</p><p>&nbsp;</p><p>在此次TPC-C的打榜中，TDSQL成功抗住了每分钟8.14亿笔交易（tpmC），成本仅为同类数据库的1/3。在测试期间，TDSQL保持了持续稳定运行这一超大规模集群，实现8小时无抖动，保障了超过8600亿总事务、4万亿条订单详细信息的零错误。</p><p>&nbsp;</p><p>在进行如此严苛的TPC-C测试时，最具挑战性的技术环节是什么？腾讯云数据库TDSQL是如何克服种种技术挑战的？他们又为何选在这样的时间点来测试？测试中TDSQL成功完成每分钟8.14亿笔交易、单节点最高支持180万QPS（每秒请求量）、超高压下稳定运行8小时波动率一直维持在0.2%以内，这一系列数据背后的真正含义是什么？腾讯云数据库此次在TPC-C测试中取得的成绩，对于国产数据库产业来说意味着什么......</p><p>&nbsp;</p><p>在3月30日，腾讯云召开的媒体会上，腾讯云数据库技术负责人潘安群和腾讯云数据库总经理王义成接受了 InfoQ 在内的多家媒体采访。以下为采访实录，经编辑。</p><p>&nbsp;</p><p></p><h2>腾讯云TDSQL刷榜TPC-C背后的故事</h2><p></p><p>&nbsp;</p><p>问：腾讯云TDSQL为什么选择在这样的时间点打榜？这背后有着怎样的故事？打榜过程中的技术难点有哪些？</p><p>&nbsp;</p><p>潘安群：本次打榜不是我们的核心目的，而是我们对TDSQL产品能力和过去15年在数据库发展过程中的阶段性总结。目前，TDSQL在应用场景上已经有了非常深厚的技术积累，产品能力和性能都达到了阶段性突破，并在一些大型银行核心系统中稳定运行。基于此，今年TDSQL团队花费了两个月的时间去参加打榜，期望借助权威的TPC-C测试审计对产品做一次全面的验证。</p><p></p><p>早在两年前，我们还在为大型银行的投产和服务好大量客户做攻坚，加上腾讯的做事风格一向是只要客户有需求，我们就要优先保障和解决问题，而不是急于证明自己。如今，我们产品能力已经到达了一定阶段，我们认为是时候可以证明自己的实力了，于是我们选择了这个时间点参加打榜。</p><p>&nbsp;</p><p>TPC本身是一个非赢利性组织，制定了一系列对于数据库评测的标准和规范，TPC-C是在OLTP数据库里唯一的国际权威榜单，主要是考察系统的吞吐量、响应时延、并发性能以及成本，核心指标就是两个：</p><p>&nbsp;</p><p>1、 tpmC。每分钟的处理事务数（每分钟新订单数量），这次TDSQL的结果是8.14亿tpmC。</p><p>2、 性价比。为防止通过堆硬件获得高tpmC，测试标准要求考虑性价比，客户如果买下一套一模一样的系统，使用三年，最后的总成本除以tpmC获得的单位成本价，即为性价比。最终，我们的单价（price/tpmC）是1.27人民币。</p><p>&nbsp;</p><p>tpmC的全量测试包含四个部分：</p><p>1、 8小时全压力测试。也就是8小时内每分钟保持8.14亿的交易数，并且要求稳定状态下，期间不能有任何故障和错误，还需要关注平均交易时延，我们认为这个是难度最大的测试。</p><p>2、 故障容灾测试。当出现机器故障的情况下数据能否保持一致性，会不会丢数据，这是第二个很重要的测试，整个测试中审计员会全程陪同，这个对系统的高可用要求较高，难度次之。</p><p>3、 数据库ACID测试。包括对数据库的各种一致性、隔离级别、原子性进行测试，这些是对数据库基础能力的验证。</p><p>4、 50%和80%的压力测试。这里主要是验证50%压力和80%压力下，系统表现。</p><p>&nbsp;</p><p>本次打榜，我们有四个核心亮点：</p><p>1、tpmC成绩刷新世界纪录。性能达到每分钟8.14亿笔交易（tpmC），平均时延和90分位时延领先其他厂商。</p><p>2、显著的成本优势。我们通过软件本身优化把单位成本里硬件部分的价格降低。并使用了公有云弹性的资源方式，以及在公有云上整个系统自动化和规模化的运营加持下，降低了服务成本价格，使得单tpmC的价格接近同类产品的1/3。</p><p>3、超大规模集群，性能稳定性最佳。超大规模集群下，系统保持运行8-10个小时以上，且达到系统稳定性的最佳。tpmC的标准是在8小时持续压测中，tpmC的波动率要在2%以内。在实际测试中，我们的波动率一直维持在了0.2%以内，这也充分体现了TDSQL在产品架构、分布式能力、水平扩展、以及资源调度方面已经处于业界最佳水平。</p><p>4、超大规模集群，卓越的高可用和分布式容灾能力<a href=\"https://www.infoq.cn/article/IXyjIQka6rVgQxG3RTHP#_msocom_1\">[j1]</a>\"&nbsp;。这里重点考察的是故障处理能力。审计员随机选择机器来做故障模拟，审计员随机指定2台物理机IP，机房同事随后在现场拔掉对应机器电源，观察系统在无任何人工干预下请求量多久能完全恢复正常。从实际测试结果来看，TDSQL在18秒就完成主备切换，对于大盘整体影响微乎其微，事后进行事务数据校验，一笔不差不错。</p><p>&nbsp;</p><p>以上提及的这些为什么成为亮点，其实是有很多技术方面的挑战，比如：</p><p>1、要保持平稳型，不要抖动。</p><p>2、单机性能要求非常高，我们需要支持超大的规模集群，并且单节点做到180万的QPS，不能有毛刺，不能时快时慢。</p><p>3、此次构建的是更大的分布式实例，这在过往我们所服务过的客户里是没有出现过的。</p><p>4、在高压力的情况下，每分钟需要处理8.14亿笔交易，还需要进行各种故障模拟来测试系统的表现是否正常，这是一个非常大的挑战。</p><p>5、为了满足测试审计的要求，我们确保磁盘空间至少能支持每天至少满负载8个小时，持续60天。</p><p>&nbsp;</p><p>问：此次TDSQL创造的纪录是每分钟8.14亿的交易量，这个成绩大概属于什么水平？</p><p>&nbsp;</p><p>潘安群：8.14亿这个数据相当于全国8.14亿的人，每个人每分钟下一个单，持续8个小时，在这种情况下要求系统不抖动，其实是很复杂的。比如对标春晚抢红包，前几分钟的峰值就很不好处理，所以我们要做到这样的成绩其实是并不容易。</p><p>&nbsp;</p><p>王义成：我来补充下8.14亿笔交易到底代表什么，在我们看来，这个性能数据足以满足今天所有国产数据库核心厂商想要替换的性能要求。打个比方来说，今天银行业务系统峰值可能就是20亿笔的交易（全天），可能就已经到了银行金融等级的要求了，20亿笔的峰值可能是在4-5个小时内完成，每分钟处理的交易量远远低于8.14亿，也就是说，从性能角度上来看，TDSQL足以替支撑今天中国所有依赖于数据库系统的核心应用。</p><p>&nbsp;</p><p>问：TPC组织2007年时还对数据库测试提了一个新标准，按照美国证券交易所的场景去提供这样一个测试场景，TPC-E，提出这个标准之后，不管是Oracle还是IBM，好像都没有按照TPC-E做测试，这个标准后来就一直这样摆在那，您能聊一聊为什么各个数据库厂商没有按照TPC-E进行自己的性能测试？而是按照过去TPC-C的标准测？</p><p>&nbsp;</p><p>潘安群：TPC-C是非常好的交易场景，它是非常有代表性的测试。TPC-E后续并没有流行起来，有测试方案本身原因，也有厂商没有选择的原因。</p><p>&nbsp;</p><p>问：但毕竟国内数据库厂商主要服务的行业是金融企业，按理来说TPC-E标准更符合目前我们服务的客户类型？为什么国外厂商没有再打榜了？</p><p>&nbsp;</p><p>潘安群：TPC-E的测试跟银行场景不完全相同，现在整个银行的IT架构也不像原来基于集中式的那套架构，而是开始往分布式架构演进。另外，现在厂商再想来刷新TPC-C榜单，其实成本方面的问题也比较难解决，所以国外没有打榜主要是基于这些综合因素所致。</p><p>&nbsp;</p><p>王义成：TPC-C榜单的意义在于，如果其他厂商愿意“卷起来”争相去打榜，这里也是一个相对公平的环境。我们关注总榜的情况下还是要看单位成本，8.14亿的这个性能指标足以支撑全国所有核心系统的性能要求。正如潘安群提到的，迟早有一天这个榜单的成绩会被人超过，但我相信1.27元单位成本的投入，从性价比和性能总数的角度下做对比，它本身是相对有难度的，这依赖于云的扩展性、依赖于软件集合，包括我们全栈的技术能力以及成本。</p><p>&nbsp;</p><p>问：TDSQL发展至今，已经到了大规模复制阶段了吗？</p><p>&nbsp;</p><p>王义成：从去年年底开始，TDSQL在金融行业已经步入到规模复制的阶段了。目前，TDSQL服务了国内排行前十的银行中的七家，助力20余家金融机构完成了核心系统替换。</p><p>&nbsp;</p><p>我们要在兼容性、产品综合能力、精细化管控、精细化运营、整体升级方案等方面进行大规模的工程质量打磨。但在能源等其他领域，我们还要先拿下一些标杆项目。打标杆相对不容易，但我觉得打标杆相比复制还是复杂一点，打标杆今天可以投20人、30人“死磕”到底，但真正到了大规模全面复制阶段就要拼谁的业务质量更高，谁的效率更高。在今年下半年，我们已经开始大量投入到关于精细化运营质量的打磨和升级方案，以提高交互方案的标准。我们已经进入到了全面复制产品的夯实和打磨过程中，初步在金融行业中起到了复制效果。与此同时，在能源、交通等行业中，我们正在做标杆案例的突破。</p><p></p><h2>国产数据库正在变道超车</h2><p></p><p>在TDSQL之前，国内银行的核心系统被传统厂商垄断。TDSQL深入金融核心之后，微众银行是第一家采用国产分布式数据库的互联网银行，张家港农商行则是第一家全部投产国产分布式数据库的国内传统银行，平安银行信用卡是国内首个从大型机直接下移到分布式架构的银行产品，之后越来越多的国内银行开始将银行系统迁移到分布式数据库上。</p><p>&nbsp;</p><p>据统计，腾讯云分布式数据库TDSQL已服务过半国内TOP 20银行，TOP10银行中服务了七家，客户包括平安银行、华夏银行等。以TDSQL为代表的国产分布式数据库在越来越多的金融核心场景中替代传统集中式数据库，体现了中国数据库在分布式架构这个新赛道上变道超车的优势。</p><p>&nbsp;</p><p>当前，在TPC-C排行榜上，前三名都是中国数据库厂商，而传统集中式数据库厂商在2013年以后就已经停止参加TPC-C打榜，其根本的原因在于分布式数据库所能达到的0.6亿tpmC（2019年，OceanBase），已经远远超过了集中式数据库的性能上限，而互联网、物联网和车联网等数字商业模式，正在重塑金融等传统业务，也对数据库提出了更高的要求。</p><p>&nbsp;</p><p>问：从榜单上来看，TDSQL已经把国外厂商甩在后面了，但现在我们国产数据库相比于这些国外厂商还有哪些不足之处？</p><p>&nbsp;</p><p>潘安群：尽管我们在数据库的核心能力、数据的一致性、可用性等方面领先于国外厂商，但就整个生态的完善度而言，我们与国外厂商相比仍存在差距。毕竟，这些国外数据库巨头们已经在数据库领域深耕了几十年，持续在各种用户场景下不断打磨和优化性能，他们的兼容性和生态要更完善。</p><p>&nbsp;</p><p>在接下来规模化复制中，我们需要在生态上重点发力。比如我们需要实现Oracle的兼容性，使客户可以轻松使用国产数据库，就像用Oracle一样顺滑，这也将提升我们在不同复杂情况下解决同一系统问题的能力。此外，我们还需要基于整个SaaS化和智能化运营平台，让客户非常清晰地了解如何快速解决问题，让客户放心地用起来，这是我们下一阶段要重点解决的问题。</p><p>&nbsp;</p><p>腾讯副总裁蒋杰也曾在一次采访中表示：“我们认为，做国产数据库不仅要坚持长期投入，而且不能闭门造车，发展到一定阶段后，必须要去打一次榜。过去，腾讯云数据库在应用场景上已经有很扎实的技术积累，挑战构建更大的分布式集群，能够提前发现并攻克很多未来可能遇到的技术难题，也是对产品能力更全面的验证。”</p><p>&nbsp;</p><p>整体来说，腾讯云TDSQL成功打榜TPC-C是中国数据库的又一里程碑，也是全球分布式数据库的一个里程碑。腾讯云数据库TDSQL的成功，充分证明了公有云分布式数据库承载金融核心场景的能力，也证明了中国能够打造优秀数据库产品、实现变道超车的能力。正如中国人民大学教授杜小勇针对本次测试结果所表示：“TDSQL在TPC-C榜单上的突破，标志着国产数据库核心能力的快速发展和日趋成熟，给国产数据库的研发增强了信心，也给国产数据库的使用者增强了信心。国产数据库只有持续在各种各样的应用场景下去打磨，才能不断取得技术的突破，打造一款真正的好产品，相信国产数据库产品和技术都会越来越好！”</p><p></p>",
    "publish_time": "2023-04-06 14:39:38",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Sentry的前端测试实践：从Enzyme迁移到RTL",
    "url": "https://www.infoq.cn/article/9qOQdTtzr76sYE86Mmo8",
    "summary": "<p>在Sentry，我们采用了持续交付实践，也就是说，代码一旦被合并到主分支就可以立即发布。我们因此能够快速地迭代产品，尽可能频繁地在生产环境中提供新功能、进行错误修复、配置变更和实验。我们每月合并超过700个PR。自动化测试——特别是我们大型的React代码库自动化测试——是我们CI/CD流程的重要组成部分，确保我们的产品可以按照预期运行。</p><p>&nbsp;</p><p>在这篇文章中，我们将讨论如何将我们的组件测试从Enzyme迁移到React Testing Library（RTL）。这项工作花费了一年零四个月的时间，有17名工程师参与，涉及803个测试套件和4937个测试，其中每一个测试都需要做出修改。</p><p>&nbsp;</p><p></p><h2>什么是RTL</h2><p></p><p>&nbsp;</p><p>React Testing Library（RTL）是一个React组件测试库，它通过与DOM交互来测试组件，不像Enzyme那样直接使用了React内部的东西。RTL是目前测试React组件最流行的方案，但Sentry在RTL出现之前就已经在使用React了。</p><p>&nbsp;</p><p></p><h2>故事开始</h2><p></p><p>&nbsp;</p><p>我们希望使用最新的现代化工具和实践，但不会因为它们是新的就一把梭哈。我们会仔细评估新技术，了解它们将给我们带来什么好处。当时我们已经知道有RTL了，但并没有强烈的理由要将它引入到我们的代码库中。我们用来测试组件库的Enzyme可以满足我们的需求。</p><p>&nbsp;</p><p>2020年，一些之前使用过RTL的工程师加入了Sentry。基于他们使用RTL库的经验，他们向我们的前端技术指导委员会（Frontend TSC）提出了将RTL引入到我们的代码库中的建议。Frontend TSC致力于Sentry的JavaScript代码库开发工作，他们每两周开会一次，为公司整体的前端开发团队讨论和总结最佳开发实践。</p><p>&nbsp;</p><p>当时，我们已经在大规模地向TypeScript迁移，虽然迁移到RTL的想法听起来不错，而且我们也知道Airbnb已经将Enzyme的所有权转到了GitHub，并且现在也在使用RTL，但我们还没有为新的迁移做好准备。尽管如此，我们还是希望对此做一些概念验证（PoC），比较一下RTL和Enzyme，并评估迁移将给我们带来哪些好处。我们对性能提升这一块特别感兴趣，因为我们当时的测试执行得非常慢。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/40/403efe4171f06a66d3c955295b9602b7.png\" /></p><p></p><p>&nbsp;执行Enzyme测试通常需要很长时间，特别是如果你忘记在测试案例之间进行手动清理。上图是对单个组件的Jest测试结果。由于每个测试案例执行后缺少清理操作，每个测试的执行时间都会变长。</p><p>&nbsp;</p><p>我们进行了PoC，证明使用RTL会让测试执行稍微快一些。然而，12%左右的性能提升还不足以说服我们从Enzyme迁移到RTL。但通过这个PoC，我们注意到与RTL相比，Enzyme有许多缺点，因为很多Enzyme测试没有测试可访问性，没有自动清理测试环境，并且经常直接访问组件状态。很快，我们发现在Enzyme中无法使用React Hooks。</p><p>&nbsp;</p><p></p><h2>React 17 迫使我们采取行动</h2><p></p><p>&nbsp;</p><p>快进到2021年4月，TypeScript迁移终于完成了。在我们的TSC会议上，团队成员经常会提到RTL。通常，当有人需要修改组件的内部状态或样式，并发现还需要更新Enzyme测试（特别是快照）时，就会提到RTL。这非常烦人，而且没有任何意义，因为这些变化不会影响用户在屏幕上看到的内容。</p><p>&nbsp;</p><p>虽然优化开发工作流是迁移RTL的一个很好的理由，但在将React更新到17版本之前，我们仍然没有太多地关注这件事情。React核心团队完全重写了React的内部，而Enzyme直接使用了许多React内部的东西。</p><p>&nbsp;</p><p>React 17带来的最大的内部改进之一是新的JSX转换。在React 17之前，你编写的JSX代码被转换成React.createElement调用。例如：</p><p>&nbsp;</p><p><code lang=\"null\">import React from 'react'\n\n\nexport function App() {\n   return </code></p><h1><code lang=\"null\">Hello World</code></h1><code lang=\"null\">\n}</code><p></p><p>&nbsp;</p><p>被转换成：</p><p>&nbsp;</p><p><code lang=\"null\">import React from 'react'\n\n\nexport function App() {\n  return React.createElement('h1', null, 'Hello World')\n}</code></p><p>&nbsp;</p><p>从React 17开始，你不再需要import React from 'react'了。React包增加了两个新的入口点，这两个入口点原本仅供Babel或TypeScript等编译器使用。因此，对于上面的JSX代码，输出会略有不同：</p><p>&nbsp;</p><p><code lang=\"null\">import { jsx as _jsx } from 'react/jsx-runtime'\n\n\nexport function App() {\n  return _jsx('h1', { children: 'Hello world' })\n}</code></p><p>&nbsp;</p><p>所以你只需要在JSX组件中这样写：</p><p>&nbsp;</p><p><code lang=\"null\">export function App() {\n   return </code></p><h1><code lang=\"null\">Hello World</code></h1><code lang=\"null\">\n}</code><p></p><p>&nbsp;</p><p>Enzyme无法百分之百与这个新版本的React协调，不过市面上出现了一个适配器可以解决这个问题，也就是我们在用的。然而，从长远来看，这个解决方案也不行，因为React 18会进行全面重写，而且考虑到Airbnb已经放弃对Enzyme的支持，这个解决方案是不会长久的。</p><p>&nbsp;</p><p>从Enzyme迁移到RTL的好处现在更明了了：</p><p>&nbsp;</p><p>Enzyme没有支持React 18的计划。RTL不依赖React内部的东西，并将继续支持React 18，就像它支持React 16和和React 17一样。（注意：虽然有一个<a href=\"https://www.npmjs.com/package/@cfaester/enzyme-adapter-react-18\">非官方的React 18适配器</a>\"，但它并没有全面支持）。Enzyme只为测试React Hooks提供基本的支持。我们将不再需要使用<a href=\"https://github.com/getsentry/sentry/blob/270b3644b36fa8b68cb004521a021758ce1c29be/tests/js/setup.js#L27-L35\">适配器</a>\"来测试React。RTL提供的基于角色的选择器可以更好地进行可访问性测试。RTL不存在我们在使用Enzyme时遇到的一些陷阱，比如在测试案例之间不清理组件（速度慢）和直接修改组件状态（糟糕的测试实践）。RTL现在是在npm平台上测试React组件更受欢迎的选择，可能是因为Enzyme不直接支持最新版本的React。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/18/18e7204c1331aa23d756a76bd5bfa4e5.png\" /></p><p></p><p>npm上下载RTL和Enzyme的时间轴变化，RTL在2020年中超过了Enzyme</p><p>&nbsp;</p><p></p><h2>评估迁移时间</h2><p></p><p>&nbsp;</p><p>在2021年，我们已经承诺从Enzyme迁移到RTL，并制定了一个已达成一致的策略来完成这项工作。我们想要知道实际需要做多少工作。是几周，一个月，还是一年？我们需要把这一辈子都花在转换这些文件上吗？我们需要了解这实际上将涉及多大的工作量，以便与我们的主要职责——Sentry的开发做出协调。</p><p>&nbsp;</p><p>对于这项工作，我们进行了几种评估，其中一个是“文件数量”评估，包含三个预测，第一个不太乐观，最后一个非常激进。我们的平均预测是每周8个文件，这是最准确的估计。这样一来，完工日期将在2022年底到2023年春季之间。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/4e/4ef8df10eefd1bd8c8218abafa4052f7.png\" /></p><p></p><p>每周迁移8个文件</p><p>&nbsp;</p><p></p><h2>我们的迁移计划</h2><p></p><p>&nbsp;</p><p>我们刚刚成功地将Sentry的整个JavaScript代码库迁移到了TypeScript。对于RTL迁移，我们决定采用类似的方法。</p><p>&nbsp;</p><p>1.准备工作</p><p>&nbsp;</p><p>我们为开发人员提供了RTL入门所必需的东西，并创建了一些通用的数据提供者，将测试元素与我们所需的React上下文和Emotion CSS主题提供者包装在一起。</p><p>&nbsp;</p><p>2.教人们如何使用RTL</p><p>&nbsp;</p><p>在这个过渡时期，许多开发人员没有使用RTL编写测试的经验，所以我们提出了组织虚拟会议的想法，把大家聚在一起，尝试转换一些测试案例。这种方式非常有效，人们像发现新大陆一样兴奋，学习到了很多东西。这可能是我们作为一个团队一起做的最酷的事情之一。</p><p>&nbsp;</p><p>此外，受RTL作者Kent C. Dodds所写的文章“<a href=\"https://kentcdodds.com/blog/common-mistakes-with-react-testing-library\">使用RTL时要避免的常见错误</a>\"”的启发，我们写了一个类似的最佳实践文档，可以持续记录我们试图遵循的最佳实践。</p><p>&nbsp;</p><p>前端TSC成员还留出时间进行每日代码评审，这对于帮助那些希望按照最佳实践学习如何使用RTL的人来说是至关重要的。</p><p>&nbsp;</p><p>3.用RTL编写所有新代码</p><p>&nbsp;</p><p>在这个阶段，我们需要使用RTL编写所有的新测试。如果人们仍然用旧的风格编写测试，那就永远无法完成迁移。与之前的迁移一样，我们没有使用任何可以阻止人们用Enzyme编写新测试的工具。但是，我们确实做了一件事，就是在Enzyme函数和导入语句上使用了JSDoc的@deprecated标签，这样开发人员就会意识到不应该再使用它们了。</p><p>&nbsp;</p><p>4.迭代转换旧代码</p><p>&nbsp;</p><p>除了使用RTL编写新的测试，我们还有一定数量的文件需要转换，所以我们需要投入一些时间。我们还鼓励开发人员尽可能地参与文件转换，并在sprint中计划安排转换任务。</p><p>&nbsp;</p><p></p><h2>不可预见的挑战</h2><p></p><p>&nbsp;</p><p>在我们适应了RTL的思维模式后，在编写测试时一切都变得更有效率了。这个库提供的工具也很容易使用，但还是存在一些不可预见的挑战。</p><p>&nbsp;</p><p>1.在大型组件上使用getByRole时性能较差</p><p>&nbsp;</p><p>根据RTL的指南，测试应该像用户与组件交互的方式一样。基于这一原则，RTL提供了谁都可以使用的查询和可以帮助我们以更容易访问的方式测试组件的语义查询。</p><p>&nbsp;</p><p>其中的一个查询是getByRole，用于查询可访问性树中公开的所有元素，根据RTL的指南，这个查询应该是我们的首选项。</p><p>&nbsp;</p><p>尽管getByRole很有用，但我们发现这个查询的性能非常差。</p><p>&nbsp;</p><p>使用getByRole选择器的大型组件可能会比较慢，我们的一个解决方法是避免多次调用这个查询，将它保存到一个变量中，或者切换使用getByText或getByTestId。</p><p>&nbsp;</p><p>2.在使用userEvent.type测试浏览器交互模拟时性能较差</p><p>&nbsp;</p><p>根据RTL作者Kent C. Dodds的说法，我们应该使用userEvent而不是fireEvent，并肯定userEvent更好，因为它提供了几个更接近浏览器交互的方法。</p><p>&nbsp;</p><p>我们赞同Kent的建议，即触发事件和接近真实的用户体验会让测试变得更健壮。但是，在使用userEvent.type修改了一些测试后，我们发现一些测试执行超时，因为Jest的最长执行时间是5秒。</p><p>&nbsp;</p><p>这是因为userEvent.type会模拟用户输入每一个字符时触发的每一个事件。虽然这是对的，也是我们想要的，但由于存在性能问题，我们已经在许多测试中将其替换为userEvent.paste，并在一些地方使用fireEvent。</p><p>&nbsp;</p><p>3.在有很多样式化组件时使用userEvent.click性能较差</p><p>&nbsp;</p><p>当userEvent.click被调用时，它使用getComputedStyle函数来确定被点击的元素是否可见以及指针事件不会禁用组件。JSDOM实现了一个类似于在浏览器中运行的版本，但它会解析组件树中所有的样式化组件，直到被点击的元素。</p><p>&nbsp;</p><p>如果元素嵌套很深，并且测试中包含了许多点击，可能会花费大量的时间重新计算样式。我们基于<a href=\"https://github.com/jsdom/jsdom/issues/3234\">这个jsdom问题</a>\"中提到的解决方案模拟了window.getComputedStyle。我们通过这种方式用测试安全性换取了更好的性能。一个非常慢的测试从94.93秒下降到了47.52秒，这个测试涉及了多次单击、大量样式化组件和react-select（也使用getComputedStyle放置下拉列表）。</p><p>&nbsp;</p><p>4.元素ARIA角色的缺失迫使我们在可访问性方面下了很多功夫</p><p>&nbsp;</p><p>我们的许多组件都没有合适的ARIA角色，我们不得不更新组件，以便像RTL建议的那样可以通过语义查询来选择它们。但是，有时候，我们不使用ARIA角色更新已弃用的组件，而是通过添加测试ID来更快地选择它们。</p><p>&nbsp;</p><p>还有一些ARIA属性我们不是很熟悉，导致有时候我们会做出一些错误的假设，没有在元素上使用理想的ARIA标签，或者在引入它们时破坏了其他测试。</p><p>&nbsp;</p><p>我们通过代码评审识别并修复了其中的许多问题。</p><p>&nbsp;</p><p>5.转换重度测试组件内部的Enzyme测试案例</p><p>&nbsp;</p><p>我们的一些测试会检查组件的状态，例如，如果加载状态被设置为true，并且没有反映在DOM中，就不可能在不更新前端代码的情况下将这些逻辑转换为RTL。</p><p>&nbsp;</p><p>如果遇到这种情况，一些文件的转换就变得不那么简单了。但从另一个方面看，它帮助我们改善了用户体验，在UI上为我们提供了更多的反馈。</p><p>&nbsp;</p><p>还有许多测试没有存在的意义，例如，一些事件图测试，所以我们决定将它们移除。</p><p>&nbsp;</p><p></p><h2>保持动力</h2><p></p><p>&nbsp;</p><p>因为有了之前的TypeScript迁移，我们也创建了一个Slack机器人（<a href=\"https://gist.github.com/priscilawebdev/0d20eb221c26de1078a8cc5350fbaae5\">源代码</a>\"），当它被激活时，它会告诉我们当前的迁移进度和剩余需要转换的文件数量。在转换的最后阶段，看到进度百分比每天都在上升对我们的团队来说是一个巨大的动力。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2c/2c01990c544eab4c308551be65632083.png\" /></p><p></p><p>Slack机器人用来跟踪从Enzyme到RTL的迁移进度</p><p>&nbsp;</p><p>迁移结束时恰逢我们新财年的开始，因此许多开发人员放慢了转换文件的速度，优先考虑产品功能和季度计划。尽管每天只转换几个文件，我们仍然在不断取得进展，慢慢向目标靠近。</p><p>&nbsp;</p><p>当我们进入最后阶段，眼看就要结束时，所有人又开始变得超级兴奋。</p><p>&nbsp;</p><p>你可能还记得我们之前预测这将需要1年零2个月时间。到项目结束时，我们并没有偏离很多：在1年零4个月之后，我们使用RTL完成了644个文件转换，完成了我们的目标。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/c9/c91fbde7127e909aee4a3be4733f1ddc.png\" /></p><p></p><p>实际的迁移时间线</p><p>&nbsp;</p><p></p><h2>往后，TypeScript无处不在</h2><p></p><p>&nbsp;</p><p>在迁移过程中，一些工程师将测试转换进一步推进，同时将测试转换为TypeScript。TypeScript与编辑器（如VS Code）的语言服务器特性相结合，在添加代码时不断地提供实时提示，这有助于识别出传给组件的不必要或不正确的props，并让用户体验变得更好。</p><p>&nbsp;</p><p>迁移到RTL和TypeScript之前：</p><p>&nbsp;</p><p><code lang=\"null\">it('renders', function () {\n    const wrapper = mountWithTheme(\n      \n    );\n    expect(wrapper).toSnapshot();\n  });</code></p><p>&nbsp;</p><p>迁移到RTL和TypeScript之后：</p><p>&nbsp;</p><p><code lang=\"null\">it('renders', function () {\n    const {container} = render(\n      \n    );\n    expect(container).toSnapshot();\n  });</code></p><p>&nbsp;</p><p>在迁移过程中，我们还遇到了一个由一个新转换的RTL测试引起的错误，如果文件是用TypeScript编写的，这个错误是可以避免的。</p><p>&nbsp;</p><p>因为对前端测试进行类型化对我们来说非常有好处，所以我们打算制定一个计划，将它们全部转换为TypeScript。</p><p>&nbsp;</p><p></p><h2>总结</h2><p></p><p>&nbsp;</p><p>我们很高兴看到我们所有的前端测试都迁移到了RTL！</p><p>&nbsp;</p><p>尽管测试的执行性能并没有像我们所希望的那样得到大幅改善，但是RTL的引入为我们带来了许多其他好处，例如不再依赖于实现细节，而是尽可能多地测试用户看到和交互的内容，这些才是最重要的。</p><p>&nbsp;</p><p>除了对测试的正确性充满了信心，我们也更有动力让我们的应用程序更容易访问，这符合我们的核心价值观之一——“为了每一位开发者”。</p><p>&nbsp;</p><p>这次迁移是团队努力的结果。像这样的大型项目需要计划、努力、动机和大量的时间，并且所有这些都不能影响我们的产品目标。非常感谢每一位为这个项目的成功做出贡献的人，尤其是所有的工程师，尽管他们同时有其他许多事情要做，但总能抽出时间来转换测试。</p><p></p><p></p><h5>原文链接：</h5><p></p><p><a href=\"https://blog.sentry.io/2023/02/23/sentrys-frontend-tests-migrating-from-enzyme-to-react-testing-library/\">https://blog.sentry.io/2023/02/23/sentrys-frontend-tests-migrating-from-enzyme-to-react-testing-library/</a>\"</p><p></p><h5>&nbsp;相关阅读：</h5><p></p><p><a href=\"https://xie.infoq.cn/article/8f7976ab813eb2897f6feded9\">前端精准测试实践</a>\"</p><p><a href=\"https://www.infoq.cn/article/1b1xze82HfsSd168M2k7\">是时候说再见了，Enzyme.js</a>\"</p><p><a href=\"https://xie.infoq.cn/article/49844b5651aabfa07f62fe9f9\">JavaScript 测试系列实战（一）：使用 Jest 和 Enzyme 测试 React 组件</a>\"</p><p><a href=\"https://www.infoq.cn/article/2FhPNEatO5kkR7jeIsU5\">大前端测试的思考和在语雀的实践分享</a>\"</p><p></p>",
    "publish_time": "2023-04-06 14:59:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "业务驱动的组织协同机制｜ BizDevOps 公开课",
    "url": "https://www.infoq.cn/article/RoptfDjuCu4YWF04WCPh",
    "summary": "<p>BizDevOps最新权威解读课程，由BizDevOps共促计划专家团成员共同创作，包括《必致（BizDevOps）白皮书》解读共 10 讲，阿里巴巴、招商银行、Thoughtworks等企业真实实践案例分享，以及需求管理、组织设计、组织数字化升级、数据运营和工具等设计专题精讲。<br />\n白皮书下载链接：<a href=\"https://www.infoq.cn/minibook/lsB8GB2BbvLQj2u5mBKo\">https://www.infoq.cn/minibook/lsB8GB2BbvLQj2u5mBKo</a></p>\n<p><strong>你将理解：</strong></p>\n<ol>\n<li>如何应用BizDevOps，为数字化的业务打造数字化的组织</li>\n<li>理解BizDevOps的1个目标，3个能力和5个实践</li>\n<li>BizDevOps与DevOps的根本不同，以及如何实现从DevOps向BizDevOps的蝶变</li>\n<li>你将掌握BizDevOps的1-3-5框架，掌握驾驭数字化变革的力量</li>\n</ol>\n<p><strong>面向受众：</strong><br />\n数字化转型从业者和关注者，包括研发管理者、数字业务和数字化转型负责人、业务分析师等、研发工具负责人</p>\n<p><strong>发布计划：</strong><br />\n3.23日起，每周四下午16:00，准时开播。</p>\n<p><strong>本系列视频内容规划：</strong></p>\n<ol>\n<li>BizDevOps(必致)是什么，如何实施？ 整体框架</li>\n<li>产品导向的团队组织和交付 （实践一） 协作和管理实践</li>\n<li>业务驱动的组织协同机制 （实践二）</li>\n<li>数字业务的动态投资组合管理 （落地和案例）</li>\n<li>应用为核心的研发资产和流程管理（实践三） “工程和技术实践”</li>\n<li>适配业务特征的持续业务交付 （实践四）</li>\n<li>建设和改进持续业务交付能力 （落地和案例）</li>\n<li>全量、全要素和实时数据支持的度量和持续改进（实践五） 度量和持续改进实践</li>\n<li>度量和持续改进体系的设计和应用（落地和案例）</li>\n<li>BizDevOps（必致）：驾驭数字化变革的力量 总结</li>\n</ol>",
    "publish_time": "2023-04-06 15:53:23",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "三星被曝芯片机密代码遭ChatGPT泄露，引入不到20天就出3起事故，内部考虑重新禁用",
    "url": "https://www.infoq.cn/article/48HXL0qs8AowJxDgSpom",
    "summary": "<p></p><p>近日，三星员工在使用ChatGPT处理工作时，无意间泄露了公司的绝密数据。</p><p>&nbsp;</p><p>据悉，三星允许半导体部门的工程师使用 ChatGPT 参与修复源代码问题。但在过程当中，员工们输入了<a href=\"https://www.techradar.com/news/samsung-workers-leaked-company-secrets-by-using-chatgpt\">机密数据</a>\"，包括新程序的源代码本体、与硬件相关的内部会议记录等数据。不到一个月的时间，三星曝出了三起员工通过ChatGPT泄露敏感信息的事件。</p><p>&nbsp;</p><p>由于ChatGPT会保留用户输入数据以进一步训练自身，因此三星的这些商业机密现已被掌握在ChatGPT背后的AI服务商OpenAI手中。作为回应，三星公司现正开发自己的内部 AI 产品供员工使用。</p><p></p><h2>三星保密数据泄露</h2><p></p><p>&nbsp;</p><p>据悉，起初三星全面禁止使用ChatGPT，自3月11日开始才部分开放给DS部门使用，却没想到在短短时间内就传出机密外泄。</p><p>&nbsp;</p><p>三起泄密事件均发生在三星电子半导体暨装置解决方案（Device Solutions，简称“DS”）部门。其中，两起与半导体设备有关，另外一起与会议内容相关。</p><p>&nbsp;</p><p>在设计晶片设备的事件中，三星半导体事业暨装置解决方案部门（Device Solutions，即DS）的一名员工在测试设备下载软体的过程中，将出现问题的原始代码复制到ChatGPT，并向其请教解决办法，但这一操作反而让三星设备测量相关的原始码成为ChatGPT学习资料。另一起则是有员工为了解设备良率等相关资讯，将程式码输入ChatGPT，要求其优化代码。</p><p>&nbsp;</p><p>虽然是保密工作，但为了尽量提高效率、为公司节约时间以测试和验证处理器，最终降低开发成本，三星还是决定允许员工使用外部 AI 服务。</p><p>&nbsp;</p><p>第三起则是，有员工使用ChatGPT将会议记录转换成演示文稿，但其中却涉及大量三星明显不希望对外透露的内容。</p><p>&nbsp;</p><p>由于三星员工在使用ChatGPT查询问题并验证答案时，不慎将这些资讯添加到ChatGPT的学习资料库里，日后若有其他使用者在ChatGPT上提出相关问题，可能导致三星企业机密外泄。</p><p>&nbsp;</p><p>据悉，三星正在制定相关保护措施，并进一步加强内部管理和员工训练，目前也已将每次向ChatGPT 提问限制在1,024 byte 以内。若采取信息保护紧急措施后又发生类似事故，三星内部很有可能会切断ChatGPT服务，更不排除对相关人员做出处罚。</p><p>&nbsp;</p><p>外媒称此类数据已经无法检索，因为其现被存储在属于OpenAI的服务器上。在竞争激烈的半导体行业，任何形式的数据泄露都可能给厂商带来灾难性打击。而三星似乎没有任何办法要求OpenAI检索或删除当前持有的敏感数据。</p><p>&nbsp;</p><p>有人认为这意味着ChatGPT并不符合欧盟的GDPR，代表管理方存在收集和使用其核心租户数据的行为。也正因如此，目前意大利正在全国范围内禁止使用ChatGPT。</p><p>&nbsp;</p><p></p><h2>数据安全风波不断</h2><p></p><p>&nbsp;</p><p>3 月 31 日，意大利数据保护局 Garante 宣布暂时<a href=\"https://www.infoq.cn/news/0Ajci2Edm9HHZ0O7kKRt\">禁用 ChatGPT</a>\"，并对其涉嫌违反隐私规则展开了调查。目前，OpenAI 已在意大利下线 ChatGPT，意大利也成为了全球首个封禁 ChatGPT 的国家（部分国家和地区在一开始就无法使用 ChatGPT。）</p><p>&nbsp;</p><p>意大利数据保护局 Garante 认为，ChatGPT 平台曾在3月20日出现了用户对话数据和付款服务支付信息丢失情况。此外，平台没有就收集处理用户信息进行告知，缺乏大量收集和存储个人信息的法律依据。</p><p>&nbsp;</p><p>意大利个人数据监管局（GPDP）指出，由于违反欧盟的《通用数据保护条例》（GDPR）和意大利的数据保护法，他们将立即对涉及意大利公民的“个人数据处理做临时限制”。</p><p>&nbsp;</p><p>GPDP 强调，“OpenAI 对其收集用户及各相关方数据的行为缺乏清晰说明。”另外，ChatGPT 对用户数据的处理还可能造成错误印象，“因为 ChatGPT 提供的信息并不一定与真实数据相对应。”</p><p>&nbsp;</p><p>GPDP 还对 OpenAI 忽略用户年龄审查表达了担忧。作为微软的投资对象，OpenAI 曾提到其 ChatGPT 是专为 13 岁或以上的用户群体所设计。但这项服务在发布后并没有对用户做年龄验证，GPDP 认为“考虑到其发展程度和自我意识，未成年人在使用时可能接触到绝对不合适的答案。”</p><p>&nbsp;</p><p>此外，据报道，非营利组织人工智能与数字政策中心（CAIDP）不久前向美国联邦贸易委员会（FTC）投诉，要求 FTC 调查 OpenAI 违反消费者保护规则的行为，该组织认为 GPT-4 具有偏见性、欺骗性、对隐私和公共安全构成风险。</p><p>&nbsp;</p><p>CAIDP 认为，OpenAI 违反了 FTC 对人工智能产品的指导，并违反了 FTC 法案第 5 条，该法案禁止不公平和欺骗性的商业行为。CAIDP 敦促 FTC 对 OpenAI 进行调查，并暂停其大型语言模型的商业部署，包括 ChatGPT 的最新版本。</p><p>&nbsp;</p><p></p><h2>OpenAI：AI 安全需要技术和制度双重创新</h2><p></p><p>&nbsp;</p><p>显然，最近不断爆出的数据安全事件和意大利政府明确禁用的态度，已经引起了OpenAI的高度重视。4月5日，OpenAI <a href=\"https://openai.com/blog/our-approach-to-ai-safety\">发布了一篇文章来解释</a>\"自己实行的安全措施，文章试图对业界GPDP担忧的问题作出回应。</p><p>&nbsp;</p><p>根据 OpenAI 的说法，在发布新系统之前，其会开展严格测试，聘请外部专家提供反馈，通过人工反馈强化学习等技术改进模型的行为，并构建起广泛的安全与监控系统。例如，在最新模型GPT-4完成训练之后，OpenAI 投入6个多月时间在整个组织内开展工作，以保证其工作效果更安全、更一致。</p><p>&nbsp;</p><p>OpenAI表示，强大的AI系统应当接受严格的安全评估。“这方面保障还需要监管的协助，因此我们与政府积极合作，希望制定出最佳监管形式。”</p><p>&nbsp;</p><p></p><h4>从实际经验中改进安全系统</h4><p></p><p>&nbsp;</p><p>尽管进行了广泛的研究和测试，但 OpenAI 也称自己无法预测人们使用其技术的所有方式，也无法预测其对技术的滥用思路。因此 OpenAI 认为，从现实世界的使用方式中学习，才是随时间推移构建并发布更加安全的AI系统的关键前提。</p><p>&nbsp;</p><p>“我们谨慎地逐步向更广泛的人群开放最强大的模型，并根据我们吸取的教训不断做出改进。我们通过服务和API对外开放最强大的模型，以便开发人员能够将这项技术直接构建至自有应用程序当中。这让我们得以监控滥用行为并采取行动，不断建立缓解措施以响应人们滥用我们系统的真实方式。这样安全工作才能不止于理论演绎，更要联系现实案例。”</p><p>&nbsp;</p><p>OpenAI 表示，真实案例促使了其制定越来越细致的政策，以应对人们可能引发风险的行为。“更重要的是，我们认为社会必须有时间来更新和适应愈发强大的AI，而且受到这项技术影响的人们也应对AI的下一步发展方向拥有发言权。有了第一手经验的指引，我们能够通过迭代部署更有效地将各个利益相关方引入关于AI技术应用的对话当中。”</p><p>&nbsp;</p><p></p><h4>关于儿童和隐私</h4><p></p><p>&nbsp;</p><p>OpenAI 强调，保护儿童是安全工作的一大重点。OpenAI 明确表示，要求用户必须年满18岁，或者至少年满13岁并得到父母同意后，才能使用其AI工具。OpenAI 表示正在研究可验证用户年龄的工具，同时 OpenAI 声称已经建立起强大的滥用监控系统。据悉，与GPT-3.5相比，最新一代模型GPT-4响应禁止类请求的可能性降低了82%。</p><p>&nbsp;</p><p>除了默认的安全护栏之外，OpenAI 表示还与非营利性组织Khan Academy等机构的开发人员合作，比如为 Khan Academy 开发出的AI助手提供量身定制的安全缓解措施。</p><p>&nbsp;</p><p>OpenAI 的大语言模型训练自广泛的文本语料库，这些文本包括公开可用素材、许可内容以及由人工审阅者生成的内容。OpenAI 表示不会使用这些数据来销售公司服务、做广告宣传或者建立个人档案，并承诺只利用这些数据来改进模型，比如 ChatGPT 会通过与用户间的对话不断训练和改进自身。</p><p>&nbsp;</p><p>OpenAI 承认，其部分训练数据可能包含来自公共互联网的个人信息，但声称不希望自己的模型来非跟踪个人，因此会努力在可行的情况下从训练数据集中删除个人信息，微调模型以拒绝对个人信息的请求，并响应用户提出的从系统中删除其个人信息的请求。“这些举措最大限度减少了我们模型可能在响应内容中，包含个人信息的可能性。”</p><p>&nbsp;</p><p>在提高事实准确性方面，OpenAI 表示这已经成为OpenAI及其他各AI开发商的关注重点。OpenAI 通过被用户标记为不正确的主数据源的ChatGPT输出及反馈，提高了GPT-4的事实准确性。据悉，GPT-4生成符合事实内容的可能性比GPT-3.5高40%。</p><p>&nbsp;</p><p></p><h4>解决AI安全问题，需要更多投入</h4><p></p><p>&nbsp;</p><p>OpenAI 认为，解决AI安全问题的切实方法，是投入更多时间和资源来研究行之有效的缓解与对齐技术，并测试它们在现实世界中被滥用的情况。</p><p>&nbsp;</p><p>“我们认为AI的安全性与功能性发展应当齐头并进。截至目前，我们最重要的安全工作就集中在最强大的模型上，它们更善于遵循用户指示，但也更容易被操纵或‘引导’。我们将以愈发谨慎的态度构建和部署更加强大的模型，也会随着我们AI系统的发展而持续加强安全预防措施。”</p><p>&nbsp;</p><p>OpenAI 认为，虽然自己投入6个多月才在部署之前大致把握住GPT-4模型的功能、优势和风险，但未来AI系统的安全提升恐怕还需要更长的时间。因此，政策制定者和AI厂商都应保证全球范围内的AI开发和部署活动得到有效管理，确保各方不会为了快速成功而偷工减料。“这是一项艰巨的挑战，需要技术和制度的双重创新。”</p><p>&nbsp;</p><p>“安全问题的解决还需要广泛的讨论、实验和参与，包括AI系统的行为边界。”OpenAI 最后表示，“我们已经并将继续促进各利益相关方之间的合作和公开对话，努力打造一个更加安全的AI生态系统。”</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.techradar.com/news/samsung-workers-leaked-company-secrets-by-using-chatgpt\">https://www.techradar.com/news/samsung-workers-leaked-company-secrets-by-using-chatgpt</a>\"</p><p><a href=\"https://openai.com/blog/our-approach-to-ai-safety\">https://openai.com/blog/our-approach-to-ai-safety</a>\"</p><p><a href=\"https://www.infoq.cn/news/0Ajci2Edm9HHZ0O7kKRt\">https://www.infoq.cn/news/0Ajci2Edm9HHZ0O7kKRt</a>\"</p>",
    "publish_time": "2023-04-06 16:23:34",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "生成式AI助力游戏开发：腾讯推出3D虚拟场景自动生成解决方案",
    "url": "https://www.infoq.cn/article/FgFcbgADcUrMgXgss3AT",
    "summary": "<p></p><p>3月28日，腾讯AI Lab在2023游戏开发者大会（Game Developers Conference）上发布了自研的3D游戏场景自动生成解决方案，通过AIGC技术，帮助开发者在极短的时间内打造出高拟真、多样化的虚拟城市场景，大幅提升游戏开发效率。</p><p>&nbsp;</p><p>会上，腾讯展示了使用AI从零开始迅速搭建一座3D 虚拟城市的过程，所建虚拟城市面积达到25 平方公里，包含 130 千米路网、&nbsp;4416 栋建筑以及超过 38 万个室内映射。这样一座大规模城市的“构建”，过去往往需要多名美术师以年为单位的时间才能完成，而结合AI只需要数周。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/92/925884e52af7e2f2eabe2946ea1c8d8a.png\" /></p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3a/3a3223566afb94b54ec647e484a09145.png\" /></p><p></p><p>&nbsp;</p><p>据介绍，游戏场景中，AI生成虚拟城市的核心技术主要包含城市布局生成、建筑外观生成、室内映射生成几个方面。</p><p>&nbsp;</p><p>城市布局生成的效果主要取决于道路布局和建筑布局的生成的拟真和多样化程度。腾讯3D虚拟场景自动生成解决方案通过让AI 学习卫星图、航拍等真实数据，帮助其理解真实城市的道路与建筑特征，从而快速生成富有真实感的城市布局画面。</p><p>&nbsp;</p><p>在AI技术的推动下，城市布局的生成真正实现了智能化，以道路布局为例，使用腾讯3D虚拟场景自动生成解决方案，开发者只需要简单画出城市主干道和海岸线，AI模型即可在1 分钟内填充合理的路网细节。同时，开发者还可以灵活修改参数，让模型快速生成不同变体，或在生成结果上再做调整修改，直到获得理想的虚拟城市道路。</p><p>&nbsp;</p><p>实验表明，道路布局生成整个过程不到30分钟即可完成，相比传统方案，开发效率提升了数百倍。此外，基于所生成的道路网络，AI模型也可以快速生成多样化的建筑布局，让虚拟城市的形态更加丰富，这一过程一般只需要不到10分钟的时间。</p><p>&nbsp;</p><p>在建筑外观生成环节，过去主要依赖人工参考照片手动制作独特建筑，单个模型就需要2-3天才能完成。因此一般游戏只会制作少量独特建筑，基于此随机组合产生的多样性较为有限，容易让生成的场景产生重复感。</p><p>&nbsp;</p><p>腾讯3D游戏场景自动生成解决方案将AI 与程序化生成结合，加速了 2D 照片到 3D 建筑的制作过程，将单个独特建筑的制作时间降低至 17.5 分钟，使低成本、高效率生成大量多样化建筑外观成为可能。同时，借助自研的图像生成能力，批量生成大量外观独特的 2D 建筑照片，极大提升了建筑外观的丰富度。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9d/9df33cdb088bdf9903eb7be34728f5f6.png\" /></p><p></p><p>&nbsp;</p><p>室内映射即在建筑窗户上增加观察室内的视角，将室内环境“映射”出来，增加真实感。在腾讯3D游戏场景自动生成解决方案中，只需给现实中的房间拍摄多张连续照片，再经过算法重建成“伪3D图像”并贴在建筑外墙，即可让游戏中的城市“拥有”各式各样的房间。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/88/88fb1c49ac0fe50a5f8967bf0fa77967.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/be/bea225bae0ff49aec8ed1b25de083c45.png\" /></p><p></p><p>为建筑生成可满足外观需求的伪3D 内饰窗户</p><p>&nbsp;</p><p>腾讯3D虚拟场景自动生成解决方案利用AIGC等技术，贯通从城市、建筑再到房间，由整体到局部的场景，助力游戏开发更高效。</p>",
    "publish_time": "2023-04-06 16:58:58",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "腾讯提出蛋白质研究AI模型，预测准确率刷新纪录，入选Nature子刊",
    "url": "https://www.infoq.cn/article/JO3RKCzpJOu4pN5A47Jg",
    "summary": "<p>蛋白质相互作用（PPI）可以说是人体最重要的分子事件之一，事关人体生长发育、新陈代谢，是疾病治疗干预的重要来源，PPI失调会导致癌症等疾病发生，因而该领域也是医药行业关注的研究热点。</p><p>&nbsp;</p><p>为了更好地预测和解读PPI，并深入挖掘相关分子信息，2023年3月，腾讯 AI Lab 联合香港科技大学、中国科学院大学相关团队，将深度学习领域的层次图学习技术引入PPI研究，提出了一种双视图层次图学习模型（HIGH-PPI），模型被证明在PPI研究中具有更高的预测准确性和更好的可解释性，研究成果在知名国际学术期刊《自然-通讯》（Nature Communications）发表。</p><p>&nbsp;</p><p>人类蛋白质组学数据分析表明，人体的PPI网络涉及约65万个相关接触位点。处理这样量级的数据，人工智能的效率要明显高于人类，相关技术引入可以更加高效、准确地帮助人们找出重要信息，促进靶向药物的开发和癌症等疾病的治疗。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/18/180c596992991d174f277059f9ee3e6b.png\" /></p><p></p><p>&nbsp;</p><p>图：蛋白质结构和网络结构都对PPI的准确预测至关重要。（a）蛋白质序列通常能提供关于PPI的细节信息，但它也可能导致PPI的预测准确性降低，例如不具备序列相似性的两个蛋白质（SERPINA1、3）可能和同一蛋白质（ELANE）在相同作用界面发生PPI；（b）包含网络结构信息的PPI，将蛋白质区分为不同的社区，社区内的蛋白质之间存在密集的交互，而社区之间通常只有微弱的连结；（c）HIGH-PPI具备双视图层次，顶视图包含网络结构信息，底视图包含蛋白质结构信息。</p><p>&nbsp;</p><p>这项研究是腾讯AI Lab 对PPI层次问题建模的首次尝试，得到了审稿人的高度评价，被视为生物信息领域一项富有潜力的创新贡献，文章也得到了学界的认可，被选入《自然-通讯》年度编辑精选文章合集。</p><p>&nbsp;</p><p>HIGH-PPI模型是腾讯在AI+生命科学研究领域的最新研究成果，此前，团队在蛋白质相关的药物发现领域已经取得诸多领先成果，发表多项关于蛋白质结构-功能关系研究的文章，如蛋白质高精度结构模型、疾病分类、蛋白动力学建模以及蛋白质组学数据等。</p>",
    "publish_time": "2023-04-06 17:07:17",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]