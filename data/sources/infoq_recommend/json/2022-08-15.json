[
  {
    "title": "数据技术大融合，HSTAP数据库有多少想象空间？",
    "url": "https://www.infoq.cn/article/3J6wRa50bUJyvNuQj8Fj",
    "summary": "<p></p><blockquote>目前，HTAP数据库成为数据库领域最热门的话题之一，Gartner分析师甚至指出，HTAP已经成为新一代数据库的入场筹码，HTAP为什么会火起来？如何实现HTAP能力？HTAP下一步是否会向着超融合HSTAP方向演进？整个数据技术栈是否会像十年前iPhone整合掉MP3、手机通信、相机等一样，被一个数据平台整合？本文通过采访相关专家对上述问题进行探讨。</blockquote><p></p><p></p><p>天下大势分久必合合久必分，数据技术亦是如此。</p><p></p><p>千禧年后随着信息化和数字化发展，数据技术走向繁荣，百花齐放。近年来，随着数字化转型深入，数据价值愈发凸显，数据技术出现了融合趋势。比如，软硬一体，湖仓一体，HTAP数据库等等。</p><p></p><p>近两年，我们看到市场上除了火热的HTAP数据库，还出现了<a href=\"https://xie.infoq.cn/article/d8d3614dd8f277d304da7ad66\">HSTAP数据库</a>\"和HTSAP数据库的说法，多出来的S是什么？是新瓶装旧酒？还是数据技术融合下的新探索？</p><p></p><h1>火热的 HTAP 乱花迷人眼</h1><p></p><p></p><p>“在继分布式、NoSQL/NewSQL之后，国内数据库技术界的当红炸子鸡，非云原生、HTAP莫属。”去年DTCC2021中国数据库技术大会后，一位专家如此写道。</p><p></p><p>HTAP是TP与AP的融合，希望用一套系统，解决用户的TP和AP需求，这一数据库的融合趋势，不限于中国，在全球都是一样的来势汹汹。比如，2022年&nbsp;5月，Google Cloud&nbsp;发布了主打HTAP的云端数据库AlloyDB, 6月，Snowflake发布了行存储引擎Unistore，正式进军HTAP。此前，包括MySQL发布Heatwave，增强分析能力，也是加入了HTAP大战。</p><p></p><p>Gartner分析师甚至指出，HTAP已经成为新一代数据库的入场筹码，HTAP能力成为数据库必备选项。信通院在7月中旬也启动了首批“可信数据库”-HTAP数据库产品评测……</p><p></p><p>2014年Gartner对HTAP数据库给出了明确定义，即需要同时支持OLTP和OLAP场景，基于创新的计算存储框架，在同一份数据上保证事务的同时支持实时分析，省去费时的ETL过程。也就是说，支持混合负载的数据库能够避免传统架构中在线与离线数据库之间大量的数据交互，同时也能够针对最新的业务数据进行实时统计分析。</p><p></p><p>HTAP火热的背后是需求推动，越来越多的实时分析场景出现，比如，金融业中对实时性要求较高的风控、实时账单、实时促销等业务场景，以及新一代Web3.0、NFT、区块链等对实时数据敏感的领域。在原来的架构下只能支持T+1或者T+N分析，已经不能满足需求，而省去ETL的HTAP数据库可以实现T+0的实时分析。</p><p></p><p>通常来讲，实现HTAP可以分为两大类，第一大类是将现有的&nbsp;TP&nbsp;与&nbsp;AP&nbsp;包装，通过一些中间件的方式将其连接起来再做封装，以类似中台的方式封装实现。比如，TP用了MySQL，AP用某数据仓库或者数据湖，中间用Flink串起来，且对用户透明，包装成一个相对比较统一的管理界面。实现起来容易，但是组件多，成本高。第二大类，融合架构，抛弃现有的&nbsp;TP&nbsp;与&nbsp;AP&nbsp;独立架构，从底层存储开始就将&nbsp;TP&nbsp;与&nbsp;AP&nbsp;的引擎融合起来，形成一套系统。为了避免在线实时读写与批处理作业之间的资源干扰，HTAP混合负载型数据库通常使用读写分离或内存处理技术实现。一般来说，分布式数据库的多副本架构天然支持读写分离技术，而基于传统架构的数据库往往采用内存处理技术进行实现。不过，融合架构下的HTAP数据库也是乱花渐欲迷人眼。</p><p></p><p>矩阵起源 CTO 张颖峰认为，在数字化转型浪潮中，数据库将扮演比以往更为重要的角色，在数据技术融合的大趋势下，现在的 HTAP 还有不足，矩阵起源提出了超融合HSTAP数据库的定位，多出来的“S”又是什么？</p><p></p><h1>融合的下一站是HSTAP？</h1><p></p><p></p><p>“为什么要加S呢？是指用户使用TP和AP时的数据结构和能力要求不一定相同，一定要有东西在这两者之间做桥梁。”张颖峰介绍，在挖掘数据价值过程中，数据库是企业数据资产或者数据平台的组成基础，如在一个数据中台中，用户需要基于OLTP(通常来自业务中台)的表做ETL工作，Join成宽表保存到OLAP用来做交互式分析。为什么要有宽表呢？这有两方面的原因：其一是分析师建模方便，其二是增加许多维度字段，提升查询效率。在这种场景下，以Flink为核心的数据流处理，成为了串起上下游的核心引擎，而其中的典型操作，就是Stream Join，把多个表实时连接成一张表保存到目标数据库，进一步资产化。单纯的HTAP，通常只能用于实时分析，无法满足这种通用场景的要求。</p><p></p><p>矩阵起源所提的HSTAP中的“S”指的是串联AP和TP的Streaming能力，即在HTAP数据库内部实现了数据库内置流处理能力。通过一种创新的架构实践极简理念，把数据库的复杂度留给产品的研发阶段，而把简单、易用、好用的最终体验带给用户。</p><p></p><p>“我们定义的HSTAP是指，在这个平台里面，无论是TP还是AP负载，用户都可以随心所欲地去创建各种表，也可以随心所欲用一个流，用类似于流的语法，把各种表连起来。”张颖峰强调。比如用户希望对订单明细表进行分析，需要Stream Join成一张宽表。那么，随着有订单明细表的数据更新，宽表也将自动更新，但是不用维护该更新机制。即把用户的ETL工作内置到数据库当中，这样就让一个数据库同时具备AP、TP和S（流）的能力。</p><p></p><p>在矩阵起源团队看来，当下的数据栈，包括数据库、数据仓库、数据湖，这些本身就不应该如此割裂。之所以割裂，这里面有技术的因素，也有历史因素，同时具备TP、AP、流三者能力的HSTAP会帮助客户彻底打破数据孤岛问题，成为企业将来的智能化核心数据基础设施。“HTAP、流批一体、湖仓一体，这些新的技术趋势都可以包含在HSTAP的范畴内。”张颖峰指出。</p><p></p><p>有人对此会有疑问，HTAP还没有做好，去做HSTAP不是天方夜谭、痴人说梦吗？</p><p></p><p>矩阵起源Global CTO田丰指出，实现一个HSTAP有两方面的挑战，一是架构方面的取舍。使用一款开源和成熟的数据库来扩展，会比较稳定而且容易快速推出产品，但有非常沉重的历史包袱，无法应对未来新型应用和基础设施的需要，因此MO（MatrixOne缩写）决定自己从头开始研发。&nbsp;二是如何实现不同负载的资源隔离以及高效的资源分配。在这一点上，MO创新性的提出了储存、计算和事务分层解耦的架构，使得资源分配可以随着各种负载的变化高效分配，并可以做到单种负载的独立扩展。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1c/1c35b0f1ca792d24001471623587e51a.png\" /></p><p>▲MatrixOne愿景架构图</p><p></p><p>去年成立的矩阵起源，其核心创始团队成员都是数据库领域的资深人士，<a href=\"https://www.infoq.cn/article/QQ90ZNRW2XPaJKeiN3iR\">公司创始人&amp;CEO&nbsp;王龙</a>\"，曾在腾讯云担任副总裁，对数据库有着独特的见解和洞察。Global CTO田丰博士师从数据库元老David DeWitt，多篇论文入选数据库顶会SIGMOD、VLDB。公司CTO张颖峰经历过互联网大厂，并在大型企业担任过技术负责人，深耕后端分布式存储等技术，既懂甲方也懂乙方。去年该公司接连获得两轮融资，获得资本的青睐。</p><p></p><p>从信息化到数字化，几十年来，数据技术栈不断丰富，从数据库、数据仓库、数据湖、湖仓一体，到流处理引擎Flink、批处理引擎Kafka等，由于技术以及历史发展等多种原因，很多企业都以搭积木的形式积累了丰富的IT资产。如今数据技术走向了大融合，比如湖仓一体、HTAP，以及矩阵起源提出的HSTAP。很像十年前，iPhone智能手机的出现融合了通信、音频MP3、视频MP4、相机等。如今，MP3已经消失，MP4演化为iPad等继续活跃，便捷的智能手机替代了大部分专业相机和MP3的使用场景。</p><p></p><p>数据技术的超融合是否会像智能手机一样发生？</p><p></p><p>田丰认为，像智能手机一样，未来企业数据平台的融合是一个趋势，现在一个企业可能有MySQL、SQLite、Oracle、Spark、Flink、Clickhouse等多种数据库或者数据处理技术，而在未来一个公司所有数据或者大部分数据都会集中在一个整合的、简单易用、易运维、高性价比的数据平台上，最大程度保证数据的安全和可靠，同时降低应用开发和管理的难度以及复杂度。不过由于过去数十年很多大企业已经积累了十几种甚至更多的IT系统，整合的过程是漫长和曲折的。矩阵起源希望并相信MatrixOne这样的超融合数据库会是一个理想的载体。</p><p></p><p>相比于消费级的智能手机，作为数字基础设施的数据库，其替换难度和成本都太高。而且没有任何一套架构或者一套系统能够打遍天下，企业也不希望系统过重造成供应商锁定。田丰强调，MatrixOne并不是封闭的，而是会积极融入到开放的数据技术生态中，比如企业已经部署了Flink计算引擎，MatrixOne会与之适配。但企业新建一个业务系统，MatrixOne会是好的选择。正是因为秉持开源开放的原则，MatrixOne从一开始便选择了开源。</p><p></p><p>一个好的数据库是用出来的，数据技术融合趋势不可挡，HSTAP这个新理念未来会在更多实际场景中验证、发展和成长。</p>",
    "publish_time": "2022-08-15 09:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Java近期新闻：Spring Cloud、Liberica NIK、Open Liberty、Micronaut、JHipster、Apache ShenYu",
    "url": "https://www.infoq.cn/article/4t0WbqrTXaCWOpmFFpfI",
    "summary": "<p>本期Java近期新闻主要涉及JDK 19、JDK 20、Spring点版本和里程碑版本、Liberica NIK 22.2.0和21.3.3、Open Liberty 22.0.0.8 和22.0.0.9-beta、Micronaut 3.6.0、WildFly 27 Alpha4、Hibernate ORM 6.1.2、Hibernate Validator 6.2.4、7.0.5 和8.0.0.CR2、Hibernate Search 6.1.6、JHipster 7.9.2、7.9.1 和7.9.0、JBang 0.96.4 和Apache ShenYu。</p><p></p><h3>JDK 19</h3><p></p><p>JDK 19<a href=\"https://jdk.java.net/19\">早期访问构建</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-19%2B34\">Build 34</a>\"在上周发布，它是Build 33的<a href=\"https://github.com/openjdk/jdk/compare/jdk-19%2B33...jdk-19%2B34\">升级</a>\"，修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2019%20and%20%22resolved%20in%20build%22%20%3D%20b34%20order%20by%20component%2C%20subcomponent\">问题</a>\"。要了解更多细节信息，请查看<a href=\"https://jdk.java.net/19/release-notes\">发布说明</a>\"。</p><p></p><h3>JDK 20</h3><p></p><p>JDK 20<a href=\"https://jdk.java.net/20/\">早期访问构建</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B9\">Build 9</a>\"在上周发布，它是Build 8的<a href=\"https://github.com/openjdk/jdk/compare/jdk-20%2B8...jdk-20%2B9\">升级</a>\"，修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2020%20and%20%22resolved%20in%20build%22%20%3D%20b09%20order%20by%20component%2C%20subcomponent\">问题</a>\"。要了解更多细节信息，请查看<a href=\"https://jdk.java.net/20/release-notes\">发布说明</a>\"。</p><p>&nbsp;</p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/19\">JDK 19</a>\"和<a href=\"https://openjdk.java.net/projects/jdk/20/\">JDK 20</a>\"，我们鼓励开发者通过<a href=\"https://bugreport.java.com/bugreport/\">Java Bug数据库</a>\"报告缺陷。</p><p></p><h3>Spring Framework</h3><p></p><p>在通往Spring Cloud 2022.0.0（代号Kilburn）的道路上，<a href=\"https://spring.io/blog/2022/08/01/spring-cloud-2022-0-0-m4-codename-kilburn-has-been-released\">第四个里程碑版本</a>\"于上周发布。该版本的主要特点是子项目升级，如Spring Cloud Stream、Spring Cloud Config、Spring Cloud Gateway和Spring Cloud Function。Spring Cloud 2022.0.0-M4与Spring Boot 3.0.0-M4兼容。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2022.0-Release-Notes#202200-m4\">发布说明</a>\"。</p><p>&nbsp;</p><p>Spring for Apache Kafka 2.9.0<a href=\"https://spring.io/blog/2022/08/02/spring-for-apache-kafka-2-9-0-available\">发布</a>\"，特性包括：一个更加健壮的非阻塞重试引导程序；一种新的错误处理模式。该版本需要kafka-clients&nbsp;3.2.0 模块。要了解关于这个版本的更多细节，请查看官方文档“<a href=\"https://docs.spring.io/spring-kafka/docs/2.9.0/reference/html/#whats-new-part\">新增内容</a>\"”一节。</p><p>&nbsp;</p><p>Spring Tools 4.15.2<a href=\"https://spring.io/blog/2022/08/04/spring-tools-4-15-2-released\">发布</a>\"，主要是提供了多项针对Eclipse IDE的修复，如：改进Eclipse日志的诊断输出；Docker镜像中一个开发工具与boot dash集成的问题；Docker镜像中通过boot dash暂停/恢复失灵的问题；由Spring Starter项目导致的“未妥善处理SWT资源”消息。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/spring-projects/sts4/wiki/Changelog#2022-08-03-4152-release-incl-language-servers-version-1370\">发布说明</a>\"。</p><p></p><h3>Liberica Native Image Kit</h3><p></p><p>作为关键升级补丁的一部分，BellSoft <a href=\"https://bell-sw.com/announcements/2022/08/05/liberica-native-image-kit-22-2-0-and-21-3-3-builds-are-out/\">发布</a>\"了Liberica Native Image Kit（NIK）22.2.0版本以及21.3.3的升级版本。这个版本增强了AWS 和Swing支持，并提供了针对以下通用漏洞披露（CVE）的安全修复：</p><p><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21540\">CVE-2022-21540</a>\"：Oracle Java SE、Oracle GraalVM企业版中的漏洞（组件：Hotspot）<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21541\">CVE-2022-21541</a>\"：Oracle Java SE、Oracle GraalVM企业版中的漏洞（组件：Hotspot）<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-21549\">CVE-2022-21549</a>\"：Oracle Java SE、Oracle GraalVM企业版中的漏洞（组件：库）<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-34169\">CVE-2022-34169</a>\"：在处理恶意XSLT样式表时，Apache Xalan Java XSLT库容易出现整数截断问题。</p><p>受CVE-2022-21540和CVE-2022-21541影响的JDK版本有：7u343、8u333、11.0.15.1、17.0.3.1、18.0.1.1以及Oracle GraalVM企业版20.3.6、21.3.2 和22.1.0。CVE 2022-21549 则影响了JDK 17.0.3.1 以及Oracle GraalVM企业版21.3.2 和22.1.0.</p><p></p><h3>Open Liberty</h3><p></p><p>IBM 已经将Open Liberty 22.0.0.8从<a href=\"https://openliberty.io/blog/2022/07/07/separate-stack-trace-22008-beta.html\">Beta版</a>\"<a href=\"https://openliberty.io/blog/2022/08/02/separate-stack-trace-22008.html\">升级</a>\"到交付版：修复CVE-2022-22476（<a href=\"https://www.ibm.com/support/pages/security-bulletin-ibm-websphere-application-server-liberty-vulnerable-identity-spoofing-cve-2022-22476\">IBM WebSphere应用服务器Liberty容易受到身份欺骗攻击</a>\"）；jaxws-2.2 模块的一个依赖项升级到<a href=\"https://cxf.apache.org/\">Apache CXF 3.4</a>\"；将堆栈跟踪从记录的消息中分离出来，以便日志分析工具可以更清楚地显示它们；让开发人员可以针对所有Open Liberty 支持的日志文件启用基于事件的周期性滚动。</p><p>&nbsp;</p><p>Open Liberty 22.0.0.9-beta也已<a href=\"https://openliberty.io/blog/2022/08/04/jakarta-core-profile-22009-beta.html\">发布</a>\"，支持许多Jakarta EE 10规范，包括那些组成新<a href=\"https://jakarta.ee/specifications/coreprofile/10/\">Jakarta EE Core Profile</a>\"的规范，如<a href=\"https://jakarta.ee/specifications/cdi/4.0/\">Jakarta Contexts and Dependency Injection 4.0</a>\"、<a href=\"https://jakarta.ee/specifications/restful-ws/4.0/\">Jakarta RESTful Web Services 3.1</a>\"、<a href=\"https://jakarta.ee/specifications/jsonb/3.0/\">Jakarta JSON Binding 3.0</a>\"、<a href=\"https://jakarta.ee/specifications/jsonp/2.1/\">Jakarta JSON Processing 2.1</a>\"、<a href=\"https://jakarta.ee/specifications/annotations/2.1/\">Jakarta Annotations 2.1</a>\"、<a href=\"https://jakarta.ee/specifications/interceptors/2.1/\">Jakarta Interceptors 2.1</a>\"。它还支持即将发布的<a href=\"https://download.eclipse.org/microprofile/microprofile-open-api-3.1-RC2/microprofile-openapi-spec-3.1-RC2.html\">MicroProfile OpenAPI 3.1</a>\"GA版本（当前为RC2版本）和Password Utilities 1.1</p><p></p><h3>Micronaut</h3><p></p><p>Micronaut 基金会<a href=\"https://micronaut.io/2022/08/04/micronaut-framework-3-6-0-released/\">发布</a>\"了Micronaut 3.6.0，特性包括：支持GraalVM 22.2、&nbsp;<a href=\"https://hibernate.org/reactive/\">Hibernate Reactive</a>\"&nbsp;和&nbsp;<a href=\"https://micronaut-projects.github.io/micronaut-tracing/latest/guide/#opentelemetry\">OpenTelemetry</a>\"规范；一个新增的<a href=\"https://micronaut-projects.github.io/micronaut-test-resources/snapshot/guide/\">Micronaut Test Resources</a>\"项目。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v3.6.0\">发布说明</a>\"。</p><p></p><h3>WildFly</h3><p></p><p>在通往WildFly 27.0.0版本的道路上，<a href=\"https://www.wildfly.org/news/2022/08/05/WildFly27-Alpha4-Released/\">第四个Alpha版本</a>\"发布。该版本是在WildFly 中支持Jakarta EE 10 的一个重要里程碑（之前只有<a href=\"https://docs.wildfly.org/26/WildFly_and_WildFly_Preview.html\">WildFly Preview</a>\"提供）。WildFly 27.0.0.Alpha4支持JDK 11 和JDK 17，而不再支持JDK 8。按照计划，在接下来的几周中，红帽公司还会发布多个Alpha和Beta版本。要了解关于这个版本的更多细节，请查看<a href=\"https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12313721&amp;version=12391771\">发布说明</a>\"。</p><p></p><h3>Hibernate</h3><p></p><p><a href=\"https://hibernate.org/orm/\">Hibernate ORM</a>\"&nbsp;6.1.2.Final<a href=\"https://in.relation.to/2022/08/03/hibernate-orm-612-final/\">发布</a>\"，提供了Bug修复，以及使用@Any 映射和HQL 函数type() 访问多态关联类型的能力。</p><p>&nbsp;</p><p><a href=\"https://hibernate.org/validator/\">Hibernate Validator</a>\" 6.2.4.Final、7.0.5.Final 和8.0.0.CR2版本<a href=\"https://in.relation.to/2022/08/04/hibernate-validator-705-624-final-800-cr2-released/\">发布</a>\"，其中6.2.4.Final、7.0.5.Final分别是6.2和7.0发布序列的维护版本。这两个版本都改进了Java记录测试，可以确保注解处理器能够正确地处理记录。8.0版本的候选版本将支持Jakarta EE 10。</p><p>&nbsp;</p><p><a href=\"https://hibernate.org/search/\">Hibernate Search</a>\"&nbsp;6.1.6.Final<a href=\"https://in.relation.to/2022/08/04/hibernate-search-6-1-6-Final/\">发布</a>\"。这个版本主要是升级到Hibernate ORM 5.6.10.Final、Hibernate ORM 6.0.2.Final ，兼容-orm6 工件的Hibernate ORM 6.1.2.Final，并将-orm6/-jakarta 工件的Jakarta 依赖项升级到最新版本。</p><p></p><h3>JHipster</h3><p></p><p><a href=\"https://www.jhipster.tech/\">JHipster</a>\" <a href=\"https://twitter.com/jhipster/status/1554869778749313031\">7.9.2</a>\"（包含7.9.1版本）和<a href=\"https://twitter.com/jhipster/status/1553809454554046472\">7.9.0</a>\"版本发布，特性包括：依赖项升级到Spring Boot 2.7.2、Angular 14 和React 18；支持使用命令行参数generate-blueprint生成自定义生成器；支持将microservice&nbsp;和microfrontend 实体混用；在<a href=\"https://www.jhipster.tech/jdl/intro\">JHipster领域语言（JDL）</a>\"中支持microfrontend 。要了解更多细节信息，可以查看<a href=\"https://www.jhipster.tech/2022/07/31/jhipster-release-7.9.2.html\">7.9.2版本</a>\"和<a href=\"https://www.jhipster.tech/2022/07/31/jhipster-release-7.9.0.html\">7.9.0版本</a>\"的发布说明。</p><p></p><h3>JBang</h3><p></p><p>JBang 0.96.4版本<a href=\"https://twitter.com/jbangdev/status/1554833015506841606?cxt=HHwWjMCt5fiY8JMrAAAA\">发布</a>\"，主要是移除了有问题、不完备的--native 标志。取而代之，开发人员应该使用命令jbang export native 。如果使用了旧标志，就会看到弃用警告。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/jbangdev/jbang/releases/tag/v0.96.4\">发布说明</a>\"。</p><p></p><h3>Apache软件基金会</h3><p></p><p>Apache软件基金会<a href=\"https://www.mail-archive.com/announce@apache.org/msg07472.html\">宣布</a>\"，<a href=\"https://shenyu.apache.org/\">Apache ShenYu</a>\"（一个Java原生API网关，用于服务代理、协议转换和API治理）已经从孵化阶段升级为顶级项目。InfoQ后续将带来更详细的报道。</p><p></p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/08/java-news-roundup-aug01-2022/\">Java News Roundup: Spring Cloud, Liberica NIK, Open Liberty, Micronaut, JHipster, Apache ShenYu</a>\"</p>",
    "publish_time": "2022-08-15 09:26:24",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]