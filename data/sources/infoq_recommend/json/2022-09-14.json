[
  {
    "title": "开发者如何看待分布式系统中的不确定性 | InfoQ访谈",
    "url": "https://www.infoq.cn/article/XhwPhp9HxaZ3pE0kexVs",
    "summary": "<p>分布式系统中有故障是很正常的，分布式系统只能确保一致性、可用性和分区容忍性三项中的两项。但Kevlin Henney认为，这种印象将限制了开发者对分布式系统行为方式的了解。Henney曾于<a href=\"https://qconlondon.com/\">2022年伦敦QCon</a>\"及<a href=\"https://plus.qconferences.com/\">2022年五月10-20日QCon Plus</a>\"中发布了关于“6个不能”的主题演讲。</p><p>&nbsp;</p><p>Henney认为，在一段代码中，我们可以透过结构和源代码缩进看到简单的控制流，如序列和分支。但我们看不见的则是网络或后端中损失的时间或序列重排。路由、电缆、主机或者是中间件发生故障并不稀奇，我们不能指望所有东西都能随时保持可用性。Henney列出了一个可能发生的场景：</p><p>&nbsp;</p><p></p><blockquote>如果用于响应用户信息的节点彻底崩溃下线，那么用户将永远无法收到回应。架构师也无法保证节点是否能够恢复使用。当然，我们也可以将缓存中的答案返回给用户，但这个回复可能已经过时了。无论怎么说，用户都不会收到真正的答复。</blockquote><p></p><p>&nbsp;</p><p>CAP定理是分布式系统的“海森堡不确定性原理\"：一致性（Consistency）、可用性（Availability）以及分区容忍性（Partition Tolerance）。我们无法同时拥有全部三种属性，正如Henney所解释的：</p><p>&nbsp;</p><p></p><blockquote>一致性意味着，返回结果只能是最新的、一致的或者错误的三者之一；对可用性来说，错误响应不存在，但却不能保证结果是最新或一致的；分区容忍度是指分布式系统在部分分区网络不可用的情况下仍保持运作的能力。我们只能拥有其中两项，或者说，我们做不到全知全能。&nbsp;</blockquote><p></p><p>Henney总结说，超时和缓存在分布式系统作用显著的原因不在于它们的变通性或者优化的能力，而是因为从根本上讲，它们是必需的。</p><p>&nbsp;</p><p>InfoQ就分布式系统采访了<a href=\"https://www.infoq.com/profile/Kevlin-Henney/\">Kevlin Henney</a>\"。</p><p>&nbsp;</p><p>InfoQ：为什么人们会默认分布式系统是可知的？</p><p>&nbsp;</p><p></p><blockquote>Kevlin Henney：开发者通常是从IDE中看世界的，也就是单一的机器。他们会默认以面前的代码来推理系统的运作。虽然他们能意识到网络是故障、并发、异步以及延迟的来源所在，但受视角所限他们往往不能认清现状：当前的问题实际上是更基础的、系统本质上的。&nbsp;尽管异常处理程序可能会意识到故障的存在，但它们无法反映出故障的异常性。我见过不止一个编码指南如此写道：“异常应该是例外的”。这条建议也不过是文字游戏而已，它既没帮助也不现实。在网络环境中，连接超时、中断以及其他异常情况都一样，都是“正常现象”。并且，这些“小问题”也不算很小，或者说它们就是分布式系统的组成部分。</blockquote><p></p><p>&nbsp;</p><p>InfoQ：我们要如何处理分布式系统的不确定性呢？</p><p>&nbsp;</p><p></p><blockquote>Henney：首先，承认不确定性的存在。其次，承认失败或不完整信息是正常情况而非是例外。第三，决定什么样的数据质量是适合应用的。&nbsp;对确定性和可知性的限制意味着架构师必须意识到，状态的一致性是基本决策而非实现细节。数据最终是一致的还是同步交易的，决定了代码、用户体验以及其他系统品质。如果用户做出变更，那么该变更是否需要对其他用户立即且必须可见？这个问题的答案对架构起决定性作用。对数据质量过于严格违背CAP原则，或者会严重影响性能，如分布式锁定。&nbsp;这些对分布式的限制影响有很多，比如Java的RMI之类的分布式垃圾回收机制，在确定一个对象是否不再需要，也就是需要回收的时候，答案并不是唯一的。在托管语言的单个进程中，对象是否可以作为事实声明引用是可以被确定的，但在分布式系统中却不一定。基于超时的租凭机制可以用于确定远程进程是否可以引用某个对象， 但它并不能保证该判断是否绝对正确，只是可能正确而已。</blockquote><p></p><p>&nbsp;</p><p></p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/09/distributed-system-knowable/\">A Distributed System is Knowable: an Impossible Thing for Developers</a>\"</p>",
    "publish_time": "2022-09-14 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "李彦宏发起创立的AI制药公司，首次发布免疫机器人，可对免疫系统实现精准编程",
    "url": "https://www.infoq.cn/article/80N3vqFJcO6YhdBKw9Sb",
    "summary": "<p></p><blockquote>基于AI能力加持的生物计算引擎，可以帮助创新药物研发实现从“大海捞针”变为“按图索骥”。</blockquote><p></p><p></p><h2>百图生科推出生物计算驱动的“ImmuBot”免疫机器人</h2><p></p><p>&nbsp;</p><p>9月9日，百图生科正式启动北京中心实验室，并首次对外披露其基于生物计算引擎de novo设计的全新蛋白质药物——“ImmuBot”（免疫机器人）。</p><p>&nbsp;</p><p>据介绍，由于人体免疫系统高度复杂，种类多达数十类，且在不同组织器官环境有不同特征的免疫细胞族群，与每个细胞上决定其功能的数以万计的蛋白质，共同形成了复杂的万亿关系级别的功能调控网络，且在不同人群中有各不相同的亚型。</p><p>&nbsp;</p><p>当前的免疫调控药物只针对这个复杂系统内的通用人群、单一或少数靶点进行调控，缺乏对病人亚群和疾病异质性的精细设计，无法实现精准的靶向和完整的调控，造成了药物的安全性、有效性特别是长期有效性的巨大挑战。</p><p>&nbsp;</p><p>面对免疫调控的行业难题，百图生科基于生物计算引擎 de novo设计的“ImmuBot”，具备四大功能特点：</p><p>&nbsp;</p><p>弹头高性能。基于<a href=\"https://www.infoq.cn/article/WwxQa0kOxY8B7Qwyztsj\">人工智能</a>\"的强大能力，ImmuBot为每一个靶点配备了恰当亲和力、精准定表位、精准功能激发的高性能弹头，并可实现相对其他同族蛋白的高特异性设计，从而极大提高有效性和安全性。组合多靶向。基于生物计算引擎的靶点组合挖掘和多弹头桥接药物设计，ImmuBot可实现对多个组织特异性靶点、免疫功能靶点的组合靶向，使其具备强大的精准靶向、免疫细胞招募、作用于多个免疫机制、防止耐药逃逸等功能优势。编程式控制。通过创新蛋白质设计，ImmuBot可以实现对人体微环境、细胞因子等的传感器感知，实现AND、OR、IF等条件触发功能，从而实现在特定疾病微环境内激活、针对患者情况选择性激活、序贯弹头激活等高级功能，实现对免疫系统的精准重编程。构件式组装。每个ImmuBot均由多个免疫功能弹头、组织导航弹头、微环境传感器、可编程控制器在适合的底座上由生物计算引擎组装而成，各类构件均可预制、多次复用、快速组装，不仅确保了单体药物的最佳性能，而且带来整体药物研发10-100倍的效率提升，为针对细分人群、疾病亚型、罕见病的精细化药物设计带来新的可能。</p><p></p><p>百图生科首席执行官刘维介绍，ImmuBot 平台上的每个“机器人”药物均由多个免疫功能弹头、组织导航弹头、微环境传感器、可编程控制器等构件组装而成，可以实现传统抗体药物无法实现的复杂作用机制，有望为大量未被满足的临床需求提供新的解决方案。</p><p>&nbsp;</p><p>刘维表示：“百图生科所开发的免疫机器人药物，是高度复杂的创新蛋白质，大多在自然界中并不存在。由于不能依赖生物筛选的基础，其潜在设计空间趋于无限大，为设计带来了极大的挑战。但<a href=\"https://xie.infoq.cn/article/84fdfc60085104ca8f1d88587\">生物计算</a>\"的高效de novo设计能力，可以在超大算力的加持下，迅速对大量候选蛋白质的各功能指标、可开发性指标等维度进行评估，再通过高通量实验体系高速验证迭代收敛，使de novo设计成为可能。”</p><p>&nbsp;</p><p>资料显示，百图生科（BioMap）是中国首家生物计算引擎驱动的创新药物研发平台，由百度创始人李彦宏于2020年创立。2021年，百图生科与北京海淀区政府达成战略合作，在海国投贝伦产业园区建设5000平米的百图生科北京中心实验室。</p><p>&nbsp;</p><p>百图生科北京中心实验室内部设有大规模高通量自动化验证实验室、CLIA标准组学实验室、微流控芯片实验室、类器官实验室、免疫细胞和基因编辑技术实验室等一系列研究实验室，通过自主研发的高通量CRISPR系统、类器官系统、微流控系统、计算光学系统，为百图生科解码免疫系统、打造高通量干湿闭环的生物引擎提供关键能力。</p><p></p><h2>免疫机器人是如何炼成的？</h2><p></p><p>&nbsp;</p><p>ImmuBot 免疫机器人意图实现对免疫系统的精准重编程，治疗上百种免疫相关疾病。这样一个突破性药物平台是如何开发的？</p><p>&nbsp;</p><p>刘维表示，资产组合、引擎技术、生态平台是其核心支撑。</p><p>&nbsp;</p><p>基于免疫机器人技术平台高效研发的特色优势，百图生科正在构建一个大型的创新药物资产组合，包括10余类自主靶点挖掘项目、30余个构件研发项目、10余个自主和合作药物研发项目。</p><p>&nbsp;</p><p>随着大批构件项目的研发推进，未来公司会自主或与合作伙伴联合，高效地推出更多的药物管线。目前，公司已在10余个项目上取得HIT、LEAD等进展，预计明年将实现首批ImmuBot项目进入全球临床。</p><p>&nbsp;</p><p>这个大规模资产组合覆盖了大批肿瘤和自免疾病，特别是中国高发的胃癌、肝癌等临床需求强烈的病种，也覆盖了近十种主要的免疫细胞，为每类免疫细胞准备了创新的弹头。</p><p>&nbsp;</p><p>而在大规模资产组合背后，是由AI大模型驱动的高通量干湿闭环生物计算引擎。</p><p>&nbsp;</p><p>这一引擎通过一系列底层技术创新的“大科学装置”，包括万亿关系的多组学免疫图谱、千亿参数的蛋白质/免疫计算大模型、亿级数据生产量的高通量免疫模拟实验系统等关键技术，形成了高效的干湿闭环，才能将解码复杂免疫系统、de novo设计全新的蛋白质药物变为可能。</p><p></p><h2>百图生科的“AI+药物研发”实践</h2><p></p><p></p><p>随着 AI 技术在越来越多的行业中落地应用，AI + 制药也成了近两年的热词。</p><p>&nbsp;</p><p>头豹研究院报告显示，<a href=\"https://xie.infoq.cn/article/d5a177e935aa7ee3b07659954\">AI 制药</a>\"是指将自然语言处理、机器学习及大数据等人工智能技术应用到制药领域各环节，以提高、优化新药研发的效率及质量，降低临床失败概率及研发成本。</p><p>&nbsp;</p><p>而百图生科的核心逻辑是，利用生物计算引擎，从海量生物数据与信息中抽取知识，绘制“BioMap”，将创新药物研发实现从“大海捞针”变为“按图索骥”。</p><p>&nbsp;</p><p>百图生科首席 AI 科学家宋乐博士表示，整个 AI 体系架构会是一个四层嵌套结构。“你可以把人想象成是一个多尺度的系统，外面是器官或组织，有细胞的协同工作，再细分是单个细胞，里面是非常复杂的蛋白质互相作用网络、蛋白质调控基因表达网络，再深一层是蛋白质相互作用。这个大模型最底层的是基于蛋白质序列进行预训练，对蛋白质结构进行预测。”</p><p>&nbsp;</p><p>具体而言，四层嵌套结构可以理解为，系统通过训练获得一组表征，这个底层的表征可以用在上层模型上作为输入，第二层模型输出又可以作为上面一层模型的输入，让整个体系里的数据流通，或是让模型之间组合在一起。最后，在细胞系统层面的模型可以和下面的蛋白质预训练模型链条产生更好的效果。</p><p>&nbsp;</p><p>当前 AI 制药仍存在诸多挑战，其中一个比较大的难点在于，如何为 AI 定义目标？</p><p>&nbsp;</p><p>在接受采访时，刘维表示，宽泛地做 AI 无法产生独特的数据，也没有独特的试验闭环，很难真正突破行业平均水平。因此，必须要选定一个特定领域，并围绕这个特定领域搭建技术能力。</p><p>&nbsp;</p><p>“从公司创立之初，我们想得比较清楚的几件事是：第一，我们一直在找一个特定针对的领域，就像我们今天做的领域很垂直，但我们相信这是一个巨大的市场。这个领域中，免疫机器人作为一种平台技术，能够解决上百种免疫疾病。第二，我们围绕这个特定领域搭建了高通量蛋白、高通量免疫所有的实验能力，以及大模型和为了训练大模型所需的数据和知识图谱。如果你希望用一个新技术去泛泛做服务，想什么问题都能解决，这是很难的。而我们找了一个足够难，但足够聚焦的方向，就是去做全新的蛋白质药物设计。”刘维说道。</p>",
    "publish_time": "2022-09-14 09:53:56",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "京东科技全链路故障诊断智能运维实践｜InfoQ大会早班车第20期",
    "url": "https://www.infoq.cn/article/0qXKT2eVDyXBLCd08LbC",
    "summary": "<p>本次大会早班车邀请了京东科技智能运维算法负责人张静，聊一聊监控、告警、故障诊断、智能化，异常检测算法在京东科技数据库、网络、资源调度落地经验。</p>",
    "publish_time": "2022-09-14 10:51:45",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "后 OpenStack 时代，以容器为代表的虚拟化技术将有怎样的演进？",
    "url": "https://www.infoq.cn/article/eB2MHKxSCVPXR7TQ9jrm",
    "summary": "<p>进入 21 世纪后，虚拟机技术进入相对成熟阶段，由于虚拟机的“笨重”，开发者们开始追求一种更加轻便的虚拟化技术。2010 年，由 NASA 和 Rackspace 联合开发的开源平台 OpenStack 诞生，帮助服务商和企业实现云基础架构服务。它将开源、开放的思想带到了云原生领域，并为云原生发展掀开了新篇章。</p><p></p><p>2020 年，OpenStack 基金会更名为开放基础设施基金会 OIF，OpenStack 从“云”拓展到了“开放基础设施”。</p><p></p><p>紧接着，OpenStack 从最初的虚拟化管理 Nova 和对象存储 Swift ，逐渐发展到包含虚拟化管理、SDN、SDS 服务编排和容器管理等功能覆盖全面的开源项目集合。同时紧跟云原生技术演进潮流，与容器、Kubernetes、AI 相关的更多开源技术紧密合作。2021 年 11 月，OIF 基金会宣布了开放基础设施的新标准 LOKI —— Linux、OpenStack、Kubernetes 等组成的开放基础设施管理软件。</p><p></p><p>在今年 4 月，OIF 发布了 OpenStack Yoga 版本，并宣布，待下一个被称为终结者的 Zed 版本发布之后，OpenStack 将以稳定的状态成为企业 IT 的生产级工具。这意味着云原生逐渐进入后 OpenStack 时代，2017 年起，各大云厂商都陆续开始包装和提供容器的商业化服务，提供基于 Kubernetes 的商业服务产品，容器技术逐渐走向成熟和标准化、商业化，成为虚拟化的新代表产品，围绕容器发展的云原生逐渐走向普适的阶段，已经应用容器的企业正在进行着云原生的新一轮技术演进。</p><p></p><p></p><h2>一、后 OpenStack 时代的 Kubernetes ：从“解决难用”到“用的好”</h2><p></p><p></p><p>数字化转型的加速增加了企业对于云原生的需求，容器技术覆盖率提高，IDC 预测，容器软件市场在近几年呈爆发式增长，并且未来五年仍然会保持超过 40% 的复合增长率。</p><p></p><p>进而，企业对容器管理的需求会直线提升，容器管理成为企业数字化转型的主战场。据 Gartner 预测，到 2025 年，成熟经济体中 85% 的大型企业将更多地使用容器管理。</p><p></p><p>如今在大多企业的业务场景中，企业组织需要确保多个容器可同时协同工作，这方面的工作大部分都是又编排引擎完成。随着 Kubernetes 的兴起与演进，目前已经克服了容器编排过程中许多技术挑战。</p><p></p><p>或许因为<a href=\"https://www.infoq.cn/article/a1rIzRu3CAsC5LXKwJ3f\"> Kubernetes </a>\"想要解决的问题太多，所以导致其复杂度很高，于是不少企业也在应用其他容器管理解决方案。然而市场数据证明，Kubernetes 依旧是大多企业的选择。CNCF 最近的一份报告显示，Kubernetes 在全球已拥有近 600 万个企业用户，成为云上应用程序主要的部署模式。</p><p></p><p>尽管 Kubernetes 覆盖率高，但这也并不意味着已经在应用它的用户满意，常被吐槽“难用但还很需要”。在 Kubernetes 的实际使用过程中，经常会遇见一些“难用”问题，比如创建容器时间过长、低吞吐量 / RPS / 突发并发、容器扩展速度慢、集群扩展速度慢、Sidecar 资源开销、资源利用率低等，为此，<a href=\"https://www.infoq.cn/article/wU2FMRIL7ZtRJffY4XVW\">英特尔</a>\"提出了创新的“SW+HW 功能解析”解决方案，开发工作主要集中在资源编排（Orchestration）和可观测行（Observability）两方面：</p><p>基于快照 + 热代码块来创建容器；分片式多调度器；弹性 POD 的自动扩展；基于遥测的快速预测，用于实时扩展的决策；动态插入 / 删除 POD 中的 Sidecar 容器；链接设备的亲和调度 / 分配 (NUMA, GPU+Smart NIC 等)；实时 “节点资源变化” 反馈给 Kubernetes 调度器。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/08/c7/08f15394b9d1fb76151b301f1b0bf0c7.png\" /></p><p></p><p>以上提到的这些技术都符合 Kubernetes 的 API 规范并可与现有的 API 兼容，确保用户在不修改已有 Kubernetes 代码的情况下便能安装使用。为了方便用户测试、评估这些技术，英特尔还直接提供了容器镜像的方式让用户可以通过 Operator 等标准的 Kubernetes 应用部署方法来安装部署。</p><p></p><p>解决完容器“难用”问题，就要接着考虑如何“用得好”的问题。“用的好”的前提是选对架构。在后 OpenStack 时代，企业使用云原生架构的目的是追求敏捷、弹性、高性能和效率。要想达到这些目的，单纯依靠软件层面的优化是不够的，以 Serverless 为例，很多部署中会出现的问题，比如函数冷启动等，都需要通过硬件层面的优化来解决。</p><p></p><p>随着数据逐渐扩散至边缘场景，越来越多的企业期望通过云原生架构实现云边端一体化协同的基础设施，英特尔一直在为此做出努力，聚焦企业发展不同阶段的不同需求，针对性提出架构优化方案。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/88/a5/885a20c34a51b80c8a7008654db265a5.png\" /></p><p></p><p>其次，企业部分广泛存在的 AI 诉求也对“用得好”提出了挑战。如今几乎每个应用功能都离不开 AI，然而 AI 模型从开发进入到生产部署阶段面临着多重困难和挑战。一般而言，AI 模型需要经过大量的调试和测试，通常需要 2-3 天才能部署上线；而且 AI 线上服务计算资源通常较固定，对于突发需求资源响应慢，又面临着业务扩展难的问题。</p><p></p><p>作为云原生的核心技术， Kubernetes 能够管理云平台中多个主机上的容器化应用，能够完成 AI 资源的统一部署、规划、更新、维护，有效提高 AI 资源管理率。此外，在基于 &nbsp;Kubernetes 的 AI 开发平台建设实践中，使用 CPU 服务器可有效利用空置资源、空闲时间，并通过 &nbsp;Kubernetes 的弹性资源调度分配给其它应用。而且 CPU 作为通用算力提供者，在采购成本、使用难度等方面有着重要优势，不仅支持 AI 运算，还可用于其他应用负载。</p><p></p><p>在 Kubernetes 发布初期，针对 CPU 和内存的管理与分配做的比较简单，随着新版本的发布，逐步有一些新的功能加进来（如 CPU Manager、Topology Manager 等），但 Kubernetes 缺省的 CPU Manager、Topology Manager 仍无法了解服务器级硬件的复杂内部架构和 CPU 本身的能力，这就可能会导致 CPU 的资源分配决策和计算性能无法达到最优。对于英特尔® 至强® 可扩展处理器来说，其架构复杂、功能强大，如果想要在上面部署 Kubernetes 集群来高效支撑云业务，就需要对其拓扑结构和 CPU 的强大功能暴露给 Kubernetes 集群，这时 CRI-RM 因此而生。</p><p></p><p>在<a href=\"https://www.infoq.cn/article/EIKBJt8LlxcbpXgNIzOm\">英特尔</a>\"研发团队的不懈努力下，如今英特尔® CRI-RM 助力下的 CPU 在 AI 场景中能够更显威力。CRI-RM 是英特尔初创的一个开源项目，其目的是通过在节点上的动态划分系统资源，配合 Kubernetes 调度器，实现在节点层面上的最优任务编排，把英特尔平台的特性完美的适配到 Kubernetes 的集群环境里。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/88/d7/8815c784e8dda369902e04044bedb1d7.png\" /></p><p></p><p>浪潮在 AIStation V3 中应用了英特尔® CRI-RM 组件，该组件可以插在 Kubelet 和 CR 之间，截取来自 Kubelet CRI 协议的请求， 扮演 CR 的非透明代理，跟踪所有集群节点容器状态，能够更好 地将处理器、内存、IO 外设、内存控制器等资源分配给应用负载。在 Tensorflow 等测试用例中，这一优化被证明能够实现高达 57.76% 的性能提升。这意味着在未对硬件配置进行更新的前提下，CRI-RM 的应用会带来大幅度的性能提升，使得用户无需在进行硬件投入便能够获得可观的 AI 训练性能提升，从而提高基础设施的利用效率，并节约了总体拥有成本。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/6c/55/6c86617876262744a37b9d3a1d811d55.png\" /></p><p></p><p>通过浪潮的实践，我们基本就能够看出，英特尔的软件开发和创新的起点就是充分利用硬件资源潜能来优化应用，加速应用负载使其在英特尔平台上以达到更好的开发和用户体验。又比如 QAT 加速卡，在云原生领域的各种网络传输模块中，它便有效提速了安全加解密（TLS）和压缩 / 解压缩的处理性能，从而帮助软件获得更好的性能。</p><p></p><p></p><h2>二、企业当下需要的是“一站式”容器解决方案</h2><p></p><p></p><p>用过 OpenStack 的人都知道，版本升级是 OpenStack 商业化应用的最大痛点。每年两次版本升级令企业真的有点吃不消，旧操作系统无法满足新版本的升级需求，用户轻易不敢进行升级。虽然说 OpenStack 将在 Zed 版本之后，从“A”开始重新命名，每年两次大版本升级改为每年一次大版本升级，但这依旧满足不了如今企业在数字化转型过程中上云的需求。</p><p></p><p>随着技术发生变革，用户需要的是一套能从产品端到服务端的一站式解决方案来满足需求。因为这些需求的存在，越来越多的团队会基于 Kubernetes 构建上层抽象，增加更多的扩展能力，以“应用”为中心构建高可扩展的云原生平台。</p><p></p><p>比如青云科技开源的 KubeSphere 项目，在 Kubernetes 之上构建的面向云原生应用的分布式操作系统，完全开源，支持多云与多集群管理，提供全栈的 IT 自动化运维能力，简化企业的 DevOps 工作流。它的架构可以非常方便地使第三方应用与云原生生态组件进行“即插即用”的集成。此外，KubeSphere 还开源了 KubeKey 帮助企业一键在公有云或数据中心快速搭建 Kubernetes 集群，提供单节点、多节点、集群插件安装，以及集群升级与运维。</p><p></p><p>基于对企业用户的需求洞察，青云科技在发展 KubeSphere 的社区的同时，还围绕 KubeSphere 这一核心产品开发了企业级容器平台—— KubeSphere 企业版。目前已经在金融、运营商、工业、教育、能源、交通物流、零售电商和政府等行业积累了大量成功经验。像中金苍穹容器平台、易方达基金 PaaS 平台、云天化集团容器云平台、中移金科容器云平台都是 KubeSphere 企业版的优秀实践。</p><p></p><p>为了真正帮助企业更好地落地云原生应用场景，青云科技广泛联合云原生生态体系各层面合作伙伴，打造开放共生的云原生生态圈。硬件层面的生态合作是其中重要的一部分，因为在当前的云原生生态环境下，云原生容器化平台上的软件应用效率和硬件技术之前的关系更加紧密，其运行更需要调动硬件的加速能力。于是拥有独特硬件黑科技优势的英特尔成为了青云科技的合作伙伴，为 KubeSphere 企业版提供了许多支持。</p><p></p><p>英特尔帮 KubeSphere 企业版实现了网络功能增强，通过开发并开源 Multus 的 CNI 插件、提供“将多个接口添加到 Pod”的功能，成功解决了因 Kubernetes 缺乏支持多个网络接口能力，而受制于单一网络解决方案的企业用户的需求。如今的 KubeSphere 企业版在优化后的 Intel Multus 解决方案的助力下，实现了更强大、更多元的网络管理和扩展能力，支持用户在创建应用负载时可以自定义选择多块网卡，同时支持网卡资源池管理。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/6d/d8/6d206ddfdf014cd64d03e71a8f9bf4d8.png\" /></p><p>图：应用负载选择多网卡</p><p></p><p>此外，为了检测 Kubernetes Cluster 中每个 Node 的特性能力，英特尔还开发了 NFD（Node Feature Discovery），而 KubeSphere 企业版深度集成了 NFD，使其节点管理得到增强。KubeSphere 企业版通过把节点更详细的 Label 发送到 KubeSphere 企业版 Master Scheduler 之上，应用负载获得了更精准的调度，使其更充分地利用硬件资源。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/66/fa/66589d13cc07722a5cf55f482ba775fa.png\" /></p><p>图：测试结果 -Node Feature Discovery 启动成功</p><p></p><p>另外值得一提的是，CPU Manager 给 KubeSphere 企业版带来的性能提升表现十分亮眼。当我们测试部署不同的 Redis pod 会发现，开启 CPU Manager 后的 Redis 的读写性能与开启前的读写性能相比，Redis 性能最高可以提升超过 9%。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/1c/76/1cfc3da0d7070d3fc19a833d36b1d376.png\" /></p><p>图：Redis 性能测试图</p><p></p><p></p><h2>三、容器好用，但也需要“注意安全”</h2><p></p><p></p><p>虚拟化技术突破了操作系统与物理硬件的局限，在异构资源整合、集中管理、提高硬件利用率等方面具有很强的优势，但这同时也增加了发生系统安全问题的概率，虚拟化的安全直接影响着云原生架构的安全，间接影响着企业数字化转型成果及业务发展。</p><p></p><p>作为云原生虚拟化常用的技术，容器确实好用，但是容器安全问题也一直是行业内备受诟病的问题。传统的容器基于 NameSpace 和 Cgroup 进行隔离，在带来轻量简洁的同时，也带来了许多安全隐患。容器作为一种相对于虚拟机来说更加轻量的虚拟化技术，容器虽然能够提供一个与系统中其他进程资源相隔离的执行环境，但还是与宿主机系统共享内核的，很容易因为隔离性不足而产生安全隐患。尤其是在多租户的场景下，一旦容器里的应用逃逸到内核，后果将不堪设想。</p><p></p><p>据 Red Hat 公司调查数据显示：有 94% 的受访者在过去 12 个月内遭遇过 Kubernetes 安全事件。而 Akamai 日前也进行了一项实验，将一个简单的 Docker 容器蜜罐用于攻击测试，结果显示该容器在 24 小时内被攻击者用于四起不同的犯罪活动。这些数据都在告诉我们，解决企业容器安全问题刻不容缓。所以很多厂商在构建企业级容器管理平台时都会着重考虑容器安全问题，像我们刚刚提到的 KubeSphere 企业版，它的一大亮点就是“安全加固”。在英特尔容器解决方案加持下的 KubeSphere 企业版，深度集成了 Kata Containers，用户可以在创建符合自身业务需求的运行时，通过 KubeSphere 企业版的管理页面进行统一管理。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/59/04/59d1182bb5dcefd7f8e0f609ce508d04.png\" /></p><p>图：一键选择 Kata</p><p></p><p>Kata Containers 的核心亮点就是采用轻量级虚拟化作为容器的隔离，使得它兼具容器的速度和虚拟机的安全隔离，这一点解决了长期以来困扰容器发展的安全隔离性不足问题，大大促进了云原生的发展。</p><p>作为符合 OCI 标准的轻量级 VM，可无缝地与 Docker 及 Kubernetes 对接。Kata Containers 运行的应用负载具备独立内核，同时借助英特尔® VT 技术，具备其他轻量级 VM 所不具备的优异性能。它整合了英特尔的 Clear Containers 和 Hyper.sh 的 runV，在能够充分利用英特尔® 架构平台性能优势的同时，还支持其他架构的硬件。</p><p></p><p>Kata Containers 的隔离原理就是在请求创建容器实例时，首先启动一个轻量化虚拟机，然后将容器镜像挂载到虚拟机里，从而在这个虚拟机里启动和运行这个容器应用程序。其本质是一个虚拟机实例，但拉起虚拟机的过程和运行在虚拟机里这个事实对用户是透明的，这种方式并不改变用户使用容器的习惯。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/e8/a1/e84428d9997821a6c222d03f3d1bc7a1.png\" /></p><p></p><p>Kata containers 可以被用在很多场景，目前云服务提供商 CSP 们的使用场景主要包括安全容器实例服务、容器运行时的业务隔离等。感兴趣的开发者可以参阅公开的应用案例集：<a href=\"https://katacontainers.io/use-cases/\">https://katacontainers.io/use-cases/ </a>\"目前 Kata Containers 2.0 已经发布，社区正在酝酿 Kata Containers 3.0 的规划和开发，其主要开发方向将聚焦于优化性能、加强安全、提高可用性和稳定性方面。</p><p></p><p>另外，一个基于 Kata Containers 的典型用例也十分值得大家去了解——机密容器 &nbsp;（Confidential containers），它是一个基于硬件 TEE 的技术方案，目前是 CNCF 的沙箱项目。机密容器是机密计算（Confidential Computing）的一个具体实现，其主要目标是对数据在使用中的保护，随着云计算的大规模部署，机密计算旨在允许将云提供商从可信计算基础（TCB）中移除，以便只有硬件和受保护的应用程序本身在可信边界内，这使租户可以放心地、安全地把业务负载转移到公有云上去。</p><p></p><p>要知道，英特尔® SGX 一直是业内机密计算方案的主要推动者。英特尔® SGX 在内存空间中“开辟”出了一个可信的、受到严密保护的安全“飞地”，可通过严格的访问控制和加密操作去保障数据完整性、数据机密性和代码完整性，确保主机操作系统、BIOS 等高等级应用和底层基础系统都不能对其随意访问。即便应用、底层基础系统在恶意攻击中受损，“飞地”也可通过基于硬件的、增强型的安全防护来阻断攻击。</p><p></p><p>同时英特尔® SGX 的鉴权能力可在阻断攻击的同时证明自己的运行未被篡改。如果需要实现数据“可用不可见”，英特尔® SGX 也能以“飞地”机制为机密计算中的数据与代码提供安全岛。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/cd/8a/cd9a502b82be2fd0b32fd5a10941c48a.png\" /></p><p></p><p>“飞地”空间越大，其能承载和提供保护的应用程序和核心数据也就越多，于是英特尔对 SGX 技术进行了全面强化，在配置了面向单路和双路的第三代英特尔® 至强® 可扩展处理器的系统中，目前双路系统中最高可支持 1TB 容量的“飞地”空间，能够让用户在云上实现更大数据量的机密计算，轻松应对更多安全挑战。</p><p></p><p></p><h2>四、写在最后</h2><p></p><p></p><p>随着人工智能、大数据等创新技术席卷大多数行业和地域，疫情防护常态化暴露出来的企业“数字缺陷”加快了数字化转型速度。企业想要成功实现数字化转型，构建云原生技术架构，就一定要利用好容器技术。</p><p></p><p>在后 OpenStack 时代，云原生未来的发展趋势就是将管理基础设施（计算、网络、存储）的负担卸载给云服务提供商（公共云 / 私有云 / 边缘云），以便开发人员可以专注于应用程序的业务逻辑而不是基础设施，从而以更低的资本性支出和管理支出、更快地使应用上市。如果更具象一点，则是将大型复杂的单体应用程序分解为小的模块化执行单元，以便于修改程序或添加功能，更好地代码重用，更少地维护开销。</p><p></p><p>作为云原生发展的基石，容器技术将再次顺应云原生发展潮流，解决上述的这些需求。随着技术的演进，企业势必会越来越重视如何使容器技术更好地为业务带来价值这件事。那在这个过程中，势必会遇见各种各样的挑战，面对挑战，我们需要的做的就是迎难而上。</p><p></p><p>对正处在数字化转型关键期的企业来说，在降本增效的大目标下，应用英特尔等厂商提供的商用解决方案也是很不错的选择，不仅能够帮助企业降低人力成本，还能够大大地提高管理效率。</p><p></p><p>更多云原生技术干货，扫描下方海报二维码，观看英特尔联合国际学术期刊《科学》共同推出的“架构师成长计划”第四期《用架构思维为云原生做减法》精彩回放！</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/bb/f2/bbc910db7a8fae8229f5bd5e0c4aa3f2.jpg\" /></p><p></p>",
    "publish_time": "2022-09-14 13:47:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "明略科技Blockformer语音识别模型在AISHELL-1测试集上取得SOTA结果",
    "url": "https://www.infoq.cn/article/utUkG1F22gfHlQoFHNAU",
    "summary": "<p>深度学习已成功应用于语音识别，各种<a href=\"https://www.infoq.cn/article/8OADODV0EZZ72TMrDvTz\">神经网络</a>\"被大家广泛研究和探索，例如，深度神经网络（Deep Neural Network，DNN）、卷积神经网络（Convolutional Neural Network，CNN）、循环神经网络（Recurrent Neural Network，RNN）和端到端的神经网络模型。</p><p></p><p>目前，主要有三种端到端的模型框架：神经网络传感器（Neural Transducer，NT），基于注意力的编码器-解码器（Attention-based Encoder Decoder，AED）和连接时序分类（Connectionist Temporal Classification，CTC）。</p><p></p><p>NT是CTC的增强版本，引入了预测网络模块，可类比传统语音识别框架中的语言模型，解码器需要把先前预测的历史作为上下文输入。NT训练不稳定，需要更多内存，这可能会限制训练速度。</p><p></p><p>AED由编码器，解码器和注意力机制模块组成，前者对声学特征进行编码，解码器生成句子，注意力机制用来对齐编码器输入特征和解码状态。业内不少ASR系统架构基于AED。然而，AED模型逐个单元输出，其中每个单元既取决于先前生成的结果，又依赖后续的上下文，这会导致识别延迟。</p><p></p><p>另外，在实际的语音识别任务中，AED的注意力机制的对齐效果，有时也会被噪声破坏。</p><p></p><p>CTC的解码速度比AED快，但是由于输出单元之间的条件独立性和缺乏语言模型的约束，其识别率有提升空间。</p><p></p><p>目前有一些关于融合AED和CTC两种框架的研究，基于编码器共享的多任务学习，使用CTC和AED目标同时训练。在模型结构上，Transformer已经在机器翻译，语音识别，和计算机视觉领域显示了极大的优势。</p><p></p><p>明略科技的语音技术负责人朱会峰介绍，明略团队重点研究了在CTC和AED融合训练框架下，如何使用Transformer模型来提高识别效果。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/a6/65/a6e84fa88bbc1655c918a17d06094f65.png\" /></p><p></p><p></p><p>明略团队通过可视化分析了不同BLOCK和HEAD之间的注意力信息，这些信息的多样性是非常有帮助的，编码器和解码器中每个BLOCK的输出信息并不完全包含，也可能是互补的。（<a href=\"https://doi.org/10.48550/arXiv.2207.11697\">https://doi.org/10.48550/arXiv.2207.11697</a>\"）</p><p></p><p>基于这种观察，明略团队提出了一种模型结构，Block-augmented&nbsp;Transformer&nbsp;（BlockFormer），研究了如何以参数化的方式互补融合每个块的基本信息，实现了Weighted Sum of the Blocks Output（Base-WSBO）和Squeeze-and-Excitation module&nbsp;to&nbsp;WSBO（SE-WSBO）两种block集成方法。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/03/12/0337ceabb5568dc3aab2a49995e86c12.png\" /></p><p></p><p>Blockfomer&nbsp;with&nbsp;Base-WSBO</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/28/56/28e71ed97b058a84f37a1799c6f35456.png\" /></p><p></p><p>SE-WSBO</p><p></p><p>实验证明，Blockformer模型在中文普通话测试集（AISHELL-1）上，不使用语言模型的情况下实现了4.35%的CER，使用语言模型时达到了4.10%的CER。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/15/0d/15074f77ef2fa69fd3cdc83b191d1a0d.png\" /></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/60/b7/6014d0450ffc361aced9dfe82bff27b7.png\" /></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/ac/ea/ac09f70ceed3ce70bac20ec306f0b0ea.png\" /></p><p></p><p></p><p>AISHELL-1是希尔贝壳开源的中文普通话语音数据库，录音时长178小时，由400名中国不同地域说话人进行录制。Papers with Code<a href=\"https://paperswithcode.com/sota/speech-recognition-on-aishell-1\">网站</a>\"显示，Blockformer在AISHELL-1上取得SOTA的识别效果，字错率降低到4.10%（使用语言模型时）：<a href=\"https://paperswithcode.com/sota/speech-recognition-on-aishell-1\">https://paperswithcode.com/sota/speech-recognition-on-aishell-1</a>\"</p><p></p><p>明略科技集团CTO<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247572207&amp;idx=2&amp;sn=d3bb69dad3e8e35cc86e2ee7793f27cd&amp;chksm=fbeb6320cc9cea36aca4b8bd95d94dc7bd03493d5f0d83559767d21b576697b0401e9aa47fdd&amp;scene=27#wechat_redirect\">郝杰</a>\"表示，明略的会话智能产品针对基于线上企微会话和线下门店会话的销售场景，语音识别团队聚焦美妆、汽车、教育等行业的场景优化和定制训练，但也不放松对通用语音识别新框架、新模型的探索，Blockformer模型的这个SOTA效果为语音识别的定制优化提供了一个高起点。</p>",
    "publish_time": "2022-09-14 14:09:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "从零开始的新跨平台浏览器：Ladybird 正式起飞",
    "url": "https://www.infoq.cn/article/bBh2olmjoYofsDa15i6B",
    "summary": "<p>近期，SerenityOS 的发起者 Andreas Kling 在博客中<a href=\"https://awesomekling.github.io/Ladybird-a-new-cross-platform-browser-project/\">宣布</a>\"了他最新开源跨平台浏览器项目 Ladybird，Ladybird 浏览器基于 <a href=\"https://serenityos.org/\">SerenityOS </a>\"的 LibWeb 和 LibJS 引擎，LibWeb 始于 2019 年开发，其 JavaScript 引擎&nbsp;LibJS&nbsp;则于 2020 年开发。</p><p>&nbsp;</p><p>Andreas 写道，他和他的团队不再只是想开发一个基于 Linux 的浏览器，而是想开发一个跨平台的浏览器，“建造一些有朝一日可能对更多人有用的东西”。根据文章末尾的常见问题解答，Ladybird 已经在 Linux、macOS、Windows 和 Android 上运行。</p><p>&nbsp;</p><p></p><h2>浏览器的诞生</h2><p></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/ac/f3/acba655911b827b9a4d39dda127cf0f3.png\" /></p><p></p><p>Ladybird 浏览器诞生于 7 月 4 日，最初是作为 LibWeb 浏览器引擎调试工具，随后 Andreas 决定继续推进并为它构建一个简单的 GUI 。然而两个月后，Andreas 发现自己使用 Ladybird 完成了一个 Web 浏览器的大部分开发工作，这也让他意识到可以将 SerenityOS 的浏览器引擎”调整为“跨平台浏览器引擎”。</p><p>&nbsp;</p><p></p><h2>基本架构</h2><p></p><p>&nbsp;</p><p>从时间上来看，LibWeb 和 LibJS 都是比较新的引擎。并且 Andreas 有开发 Qt 和<a href=\"https://www.infoq.cn/article/vVmdG3VN7CjIcdgm9RQd\"> WebKit </a>\"项目的经历，从中也吸取了一部分经验。“但所有的代码都是新的”，他在博文中表示，浏览器和库都是用 C++ 编写，并且在 2-clause BSD 许可下是免费的。“没有人可以购买该项目，但欢迎志愿者。毕竟，SerenityOS 不是一个人的表演。这项工作只有在 SerenityOS 社区的支持下才能实现，该社区已经发展到数百名贡献者，并正在帮助开发操作系统和浏览器。”</p><p>&nbsp;</p><p>当前浏览器主要组件：</p><p>&nbsp;</p><p>Ladybird&nbsp;: 选项卡式浏览器 GUI 应用程序LibWeb：Web 引擎，多种标准：HTML、DOM、CSS、SVG，……LibJS：ECMAScript 语言、运行时库、垃圾收集器LibGfx：2D 图形、文本渲染、图像格式（PNG、JPG、GIF，...）LibRegex：正则表达式引擎LibXML&nbsp;: XML 解析器LibWasm：WebAssembly 解析器和解释器LibUnicode：Unicode 支持库LibTextCodec&nbsp;: 文本编码转换库LibMarkdown&nbsp;: Markdown 解析器LibCore：其他支持功能（I/O、日期时间、MIME 数据……）Qt：跨平台 GUI 和网络</p><p>&nbsp;</p><p>LibWeb 有一个&nbsp;Platform&nbsp;层，Ladybird 在这里为事件循环、计时器、系统字体设置等注入 Qt 支持代码。Ladybird 使用 Qt 进行联网，因为多进程的 RequestServer 系统在 SerenityOS 之外还没有使用。同时，Ladybird 是单进程的，“所有这些都是暂时的，并且会随着时间而改变。”</p><p>&nbsp;</p><p></p><h2>仍处于开发初期</h2><p></p><p>&nbsp;</p><p>Andreas 坦言目前该浏览器仍处于开发初期，许多功能要么根本无法使用，要么存在错误，甚至还需要很长时间才能真正投入日常使用。“我们处于‘让它工作，让它变得更好，让它更快’中的‘让它工作’阶段中，因此，我们现阶段更多地还是在关注正确性和功能支持，而不是优化。”</p><p>&nbsp;</p><p>Ladybird 已经通过了经典的&nbsp;<a href=\"https://en.wikipedia.org/wiki/Acid3\">Acid3 标准测试</a>\"，它涵盖了基本的 CSS 布局特性和各种 DOM/HTML API。但该测试并未涵盖最新 Web 标准及功能，如 CSS flexbox、CSS Gird 等。这意味着，即便在 Ladybird 中浏览最新网站的稳定性正在提高，但仍然会出现很多布局和兼容性问题。</p><p>&nbsp;</p><p>例如用 Ladybird 浏览器浏览 <a href=\"https://www.reddit.com/\">Reddit </a>\"页面：</p><p>&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/f4/45/f4efaf6239687fcf8a52ae33941dab45.png\" /></p><p></p><p></p><h2>写在最后</h2><p></p><p>&nbsp;</p><p>传统观点认为，如果没有巨大的资本支出和人力、成本的付出，从头开始构建一个新的浏览器引擎几乎是不可能的，然而，Andreas 正在做的事情似乎反驳了这一观点。</p><p>&nbsp;</p><p>同时 Ladybird 的出现，也增加了浏览器和浏览器引擎的多样性，不少开发者表示对此项目的期待，并希望此项目和其他浏览器项目能够成功，“这似乎是一项令人难以置信的艰巨任务，但他们似乎确实有乐观的前景。”</p>",
    "publish_time": "2022-09-14 14:28:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "拆解百度智能云「云智一体」战略与架构升级背后的逻辑",
    "url": "https://www.infoq.cn/article/r87grkqtSdCMEgUbXtBg",
    "summary": "<p></p><p>InfoQ获悉，9月6日，在2022智能经济高峰论坛上，<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651139325&amp;idx=1&amp;sn=95ef8641e52ef63a3670a133ac69b43d&amp;chksm=bdb8d4ae8acf5db87f78dd81ce7f95d62aa596ccef8417359c1f3522381070884b3166d10822&amp;scene=27#wechat_redirect\">百度智能云</a>\"公布了过去一年来的成绩单，并发布了全新战略“云智一体，深入产业”及“云智一体3.0”架构。</p><p></p><p>百度集团执行副总裁、百度智能云事业群总裁沈抖表示，应对当下宏观环境挑战的一个重要方向就是产业智能化。当前，实体经济的很多领域数字化改造尚未完成， 而数字化本身并没带来效率的明显提升，智能化的渗透尚需时日，智能化对实体经济的巨大拉升作用虽有信仰者，但还没有成为广泛共识。因此，产业智能化的进程还需要踏踏实实地摸索更长时间。需要给产业、给企业持续交付真实的价值和成果，不玩噱头，让行业真真切切地尝到智能化的甜头。</p><p></p><p>“百度在人工智能领域已经摸爬滚打整10年了，对此我们越来越有信心。现在百度智能云就带着我们在产业智能化方面积累的技术能力和产业认知，发布了‘云智一体3.0’的全新升级”。</p><p></p><h2>新战略：云智一体，深入产业</h2><p></p><p><a href=\"https://www.infoq.cn/profile/02C1AF51F3D800/publish\">百度智能云</a>\"基于新战略“云智一体，深入产业”，发布了“云智一体3.0”架构全新升级。</p><p></p><p>3.0架构是从行业核心场景切入，通过打造行业标杆应用，带动和沉淀AI PaaS层和AI IaaS层的能力，打造高性价比的异构算力和高效的AI开发运行能力，进而向上可以优化已有应用、孵化新应用，向下改造数字底座，使基础云更适合AI应用，形成螺旋上升、不断进化的效果。</p><p></p><p>沈抖认为，将来，为了智能化解决产业的核心需求，必须更加深入产业。产业里丰富的应用场景，为人工智能与云的发展提供了最广阔的空间。</p><p></p><p>“除了百度，国内还没有哪家云厂商，能在每一层都有领先的自研技术、产品和生态。而百度在AI IaaS层的昆仑芯片以及AI PaaS层的深度学习框架飞桨和文心大模型，使得百度形成了‘芯片-框架-大模型-行业应用’这样一套自成闭环的智能化路径，真正做到端到端的优化。” 沈抖表示。</p><p></p><h2>自研技术贯穿云智一体3.0架构</h2><p></p><p>据百度智能云副总裁、百度智能云AI及应用产品总经理朱勇介绍，百度AI cloud是面向整个产业智能化升级的应用趋势和需求，打造的一套全栈式地端到端深度优化的基础设施，目的是构建最适合跑AI的云。百度AI cloud汇聚了百度在人工智能各个层面的自研技术，从最底层的昆仑芯片到深度学习框架飞桨，再到上层基于大模型的各种AI算法。</p><p></p><p>百度AI cloud在逻辑上包括AI IaaS和AI PaaS两层。AI PaaS是面对整个AI应用的全生命周期，从模型开发、数据标注、模型采集、模型调优、运行部署等整个全生命周期，沉淀和抽象出了一套通用基础组件，打造标准化的机器学习开发部件的部署，形成模型产线和云边端协同努力，大幅度降低整个AI模型开发部署的成本。</p><p></p><p>沈抖表示，云智一体3.0形成了一套“芯片-框架-大模型-行业应用”的智能化闭环路径，做到了端到端的优化。</p><p></p><p>在云智一体3.0的AI IaaS层，昆仑芯2代已部署在百度搜索、自动驾驶、爱奇艺等业务，以及金融、工业等行业中。作为7纳米通用型GPU，昆仑芯2代比1代性能最高提升3倍在工业质检场景，已能够替代非国产芯片，实现成本降低65%的效果。目前，昆仑芯3代已经在研发当中，预计2024年量产，将成为国内高端芯片需求的替代产品。</p><p></p><p>在昆仑芯的支撑下，百舸·AI异构计算平台升级为百舸2.0，紧随产业智能化发展需求提升AI算力。通过应用百舸2.0，药物蛋白质结构预测模型训练效率提升2倍，量产车自动驾驶迭代周期从月级别缩短为周级别。</p><p></p><p>在飞桨深度学习框架、文心行业大模型的支撑下，百度智能云整体AI PaaS的能力得到了大幅提升，全面提升后的AI PaaS进化为“AI大引擎”，可以充分利用AI算力，降低使用门槛，加速模型迭代。</p><p></p><p>会上，百度智能云还推出了智算中心1.0方案。智算中心1.0拥有大规模训练场景，能够做到低能耗、高性能运行，满足地方城市大脑、生命科学、自动驾驶等产业的发展需求。</p><p></p><h2>行业应用方案升级：汽车云、开物2.0、九州等多项发布</h2><p></p><p>在演讲中，沈抖表示，中国的数字化转型和智能化升级还在早期，仍有巨大的机会。数字化本身不是百度智能云追求的目标，而是希望通过数字化、智能化，真正提高产业的效率、效能，创造新的价值、提升竞争力。</p><p></p><p>这几年，各地数据中心、算力中心的建设突飞猛进，据统计，国内算力产业近五年平均增速超过30%，算力排名全球第二。虽然说算力的整体需求永无止境，但在很多地区和产业的关键场景下，算力不是真正的瓶颈，甚至不少地方存在超前建设、算力过剩的情况，接下来，怎么用好算力、解决产业的关键问题，才是真需求。</p><p></p><p>因此，百度认为，云计算必须与实体经济深度融合，真正深入到实体产业，去解决产业遇到的实际问题，共创价值。首先， 产业智能化将带来软硬件的升级，创造大量的产业机会和就业机会，从而带动更大规模的投资需求，改善地方经济结构。其次，产业智能化通过对关键生产环节的优化，不断创新和积累产业的核心技术，进而提升我国产业的核心竞争力。总之，产业智能化会成为中国经济高质量增长的新引擎。</p><p></p><p>结合以上判断，百度智能云从水电能、制造、政务、交通、金融这些重点行业切入，聚焦生产经营的核心场景，通过把AI技术与云技术深度融合，帮助企业推进产业智能化。</p><p></p><p>论坛上，百度智能云也带来了在行业应用方面的解决方案的一系列的全新升级。</p><p></p><p>论坛上，百度智能云首次发布了汽车云，从车企集团云、网联云、供应链协同云，三个层次深入汽车制造行业的数字化升级，解决汽车行业生产、自动驾驶测试、供应链管理三大数字化应用难题。其主要服务的车厂有一汽、吉利、东风汽车等，多数为中国销量前15的车厂。</p><p></p><p>此外，开物工业互联网平台、“九州”区县大脑也迎来了全新升级。开物2.0已积累了超200个工业解决方案，沉淀了3.8万个工业模型，在重庆、广州、苏州等全国多个城市落地。“九州”是轻量级的城市大脑方案，能缩短50%以上的部署时间，把原来以月为部署上线周期效率缩短至以周来计算。通过弹性扩容，“九州”能响应区县数字化发展需求，叠加数字农业、数字文旅等场景业务特色应用，快速将一线城市的治理经验下沉到区县。</p><p></p><p>在产业金融方面，百度智能云推出了产业数字金融方案。基于百度网盘，百度智能云推出了个人云中小企业数字化解决方案，已累计为10万家中小企业提供了存储、管理、分享等数字化升级服务，降低了中小企业使用AI技术的门槛。</p><p></p><h2>百度智能云的优势</h2><p></p><p>百度副总裁、百度智能云云产品总经理谢广军在采访中表示，如今深入产业已成为大势所趋。产业的数字化转型以及智能化升级进程为云计算领域带来了新的需求，也带来了新的挑战和机遇。构建好云计算的底座的基础之上，如何更好地深入各行业，深入各场景去推进产业智能化。深入理解场景需要怎么样的支撑？AI Cloud不仅需要有云，还需要融合到整个产业场景里“智”的能力，而且这两者要紧密地结合起来。</p><p></p><p>谢广军认为，在激烈的市场竞争格局中，百度智能云具有两点优势。</p><p></p><p>一是，百度是有强大互联网基础的科技公司，无论是公司自身的需求还是云计算本身的需求，在技术和产品底座上，已经过了充分的验证和打磨。例如，存储是云计算的重要场景，百度旗下的网盘产品聚合了国内规模最大、最高要求的存储场景。得益于长期服务于这样的场景，使得百度在存储能力上经过了长时间细致的打磨，这样一来，也大幅提升了产品整体的竞争力。</p><p></p><p>二是，在整个产业智能化趋势下，“云”和“智”结合的趋势越来越明显，其在数字化转型和智慧化升级的场景的需求已经爆发。在这方面，百度具有天然优势，因为百度做过很多AI场景的支撑，从底层的芯片到基于AI的云计算，到AI框架，到AI PaaS，再到AI的场景，这一套紧密结合的，通过这样一套端到端的基础设施，能够更好地做数字化、智慧化的转型升级。</p><p></p><h2>云计算下半场呈现三大变化</h2><p></p><p>在采访中，谢广军分享了自己对云计算行业发展演进趋势的观察。</p><p></p><h3>泛互联网之外的行业需求爆发，新型智能算力崛起</h3><p></p><p>最近几年，云计算进入下半场的论断此起彼伏。在谢广军看来，“下半场”所呈现出的一个显著的演进变化是，云计算在国内发展了十多年，原先大部分的市场空间主要在泛互联网行业，这几年，企业、政府等数字化转型和智能化升级渐成趋势，越来越多的泛互联网之外的行业对云计算的需求激增。而且，这些行业与传统互联网行业的需求不同，在工业、金融、交通、医药等行业伴随着场景的数字化变革和对算力的支持，这里面整个市场空间非常大。</p><p></p><p>第二个显著变化是，从算力角度看，传统的云计算主要是以CPU为主的算力，随着智能化大行其道，所有的应用都需要有数字化、智能化的改造，算力也将从CPU演变到新型智能算力。这里的新型智能算力就是异构计算的算力。百度的调研数据发现，从市场总盘来看，异构算力规模和传统的CPU算力规模已平分秋色，这也对云计算行业提出了新的需求和挑战。</p><p></p><p>基于对上述演进趋势的判断，百度认为，到了下半场，云计算的算力和产业是互相融合在发展，在这个过程中，很多行业要集合着场景完成智能化的升级和数字化的改造。这和原来的云计算不同。原来的云计算，互联网客户都有IT技术能力，他们需要的是更坚实的，更稳定的云计算底座。而今天，要深入到行业去做信息化变革，这时，产业场景和算力的支撑得要结合起来，而且要紧紧围绕人工智能，围绕自动驾驶、生命科学、生物医药等新兴行业深耕。</p><p></p><p>此外，随着AI应用的场景更加丰富，AI技术层出不穷，像预训练大模型，不论是云上训练还是推理，整个任务管理的复杂性会越来越高。面对这样的趋势，在算力层面需要做的支撑的是，在算力上需要有多元异构的芯片，规模化，模型越来越大，灵活调度与部署的云原生化...这些都是未来算力的发展方向。</p><p></p><h3>从云原生进入到AI原生云时代</h3><p></p><p>云原生，无疑是当下云计算领域最为火爆的概念了，大家耳熟能详。所谓云原生，是指从开发到部署的架构都是围绕着云的底层基础设施构建的，在云原生架构支撑下的云原生应用可以更极致地发挥云计算本身的价值，例如弹性。</p><p></p><p>几年前，百度提出了<a href=\"https://www.infoq.cn/article/o2BoOWQSGuwfqUUsksN7\">“AI原生云”</a>\"的概念，即AI原生的云计算基础设施，旨在建设适合跑AI的云，是为了更好的帮助产业拥抱智能化。这两个概念，一个侧重点在云，一个侧重点在AI。</p><p></p><p>从字面意思上拆解，可以看到其中的不同。Native，就是土著，天然的意识。AI Native Cloud，顾名思义是“适合AI的云”。云原生，Cloud Native，扩展一下，比如云原生应用 Cloud Native Application、云原生架构 Cloud Native Architecture，指的则是适合云的应用、适合云的架构。</p><p></p><p>如果从本质上看，传统的云，或者云原生时代的云，所有的技术能力是让云上业务的架构能够更好的利用云的优势，重点是数字化。现在的云，或者AI原生时代的云，所有的技术能力是让AI应用能够更好的运行在云上，重点是智能化。</p><p></p><p>随着产业智能化的深入，云成为AI服务提供的载体，云端的智能算力规模也越变越大。百度认为，AI和云紧密结合，可以形成更大的优势。相较于其他云厂商，百度智能云致力于打造“最适合跑AI的云”，并沉淀了诸多思考与AI工程化经验。</p><p></p><p>“随着产业趋势的变化，AI的应用或AI Critical的应用会大行其道，AI的算力已经赶上传统的算力了。现在从做云的理念来说，我们已经逐渐从云原生进入到AI原生的时代。我们主要还是需要去建设更‘适合跑AI的云’”，谢广军详细阐述了“AI原生云”背后的思考逻辑。“AI带来了新的架构，AI要支持大模型，大模型分为训练和推理，训练需要极致的、低延时的网络，需要更快速的存储，需要更好的异构算力的支持，需要把异构算力的资源能发挥到极致，需要更快的训练和推理任务的响应时间。这时候，底层需要不一样的一套新的基础架构的支撑，这一套基础架构指的就是AI的原生云”。</p><p></p><p>谢广军认为，AI时代也需要云原生的，云原生是AI算力很显著的特征，用云原生能够更好地来支撑AI整个运行效率，开发效率的提升，这就是，云原生的AI。</p><p></p><h2>沈抖谈百度元宇宙布局</h2><p></p><p>在这场论坛上，百度还谈到了在大热的元宇宙方面的布局。现阶段，在产业创新层面，各地近期积极出台元宇宙产业发展的相关规划。</p><p></p><p>沈抖认为，真正的元宇宙, 将是强大的AI能力和虚拟空间的完美结合，并且，在工业、汽车、文娱等领域率先实现价值落地。</p><p></p><p>百度智能云在元宇宙的战略定位是：提供云智一体的基础设施，支撑元宇宙多元共创。在这方面，百度已经形成了较为成熟的产品和方案：</p><p></p><p>一方面，可以为企业或政府，快速搭建元宇宙空间。例如，在北京国际电影节，近80家电影机构在希壤“名堂电影宫”进行展示和交流。另一方面，支持快速构建元宇宙消费级商业活动。与超媒体控股联合举办陈丹青艺术品拍卖，超过12万人参与，完成上百次竞拍。数据统计，目前有20多个核心行业、70多个活动及空间，已经在百度希壤元宇宙落地。</p>",
    "publish_time": "2022-09-14 14:53:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "从 OpenCloudOS 的演进之路，看国产开源操作系统的突围与进阶",
    "url": "https://www.infoq.cn/article/piTO2fkc5aSXoGR67lBF",
    "summary": "<p>自 6 月 22 日在社区开放日上发布首个源社区（L1）项目</p><p>及首个全量软件包（L3）版本后不久，在 2022 开放原⼦全球开源峰会 OpenCloudOS 分论坛上，OpenCloudOS 开源操作系统社区正式发布首个 Linux 源社区（L1）内核版本 OCKS 2207，适配主流服务器硬件设备。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/72/72f5f1141612a535313e1a2ab388cbdc.png\" /></p><p></p><p>&nbsp;</p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651122688&amp;idx=3&amp;sn=2c65886f72f1101c9ac801b349f462af&amp;chksm=bdb914538ace9d45723ad886293b3cdf52ffd9ec8ac2e22dde75b52ebd6f7bc99882e68d11aa&amp;scene=27#wechat_redirect\">OpenCloudOS</a>\" 近期一连串的“组合拳”基本符合其早期公开的技术路线图，在此期间，我们也与多位 OpenCloudOS 社区负责人及核心参与者聊了聊 OpenCloudOS 的前世今生以及社区未来方向的探索，希望能从更多维度去重新思考国产开源操作系统从哪里来、又将往哪里去。</p><p>&nbsp;</p><p></p><p></p><h2>OpenCloudOS 的演进之路</h2><p></p><p>&nbsp;</p><p>从使用免费版的开源系统到购买商业版操作系统再到自研 <a href=\"https://www.infoq.cn/article/IumxWGdCxzcU7h7NdMEX\">TencentOS Server</a>\" 操作系统最后进化至集社区之力共建 OpenCloudOS 开源操作系统， OpenCloudOS 的演进之路也是腾讯自身操作系统的发展之路。</p><p>&nbsp;</p><p></p><h3>业务场景迭代催生操作系统自研的需求</h3><p></p><p>&nbsp;</p><p>腾讯云操作系统产品负责人蒋彪表示：“腾讯从最开始的第一款产品，比如 QQ 运行的时候就需要有自己的服务器，需要在 Linux 的操作系统上运行。这种操作系统的诉求从 2000 年左右就开始有了，整个过程中腾讯也是经历了最开始使用开源的操作系统，到使用商用的操作系统，再到自己去研发操作系统的过程。”</p><p>&nbsp;</p><p>在操作系统层面，腾讯业务需求最旺盛的便是服务器操作系统，腾讯在全面上云之前，各种各样的业务都需要用自己的服务器跑在自己的 IDC 机房，而所有的服务器上面都需要操作系统。 因此无论是从成本角度考虑，还是灵活、安全、可控等角度考虑，自研 TencentOS Server 服务器操作系统都是腾讯业务发展之路上的必然选择。</p><p>&nbsp;</p><p>再到腾讯步入云时代之后，所有云上、云下的场景都需要操作系统，这些场景也由 TencentOS Server 服务器操作系统所覆盖，当然 TencentOS Server 也自然而然地开始“云化”。</p><p>&nbsp;</p><p>可以说 TencentOS Server 蕴含了腾讯在操作系统领域超过 10 年的技术积累，并经过了腾讯内部海量业务的多年验证和打磨（在腾讯内部操作系统里占比超99%，覆盖了腾讯所有的业务）；同时，依托腾讯种类繁多的业务生态（社交、游戏、金融支付、AI、安全等），其稳定性、安全性、兼容性和性能等核心能力得以进一步磨炼。</p><p>&nbsp;</p><p>随着 OpenCloudOS 社区的成立，腾讯也将&nbsp;TencentOS Server 的内核代码贡献进了OpenCloudOS 项目里。</p><p>&nbsp;</p><p></p><h3>面向云原生的下一代操作系统</h3><p></p><p>&nbsp;</p><p>在云原生浪潮席卷的行业大背景下，伴随着各种业务架构的快速迭代，业务的容器化、微服务化、Serverless 化，对底层的基础设施 (包括核心的 OS) 提出了新的挑战和要求，仅仅只是为上云场景做操作系统适配或优化已经无法满足新的业务需求。OpenCloudOS 也随之升级，针对云原生场景和需求，进行了深度的重构设计，全面拥抱云原生。</p><p>&nbsp;</p><p>OpenCloudOS 社区 TOC 主席、腾讯云副总裁郭振宇表示：“OpenCloudOS 的定位是做下一代云原生的操作系统，不单单是传统服务器的操作系统，更多的是面向云时代、覆盖全场景的操作系统，这是我们的目标。”</p><p>&nbsp;</p><p>当然除了腾讯自身的技术底座外，OpenCloudOS 社区还将纳入更多的操作系统领域的生态伙伴进来，共同开发与建设。</p><p>&nbsp;</p><p>OpenCloudOS 社区理事长、腾讯云副总裁谢明在社区开放日上提到：“OpenCloudOS 社区聚集了多元的技术力量，腾讯将基于自身在操作系统技术方面的积累和能力，与合作伙伴一起全力投入 OpenCloudOS 的建设。”</p><p>&nbsp;</p><p>截止目前，已有超过60家企业单位、高校及机构加入 OpenCloudOS 社区的共建，腾讯、英特尔、中兴、京东云、宝德、北京红旗、飞腾、浪潮、龙芯中科、OPPO、中科方德、兆芯、大禹智芯、清华大学、北京大学等都是社区重要成员。</p><p>&nbsp;</p><p>&nbsp;</p><p></p><h2>已经有其他国产开源社区了，为什么还要再成立一个？</h2><p></p><p>&nbsp;</p><p></p><h3>从“参与开源项目”到“成立开源社区”的认知转变</h3><p></p><p>&nbsp;</p><p>在 TencentOS 开源之初，腾讯并没有考虑社区方案，当时团队的工作重心主要是一些开源项目。那个时间段也正是国内操作系统开源之风兴起之时，颇有你方唱罢我方登场之意，一时间“KPI 开源”等论调甚嚣尘上。</p><p>&nbsp;</p><p>“的确当时行业里有很多关于 ‘KPI 开源’的声音，但我认为很多人将 ‘KPI 开源’跟‘表面开源’混为一谈了。‘KPI 开源’其实可以分为两类，一类是没有实际意义的贡献，比如为项目代码加空格、改注释等没有实际价值的 commits；但另一类并不一定是无价值的——它有良好的 KPI 目标驱动，且目标本身也有意义、有价值。”OpenCloudOS 社区秘书长、腾讯开源联盟主席单致豪表示。</p><p>&nbsp;</p><p>OpenCloudOS 社区 TOC 副主席、中科方德软件有限公司高级副总裁龚文补充称：“对于‘KPI 开源’，我认为不必关注一个、两个具体的点。现在中国 Linux 产业的规模小，现在就是要让尽可能多的人参与进来，百花齐放、百家争鸣，这个池子的水越来越多了，就会有更好的技术和产品出来，所以不用纠结那些，只要开源了，它的趋势就是好的，我们就应该鼓励它。”</p><p>&nbsp;</p><p>随着开源池子里的水越来越多，国家层面、公司战略层面对开源的重视程度越来越高，腾讯操作系统团队开始思考从公司角度出发是否应该承担更多的责任？仅仅是简单参与一些操作系统开源项目是否真的足够？</p><p>&nbsp;</p><p>成立开源社区似乎是一条能够解决这个问题的路。</p><p>&nbsp;</p><p></p><h3>“全链路自主可控”的市场需求</h3><p></p><p>&nbsp;</p><p>光有成立社区的想法还不够，如果找不到差异化的优势，连内部都很难认可这一方案。毕竟 OpenCloudOS 社区成立之前，行业里已经出现了国产操作系统开源社区了，再做一个不就是重复造轮子？</p><p>&nbsp;</p><p>蒋彪提到：“最开始提出创建社区这一想法的时候，大家的第一反应就是，为什么有其他社区以后，你还要搞？”</p><p>&nbsp;</p><p>在对市面上已有的社区和产品进行分析之后他们发现，其他社区更专注于技术的协同、能力的分享，而在社区本身的输出上还有一定空白，没有一个社区能够真正给到中小企业安全可靠的操作系统产品。</p><p>&nbsp;</p><p>腾讯操作系统研发负责人王佳提出：“当前中国可能更需要的是一个能够提供非常稳定、可用的操作系统基础设施的开源社区。我们更多考虑的不是头部的公司，而是中小型企业，对他们而言，想要的是有一个即拿即用的、符合标准的、供应可靠的操作系统产品。”</p><p>&nbsp;</p><p>后来经过反复沟通、澄清，比如 OpenCloudOS 社区从 L1 到 L3 <a href=\"https://www.infoq.cn/article/h4g17zGGfVYHzpvrj2gD\">全链路自主可控</a>\"的定位，跟其他社区的定位是不同的等等，最终赢得了团队成员以及生态伙伴的理解与认可。</p><p>&nbsp;</p><p>在谈及“全链路自主可控”的时候，我们还与几位老师聊到了另外一个颇具争议点的话题“国产自研”。近年来随着国际形势剧变，我们在多个关键技术领域被“卡脖子”，“国产”这一话题也成为了强技术领域的核心议题之一，操作系统自然不例外，但是很多网友表示“基于 Linux 内核的操作系统只是换了个皮肤，谈不上国产”。</p><p>&nbsp;</p><p>对此，蒋彪表示：“首先，从技术层面，国内的企业现在完全有能力从头写一个操作系统出来，但是如果没有配套的生态，这个操作系统也就失去了实际的意义；其次，从社区的角度来说，因为 Linux 开源生态里面数千个这样的项目，其实它并不属于任何一个国家，不能从观念上去排斥它，说它就不是国产的；最后从目的层面，国产自研其实主要就是为了实现自主可控，我们做 OpenCloudOS 社区其实就是希望能够从 L1 的级别去做独立的维护，从而能实现 L1 到 L3 的自主可控。而且维护的过程当中也会加入自己越来越多纯自研的项目，进而贡献到相应的 L0 社区里面去，随着时间的积累，实际上整个社区会变得越来越往L0的方向走，最终形成一个完全自主可控的东西，这会是一个循序渐进的过程。”</p><p>&nbsp;</p><p>OpenCloudOS 社区 TOC 委员、中兴通讯操作系统业务负责人之一蒋学鑫提出：“国内操作系统研究起步较晚，通过社区开源模式，聚集国内力量共建操作系统生态是一个重要途径。”</p><p>&nbsp;</p><p>几位 OpenCloudOS 社区核心参与成员也表示，万一出现极端情况，我们完全有能力自己把它维护起来，实现国内的内循环，这样我们的目标就达到了。当前阶段，自主可控才是国产操作系统的重中之重，L1-L3 的独立维护便能实现这一点，后面随着行业的发展，从 L1 到 L0 也将是水到渠成的事情。&nbsp;</p><p></p><p></p><h3>大规模场景验证的先天优势</h3><p></p><p>&nbsp;</p><p>除了认知转变和市场需求外，还有原因，或者说是腾讯的自身优势——大规模商用场景。</p><p>&nbsp;</p><p>前面提到中小型企业需要的是稳定可靠、即拿即用的操作系统，要实现上述需求，除了要满足供应链安全以外，还需要大规模商用环境的验证。以前 CentOS 为什么应用这么广？最核心的竞争力是在于它背靠红帽企业版这样一个商业版，给到了它大量的场景验证。</p><p>&nbsp;</p><p>从这个角度来看，腾讯有着先天的优势。腾讯自身有着非常复杂的业务场景，ToB、ToC 几乎所有的业务基本上都有覆盖，能够提供大规模的验证场景。相比之下，常规的操作系统软件厂商在研发出系统后，大都只能通过自己的小范围测试来保证质量，很难有丰富的场景去做相应的验证、创新。</p><p>&nbsp;</p><p>截至目前，OpenCloudOS 社区及衍生版本装机量累计超过 1000 万节点，覆盖了银行、保险、证券等 12 大行业，并经历了海量场景长时间的考验。</p><p>&nbsp;</p><p>龚文指出：“因为我们是操作系统厂商，目前在社区主要做的工作之一是基于 OpenCloudOS 的版本，做一些场景验证。通过我们测试和验证，确实发现 OpenCloudOS 在内核里边加入的一些针对云计算环境的优化，比其他版本的效果要好很多。”</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p></p><h2>接下来的主要目标是什么？</h2><p></p><p>&nbsp;</p><p></p><h3>完善社区治理工作</h3><p></p><p>&nbsp;</p><p>为什么说是完善社区治理工作？因为从社区建立之初，这个挑战一直存在。</p><p>&nbsp;</p><p>王佳表示：“这里挑战还是挺大的，基于社区的开发模式，我们也没有经历过。虽然我们之前有参与了很多社区项目，但更多是一些补丁的贡献，跟真正去参与社区的运营是不一样的。比如大家来自各个不同公司或者研究机构所带来的沟通问题，以及一些第三方开发者协同的问题等等，这一块挑战很大。从最开始开发的一些基础设施这一块，就跟之前很不一样，之前腾讯内部已经有很成熟的一套系统，现在切到社区，社区本身就是一个新的模式，再加上各个公司之间大家的习惯又不一样，大家在一起去协同开发，其实挑战真的很大的。”</p><p>&nbsp;</p><p>单致豪补充道：“社区生态的扩大离不开人才。许多社区工作，如社区章程、贡献者协议等的从零到一搭建，都需要人的投入，包括理事会、技术委员会等也涉及到非常多的人。但成员的扩大也意味着社区治理难度的增大。自成立之初，OpenCloudOS社区定位就是中立开放的开源社区，这意味着任何一个环节都需要考虑所有参与成员的感受，所以我们必须在沟通上投入更多，难度也会很高。”</p><p>&nbsp;</p><p>对于当下及未来的社区治理，王佳持乐观态度。他认为当前整个社区处于加速磨合的阶段，通过各个兴趣小组 SIG 里的配合，慢慢会形成一套既有的团队配合模式；而且因为当前整体的工作没有可以照搬的形式，所以各个团队之间都是在摸索着前进，反而能够催生一些有趣的东西，因而大家的积极性都还挺高。</p><p>&nbsp;</p><p>“其实在业界这方面的经验也是比较少的，就拿红帽主导的 Fedora 社区来讲，他们里面也是非常纯粹的开发模式。对于 OpenCloudOS 来讲，这就是一个全新的开始，我们也希望在里面形成我们觉得有特色、有价值的模式可以给后来很多开发者去共享。”王佳说道。</p><p>&nbsp;</p><p>当前，OpenCloudOS 社区的章程、贡献指南、CLA、COC，包括组织架构理事会、TOC、SIG 组等已经在逐步完善中，但是这对于社区治理工作而言，还只是第一步。</p><p>&nbsp;</p><p></p><h3>探索社区可持续性</h3><p></p><p>&nbsp;</p><p>探索社区发展的可持续性同样也是 OpenCloudOS 接下来的重要目标。</p><p>&nbsp;</p><p>知乎上有一个阅读量 40 万+ 的一个话题，叫“如何看待国内开源项目的不可持续性”，其中获赞最多的一个答案是“没有商业模式”。</p><p>&nbsp;</p><p>对此，王佳称在社区的筹建过程中，可持续性是他们重点考虑的因素。一个社区不是一天、两天存在，或者一年、两年运作一下的事情，成立社区首先要考虑的便是可持续性，如何保持它持续的活力、生命力。</p><p>&nbsp;</p><p>“拿一个项目或者一个社区来讲，如何可持续？最重要的一点是这个项目、社区输出的技术也好、产品也好，本身是有被需要的。商业投入只是一个辅助，如果这个东西其实不被需要的话，你投入再大，它也无法持续，这个项目也会无疾而终。”王佳补充道。</p><p>&nbsp;</p><p>对于这个话题，蒋彪认为一方面基础软件这样的产品，是一个需要长期、持续、大量投入的产品，如果没有一定的商业模式做支撑，是很难有商业公司参与进去并获得回报的，没有回报，对于商业公司来说没办法投入这个事情。之所以目前国内头部的云厂商能做大规模投入，是因为基于自身庞大的业务诉求，大规模应用之后的收入规模能够覆盖掉OS相关的边际成本；另一方面，纯操作系统、纯基础软件这样的领域，如果真是要得到长期的发展，尤其是以开源的模式发展的话，它必须要有相应的商业支撑，因为只有商业版的支撑，才能保证社区版可靠、稳定的质量，这也是相辅相成的一个关系。</p><p>&nbsp;</p><p>对于“没有商业模式”这一点，龚文认为所有的商业模式根本动力还是来自于需求、生态链的连接。而且只有在这个产业做大了，池子里边的水足够多了，才会逐步地形成一些模式，而这个模式的核心就是让生态里所有的参与者都能够有所得。</p><p>&nbsp;</p><p>当前阶段，对于产业生态的搭建，我们更多看到的是大厂多去贡献，从而增加自身的品牌影响力，小厂多去参与，在参与过程中能够形成一些产业的生态链，并在这个生态链上找到自己的一些位置，以及探索出适合自己的一些模式。</p><p>&nbsp;</p><p>“对于商业模式的探索或者说是产业生态的搭建，我认为比较难的有两点：一个是人，我们在国产的生态里边，参与的人还是少，厂商少，开发者少，高手更少。”</p><p>&nbsp;</p><p>“另一个是怎么能够鼓励更多的社区发展起来，鼓励更多的操作系统厂商、基础软件厂商、应用厂商、驱动厂商来参与，这些可能需要产业内外部环境的成长和完善，要鼓励开放、合作，避免人为设置不合理门槛，避免恶性竞争。”龚文补充道。</p><p>&nbsp;</p><p>同样，社区的持续性是伴随社区全生命周期的大事，而良性的商业模式的探索则是实现社区可持续的必由之路。</p><p>&nbsp;</p><p></p><h2>&nbsp;</h2><p></p><p></p><h2>对国产操作系统的未来展望</h2><p></p><p>&nbsp;</p><p>从采购现成产品到自研再到自主可控，内部需求和外部环境的变化正在加速国内操作系统的进化升级，下一个阶段，比如全真互联的时代到来，国产操作系统有没有弯道超车的可能呢？</p><p>&nbsp;</p><p></p><h3>技术更替的客观规律</h3><p></p><p>单致豪表示：“机会很大，之前Gartner提出每三年就有新的技术出现，随着现在技术迭代的不断加快，应用场景的不断增多，以及‘下一代技术’如全真互联等场景发展的繁盛，我相信未来不同的地域、国家，会演进出更多的技术栈。”</p><p>&nbsp;</p><p>王佳特别指出，一方面，由于Linux 过于庞大、复杂，而在全真互联时代，很多实体的异构性是很大的，有的非常大，有的非常小，Linux 面对这种场景的时候是相当吃力的；另一方面，从趋势来看，目前在学术界、商业界很多技术都在往微型化方向去转，比如说内核，现在有相当多的团队在研究偏微内核的一些场景。</p><p>&nbsp;</p><p>面对一些边缘的场景，哪怕是在上面放一个裁剪后的 Linux 系统，仍然过于庞大，甚至它的芯片平台，硬件的能力根本就不足以跑一个 Linux，那这个时候是否会有一些新的操作系统，从一开始就是为这些场景去设计的呢？只要技术会更替，那么就会有机会。</p><p>&nbsp;</p><p></p><h3>大规模多场景业务催生新技术</h3><p></p><p>前面有提到大规模场景验证是腾讯的一大优势，同样放大一点来看，相比于国外，中国市场的场景规模同样赋予了技术上弯道超车的无限可能。</p><p>&nbsp;</p><p>对此龚文表示：“为什么我们的 AI，还有互联网在一些领域都实现了弯道超车？是因为我们有足够大的市场规模，有足够丰富的场景，你把整个生态做起来过后，你就会发现，只要把中国的问题解决好了，需求满足了，完全可能实现弯道超车。”</p><p>&nbsp;</p><p>OpenCloudOS 社区 TOC 委员、北京红旗软件技术总监李士勇认为，在自动驾驶、5G、人工智能这一类国内领先的领域，国产操作系统是有可能率先实现弯道超车的。</p><p>&nbsp;</p><p>大禹智芯 CTO 王昕溥补充道：“要抓住一些新的技术，能够做到一些协同的突破，比如 5G 也好，AR/VR 也好，能够在软件和硬件上有所结合，这样才能实现整体技术的弯道超车，能够带动整个操作系统和软件的发展。”</p><p>&nbsp;</p><p>当前在很多强专业的新兴领域，国内很多企业都走在了世界前列，比如说车载操作系统，业务上有需求，场景上能验证，在市场环境上是领先于国外的。国内众多的业务场景将进一步催生出更多的细分技术领域，而在这些细分领域，很可能我们将会是引领者而非跟随者。</p><p>&nbsp;</p><p>&nbsp;</p><p>采访嘉宾介绍：</p><p>&nbsp;</p><p>郭振宇 OpenCloudOS 社区 TOC 主席、腾讯云副总裁</p><p>单致豪 OpenCloudOS 社区秘书长、腾讯开源联盟主席</p><p>蒋彪 OpenCloudOS TOC 成员、腾讯云操作系统产品和研发负责人</p><p>王佳 OpenCloudOS TOC 成员、腾讯操作系统研发负责人</p><p>蒋学鑫 OpenCloudOS 社区 TOC 委员、中兴通讯操作系统业务负责人之一</p><p>龚文 OpenCloudOS 社区 TOC 副主席、中科方德软件有限公司高级副总裁</p><p>李士勇 OpenCloudOS 社区 TOC 委员，北京红旗软件技术总监</p><p>王昕溥 大禹智芯 CTO</p>",
    "publish_time": "2022-09-14 15:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "CTO在企业数字化转型的过程中扮演什么角色 | 第三期完整版（上）",
    "url": "https://www.infoq.cn/article/ASFrj4IwtQjK9eBpSOAZ",
    "summary": "<p>《行知数字中国》第三期，InfoQ邀请到了过去30年亲历过中美高科技行业、零售业、金融业和制造业等不同行业的 IT 老兵向江旭。</p>\n<p>他曾在引领科技创新潮流的硅谷深耕技术研发，回国后赶上中国蓬勃发展的移动互联网时代，又以技术管理者的身份亲历了数家企业的数字化转型历程，在一次次跨越边界、不断探索的过程中，他对”数字化转型“的理解始终如一。在本期视频中，他将结合其亲身经历，分享数字化转型和创新的经验和教训。</p>\n<p>本视频为第三期完整版的（上）集。</p>",
    "publish_time": "2022-09-14 15:18:41",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "React 老矣，我建议大家用用别的框架",
    "url": "https://www.infoq.cn/article/YZMFbo42uyHdps9WiQif",
    "summary": "<p>如今，纵观各类招聘网站上的前端职位，大家往往都会看到一个熟悉的字眼：React。虽然企业雇主也经常会列出其他一些类似的前端框架选项，但React的地位几乎是雷打不动。</p><p>&nbsp;</p><p>但面对这样的现实，请原谅我始终无法理解。除了流行，React到底还有什么优势？</p><p>&nbsp;</p><p>首先我想澄清一点，我对React没有任何敌意。我知道它挺好，而且如果需要开发庞大复杂的前端项目，我其实也并不抗拒使用React。</p><p>&nbsp;</p><p>React的出现，为其他框架当前及未来的功能规划奠定了基础。Vue 3及其组合API明显是受到React hooks的启发。Svelte中的很多约定就来自React。至于我最喜爱的Vue框架Nuxt，它的大部分设计思路都来自React的元框架Next。总而言之，整个基于组件的前端设计和开发模型，特别是目前的整个生态系统，都离不开React的鼎力支持。</p><p>&nbsp;</p><p>但就个人观点，我还是觉得React像是那种开创了流派的祖师级老电影、音乐专辑或者电子游戏。它的伟大体现在那个时间点上的开创性，但时至今日自身的绝对价值其实已经很有限了。</p><p></p><p>好吧，这话可能说得有点狠。毕竟一提到开创性的老电影，大家首先想到的就是《公民凯恩》，React跟其他框架间的差距肯定不像《公民凯恩》相较于后来的经典佳作那么大。我的观点很简单：</p><p>&nbsp;</p><p>React已经老了，只是经常用它的朋友们还没有意识到它老到了什么程度、引发了哪些问题。</p><p>如果只用React，那可能会觉得这框架不错啊，而且一直在努力改进。确实，React在很多方面都是越来越好，但这并不能改变它的发展速度和功能上限已经长期跟不上同类方案的事实。</p><p>总之一句话，React表现得不错，只是不像其他框架那么好。</p><p>&nbsp;</p><p></p><h2>工作中的最佳选项</h2><p></p><p>&nbsp;</p><p>假设大家身为某家科技初创公司的CTO，或者是打算开发某网络软件新产品的个人创业者。</p><p>&nbsp;</p><p>我们面前摆着新项目的蓝图，可以随意选择自己喜爱的技术进行构建。没有约束，也不设产品生命周期限制，那么你会选择哪一种前端框架？</p><p>&nbsp;</p><p>（有些朋友可能会抬杠说，不用前端框架也行。但对于任何成规模、比较复杂的项目来说，不用前端框架肯定不是什么好主意。）</p><p>&nbsp;</p><p>要做出选择，先要考虑以下几项条件：</p><p>&nbsp;</p><p>性能学习曲线绑定包大小可扩展性社区与支持资金支持开发者体验人才供应</p><p>&nbsp;</p><p>而有没有一种可能，从这么多角度来论证，其实React并不是什么好选择。</p><p>&nbsp;</p><p>下面咱们逐一探讨。</p><p>&nbsp;</p><p></p><h3>性能</h3><p></p><p>&nbsp;</p><p>大家可以通过多种不同指标来衡量性能。但无论关注哪个具体方面，React都称不上顶级水准。Vue、Svelte、Solid、Inferno等工具的性能总体上都要好于React。根据实际需求，大家甚至可以通过Alpine或者Petite Vue等让性能更上一层楼（虽然我觉得这两种跟其他框架并不算同一类方案）。</p><p>&nbsp;</p><p>React的性能不佳应该已经是个共识，所以这里无需继续赘述。所以我认为，如果大家希望让新项目拥有强大的性能表现，那React就可以直接被排除在外。</p><p>&nbsp;</p><p></p><h3>学习曲线</h3><p></p><p>&nbsp;</p><p>假设你对前端框架一无所知，那React也绝对不是最好学、最容易上手的选项。</p><p>&nbsp;</p><p>JSX的实质，就是笨拙地把HTML硬塞进JavaScript函数返回。你以为这就够糟了？不，更糟的是你在React里不用JSX。</p><p>&nbsp;</p><p>除了JSX，React本身也有不少独特的约束和毛病（比如提供两种完全不同的语法，但二者完全无法互操作）。</p><p>&nbsp;</p><p>在React中，其他前端框架能够帮我们轻松打理的小事，往往还是需要手动干预或者借助大量样板文件（甚至二者兼有）。</p><p>&nbsp;</p><p>几乎每种前端框架都把用户设想成普通人，但React不同，它最早是专为Facebook的工程师们打造的。虽然经过多年发展，它已经成为一种比较通行的市场化产品，但即使到现在，这样的出身仍然给React留下了深深的烙印。我们还是可以看到其中留下的早期决策与优化痕迹。</p><p>&nbsp;</p><p>至于其他问题，那可太多了。万恶之源useEffect，不能在JSX中使用某些标准HTML属性（因为JSX无法区分React prop和HTML属性），记忆化，只能靠短路运算符模仿出来的虚假条件，以及要求开发者自己防止无限循环等等……其实连这里的循环都是假的，必须靠数组方法才能实现。不说了，说不完。</p><p>&nbsp;</p><p></p><h3>绑定包大小</h3><p></p><p>&nbsp;</p><p>这一点跟速度类似，但我觉得还是有必要区分开来。哪怕下载包大一点，但实际使用时性能更好，那也没啥问题。但React可不是这样。</p><p>&nbsp;</p><p>React软件包相当臃肿，这个大家都知道了，我也不多废话。</p><p>&nbsp;</p><p>我想强调的是，有些人觉得React大多数情况下会从缓存中加载，所以绑定包大小无所谓。这种认知最早是假的，后来现代浏览器让它成了真，可最近的安全升级开始阻止域之间的缓存共享，所以又成了假的。</p><p>&nbsp;</p><p>另外，Preact虽然表现不错，但还没办法跟React无缝对接。而且Preact的包大小跟其他前端框架比也没有太大的优势。</p><p>&nbsp;</p><p></p><h3>可扩展性</h3><p></p><p>&nbsp;</p><p>虽然React对应的企业应用规模肯定是最大的，但我觉得吧，数量跟质量并不是一回事。</p><p>&nbsp;</p><p>从Vue到Svelte，再到Angular和Ember，每一款主流前端框架都拥有类似的大规模执行能力。他们的网站主页上，也不乏一个个声名显赫的重量级客户徽标。</p><p>&nbsp;</p><p>所以React没什么特别的，只是案例最多罢了。</p><p>&nbsp;</p><p>如果大家有很强的从众心理，那我也无话可说。但客户多真的不代表React就一定更优秀，它只是出现在了充满机会的时代。</p><p>&nbsp;</p><p></p><h3>社区与支持</h3><p></p><p>&nbsp;</p><p>没错，React背后的社区规模最大，但这还是不足以支撑React就最好的结论。</p><p>&nbsp;</p><p>大社区也有负面影响，特别是对React这类“无倾向性”框架而言。社区过大可能对应着太多可供选择的套餐，太多相互冲突、彼此对抗的观点，逼着用户在其中站队，然后承受随之而来的一切。</p><p>&nbsp;</p><p>不仅如此，社区太大，甚至不一定能让产品越变越好。</p><p>&nbsp;</p><p>最初，更多的参与者确实能不断带来好的功能特性。但这里存在一个收益递减点（即不断上升的沟通成本，逐渐开始减慢、而非加快项目发展速度）。除此之外，社区的参与人数和社区质量间也没有必然关联。</p><p>&nbsp;</p><p>当然，我理解想要去爆满的餐厅吃饭那种心情，这似乎能给人一种安全感。毕竟哪怕不好吃，还有那么多人跟我一起上当呢，这波不亏。但哪怕人再多，都无法改变“不好吃”这个基本事实。这跟愿意来吃的人是多是少，真的没什么关系。所以我们用不着非往最火爆的餐厅去挤，挑一家适合自己的、安静享受一顿美食，不就足够了？</p><p>&nbsp;</p><p></p><h3>资金支持</h3><p></p><p>&nbsp;</p><p>有些人总担心自己使用的框架，会在某一天突然消失，由此失去支持和维护。对他们来说，出自Facebook系的React天然值得信任。但问题是，其他前端项目的资金支持有那么不堪吗？</p><p>&nbsp;</p><p>Angular的背后可是谷歌，Vue则是历史上最成功、资金也最充裕的开源项目之一。Vercel目前至少雇用了两位Svelte维护者（其中包括Svelte的缔造者）全职负责项目管理。至于Solid，已经拥有超过100名贡献者和至少六家主要企业赞助商。</p><p>&nbsp;</p><p>所以，资金支持对各大主流前端框架来说都不是问题，React在这方面同样不算占优。</p><p>&nbsp;</p><p></p><h3>开发者体验</h3><p></p><p>&nbsp;</p><p>React确实是应用范围最广的前端框架，知名度也是一时无两。但在今年的JS现状调查报告中，React的开发者满意度已经不及Solid和Svelte。至于受关注度，React落后于Svelte、Solid和Vue，甚至已经跌破50%。</p><p>&nbsp;</p><p>多年以来，React的用户满意度和关注度一直在稳步下降，采用率也停滞不前。</p><p>&nbsp;</p><p>当然，这类调查问卷只能作为参考，在问题的表述方式上稍做手脚就能得出不同的答案。但其他同类调查也发现了类似的趋势。在Stack Overflow的调查中，React的受欢迎度远低于Svelte，仅略微高于Vue。</p><p>&nbsp;</p><p>有趣的是，Scott Tolinski最近提到，他的一位开发者放弃了薪酬丰厚的React职位，宁愿拿一半的工资也要加入Tolinski领导的SvelteKit项目。</p><p>&nbsp;</p><p>当然了，并不能用这个例子证明开发者连钱都愿意放弃，就为了离React远一点。但至少能够看出，React带给开发者的使用感受实在称不上好。</p><p>&nbsp;</p><p></p><h3>人才供应</h3><p></p><p>&nbsp;</p><p>这方面，React确实堪称一骑绝尘。如果想让新人快速理解之前的开发资产，那React的优势可太明显了。</p><p>&nbsp;</p><p>但是吧，我觉得单这一点不足以让React脱颖而出。</p><p>&nbsp;</p><p>鉴于选择React之后，应用程序的绑定包本身就更大、速度更慢而且复杂性更高，用这么多弊端来换取所谓项目接管期间的一点点便利，无疑是在牺牲长远收益寻求眼下省事。翻译翻译，这不就是典型的技术债务吗？</p><p>&nbsp;</p><p>现在省下的几个礼拜，未来可能需要几个月甚至几年来偿还。所以虽然React在这方面占优，但大家最好还是认真核算一下，没办法无脑选它。</p><p>&nbsp;</p><p>另外，了解React的朋友想上手其他前端框架，应该不是什么难事。没错，不同框架间总有一些细微差别和小怪癖，但其中遵循的设计理念还是大体相同的。任何熟悉React的优秀开发者，也都能在其他框架上获得同样的工作成效。</p><p>&nbsp;</p><p>我承认，商业世界从来没有好坏，只有权衡取舍。开发速度很重要，前面提到的每一点也都很重要。所以，您的实际情况可能证明，哪怕是React速度更慢、绑定包更大、复杂度更高，它也仍然值得选择。是的，我都理解。</p><p>&nbsp;</p><p>但大家做出的选择，最终也将成为与竞争对手在市场上搏杀时的一张牌。选得好就是好牌，反之亦然。如果大多数对手也选择React，那大家就是烂牌对局、菜鸡互啄。</p><p>&nbsp;</p><p>而如果能选得更好，也许就能压制对方的牌形。</p><p>&nbsp;</p><p></p><h2>批评了半天，React为什么还是傲视同侪？</h2><p></p><p>&nbsp;</p><p>因为很多人在做选择时，往往是比较草率的。React之所以现在受欢迎，就是因为React之前受欢迎。</p><p>&nbsp;</p><p>在真正占领市场之前，人们其实是出于其他理由去选择React的。也许因为它能解决开发者面对的实际问题，也许因为它比较新奇有趣，或者是其他什么原因。但可以肯定的是，当时人们选React绝不是看中它更好就业，或者是市场普及率最高的框架。而时过境迁，现在大家再选择它，唯一的理由就是它够老、够踏实。</p><p>&nbsp;</p><p>企业选它，因为人才市场上懂React的群体很大；求职者学它，是因为人才市场上企业想要招聘React开发者。这是个自我强化的循环，一个自我实现的预言。</p><p>&nbsp;</p><p>于是React成了默认选项，只要没有充分的理由，更多人只会以无所谓的态度接着用。</p><p>&nbsp;</p><p><code lang=\"null\">while (reactIsPopular) {\n  reactIsPopular = true\n}</code></p><p>&nbsp;</p><p>“毕竟没人会因为用了React而被解雇”，这话倒也没错。React是个安全的选择，可能不是每个人的最爱，但至少不会惹出大麻烦。它，还是能干活的。</p><p>&nbsp;</p><p>所以只要没有强烈的业务需求，求职者和招聘方都可以接受围绕React建立起来的行业现状。只要能把双方对接起来，React的作用就已经达到了。</p><p>&nbsp;</p><p></p><h2>这一切会改变吗？如何改变？</h2><p></p><p>&nbsp;</p><p>我其实一直在关注事态的变化。</p><p>&nbsp;</p><p>但要说答案，我也没有。根据之前提到的几份调查报告，React的采用率确实出现了停滞。也不能说不再增长，只能说React的增长跟不断扩大的市场本体之间保持了同步，三年来份额一直维持在80%左右。</p><p>&nbsp;</p><p>但终有一天，我相信这种循环会中断。但我不知道具体的导火索会是什么。</p><p>&nbsp;</p><p>也许是个量变引发质变的过程。回想起来，很多趋势来得看似突然，但实际上一直在随时间推移而积蓄力量。也许其他前端框架更好地证明了自己，并逐渐削平了React在人才储备方面的优势，于是企业开始向其他方案敞开怀抱。</p><p>&nbsp;</p><p>也可能会有部分企业触及React的性能上限，并结合业务需求转向性能更强的选项。比方说，如果公司的业务对移动端性能有着极高要求，而且必须能够在设备配置差、网络不稳定的区域内提供良好体验，那React差出的这部分性能就足以促成改变。</p><p>&nbsp;</p><p>但对大多数企业来说，情况还没那么极端。大部分旧项目实在没必要做迁移，性能困扰虽然偶然出现，也绝不至于要因此推动大规模重构。所以继续用React完全没有问题，它在很多场景下已经完全够用了。</p><p>&nbsp;</p><p>所以没准市场就固化在了这一刻，再没有谁能真正挑战React的统治地位。等到它真正宣布退位的时候，也许我们已经彻底抛弃了前端框架，那时候主流浏览器、特别是JS已经扩展到了不需要它们的地步。这就是所谓后框架时代。</p><p>&nbsp;</p><p>还有一种可能，React在事实上已经过时了，只是在宏观统计上还体现不出来。目前人才市场上的招聘需求，反映的是企业在很久之前做出的框架选择。正如核酸测试体现的是几天、甚至几周之前的区域内疫情状况一样，目前的招聘态势也许也存在滞后。</p><p>&nbsp;</p><p>我不知道未来的前端会是什么样子，应该没人能做出准确的预言。但可以肯定的是，React还能风光上好一阵子。</p><p>&nbsp;</p><p>如果大家正在学习前端开发，想用这个为自己找份工作或提升职业水平，那React是个不错的选项、也是非常安全的方向。</p><p>&nbsp;</p><p>但我也希望能有越来越多的开发者积极探索其他选项，也希望企业能给他们更多尝试的机会。近年来，前端开发领域的惊喜都来自Vue和Svelte。以我个人的感受和经验，React只是能干活，并没让工作变得更有趣。</p><p>&nbsp;</p><p>而且越来越多的开发者也意识到了这个问题，开始尝试接触其他框架、体验它们的不同特性，也反过来意识到React是有多么老迈和迟钝。即使单纯从推动未来前端开发者多样性的角度出发，我也真心建议大家用用别的框架方案。</p><p>&nbsp;</p><p>原文链接：</p><p>&nbsp;</p><p><a href=\"https://joshcollinsworth.com/blog/self-fulfilling-prophecy-of-react\">https://joshcollinsworth.com/blog/self-fulfilling-prophecy-of-react</a>\"</p>",
    "publish_time": "2022-09-14 15:19:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "CTO在数字化转型过程里扮演的角色 | 第三期完整版（上）",
    "url": "https://www.infoq.cn/article/ASFrj4IwtQjK9eBpSOAZ",
    "summary": "<p>《行知数字中国》第三期，InfoQ邀请到了过去30年亲历过中美高科技行业、零售业、金融业和制造业等不同行业的 IT 老兵向江旭。</p>\n<p>他曾在引领科技创新潮流的硅谷深耕技术研发，回国后赶上中国蓬勃发展的移动互联网时代，又以技术管理者的身份亲历了数家企业的数字化转型历程，在一次次跨越边界、不断探索的过程中，他对”数字化转型“的理解始终如一。在本期视频中，他将结合其亲身经历，分享数字化转型和创新的经验和教训。</p>\n<p>本视频为第三期完整版的（上）集。</p>",
    "publish_time": "2022-09-14 15:18:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Go宣布新的漏洞管理支持方案",
    "url": "https://www.infoq.cn/article/3NLVdvWHM23ks4OsNPqo",
    "summary": "<p>近日，Go安全团队宣布将迎来新的漏洞管理支持方案，这将成为Go团队帮助开发者了解已知漏洞、明确相关影响的第一步。</p><p></p><p>据介绍，Go将提供新的工具选项，用于分析代码库并发现其中的已知漏洞。该工具基于Go安全团队策划的Go漏洞数据库，能够仅显示代码实际调用的函数中存在哪些漏洞，借此降低提示理解难度。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c5/c59421a495774a80f0f14661ac24d082.png\" /></p><p>其中，<a href=\"https://vuln.go.dev/\">Go漏洞数据库</a>\"是一个综合信息源，囊括了公共Go模块中各导入包内的已知漏洞。漏洞数据采集自现有来源（例如CVE和GHSA），以及Go包维护者的直接上报。Go安全团队会以此为基础审查相关信息，并将可靠结果添加至数据库中。</p><p></p><p>新发布的<a href=\"https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck\">govulncheck命令</a>\"能够帮助Go开发者了解可能影响其项目的已知漏洞。Govulncheck会分析代码库，并根据代码所调用的函数来判断是否存在漏洞。要开始使用govulncheck，开发者可以在项目当中运行以下命令：</p><p></p><p><code lang=\"go\">$ go install golang.org/x/vuln/cmd/govulncheck@latest\n$ govulncheck ./...</code></p><p></p><p>从长远来看，团队计划将govulncheck工具集集成至各主要Go发行版中。</p><p></p><p>在开发和部署过程中，能尽早了解漏洞信息固然是件好事。为此，团队将漏洞检测集成到现有Go工具和服务中，例如Go包发现网站。页面中会显示 golang.org/x/text 各个版本中的已知漏洞。后续还将通过VS Code Go扩展推出漏洞检查功能。</p><p></p><p>最后，Go安全团队还提示，Go的漏洞管理支持是一项正在积极开发的新功能，因此还有不少bug和限制。希望大家能积极发送问题<a href=\"https://golang.org/s/vuln-feedback\">反馈</a>\"一同改善。</p><p></p><p>参考链接：</p><p><a href=\"https://go.dev/blog/vuln\">https://go.dev/blog/vuln</a>\"</p>",
    "publish_time": "2022-09-14 16:04:20",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "向江旭 | 从炒作、焦虑到价值，数字化如何助力企业穿越周期？",
    "url": "https://www.infoq.cn/article/zsXXHJpl3r9l9KfCQuS5",
    "summary": "<p>大家好，欢迎来到 DTDS 全球数字人才发展峰会。</p><p></p><p>数字化转型和创新是一个永恒的话题，新的数字化技术往往经历了从炒作、焦虑到价值这三个过程。当一个新概念、新技术开始的时候，会带来很多炒作，如数字化转型、元宇宙、Web3.0 等。企业及个人会因此产生：“是否要采用这种新技术？”、“这些技术适不适合于在我的企业落地？”以及“这些技术能否产生价值？”的焦虑情绪。</p><p></p><p>今天我会跟大家分享一下，过去我在不同的企业做数字化转型和创新一些心得体会和经验教训。特别是在当下，经济下行期，如何让数字化能够助力企业穿越周期，成为一个真正的数字化企业，我们的数字化技术从业者，能够在企业里发挥真正的价值。</p><p></p><h1>Gartner技术的成熟度曲线</h1><p></p><p>大家可能对 Gartner 技术成熟度曲线有一定了解，任何新技术都会经历初创期、技术期待峰值期、和期待值下滑后的谷底期。有人说这可能是泡沫破裂，但这个时候任何新技术，不管是AI、大数据、云计算，在慢慢成熟落地，真正在实际工作中发挥作用的过程中，都会经历这个曲线。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/61/61f60bebffe51482209f3d61615e00a4.png\" /></p><p></p><p>当新技术来临时，不同群体会有什么样不同的应对？2.5% 的 Innovators （拓新者）愿意在早期阶段、技术不成熟、有Bug、不稳定的条件下尝试新技术；10% 的 Early Adopters（早期应用者）愿意在新技术未成为一个令人满意的产品前去尝试；80% 的 Early Majority （早期主流应用者）和 Late Majority（后期主流应用者）愿意等技术成熟之后再去尝试。最后还有 7.5% 的 Laggards（滞后者），对于新技术比较慢热，比如现在很多老人对于手机 App 的使用并不熟悉。</p><p></p><p>所有新技术的出现其实都有这样不同类型的人，他们对于新技术的采用和接受都是不一样的。不同技术在不同阶段，不同类型公司对于技术的采用接纳，以及在不同经济周期，人们如何应对技术发展，是非常有讲究、有学问的事情。</p><p></p><h1>经济下行周期中的数字化转型和创新</h1><p></p><p>从国外来看，美股已经结束了十几年的牛市进入熊市，美联储一直在加息抑制通胀。中国的互联网公司也是经历过起起伏伏，在几年前就翻过了发展的顶峰，到达了发展的瓶颈，甚至出现了“传统电商”这种说法。同样，教培、互联网金融、AI 、房地产近年来也受到不同程度的冲击。但同时，整个行业和经济对于硬科技的呼唤非常强烈，包括自动驾驶、虚拟货币、元宇宙、Web3.0、NFT 数字产品的发展都相当火爆。</p><p></p><p>经济下行期，数字化转型和创新、数字化技术的应用是否要慢下来？还是要以不同的方式，从不同的角度来做数字化转型和创新？回顾过去，我们看到， 2000 年美国互联网泡沫破裂、纳斯达克崩盘的时候，硅谷就业市场受影响特别大，门户网站公司大量倒闭，但是像谷歌这样的科技型公司在此之后慢慢崛起。很多在互联网泡沫时期比较新鲜的商业模式，在泡沫破灭之后才真正在生活中发挥作用，进入寻常百姓家。所以在危机中被大浪淘沙留下来的技术往往就是金子，就是实实在在对我们的生活有冲击、有影响、有价值的互联网技术。</p><p></p><p>2001 年 9.11 事件发生之后美国股市大跌，对于交通、旅游行业有很大冲击。当时美国的旅游网站、国内携程的海外业务也受到很大的影响。但是在崩盘之后，其他的业务慢慢兴起，比如保险行业提供很多新的险种，有些国家成立了国土安全部，很多科技制造、制药、通信企业应运而生。</p><p></p><p>2003年，中国 SARS 爆发，很多企业因为疫情没办法与客户见面，远程会议软件应运而生，当时有一个类似 Zoom 的线上会议软件——WebEx 非常流行。另外值得一提的是，Zoom 的创始人 Eric S．Yuan，是 WebEx 很早期的员工，所以我们看到，如果在危机时抓住危机，给用户提供便利的产品，那么危机也能变成转机。</p><p></p><p>2008 年，美国次贷危机让华尔街一片荒凉，但是后来很多金融公司开始大力发展金融科技，像是美国银行投入 100 亿美金做金融科技，比如：App 、数字银行、线上券商等等，通过技术手段拉近和用户的距离，在线上直达用户。</p><p></p><p>同样，近年的新冠病毒给我们的工作和生活带来巨大影响。但是回顾历史，我发现无论是灾难还是危机，那些采用数字化技术、或者数字化创新和转型做得不错的公司，它们的生存能力更强，可以在危机中超越不用数字化技术的对手和同行。一旦疫情结束、经济恢复的时候它的反超或反弹能力也更强。</p><p></p><p>举例来说，2020 年春节很多公司因疫情原因无法到岗上班，当时我所在的一家金融科技公司在春节期间就把所有的 IT 系统、远程登录、VPN 等等所有远程能力全部夯实升级。春节结束之后，我们马上实行全员远程办公。那段时间，我们做了 1000 多场直播，我们发现用户和客服代表接触的机会反而更多了。以前很难约线下的高净值客户，现在线上约一个小时就可以搞定了。所以在疫情的时候，利用线上数字化手段，能更好地、更容易地触达客户。</p><p></p><h1>穿越周期：危机中的转机</h1><p></p><p>如何让企业能够穿越周期，在危机中生存，并在危机过后反超呢？管理大师拉姆查兰曾说道：在危机的时候，强大和敏捷的公司善于捕捉机会，比如，在经济下行期间，从竞争对手那边能攫取资产和市场份额。</p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/23/231b88163940879d80d810d03ffb844c.png\" /></p><p></p><p>拉姆查兰同时提出数字时代的六大竞争法则：</p><p></p><p>第一，用户希望个性化的服务。无论企业做产品还是服务，用户都是希望个性化的体验。企业的数字化转型，数字化团队能不能提供个性化的产品给我们用户，这是很重要的考量方面。</p><p></p><p>第二，让算法和数据成为企业的核心竞争力之一。怎么样去分析企业的用户的行为和需求，以及通过算法来优化流程，分析用户的喜好，然后给用户提供最适合的个性化产品。</p><p></p><p>第三，公司不仅仅是单打独斗，理想状态是企业的上下游供应链、供应商、合作伙伴来一起来共赢。要么创建一个巨大的生态圈，让别人加入你的生态圈，要么和别人合作，形成一个合作共赢的生态圈，这样才能够一起穿越周期。</p><p></p><p>第四，寻找寻求长期回报的投资者，这个投资者包括公司的投资者、合作伙伴和员工，他们都是投入了资金、资源和时间到公司的投资者，要追求长期主义，在低谷的时期也要保持定力，坚持对数字化的投入。</p><p></p><p>第五，为个性化服务创造团队文化，鼓励多样性、独特性的团队氛围，切忌跟风和“me too”的做事方式，鼓励个性化和独创。</p><p>第六，领导者必须不断创造变革，不满足现有的产品、做事方式和商业模式，在岁月静好的时候也要积极求变。</p><p></p><p>总之，数字化的手段、技术、人才以及思维，对企业能够在经济危机中穿越周期起到至关重要的作用。这也是管理大师拉姆查兰经常说的事情：数字化是整个企业的生命线，不管传统、金融、零售还是制造企业，最后数字化手段都会形成巨大的竞争差异化。</p><p></p><h1>数字化转型 4 个方面</h1><p></p><p>说到数字化，我个人比较认可的一个说法是：把数字化技术应用到企业的方方面面，从本质上、根本上做出改变，能够优化业务流程，给企业用户创造价值。它主要包括四个方面：</p><p></p><p>首先，如何通过数字化的手段和技术来贴近用户、触达用户？有一个词叫 DTC （Direct to Customers/Direct to Consumers），是指怎么样通过数字的手段去触达客户，和客户沟通、交流、互动。从最开始的线下见面，到邮件交流，再到后来用微信、视频等各种各样的方式，未来可能还会用 3D 、元宇宙、虚拟人的方式，来跟用户沟通互动，这都是不同的数字化手段，去帮助企业以更高效、更友好的方式来触达用户。</p><p></p><p>第二，如何赋能员工？有了数字化手段之后，怎么样让员工之间的协作更加高效？例如，微软Office365这些办公软件，以及团队协作软件 Microsoft Teams，都是在用新的数字化技术来提高员工的生产率和效率。包括未来沉浸式的会议体验，会让团队成员、合作伙伴、员工即使不在一个空间，也能通过软件体验身临其境的感觉。</p><p></p><p>第三，数字化转型、数字化技术其中一个方面就是能够优化企业内部的运营。公司运作流程有各种各样的，比如很多 Paper Works 要无纸化，无纸化之后，还需要优化流程。比如，国内的钉钉以及国外的 Slack 等等，都让运营流程和员工的效率得到提升优化。</p><p></p><p>最后，数字化最终是要把产品数字化、智能化。比如传统汽车变成智能汽车、传统家电变成智能家电等等，就是用数字化技术把产品数字化。</p><p></p><h1>数字化推进步骤方法论</h1><p></p><p>企业如何通过数字化转型和创新贴近用户，赋能员工，优化运营以及变革产品？哈佛商学院著名教授 John.P. Kotter 的一篇论文中关于 Leading Change 的八个步骤对做数字化转型和创新具有参考价值，我将结合美的智能家电创新的案例进行解读：</p><p></p><p>第一步，树立紧迫感。如果大众认同家电最终会从功能家电过渡到智能家电，那么美的作为一家家电企业，如果不做转型，不把产品智能化、数字化，那企业就没法生存，所以美的智能家电创新项目具有非常强的紧迫感。</p><p></p><p>第二步，争取支持。当时美的智能家电创新项目确立后，从公司董事长到公司最高领导层都均给予大力支持，包括事业部负责人也将智能化作为考核指标。</p><p></p><p>第三步，设计愿景。美的智能家电创新项目的设计愿景是：家电即是电脑、是机器人。</p><p></p><p>第四步，传达愿景。为了让所有的团队拥抱支持项目的愿景，我和团队专门提出了家电智能化的分级标准，从 L0 到 L4 用来衡量美的所有的产品，并且这套分级标准也提交国际标准草案，未来将作为行业标准推广。</p><p></p><p>第五步，赋能团队。如果团队成员与项目愿景相符合，团队成员将会发挥主观能动性做正确的事情。所以，每个团队成员其实只要心中明确了目标，就会按这个目标前进。</p><p></p><p>第六步，立竿见影。通过三个月甚至更短的时间解决当前的业务痛点，为团队建立信心。比如，去年美的智能化团队利用开源的鸿蒙操作系统，自行搭建并嵌入到美的家电产品中，产品一经上市便有百万量级的销量。</p><p></p><p>第七步，巩固成果，和第八步，归纳总结。当取得阶段性的短期成果之后，美的智能化团队及时总结，形成整个公司的方法论和纲领，以 KPI 绩效的方式推广到全公司。</p><p></p><h1>微软的数字化转型：三位 CEO 的变化</h1><p></p><p>微软在发展历程中经历了三位 CEO，分别是 比尔·盖茨、史蒂夫·鲍尔默、萨提亚·纳德拉，这三位 CEO 给微软带来不同的烙印，有好的，也有不好的。</p><p></p><p>比如，前期比尔·盖茨的理念是技术改变世界，对于操作系统 Windows 情有独钟，一切围绕 Windows，所以他把 Windows 适配到很多不同的地方，如电脑、手机、车，但后来证明这并不是最成功的事情。</p><p></p><p>史蒂夫·鲍尔默时代希望以业绩为王。我记得一个非常典型的例子 ，Windows &nbsp;在中国曾经有段时间盗版很严重，基本占到 95% 以上。在这时，中国团队曾经提出一个建议，Windows 能否在中国免费开放给用户，把盗版正版化，不收用户的使用费，而是可以通过推送广告或者其他的方式来把成本收回来。这个建议被总部给驳回了，短期来看免费是损失，但是中长期来看，其实应该是一个非常好的、有利可图的事情。但是因为业绩考量，或者是全球统一标准，造成了并不是最优的模式选择。</p><p></p><p>近年，在新 CEO 萨提亚·纳德拉的带领下，微软做了很多的转变和改革，比如拥抱开源、收购 GitHub 等。此外不再以 Windows 作为主要核心产品和技术，只要是微软的软件能够为用户提供价值，无论运行在哪一个操作系统上都可以尝试。这是萨提亚·纳德拉用个人特质，即包容、开放、同理心，为公司文化带来的改变，使得微软成了一个更加开放、包容，更加对用户友好，对开发者友好的公司。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b6/b642dad4e6e2299991fedf4872e784f2.png\" /></p><p></p><h1>微软的蜕变和转型</h1><p></p><p></p><h2>错失移动风口</h2><p></p><p>微软在数字化转型初期曾提出了一个 Mobile First and Cloud First（移动优先、云优先）的战略。当时鲍尔默认为 Windows 可与各种形态的设备互联，因此收购了诺基亚，自研 Windows Phone ，Windows Moble 等等，现在回头看起来，移动优先基本失败。</p><p></p><h2>云转型成功</h2><p></p><p>云转型的成功不仅仅是指微软投资了很多底层架构，此外，微软应用在企业软件的Office 组件、SharePoint、SQL server 以及 Microsoft Teams 等工具表现很强悍，这些工具都放在云端作为云服务来提供，所以也帮助了微软云转型的成功。</p><p></p><h2>面向未来</h2><p></p><p>微软本身并不是擅长做硬件，但它做了很多硬件的创新，X-Box 游戏机经历了多年的更新换代才到今天的状况，Surface 平板也有不错的用户反馈。今年，微软花费约 700 亿美金收购一家游戏公司 Activision Blizzard（动视暴雪）。加之在 X-Box 游戏机，Minecraft（我的世界）这两项产品的组合下，未来可能在所谓的Consumer Metaverse （消费元宇宙）形成很好的布局。</p><p></p><p>另外，微软也收购了 LinkedIn （领英）职场社交的一些服务商。LinkedIn （领英）职场社交大概拥有 8 亿用户，虽然它并不完全以个人消费者为用户，但是收购纯互联网或者游戏厂商也给微软注入了不同的基因和文化。</p><p></p><p>以上也表明微软在数字化转型时代围绕Engage customers（触达用户）、Empower Employees（赋能员工）、Optimize Operations（优化运营）、Transform Products &amp; Services（转型产品）四大方向积极地做出蜕变和转型。</p><p></p><h1>美的数智驱动战略及实施</h1><p></p><p></p><h2>数智化基础建设</h2><p></p><p>接下来，我们来一起看看美的如何做数字化转型，智能化转型？美的是一家传统制造企业，在过去十几年，做了很多数字化转型、数字化创新的动作，总的来说，美的的数字化转型还是相当成功的。近年，数字化转型进入到下一个阶段，即所谓的智能化阶段，比如提出家电产品的电脑化、机器人化，以及提出家电的智能化分级，甚至于提出未来元宇宙时代要怎样做元家居等等。另外，美的在今年成立软件工程院，让做核心底层软件的团队夯实软件基础。同时开始建设新的数据中心加强底层架构。这些都是基于 10 年以上的数字化转型基础为在数智化阶段做准备的创新和举措。</p><p></p><h2>管理者数字化培训</h2><p></p><p>美的所有的高层领导每年都要不定期进行数字化技术、数字化转型和创新的培训。比如，前往哈佛商学院进行一周的学习，另外也会请外部专家，甚至于竞争对手来做分享。美的对于外部非常的开放，对内进行数字化的强烈推进，所以使得美的这些年在数字化、智能化方面有一些不错的工作成果。</p><p></p><h1>数字化转型助力企业穿越周期</h1><p></p><p>在经济下行期，企业以降本增效为战略目标，这时更希望能够通过数字化技术，给业务雪中送炭，而不仅仅是锦上添花。因为企业面临着生存问题，而不是发展问题。特别是企业在招聘冻结或者裁员的情况下，如何让数字化技术的应用，能够帮助留下来的员工和团队发挥更大效率？同时引入少数关键人才，保留火种。</p><p></p><p>此外，要保持专注和耐心。因为数字化创新、数字化转型绝对是一个过程，而不是一两个项目，或者一蹴而就的事情。即使项目失败并不意味着整个数字化转型没有进步，企业要不断尝试探索。专注、耐心和坚持，是在行业下行的情况下，企业应该坚守的事情。</p><p></p><h1>空降数字化高管的心得、经验和教训</h1><p></p><p>一、任人唯贤。作为一个空降高管，切忌“来时让团队鸡飞狗跳，走时只剩一地鸡毛”。</p><p></p><p>二、充分尊重和理解现在的公司的文化、做法和理念。进入新公司后，往往会对企业现有的流程、机制、文化、组织带有色眼镜，或不认可，或批评，但这对高管的落地和空降并不是好事情。我认为存在即合理，我们应该充分尊重现有规则，在了解现状后循序渐进地寻求变革，切记不可做随意批评指责。</p><p></p><p>三、尽快抓住并解决 1-2 个业务痛点。通过解决 1-2 个短期能够见效的业务痛点，来赢得业务合作伙伴的支持，提升团队信心，让你所链接的不同角色形成良好互动关系。</p><p></p><p>四、融入新公司的文化。工作时间之外，可以与同事或者朋友聚餐，参加活动等等，业余时间与同事、团队的交流沟通比上班时更有效。</p><p></p><p>五、行业视野和高度。企业谋求长远的发展，需要站在行业的高度看现状和未来，作为空降高管，可以借鉴不同行业的跨界经验，结合企业积累的经验教训，总结升华后运用到下一份工作、下一个行业、下一家公司，形成自己的一套打法和方法论。</p><p></p><p>以上是我在不同企业做数字化转型的一些创新尝试、心得、经验和教训，希望大家对大家有所帮助。</p><p></p><p>谢谢大家。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/00/00f9bafe018c4792480eed1829b4fd32.jpeg\" /></p><p></p><p></p><h3>关于极客时间企业版</h3><p></p><p>极客时间企业版由极客邦科技倾力打造，是企业级一站式数字技能学习平台，是具备好内容、好产品、好服务的“三好平台”，助力企业打造行业领先的数字人才团队，驱动企业的数字化转型与高质量发展。</p><p></p><p>自 2019 年以来，极客时间企业版已服务近 3000&nbsp;家技术驱动型企业，覆盖银行、金融科技、保险、互联网、移动通信、软件、工业制造、教育等行业客户。</p><p><img src=\"https://static001.geekbang.org/infoq/e3/e3c148931b18c1c7305e2fa67698f7ba.jpeg\" /></p><p></p>",
    "publish_time": "2022-09-14 17:02:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "以OpenMLDB为例，聊聊开源社区运营的难点｜InfoQ大会早班车第21期",
    "url": "https://www.infoq.cn/article/9J4wUMqoD55rKpovlkyE",
    "summary": "<p>如何推动开发者为社区积极贡献？开源社区如何从 0 到 N？本次大会早班车邀请了 OpenMLDB 社区运营负责人陆雨霄进行分享，来听听知名开源项目社区运营负责人的分析。</p>",
    "publish_time": "2022-09-14 17:39:49",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "为缩减开支，传谷歌砍掉Pixelbook笔记本电脑项目，并解散团队",
    "url": "https://www.infoq.cn/article/a35KdsefeIrmf91HlwSI",
    "summary": "<p></p><p>9月13日，外媒The Verge援引知情人士的消息<a href=\"https://www.theverge.com/2022/9/12/23348999/google-pixelbook-canceled-team-shut-down\">指出</a>\"，谷歌已经取消了下一代 Pixelbook 笔记本电脑，并解散了负责开发产品的团队。</p><p></p><p>就在几个月前，谷歌还有继续开发 Pixelbook 的计划。知情人士表示， Pixelbook的开发进度很长，原本预计将于明年亮相，但该项目最后还是被撤销，而这也是谷歌内部最近节省成本措施的一部分。据悉，开发团队成员已被转岗到内部其他部门。</p><p></p><p>谷歌 Pixel 系列产品可以追溯到2013年，团队推出 Chromebook Pixel 为首款打头阵的产品，到 2017 年就以<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5ODQ2MDIyMA==&amp;mid=2650714093&amp;idx=1&amp;sn=2cbed6fbd340eb4fb997d6df47ee0d28&amp;chksm=bec061be89b7e8a835e3e80eec4d3a50bb9e4e7a4a4480f0aa4410b0e380937f703a09cff207&amp;scene=27#wechat_redirect\"> Pixelbook </a>\"来主攻中高端的 Chrome OS笔记本电脑市场，其零售价格高达 1000 美元。2019年则推出了相对便宜些的Pixelbook Go，售价649美元。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/76/761f74d3a4ef1b847408ca74417586dd.png\" /></p><p>Pixelbook Go也许是谷歌的最后一款笔记本电脑。</p><p></p><p>Engadget<a href=\"https://www.engadget.com/google-is-killing-the-pixelbook-laptop-192451694.html\">评价</a>\"称，虽然Chromebook这些年持续推了好些高端产品，但还是除不掉外界对Chrome OS产品的入门级、便宜等固有印象，因此谷歌会砍掉表现不佳的产品线也并不让人意外。</p><p></p><p>值得一提的是，近来谷歌CEO Sundar Pichai陆陆续续表示打算放慢招聘速度，并削减公司的一些项目。他在7月的一份备忘录中<a href=\"https://www.theverge.com/2022/7/12/23206113/google-ceo-sundar-pichai-memo-hiring-slowdown-2022\">写道</a>\"，“在某种程度上，这意味着暂停开发并将资源重新部署到更高优先级的领域。”</p><p></p><p>这么看来，Pixelbook和其团队大概率是这波调整中的牺牲品。</p><p></p><p>参考链接：</p><p><a href=\"https://www.theverge.com/2022/9/12/23348999/google-pixelbook-canceled-team-shut-down\">https://www.theverge.com/2022/9/12/23348999/google-pixelbook-canceled-team-shut-down</a>\"</p>",
    "publish_time": "2022-09-14 17:53:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "汽车之家电商系统架构演进与平台化架构实践",
    "url": "https://www.infoq.cn/article/oBSd1zNsBz8alRiH73k4",
    "summary": "<p>作者 | 方利</p><p>编辑 | 贾亚宁</p><p></p><p></p><blockquote>本文由<a href=\"https://time.geekbang.org/qconplus/home\">大厂案例</a>\"转载自汽车之家主机厂事业部 - 技术部高级研发工程师方利首发于之家技术公众号的文章。汽车之家电商系统诞生在 2014 年，成长于 2016~2019 年，并经历多年双 11、818 晚会的洪峰考验，沉淀了稳定可靠、性能卓越的在线交易能力。随着业务中台的建设浪潮兴起，2019 年进入中台化建设阶段，输出其在汽车电商领域五年沉淀的能力，助力汽车电商行业发展，加速企业数字化转型！</blockquote><p></p><p></p><h3>一、架构演进</h3><p></p><p></p><p>这个部分主要讲一下汽车之家电商系统的架构发展历程，每个阶段的业务状况、技术挑战和技术体系的应对策略。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/17/1770a5cf5016896dcdc1b225e69818f5.png\" /></p><p></p><p></p><h4>1. 起步阶段</h4><p></p><p></p><p>互联网大环境在 2011~2013 年经过千团大战、电商大战 [1] 之后，电商业务已经成了互联网流量变现除广告模式外的另外一块战略高地。在 2013 年“双十一”期间，汽车之家推出购车服务，将交易环节作为一个重要发展方向 [2]。</p><p></p><p>在业务起步阶段对技术的要求就是快速迭代上线，验证产品可行性。在满足业务日常需求的同时，技术架构上的思考也未停止过。考虑到未来电商系统的可扩展性，参考业界阿里巴巴的技术体系，2014 年开始研发技术栈也逐步从 .NET 体系变成 Java 体系，并与 2015 年 5 月 30 日完成所有的应用切换，上线完整的在线网上购车平台车商城。</p><p></p><h4>2. 微服务阶段</h4><p></p><p></p><p>随着电商业务迅猛发展，技术人员的增加，到 2016 年技术团队已经有了上百人。单体架构之痛迎面扑来，就以一个前台的商城 git 项目而言，就几乎近 30 个 Maven 的子项目，遇上需求并行开发，经常出现代码的合并冲突、需求上线等待、线上慢 SQL 等问题，整个系统的开发效率和系统稳定性都变差了。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/4c/4c530b534ab0ac516673b097ef306884.png\" /></p><p></p><p>这个时候的系统支撑面临巨大的挑战，系统架构必须升级进化。我们开始做分布式战略，把原来的单一系统拆分成多个高内聚，低耦合的中心化系统。也就是现在的用户中心、商品中心、订单中心、促销中心、优惠券中心、商家中心，每个独立的系统可以独立设计、独立接需求、独立发布，整个研发效率和系统稳定性都上了一个台阶。</p><p></p><p>在这个阶段我们在技术上完成支撑汽车电商百万级商品系统 [3]、订单系统 [4]、优惠券系统 [5] 构建，并完成了应用的全部上云 [6]、自动化测试平台构建 [7]。</p><p></p><p>同时在业务上探索了自营整车电商模式、开放平台模式、B2B2C 模式、报价单模式、顾问模式、TPCC 模式、平行进口车售卖等各种经营模式。</p><p></p><h4>3. 主数据阶段</h4><p></p><p></p><p>电商发展的速度实在太快了，到了 2019 年公司内已经有了多种在线交易模式，比如旅游类、车品与后市场服务类、积分兑换类等。公司基于发展战略决定搭建电商中台，一方面为了集中公司优质的产品资源、运营资源，打造具有影响力的垂直类电商交易平台，另一方面也是为了合理管控技术资源，实现电商系统的统一。在此背景之下，我所在的团队承担起了搭建电商中台的任务，由于各个系统间的业务形态、技术架构差异很大，所以我们面临的第一个问题就是用什么方式能够实现交易类系统的整合。</p><p></p><p>为此我们一方面开始熟悉不同业务场景下的交易系统的现状，另一方面也在技术方案上进行着思考和讨论。最终我们选择了“以数据归一为基础，提供标准化中台服务，从下层向上层逐个系统整合”的方案。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d8/d86115a2acaed1e258f3d19fb3c4c608.png\" /></p><p></p><h5>3.1 数据归一</h5><p></p><p></p><p>数据是公司的核心资产，任何系统尤其是交易类系统，数据更是重中之重。主数据的建设一方面能够统一数据模型，打破系统壁垒；另一方面也能够通过集中的数据进行经营性数据分析，为业务决策提供依据，因此我们将主数据的建设作为了系统整合的第一步。</p><p></p><p>在交易流程中，最重要的数据集中在商家、商品、订单、促销活动这四个领域，我们结合公司交易场景的现状，分别对这四个领域的主数据进行抽象，统一建模，尽可能的适配大多数的交易场景。</p><p></p><p>以下是订单主数据核心数据模型结构的示意图：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/57/570bbe04f3b6cb9ed35dde8bf1a10e9b.png\" /></p><p></p><p>完成了统一的数据模型后，下一步就需要将现有的异构型数据导入到主数据库中，我们采用了读取数据库 Binlog（MySQL、SQL Server）进行数据加工的方式完成初期的数据同步导入，这也是对业务侵入最小、最快的实现方案。</p><p></p><h5>3.2 API 标准化</h5><p></p><p></p><p>完成了主数据建设，下一步我们便开始进行基于主数据的 API 标准化建设，API 可以看做是系统的神经，高质量的 API 可以串联起一个优质的系统，统一了 API 在一定程度上也就实现了系统的收口。</p><p></p><p>为此，我们遵循单一职责的原则，按照领域进行区分，明确边界，做到所有底层 API 功能原子化，便于上游使用者灵活组装 API 完成业务逻辑，同时统一 API 的参数结构和响应结果的结构，统一错误码，基于 API 网关统一发布、调用，API 的数据统计监控、降级、限流实现统一管控。</p><p></p><h5>3.3 API 读写切换</h5><p></p><p></p><p>有了标准化的 API，自然需要让业务方进行使用才能体现出 API 的价值，为了防止步子迈的太大，我们也是按照业务的重要性以及量级，采用读写分阶段的方案逐个业务进行调用切换，看似很合理的步骤，在实际执行过程中也暴露了很多问题：</p><p></p><p>在读写强依赖的场景，比如：用户下单完成后马上会跳转到订单详情查看订单，这个时候在未完成写 API 切换的时候，由于数据同步延迟会导致通过读 API 读取数据失败，这时就没有办法按照先读后写分阶段进行切换，最好的办法是读写同时切换。对于业务切换影响最小的方式，当然是兼容原接口的参数和返回结果，如果我们强加业务方按照我们标准的 API 进行切换，势必给业务方带来切换成本和不必要的负作用。</p><p></p><p>这个时候我们自然要从对方的角度出发做一些取舍。我们采用的方式是在标准 API 之上增加了一层适配层，用于新老协议的转换，让业务方只需要切换域名和请求的 URL 即可，其他逻辑不变，最大限度的做到对业务方友好。</p><p></p><p>由于我们提供的底层 API 都是原子的，但在实际场景中，尤其是前后端分离的项目，前端是不大愿意为了一个结果多次调用接口获取，面对这种情况，我们也是在后端增加了一层门面层，基于底层原子 API 组合成满足业务场景的 API 对外提供，对于差异化的接口逻辑做适度兼容。读写切换不可能一蹴而就，在这个过程中势必会存在主数据 API 和原业务 API 并存的场景，鉴于所有 API 的入口都将由我们统一提供，因此我们也是采用了路由的机制，通过路由层的 location 进行区分转发，所有 API 做到对调用方的透明。在实际 API 切换的过程中，还有一种特殊的场景，因为最终要实现系统的整合，对于那些后续会被整合掉的功能强行做 API 切换其实也是一种资源的浪费，因此我们也是提前做了预判，可以适度地不做切换，等待功能整合后将整体功能进行切换。</p><p></p><h5>3.4 系统功能整合</h5><p></p><p></p><p>在完成 API 读写切换之后，基于主数据的功能基本完成了聚合，此时就需要将通用功能进行系统化的统一，比如：统一的商家管理后台、统一的运营后台、统一的 C 端交易体验等，系统层级的统一整合目的是为了给使用者一个统一的操作界面，体现平台的专业性。</p><p></p><p>在系统整合的过程中，我们采用了“共性沉淀，差异取舍”的原则，对于那些通用的能力，比如：商品发布、订单列表等功能，我们会抽象出通用的能力，提供统一的单元化的操作界面，满足各业务方的使用诉求。</p><p></p><p>对于业务方特有的功能，我们会建议业务方去实现，而对于那些目前还无法形成通用能力但未来有可能作为通用能力的功能，我们会按照 MVP 原则，用最快的方式实现小版本的上线，随着业务的迭代不断的实现功能沉淀。</p><p></p><p>在整个系统整合的过程中，必然会出现在整合原有系统功能的同时又有新需求的加入。面对这种场景，我们的采用的方式是新老系统同步开发，看似增加了成本，其实对于新系统的整合是有好处的，一方面能够不影响业务的开展，不会因为技术性的整合对业务造成停滞；另一方面可以通过新老系统的对比，找出新系统可能存在的问题，这也会是验证整合后的新系统功能的最佳途径。</p><p></p><p>在完成绝大部分的系统整合工作之后，电商核心的交易链路已经可以跑通，并且在线上经历了长时间的验证，从商家入驻、商品发布、商品展示、下单、支付、履约、售后，到最终的结算，期间遇到的问题也在一一化解。在这个阶段我们完成了公司内 3 大交易系统的整合，并进行了电商平台秒杀系统 10 万级 QPS 的架构升级 [8]，优惠券系统 10 万级 QPS 的架构升级，支撑了 2020~2021 年的 818 晚会、双 11、双 12 等大型活动的秒杀、发券场景。另外我们也在积极探索领域驱动模型 DDD 的理论与业界实践，并在发票总库系统的重构中进行了落地实践 [9]，这也为后续的平台化架构升级提供了技术支撑。</p><p></p><h4>4. 平台化架构阶段</h4><p></p><p></p><p>在电商业务中台继续向业务的“逼近”过程中，系统的抽象和建设难度也成指数型增加，出现了一系列新问题：</p><p></p><p>随着建设中台项目的结束，人员的撤离，电商业务中台在集成这么多业务线的逻辑之后，代码里充斥着大量条件判断，每次需求迭代的开发成本和测试回归成本都很高，如何隔离不同业务之间的逻辑，减少业务之间的耦合度呢？如何抽象出已接入电商业务中台的多条业务线的共性能力，避免重复建设呢？当新业务接入电商业务中台，如何基于已有的能力和解决方案快速组装上线，以支撑业务快速迭代创新？如何能够利用技术手段帮助产品运营日常工作提效呢？</p><p></p><p>综上所述，电商业务中台在建设过程中抽象业务线的共性能力以及共性能力的复用性设计与实现尤其重要，业务中台要做到能力复用和灵活多变才能让中台建设在企业的发展过程中起到降本增效的效果。系统架构必须升级，这就进入了平台化架构阶段。</p><p></p><p></p><h3>二、平台化架构实践</h3><p></p><p></p><p>什么是平台化架构？就是要把基础能力跟每个业务方的特性业务拆分，要把业务和业务之间的逻辑进行隔离。平台化最核心的是业务抽象建模和系统架构的开放性，业务抽象解决共性的 80% 问题，系统架构开放性解决 20% 的个性化问题。</p><p></p><p>在参考 Thoughtworks 给出的《现代企业架构白皮书》的方案 [10] 以及业界的互联网公司美团 [11]、有赞 [12] 的中台解决方案，我们给出了适合之家电商平台的解决方案：通过领域驱动建模抽象出电商业务中台多业务线的共性能力并预留扩展点，然后利用服务编排对共性能力进行组合。其原理如图所示:</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/69/69ccd4895eb9e16cefc876ec21087715.png\" /></p><p></p><p>每一个在电商业务中台运行的业务可以理解为：业务身份 + 业务流程 + 规则，业务流程通过流程服务编排来实现，扩展点通过扩展点机制来实现。在整个交易流程中 B 端的商家入驻、商品发布相对通用，不同的业务的主要流程差别体现在订单收单前以及支付后的订单履约，这些流程往往都是需要定制化开发，为此整个解决方案核心在于订单平台化的架构设计。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/3e/3ebed514dc7c9f24b8cbfd7583416976.png\" /></p><p></p><p>如图所示，整个订单平台化架构分为四层，从下往上依次是：</p><p></p><p>基础设施层：提供存储、消息、RPC 等中间件。基础服务层：按域组织的基础服务、域服务内针对不同业务的差异提供扩展点。业务能力层：串联不同域服务形成可供外部使用的业务能力，比如下单、支付等。业务流程层：对业务能力进行编排、形成订单交易流程、完成订单交易过程。业务层：制定业务身份、扩展点实现以及业务流程配置等，实现不同业务差异。</p><p></p><p>整个订单平台化架构升级实践过程，总结为以下几点：</p><p></p><h4>1. 业务身份化</h4><p></p><p></p><p>业务身份的概念最早由阿里巴巴提出，业务平台在对各业务同时提供服务时，需要能区分每一次业务服务请求的业务身份要素，以便提供差异化个性化的服务；因此需要对企业各业务的身份和特征进行建模和区分，其产出即为业务身份。业务身份具有唯一性，业务身份类似于身份证号码一样，需要保证在整个业务中台上必须是唯一的。</p><p></p><p>有了业务身份业务中台就可以针对抽象这个业务流程和业务规则，并基于业务身份实现服务路由、业务监控。其次业务身份就类似 SaaS 系统中的租户的概念，不同的业务方在中台通过业务身份进行数据权限隔离，这样能保证各业务的运营只能看见自己业务部分的数据。</p><p></p><p>比如在汽车电商领域，业务身份我们通过人、货、场三个维度进行抽象。人的维度有是否开通会员、是否是认证车主、开通了哪些增值服务等；货的维度有商品类型（整车、实物商品、虚拟商品等），交付方式（核销、兑换、4S 店交付）等；场的维度有线上下单、线下下单、在哪个线上商城下单，在哪个交付店下单、商品投放渠道来源等。根据这些维度确定了唯一的业务身份后，每笔交易的业务流程就确定下来了。</p><p></p><h4>2. 服务编排化</h4><p></p><p></p><p>电商业务中台整体采用微服务架构、将整个电商系统拆分为商家中心、用户中心、商品中心、促销中心、交易中心、履约中心、售后中心。每个中心在逻辑上分成了带有业务属性的能力和不带业务属性的基础能力两层。基础能力层关注领域模型的实体属性、行为、事件，不会随着业务的需求调整而发生变化，聚焦于行业共性行为、收敛业务模型，保障基础服务的稳定性。带有业务属性的能力是在基础能力层之上通过服务组合、流程编排之类的技术手段，构成面向业务的解决方案，完成业务共性到个性化的转变。有两种常见的做法如下：</p><p></p><p>其一是使用硬编码来实现。随着不同业务线的逻辑不断增加，各个业务能力调用的基础能力会变得盘根错节，很难做到可配置、灵活化。当发生需求变更的时候，测试人员很难评估修改的影响范围，回归测试的成本周期长，这样很难真正做到敏捷开发、快速响应业务。</p><p></p><p>其二是使用服务编排。通过服务编排现有微服务进行服务组合服务，然后一次性的返回前台需要的信息。不同业务线的能力执行不同的流程，通过图形化、XML、JSON 的编排框架，即可以让流程清晰，也可以屏蔽代码细节。</p><p></p><p>服务拆分的好处无需赘述，但是要实现业务价值，不是看单个服务的能力，而是要协调所有服务保证企业端到端业务流程的成功。业务中台是企业业务的集成平台，集成技术必须松散地耦合组成流程的应用程序和资源，否则流程的逻辑将被硬编码到特定的技术平台中，更改可能代价高昂，从而违背业务流程复用的整个目标。</p><p></p><h5>服务编排框架</h5><p></p><p></p><p>在服务编排领域，已经有很多工业界解决方案，我们参考了基于 API 网关的服务编排 [13]，基于工作流系统的编排框架 Flowable 和 Activiti [14]、基于微服务架构编排框架的 Netflix Conductor [16] 和 Zeebe [17]。通过对技术原理进行分析，发现它们都存在某些程度上的不足，无法应用到电商业务中台的服务编排，最终我们选用 Apache Camel [18] 做为服务编排的底层引擎进行二次封装开发。</p><p></p><p>Apache Camel 诞生于 2007 年，2009 年前后成为 Apache 顶级项目更名为 Apache Camel，目前最新版本是 3.0。Apache Camel 的优点在于在发布后十多年的时间里，已经拥有三百多种扩展组件；扩展机制也极其方便和灵活；通过开箱即可用的最佳实践来解决应用集成问题；它基于事件驱动的架构，有着良好的性能和吞吐量 [19]。</p><p></p><p>以下是一个简单的服务流程编排样例：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/14/14c07dd0c274900cec2b384db1fec06e.png\" /></p><p></p><p>业务中台使用服务编排技术一方面可以将交易的能力自动识别出来作为组件可视化的呈现，形成能力地图；另一方面，基于这些基础能力实现服务流程的编排，能够通过拖拉拽的方式快速搭建出适合业务的全部或者部分交易流程，类似积木，复用基础组件，灵活搭配，进而实现电商企业级能力的复用，节约开发成本，快速赋能业务的目标。</p><p></p><h5>扩展点框架</h5><p></p><p></p><p>扩展点的全称是 Service Provider Interface，简称为 SPI。是 Java 提供的一套用来加载和运行第三方扩展的接口实现类的机制，一般用在组件替换和框架扩展的场景。SPI 将服务接口与服务实现分离以达到解耦、提升了应用程序的可扩展性。在程序设计中，模块之间采用面向接口编程而不做具体的实现类引用，通过动态加载实现类达到应用程序的插件化。</p><p></p><p>COLA 框架是阿里巴巴技术专家提出的一种应用架构的扩展点框架 [20]。COLA 框架的扩展是通过注解的方式来实现的，Extension 扩展注解里面使用用例（useCase）、业务（bizId）、场景（scenario）三个属性用来标识身份。使用 COLA 框架的扩展点可以在代码层面支持不同业务身份的逻辑隔离，因为不同的逻辑分散在不同的实现类里面，符合软件设计的开闭原则。</p><p></p><p>COLA 框架在应用 Spring 上下文初始化完毕阶段，开始扫描带有 Extension 注解的 bean 进行扩展点注册，以 Map 的结构存储，Key 是 useCase、bizId、scenario 的字符串拼接，value 是该 bean。</p><p></p><p>在运行时，通过业务身份定位扩展点实现类，然后执行扩展点实现的逻辑。定位扩展点支持三层路由，首先会按照 useCase+bizId+scenario 找扩展点实现，如果没有则按照 useCase+bizId+scenario 默认值查找，如果还未找到则根据 useCase+bizId 默认值 +scenario 默认值查找，具体原理如图所示：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/3e/3ef011d2e1a714d0303bfc015be21c69.png\" /></p><p></p><p>对于简单的业务场景，对应用系统的高扩展性、业务隔离的非功能性要求并不多。但是随着同一应用系统支撑的业务变多、业务场景变复杂，在架构层面需要提供统一的扩展解决方案，将变化的业务规则固化下来，这不仅有助于统一技术规范，还能减少硬编码的 IF-ELSE、策略模式等因开发人员水平不一致带来的理解上复杂度、规范上的一致性。</p><p></p><p>通过扩展点机制，业务中台就可以从业务身份和框架层面实现对不同的业务的管理，像 SaaS 管理租户一样管理业务，不同业务身份在不同场景下对预定义的扩展点进行扩展。阿里巴巴的业务中台也正是基于扩展点的思想，实现的核心业务逻辑和技术细节的分离和解耦，共享事业部才能对集团内几百条业务线进行支撑的。</p><p></p><h5>服务编排 + 扩展点应用举例</h5><p></p><p></p><p>在验证功能后对电商交易系统的的场景进行了分类，首先选取用户感知度小、即使出问题也对用户影响最小的节点进行重构试用，如未支付订单超时关闭、用户取消订单。</p><p></p><p>以用户取消订单场景为例，在修改前各业务的用户取消订单的逻辑为修改订单状态为已取消状态然后执行同一个流程，流程的执行顺序为硬编码，伪代码如图所示：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/df/df854be70081bc0d6c10f77361016aa9.png\" /></p><p></p><p>修改后根据各业务的特性的进行了精细编排，如二手车业务没有使用优惠券的场景，那么就不需要再有这个环节；在积分这个通用能力上，扩展的是万里通积分。伪代码如图所示：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/41/412c96f210e8e402a9707aeeed0c415f.png\" /></p><p></p><p>旅行家业务线的的酒店、机票业务无传统的商品库存的概念，那么就不再需要还商品库存的操作，而是抽象一个新的通用能力：取消供应商订单，并预置了取消酒店供应商订单的扩展以及取消机票供应商订单 2 个扩展点。伪代码如图所示：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/2b/2bfea12b6ff515571df6228f4219b99e.png\" /></p><p></p><p>整个系统的应用效果明显，主要体现在性能提升和人效提升。性能提升主要体现在系统的响应时间变短，在修改后取消订单的接口的生产环境的 TP99 的值提升百分比约为 30%。人效提升方面主要体现在取消订单增加新流程节点的测试所用的时间对比，在修改前，各业务流程之间的代码是耦合的，修改流程增加新节点需要对以前的各业务进行回归测试，修改后不需要进行各业务的回归测试。</p><p></p><h4>3. 业务配置化</h4><p></p><p></p><p>在平台化架构实践中我们将那些影响业务流转的核心配置统一提取出来，并按照业务身份进行属性值的配置，确保整个交易流程链路的标准统一，减少对交易核心链路代码的频繁修改，不同业务根据不同的属性值在相同的交易流程中的不同节点进行灵活切换。</p><p></p><p>比如：商品是否自动推送到资源池、下单是否需要填写身份证、支付成功是否推送线索、超过 N 天未确认收货是否自动确认收货完成等等，所有配置项均通过配置管理后台进行统一维护。此外，对于电商中台中包括业务身份在内的所有元数据，我们也通过配置管理后台进行了统一的管理并提供统一的 API 对外提供查询服务。</p><p></p><h4>4. 开发工具化</h4><p></p><p></p><p>从业务和技术的多维度出发，针对日常工作中出现的常见业务问题或者技术问题，研发出各类实用便捷的小工具，实现工作效率的提升、问题的快速定位等效果，比如：消息分发、检索工具；商品优惠价格速算工具；商品展示价格比对监控工具；缓存管理工具；一键降级工具等等。随着大家工具化意识的不断提升，这类小工具不断的出现并汇集在一起，就构成了研发人员必不可少的工具箱。</p><p></p><h4>5. 数据可视化</h4><p></p><p></p><p>电商系统的性能指标、资源利用率指标、调用量等系统维度的指标通过公司云平台能够实现统一的监控，对于业务数据同理，我们需要提供统一的业务数据可视化工具，为业务方提供做相关决策的参照依据。</p><p></p><p>为此，我们采用实时 + 离线的方式开发了订单可视化大屏系统，通过这个系统能够按照业务线、订单状态、区域等多个维度实时监控订单量的变化情况。如果固定时间段内的订单量波动超过了我们事先配置的阈值，还会发送钉钉消息及时通知业务方关注。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/43/43e32fc4c858e8f33af34ed089eca6f7.png\" /></p><p></p><p>此外，对于离线数据，我们也是按照日、周、月等从多个维度进行数据统计分析，最终会以邮件和办公级 App 消息的形式发送给业务方，这些手段的目的都是为了实现电商数据的可视化管理，为业务使用方提供更多便捷的工具对电商业务进行全方位的管控。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/dc/dcbc52b1414253ac60463d9c3ee82c6a.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/8a/8a6eae0a9b91b73c95600e10108e166d.png\" /></p><p></p><p></p><h4>6. 知识沉淀</h4><p></p><p></p><p>我所在的这个团队在公司内部的电商领域是一个专业的团队，多年来积累了很多技术以及产品运营层面的经验。在整个电商中台的建设过程中，我们也是将这些经验以及日常问题的解决办法，作为一种财富不断的沉淀，以往都是采用 wiki 这种文档管理工具进行汇总。</p><p></p><p>为了能够让这些知识产生价值，我们也开始搭建自己的电商知识库系统，将所有能够作为知识沉淀的内容，按照不同的领域分类录入到知识库系统内，整套知识库对外提供了快速检索和定位的功能，能够服务于技术人员、产品运营人员，进一步培养大家知识积累的意识，提升大家的工作效率。</p><p></p><p></p><h3>三、尾声</h3><p></p><p></p><p>二十年前，互联网刚开始在中国流行，信息都是通过资讯的方式展示，几乎没有在线交易；十年前，互联网经过快速发展，消费者可以在淘宝、天猫、京东为代表的在线商城上购买自己需要或喜欢的商品进行在线交易；而如今各种电商形态不断涌现，已成百花齐放的趋势，比如内容电商小红书、兴趣电商抖音快手，社交电商微商、拼多多等，会员电商天猫 88vip、京东 plus 等。这些在线交易形态充分证明了电商在互联网领域流量变现的重要一环，已经成为互联网企业基础设施的水电煤。</p><p></p><p>电商中台的建设不光是一个技术体系的搭建，也是一个组织结构重新塑造的过程。但是随着时间的推移，中台其价值的增长空间会愈发狭窄，这就需要有意识的寻找创新点，突破现有系统的边界，跨界思考，于是我们也开始与前台业务走的更近，积极开展对新业务探索和技术架构升级。</p><p></p><h4>1. 探索新零售</h4><p></p><p></p><p>在过往探索汽车电商的业务模式，我们发现核心痛点在无法绕过 4S 店提供服务。近年来特斯拉和国内造车新势力的异军突起，新兴的直销模式一举打破传统车企 4S 经销体系的生态；国内购车群体也日益年轻化让我们看到了线上订车 + 线下交付的新零售模式正在变成可能。</p><p></p><p>通过升级电商系统的现有能力，商品支持了 SKU 选配，订单支持大小定金组合支付、退款，新增交付系统，为工业协会定制车业务、汽车新零售线下店的业务提供了业务支持。未来还会继续打造业界对齐的新能源选配价格浮动模式以及商品可选配套的服务包模式。</p><p></p><h4>2. 架构升级</h4><p></p><p></p><p>在原有的电商交易下单流程中，设计对外的服务都是颗粒度比较小的原子化服务，这就导致了业务方接入成本比较高，用户体验也不太好。未来我们将会通过增加 BFF 层、精简调用链、电商接入脚手架等技术手段提升业务的产品力以及运营效率。</p><p></p><p>引用</p><p></p><p>[1] <a href=\"http://www.knowledgeatwharton.com.cn/article/7795/\">盘点：2010-2020 年互联网的十大战役</a>\"</p><p>[2] <a href=\"http://www.knowledgeatwharton.com.cn/article/7795/\">汽车之家：从“吸引眼球”向“电商平台”拓展</a>\"</p><p>[3] <a href=\"https://atu.corpautohome.com/course/detail/?bs=list&amp;id=130\">之家学宫: 汽车电商商品系统构建实践</a>\"</p><p>[4] <a href=\"https://atu.corpautohome.com/course/detail/?bs=list&amp;id=122\">之家学宫: 百万级汽车电商交易系统构建之路</a>\"</p><p>[5] <a href=\"https://mp.weixin.qq.com/s/aEjpokspkkA861PHoNB6fw\">之家技术: 高可用红包系统构建实战</a>\"</p><p>[6] <a href=\"https://mp.weixin.qq.com/s/9U7OViprl7CjrsYnaNUXEA\">之家技术: 电商技术团队云原生实践</a>\"</p><p>[7] <a href=\"https://mp.weixin.qq.com/s/IfgRtG1TAEQ0NbwvlnKfEA\">之家技术: 新车电商测试数据自动化实践</a>\"</p><p>[8] <a href=\"https://mp.weixin.qq.com/s/YpqoWmsbBUYF84wOU74_wA\">之家技术: 电商秒杀系统的系统架构</a>\"</p><p>[9] <a href=\"https://mp.weixin.qq.com/s/8nSxM5lDOzexFBNErdbjWg\">之家技术: 汽车之家发票总库 DDD 实践</a>\"</p><p>[10] <a href=\"https://www.sohu.com/a/537498545_407401\">ThoughtWorks: 现代企业架构白皮书</a>\"</p><p>[11] <a href=\"https://mp.weixin.qq.com/s/PhBUz0_OuCR6fEAcMh0Hyg\">美团: 业务中台之订单平台化建设实践</a>\"</p><p>[12] <a href=\"https://mp.weixin.qq.com/s/ELofl-1gffA3XeFGBBC2Pw\">有赞: 中台如何助力标准化业务</a>\"</p><p>[13] 吴润. 基于 API 网关的微服务组合策略研究 [J]. 数码世界,2019(03):84-86.</p><p>[14] 辛园园, 李俊晖, 李阵. 微服务组合方法研究进展 [J]. 无线通信技术,2018,27(03):42-46.</p><p>[15] 杨光.Activiti 工作流框架在 OA 系统中的应用 [J]. 电子设计工程,2021,29(11):65-69.</p><p>[16] <a href=\"https://netflix.github.io/conductor/\">Conductor 官方网站. Conductor 官方文档 [EB/OL].</a>\"</p><p>[17] <a href=\"https://github.com/camunda-cloud/zeebe\">Zeebe. Zeebe 源码 [EB/OL].</a>\"</p><p>[18] <a href=\"https://camel.apache.org/docs/\">Apache Camel 官方网站. Apache Camel 官方文档 [EB/OL].</a>\"</p><p>[19] Amaral C J , &nbsp;Bernardes S P , M Conceição, et al. Finding new routes for integrating Multi-Agent Systems using Apache Camel. &nbsp;2019.</p><p>[20] <a href=\"https://blog.csdn.net/significantfrank/article/details/110934799\">COLA 应用架构的最佳实践</a>\"</p><p></p><p></p><h4>作者介绍</h4><p></p><p></p><p>方利 &nbsp;汽车之家高级研发工程师</p><p></p><p>2016 年加入汽车之家，先后负责过电商 ERP 系统、商家系统、线索系统、订单中心、AIDCC 的研发和架构，现主要负责电商交易系统的整体技术架构升级和业务处理等工作。</p><p></p><p></p><h4>推荐阅读</h4><p></p><p></p><p><a href=\"https://www.infoq.cn/video/yL2dLq6M3O02WRW2A80C\">平安消费金融高并发业务架构演进实践与思考</a>\"</p><p><a href=\"https://www.infoq.cn/article/xAWCqCUkkWKqFQTdhhsQ\">一年 100% 云原生化，众安保险架构演进的探索与实践｜卓越技术团队访谈录</a>\"</p><p><a href=\"https://www.infoq.cn/video/ClldtSRLIKa9U0mcPY7Q\">微众银行核心数据库架构演进</a>\"</p><p><a href=\"https://www.infoq.cn/video/aPw3FJXaLwt75zWL8Myz\">闲鱼从零到千万 DAU 的应用架构演进丨QCon</a>\"</p>",
    "publish_time": "2022-09-14 17:54:50",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "详解毫末自动驾驶技术工程能力创新与应用实践",
    "url": "https://www.infoq.cn/article/mCULd4WW6Vi7LfXpYVVy",
    "summary": "<p></p><p>InfoQ获悉，9月13日，中国自动驾驶创企<a href=\"https://www.infoq.cn/article/vHpvk1IV10tKgxCNeg9u\">毫末智行</a>\"在 AI DAY上公布了最新的技术成果和产品，包括：</p><p></p><p>成立两年半，交付三代乘用车辅助驾驶产品，目前已搭载超十款车型搭载大规模量产城市NOH车型摩卡DHT-PHEV激光雷达版计划9月量产，年内发售末端物流自动配送方面，小魔驼2.0量产下线交付。首个数据智能体系MANA完成数十万全要素、多模态CLIPS的标注，积累300万小时中国道路驾驶认知场景库，相当于人类司机4万年，基本完成数据闭环……</p><p></p><h3>选择走渐进式路线</h3><p></p><p></p><p>自动驾驶行业一直有渐进式和跨越式两种路线的争论。自成立以来，毫末智行一直走的是渐进式发展路线。</p><p></p><p>毫末智行董事长张凯认为，辅助驾驶将是通向自动驾驶的必由之路。目前中国已成为全球智能汽车主战场，预计到2025年，高级别辅助驾驶搭载率超过70%。在智能驾驶这一时代风口之下，“数据是驱动自动驾驶成熟的核心要义，渐进式路线是数据积累的最佳路径”越来越被行业所公认，成为自动驾驶公司的普遍发展方向。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/3e/cd/3ed916d0bbd7ca353aa89b4a626ae0cd.png\" /></p><p></p><p></p><p>他总结到，成立3年多来，公司突破了大规模、多车型自动驾驶量产难关，末端物流自动配送车技术成本难关，大规模数据处理及大模型应用难关这三大行业难关。</p><p></p><p>据介绍，在自动驾驶落地方面，截止到目前，搭载毫末HPilot产品的已有超过十款乘用车型量产落地，已经搭载上市车型包括魏牌摩卡、魏牌拿铁、魏牌玛奇朵、坦克300、坦克500、哈弗神兽、拿铁DHT-PHEV等。目前正在陆续交付中的车型有摩卡DHT-PHEV激光雷达版、欧拉闪电猫、欧拉芭蕾猫、全新一代长城炮等。</p><p></p><p>目前，毫末已具备异步并行开发超过30个智能驾驶项目。在智能驾驶产品流程化开发方面，毫末2个月内匹配完成，标定效率高；智能驾驶产品经过鲁棒性设计，达到100%一次性过线率。</p><p></p><p>张凯还谈到了疫情对自动驾驶行业的影响。“2021年底，我们预计2022年会是极端困难的一年。但经历过上半年的疫情和各种黑天鹅事件，我们发现，实际的情况比去年底的预测要更艰难。智能驾驶规模化的大考需要克服疫情、供应链、技术本身带来的重重挑战。”</p><p></p><p>今年4月，张凯立下了“2022年要打赢三场战役”的<a href=\"https://www.infoq.cn/article/kp78XutL6b9w0ve9CIqH\">Flag</a>\"，即打赢“数据智能技术之战”、“辅助驾驶城市场景之战”、“末端无人物流车规模之战”。如今半年过去，进入目标攻坚期。接下来，张凯宣布将按照“五大制胜法则”去实现这个Flag，并将在接下来的4个月冲刺年初定下的量产交付目标。</p><p></p><p>具体而言，这“五大制胜法则”是：智能驾驶产品开发始终将安全放在首位；产品体验“真香”才是王道；基于用户真实场景数据驱动，实现产品快速迭代；实现感知智能与认知智能高度一体化；以开放的心态赋能客户，促进行业共同进步。</p><p></p><h3>自动驾驶进入数据驱动的3.0时代</h3><p></p><p>自动驾驶是这几年AI行业最为热门的赛道。当下，自动驾驶技术研发具有哪些演进特点以及最新趋势？</p><p></p><p>毫末智行CEO顾维灏博士对当下自动驾驶领域的发展评论称，自动驾驶已经进入数据驱动的3.0时代。这一阶段呈现出如下几个发展趋势。</p><p></p><p>Attention大模型是当前AI发展的新趋势，但由于其对算力的需求远远超出摩尔定律，由此带来了高算力需求、高训练成本、高落地难度等挑战。</p><p></p><p>毫末团队正在重点解决这些问题。据介绍，毫末正在通过低碳超算来降低自动驾驶成本，通过改进车端模型和芯片的设计来实现大模型的车端落地，通过数据的组织让大模型发挥更大效力。基于Attention大模型，自动驾驶需要大规模且多样性的训练数据，而基于大规模真实人驾数据的乘用车辅助驾驶，才有能力积累到足够规模和足够多样的数据。“我们有理由认为，辅助驾驶是通往自动驾驶的必由之路。因为只有辅助驾驶，才有能力积累到足够规模和足够多样的数据。”顾维灏表示。</p><p></p><p>“以数据驱动的自动驾驶3.0时代已经到来。”顾维灏表示，自动驾驶近十年的发展可分为硬件驱动、软件驱动、数据驱动三大时代。数据驱动时代，是完全不一样的时代，大模型+海量数据“双剑合璧”，数据开启自训练模式；感知技术上，用多模态传感器联合输出结果；认知技术上，以可解释的场景化驾驶常识为主；自动驾驶里程由硬件驱动、软件驱动时代的百万公里、上千万公里，直接飙升到了1亿公里以上。以数据驱动为核心，以上4个技术条件并行成立才能称为真正进入自动驾驶3.0时代。</p><p></p><p>毫末一直在为自动驾驶3.0时代做准备，在感知、认知、模式建设上，都按照数据驱动的方式建设。&nbsp;据顾维灏介绍，毫末自2021年6月启动了针对transformer大模型的研究和落地尝试。经过一年多在训练平台改造升级、数据规格和标注方法的切换准备、针对感知、认知具体任务的模型细节探索等方面的实践，为毫末在城市导航辅助驾驶场景中的应用打下基础。</p><p></p><h3>面向自动驾驶城市场景挑战，数据智能体系MANA升级</h3><p></p><p>顾维灏还分享了毫末数据智能体系MANA在自动驾驶城市场景中面临的挑战与新功能升级。</p><p></p><p>顾维灏表示，城市道路主要存在“4类场景难题、6大技术挑战”。其中场景难题主要包括“城市道路养护频繁”“大型车辆密集”“变道空间狭窄”“城市环境多样”。</p><p></p><p>解决上述场景难题，技术层面面临六大挑战：如何在自动驾驶领域应用大模型，如何让数据发挥更大的价值，如何使用重感知技术解决现实空间理解问题，如何使用人类世界的交互接口，如何让仿真更真，如何让自动驾驶系统运动起来更像人。</p><p></p><p>为了应对上述挑战，MANA感知智能、认知智能等方面推出了更新升级。</p><p></p><p>首先，MANA通过使用大规模量产车无标注数据的自监督学习方法打造模型效果，相比只用少量标注样本训练，训练效果提升3倍以上，以更好适应自动驾驶各种感知任务需求。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/8f/ce/8f1d8edf2d62f7fb25f06e9db5da4fce.png\" /></p><p></p><p>其次，MANA感知能力提升，让海量数据不再被区别对待。面对巨大数据规模下的“数据效率”难题，MANA构建了增量式学习训练平台，抽取部分存量数据加上新数据组合成一个混合数据集。训练时要求新模型和旧模型的输出保持尽量一致，对新数据的拟合尽量好。相比常规做法，整体算力节省80%，响应速度提升6倍。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/b5/de/b518aecec72ce03a6ce130e6fe0eebde.png\" /></p><p></p><p></p><p>第三，MANA感知能力更强。通过使用时序的transformer模型在BEV空间上做了虚拟实时建图，使得感知车道线的输出更加准确和稳定，让城市导航自动驾驶告别高精地图依赖。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/0e/e1/0e3898e6ececed1acf78e0abcd7ebee1.png\" /></p><p></p><p>第四，MANA感知能力更准，MANA通过升级车上感知系统，对刹车灯、转向灯状态进行专门识别，让驾驶员在处理前车急刹、紧急切入等场景中更安全和舒适。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/23/1e/239b8fc4a9ebaca2f1cc0b781aa2de1e.png\" /></p><p></p><p>第五，MANA认知能力也再次进化。面对路口这一城市最复杂场景，MANA在仿真系统中引入了高价值的真实交通流场景，与浙江德清、阿里云合作，将路口这一城市最复杂场景引入仿真引擎，构建自动驾驶场景库，通过自动驾驶的真实仿真验证，时效性更高、微观交通流更真实，破解城市路口通过“老大难”问题。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/7e/07/7eed1393af48fd2fd28c4cf2f8e34707.png\" /></p><p></p><p>现场，毫末联合浙江德清、阿里云发布“中国首个基于车路协同云服务的大规模自动驾驶场景库”，这是一个使用真实交通数据生成、满足数据合规要求的自动驾驶场景库，将进一步加速自动驾驶成熟度提升以及车路云协同发展。</p><p></p><p>第六，MANA认知智能迎来新阶段。通过对覆盖全国的海量人类驾驶进行深度理解，学习常识和动作拟人化，使得毫末辅助驾驶决策更像人类实际驾驶行为，可结合实际情况选择最优路线保证安全，体感更像老司机。</p><p></p><p>基于对自动驾驶3.0时代的观察，以及大模型训练对算力的巨大消耗需求，毫末在现场还正式宣布推出毫末超算中心。“如何提升训练效率降低训练成本，实现低碳计算，是自动驾驶走进千家万户的一个关键门槛。”顾维灏表示，毫末超算中心的目标是满足千亿参数大模型，训练数据规模100万clips，整体训练成本降低200倍。</p><p></p><h3>毫末城市NOH计划9月量产</h3><p></p><p>在2022年8月的成都车展上，魏牌宣布搭载毫末城市NOH的全新摩卡DHT-PHEV激光雷达版，计划9月量产，年内发售，并且会实现上市即交付。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/c6/a4/c6cd38863544c5ba0971183fa308dfa4.png\" /></p><p></p><p>业界最关注的是自动驾驶功能是否能应对城市复杂的交通路况。毫末城市NOH采用“重感知、轻地图、大算力”技术路线，其MANA此次六大里程碑升级为城市NOH落地提速，具备智能识别交通灯、智能左右转、智能变道、智能躲避障碍物-静态、智能躲避障碍物-动态等五大亮点功能，接下来还将发布智慧交通流处理功能。</p><p></p><h3>末端物流自动配送车“小魔驼2.0”下线交付</h3><p></p><p>末端物流自动配送车正越来越多的出现在街头巷尾，解决“最后一公里”的物流配送难题。</p><p></p><p>在政策、技术、市场等多方面因素助推下，行业正在迎来规模化爆发。今年4月，毫末发布了中国首款10万元级别的末端物流自动配送车产品——“毫末小魔驼2.0”。</p><p></p><p>时隔5个月后，毫末宣布“毫末小魔驼2.0”已下线交付。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/0c/82/0c9242f3c52b0f5000b74b0f620c4982.png\" /></p><p></p><p></p><p>据张凯介绍，“毫末小魔驼2.0”具备L4级自动驾驶、远程驾驶、低成本部署、车辆管理平台、远程监控平台、订单管理平台、微信小程序七大核心功能，确保了小魔驼2.0的低成本部署以及订单配送的高效执行。在商用化方面，单车售价12.88万，预计年产量一万台，可覆盖园区及城市开放道路。</p><p></p><h3>张亚勤、贾扬清等AI科学家分享自动驾驶观点</h3><p></p><p>HAOMO AI DAY上，中国工程院院士、清华大学教授、清华智能产业研究院（AIR）院长张亚勤，阿里巴巴集团副总裁、阿里云计算平台负责人<a href=\"https://www.infoq.cn/article/F30l0WkNeIOUw0e8UZhe\">贾扬清</a>\"、寒武纪CEO 陈天石等AI科学家分享了对自动驾驶发展情况的看法。</p><p></p><p>张亚勤表示，自动驾驶是未来5年AI领域极具挑战和复杂的任务，也是推动全球汽车工业变革的重要技术力量。“我认为自动驾驶是可以实现的，其在开放环境的长期运行还需要经受一系列的技术与社会接受度的挑战，以解决安全与可靠性问题。而在落地路径上，垂直领域自动驾驶将更快落地，并逐渐扩散布局到通用驾驶落地。”</p><p></p><p>贾扬清分享了他对自动驾驶领域AI工程化的思考。他表示，通过阿里与毫末在AI大计算和优化领域的创新与探索，看到了双方未来在AI大计算、云端协同和车路协同，以及更加宽泛的探索数据和AI的结合三个领域巨大的合作机会。未来，希望阿里和毫末不断加强紧密合作，在自动驾驶领域持续深耕，共同建立具有全行业影响力的自动驾驶智能体系。</p><p></p><p>寒武纪CEO 陈天石认为，智能汽车时代，不管是云端还是车端，算力需求都在指数级攀升，算力已经成为智能汽车升级的核心驱动力。</p><p></p><p>原文链接：</p><p></p><p><a href=\"https://thenextweb.com/news/deepmind-feuds-russian-scientists-over-quantum-ai-research\">https://thenextweb.com/news/deepmind-feuds-russian-scientists-over-quantum-ai-research</a>\"</p>",
    "publish_time": "2022-09-14 18:45:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]