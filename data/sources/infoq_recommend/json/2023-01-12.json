[
  {
    "title": "Entity Framework 7支持批量操作和JSON列",
    "url": "https://www.infoq.cn/article/TJkWb6kDpb5YzCOSc0Hd",
    "summary": "<p>微软于<a href=\"https://devblogs.microsoft.com/dotnet/announcing-ef7/\">2022年11月</a>\"连同.NET 7发布了用于.NET Framework的对象到数据库映射器库Entity Framework（EF）Core 7。新版本提升了保存数据的性能，支持JSON列操作，支持高效的批量操作，并包含许多小的修复和改进。EF7 Core可用于.NET 7和.NET 6。</p><p>&nbsp;</p><p>微软于2022年11月8日通过<a href=\"https://www.nuget.org/packages/Microsoft.EntityFrameworkCore/7.0.0\">NuGet包</a>\"的形式发布了EF7。根据<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/breaking-changes\">重大变更文档</a>\"所述，EF Core 7中最重要的变化是默认将SQL Server连接视为加密连接。开发者要么必须在他们的机器上配置有效的证书，要么显式放松安全限制，否则的话在EF6中有效的连接字符串在EF7中将会抛出异常。</p><p>&nbsp;</p><p>众所周知，EF7 Core的一个改进是在使用SaveAsync方法保存数据时的性能提升。在某些情况下，与同一机器上的EF6 Core相比，性能提升<a href=\"https://www.infoq.com/news/2022/08/microsoft-EF-core7/\">超过50%</a>\"。</p><p>&nbsp;</p><p>EF7 Core支持将数据库中<a href=\"https://learn.microsoft.com/ef/core/what-is-new/ef-core-7.0/whatsnew#json-columns\">包含JSON文档的文本列</a>\"作为查询对象。作为数据库查询的一部分，开发者可以对文档中的JSON属性进行过滤和排序。EF7提供了对JSON列的通用支持和针对SQL Server的具体实现。</p><p>&nbsp;</p><p>针对数据库的批量操作，例如批量更新或删除，EF7对其进行了重写。标准的SaveChangesAsync方法会影响多条记录，SQL执行结果会被载入内存。EF7现在有两个新方法，<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/whatsnew#executeupdate-and-executedelete-bulk-updates\">ExecuteUpdateAsync和ExecuteDeleteAsync</a>\"，它们会立即在服务器端执行批量操作，不会将任何实体加载回内存。</p><p>&nbsp;</p><p>默认情况下，EF Core将.NET类型的继承层次结构映射到单张数据库表，这种映射策略叫作每层次表（Table-per-Hierarchy，TPH）。EF Core 5加入了每类型表（Table-per-Type，TPT）策略，层次结构中的每一个类型都被映射到一张数据库表。<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/whatsnew#table-per-concrete-type-tpc-inheritance-mapping\">EF Core 7加入了每具体类型表</a>\"（Table-per-Concrete-Type，TPC）策略，每个非抽象类型映射到一张数据库表，而抽象类型列被添加到抽象类型的具体实现的表中。</p><p>&nbsp;</p><p>EF7还带来了其他改进，比如在数据库优先的反向工程中<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/whatsnew#custom-reverse-engineering-templates\">支持自定义T4模板</a>\"，支持<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/whatsnew#model-building-conventions\">覆盖和更改默认模型约定</a>\"，<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/whatsnew#new-and-improved-interceptors-and-events\">改进的拦截器和事件</a>\"，<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-7.0/whatsnew#stored-procedure-mapping\">插入、更新和删除到存储过程的映射</a>\"。</p><p>&nbsp;</p><p>在过去，.NET开发人员认为Entity Framework笨重且缺点多多，但现在的<a href=\"https://www.reddit.com/r/dotnet/comments/x8bkgy/comment/inhrqvw/?utm_source=share&amp;utm_medium=web2x&amp;context=3\">新版本被认为是一种高效且具有容错能力的ORM框架</a>\"。</p><p>&nbsp;</p><p>随着EF7的发布，<a href=\"https://learn.microsoft.com/en-us/ef/core/what-is-new/ef-core-8.0/plan\">EF8的路线图</a>\"中增加了更多的JSON列增强，支持.NET值对象，并能够将未映射的类型作为查询结果返回。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/12/ef7-core-json/\">https://www.infoq.com/news/2022/12/ef7-core-json/</a>\"</p><p></p><p>相关链接：</p><p><a href=\"https://www.infoq.cn/article/UjJrO7kBo8QSuFes5tcz\">InfoQ 2022 年趋势报告：.NET篇</a>\"</p><p><a href=\"https://www.infoq.cn/article/7LF1ZEZtpZ7PGHrS9w2F\">微软将于年底终止对 .NET Core 3.1 的支持</a>\"</p><p><a href=\"https://www.infoq.cn/article/cQA8YzpAjDzONVf1mAky\">.NET分布式缓存中的发布和订阅模式</a>\"</p>",
    "publish_time": "2023-01-12 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]