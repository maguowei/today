[
  {
    "title": "Meta将百万行代码从Java移植到Kotlin",
    "url": "https://www.infoq.cn/article/aTY2ysTOjaEwUv9Hzls6",
    "summary": "<p>Meta一直在<a href=\"https://engineering.fb.com/2022/10/24/android/android-java-kotlin-migration/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjkxNjY4MzYsImZpbGVHVUlEIjoiOHFPMXJXMFVWNU1GYVI4aCIsImlhdCI6MTY2OTE2NjUzNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.sCjTb5aVi_x1cnjBZ1jc4QWKIEUXgqkG1gYhh1RUxgE\">将他们的Android代码库从Java移植到Kotlin</a>\"。Meta的工程师Omer Strulovich解释说，在这个过程中，他们学到了许多有趣的经验教训，并积累了一些有用的方法。</p><p></p><p>Meta之所以决定采用Kotlin开发Android应用，是因为他们看到了<a href=\"https://www.infoq.cn/article/qt51vqATE7jf_bpw5ggJ\">Kotlin</a>\"相对于Java的优势，包括可空性和函数式编程支持、更简短的代码，以及创建特定领域语言的可能性。Kotlin工程师还清楚地知道，他们必须将尽可能多的Java代码库移植到Kotlin，以防止Java空指针问题潜入Kotlin代码库，并减少需要维护的Java代码。这不是一件容易的事，从一开始就需要做相当多的调研工作。</p><p></p><p>Meta工程师必须克服的第一个障碍是，Meta使用的几个内部优化工具无法与Kotlin正常兼容。例如，Meta必须更新<a href=\"https://github.com/facebook/redex?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjkxNjY4MzYsImZpbGVHVUlEIjoiOHFPMXJXMFVWNU1GYVI4aCIsImlhdCI6MTY2OTE2NjUzNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.sCjTb5aVi_x1cnjBZ1jc4QWKIEUXgqkG1gYhh1RUxgE\">ReDex Android字节码优化器</a>\"和语法高亮显示工具Pygments的<a href=\"https://github.com/pygments/pygments/pull/1699?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjkxNjY4MzYsImZpbGVHVUlEIjoiOHFPMXJXMFVWNU1GYVI4aCIsImlhdCI6MTY2OTE2NjUzNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.sCjTb5aVi_x1cnjBZ1jc4QWKIEUXgqkG1gYhh1RUxgE\">词法分析器组件</a>\"，并构建一个<a href=\"https://github.com/google/ksp?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjkxNjY4MzYsImZpbGVHVUlEIjoiOHFPMXJXMFVWNU1GYVI4aCIsImlhdCI6MTY2OTE2NjUzNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.sCjTb5aVi_x1cnjBZ1jc4QWKIEUXgqkG1gYhh1RUxgE\">Kotlin符号处理（KSP）API</a>\"，用于创建Kotlin编译器插件。</p><p></p><p>在代码转换方面，Meta工程师选择使用Kotlin官方转换器J2K，它可以作为编译器插件使用。除了一些特定的框架（包括JUnit）之外，这种方法工作得非常好。但对于特定的框架，这个工具缺乏足够的知识，无法进行正确的转换。</p><p></p><p></p><blockquote>我们已经遇到了很多需要进行小修复的情况。有些很容易做到（比如替换isEmpty），有些需要做一些研究工作才能搞清楚（与JUnit规则的情况一样），还有一些是针对J2K本身的bug的变通方法，这些bug可能会导致出现任何问题——从构建时错误到运行时行为。</blockquote><p></p><p></p><p>处理这种情况的正确方法包括三个步骤：首先是准备好Java代码，然后在headless模式的Android Studio实例中自动运行J2K，最后对生成的文件进行后续处理，进行所有所需的重构和修复。Meta已经<a href=\"https://github.com/fbsamples/kotlin_ast_tools?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjkxNjY4MzYsImZpbGVHVUlEIjoiOHFPMXJXMFVWNU1GYVI4aCIsImlhdCI6MTY2OTE2NjUzNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.sCjTb5aVi_x1cnjBZ1jc4QWKIEUXgqkG1gYhh1RUxgE\">开源</a>\"了许多重构工具，以帮助其他开发人员完成相同的任务。</p><p></p><p></p><blockquote>这些自动化转换过程并不能解决所有的问题，但我们能够优先解决最常见的问题。我们针对模块运行转换脚本（我们贴切地称之为Kotlinator），优先考虑活跃和简单的模块。然后我们观察生成的代码：它们可以通过编译吗？它们是否可以顺利通过我们的持续集成管道？如果可以，我们就提交它们。如果不可以，我们就研究问题，并设计新的自动重构过程来修复它们。</blockquote><p></p><p></p><p>Meta已经通过这种方式移植了超过1000万行Kotlin代码，让大多数的Meta Android工程师切换到<a href=\"https://www.infoq.cn/article/TaUjgp7HuFEXBcAu_rw8\">Kotlin</a>\"来完成他们的日常工作。这个过程也验证了许多预期的结果，包括更短的生成代码和不变的执行速度。但是，从消极的方面来看，Kotlin编译器比Java编译器慢得多。使用KSP来处理注解，改进Java存根生成和编译时间，这为优化带来了新的可能性，不过仍然需要持续的努力。</p><p></p><p>如果你对完整的细节感兴趣，请不要错过Meta的这篇关于迁移到Kotlin的文章。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/11/meta-port-java-kotlin/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjkxNjY4MzYsImZpbGVHVUlEIjoiOHFPMXJXMFVWNU1GYVI4aCIsImlhdCI6MTY2OTE2NjUzNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.sCjTb5aVi_x1cnjBZ1jc4QWKIEUXgqkG1gYhh1RUxgE\">https://www.infoq.com/news/2022/11/meta-port-java-kotlin/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/lOCkY3lV2ADRvXcsZEb2\">Kotlin&nbsp;Multiplatform Mobile 进入 Beta 测试</a>\"</p>",
    "publish_time": "2022-11-24 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "如何管理云原生应用程序的依赖关系",
    "url": "https://www.infoq.cn/article/1TvgZix4z6HlMubu061X",
    "summary": "<p></p><p>许多企业正在将他们的业务转移到云端，这使得他们能够更灵活、更迅速地响应市场的变化，并且更易于拓展自己的业务。但由于要进行大量的规划和实施，所以向云端迁移可能也是一项非常艰巨的任务。术语“云原生”是一种利用云计算交付范式的优势进行开发和运行应用程序的方式。</p><p></p><h2>“云原生”意味着什么？</h2><p></p><p></p><p>应用程序在哪里被托管并不重要，重要的是如何开发和部署它们。云原生开发既可以使用公共云，也可以使用私有云。任何云存储都具有存储功能并支持来自全球任意一个公共网关的访问，而无需考虑实际地理位置。它们能够为软件开发者提供按需访问的处理能力以及最新的数据和应用服务。<a href=\"https://www.mend.io/resources/blog/a-brief-guide-to-cloud-native-applications-technology-and-security/\">云原生应用</a>\"是使用微服务开发的，而微服务是小型、独立的服务，它们共同组成了一个更大的应用程序。</p><p></p><p>微服务是一种能够让开发者更轻松地构建和维护大型应用程序的软件架构。在微服务架构中，将一个应用分成几个独立的小块，即为服务。每一个服务都可以独立开发和部署，整个过程具有更大的灵活性和可扩展性。</p><p></p><p>微服务可以在几个方面使云基础设施受益。首先，它们允许对应用程序的各个部分进行更细化地控制，云中的应用程序可以轻松地进行部署和管理。其次，微服务使应用程序扩展变得更加容易。当一个应用程序需要扩展或缩减规模时，只对需要改变的服务进行更新即可。最后，微服务可以通过允许滚动更新和部署来提高可用性。当某个服务发生故障时，其他服务会持续运行，从而提高整个系统的弹性。</p><p></p><p>当一个数据请求被提交后，它会被路由到一些不同的 Docker 容器，每个容器都在运行一套单独的微服务，为消费者提供服务。创建它们的目的是提供被广泛认可的业务价值，比如快速纳入用户反馈以实现持续改进的能力。每个容器负责操作一个针对服务客户的单一服务，这些容器能够为用户提供可扩展性和足够的保护水平。</p><p></p><h2>依赖关系如何适应？</h2><p></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/0b/2b/0b70defa10bcdfde70f5bf8072edc42b.png\" /></p><p></p><p>依赖关系是一段代码和另一段代码之间的隐性或显性关系，可以认为是为了正确运行，一段代码对另一段代码的要求。</p><p></p><p>有两种主要类型的依赖关系：硬依赖和软依赖。硬依赖是指不破坏依赖于它们的代码就无法更改的依赖关系，软依赖关系则可以在不破坏依赖代码的情况下就能被更改。</p><p></p><p>依赖关系可以是内部的，也可以是外部的。内部依赖是指同一软件系统中两段代码之间的依赖关系，外部依赖是指位于不同软件系统中的两段代码之间的依赖关系。</p><p></p><p>在云原生应用中，每个微服务都有自己的依赖关系，这些依赖关系由运行微服务的容器来管理，容器负责确保使用正确版本的依赖关系，并使其保持最新。</p><p></p><p>由于从头开始开发这些特性需要大量的时间，并且设计颇具复杂性，因此使用现有的解决方案要高效得多。既然需要这么多的依赖，也就需要管理这些依赖的解决方案，因此就有了 Maven 或 NPM 这样的包管理器。例如，NPM 要求在部署前将各种依赖关系加载到容器中。许多依赖关系是开源的，各种研究人员都能接触并发现其中的漏洞，这也是它们持续更新的原因之一。</p><p></p><p>依赖关系是开发者非常关心的问题，一旦被忽视，就会演变为安全问题。开发者如果不够谨慎，便会通过依赖存在已知漏洞的代码，很容易将漏洞引入它们的代码库中。这就是为什么在安装第三方依赖关系之前需要对它们进行扫描，并在它们可用时应用安全补丁是很重要的。</p><p></p><p>举个例子，<a href=\"https://nodejs.org/en/\">NodeJS</a>\" 通常每月更新一次，每次更新都会修复几个漏洞。因此，必须定期更新这些系统，以确保可以尽可能多地避免与依赖有关的漏洞。</p><p></p><h2>依赖关系管理的最佳实践</h2><p></p><p>当谈论<a href=\"https://www.mend.io/free-developer-tools/blog/dependency-management/\">依赖关系管理</a>\"时，我们会谈论很多不同的策略和考虑事项，例如使用自动依赖关系管理工具或软件包管理器。为了确保依赖关系得到有效管理，以下是一些可以利用的最佳实践。</p><p></p><h3>检测所有未使用的依赖关系</h3><p></p><p>你可以使用 <a href=\"https://github.com/depcheck/depcheck\">depcheck</a>\" 来检查是否存在任何没有被使用的依赖关系。需要使用以下命令来安装 depcheck。</p><p></p><p><code lang=\"bash\">npm install depcheck -g</code></p><p></p><p>安装完毕后，你可以运行下面的命令来检查是否存在未使用的依赖关系。</p><p></p><p><code lang=\"plain\">depcheck</code></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/ac/2d/ac83597aec73fd85958fd38c155b432d.png\" /></p><p></p><p></p><h3>检测所有过期的依赖关系</h3><p></p><p>大多数依赖关系是开源的，通常在安全研究人员发现漏洞或增加新的特性时，会在一段时间内更新一次。因此，你的依赖关系可能存在过期的风险。因此，验证和更新<a href=\"https://docs.npmjs.com/cli/v6/commands/npm-outdated\">过期的依赖关系</a>\"非常关键。</p><p></p><p>要检查过时的依赖关系，你可以通过导航到 NPM 文件夹打开终端，运行以下命令：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/96/a3/96a4dd973b9450f1601babbf616112a3.png\" /></p><p></p><p>你也可以使用一个简单的依赖关系检查脚本，它将检查一个 repo 或软件包的所有依赖关系。</p><p></p><p><code lang=\"bash\">#!/bin/bash\nDIRNAME=${1:-.}\ncd $DIRNAME\n\nFILES=$(mktemp)\nPACKAGES=$(mktemp)\n\nfind . \\\n    -path ./node_modules -prune -or \\\n    -path ./build -prune -or \\\n    \\( -name \"*.ts\" -or -name \"*.js\" -or -name \"*.json\" \\) -print &gt; $FILES\n\nfunction check {\n    cat package.json \\\n        | jq \"{} + .$1 | keys\" \\\n        | sed -n 's/.*\"\\(.*\\)\".*/\\1/p' &gt; $PACKAGES\n\n    echo \"--------------------------\"\n    echo \"Checking $1...\"\n    while read PACKAGE\n    do\n        RES=$(cat $FILES | xargs -I {} egrep -i \"(import|require).*['\\\\\"]$PACKAGE[\\\\\"']\" '{}' | wc -l)\n        if [ $RES = 0 ]\n        then\n            echo -e \"UNUSED\\t\\t $PACKAGE\"\n        else\n            echo -e \"USED ($RES)\\\\t $PACKAGE\"\n        fi\n    done &lt; $PACKAGES\n}\n\ncheck \"dependencies\"\ncheck \"devDependencies\"\ncheck \"peerDependencies\"\n</code></p><p></p><h3>保持所需的依赖关系更新</h3><p></p><p></p><p>由于所使用的依赖关系种类繁多，因此有必要确保所需的依赖关系始终保持最新，以确保最佳性能。手动检查和升级这些依赖关系通常需要大量的时间。因此，各种各样的组织利用自动化的依赖关系管理工具，以确保他们的依赖关系在一致的基础上及时地保持更新。NPM 应用程序中的依赖关系是在仓库的 package.json 文件中定义的。这些文件具有以下类型的内容：</p><p></p><p><code lang=\"json\">{\n  \"name\": \"herodevs-packages\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"precommit\": \"lint-staged\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\",\n    \"build-lazy\": \"ng build lazy\",\n    \"build-dynamic\": \"ng build dynamicService\",\n    \"npm-pack-lazy\": \"cd dist/loader &amp;&amp; npm pack\",\n    \"npm-pack-dynamic\": \"cd dist/dynamic &amp;&amp; npm pack\",\n    \"package-lazy\": \"npm run build-lazy &amp;&amp; npm run npm-pack-lazy\",\n    \"package-dynamic\": \"npm run build-dynamic &amp;&amp; npm run npm-pack-dynamic\",\n    \"package\": \"rm -rf dist/ &amp;&amp; npm run package-dynamic &amp;&amp; npm run package-lazy\"\n  },\n  \"private\": false,\n  \"dependencies\": {\n    \"@angular/animations\": \"^8.0.0\",\n    \"@angular/common\": \"^8.0.0\",\n    \"@angular/compiler\": \"^8.0.0\",\n    \"@angular/core\": \"^8.0.0\",\n    \"@angular/forms\": \"^8.0.0\",\n    \"@angular/platform-browser\": \"^8.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^8.0.0\",\n    \"@angular/router\": \"^8.0.0\",\n    \"core-js\": \"^2.5.4\",\n    \"rxjs\": \"~6.5.2\",\n    \"zone.js\": \"~0.9.1\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"~0.800.0\",\n    \"@angular-devkit/build-ng-packagr\": \"~0.800.0\",\n    \"@angular/cli\": \"~8.0.2\",\n    \"@angular/compiler-cli\": \"^8.0.0\",\n    \"@angular/language-service\": \"^8.0.0\",\n    \"@types/jasmine\": \"~2.8.8\",\n    \"@types/jasminewd2\": \"~2.0.3\",\n    \"@types/node\": \"~8.9.4\",\n    \"codelyzer\": \"^5.0.1\",\n    \"husky\": \"1.3.1\",\n    \"jasmine-core\": \"~2.99.1\",\n    \"jasmine-spec-reporter\": \"~4.2.1\",\n    \"karma\": \"~3.0.0\",\n    \"karma-chrome-launcher\": \"~2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"~2.0.1\",\n    \"karma-jasmine\": \"~1.1.2\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"lint-staged\": \"8.1.0\",\n    \"ng-packagr\": \"^5.1.0\",\n    \"prettier\": \"1.16.1\",\n    \"protractor\": \"~5.4.0\",\n    \"ts-node\": \"~7.0.0\",\n    \"tsickle\": \"^0.35.0\",\n    \"tslib\": \"^1.9.0\",\n    \"tslint\": \"~5.11.0\",\n    \"typescript\": \"~3.4.5\"\n  },\n  \"lint-staged\": {\n    \"*.{ts,tsx}\": [\n      \"prettier --parser typescript --writeprettier --parser typescript --write\",\n      \"git add\"\n    ]\n  }\n}\nFooter\n© 2022 GitHub, Inc.\nFooter navigation\nTerms\nPrivacy\nSecurity\n</code></p><p></p><h3>使用自动化依赖关系管理工具</h3><p></p><p>依赖关系管理的自动化有助于以下几个方面。它不仅可以加快你的开发过程，而且还可以确保你的团队中的每个人都在使用相同版本的依赖关系。自动化工具的工作原理是查看你在代码中声明的依赖关系，并将它们与可用的版本进行比较。如果有一个较新的版本可用，该工具将更新你的项目以使用它。</p><p></p><p>与依赖关系相关的更新日志通常包括在拉取请求中。在配置依赖关系管理工具时，你有很多不同的选项可以选择，比如更新时间，哪个依赖关系必须被更新，如果拉取请求需要自动合并，需要满足什么条件，以及其他许多事项。</p><p></p><p><a href=\"https://github.com/marketplace/renovate\">Mend Renovate</a>\" 就是一个例子，它是一个开源工具，为所有类型的<a href=\"https://www.mend.io/free-developer-tools/blog/why-and-how-you-should-automate-dependency-updates/\">依赖关系更新</a>\"自动创建拉取请求。Renovate 与其他依赖关系更新工具不同，因为它是完全可配置的，可以设置为定期自动更新依赖关系，或者只在有新的安全更新时自动更新。它提供的功能包括：完全自动化地拉取请求创建和合并，基于软件包流行度和测试数据的依赖关系选择，支持多个软件包管理器，包括 npm、yarn、composer，以及为每个仓库定制的更新规则。</p><p></p><h2>结语</h2><p></p><p></p><p>在云原生世界中，一个典型的环境是由各种各样的依赖关系支持的。全面地测试这些依赖关系对任何云原生应用的成功都至关重要。然而，手动更新所有的依赖关系可能很困难，也很耗时。自动化的依赖管理工具可以帮助减少花在管理依赖关系上的时间，也可以提高代码的质量。</p><p></p><p>作者简介：</p><p></p><p>Guy Bar-Gil，一位经验丰富的产品驱动增长（Product-Led Growth，PLG）主管，在 Mend 公司领导产品驱动增长。在加入 Mend 公司之前，曾在研发团队中任职，并在以色列国防军中担任过战斗操作员。</p><p></p><p>原文链接：</p><p></p><p>https://www.mend.io/free-developer-tools/blog/cloud-native-applications-and-managing-their-dependencies/</p>",
    "publish_time": "2022-11-24 09:09:06",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "不确定的时代下，技术人如何平稳成长与进阶？｜InfoQ大会早班车第28期",
    "url": "https://www.infoq.cn/article/c6Q7M7MRjWxyrWjc36I1",
    "summary": "<p>疫情下，不确定性都在增加，企业“降薪”“优化”纷纷来袭，如何管理好自己的身心健康，平稳过度与成长，是我们所关注的话题，本次大会早班车邀请到国家二级心理咨询师王宇、字节跳动商业化技术架构负责人王衎，携手为技术人健康成长加码。</p>",
    "publish_time": "2022-11-24 10:10:38",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "怎么用数字化技术建一座“智慧金矿”",
    "url": "https://www.infoq.cn/article/3dePZg9FS9v3ms7WVwXo",
    "summary": "<p>矿山一线作业现场，尤其是地下开采作业，环境复杂，安全管理难度大，危险系数高，这些都是导致各种安全隐患发生的主要原因。而众所周知的是，解决这种极端的复杂问题恰恰是<a href=\"https://www.infoq.cn/article/Dx3Jov25cFcUKvPL0sjv\">AI</a>\"技术的强项。</p><p></p><p>在理想状态下，可以让机器人、智能装备替代人工，深入矿区一线现场开展采掘作业活动，然后通过物联网、云计算、边缘计算等技术把现场环境数据、作业数据实时传输到地面的控制中心，经过AI进行处理、分析，实现对矿山现场作业的全面感知、实时互联、地上地下协同、危险动态预测等等，从而实现现场<a href=\"https://www.infoq.cn/article/UlxmUYElHHjTsU55rFUP\">无人化</a>\"作业。</p><p></p><p>近几年，越来越多的矿山企业正在矿山开采场景使用数字化技术革新生产力，<a href=\"https://www.zhaojin.com.cn/about/index.htm\">招金矿业</a>\"股份有限公司（以下简称“招金矿业”）便是其中之一。作为一家集勘探、开采、选矿及冶炼于一体的综合性黄金生产和黄金冶炼企业，为了应对上述矿山行业面临的普遍问题，招金矿业打造了一套“黄金智慧矿山数据决策平台”。平台对矿山中3000多个关键数据点位进行了实时监测和深度分析，结合现场采、掘、提、运、风、水、电、选、充等业务动态管理梳理了近200个数据场景，成为招金矿业构建智慧矿山的基础。</p><p></p><p>不过，注意我们前面描述的是某种“理想状态”，技术的确可以在矿山开采和管理过程中发挥很大的作用，但是据《麦肯锡研究报告》有关数据显示，由于庞大运营规模、高度复杂性，因变化而产生高额成本，传统采矿业在新技术应用，特别是数字化方面显得速度缓慢，矿业公司设备数据利用率不足1%——这是“现实情况”。</p><p></p><p>围绕这些具体实践过程中到问题，InfoQ采访了山东金软科技部分有限公司总工程师桑锦国博士，深入了解了招金矿业实现数字化技术与现代矿山开采技术融合的挑战与经验，以及AI技术在金矿开采场景的实际价值。</p><p></p><h2>深层资源开采需求大，招工难度高，急需技术补齐产能</h2><p></p><p></p><p>过去，矿山行业普遍存在现场不透明、传递不及时、数据缺分析等问题。桑锦国告诉InfoQ，其背后主要涉及三方面的原因：</p><p></p><p>首先，从技术角度来看，矿山生产环境不仅复杂而且恶劣，导致现场<a href=\"https://www.infoq.cn/article/1q20RyHVsgS7xi4k1yVc\">数据</a>\"的获取难度比较大，这是天然存在的挑战；其次，从管理角度来看，过去矿山的管理模式比较粗放，不同矿区企业的管理水平参差不齐，对数据的规划工作不到位；其三，负责矿区生产的人员水平不一，对数据的重视不足，或者专业数据团队缺乏，导致很多具体的工作无法开展，比如自动设备采集的数据未及时报送，获取数据的时间滞后等等。</p><p></p><p>因此，给矿山“插上科技的翅膀”并不是一件容易的事，要改变这样的现状必须有足够的动力。对于招金矿业来说，这种动力来自于内外部的双向叠加。</p><p></p><p>“随着社会的发展对资源的消耗，地面浅层的资源逐渐耗尽，这时摆在整个矿山行业面前的挑战是，必须往更深、条件更恶劣的井下进行开采，而越往下，温度、地压等条件越差，危险性也越高。与此同时，人口红利正在消失，矿山现场的<a href=\"https://www.infoq.cn/article/c5sK6pGM4B66Afoux54a\">招工难</a>\"度越来越大，基础作业人员大量减少，技术型工种培养难，环境成本、能源成本及合规性成本也越来越高。”桑锦国表示。</p><p></p><p>据他介绍，除了这些来自行业的客观挑战，招金矿业自身还面临另一个诉求：按照政策要求，过去井下生产外包的模式不再适用，这意味着公司层面必须要组建自己的产业化队伍。但是，迫于招工压力，招金矿业不得不考虑通过技术的升级，用<a href=\"https://www.infoq.cn/news/VitTKb0zLljDj4QTPMpw\">智能化</a>\"手段替代部分人工投入，提高生产效率，确保安全生产。</p><p></p><p>具体来说，招金矿业把自身的数字化建设思路拆解为三个阶段：</p><p></p><p>第一阶段，实现智慧矿山管理、技术应用、数据架构和能力建设。在原有的数字化技术应用基础上，建设一体化集成控制系统、全流程数字化选矿厂、智能充填、综合调度、采矿专业调度、安全智能管控、工程项目管理、地测采协同、数据平台。基本实现智慧矿山生产域信息化运行，实现数字化转型的业务、数据横向到边，纵向到端。</p><p></p><p>第二阶段，提升采掘机械化水平，提升业务管理协同能力，实现安全生产一体化。在第一阶段系统建设基础上加强集成，打通生产域的全流程，实现业务管理横向集成到边，实现安全生产一体化集成管控；初步建成工艺模型、控制模型、经济模型、决策模型、安全模型、<a href=\"https://www.infoq.cn/article/iqfk6OvNdQmV1xxTWO03\">知识图谱</a>\"，并赋能业务生产；智慧矿山整体构建完成，数字化转型生产域建成。</p><p></p><p>第三阶段，实现数据赋能，夯实智慧矿山建设成果。建设数据图谱、工艺库、模型库、方案库、知识库等知识类应用，形成经验沉淀，用于业务的持续优化与改进。最终实现智慧矿山建成并发挥整体作用，数字化转型生产域与其他域实现集成，实现流程化、标准化管理，形成招金特色的智慧矿山模式和数字化文化。</p><p></p><h2>采集地下数据，需要完善矿山现场的基础设施建设</h2><p></p><p></p><p>在具体的实践落地过程中，招金矿业很快明确了“数据”是基础中的基础。而要把数据从状况复杂的地下环境中采集出来，则需要矿山现场具有比较完善的基础设施。</p><p></p><p>“第一，是机械化设备向智能化进行改造；第二，是井下网络基础的建设和优化；第三，是设备控制系统，以及通风、排水、配电等辅助系统的自动化改造。初步目标是实现现场的无人化和远程控制。”桑锦国指出，“除此之外，还有一些前沿技术的应用，包括空间信息技术，能够在井下通过三维建模，对矿山进行三维可视化呈现；同时，还涉及物联网、边缘计算、大数据平台、AI等多学科、多专业交叉的<a href=\"https://www.infoq.cn/article/YPbD1WQVSdrX9XiBVjcT\">综合能力</a>\"建设。”</p><p></p><p>以招金矿业着重打造的“黄金智慧矿山数据决策平台”为例：平台从PLC、传感器、智能仪表等各类物联网终端实时直采数据，通过局域网、工业环网，以及WIFI6、5G等无线通信技术，可以实现数据云端传输和接入，人、机、料、环信息互联互通。</p><p></p><p>据了解，该平台覆盖了招金矿业矿山中3000多个数据点位，面对这些海量数据，通过“数据场景”方法，把它们梳理成近200个直观、多维的<a href=\"https://xie.infoq.cn/article/5e966e601cbec18579608a5df\">数据场景</a>\"。并且，构建了围绕产量、效率、设备及能源四个方面的管理指标监控体系，通过多维图形化展示，使得数据真正发挥价值，为企业识别产能提升瓶颈、评估生产效率、掌握设备运行趋势及合理压缩能源消耗提供量化的数据支撑。</p><p></p><p>“人力成本和能耗成本是矿山行业的两大可变成本，所以，追求降本，我们的核心出发点就是通过全面掌握生产各个环节的实时状态，及时发现和响应过程中的异常预警，从而降低能耗、减少设备故障、维修，减少人员投入。从增效的角度来说，主要是减少信息流通环节的时间，加强人与人、人与设备、组织与组织、业务与管理的高效协同。”桑锦国强调。</p><p></p><p>在他看来，“人”是决定这些技术能否顺利落地、发挥价值的关键所在。“不同矿山的规模大小不同，信息化、自动化、智能化水平不同，人员意识差距也比较大。但往往技术的问题是可以克服的，人员的意识如果跟不上，就会变成项目推进过程中的阻力。”</p><p></p><p>正因如此，招金矿业并不是把数据决策平台的建设作为一个简单的信息化项目，而是从思想意识、组织架构、人员配齐等方面进行了全方位的布局。</p><p></p><p>首先，在思想意识层面，招金矿业的一系列规划都是自上而下推行，目的就是让内部员工从意识上先行对齐；其次，在<a href=\"https://www.infoq.cn/article/organization-arch-influence-technology-arch\">组织架构</a>\"层面，招金矿业信息中心整体负责组织公司的信息化规划和建设，从网络建设、硬件配置、软件系统管理上做到一定程度规范，此外在下属矿山企业也设置了大数据（四化）建设办公室，与公司总部信息中心对接；同时，在人员配齐方面，招金矿业还在2019年收购了智能矿山设计、研发、建设、运维公司山东金软科技股份有限公司，为数据管理、数据应用的工作开展提供了充足的人员保障。</p><p></p><h2>用可见的效益，潜移默化影响人的转型意识</h2><p></p><p></p><p>当然，无论是自上而下的体系化规划，还是组织架构的重新调整，都是由外而内的推力。桑锦国认为，只有从根本上改变人的思想意识，才能让数字化项目由内而外形成正向循环。但用他的话说，“这是需要时间的。”</p><p></p><p>“智慧矿山的建设，不是说技术先进性达到了它就完成了，从管理层到一线生产工人都要逐渐达到自觉意识，这件事才有可能做好。但是，这是一个潜移默化的过程，需要循序渐进，我们的办法，是让大家看到这些数字化手段给他们的工作带来实实在在的效益。”</p><p></p><p>也正是基于这一初衷，“黄金智慧矿山数据决策平台”的建设优先选择了“破碎”、“排水”、“提升”等系统作为试点。“从技术成熟度角度来说，这三个场景是目前比较容易做的；而从效益角度来看，它们也是在日常运行中存在明显问题的场景，具有可提升的空间，所以更容易产生效果。”桑锦国向InfoQ记者介绍。</p><p></p><p>拿破碎系统来说，通过工艺分析和历史数据建模，在不改变现有工艺、不增加硬件投入的情况下，破碎效率提高了15%左右；再比如排水系统，通过构建水仓液位和水泵能力模型，根据实时的液位数据，预测水仓的液位变化，并基于水仓的安全上下限，以及峰平谷时段的分布，合理给出水泵的启停建议，能实际节约7%的能耗电费；对于提升系统，通过建立提升机运行速度与运行电流的数据模型，可以根据不同数据表现，建议调速调频，还可以判断罐笼配重异常，建议及时检查等，提高了提升机的安全运行效率。</p><p></p><p>必须强调的是，无论在哪一个场景下，要让这些AI<a href=\"https://xie.infoq.cn/article/c78637e0d3db5513ac232d71c\">算法模型</a>\"奏效，至少需要两个前提——第一，用于分析的数据是准确的；第二，模型的参数配置是合理的。而桑锦国表示，要满足这两个前提条件，要求技术和业务<a href=\"https://b.geekbang.org/?utm_source=geektimeWeb&amp;utm_medium=menu&amp;utm_campaign=entranceplatform&amp;gk_source=2021090101_geektimeweb_menu\">充分融合</a>\"。</p><p></p><p>招金矿业解决这个问题的办法，依旧是从“人”出发。比如，基于“黄金智慧矿山数据决策平台”，会由金软科技业务顾问、数据分析员、工程师与矿山的班组人员、工艺工程师、设备维护人员等一线人员一起组建“数字先锋”小组，每一个数据场景都有一个来自一线“数字先锋”负责，对数据场景持续的使用、深化、优化、创新不断提出建议，同时与小组其他专家一起，利用平台提供的工具工具，快速进行数据试验、原型验证、模型测试、深度分析。</p><p></p><p>“我们会定期把矿山的一些一线领导请到金软科技，针对技术和业务的交流融合给出他们的建议，这也是为了确保我们构建的算法模型能够真正契合于现场，贴合业务需求，能够真正指导现场。”桑锦国强调。</p><p></p><p>可见，虽然数字化注定是一块难啃的“骨头”，但是众企业各有各的招。按照既定计划，招金矿业“智慧矿山”的建造正在稳步推进中。“黄金智慧矿山数据决策平台”的成功上线应用，既为这座“智慧矿山”打下坚实的地基，同时也成为国内黄金矿山的智能化升级改造的典型范例。在非煤矿山行业数字化演进过程一直落后于煤炭行业的背景下，填补了目前国内非煤矿山安全生产大数据深化应用方面的空白，迈出了招金矿业“数字赋能”的关键一步，也必将成为行业发展的一个关键里程碑。</p>",
    "publish_time": "2022-11-24 13:02:08",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "除了作画、写歌、写文章，AI大模型还能帮我们做什么？",
    "url": "https://www.infoq.cn/article/26ZtgLa6DUV07WqO7iVQ",
    "summary": "<p>随着技术的发展，AI 已经在金融、医疗、智慧城市等多个场景实现了技术落地，人们也可以将时间和精力，投入到更具有挑战性和创造性的工作中。</p><p></p><p>今年，在极其需要创造力的绘画领域，随着大模型技术的不断迭代升级，AI 也在颠覆人们对艺术创作的认知。最近，# 绘画会被 AI 替代吗 #、#AI 绘画 # 等 AI 作画的话题，引起大量的关注和讨论。</p><p></p><p>这些变化不禁令我们好奇，除了我们熟悉的领域，AI 现在还能做什么？大模型技术的发展还会带来哪些新场景的落地？这些技术的实现意味着什么？离我们畅想的未来会不会更近一步？</p><p></p><p>除了作画、写歌、写文章，</p><p>AI 还可以……</p><p></p><p>如前文所述，AI 作画在今年的讨论度持续升高，其本质上是大家对于技术突破的关注：AI 正在从理解语言、文字、图片和视频，走向了生成内容，而这些变化，颠覆了以往大众对 AI 的认知。</p><p></p><p>如今，我们可以通过 AI 作画大模型——百度文心 ERNIE-ViLG，输入若干关键词，就能获得满足描述、风格独特的画作。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d1/d1c01a8e344332658d7b14ae58ba0acf.png\" /></p><p>ERNIE-ViLG创作的图像示例：凤凰周身火焰，多彩的祥云，明月，cg 感</p><p></p><p>在百度文心 ERNIE-ViLG 的支持下，不仅能实现水彩、油画、水墨画、印象派等多种风格，还能应用于工业设计、动漫设计、游戏制作等场景。通过简单描述，模型就可以在短短几十秒生成设计图，也极大提升了设计效率、降低商业出图的门槛。</p><p></p><p>除了画画，大模型在内容创作各方面的能力也得到了验证。</p><p></p><p>今年高考首日，百度 APP 推出的数字人度晓晓作答了难度较高的议论文《本手、妙手、俗手》，逻辑连贯、主体清晰，具备较高的可读性和创造性。以 48 分的成绩，超过了约 75% 的考生。据了解，数字人度晓晓仅需 40 秒就能根据题目创作 40 多篇文章。</p><p></p><p>度晓晓高分作文的背后，离不开飞桨文心大模型的加持，在后者的支持下，AI 展现出极强的理解和生成能力，能够实现创意作品的自动生成，包括 AI 作画、AI 写歌、AI 剪辑等。可以说，文心大模型正在助力智能创作，推动 AIGC 时代到来。</p><p></p><p>这些功能的实现，得益于文心大模型和飞桨深度学习平台的持续升级。目前百度飞桨已构建了业内布局最全、最适宜产业应用的模型库体系，大模型作为人工智能 “基础设施”的一部分，进一步拓宽了人工智能技术落地的场景覆盖广度，更加深了产业应用的深度。</p><p></p><p>从以上的落地应用的案例中，我们可以发现 AI 离我们的生活更近了。AI 大模型与真实场景更加匹配，可以帮助开发者更低门槛、更有效率、更低成本地应用 AI 大模型。而随着文心大模型的持续升级，将覆盖更多场景，惠及更多行业。</p><p></p><p>即刻报名，了解更多 AI 领域的新进展！</p><p></p><p>近两年，文心大模型落地应用的场景正在不断丰富，尤其在今年呈现“爆炸”的态势，其应用价值也在逐渐被大家认可。</p><p></p><p>如果你想了解文心大模型最新发布、飞桨最新技术成果，以及 AI 技术在各行各业的落地实践，欢迎来 WAVE SUMMIT+2022，与 AI 领域大牛线上交流！</p><p></p><p>作为下半年最最重磅的 AI 技术生态大会，WAVE SUMMIT+2022 将于 11 月 30 日线上举行，共设 1 场主会 7 大论坛、70+ 专题演讲，邀请产业大咖、知名学者、技术大牛、顶尖开源项目发起人等 300+ 重磅嘉宾，从开源共创、产业护航、科技服务、智能算力、AI 大模型等议题出发，梳理深度学习领域发展现状，分享最新技术突破和生态成果，共同描绘 AI 未来发展图景。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f8/f8769352c17e4d74cc4e52bf5c9932aa.png\" /></p><p>【扫码预约直播】</p><p></p><p>11 月 24 日，百度飞桨与 NVIDIA 英伟达还为大家带来了“2022 飞桨 X NVIDIA &nbsp;AI 技术开放日” ，本次开放日将邀请双方公司的 AI 技术专家在线上与大家开展深度的技术交流，内容包括基于 NVIDIA GPU 定制优化的 NGC 飞桨容器的产品介绍、模型优化及部署实践案例，欢迎大家预约直播，了解 NGC 飞桨容器是如何实现快速开启 AI 应用的。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5e/5ede36451cc0519e5e4d36be66587579.jpeg\" /></p><p>【扫码预约直播】</p><p></p><p><a href=\"http://www.wavesummit.com.cn/#/\">点击链接</a>\"，11 月 30 日 WAVE SUMMIT+2022 官网见！</p><p></p>",
    "publish_time": "2022-11-24 14:52:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "173 天上线主机版、两周斩获 100 万玩家，在《永劫无间》上能学到哪些降本增效的经验？",
    "url": "https://www.infoq.cn/article/SrRdcDN0dHTS5Jiua2XP",
    "summary": "<p></p><blockquote>凛冬的寒气，首先席卷西海岸。几乎一夜之间，硅谷的巨头们同步选择勒紧裤腰带，多家互联网公司传出裁员消息。而在国内，「降本增效」同样成为企业的关键词。游戏行业亦是如此。减员毕业，固然是一条路。是否也可以尝试着向效率要收入、向技术要解法？</blockquote><p></p><p></p><p>去年网易雷火开发的《永劫无间》以精致的画面和炫酷的武功招式，在全球燃起一轮中国武侠热。今年，网易决定把这把火，烧到主机端。</p><p></p><p>在微软的协助下，网易雷火&nbsp;仅用 173 天&nbsp;就完成了Xbox 主机版移植。要知道，此前网易雷火的主机团队人数和主机经验，都是 0。</p><p></p><p>速度之外，微软 Xbox Game Pass 为《永劫无间》点燃了主机生态内的第一波引力。今年 6 月 23 日加入 Xbox Game Pass 之后，《永劫无间》&nbsp;两周内就吸引了 100 万 Xbox 玩家&nbsp;。</p><p></p><p>时间剩下了，投入节省了，该有的效果却一点没少。《永劫无间》的酣畅淋漓，不仅仅在武侠世界，同样展现在游戏行业的降本增效上。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/08/087b3abe13f94d8abb9545292dd7f40f.png\" /></p><p></p><p>11 月 25 日，Microsoft Game Dev Day 将在《永劫无间》案例基础之上，围绕&nbsp;游戏行业 5 大降本增效招式&nbsp;，与国内游戏开发者一起迎战寒气、轻松上阵！</p><p></p><p>本次 Game Dev Day 系列活动包含除了 11 月 25 日的线上直播，还包括北上深三地举行的三场线下 VIP 深度研讨会。活动上，微软将正式发布 Azure + Xbox 游戏出海加速计划，与开发者深度探讨如何提高开发生产力、如何降低云端运行成本、如何获取 Xbox + Windows Store 全新赛道的游戏玩家！</p><p></p><p>现在，就&nbsp;抢先了解&nbsp;一下微软会为游戏开发者带来哪些「降本增效」的招式——</p><p></p><h2>第一招：工具加持提产能</h2><p></p><p></p><p>工作流程和辅助工具的匮乏是游戏开发流程化的最大痛点。从开发流程、版本管理、美术流程、引擎流程、DCC 流程到美术外包对接，如何通过标准规范的流程提高效率？本场将带来详尽落地拆解。</p><p></p><p>比如，在 Azure 启用&nbsp;Perforce Helix Core&nbsp;，加上 GitHub 里的代码操作指南，使开发人员迅速将 GitHub 的自动化生态系统与 Helix Core 中的代码和游戏资产联系起来，创建精确的 CI/CD 系统。通过 Azure 游戏开发虚拟机（云端游戏开发工作站）实现几分钟快速启动开发和“近零延迟”远程协作开发，并与 Azure 版本控制、资产管理系统和分布式生成服务连接，加速游戏开发。</p><p></p><p>活动上，微软还会带来两款效能利器——&nbsp;Azure 游戏开发虚拟机&nbsp;上运行&nbsp;Simplygon&nbsp;为大规模游戏内容的 3D 优化实现更短时间、更低成本、更炫效果。同时&nbsp;Azure + Unity&nbsp;的合作也为开发者提供了更便捷的实时 3D（RT3D）体验。</p><p></p><h2>第二招：自动缩放降成本</h2><p></p><p></p><p>开放的 Azure 平台全面支持各类主流的开源技术，其中不乏 Thundernetes、Kubernetes、Docker 等现代化应用（包括游戏）运行必不可少的技术。</p><p></p><p>AKS 通过提供高可用的控制平面以及企业级安全性和管理能力，借此可将开发和运营团队统一到一个平台上，放心地快速生成、交付和缩放应用程序和游戏，进而更轻松地部署和管理容器化应用程序或者游戏应用。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f3/f33a75f82e28af1224575a65dd5186c0.png\" /></p><p></p><h2>第三招：实时分析有洞察</h2><p></p><p></p><p>很多游戏缺少细粒度的业务监控，使得大量性能问题、成本问题无法追溯，难以管理。一般的监控服务难以承载大型游戏的数据体量，而该话题里提到的案例通过&nbsp;Azure Synapse + Azure Databricks&nbsp;&nbsp;实现了高度集成且优化的数据分析体验。</p><p></p><p>以 Azure Databricks 为数据湖，以 Synapse 为仓的数据分析体系大大增强了熟悉分析效率和体验，并且能与 AAD 无缝集成、最小化运维成本，该案例通过这一方案极大地减少了运维投入和数据分析成本，实现整体的降本增效。</p><p></p><h2>第四招：订阅通路扩流量</h2><p></p><p></p><p>Xbox Game Pass 正在改变玩家发现、联系和玩游戏的方式，Xbox Game Pass 会员多玩了 30% 的游戏类型，多玩 40% 的游戏数量。超过 90% 的会员表示，他们玩了一款没有 Game Pass 就不会尝试的游戏。</p><p></p><p>平均而言，游戏在发布到 Game Pass 后发现玩家参与度提高了 8 倍以上。无论是购买 Game Pass 内部或外部的游戏，还是为他们喜欢的游戏购买额外的内容，XGP 会员的花费都比非会员多 50%。Xbox Game Pass 已成为真正的发现引擎、连接和社区平台，并正在推动游戏销售。</p><p></p><h2>第五招：应用生态广触达</h2><p></p><p></p><p>近期有很多国内开发者关注 Windows Store, 在Windows Store上，游戏是一个很重要的分支，并且也有很多的忠实游戏用户。有 14 亿月活设备和 2.44 亿游戏月活设备，Windows Store 游戏介绍页的转化率很高，从访客点击游戏介绍页到下载的转化率能达到 18%。</p><p></p><p>也就是说大家的目标很明确，进入 Windows Store 游戏商店就是为了寻找游戏。Windows Store 的全球营收分布比例如何？不同类型的 Top 游戏平均盈利情况怎么样？Windows Store 有哪些推广支持资源？都将会在本场直播中详细解读。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e8/e88f4e2946a48bb0e0014f8347f7e1cb.png\" /></p><p></p><p>覆盖全球&nbsp;60+ Region&nbsp;的 Microsoft Azure</p><p>和拥有&nbsp;2500 万付费订阅玩家的 Xbox</p><p>会联手给游戏行业带来哪些惊喜？</p><p>怎么获得拥有&nbsp;2.44 亿游戏月活设备的</p><p>Windows Store 首页推荐机会？</p><p></p><p>微软中国数字原生事业部总经理田灼和 Xbox 游戏生态亚洲总经理张贞元将&nbsp;共同发布 Azure + Xbox 游戏出海加速计划&nbsp;，结合中国和全球当下的游戏行业挑战及趋势，整合微软游戏生态资源，加速中国游戏出海的成功！</p><p></p><p>想要了解更多 Azure + Xbox 游戏出海加速计划，和五大游戏降本增效核心话题，及 Xbox 和 Windows Store 全新游戏盈利生态，以及更多游戏成功经验及案例立即注册 Game Dev Day 线上直播共同探讨！</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/70/96/70a417db1c316ea407fdd9905acac096.jpg\" /></p><p></p>",
    "publish_time": "2022-11-24 15:05:23",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "后 Hadoop 时代，字节跳动如何打造云原生计算平台 | 卓越技术团队访谈录",
    "url": "https://www.infoq.cn/article/jZ49l4HQ4bq94gHvJusV",
    "summary": "<p></p><blockquote>采访嘉宾 ｜ 李亚坤编辑 ｜ Tina</blockquote><p></p><p>&nbsp;</p><p>技术永远是在“更新”或“替换”中得到发展。</p><p></p><p>在大数据行业里，2006年 Hadoop 的诞生，给我们带来了变革意义的改变，大数据生态组件也开始层出不穷。各种不同体型的企业都喜欢选择开源大数据软件来搭建自己的系统，无论是先前十分繁荣的 Hadoop，还是后来涌现出来的 Kafka、Flink 等，都被广泛地使用着。</p><p></p><p>十多年来，这些系统经历了多轮技术洗礼，我们也随之需要根据新的技术潮流不断地调整甚至做技术转型。以 Hadoop 三大组件来说，计算引擎 MapReduce 基本被 Spark 取代。在数据上云的时代，对象存储也取代了一部分 HDFS 文件系统。近几年，云原生又火了起来，行业里再次开始了对大数据体系的云原生改造，同时 Kubernetes（K8s） 的流行，也让同为资源管理的 YARN 地位越来越尴尬。</p><p></p><p>然而，过去的技术体系在很多企业系统里仍发挥着很重要的作用，在技术更新迭代的时候，业务不能随意变动，那么我们在新旧技术共存的条件下，如何发挥新技术的最大潜力？</p><p></p><p>字节跳动成立于2012年，也是大数据崛起之时，跟众多中小企业一样，字节跳动也是 Hadoop 生态组件的重度用户。这十年在业务演进的过程中，字节跳动锤炼出了自己的一套方法，他们在保持接口不变的条件下，对底层做了大量的定制化甚至是重写工作。作为火山引擎云原生计算研发负责人，李亚坤见证了字节从几千台机器到几十万台机器的成长过程。InfoQ 通过采访李亚坤，一起回顾了字节是如何应对大数据技术的不断淘汰和革新，同时还能做到让产品达到优异性能。</p><p></p><p></p><h2>云原生计算体系</h2><p></p><p></p><p>一个企业能够利用数据解决问题，那么背后都会有一套完整的工具和技术堆栈。</p><p>&nbsp;</p><p>依据2021年的公开数据，字节跳动发展至今，已在全球拥有19亿用户，于150个国家和地区提供产品和服务。业务的数据存储和日志规模每日已达到 EB 级别，实时推荐峰值每秒达到百万次。</p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f4/f47dfadccc45d0e50dd59eb51dc60b4e.png\" /></p><p></p><p></p><p>支撑这些服务的，是字节跳动打磨的一套云原生大数据技术栈，涵盖了从数据接入、数据存储、数据计算到数据服务的所有环节。其中，存储层是基于 HDFS 进行深度定制的 CloudFS + Iceberg，中间件包括 Kafka 和字节自研的 BMQ，计算引擎使用的是 Spark / Flink，还包括资源调度和混部，以及 HSAP 和外围服务。这套系统能管控达到几十万台机器，行业内达到10万级别体量的，就是非常领先的了。</p><p></p><p>在这套系统中，为了支撑 EB 级别的数据存储，字节跳动用 C++ 重写了一套 <a href=\"https://www.infoq.cn/article/aLE9ObVYUEmDvRCzCTBr\">HDFS</a>\"，集群规模扩大的同时，也能兼顾性能。同时存储层也能托管各种不同的企业存储系统，对象存储、原始 HDFS 存储都能平滑融入使用。</p><p></p><p>在资源管理和调度层面上，由于服务规模巨大，字节跳动也经过<a href=\"https://www.infoq.cn/article/mzjllz7k41ukpdfykdej\">上千次</a>\"的修改，提供了定制化的YARN服务，并可平滑迁移到 K8s 上。YARN 是 Hadoop 集群的资源管理系统，被字节多款产品重度依赖。</p><p></p><p>消息中间件 BMQ 也是字节跳动用 C++ 重写的一套存算分离架构的消息队列服务，同样支持 Kafka 系统的平滑迁移。</p><p></p><p>在云原生发展趋势下，字节跳动于2016年开始启动 TCE（Toutiao Cloud Engine）云引擎，2018年开始将核心业务迁移到了这个容器平台上，随后在离线、在线业务全部容器化的基础上，开始进行进行在离线混部调度设计和存储的云原生化。全部云原生化后，这套系统，包括底层调度能力、存储、中间件、计算引擎，就能在各种 K8s 集群上整合并拉起来。</p><p></p><p>李亚坤总结说，这套系统很重要的一点是“一出生就是长在开源上，不管演进多少年，这套开源的协议始终不变。无论是 HDFS、Kafka、YARN，还是 Spark、Flink，都承载着巨大的用户体量。这套协议有时候可能没有那么好，没那么规范，但是我们也必须得把它继承下来。在这套协议存在的前提下，字节在内部其实做了非常多的定制化，以及各种各样的重写，付出了非常大的工程力量，让整体性能得到了非常大的提升。虽然用户可能用起来跟原来的接口差不多，但是实际上底下已经发生了翻天覆地的变化。”</p><p></p><p></p><h2>计算引擎：Spark 和 Flink 保持持平</h2><p></p><p></p><p>字节跳动有很多移动端产品，包括抖音、今日头条等，“计算能力”应用到了这些产品的每个环节，实时推荐、风控安全、实时大屏等等。在进行实时信息流推荐时，每次用户刷新，App 就会从亿万级别的内容库里，选出用户感兴趣的内容，经过粗排、精排，对这些内容进行打分排序等一系列计算，选出用户感兴趣的内容，这些都跟计算相关。</p><p></p><p>2014年，Flink 被捐献给 Apache 基金会，从此走进了大众的视野。2017年，字节跳动开始调研并逐步使用 Flink 进行流式计算，历经两年完成了从 JStorm 到 Flink 的迁移。另外在离线分析场景下，虽然 Spark 也能无短板的全面替换掉 MapReduce，但字节跳动的计算引擎也有一些特殊的地方，就是目前 Spark、Flink、Primus、MapReduce 四种计算引擎并存，其中 Spark 和 Flink 是保持持平的：流式计算每天所需资源超过 400 万核，批式计算资源超过500 万核。</p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/51/516392b16a62995f50cea3a9be32237f.png\" /></p><p></p><p></p><p>Flink的流行其实也让业界重新思考了流批计算架构，从2020年开始，不少企业开始了基于 Flink 的“流批一体”实践，字节跳动也做过相关探索。</p><p></p><p>理论上，流批一体有一些价值，拿字节的实时推荐举例来说，推荐中需要先用历史数据去训练一部分模型，然后读取生产中最新的用户行为日志数据，训练出一个最贴近用户当前状态的模型。这种场景下，当前历史数据训练环节和实时数据训练环节在两个系统里是完全分割的。很多企业里，负责流处理和负责批处理的，会按照两个团队来划分任务，流团队负责处理生产上的最新数据，而批处理每天跑一下历史报表。有时候两支团队的数据和程序没办法对齐，会得出不一致的结果，这时候使用流批一体变成一支团队体验更为友好。</p><p></p><p>然而推荐场景下，流式计算本身存在一个问题，那就是会因为一些数据的晚到，或读取到了窗口之外的数据，带来精度上的损失。所以流式数据仅仅是作为参考，还是需要去以“天”级别重新跑一次历史数据，得到生产上的唯一的真实的结果。</p><p></p><p>目前字节跳动的 Flink 批处理功能使用场景还处于相对较少的阶段。在一些标准的、基于人操作的离线场景下，Spark 的批处理也比 Flink 更有优势，而字节内部绝大部分的分析就是关于人的这种商业分析。据李亚坤介绍，虽然现阶段 Flink 的批处理功能还没有得到特别大规模的应用，但从业务实际场景中体现的价值来看，可预见在字节跳动的批处理场景中，Spark 和 Flink 都将会得到广泛应用。</p><p></p><p>经过5年快速发展，字节跳动形成了超大计算规模，这同时也给大家带来了一些<a href=\"https://mp.weixin.qq.com/s/l7N_Vb4gPIPuFXbjaVrkiw\">挑战</a>\"。首先是资源的问题。当资源达到一个限度后，新资源的调配就会更难。Flink 每天平均400万核，已经不是一个小数目，所以云原生计算团队的办法是让调度系统支持更细粒度的资源申请。</p><p></p><p>在此之前，可能一个容器最少申请一个核，那么就是以一核两核这样的整数力度去增长。但很多时候任务可能只需要比如 2.1 核或者 2.5 核就能够跑起来了，这时候用户只能去申请三个核。如果一个 Flink job 可能是 1000 个容器构成的，就浪费近千个核，规模越大，浪费越严重。通过在运行时动态调节 Flink 任务的使用资源的方法，字节跳动可以在用户无感的情况下，将资源节省下来给更多业务使用。</p><p></p><p>另外就是服务器的规模达到一定数量后，机器的崩溃几乎是必然会出现的，这时候就需要在运行时去做容错。Flink Exactly Once 的特性决定了任何一个单机故障都会导致整个 Flink 作业的重启。在大规模模型训练场景下，需要上千个容器的时候，重启时间一次，要重新调度一次上千个容器，然后要去拉上千个容器的镜像，对线上效果的影响将会被无限放大，数据就相当于不实时了。在此背景下，云原生计算团队修改了 Flink DAG 的 Failover 实现，使得在特定的 Topology 下，单 Task 失败可以只重启单个 Task，从而实现了非常短的时间内的故障恢复。</p><p></p><p></p><h2>资源调度</h2><p></p><p></p><p>降本增效是每家企业应该考虑的问题。</p><p></p><p>提升服务器资源利用率，对于拥有大量机器资源的公司来说无疑是一个很重要的问题，也是企业研发实力的一种体现。有种说法是业界的资源利用率一般是20%，但谷歌很多集群的利用率可以做到60%，整体平均能达到50%；国内企业比较偏向于业务，一些好的企业平均利用率处于30%到40%的水平。</p><p></p><p>特定集群的利用率比全局利用率更有代表性。全局利用率背后可能不仅仅是技术的问题，很多时候是跟业务相关的，比如在线业务在申请资源的时候，业务一般是按照最高峰值评估资源去申请资源，这就导致了对资源预估不准，申请的资源远大于实际使用资源。还有一些业务会比较重要，就会用独占的方式，并且要预留相当多的资源给临时的扩容去使用。</p><p></p><p>据李亚坤介绍，字节跳动计算资源的平均利用率超过 40%，部分混部集群的综合资源利用率达到60%以上，因为资源主要由基础架构部门进行统一规划，并在容器和 Kernel 底层都做了不少技术优化。字节跳动国内业务的容器规模很大，比如离线任务容器的生产和销毁每天接近两亿个。这种全量容器混部的方案不仅提升了利用率，并且灵活性也更高。</p><p></p><p>字节跳动每天有千万级别的作业，做好资源调度是一个非常重要的需求。</p><p></p><p>在字节跳动发展早期，调度系统首先满足的是批式计算，主要采用的是 Mesos 和 YARN。在2010年前后，Mesos 被 Twitter 这样的公司大量使用，后来逐渐下线，融入到了 K8s 中。而来自 Hadoop 体系里的 YARN，因为能比较好的满足批式计算，一直被各大小企业普遍采用。</p><p></p><p>任务混排、资源隔离是 Hadoop 体系比较大的硬伤。YARN 本身资源管理的粒度不够，单集群规模也只有5K，字节跳动在这上面做了<a href=\"https://www.infoq.cn/article/mzjllz7k41ukpdfykdej\">不少改进</a>\"，开发了以千分之一核为最小粒度的功能，并且将单个生产集群扩大到了 5 万节点的规模。然而跟大多数公司一样，字节的离线场景基本构建在 YARN 生态上，在线则运行在 K8s 生态上，这样导致了一个问题：在离线两个集群基于不同的物理机器，资源相互隔离，资源无法共享。</p><p></p><p>在 YARN 服务规模巨大、场景复杂的前提条件下，设计资源统一池化和调度方案，如果选择将业务全部切到 K8s，用 K8s 的 API 再实现一遍，将是一个伤筋动骨、成本巨高的事情。而且 K8s 原有的调度器更适合在线的微服务，对于离线其实不是很友好，但字节跳动希望统一的池化能够同时对在线和离线友好，所以字节云原生计算团队选择了一个比较特别的方法重写了调度器系统。</p><p></p><p>云原生计算团队以 YARN 系统的需求为出发点，将 YARN 底层调度和单机运行时能力委托给了 K8s，但是用户还可以继续直接使用原来的 YARN 接口，这也相当于重写了 YARN。重写之后，YARN作为一个中间的调度状态，底层资源管理统一是 K8s，上层调度也统一是 K8s。另外，单集群的规模越大的话，资源的利用效率越高，因此字节团队也对 K8s 进行了很多优化，比如对 API server、ETCD 做了很多深度定制，现在单集群管理规模达到了2万台机器。</p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/59/59c4b55da27f22fa1b245df983556dd5.png\" /></p><p></p><p></p><p></p><p>重写工作进行了差不多两年，调度系统融合后，在 Kubernetes 集群的基础上增加三个组件：</p><p>Yodel：模拟实现 YARN 的 ResourceManager，支持 YARN API 及其 AM 管理、Quota 管理、权限管理等功能。Unified Scheduler：高性能调度器，取代 Kubernetes 原生调度器，提供了强大的多租户资源隔离能力，以及更丰富的调度策略。BigData Plugin：单机大数据插件，用于辅助 Kubelet 完成大数据作业的 Localization、Shuffle 等工作。</p><p></p><p>在离线业务都统一使用同一个融合集群。具有多租户资源隔离和管控的 Unified Scheudler 统一对集群中所有 Pod 进行调度，统一管控了在离线资源的动态划分。</p><p></p><p>在线服务按照原有接口，提交到 API Server；离线作业按照 YARN 接口，提交到 Yodel，无需任何改动。Yodel 具有和 YARN ResourceManager 一样的功能，并且可以把 YARN Resource Request 转换成 Kubernetes Pod，再转换成 YARN Container。</p><p></p><p>在单机上，所有 Pod 统一由 Kubelet 启动和管理。原来 YARN NodeManager 具有的大数据特有功能移植到 BigData Plugin，辅助 Kubelet 完成，比如为大数据作业提前下载 Jar 包，这个过程又称为 Localization。</p><p></p><p>统一的资源池使得资源占用成本更加透明化，可以清晰看到各个业务线在资源侧的投入情况，不同的级别采用不同的资源保证策略，所以离线和在线任务不会因为“超额分配”产生冲突。不同业务线之间协调资源也变得更为容易，业务之间的互补性，也带来了一些资源优化方面的收益，从而达到降本增效的最终目的。</p><p></p><p>李亚坤说，这套融合系统最开始是为了解决“除夕”的问题。在互联网行业，每年除夕以及经历社会热点事件的时候，在线资源的需求会变得非常大。为了应对这些特殊时期带来的压力，以前字节跳动还常用将离线任务的机器全部清空，交给在线使用的原始方法，后来很自然地开始考虑从软件上实现 YARN 和 K8s 的混部，在平时就可以达到分钟级别出让百万核的效果。从去年开始，他们就开始使用这套新的系统，在除夕当天为在线微服务出让了400万核的资源进行有序扩容，让大家平滑顺利的度过了春节。未来方向上，跨机房资源治理，包括跨机房容灾管控，将会是接下来一个比较重要的发力点。</p><p></p><p></p><h2>后 Hadoop 时代的云原生计算平台</h2><p></p><p></p><p>以 Hadoop 为中心的大数据生态系统一直以来都是大部分公司构建大数据平台的选择。而随着容器技术的发展，传统大数据平台显现出来的问题也越来越多，大数据平台的云原生化已是大势所趋。</p><p></p><p>2021 年 3 月， Spark 正式宣布支持 K8s，2021 年 5 月，Apache Kafka 背后的商业公司 Confluent 也发布了 Confluent on Kuberneters。按照这个趋势发展的话，新的大数据组件更多可能会以云原生的方式发布，而 Hadoop 极大可能会被云原生存储+资源调度取代。</p><p></p><p>一方面是必须朝着云原生的方向演进，另外一方面很多企业也有自己的大数据集群，但在数据分析的能力上基本也是割裂的，在离线大数据集群达到几百、上千的时候，K8s 本身的支持能力还是不太够。这也给很多企业带来了业务迁移进退两难的境地，在生产环境中进行迁移或二次开发，这个工作对技术人员要求非常高。这种情况下，也许字节跳动的这套从存储到数据服务的闭环系统的实现方法能给大家带来启示。</p><p></p><p>在打造这套系统的同时，字节跳动调动了计算引擎、存储、中间件、数据服务等专门的研发团队，逐渐形成了一支云原生大数据团队。这支大数据团队逐渐发展，在火山引擎上对外输出大数据能力，提供 ToB 服务。在后 Hadoop 时代里，特别是针对一些金融行业专有云场景或已有 K8s 集群的企业，火山引擎云原生计算平台提供了从数据接入 BMQ / Kafka 到数据 ETL( 实时 Flink，批 Spark) 再到数据存储和加速 CloudFS 和日志搜索等一站式服务，以及 OpenStudio 管控（多租户隔离、访问控制、计量计费等）和 OpenOps（服务生命周期管理、安装部署、容灾高可用）运维交付平台。与业界已有的方案相对比，火山引擎这套解决方案可以对标 CDH，不过 CDH 基于 YARN 作为资源调度，火山引擎云原生计算平台基于 K8s 和字节跳动离线资源的混合调度能力做了更深一步、超前的优化和迭代。</p><p></p><p>对于ToB的服务如何能够紧跟业务和技术的发展，李亚坤表示，云原生计算团队提供的产品在核心引擎能力上都是内外复用的，这些引擎也在负责支撑字节跳动集团内部的大数据计算、数据存储、中间件，与外部客户的需求形成相互支持的形态。让团队在负责ToB的事情的同时也跟内部生态整合，更有助于了解业务和技术的发展，不会导致分叉的情况发生。</p><p>&nbsp;</p><p>嘉宾简介：</p><p>李亚坤，火山引擎云原生计算技术负责人。硕士毕业于哈工大计算机专业，9 年大数据和云原生领域从业经验。2017 年加入字节跳动，构建了字节跳动千万级核心的集群资源管理和调度系统，支撑了全公司的数据平台、搜索、广告、推荐算法等中台，以及抖音、今日头条、西瓜视频、懂车帝、飞书等众多业务的大数据分析需求，带领团队完成了在离线资源混部、Hadoop 上云等众多项目。目前整体负责火山引擎云原生计算的技术团队。</p><p>&nbsp;</p><p></p><h3>活动推荐</h3><p></p><p>本文选自<a href=\"https://www.infoq.cn/minibook/AaximlxcD9Mp0xqGuBRM\">《中国卓越技术团队访谈录》（2022 年第四季）</a>\"，本期精选了字节跳动、金山办公、工商银行、OceanBase、Cocos 引擎等技术团队在技术落地、团队建设方面的实践经验及心得体会。扫描下方图片二维码可下载本期全部内容，查看更多独家专访！</p><p></p><p>《中国卓越技术团队访谈录》是 InfoQ 打造的重磅内容产品，以各个国内优秀企业的 IT 技术团队为线索策划系列采访，希望向外界传递杰出技术团队的做事方法 / 技术实践，让开发者了解他们的知识积累、技术演进、产品锤炼与团队文化等，并从中获得有价值的见解。</p><p></p><p>访谈录现开放长期报名通道，如果你身处传统企业经历了数字化转型变革，或者正在互联网公司进行创新技术的研发，并希望 InfoQ 可以关注和采访你所在的技术团队，可以添加微信：caifangfang_wechat，请注明来意及公司名称。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fd/fd92fdb66b968e6bcb8b0c719a8c62af.png\" /></p><p></p>",
    "publish_time": "2022-11-24 15:35:53",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "谷歌计划裁员上万人：利用刚上线半年的新绩效系统解雇6%“排名垫底”员工",
    "url": "https://www.infoq.cn/article/qQS8ErzXTjKoMu4NJhCJ",
    "summary": "<p></p><p>据 The Information 报道，Alphabet Inc. 旗下的谷歌计划裁员 10,000 人，占其全球员工总数的 6%。</p><p></p><p>该报道称，从明年初开始，谷歌的管理人员将根据新的绩效系统逐步裁掉部分员工。根据该裁员计划，经理必须根据员工对公司的重要性，将 6% 的员工（即大约 10,000 人）评为“表现不佳”的员工。</p><p></p><p>今年 5 月，谷歌 CEO Sundar Pichai 在公司会议上宣布谷歌将开始使用名为 <a href=\"https://www.infoq.cn/article/O8zAWw3ust3RTSlVDGVd\">GRAD 的新绩效评估流程</a>\"。GRAD 是谷歌员工评述与发展（Googler Reviews and Development）的缩写。谷歌将绩效评估减少到一年一次，同时把更多的评估责任交给主管，而不是严重依赖同级同事评审（peer reviews）。</p><p></p><p>原本绩效改革的目的是为了让一些有才华的员工将注意力从“组织文书来证明自己应该被升职加薪”，转移到“发展业务并增强自身影响力”上。没想到，不到半年，该系统就变成了谷歌的“裁员利器”。</p><p></p><p>同为科技巨头的 Meta 在本月公开表示，公司将裁员 13%，即超过 11000 名员工，理由是后续广告收入将有所下降。Twitter 则在新东家马斯克的领导下刚刚砍掉约一半的员工。谷歌的业务并没有像很多同行那样受到严重打击，但相对于 Twitter 和 Meta 的裁员手法，谷歌“先排名再裁员”的方式无疑更具“侮辱性”，毕竟谷歌员工正常退出后也不会特别难找新工作。</p><p></p><p></p><h2>谷歌迫于投资者压力裁员？</h2><p></p><p></p><p>11 月 15 日，激进派对冲基金 TCI 董事总经理 Chris Hohn 给谷歌 CEO Sundar Pichai 写了一封公开信，明确提出了裁员增效的要求。TCI 表示，他们持有 Alphabet 价值超过 60 亿平均的股份，信中还提到，自 2017 年以来，TCI 就一直是 Alphabet 的重要股东。但据 CNBC 称，TCI 其实并不在 Alphabet 的前 20 大股东之列。</p><p></p><p>TCI 董事总经理 Hohn 在这封署名信中提到，“我们想要表达自己的观点，即 Alphabet 的成本基础过高，管理层应当采取积极行动。公司员工太多，每名员工的成本太高。”TCI 在信中表示，通过与前谷歌高管们的对话，他们建议谷歌减少员工数量、提高运营效率。信中写道，自 2017 年以来，Alphabet 的员工数量增加了一倍还多，“贵方曾公开表示谷歌的效率应提高 20%，我们对此深表认可。”</p><p></p><p>这封长达四页的信件还把矛头指向薪酬，称 Alphabet 为员工提供“硅谷最高的薪水”。信中称，根据提交给美国证券交易委员会 (SEC) 的文件，去年 Alphabet 一名典型员工的薪酬中值为 295,884 美元。根据标普全球的分析，这比 Alphabet 的竞争对手微软高出 67%，比美国 20 家最大的科技公司高出 153%。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f4/f423c836c3bba092853590ad0feb3307.png\" /></p><p></p><p>“这种巨大的差异是没有道理的，”Hohn 说，他补充说，能拿到高薪的计算机科学家和工程师只占谷歌的“一小部分”。“许多员工从事一般销售、营销和行政工作，他们应该以其他科技公司水准获取报酬。”</p><p></p><p>TCI 还要求 Alphabet 披露谷歌服务部门的利润率目标，包括最核心的搜索业务。TCI 认为，合理的利润目标至少应该达到 40%。</p><p></p><p>大型科技企业很少遇到 TCI 这类激进派投资方的质疑。近年来，由于全球各发达国家的利率长期保持低位，所以 Alphabet 和其他企业通过股票回购赚取到了巨额利润。</p><p></p><p>Hohn 其人是一位著名的投资者，曾在全球多家顶尖企业中有所表现，为股东们带来了高额回报。他同时也是一位社会活动家，去年曾发起一场运动，迫使包括 Alphabet 在内的全球几十家头部公司公布碳减排计划，并交股东投票表决。</p><p></p><p>随之，11 月 17 日，有人在 LinkedIn 上发布了一张图片，表示谷歌在投资者的极限压力下开始着手裁员事宜。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/66/660f26cc4bb16d29584a75e0eb1866b6.png\" /></p><p></p><p></p><h2>一直处于“将要裁员”压力下的谷歌员工</h2><p></p><p></p><p>自从谷歌高管宣布要将运营效率提高 20%，担忧情绪就开始在谷歌内部酝酿，部分员工甚至借用模因符号以幽默的方式表达自身焦虑。谷歌有一幅动画角色的前后对比图。角色先是高举双手，呼吁“通货膨胀来了，我要加薪！”之后则是充满惊恐地表示“请别解雇我们。”</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/fe/fed4344a79e9685a62aef0b39d7a88b2.png\" /></p><p></p><p>TCI 董事总经理 Hohn 发布的公开信，同样也给大家带来了压力。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/10/108f43be17c408fc37ff1fa43bd2ba8f.png\" /></p><p></p><p>即使是在谷歌之内，Pichai 自 9 月以来的压力也越来越大，他需要给公司在多年高速增长之后的状态下滑找个合理的解释。高管们当时就表示会有小幅裁员，甚至不排除大规模缩编。</p><p></p><p>在最近的一次全体会议上，员工们在谷歌内部提问系统 Dory 中，就一系列关于裁员可能性的问题做出热烈讨论。还有人质疑高管团队是否存在工作失职。热度最高的问题写道，“看来我们同比增加了 36000 个全职岗位，员工人数增加了约 24%。但这跟很多团队的实际感受相反，他们觉得人员是在流失、而非增加。那这些人都在哪呢？事后看来，考虑到对生产力保障能力的担忧，我们有必要这样迅速扩大人员规模吗？”</p><p></p><p>员工们还希望了解公司最新财报电话会议的详细信息，以及公司 CFO Ruth Porat 如何评价如今甚嚣尘上的裁员传闻。其中一个问题说，“能不能明确公布 2023 年谷歌计划中的员工总数？能不能告诉我们，这段艰难的逆境时期大概要持续多久？”其他问题还包括，员工要不要“把财报电话会议上公布的利润下降，解读成直接影响我们团队、方向及 / 或福利的负面因素？”还有“我们要怎么把生产力提高 20%？是需要提高专注度，还是必须进行裁员？”</p><p></p><p>另外，谷歌的绩效评估也发生了变化，部分员工指出差旅预算和福利的减少可能都预示着下一波“大的调整”即将到来。</p><p></p><p>谷歌的内部论坛上还出现了一份名为“Support Check-Ins”的指南，针对部分员工做出绩效评估。据媒体报道，该文件内容提到，对于接受审查的员工来说，“目前的绩效轨迹正朝着或者已经向较低的评级结果倾斜。”这份指南还给出了三步温馨提示：第一，引导员工在接受经理反馈前“深呼吸”；第二，“理解反馈内容”；第三，“制定计划”。文件指出，这项新政可能会在未来一年内影响到 10% 到 20% 的员工。</p><p></p><p>总体来看，员工们一直最关心的问题都是——这一条条“刮痧”式的削减，未来会不会累积成大规模裁员潮？</p><p></p><p></p><h2>写在最后</h2><p></p><p></p><p>随着裁员席卷科技界，TikTok 却趁机扩大其工程团队。</p><p></p><p>上周，The Information 率先报道了这一消息，他们发表了一篇文章，名为“Meta、Twitter 在湾区裁员千人，TikTok 计划增加一倍员工”。该报道表示他们采访了两名内部人士，他们表示 TikTok 计划将其山景城员工增加到约 2,000 名。山景城位于旧金山湾区，是谷歌诞生所在地，也是硅谷的核心地区，聚集了众多的科技企业。</p><p></p><p>自 2020 年以来，该团队已从几百人发展到 1000+，TikTok 希望再增加 1000。根据 LinkedIn 数据，TikTok 近一周面向美国上线了“电商运营策略经理、电商整合营销推广经理、欺诈策略主管、风险和事件响应经理、美国风险负责人、客户解决方案团队负责人、隐私项目经理”等多个职位。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/dc/dc9e8e1d1dee41d514cb9fe680eb3cf5.png\" /></p><p></p><p></p><blockquote>“他们是目前唯一能够负担得起新劳动力的企业。”</blockquote><p></p><p></p><p>TikTok 的举动是在美国科技行业原本沉闷的就业形势下推进的。正如此前报道的那样，亚马逊预计将裁员约 10,000 名人员。Meta 最近解雇了 11,000 名员工，而在马斯克更是裁掉了 Twitter 一半以上的员工。其他计划裁员的科技公司还包括 Stripe、Salesforce、微软、Zillow、Snap。</p><p></p><p>据称美国科技行业已有超过 6.7 万名员工下岗。考虑到其他公司裁掉了这么多人，TikTok 在硅谷找人应该没有问题。</p><p></p><p>参考链接：</p><p></p><p><a href=\"https://www.tcifund.com/files/corporateengageement/alphabet/15th%20November%202022.pdf\">https://www.tcifund.com/files/corporateengageement/alphabet/15th November 2022.pdf</a>\"</p><p></p><p><a href=\"https://www.fortunechina.com/jingxuan/24710.htm\">https://www.fortunechina.com/jingxuan/24710.htm</a>\"</p><p></p><p><a href=\"https://www.teamblind.com/post/Google-under-pressure-from-investors-to-do-a-layoff-67LO3kyR\">https://www.teamblind.com/post/Google-under-pressure-from-investors-to-do-a-layoff-67LO3kyR</a>\"</p><p></p><p><a href=\"https://www.marketwatch.com/story/google-looks-to-shed-10-000-poor-performing-workers-report-11669222278\">https://www.marketwatch.com/story/google-looks-to-shed-10-000-poor-performing-workers-report-11669222278</a>\"</p><p></p><p><a href=\"https://www.dailymail.co.uk/news/article-11462353/Internal-memes-Google-staff-fearing-widespread-job-cuts-Meta-announced-layoffs.html\">https://www.dailymail.co.uk/news/article-11462353/Internal-memes-Google-staff-fearing-widespread-job-cuts-Meta-announced-layoffs.html</a>\"</p><p></p><p><a href=\"https://www.linkedin.com/news/story/tiktok-recruits-amid-tech-layoffs-5056265/\">https://www.linkedin.com/news/story/tiktok-recruits-amid-tech-layoffs-5056265/</a>\"</p><p></p><p>今日好文推荐</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651148703&amp;idx=1&amp;sn=d7296b468e3da60b6a8b2e27fca0fe6b&amp;chksm=bdb8a9cc8acf20dafc34a1d359853fd3df210dd149164320c82d88996c3b67e1ee5545933d0f&amp;scene=21#wechat_redirect\">世界杯将是压垮 Twitter 的最后一根稻草？历经马斯克“血洗”后，全世界在等 Twitter 宕机</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651148468&amp;idx=1&amp;sn=3eb02bc959d6445eba366b37031ab443&amp;chksm=bdb8a8e78acf21f1723541a612c4449ffc870d4d154f38c28b599416bd918095fd0a484536db&amp;scene=21#wechat_redirect\">34年换5个技术方向, 金山办公不想停止“折腾” &nbsp;| 卓越技术团队访谈录</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651148373&amp;idx=1&amp;sn=f1dde9a440fa1ee94320fe892c2f0229&amp;chksm=bdb8a8068acf211015aa4d5ac21b4c60588792371938287d4dc4f4f7391d38af9a881033073a&amp;scene=21#wechat_redirect\">推特员工大规模辞职，马斯克被“问候”；知情者：暴雪欲“白嫖”网易、索要中国百万玩家数据；腾讯 10 多万员工平均月薪超 8 万｜Q 资讯</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651148161&amp;idx=1&amp;sn=c41fcb7fe6f989534eae18e9d4c08bca&amp;chksm=bdb8b7d28acf3ec4a725f45eb8079abaeea73f98b5b18d439d126669b957f95910aed0685640&amp;scene=21#wechat_redirect\">24 年的开源项目社区爆发严重分歧：有人不愿接受偏爱“企业利益”的 Linux 基金会赞助</a>\"</p><p></p>",
    "publish_time": "2022-11-24 15:53:23",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]