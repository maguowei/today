[
  {
    "title": "Spring Boot 3.2 提供对虚拟线程以及 RestClient 和 JdbcClient 的支持",
    "url": "https://www.infoq.cn/article/Wx07LrEoY3UOGd39EKX0",
    "summary": "<p>Spring Boot 团队在 2023 年 11 月发布了 Spring Boot 3.2。这个最新版本包含了许多特性，其中最值得关注的是对虚拟线程和检查点协调恢复（Coordinated Restore at Checkpoint，CRaC）的支持。其他的特性包括 SSL Bundle 重加载、支持 RestClient 和 JdbcClient 接口，以及可观测性的增强。</p><p></p><p>在 JDK 21 中，一个非常重要的特性就是 Loom 项目的虚拟线程，JEP 将其描述为轻量级线程，可以显著减少编写、维护和观测高吞吐并发应用程序的工作量。</p><p></p><p>Spring Boot 3.2 集成了对虚拟线程的支持。要使用它的话，需要将 spring.threads.virtual.enabled 属性设置为 true ，并使用 JDK 21。在底层，Tomcat 和 Jetty 将会使用虚拟线程，这意味着处理 web 请求的应用程序代码现在将会在虚拟线程上运行。</p><p></p><p>除此之外，当通过该属性启用虚拟线程后，SimpleAsyncTaskExecutor 类也会被配置为使用虚拟线程，这会直接影响带有 @EnableAsync 注解的方法、异步 Spring MVC 以及 Spring WebFlux 阻塞调用的行为，在这种情况下，它们都将创建虚拟线程，而不是平台线程。</p><p></p><p>受此特性影响的其他领域包括 RabbitMQ 和 Kafka 的监听器、Spring Data Redis 和 Spring for Apache Pulsar。</p><p></p><p>RestClient 是 RestTemplate 的一个现代化替代方案，是 Spring Framework 6.1 引入的同步 HTTP 客户端。Spring Boot 现在通过创建和预配置 RestClient.Builder 的方式创建 RestClient 实例。它提供了一个函数式的 API，就像 Spring WebFlux 中对应的 WebClient API 类似。使用 RestClient 的一个主要优势在于为了调用远程 REST API，不再需要添加额外的 Spring WebFlux 依赖。</p><p></p><p>Spring 团队建议使用 RestClient 来调用远程 REST 服务，除非已经使用了 Spring WebFlux 或 Reactor 项目，在这种情况下，推荐的选择是 WebClient。</p><p></p><p>与 RestClient 类似，Spring Framework 6.1 引入了一个新的接口 JdbcClient，并在 Spring Boot 3.2 中对其进行了自动配置。它提供了一个流畅 API 来执行常见的数据库操作。</p><p></p><p>Spring Boot 3.1 首次引入了 SSL Bundle，用于配置和使用 SSL 信息，比如 keystore、证书和私钥等。在 Spring Boot 3.2 中，通过设置 reload-on-update=true 属性，我们可以在 SSL 信任物料发生变化的时候重新加载 SSL bundle。Netty 和 Tomcat web 服务器支持热重新加载。我们可以使用相关的 spring.ssl.bundle.watch.file.quiet-period=10s 属性来配置静默期，在静默期之后将会探测变更。</p><p></p><p>Spring Boot 3.2 对可观测性进行了一些增强。当 spring-boot-starter-aop 位于类路径中时，Micrometer 的注解，比如 @Timed、@Counted、@NewSpan、@ContinueSpan 和 @Observed，均可声明式地使用。使用 @Scheduled 注解标注的方法进行了插装，以支持可观测性。通过将 management.observations.enable 属性设置为 false，可用禁用以指定名称开头的观测。在 Spring Boot 3.2 中，management.metrics.tags 属性已被废弃，取代它的是 management.observations.key-values。添加通用的键 - 值可以应用到所有具备该属性的观测中。请阅读该版本中可观测性改进的完整列表。</p><p></p><p>Broadcom 的 Spring 开发人员倡导者 Josh Long 告诉 InfoQ：</p><p></p><p></p><blockquote>现在是成为 Spring 和 Java 开发人员的最佳时机。通过支持 CRaC 项目（在某些 OpenJDK 发行版中已可用) 和 Loom 项目（从 Java 21 可用），Spring Boot 3.2 提供了优异的运行时效率。这些特性与现有的支持 GraalVM 原生镜像的工作相结合，为 Spring Boot 开发人员在生产环境中寻找最佳体验提供了绝佳的机会。</blockquote><p></p><p></p><p>关于升级和值得关注的完整变更列表，请参阅官方发布说明。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/12/spring-boot-virtual-threads/?accessToken%EF%BC%89\">https://www.infoq.com/news/2023/12/spring-boot-virtual-threads/?accessToken</a>\"</p><p></p><p>声明：本文由 InfoQ 翻译，未经许可禁止转载。</p>",
    "publish_time": "2024-01-09 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Zoom开源新的漏洞影响平分系统VISS",
    "url": "https://www.infoq.cn/article/QSZSBmlJ1mTGzm62vVd7",
    "summary": "<p><a href=\"https://www.zoom.com/en/blog/viss-approach-to-vulnerability-impact-scoring?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDQzNDgyMTMsImZpbGVHVUlEIjoiZ08zb2Q4bEpqb2ZZV3FETSIsImlhdCI6MTcwNDM0NzkxMywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.wZ7Uurk05tB6JwUUHFjOJudJEnNxJHfo-JyRwGUCF6k\">Zoom漏洞影响评分系统</a>\"（简称VISS）旨在帮助组织根据一种新的漏洞评分方法来执行安全措施，该方法优先考虑实际影响，而不是理论上的安全影响可能性。</p><p></p><p><a href=\"https://viss.zoom.com/specifications?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDQzNDgyMTMsImZpbGVHVUlEIjoiZ08zb2Q4bEpqb2ZZV3FETSIsImlhdCI6MTcwNDM0NzkxMywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.wZ7Uurk05tB6JwUUHFjOJudJEnNxJHfo-JyRwGUCF6k\">VISS</a>\"是在过去一年中开发出来的，并且<a href=\"https://github.com/zoom/viss?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDQzNDgyMTMsImZpbGVHVUlEIjoiZ08zb2Q4bEpqb2ZZV3FETSIsImlhdCI6MTcwNDM0NzkxMywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.wZ7Uurk05tB6JwUUHFjOJudJEnNxJHfo-JyRwGUCF6k\">最近开源</a>\"。它与通用漏洞评分系统（CVSS）的不同之处在于，它不关注最坏情况，而是试图从防御者的角度更客观地衡量漏洞的影响。为此，VISS提供了一个<a href=\"https://viss.zoom.com/calculator?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDQzNDgyMTMsImZpbGVHVUlEIjoiZ08zb2Q4bEpqb2ZZV3FETSIsImlhdCI6MTcwNDM0NzkxMywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.wZ7Uurk05tB6JwUUHFjOJudJEnNxJHfo-JyRwGUCF6k\">基于Web的UI来根据多个参数计算漏洞分数</a>\"，这些参数分为平台、基础设施和数据组。其中包括13个方面，如对平台的影响、受影响的租户数量、数据影响等等。</p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/08/08f93094a92cf1b05cf36f6014f721ec.webp\" /></p><p></p><p></p><p></p><blockquote>通过补偿控制指标，VISS分数是可调整的，并为环境所有者提供了根据其个体风险配置分数的灵活性和自由度。</blockquote><p></p><p></p><p>Zoom将VISS作为其Bug赏金计划的一个评估工具，这对提交的报告质量产生了显著影响，从而帮助他们了解应该在哪里投入时间和精力来获得最大价值。</p><p></p><p></p><blockquote>VISS可以帮助你主动保护你的环境并优先处理最有可能影响组织的漏洞，而不是将宝贵的有限资源集中在不太可能具有实质性影响的漏洞上。</blockquote><p></p><p></p><p><a href=\"https://github.com/zoom/viss/blob/main/VISS_User_Guide.pdf?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDQzNDgyMTMsImZpbGVHVUlEIjoiZ08zb2Q4bEpqb2ZZV3FETSIsImlhdCI6MTcwNDM0NzkxMywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.wZ7Uurk05tB6JwUUHFjOJudJEnNxJHfo-JyRwGUCF6k\">VISS提供了一个经过校准的默认配置</a>\"，具有平滑的分数分布，其中大约50%的报告被分类为中等严重性，而低和高严重性报告各占约25%。默认的配置可根据用户要求进行调整。</p><p></p><p>需要注意的是，VISS并没有取代CVSS，而是作为其补充，提供了额外的评估视角。</p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/12/zoom-vulnerability-score-viss/\">https://www.infoq.com/news/2023/12/zoom-vulnerability-score-viss/</a>\"</p>",
    "publish_time": "2024-01-09 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]