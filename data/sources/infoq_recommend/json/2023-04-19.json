[
  {
    "title": "不只是黑盒测试：测试工程师如何识别和消除代码坏气味？",
    "url": "https://www.infoq.cn/article/F9zxSTY7TPYYmEJD1waQ",
    "summary": "<p>具备适当的编程基础有助于改进你的测试自动化，使维护测试代码变得更容易，并减少测试压力。掌握编程的理论和基本原则有助于让测试自动化水平更上一层楼。面向对象编程原则有助于消除代码坏气味。</p><p></p><p>Christian Baumann在<a href=\"https://agiletestingdays.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2ODE3MzM1MDgsImZpbGVHVUlEIjoiZXR2OE9nVmV1VHNMZVVZYyIsImlhdCI6MTY4MTczMzIwOCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.kGs_Y-XS8L6zqYooK9ioZflWKIXHxu9RHRKMa4mGodA\">2022年敏捷测试日</a>\"上谈到了测试自动化。</p><p></p><p>Baumann提到，许多测试人员在不具备深厚的编程背景或没有接受过任何适当培训的情况下就被“扔”进了测试自动化领域。他们在一定程度上知道使用什么工具，并用它们创建了一些自动化测试。Baumann说，到了某个阶段，他们发现他们的自动化系统可能不太对劲。代码看起来很混乱，维护它们要花费很多时间，而且非常令人沮丧。</p><p></p><p>Baumann说，如果每个做自动化测试的人都在编程理论和基本原则方面有一定的基础，那就太好了。这样也有助于提高自动化代码的质量。</p><p></p><p>Baumann给出了一个如何在测试自动化中使用面向对象编程原则的例子：</p><p></p><p></p><blockquote>我们可以使用对象母亲（Object Mother）模式，这个模式基于面向对象的“抽象”原则。这意味着它隐藏了内部实现细节，只暴露出使用它所必需的方法。测试对象是如何被创建、如何从数据库中删除、在测试期间如何被修改——所有这些对于用户来说都是不需要知道的，用户只需要知道这些方法存在并且可以被调用。</blockquote><p></p><p></p><p>Baumann说，使用面向对象编程原则也有助于消除代码坏气味：</p><p></p><p></p><blockquote>消除代码坏气味就是在不改变代码行为的情况下修改代码，基本上就是重构。对于重构，我们需要将单元测试作为安全网，这样就可以知道我们所做的修改有没有破坏了任何东西以及代码是否仍然按照预期那样运行。</blockquote><p></p><p></p><p>Baumann建议我们对测试自动化代码给予充分的重视，并将其视为应用程序的产品代码，以防止遇到类似的问题。</p><p></p><p>InfoQ就测试自动化人员需要具备编程基础的问题采访了<a href=\"https://www.linkedin.com/in/christianbaumann/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2ODE3MzM1MDgsImZpbGVHVUlEIjoiZXR2OE9nVmV1VHNMZVVZYyIsImlhdCI6MTY4MTczMzIwOCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.kGs_Y-XS8L6zqYooK9ioZflWKIXHxu9RHRKMa4mGodA\">Christian Baumann</a>\"。</p><p></p><p>InfoQ：面向对象编程能带来什么好处？</p><p></p><p></p><blockquote>Christian Baumann：在测试自动化代码中应用面向对象编程原则有很多好处，它让代码更不容易出错，更容易阅读、理解和维护。</blockquote><p></p><p></p><p>InfoQ：怎样才能管理好测试数据？</p><p></p><p></p><blockquote>Baumann：在测试自动化中，我相信处理测试数据最好的方法是让每个测试管理好自己的数据。这意味着每个测试都会创建它所需要的测试数据，在测试结束时从系统中删除它们，让测试环境处于干净的状态。对于这个过程，对象母亲模式可以为我们提供很大帮助。它以工厂模式为基础，通过简单的方法调用为测试提供了可使用的预制对象。但它又不局限于工厂模式，因为创建的对象可以被自定义。此外，测试对象可以在测试期间被更新，而且——如果必要的话——在测试结束时从数据库中删除。</blockquote><p></p><p></p><p>InfoQ：我们如何识别和消除代码坏气味？</p><p></p><p></p><blockquote>Baumann：要识别代码坏气味，我们需要了解它们。因此，作为程序员（如果我们编写测试自动化代码，我们就是程序员），我们需要学习和研究它们。对于某些代码坏气味，可以用“食谱”来消除它们。例如，面向对象原则“多态性”有助于消除“switch语句”和“太多参数”坏气味。</blockquote><p></p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/03/programming-foundation-test/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2ODE3MzM1MDgsImZpbGVHVUlEIjoiZXR2OE9nVmV1VHNMZVVZYyIsImlhdCI6MTY4MTczMzIwOCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.kGs_Y-XS8L6zqYooK9ioZflWKIXHxu9RHRKMa4mGodA\">https://www.infoq.com/news/2023/03/programming-foundation-test/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/bhBft2B1a7MyuLYoJPzC\">如何评估代码质量：反馈回路、文化、代码质量、技术债务、部署管道</a>\"</p><p><a href=\"https://www.infoq.cn/article/VDwdDmSiTZglv6cthqCp\">如何用数据来提升系统质量</a>\"</p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651140454&amp;idx=5&amp;sn=4a75cc899bb658e9c571bf339e9379af&amp;chksm=bdb8c9358acf4023da70bf13f75f34f55774f27f0a733d4ebe243e1974af98e1f22c6a7a0d08&amp;scene=27#wechat_redirect\">开发者如何看待分布式系统中的不确定性</a>\"</p>",
    "publish_time": "2023-04-19 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]