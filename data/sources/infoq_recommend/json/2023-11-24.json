[
  {
    "title": "Java近期新闻：Spring Framework 6.1、Spring Data 2023.1、Payara Platform、JDK 22的JEP",
    "url": "https://www.infoq.cn/article/qKKB4jQcVN6MKelPBQPN",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p></p><p>在结束了评审后，JEP 459（<a href=\"https://openjdk.org/jeps/459?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">字符串模板（第二次预览）</a>\"）已从Proposed to Target<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-November/008445.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">进入</a>\"到Targeted（JDK 22）状态。这个JEP在经过第一次预览之后进行第二次预览：在JDK 21中交付的JEP 430（<a href=\"https://openjdk.org/jeps/430?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">字符串模板（预览）</a>\"）。该特性通过字符串模板来增强Java编程语言，字符串字面量中包含嵌入表达式，这些表达式将在运行时被解释和计算。有关JEP 430的更多细节可以在InfoQ的<a href=\"https://www.infoq.com/news/2023/04/java-gets-a-boost-with-string/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">新闻报道</a>\"中找到。</p><p></p><p>JEP 463（<a href=\"https://openjdk.org/jeps/463?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">隐式声明类和实例主方法（第二次预览）</a>\"）已从Candidate进入到Proposed to Target（JDK 22）状态。这个JEP也就是之前的未命名类和实例主方法（预览）、灵活的主方法和匿名主类（预览）以及隐式类和增强的主方法（预览），包含了针对前一轮<a href=\"https://openjdk.java.net/jeps/12?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">预览</a>\"反馈（即JEP 445，<a href=\"https://openjdk.org/jeps/445?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">未命名类和实例主方法（预览）</a>\"）的增强。这个JEP提议“让学生可以在不需要理解太多语言特性的前提下编写他们的第一个程序。”2022年9月，Oracle的Java语言架构师<a href=\"https://www.linkedin.com/in/briangoetz/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Brian Goetz</a>\"为此撰写了<a href=\"https://openjdk.org/projects/amber/design-notes/on-ramp?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">“Paving the on-ramp”</a>\"一文。Oracle技术委员会成员<a href=\"https://www.linkedin.com/in/gavin-bierman-a0173075/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Gavin Bierman</a>\"已<a href=\"https://mail.openjdk.org/pipermail/amber-dev/2023-May/008065.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"<a href=\"https://cr.openjdk.org/~gbierman/jep445/jep445-20230502/specs/unnamed-classes-instance-main-methods-jls.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">规范文档</a>\"初稿，供Java社区评审。关于JEP 445的更多细节可以在InfoQ的其他<a href=\"https://www.infoq.com/news/2023/05/beginner-friendly-java/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">报道</a>\"中找到。</p><p></p><p>JEP 457（<a href=\"https://openjdk.org/jeps/457?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">类文件API（预览）</a>\"）已从Candidate进入到Proposed to Target（JDK 22）状态。该JEP提议提供用于解析、生成和转换Java类文件的API。它将先作为<a href=\"https://asm.ow2.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ASM</a>\"的内部替代（ASM是Java字节码操作和分析框架），并计划在后续开放为公共API。Oracle Java语言架构师<a href=\"https://www.linkedin.com/in/briangoetz?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Brian Goetz</a>\"将ASM描述为“一个带有大量遗留负担的老代码库”，并提供了<a href=\"https://mail.openjdk.org/pipermail/discuss/2022-June/006131.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">背景信息</a>\"，说明这个草案将如何演进并最终取代ASM。评审预计于2023年11月28日结束。</p><p></p><p>JEP 447（<a href=\"https://openjdk.org/jeps/447?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">super()之前的语句（预览）</a>\"）已从Candidate进入到Proposed to Target（JDK22）状态。该JEP属于<a href=\"https://openjdk.org/projects/amber/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Amber项目</a>\"，提议允许在构造函数的this()或super()之前出现不引用正在创建的实例的语句并保留构造函数现有的安全性和初始化保证。Oracle技术顾问<a href=\"https://www.linkedin.com/in/gavin-bierman-a0173075/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Gavin Bierman</a>\"为Java社区提供了这个JEP的<a href=\"https://cr.openjdk.org/~gbierman/jep447/jep447-20230420/specs/statements-before-super-jls.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">初始规范</a>\"以供评审和反馈。评审预计于2023年11月22日结束。</p><p></p><p>JEP 423（<a href=\"https://openjdk.org/jeps/423?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">G1区域固定</a>\"）已从Candidate进入到Proposed to Target（JDK 22）状态。该JEP提议为<a href=\"https://docs.oracle.com/en/java/javase/17/gctuning/garbage-first-g1-garbage-collector1.html#GUID-ED3AB6D3-FD9B-4447-9EDF-983ED2F7A573?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">G1垃圾回收器</a>\"实现区域固定（Region Pinning）来降低GC延迟。这是对G1的扩展，使得在主要和次要回收操作期间可以固定任意区域，避免在实现<a href=\"https://shipilev.net/jvm/anatomy-quarks/9-jni-critical-gclocker/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JNI临界区域</a>\"时垃圾回收被禁用。评审预计于2023年11月28日结束。</p><p></p><p></p><h4>JDK 22</h4><p></p><p></p><p>JDK 22<a href=\"https://jdk.java.net/22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">早期访问</a>\"版本的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22%2B24?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Build 24</a>\"已经可用，包含了自Build 23以来的<a href=\"https://github.com/openjdk/jdk/compare/jdk-22%2B23...jdk-22%2B24?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">更新</a>\"，包括对各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2022%20and%20%22resolved%20in%20build%22%20%3D%20b24%20order%20by%20component%2C%20subcomponent&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">问题</a>\"的修复。有关此版本的更多详细信息，请参阅<a href=\"https://jdk.java.net/22/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"。</p><p></p><p>对于<a href=\"https://openjdk.org/projects/jdk/22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JDK 22</a>\"，开发者可以通过<a href=\"https://bugreport.java.com/bugreport/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Java Bug Database</a>\"报告错误。</p><p></p><p></p><h4>Spring Framework</h4><p></p><p></p><p><a href=\"https://spring.io/projects/spring-framework?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Spring Framework</a>\" 6.1.0<a href=\"https://spring.io/blog/2023/11/16/spring-framework-6-1-goes-ga?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，带来了问题修复、文档改进、依赖项升级和新特性，例如：使用<a href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/client/ClientHttpResponse.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ClientHttpResponse</a>\"接口的消息转换器将响应体转换为所需类型；改进了对容器元素错误的方法验证支持；在<a href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/aop/support/ControlFlowPointcut.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ControlFlowPointcut</a>\"类中支持方法名模式匹配。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.1.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"和<a href=\"https://github.com/spring-projects/spring-framework/wiki/What's-New-in-Spring-Framework-6.x?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">What's New</a>\"页面。</p><p></p><p>类似地，Spring Framework 6.0.14和5.3.31也已<a href=\"https://spring.io/blog/2023/11/16/spring-framework-5-3-31-and-6-0-14-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，带来了问题修复、文档改进、依赖项升级和新特性，例如：在<a href=\"https://github.com/spring-projects/spring-framework/blob/main/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">LogAdapter</a>\"类中定义的LogAdapter内部类，在反序列化时为与Log4j 2.21保持兼容需要对Log4j <a href=\"https://github.com/apache/logging-log4j2/blob/2.x/log4j-api/src/main/java/org/apache/logging/log4j/spi/ExtendedLogger.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ExtendedLogger</a>\"接口进行重新解析；优化了Hotspot的<a href=\"https://docs.spring.io/spring-framework/docs/6.0.14/javadoc-api/org/springframework/expression/spel/support/StandardTypeLocator.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">StandardTypeLocator</a>\"类，可以更好地解析相同的类；增强了<a href=\"https://docs.spring.io/spring-framework/docs/6.0.14/javadoc-api/org/springframework/http/ProblemDetail.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ProblemDetail</a>\"类中的属性设置。有关这些版本的更多详细信息，请参阅6.0.14的<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.0.14?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"和5.3.31的<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.31?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"。</p><p></p><p><a href=\"https://spring.io/projects/spring-data?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Spring Data</a>\" 2023.1.0<a href=\"https://spring.io/blog/2023/11/17/spring-data-2023-1-goes-ga?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，代号Vaughn，带来了这些特性：与JDK 21兼容；通过配置Java <a href=\"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Executor.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Executor</a>\"接口来使用虚拟线程；支持Kotlin <a href=\"https://kotlinlang.org/docs/inline-classes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">内联直类</a>\"；优化Checkpoint/Restore（CRaC）；<a href=\"https://spring.io/projects/spring-data-jdbc?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Spring Data JDBC</a>\"的单查询加载；将文档迁移到<a href=\"https://antora.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Antora</a>\"。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2023.1-%28Vaughan%29-Release-Notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"。</p><p></p><p>类似地，Spring Data<a href=\"https://spring.io/blog/2023/11/17/spring-data-2023-0-6-2022-0-12-and-2021-2-18-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">服务版本</a>\"2023.0.6、2022.0.12和2021.2.18的带来了问题修复和相应的子项目依赖项升级，例如：Spring Data Commons 3.1.6、3.0.12和2.7.18；Spring Data MongoDB 4.1.6、4.0.12和3.4.18；Spring Data Elasticsearch 5.1.6、5.0.12和4.4.18；以及Spring Data Neo4j 7.1.6、7.0.12和6.3.18。这些版本可以分别在即将发布的Spring Boot 3.1.6、3.0.13和2.7.18中使用。</p><p></p><p></p><h4>Payara</h4><p></p><p></p><p>Payara发布了<a href=\"https://www.payara.fish/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Payara Platform</a>\"的2023年11月版本，包括Community Edition 6.2023.11、Enterprise Edition 6.8.0和Enterprise Edition 5.57.0。更新内容包括：问题修复；将依赖项Maven Bundle Plugin升级到5.1.9；修复了<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41699?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Payara Platform Payara Server、Micro和Embedded中的CVE-2023-41699</a>\"安全漏洞，这是一个URL重定向到不受信任站点的漏洞。</p><p></p><p>新特性包括：新的命令行参数--warmup，与asadmin命令的start-domain一起使用，在引导启动后停止服务器；为所有<a href=\"https://docs.payara.fish/enterprise/docs/documentation/payara-server/asadmin-commands/server-management-commands.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Payara Server Management asadmin命令</a>\"添加了单独的超时选项。</p><p></p><p>Payara还推出了<a href=\"https://start.payara.fish/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Payara Starter</a>\"，一个源代码生成器，用于创建新的Payara Server或Payara Micro项目。</p><p></p><p>有关这些版本的更多详细信息，请参阅<a href=\"https://docs.payara.fish/community/docs/Release%20Notes/Release%20Notes%206.2023.11.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Community Edition 6.2023.11</a>\"、<a href=\"https://docs.payara.fish/enterprise/docs/Release%20Notes/Release%20Notes%206.8.0.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Enterprise Edition 6.8.0</a>\"和<a href=\"https://docs.payara.fish/enterprise/docs/5.57.0/Release%20Notes/Release%20Notes%205.57.0.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Enterprise Edition 5.57.0</a>\"的发布说明。</p><p></p><p></p><h4>Open Liberty</h4><p></p><p></p><p>IBM发布了<a href=\"https://openliberty.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Open Liberty</a>\" 23.0.0.11，为<a href=\"https://github.com/eclipse/microprofile-metrics/blob/main/README.adoc?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">MicroProfile Metrics</a>\" 5.0、4.0和3.0新增了新的供应商指标，可直接添加到各种监控工具的仪表盘中，无需进行额外的计算。这些新指标包括：Process CPU Utilization Percent、Heap Utilization Percent、GC Time per Cycle、Connection Pool in Use Time per Used Connection、Connection Pool Wait Time per Queued Request、Servlet Elapsed Time per Request和REST Elapsed Time per Request。</p><p></p><p>其他新特性包括：解决了IBM WebSphere Application Server Liberty 23.0.0.9到23.0.0.10中的<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46158?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">CVE-2023-46158</a>\"漏洞（由于不正确地处理资源过期而导致安全性降低）；在server.xml中使用include元素包含所有服务器配置文件，避免像之前那样需要单独指定它们。</p><p></p><p></p><h4>Micronaut</h4><p></p><p></p><p>Micronaut基金会<a href=\"https://micronaut.io/2023/11/17/micronaut-framework-4-2-0-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"了<a href=\"https://micronaut.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Micronaut Framework</a>\" 4.2.0，包括<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v4.2.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Micronaut Core 4.2.0</a>\"，增强了<a href=\"https://docs.micronaut.io/latest/guide/#ksp?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Kotlin Symbol Processing</a>\"，并分别将依赖项Kotlin和Netty升级到1.9.20和4.1.101。<a href=\"https://micronaut.io/launch?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Micronaut Launch</a>\"中已添加了对JDK 21和Gradle Kotlin DSL的支持。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/micronaut-projects/micronaut-platform/releases/tag/v4.2.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"。</p><p></p><p></p><h4>Grails</h4><p></p><p></p><p>Grails基金会发布了Grails Framework 6.1.0，包含问题修复、文档改进、依赖项升级和这些重要变更：将SnakeYAML升级到2.2，解决<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1471&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">CVE-2022-1471</a>\"漏洞（通过SnakeYAML的Constructor()类对类型进行反序列化可能导致攻击者发起恶意远程代码执行）；解耦Sitemesh插件以提高灵活性。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/grails/grails-core/releases/tag/v6.1.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"。</p><p></p><p></p><h4>Quarkus</h4><p></p><p></p><p><a href=\"https://quarkus.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Quarkus</a>\" 3.5.2<a href=\"https://quarkus.io/blog/quarkus-3-5-2-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，修复了一些错误，改进了文档，并带来了这些显著变化：修复了<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-21971?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">CVE-2023-21971</a>\"漏洞（允许攻击者通过多个协议进行网络访问，从而威胁到MySQL Connectors，这可能导致未经授权的攻击挂起MySQL Connectors或频繁出现拒绝服务，以及未经授权的更新、插入或删除访问部分MySQL Connectors可访问的数据）；针对Windows操作系统禁用了<a href=\"https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/http2/Http2RSTFloodProtectionTest.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Http2RSTFloodProtectionTest</a>\"和<a href=\"https://github.com/quarkusio/quarkus/blob/main/integration-tests/gradle/src/test/java/io/quarkus/gradle/CustomManifestArgumentsTest.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">CustomManifestArgumentsTest</a>\"类，因为这些测试在单个连接中创建了许多流，导致不稳定；由于Windows操作系统上的持续集成问题，避免在<a href=\"https://github.com/quarkusio/quarkus/blob/main/extensions/resteasy-reactive/rest-client-reactive/runtime/src/test/java/io/quarkus/rest/client/reactive/runtime/RestClientCDIDelegateBuilderTest.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">RestClientCDIDelegateBuilderTest</a>\"类中使用JUnit <a href=\"https://junit.org/junit5/docs/5.10.1/api/org.junit.jupiter.api/org/junit/jupiter/api/io/TempDir.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">@TempDir</a>\"注解。</p><p></p><p>此版本的更多详细信息可在<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.5.2?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">变更日志</a>\"中找到。</p><p></p><p></p><h4>Apache软件基金会</h4><p></p><p></p><p><a href=\"https://tomcat.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Apache Tomcat</a>\"的<a href=\"http://tomcat.apache.org/tomcat-11.0-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">11.0.0-M14</a>\"、<a href=\"http://tomcat.apache.org/tomcat-10.1-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">10.1.16</a>\"、<a href=\"https://tomcat.apache.org/tomcat-9.0-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">9.0.83</a>\"和<a href=\"https://tomcat.apache.org/tomcat-8.5-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">8.5.96</a>\"版本均带来了问题修复和重要变更：确保在读取请求消息期间出现IOException时始终触发错误处理，无论应用程序是否处理这个异常；修复了<a href=\"https://tomcat.apache.org/connectors-doc/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Tomcat Connector</a>\"的一个问题，这个问题在使用<a href=\"https://tomcat.apache.org/tomcat-11.0-doc/api/org/apache/catalina/security/TLSCertificateReloadListener.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">TLSCertificateReloadListener</a>\" 类重新加载Transport Layer Security（TLS）配置时拒绝新连接或导致JVM崩溃；<a href=\"https://tomcat.apache.org/tomcat-11.0-doc/api/org/apache/catalina/manager/StatusManagerServlet.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">StatusManagerServlet</a>\"类现在可以以JSON格式输出统计信息。</p><p></p><p>对于12.11.0.0-M14，与<a href=\"https://www.openssl.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">OpenSSL</a>\"的集成将使用<a href=\"https://openjdk.org/jeps/454?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Foreign Function &amp; Memory API</a>\" API，而不是Tomcat Native。在使用Java 22或更高版本的JDK时，可以通过在<a href=\"https://tomcat.apache.org/tomcat-11.0-doc/api/org/apache/catalina/Server.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Server</a>\"元素上添加<a href=\"https://tomcat.apache.org/tomcat-11.0-doc/api/org/apache/catalina/core/OpenSSLLifecycleListener.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">OpenSSLLifecycleListener</a>\"类来启用OpenSSL支持。有关这些版本的更多详细信息，请参阅版本<a href=\"http://tomcat.apache.org/tomcat-11.0-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">11.0.0-M14</a>\"、<a href=\"http://tomcat.apache.org/tomcat-10.1-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">10.1.16</a>\"、<a href=\"https://tomcat.apache.org/tomcat-9.0-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">9.0.83</a>\"和<a href=\"https://tomcat.apache.org/tomcat-8.5-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">8.5.96</a>\"的变更日志。</p><p></p><p>另外，<a href=\"https://camel.apache.org/releases/release-4.2.0/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Apache Camel 4.2.0</a>\"带来了问题修复、依赖项升级和新特性/改进，例如：支持OAuth 2.0（<a href=\"https://camel.apache.org/components/4.0.x/http-component.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Camel HTTP</a>\"组件）；支持使用<a href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Primary.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">@Primary</a>\"注解进行Spring bean自动装配（<a href=\"https://camel.apache.org/components/4.0.x/spring-summary.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Camel Spring</a>\"组件）；可以使用旧的Micrometer指标名称或遵循新的Micrometer命名约定（<a href=\"https://camel.apache.org/components/4.0.x/micrometer-component.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Camel Micrometer</a>\"组件）。</p><p></p><p></p><h3>Eclipse基金会</h3><p></p><p></p><p>Eclipse <a href=\"https://vertx.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Vert.x</a>\" 4.5.0发布，增加了一些新特性，例如：支持JDK 21和虚拟线程；创建<a href=\"https://vertx.io/docs/vertx-pg-client/java/#_dynamic_connection_configuration?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">动态SQL连接</a>\"；允许在运行时更新<a href=\"https://vertx.io/docs/vertx-core/java/#_updating_ssltls_configuration?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">TCP客户端/服务器SSL选项</a>\"，以进行证书轮换；实现了用于连接HTTP客户端和SQL连接池的Builder模式。这个版本的详细信息可以在<a href=\"https://github.com/vert-x3/wiki/wiki/4.5.0-Release-Notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"和<a href=\"https://github.com/vert-x3/wiki/wiki/4.5.0-Deprecations-and-breaking-changes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">弃用和重大变更说明</a>\"中找到。</p><p></p><p><a href=\"https://twitter.com/OmniFishEE/status/1724047932242964983?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Mojarra 4.0.5</a>\"是<a href=\"https://jakarta.ee/specifications/faces/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Jakarta Faces</a>\"规范的兼容实现，主要变更包括：将<a href=\"https://weld.cdi-spec.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Weld</a>\"的重新初始化从<a href=\"https://github.com/eclipse-ee4j/mojarra/blob/master/impl/src/main/java/com/sun/faces/config/ConfigureListener.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ConfigureListener</a>\"类移回其原始的<a href=\"https://github.com/eclipse-ee4j/mojarra/blob/master/impl/src/main/java/com/sun/faces/config/FacesInitializer.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">FacesInitializer</a>\"类，以解决异常问题；修复了规范和实现之间在使用常量字段时的不匹配，规范中定义为\"jakarta.faces.WEBAPP_CONTRACTS_DIRECTORY\"的常量字段在<a href=\"https://jakarta.ee/specifications/faces/4.0/apidocs/jakarta/faces/application/resourcehandler?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ResourceHandler</a>\"类中被定义为WEBAPP_CONTRACTS_DIRECTORY_PARAM_NAME；在InitFacesContext类的getExceptionHandler()方法中添加了一个新的<a href=\"https://github.com/eclipse-ee4j/mojarra/blob/master/jakarta.faces-api/src/main/java/jakarta/faces/context/ExceptionHandler.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">ExceptionHandler</a>\"类来处理UnsupportedOperationException。该版本的详细信息可以在<a href=\"https://github.com/eclipse-ee4j/mojarra/releases/tag/4.0.5-RELEASE?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"中找到。</p><p></p><p></p><h4>Micrometer</h4><p></p><p></p><p><a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Micrometer Metrics</a>\"的1.12.0、1.11.6、1.10.13和1.9.17版本均带来了问题修复、文档改进、依赖项升级和新特性。其中1.12.0增加了这些特性：支持Generational ZGC；<a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/jetty/JettyConnectionMetrics.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JettyConnectionMetrics</a>\"类支持<a href=\"https://eclipse.dev/jetty/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Jetty</a>\" 12；新增了<a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-jakarta9/src/main/java/io/micrometer/jakarta9/instrument/jms/JmsInstrumentation.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JmsInstrumentation</a>\"类，以增加对<a href=\"https://jakarta.ee/specifications/messaging/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Jakarta Messaging</a>\"规范的可观察性。这些版本的详细信息可以分别在<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.12.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">1.12.0</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.11.6?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">1.11.6</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.10.13?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">1.10.13</a>\"和<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.9.17?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">1.9.17</a>\"的发布说明中找到。</p><p></p><p>类似的，<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Micrometer Tracing</a>\"的1.2.0、1.1.7和1.0.12版本均带来了依赖项升级和新特性。1.2.0增加了这些特性：将<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing/src/main/java/io/micrometer/tracing/annotation/SpanTagAnnotationHandler.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">SpanTagAnnotationHandler</a>\"类变为可选的，使其可以与<a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-core/src/main/java/io/micrometer/core/aop/TimedAspect.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">TimedAspect</a>\"类匹配，让框架可以更容易地进行配置；在<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing/src/main/java/io/micrometer/tracing/exporter/FinishedSpan.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">FinishedSpan</a>\"接口中定义了一个新的getDuration()方法；因为所有的Instrumentation项目将不提供对传输的抽象，因此对HTTP的抽象已被弃用并可能在将来移除。这些版本的详细信息可以在<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.2.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">1.2.0</a>\"、<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.1.7?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">1.1.7</a>\"和<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.0.12?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">1.0.12</a>\"的发布说明中找到。</p><p></p><p></p><h4>Reactor项目</h4><p></p><p></p><p><a href=\"https://github.com/reactor/reactor/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Project Reactor</a>\" 2023.0.0<a href=\"https://github.com/reactor/reactor/releases/tag/2023.0.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，包含了一些依赖项升级：reactor-core 3.6.0、reactor-netty 1.1.13、reactor-kafka 1.3.22、reactor-pool 1.0.3、reactor-addons 3.5.1、reactor-kotlin-extensions 1.2.2。有关该版本更详细的信息，请参阅<a href=\"https://github.com/reactor/reactor/compare/2023.0.0-RC1...2023.0.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">变更日志</a>\"。</p><p></p><p>类似的，Reactor的第13个维护版本2022.0.13带来了这些依赖项升级：reactor-core 3.5.12、reactor-netty 1.1.13、reactor-kafka 1.3.22。可以在<a href=\"https://github.com/reactor/reactor/compare/2022.0.12...2022.0.13?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">变更日志</a>\"中了解更多关于该版本的详细信息。</p><p></p><p></p><h4>Piranha</h4><p></p><p></p><p><a href=\"https://piranha.cloud/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Piranha</a>\" 23.11.0 <a href=\"https://github.com/piranhacloud/piranha/releases/tag/v23.11.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，带来了一些重大变更：支持 JDK 21；支持 Piranha Core Profile 的协调恢复检查点（CRaC）；移除了可维护性、代码行数、代码覆盖率和代码质量等徽章。可以在<a href=\"https://javadoc.io/doc/cloud.piranha/project/latest/index.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">官方文档</a>\"和<a href=\"https://github.com/piranhacloud/piranha/issues?q=is%3Aissue+-label%3Awontfix+milestone%3A23.11.0+is%3Aclosed&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">问题追踪器</a>\"中了解更多有关该版本的详细信息。</p><p></p><p></p><h4>JDKMon</h4><p></p><p></p><p><a href=\"https://github.com/HanSolo/JDKMon?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JDKMon</a>\" （一个用于监控和更新已安装 JDK 的工具）<a href=\"https://github.com/HanSolo/JDKMon/releases/tag/17.0.85?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">17.0.85</a>\" 和 <a href=\"https://github.com/HanSolo/JDKMon/releases/tag/17.0.83?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">17.0.83</a>\" 提供了这项新特性：为GraalVM提供与 JDK 相关的国家漏洞数据库 (NVD) 扫描支持；引入了一个新的搜索字段，用于发现 OpenJDK JEP、JSR 和 Java 项目；支持 Common Vulnerability Scoring System (CVSS) 4.0 和 NVD API 2.0。</p><p></p><p></p><h4>JobRunr</h4><p></p><p></p><p><a href=\"https://www.jobrunr.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JobRunr</a>\" （一个基于持久存储的 Java 后台处理库）6.3.3发布：为 Quarkus 提供分离的构建时和运行时配置；使用 Quarkus ClientProxy 接口提供的合成类，替代了原来会导致找不到 Bean 的代理名称。有关该版本更多详细信息，请参阅<a href=\"https://github.com/jobrunr/jobrunr/releases/tag/v6.3.3?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"。</p><p></p><p></p><h4>JHipster Lite</h4><p></p><p></p><p><a href=\"https://www.jhipster.tech/jhipster-lite/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JHipster Lite</a>\" 0.48.0 <a href=\"https://twitter.com/pascalgrimaud/status/1725773452278145024?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，带来了问题修复、依赖项升级和新特性/增强，如：JHipster Lite 引擎支持的最小 JDK 版本为21；新的许可模块，可构建 <a href=\"https://github.com/jhipster/jhipster-lite/blob/main/src/main/java/tech/jhipster/lite/module/domain/JHipsterModule.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">JHipsterModule</a>\" 类的多个实例；在 <a href=\"https://github.com/jhipster/jhipster-lite/blob/main/src/main/java/tech/jhipster/lite/BusinessContext.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">@BusinessContext</a>\" 和 <a href=\"https://github.com/jhipster/jhipster-lite/blob/main/src/main/java/tech/jhipster/lite/SharedKernel.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">@SharedKernel</a>\" 注解中添加 name 和 description 属性，用于更好地记录上下文和生成实时文档。关于该版本更多的详细信息请参阅<a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v0.48.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布说明</a>\"。</p><p></p><p></p><h4>Testcontainers for Java</h4><p></p><p></p><p><a href=\"https://github.com/testcontainers/testcontainers-java/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Testcontainers for Java</a>\" 1.19.2 <a href=\"https://github.com/testcontainers/testcontainers-java/releases/tag/1.19.2?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，带来了这些重要变更：在 HttpWaitStrategy 类中启用原生 HTTP 和 HTTPS；新增了一个关闭钩子，可以更快地发送 SIGTERM 到 <a href=\"https://github.com/testcontainers/moby-ryuk/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Moby Ryuk</a>\"，以便在默认的 10 秒之前关闭。</p><p></p><p></p><h4>Arquillian</h4><p></p><p></p><p>Arquillian 1.8.0.Final <a href=\"https://github.com/arquillian/arquillian-core/releases/tag/1.8.0.Final?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">发布</a>\"，带来了这些重要变更：修复了<a href=\"https://github.com/arquillian/arquillian-core/blob/master/container/test-impl-base/src/main/java/org/jboss/arquillian/container/test/impl/RemoteExtensionLoader.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">RemoteExtensionLoader</a>\" 类中的文件泄漏问题；依赖项升级至 Jetty 9.4.51.v20230217，解决了 Jetty 8.1.2.v20120308 的绕过漏洞问题；替换了已弃用的 JUnit 和 Arquillian 构造函数和方法。</p><p></p><p></p><h4>Gradle</h4><p></p><p></p><p><a href=\"https://gradle.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">Gradle</a>\" 8.5 的 <a href=\"https://github.com/gradle/gradle/releases/tag/v8.5.0-RC3?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">第三个候选版</a>\" 和 <a href=\"https://github.com/gradle/gradle/releases/tag/v8.5.0-RC2?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">第二个候选版</a>\" 在新功能上持续改进，如：完全支持使用 JDK 21 编译、测试和运行；Kotlin DSL 的改进，包括<a href=\"https://docs.gradle.org/8.5-rc-1/release-notes.html#faster-first-use?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">更快的初次使用</a>\"和支持预编译 Kotlin 脚本插件的<a href=\"https://docs.gradle.org/8.5-rc-1/release-notes.html#catalog-precompiled?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">版本目录</a>\"；改进了对错误和警告的报告。这些版本的更多详细信息请参阅<a href=\"https://docs.gradle.org/8.5-rc-3/release-notes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">8.5-RC3 版本发布说明</a>\"和<a href=\"https://docs.gradle.org/8.5-rc-2/release-notes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDA3MTE5NDksImZpbGVHVUlEIjoiUjEzamROSmQ4cFNqSjFrNSIsImlhdCI6MTcwMDcxMTY0OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.GJA4cxUJjf9M-2h_KgpUMdqw7krs0Wbf30Zy2nrNy9g\">8.5-RC2 版本发布说明</a>\"。</p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/11/java-news-roundup-nov13-2023/\">https://www.infoq.com/news/2023/11/java-news-roundup-nov13-2023/</a>\"</p>",
    "publish_time": "2023-11-24 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "《云上新视界》第四期：人物三维重建技术实践",
    "url": "https://www.infoq.cn/article/hpBRLrtkByMx8C0yNg60",
    "summary": "<p>本期课程，火山引擎体积视频负责人徐屹将带领大家了解人物三维模型重建的基本方法；在此基础上，还能了解到如何对人脸区域做针对性的效果优化，以及面对消费级复杂多样的场景会遇到什么问题、该如何解决。</p>",
    "publish_time": "2023-11-24 10:10:19",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "CNCFKCL Language Owner 徐鹏飞确认出席 QCon 上海，分享以 KCL 语言为例，详解领域编程语言如何从设计走向开源实践",
    "url": "https://www.infoq.cn/article/DElZ9ETE4AVR7Obt8BVH",
    "summary": "<p><a href=\"https://qcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=8&amp;utm_term=1124&amp;utm_content=xupengfei\">QCon 全球软件开发大会</a>\"，将于 12 月在上海召开。CNCFKCL Language Owner 徐鹏飞将发表题为《<a href=\"https://qcon.infoq.cn/2023/shanghai/presentation/5619?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=8&amp;utm_term=1124&amp;utm_content=xupengfei\">以 KCL 语言为例，详解领域编程语言如何从设计走向开源实践</a>\"》主题分享，探讨如何将一门编程语言从设计、业务落地并推向开源的过程，以及 KCL 语言在开源实践方面的前沿亮点、落地实践与社区发展规划。</p><p></p><p><a href=\"https://qcon.infoq.cn/2023/shanghai/presentation/5619?utm_source=infoqweb&amp;utm_medium=teacherart&amp;utm_campaign=8&amp;utm_term=1124&amp;utm_content=xupengfei\">徐鹏飞</a>\"，编程语言、编译器、开发者工具、云原生技术和开源爱好者。CNCF 基金会 KCL 语言项目 Owner，KusionStack, KubeVela, Helmfile 等开源项目贡献者。他在本次会议的演讲内容如下：</p><p></p><p>演讲：以 KCL 语言为例，详解领域编程语言如何从设计走向开源实践</p><p></p><p>本演讲将以 KCL 语言为例，探讨一门领域编程语言是如何从设计走向开源实践的？我们将了解 KCL 语言的背景和设计理念，并深入探讨开源实践对于语言发展和社区参与的重要性。通过本次演讲，听众将了解到如何将一门编程语言从设计、业务落地并推向开源的过程，并了解到 KCL 语言在开源实践方面的前沿亮点、落地实践与社区发展规划。</p><p></p><p>演讲提纲：</p><p></p><p>设计理念与开发过程开源的重要性KCL 语言的开源实践KCL 语言的前沿亮点结论</p><p></p><p>听众收益点：</p><p></p><p>○ 了解一门编程语言从设计到开源实践的过程和重要性；</p><p>○ 了解 KCL 语言的背景、设计理念、业务落地以及开源实践；</p><p>○ 了解开源实践对于编程语言发展和社区参与的积极影响；</p><p>○ 探索 KCL 语言在开源实践中的前沿亮点和解决领域特定问题的能力。</p><p></p><p>除上述演讲外，QCon 上海还将围绕&nbsp;<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1595?utm_source=infoqweb&amp;utm_medium=teacherart\">GenAI和通用大模型应用探索</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1596?utm_source=infoqweb&amp;utm_medium=teacherart\">AI&nbsp;Agent&nbsp;与行业融合应用的前景</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1597?utm_source=infoqweb&amp;utm_medium=teacherart\">LLM&nbsp;时代的性能优化</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1598?utm_source=infoqweb&amp;utm_medium=teacherart\">智能化信创软件&nbsp;IDE</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1602?utm_source=infoqweb&amp;utm_medium=teacherart\">面向人工智能时代的架构</a>\"、<a href=\"https://qcon.infoq.cn/2023/shanghai/track/1604?utm_source=infoqweb&amp;utm_medium=teacherart\">性能工程：提升效率和创新的新方法</a>\"等专题进行交流。</p><p></p><p>QCon 上海 2023，相约 12 月！ 现在购票，享 8 折优惠，立减￥1360！咨询购票请联系：18514549229（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/01/0113b3dfb187d5f9988b7eb16d2e0594.png\" /></p><p></p>",
    "publish_time": "2023-11-24 11:30:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "腾讯披露最新大模型训练方法：效率提升至2.6倍、可节省50%算力成本",
    "url": "https://www.infoq.cn/article/lyZBJBqiu4CfELMpAFYT",
    "summary": "<p>如今，大模型的参数规模呈现指数级增长。在算力紧缺的背景下，如何提升大模型训练和推理的效率，并降低成本，成为业界关注的焦点。</p><p>&nbsp;</p><p>11月23日，腾讯披露，腾讯混元大模型背后的自研机器学习框架Angel再次升级，大模型训练效率提升至主流开源框架的2.6倍，千亿级大模型训练可节省50%算力成本。升级后的Angel支持单任务万卡级别超大规模训练，进一步提升腾讯云HCC大模型专属算力集群的性能和效率。</p><p></p><h3>训练推理效率如何再提升</h3><p></p><p>&nbsp;</p><p>面向大模型训练，腾讯自研了机器学习训练框架AngelPTM，针对预训练、模型精调和强化学习等全流程进行加速和优化：</p><p>&nbsp;</p><p>在存储方面，AngelPTM 计算支持多维度的并行，包括常见的数据并行、模型并行、流水并行和序列并行。此外，腾讯在ZeRO-Cache的基础上加入了统一视角技术，通过统一的地址寻址方式把显存和主存打通，训练时大量参数先放到系统对层里，需要时再放到显存里，以此将有限的显存容量扩展，单机存储容量提升90%。通讯方面，腾讯通过软硬件结合的方式解决。首先，腾讯用自研交换机构建 3.2T RDMA网络来拓宽带宽，然后结合框架软件层面做GPU拓扑感知，此外还有负载均衡的流水并行。稳定性方面，腾讯对基础设施的网络、硬件、存储、云原生调度都加了相应的监控指标。发现故障后，调度平台会把故障报告给AngelPTM框架。大多数情况下，调度平台会进行自动续训，训练过程中也会写快照。此外，除了系统容错还有收敛性监控，包括参数极值、Loss曲线、模型参数本身的极值、梯度的极值、中间变量、激活值等。</p><p>&nbsp;</p><p>另外，鉴于国产芯片可能会有一些异构的生态，腾讯提供了算子编译层，整个模型研发基本可无缝低成本迁移。</p><p>&nbsp;</p><p>为解决推理成本不断上升问题，腾讯自研的大模型推理框架AngelHCF通过扩展并行能力，采用了Embedding共享、Attention算子优化、Paged Attention优化等方式，同时提供了量化、稀疏化、蒸馏和剪枝等关键能力，以提高吞吐能力，从而实现更快的推理性能和更低的成本。</p><p>&nbsp;</p><p>根据官方数据，相较于业界主流框架，AngelHCF的推理速度提高了1.3倍。在腾讯混元大模型文生图的应用中，推理耗时从原本的10秒缩短至3至4秒。</p><p>&nbsp;</p><p>目前，相关能力已通过腾讯云对外开放。基于升级后的Angel机器学习框架，腾讯云TI平台可提供更优的训练和推理加速能力，并支持客户用自己的数据一站式训练精调，基于腾讯混元大模型打造专属智能应用。</p><p></p><h3>一站式应用构建</h3><p></p><p>&nbsp;</p><p>现在的深度机器学习平台已经与之前有了本质的区别：通常大厂商或基础厂商提供基础模型，用户基于这个基础模型做精调，做专属模型的训练，之后再围绕精调后的专属模型做应用构建，搭建一个能释放这个模型推理理解能力的应用框架，嵌入到自己的APP或业务流程中。</p><p>&nbsp;</p><p>为此，Angel还提供了从模型研发到应用落地的一站式平台，支持用户通过API接口或精调等方式快速调用腾讯混元大模型能力，加速大模型应用构建。</p><p>&nbsp;</p><p>现在的整个生产链路新增加了五个能力：提供基座模型、数据能力、精调、评估和一键部署。模型接入层面，腾讯混元大模型提供千亿、百亿、十亿多个尺寸的模型，来适配各类应用场景的需求；数据处理上，提供清洗、分类、质质检和筛选等数据能力；精调方面，提供LORA调参、全参精简调参、全参全量调参等多种调参模式。</p><p>&nbsp;</p><p>据悉，腾讯内部已有超过300项业务和应用场景接入腾讯混元大模型内测，相比上个月数量翻了一倍，覆盖文本总结、摘要、创作、翻译、代码等多个领域。</p><p>&nbsp;</p>",
    "publish_time": "2023-11-24 11:31:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Next.js能处理5000个页面吗？",
    "url": "https://www.infoq.cn/article/C0yaGBxYYo41YdK0eStC",
    "summary": "<p>我想分享一个将 Next.js 13 的 SSR 和 SSG 功能推到极限的实验。我构建了一个包含 5000 个 SSR 页面的网站，以观察 Next.js 在本地和生产环境中的性能。我在 AWS Amplify 服务团队工作，我想使用我们的 托管服务 来构建和部署这些页面，确保它能处理大量的页面和图片。使用静态参数和动态参数会有多大的差异？如果你需要快速的构建时间，哪个是更优的选择？如果你不关心构建时间，但想要一个运行极快的网站，哪个是更优的选择？让我们来找出答案。</p><p></p><p>在本文中，你将看到我如何生成 5000 个测试图片和记录，并上传它们，用 AWS Amplify 传送到 Amazon S3 和 Dynamo DB，并构建了一个 Next.js 应用程序来获取数据和图片，在屏幕上呈现它们，部署到 Amplify Hosting 并记录性能影响和差异。</p><p></p><p></p><h2>寻找和上传 5000 条数据</h2><p></p><p></p><p>简介：如果你不愿意按照本节中的步骤操作，你可以点击以下链接访问我的 5000 条记录 和 5000 张图片。</p><p></p><p>如何找到 5000 张图片？</p><p></p><p>我面临的第一个挑战是为每个页面找到 5000 张图片。我没有依赖 Kaggle 等平台的数据集，而是采用了更直接的方法。我从 Unsplash 下载了十张图片，并将它们保存在名为5k_src的本地文件夹中。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/09/09a4a4c3eb0d61b5feb40728cf17c887.png\" /></p><p></p><p>如果你使用过 Unsplash，你可能会记得这些原始图像通常是高分辨率大尺寸的，往往超过 1MB。我优化了每个图像，减小其文件大小。确保你有自己的 10 张经过优化的图像集存放在你选择的文件夹中。</p><p></p><p>一旦我有了 5000 张图像，我就编写了一个脚本来复制这些图像，直到总共有 5000 张。对我来说，每个图像是否独特并不重要，所以我决定使用 10 张不同的图像并复制它们，直到我有 5000 张图像。为了利用这个脚本，你需要为这 10 张图像创建一个 src 文件夹和一个 5k 图像的目标文件夹。创建一个名为demo的文件夹，并在其中添加两个文件夹：5k_dest，5k_src。</p><p></p><p>切换到demo文件夹，并在终端中运行以下 CLI 脚本来复制这些图像：</p><p></p><p><code lang=\"bash\">dest=\"5K_dest\"\nsrc=\"5K_src\"\nfor i in {1..500}; do cp \"$src/b.jpg\" \"$dest/b$i.jpg\"; done\n</code></p><p></p><p>脚本将一个名为5K_dest的目标文件夹设置为存储所有复制的图像的位置。它还指定了一个名为5K_src的源文件夹，其中包含原始图像。然后，它运行一个循环进行 500 次迭代。</p><p></p><p>每次迭代都会从源文件夹中复制名为 b.jpg 的图像，并使用唯一的名称，将副本保存在目标文件夹中。新名称包括一个数字（即 i 的值），每次迭代都会增加，从而得到名称为\"b1.jpg\"，\"b2.jpg\"直到\"b500.jpg\"的图像。</p><p></p><p>我使用这种方法确保每个图像都有唯一的文件名。通过对每个图像运行此脚本，我得到了总共 5000 张图像。要获取 5000 个重复的图像，你可以在5k_src文件夹中对每个图像运行该脚本。</p><p></p><p>如何找到 5k 条记录？</p><p></p><p>接下来，我需要生成一个随机记录列表。我使用了一个名为 Mocaroo 的工具，它允许一次最多生成 1000 行记录（对于免费账户）。</p><p></p><p>在访问 Mocaroo 之后，我清除了所有默认数据，并根据下面的图片添加了新字段。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/df/dfa2bffae0dc4e4b3772810fa39877c5.png\" /></p><p></p><p>添加新字段后，我将“行”字段设置为 1000，这是 Mockaroo 可以生成的最大值。设置好后，我点击了 5 次“生成数据”，生成了 5 个包含 5000 条记录的 csv 文件。</p><p></p><p>现在我需要将这 5 个 csv 文件合并，所以我转向了 Google Sheets。如果你也想这样干，可以按照以下步骤进行：</p><p></p><p>打开 Google Sheets。创建一个新文件。点击左上角的“文件”。点击“导入”，选择“上传”并选择第一个 csv 文件。第一个 csv 文件上传完成后，重复相同的步骤，但在合并的弹出选项出现时，将其导入到同一个工作表，并追加到工作表的末尾。</p><p></p><p>导入完成后，我使用了“自动填充”功能，为每条记录添加了图像名称。由于图像是连续的，所以这个操作很简单。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/bb/bbd72338f4c952f635055b0612c43a72.png\" /></p><p></p><p>如何上传 5000 张图片到云端？</p><p></p><p>接下来，我需要将 5000 张图片上传到云端，具体来说是亚马逊简单存储服务（Amazon S3），首先我需要创建一个 AWS Amplify 项目。按照以下步骤进行操作：</p><p></p><p>导航到你的 AWS 控制台，搜索 AWS Amplify。选择 AWS Amplify 打开 Amplify 控制台。在右上角，选择 新建应用 并从下拉菜单中选择 创建一个应用。</p><p></p><p>给应用程序取一个名称（我称之为 5kpages），然后点击 确认部署。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/dd/ddbc89315c78a343625e0779fda37e5a.png\" /></p><p></p><p>部署完成后，点击 启动工作室 按钮打开 Amplify 工作室。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/fc/fcce806e35515e8549ad402005c673aa.png\" /></p><p></p><p>接下来，我需要创建一个存储实例来存储图片。然而，在此之前，我需要设置身份验证。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/1e/1effca3081185aaa3964d8f0f2ae2726.png\" /></p><p></p><p>要继续进行身份验证设置，请点击 设置 按钮。由于我们不会在此应用程序中使用身份验证，因此你可以保留所有默认选择；身份验证只是用于使用存储。请继续点击 部署 按钮，确认警告，并选择 确认部署。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/21/21886fb0110a4ec83f72266a272cd794.png\" /></p><p></p><p>身份验证部署过程可能需要一两分钟的时间。完成后，你将看到一条确认消息，说明身份验证已成功部署。</p><p></p><p>设置完身份验证后，我设置了存储并创建了一个新的 S3 存储桶。要执行此操作，请在屏幕左侧的设置菜单中选择 存储 选项。</p><p></p><p>在授权设置中，确保已登录的用户具有上传、查看和删除文件的权限，而访客用户只能查看和删除文件。最后，点击 创建存储桶 按钮。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/0f/0fad540653ab8052f07fd48b1a733b69.png\" /></p><p></p><p>要查看存储桶，你可以返回 Amplify 控制台。搜索 s3，然后选择它。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e2/e25bed4f88d91acae32403221ce7a3a5.png\" /></p><p></p><p>我将我的存储桶命名为5kpages。选择你的存储桶以打开它。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/15/15d686b9d2087b98d8618b4b40d46381.png\" /></p><p></p><p>上传图片到存储桶，请点击 上传 按钮。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/64/64e6e261e4799804a58f89eecccd99af.png\" /></p><p></p><p>为了将 5k 张图片上传到 S3 存储桶，我将5k_dest文件夹拖放到页面上，并点击如下所示的上传按钮。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e1/e18498807dbe741785f21a792fa378aa.png\" /></p><p></p><p>上传所有图片需要一些时间。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f5/f556888d8c641ac41786b283c0fb3c5e.png\" /></p><p></p><p>上传完成后，请返回 Amplify 工作室，并在侧边菜单中选择 文件浏览器 选项。在 public 文件夹中，你会看到包含 5,000 张图片的5k_dest文件夹。你可以浏览页面来查看这些图片。</p><p></p><p>如何将 5k 条记录上传到云端？</p><p></p><p>在上传图片之后，下一步是将 5,000 条记录上传到 Amazon DynamoDB。请按照以下步骤进行操作：</p><p></p><p>返回 Amplify 控制台。从侧边菜单中选择 数据。点击“+ 添加模型”按钮。填写如下图所示的字段。填写字段后，点击 保存并部署 按钮。</p><p></p><p>创建模型后，转到 Amplify 控制台并搜索 DynamoDB。在侧边菜单中点击 表格，你将找到一个项目数为 0 的产品表。复制表格的名称，然后转到终端以创建一个 Node 应用程序。</p><p></p><p>在创建 Node 应用程序之前，我需要从 Google Sheets 下载5kproducts.csv&nbsp;记录文件。</p><p></p><p>要下载该文件，请按照以下步骤进行操作：</p><p></p><p>打开包含 5000 条记录的 Google Sheets。单击左上角的“文件”。选择“下载”，然后选择“下载为 CSV”。</p><p></p><p>下载完文件后，创建一个新文件夹并将其命名为 5kdyno 或其他任何名称。将下载的 CSV 文件放入此文件夹中。接下来，在文件夹中创建一个 package.json 文件，并将以下内容添加到其中：</p><p></p><p><code lang=\"json\">{\n  \"name\": \"5kdyno\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\\\"Error: no test specified\\\\\" &amp;&amp; exit 1\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@aws-sdk/client-dynamodb\": \"^3.423.0\",\n    \"@aws-sdk/lib-dynamodb\": \"^3.423.0\",\n    \"aws-sdk\": \"^2.1468.0\",\n    \"csv-parse\": \"^5.5.0\",\n    \"csv-reader\": \"^1.0.12\",\n    \"uuid\": \"^9.0.1\"\n  },\n  \"type\": \"module\"\n}\n\n</code></p><p></p><p>请在终端中运行以下命令来安装这些依赖项：</p><p></p><p><code lang=\"nginx\">npm install\n\n</code></p><p></p><p>请在文件夹中创建一个 index.js 文件，并将以下内容添加到其中：</p><p></p><p><code lang=\"javascript\">import { DynamoDBClient } from \"@aws-sdk/client-dynamodb\";\nimport { PutCommand, DynamoDBDocumentClient } from \"@aws-sdk/lib-dynamodb\";\nimport { v4 } from \"uuid\";\n\nimport { parse } from \"csv-parse\";\nimport { createReadStream } from \"fs\";\n\nconst client = new DynamoDBClient({});\nconst docClient = DynamoDBDocumentClient.from(client);\n\nexport const main = async () =&gt; {\n  const parser = createReadStream(\"5kproducts.csv\").pipe(parse());\n  for await (const row of parser) {\n    console.log(row);\n    const command = new PutCommand({\n      TableName: \"Product-f6gl4tj2gzffyfynoogu-staging\",\n      Item: {\n        id: v4(),\n        createdAt: new Date().toJSON(),\n        desription: row[1],\n        img: row[6],\n        name: row[0],\n        price: row[4],\n        quantity: row[2],\n        size: row[3],\n        updatedAt: new Date().toJSON(),\n        __typename: \"Product\",\n      },\n    });\n    const response = await docClient.send(command);\n    console.log(response);\n  }\n};\nmain();\n\n</code></p><p></p><p></p><blockquote>第一件你可能注意到的事情是，我没有向Dynamo DB客户端传递任何凭据。你可以查看这个AWS文档来指导如何为你的计算机设置凭据。</blockquote><p></p><p></p><p>接下来，我创建了一个 DynamoDBClient 的实例，并使用这个实例创建了一个 DynamoDBDocumentClient。这个客户端提供了一个更高级的接口来操作 DynamoDB。然后，我声明了一个异步函数叫做 main，并设置了一个流来逐行读取文件 5kproducts.csv，并将这个流传输到一个 CSV 解析器中。之后，我循环遍历每一行解析出来的 CSV 文件，并将每一行日志记录到控制台。</p><p></p><p>PutCommand 使用 CSV 中的行创建了一个写入操作到 DynamoDB 表中。最后，我使用客户端将写入操作发送到 DynamoDB。</p><p></p><p></p><blockquote>不要忘记将TableName替换为你创建的表名称。</blockquote><p></p><p></p><p>现在，如果你打开终端并运行命令 node index.js，你会看到它正在写入指定的表中。</p><p></p><p>这个过程可能需要几分钟才能完成，但一旦完成，返回到 DynamoDB 并刷新页面。点击“浏览表项目”，你应该能够看到数据库中的项目。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/8d/8dc5cda1737be8f532f6d385b5fef4e4.png\" /></p><p></p><p>现在，如果你返回到 Amplify，并从侧边菜单中点击“内容”部分，你将能够看到传入的内容。</p><p></p><p></p><h2>在浏览器上渲染数据</h2><p></p><p></p><p>在将图像和记录上传到云端之后，我需要做的下一件事就是在网站上显示产品列表。为了实现这一目标，我创建了一个 Next.js 应用程序。并非从头开始，我创建了一个起始项目，其中包含了 Tailwind 配置和其他设置。你可以通过在终端中运行以下 Degit 命令来克隆它:</p><p></p><p><code lang=\"nginx\">npx degit christiannwamba/5kpages#starter\n\n</code></p><p></p><p>起始项目包含三个组件和一个ui/button组件。其中一个组件是ProductList，它接收items，循环遍历它们并渲染。在 ProductList 组件内部，使用 S3Image 组件从 S3 获取图像。此外，该项目还包括一个管理分页的 Pagination 组件。</p><p></p><p>之后，运行以下命令安装依赖项：</p><p></p><p><code lang=\"nginx\">npm install\n\n</code></p><p></p><p>接下来我做的事情是配置 Amplify，以便我们可以访问上传的数据和图片。为此，请返回 Amplify Studio，并复制显示的 pull 命令。</p><p></p><p>在你的项目目录中，将复制的命令粘贴到终端中，然后执行复制的命令。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/03/03207fb0b83a97623b013f11c83b40c1.png\" /></p><p></p><p>运行该命令时，你将被重定向到 Web 浏览器以授权 CLI 访问。在那里，点击“是”以与 Amplify Studio 进行身份验证。</p><p></p><p>之后，请返回 CLI。在这里，你将被要求回答一系列问题，以收集有关项目配置的基本详细信息。接受下面图像中突出显示的默认值：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/23/23ac9eb966b30a268c952ad23db7010d.png\" /></p><p></p><p>接下来，我配置了 Next.js 以识别图像的来源域。为此，请将以下内容添加到您的 next.config.js 文件中：</p><p></p><p><code lang=\"java\">/** @type {import('next').NextConfig} */\n\nconst nextConfig = {\n  images: {\n    domains: [\n      \"5kproducts-storage-dd7c40fc142146-staging.s3.us-east-1.amazonaws.com\",\n    ],\n  },\n};\n\nmodule.exports = nextConfig;\n\n</code></p><p></p><p></p><blockquote>请确保将 domains 替换为从你的 S3 存储桶中复制的内容。</blockquote><p></p><p></p><p>一旦我设置了一个 Amplify 项目，我就需要生成用于与数据交互的 GraphQL 操作的代码。</p><p></p><p>要生成这些操作，请在项目的根目录运行以下命令：</p><p></p><p><code lang=\"cs\">amplify add codegen\n\n</code></p><p></p><p>请接受下图中所示的默认值：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/90/90ad1d88da33da35285f788aaa29cee2.png\" /></p><p></p><p>此命令将生成 GraphQL 操作并将其保存在 src/graphql 目录下。生成的操作可直接导入到你的组件中，与你的 API 进行无缝交互。</p><p></p><p>要获取并渲染产品列表，请将以下内容添加到你的 app/page.js 文件中：</p><p></p><p><code lang=\"javascript\">import { API } from \"aws-amplify\";\n\nimport Pagination from \"@/components/Pagination\";\nimport ProductList from \"@/components/ProductList\";\nimport * as queries from \"../src/graphql/queries\";\n\nasync function fetchData(nextToken, prevToken, action) {\n  const variables = {\n    limit: 10,\n  };\n  if (action == \"next\" &amp;&amp; nextToken) variables.nextToken = nextToken;\n  if (action == \"prev\" &amp;&amp; prevToken) variables.nextToken = prevToken;\n\n  const allProducts = await API.graphql({\n    query: queries.listProducts,\n    variables,\n  });\n\n  return allProducts.data.listProducts;\n}\n\nasync function Home({ searchParams }) {\n  const nextToken = searchParams.nextToken;\n  const prevToken = nextToken;\n  const action = searchParams.action;\n\n  const products = await fetchData(nextToken, prevToken, action);\n\n  return (\n    </code></p><div><code lang=\"javascript\">\n      <h1>Products</h1>\n      \n      \n    </code></div><code lang=\"javascript\">\n  );\n}\n\nexport default Home;\n\n</code><p></p><p></p><p>在这个文件中，我导入了几个东西。首先，我从 AWS Amplify 库中导入了 API。这允许我与 GraphQL API 进行交互。我还导入了 Pagination 和 ProductList 组件，它们是用于显示产品列表和提供分页功能的 React 组件。此外，我还从&nbsp; …/src/graphql/&nbsp; 的 queries 文件中导入了 queries。</p><p></p><p>接下来，我定义了一个名为 fetchData 的异步函数，该函数根据提供的参数获取产品数据。在函数中，我定义了一个名为 variables 的对象，其中 limit 设置为 10，表示我想一次获取 10 个产品。</p><p></p><p>然后，根据提供的动作和令牌修改分页的变量。如果动作是 next 并且提供了 nextToken，则将 variables.nextToken 设置为 nextToken 的值，这将获取下一组产品。如果动作是 prev 并且提供了 prevToken，则使用 prevToken 来获取上一组产品。</p><p></p><p>然后，该函数使用 queries.listProducts 查询和变量进行 GraphQL 调用，以获取产品数据。最后，它返回获取到的产品列表。</p><p></p><p>接下来，我定义了 Home 组件，它作为在主页上显示产品列表的主要 React 组件。该组件是异步的，并从searchParams中获取 nextToken、prevToken 和 action。</p><p></p><p>为了获取所需的产品列表，该组件使用这些参数调用了 fetchData 函数。</p><p></p><p>返回的 JSX 包括页面标题、传递给 ProductList 组件的获取到的产品列表以及用于处理分页控件的 Pagination 组件。</p><p></p><p>如果你现在打开浏览器，你将看到展示的产品。如果你点击 下一页 按钮，你可以查看更多产品，点击 上一页 按钮将显示上一组产品。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/c5/c5be77fdf87153949e0d8a35390548a6.png\" /></p><p></p><p>使用动态参数渲染动态页面</p><p></p><p>我想要探索动态参数和静态生成页面，并比较它们之间的性能差异。</p><p></p><p>对于动态参数，我们需要接收 id 作为参数。有了这个参数，我们就可以开始构建页面来渲染单个产品项。</p><p></p><p>在你的 app 文件夹中创建一个名为 [id] 的新文件夹。在 [id] 文件夹内，创建一个 page.js 文件并添加以下代码：</p><p></p><p><code lang=\"javascript\">import { API } from \"aws-amplify\";\nimport * as queries from \"@/src/graphql/queries\";\nimport S3Image from \"@/components/S3Image\";\nimport Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\n\nasync function Product({ params }) {\n  console.log(params);\n  const variables = {\n    id: params.id,\n  };\n  const res = await API.graphql({\n    query: queries.getProduct,\n    variables,\n  });\n\n  const product = res.data.getProduct;\n  return (\n    </code></p><div><code lang=\"javascript\">\n      <div>\n        <div>\n          \n        </div>\n        <div>\n          <p>\n            ${product.price}\n          </p>\n          <p>{product.quantity} left</p>\n          <h3>{product.name}</h3>\n          <div>{product.desription}</div>\n\n          \n            <button>Go back</button>\n          \n        </div>\n      </div>\n    </code></div><code lang=\"javascript\">\n  );\n}\n\nexport default Product;\nexport const revalidate = 60 * 50;\n\n</code><p></p><p></p><p>该文件以几个导入开始。API 导入自 AWS Amplify 库，用于与 GraphQL API 进行交互。queries 导入用于获取产品的详细信息。S3Image 导入用于显示存储在 Amazon S3 中的图像。next/link 中的 Link 导入用于客户端路由之间的转换。最后，Button 组件被导入用于 UI 目的。</p><p></p><p>接下来，我定义了一个名为 Product 的异步组件。它首先定义了一个变量对象，并使用 params 中的 id 设置了 variables。这个 id 用于查询特定的产品。</p><p></p><p>然后，该函数使用 queries.getProduct 查询和 variables 进行了 GraphQL 调用。响应包含产品数据，该数据被提取并存储在 product 常量中。</p><p></p><p>最后，返回的 JSX 包括以下内容：使用 S3Image 组件的产品图像、产品的价格和库存数量、产品的名称、产品的描述，以及一个按钮，当点击时会将用户导航回主页。</p><p></p><p>我还定义了一个名为revalidate的常量，它指定了 Next.js 在页面上重新检查新数据的频率（50 分钟）。重新验证 Next.js 非常重要，以确保你的响应不会被缓存太长时间。如果你的内容需要频繁更改，缓存可能会引起保持内容新鲜性方面的挑战。</p><p></p><p>在这个演示中，与缓存相关的主要问题与使用 Amazon S3 存储图像有关。S3 不直接提供公共 URL。即使它提供了公共 URL，它也是使用一个过期的令牌进行签名的。一旦令牌过期，你将无法再使用相同的 URL 访问图像，而必须请求一个新的令牌。</p><p></p><p>这意味着如果 Next.js 缓存了你的响应并保存了 URL，它将不知道图像现在已经无效。当你尝试渲染图像时，它将不显示任何内容。除非你要求 Next.js 刷新其缓存并向存储请求新的 URL。</p><p></p><p>为了解决这个问题，我将 S3 图像的过期时间设置为一小时，并配置了 Next.js 在 50 分钟后重新验证图像。这样，Next.js 在 S3 图像过期之前进行了一次 fetch 请求，使缓存无效并显示更新后的页面。</p><p></p><p>使用静态参数渲染动态页面</p><p></p><p>到目前为止，我们已经学习了如何使用动态参数实现动态渲染。现在，让我们来探讨如何使用静态参数实现动态渲染。</p><p></p><p>为了做到这一点，请转到你的代码编辑器并提交你对主分支所做的更改。要创建一个新的分支，请在终端中运行以下命令：</p><p></p><p><code lang=\"javascript\">git checkout -b static\n\n</code></p><p></p><p>打开你的 app/[id]/page.js 文件，并将以下代码添加到文件底部：</p><p></p><p><code lang=\"javascript\">export async function generateStaticParams() {\n  const variables = {\n    limit: 5000,\n  };\n\n  const allProducts = await API.graphql({\n    query: queries.listProducts,\n    variables,\n  });\n  const items = allProducts.data.listProducts.items;\n\n  return items.map((item) =&gt; ({\n    id: item.id,\n  }));\n}\n\n</code></p><p></p><p>这个函数使用 queries.listProducts GraphQL 查询获取所有产品（共 5000 个）。然后它在产品列表上进行映射，并提取出产品的 ID。</p><p></p><p>返回的 ID 数组将在构建时由 Next.js 用于静态生成，为每个产品 ID 创建一个预渲染页面。</p><p></p><p>如果你访问浏览器，刷新页面，并随机点击项目，你会注意到加载速度显著提高，这是静态生成实现的结果。</p><p></p><p></p><h2>本地构建</h2><p></p><p></p><p>现在让我们回顾一下我们到目前为止所做的工作，并比较动态参数和静态参数的构建时间。</p><p></p><p>要切换回主分支，请在终端中运行以下命令：</p><p></p><p><code lang=\"nginx\">git checkout main\n</code></p><p></p><p>请在终端中运行以下命令，以查看动态参数的构建时间：</p><p></p><p><code lang=\"nginx\">npm run build\n\n</code></p><p></p><p>如下图所示，构建过程只生成了 5 个静态页面，并在 12 秒内完成。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/3a/3a8f96941a434d1b1e34e6875465bd5f.png\" /></p><p></p><p>让我们对静态参数做同样的操作。在终端中运行以下命令：</p><p></p><p><code lang=\"properties\">git checkout static\nnpm run build\n\n</code></p><p></p><p>注意，它正在迭代并尝试构建每个页面。在下面的图片中，你可以看到构建时间为 3 分钟，相当于 180 秒。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/22/22fec132ae350793c65192e89596415f.png\" /></p><p></p><p></p><h2>在生产环境中构建</h2><p></p><p></p><p>下一步是部署到生产环境并进行测试。返回你的代码编辑器并发布静态分支。完成后，也发布主分支。</p><p></p><p>前往 AWS 控制台，搜索 AWS Amplify 并从服务列表中选择它。接下来，选择 5kpages 应用程序。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/7f/7fe186be50372fd23795840b677f4e3e.png\" /></p><p></p><p>选择托管环境。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/2c/2c48f183534712dc454f6a72676a4a8c.png\" /></p><p></p><p>在下一页上选择 GitHub 或你的 Git 提供商，并点击连接分支按钮。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a0/a0830ded5a45a862ca0c597948a8c5e4.png\" /></p><p></p><p>选择你打算托管的存储库，选择main分支作为动态参数，并点击下一步按钮继续。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e2/e22823894ccbb114ab802b0f851dda09.png\" /></p><p></p><p>在构建设置页面上，选择一个环境或创建一个新环境。如果你有现有的服务角色，请选择一个现有的服务角色，或者点击创建新角色按钮创建一个允许 Amplify Hosting 访问资源的新角色。完成选择后，点击下一步按钮继续。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/57/5723ff1b2997e9892df2286d8ce255c3.png\" /></p><p></p><p>查看你的 存储库详情 和 应用程序设置，然后点击 保存并部署。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/82/82373c74daa3915b8aa3d3d6b2682bf6.png\" /></p><p></p><p></p><h2>开发和用户体验洞见</h2><p></p><p></p><p>在构建和部署应用的静态和动态版本时，我一直在追踪一些数字。我想看看在考虑以下几点时是否有任何有用的洞见：</p><p></p><p>构建时间有多快？</p><p></p><p>对于访客来说，感知加载速度如何？</p><p></p><p>开发体验</p><p></p><p>构建时间有多快？</p><p></p><p>测量构建时间很容易 - iTerm（本地）和 AWS Amplify（生产环境）在构建过程中都有时间戳，我只需要相减即可。下表显示，在构建时间上，动态参数比静态生成的页面要快。（部署时间仅考虑构建 Next.js 应用程序的时间，不包括配置和后端构建时间。）</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/c8/c83f8a9d5716c2803c84df45336e287a.png\" /></p><p></p><p>构建时间与部署时间的差异很明显 - 如果我希望每个页面都能静态生成，Next.js 必须构建 5000 个页面中的每一个。</p><p></p><p>在动态模式下开发，在静态模式下发布</p><p></p><p>我偶然发现的一个没有人谈论的策略是，在非生产环境中测试时不调用&nbsp;generateStaticParams&nbsp;。在暂存服务器上等待构建 5k 个页面是一种痛苦的开发经验。</p><p></p><p>我的建议是只在生产环境中启用 generateStaticParams ，因为你几乎不会频繁构建生产环境。</p><p></p><p>用户体验</p><p></p><p>访问者的感知加载速度如何？</p><p></p><p>为了了解静态生成网站和动态网站之间的差异，我使用 PageSpeed Insights 对网站进行了分析。以下是首页、动态参数页面和静态生成页面的服务器和缓存速度指数的日志。</p><p></p><p>为了提供背景，我分析了来自 Next.js 展示页面 的 6 个网站，平均速度指数为 2.6 秒。（在部署成功后立即进行了服务器速度指标测试。通过再次分析进行了缓存速度指标测试）</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/7d/7d822e12e1c6a939d7d31c8b61adb95e.png\" /></p><p></p><p>我的第一个观察结果是主页比动态页面加载速度相对较慢，因为主页需要渲染更多的图片。</p><p></p><p>如预期的那样，静态生成的页面比动态参数加载速度快 1.2 倍。在实际情况中，一个页面将会有更多的文本、字体和图片，与我的演示相比，所以请将 1.2 倍视为近似值，因为在这种情况下差异肯定会更加显著。</p><p></p><p>其他用户体验指标</p><p></p><p>速度指标给你一个全面的视角，但在测量网站性能时，仅考虑速度是不够的。什么是速度 是一篇很好的文章，可以帮助你了解为什么以及还应该考虑什么。考虑到这一点，我决定在这里提供 PageSpeed Insights 中所有图片的详细信息，以便你可以深入了解。</p><p></p><p>来自服务器的首页：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/5a/5a28b0d8a76694e2e71d10d9a59d83e7.png\" /></p><p></p><p>来自服务器的动态参数页面：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/10/1017d81f8193615a007a0a70728010d6.png\" /></p><p></p><p>来自服务器的静态生成页面：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/32/32bfe50df8d01ec218b1f8e1804923b7.png\" /></p><p></p><p>来自缓存的首页：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/85/85e71ebc00a204810b43099f94770f71.png\" /></p><p></p><p>来自缓存的动态参数页面：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/74/7498b28a63190455b59353856da197a0.png\" /></p><p></p><p>来自缓存的静态参数页面：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/0f/0f4fd66986b17698f770aea6f847f862.png\" /></p><p></p><p></p><h2>清理</h2><p></p><p></p><p>为了确保你的 AWS 账户中没有未使用的资源，请运行以下命令来删除在此项目中创建的所有资源，如果你不打算保留它们。</p><p></p><p><code lang=\"javascript\">amplify delete\n</code></p><p></p><p></p><h2>我的观点</h2><p></p><p></p><p>对我来说，这是一个富有洞察力的实验，它得出了一些有趣的结论，这些结论将在接下来的几个月中指导我在使用 Next.js 时的工作。</p><p></p><p>对于我的客户体验：我将始终默认在生产环境中使用静态生成的页面，除非动态页面的内容经常更改。此外，Amplify Hosting 在构建所有页面时没有错误，并且没有额外的延迟，这符合我的期望。</p><p></p><p>对于我的开发体验：在处理动态页面时，我将忽略静态页面生成。它可以作为一个事后的考虑，因为 Next.js 已经设计了 generateStaticParams 以便可插拔。如果你想了解更多关于 Amplify hosting 的信息，可以参考 这里 的入门指南：</p><p></p><p><a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/getting-started.html\">https://docs.aws.amazon.com/amplify/latest/userguide/getting-started.html</a>\"</p><p></p><p>原文链接：</p><p></p><p><a href=\"https://dev.to/codebeast/can-nextjs-handle-5000-pages-1ejn\">https://dev.to/codebeast/can-nextjs-handle-5000-pages-1ejn</a>\"</p><p></p><h5>相关阅读：</h5><p></p><p><a href=\"https://www.infoq.cn/article/sITi66wc3mvcNs3PeRkb\">Next.js 13 新的实验性特性，实现 App“动态无限制”</a>\"</p><p><a href=\"https://www.infoq.cn/article/9G0lBWi2W58114ggfyge\">我们如何使用 Next.js 将 React 加载时间缩短 70%</a>\"</p><p><a href=\"https://www.infoq.cn/article/VbDui4DRa2Lhq3h0ad2Z\">为什么说 Next.js 13 是一个颠覆性版本</a>\"</p><p><a href=\"https://xie.infoq.cn/article/93e23e080e828a8989a57a622\">Next.js&nbsp;实践：从 SSR 到 CSR 的优雅降级</a>\"</p>",
    "publish_time": "2023-11-24 14:18:13",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "这家手握2.2万块H100芯片的AI独角兽发布了新款大模型：1750亿参数，性能仅次于GPT-4",
    "url": "https://www.infoq.cn/article/5KVxUWu9FzZrbXWl3M61",
    "summary": "<p></p><h2>Inflection AI发布新模型：5000块英伟达H100训练、1750 亿参数</h2><p></p><p>&nbsp;</p><p>开发出对话聊天机器人Pi的初创公司Inflection AI刚刚发布其最新AI模型，据称这套模型的性能已然超越谷歌和Meta两家的主流替代方案，并且正快速缩小与OpenAI旗舰成果的差距。</p><p>&nbsp;</p><p>Inflection AI是由谷歌旗下DeepMind&nbsp;AI研究小组联合创始人Mustafa Suleyman与LinkedIn联合创始人Reid Hoffman于今年3月共同建立的企业。短短两个月后，该公司就完成了2.25亿美元融资；到今年6月，Inflection AI又从微软、英伟达等多家知名投资方处额外筹得13亿美元。</p><p>&nbsp;</p><p>Inflection方面表示，这套新模型名为Inflection-2，已经在多种标准基准测试中超越谷歌今年5月发布的PaLM Large 2模型，同时在其他一些指标上击败了由Meta牵头打造的开源Llama 2模型。这家初创公司指出，总的来看Inflection在同等体量的模型中表现最佳，目前仅落后于OpenAI发布的体量明显更大的旗舰级模型GPT-4。</p><p>&nbsp;</p><p>公司CEO Mustafa Suleyman在接受采访时表示，“我们坚信自己正处于这条扩展曲线的起点，由此延伸出的新功能确实令人无比兴奋。”</p><p>&nbsp;</p><p>新发布的模型很快就会被整合进Inflection于今年5月发布的聊天机器人Pi当中。但Suleyman表示，在此之前还有大量“对齐”工作要做，即让新模型掌握Pi机器人的语气和回答风格，让它帮助Pi更好地发挥作用，并在吸纳最新信息的同时不致产生额外的幻觉。</p><p>&nbsp;</p><p>他解释称，“无论用户想要就种族、性别、政治、OpenAI乃至任何当下富有争议的问题进行敏感对话，Pi都能以非常巧妙、谨慎且尊重事实的方式进行交互，并实时获取信息。”Suleyman还补充道，Pi将在“不久之后”更新至Inflection-2模型，但没有给出具体日期。</p><p>&nbsp;</p><p>他也不愿透露Pi上的用户数量，只强调“Pi非常受欢迎，用户留存率很高。”两周之前，OpenAI表示其免费ChatGPT服务的每周用户数量已达1亿。但就在好消息发布后不久，上周五OpenAI董事会突然发难、解雇CEO Sam Altman，上演了举世震惊的“宫斗戏”。</p><p>&nbsp;</p><p>值此业界头部模型开发商身陷混乱的背景之下，我们很难不去关注Inflection此番发布的大语言模型。</p><p>&nbsp;</p><p>有外媒称，拥有1750 亿参数的模型被不少业内人士视为“当今世界上第二强的大模型”。就在本周三上午，OpenAI正式宣布Altman将重返公司并继续担任CEO。整个周末，各方盟友已经就Altman的回归展开谈判，OpenAI公司员工还签署一份请愿书，要求董事会成员集体辞职。</p><p>&nbsp;</p><p>而在Inflection这边，Suleyman则坚称这家初创公司已经于今年早些时候筹集到13亿美元资金。但当时他并没有给出Inflection新模型的发布日期，只是在更早的公开言论中暗示可能会在年底前推出。他在最新公告中解释称，这次的发布实际上晚了一星期，模型训练工作早在上周就已经完成。</p><p>&nbsp;</p><p></p><h2>Inflection AI：Inflection-2超越谷歌、Meta家主流模型，目前仅落后于GPT-4</h2><p></p><p>&nbsp;</p><p>在Inflection-2的训练当中，该公司使用了5000块英伟达H100图形处理单元（GPU），远少于训练前代Inflection-1时使用的数千块A100。目前H100的零售价超过2.5万美元，内置800亿晶体管，其语言模型运行速度高达英伟达上代旗舰A100 GPU的30倍。</p><p>&nbsp;</p><p>Inflection AI还使用H100进行推理，也就是在生产当中运行Inflection-2以处理用户提交的任务。Suleyman还提到，新模型的训练速度更快、成本更低，但同样需要处理大量运算任务（10^25 FLOP，即浮点运算）。Inflection已经与微软、英伟达和CoreWeave密切合作以管理其计算集群。</p><p>&nbsp;</p><p>Inflection公司已经在一套流行的高中与专业能力基准（即MMLU）上测试了其最新模型。模型在测试中回答了涉及57个主题的大量问题，具体涵盖世界知识、解决实际问题以及道德判断。</p><p>&nbsp;</p><p>根据Inflection AI的介绍，新模型能够访问升级后的知识库，从而更准确地回答用户查询。Inflection-2还拥有“显著改进的推理能力”，使得模型能够更好地执行代码生成等任务，并对所生成文本的语言风格做出细粒度调整。</p><p>&nbsp;</p><p>不只是优于前身，Inflection-2在与竞争对手的大语言模型比较时同样表现不俗。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/24/242da0efe379c058dcf383dcf1742451.png\" /></p><p></p><p>Inflection-2与其他模型间的性能比较。</p><p>&nbsp;</p><p>Suleyman表示，Inflection-2的性能优于业界体量领先的700亿参数版Llama 2、马斯克初创公司xAI的Grok-1、谷歌的PaLM 2 Large以及Anthropic的Claude 2，目前仅落后于GPT-4。</p><p>&nbsp;</p><p>据Inflection的介绍，新模型在七项科学问答基准测试中，五次击败了Llama 2和PaLM 2模型；在三项问答任务基准测试中也两次成功登顶，只在一项测试中逊于PaLM 2 Large。该公司还补充称，尽管模型训练并无明确的领域倾向，Inflection-2还是在四项数学与代码基准测试中获得优异成绩，只是与OpenAI公布的结果相比仍远落后于GPT-4。OpenAI的模型虽然性能更好，但体量也要比Inflection-2更大，意味着其训练需要消耗更多计算资源。</p><p>&nbsp;</p><p>Suleyman指出，虽然似乎只有AI研究人员或开发者会高度关注这样的基准测试结果，但哪怕最微小的改进也足以在“技术原型”和“生产级、高可靠且高质量”模型之间形成关键差异。总的来说，Suleyman表示Inflection-2已经在同等体量模型中遥遥领先，而且在很多方面已经“非常非常接近”最强王者GPT-4。</p><p>&nbsp;</p><p>据悉，Inflection AI手头共掌握着2.2万块H100 GPU，相当于训练Inflection-2的GPU数量的四倍有余。该公司在本次发布中强调，他们计划使用这些硬件构建更先进、体量更大的新模型。据报道，从现在开始，Inflection已经将训练重点转移至下一代模型，预计新模型将在六个月内达到Inflection-2的10倍体量，并在接下来的六个月中进一步扩大10倍。（最终体量有望增长至100倍。）</p><p></p><h2>OpenAI管理层大乱斗，给了竞对可乘之机</h2><p></p><p>&nbsp;</p><p>就在OpenAI管理层大乱斗达成临时和解方案的几小时前，Suleyman敦促公众以“同理心和宽容态度”对待那些被卷入风波的人们。他指出，“很多人的言行完全是出于善意”，还点名提到OpenAI联合创始人Ilya Sutskever。Sutskever是最初参与解雇Altman的董事会成员之一，但随后在周日晚间表示对这一决定感到后悔。（目前还不清楚Sutskever是否会继续留在OpenAI，但他在X上点赞了公司及Altman宣布回归的帖子。）</p><p>&nbsp;</p><p>Sutskever曾在2011年为Suleyman工作过，时任DeepMind外包商兼顾问。三年之后，Suleyman将这家AI初创公司卖给了谷歌。Suleyman在谈到Sutskever时表示，“我非常尊重他，这种尊重不仅源自技术水平，也源自他的原则性和真诚的态度。我认为在此次事件中，他和团队中的其他成员都抱有真诚的意图。”</p><p>&nbsp;</p><p>Inflection和Suleyman此前曾就AI安全问题表达过明确态度，并于今年7月自愿签署了拜登总统下达的“关于安全、可靠和可信的AI行政令”。他还发誓不会让聊天机器人Pi回答关于选举的任何问题、或者为政治竞选活动提供材料。Suleyman最新出版了一本名叫《袭来的浪潮》（The Coming Wave）的书，详细介绍了AI技术的风险。</p><p>&nbsp;</p><p>在谈到OpenAI非营利董事会及其近期一系列行为、特别是因此在科技领域遭受的诽谤时，Suleyman表示“很明显，他们犯下了一系列非常重大的错误。但我还是希望人们能够宽容一点，把这次事件视为OpenAI发展旅程中的一段小插曲。努力让公司变得更好、做正确的事、通过新的治理结构让全世界更美好，这些才是真正重要的工作。”</p><p>&nbsp;</p><p>但Suleyman本人也秉持典型的资本家思维，在被问及OpenAI的困境（ChatGPT在周一和周二两度陷入短时间瘫痪，大量客户忧心忡忡地关注着事态发展）是否给竞争对手带来了可乘之机时，他并没有予以否认。</p><p>&nbsp;</p><p>“从根本上讲，我办的是一家企业。面对激烈的市场竞争，我们别无选择。当下也是硅谷多年以来竞争烈度最高、创造力最强的时期。”</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.forbes.com/sites/alexkonrad/2023/11/22/inflection-ai-releases-2nd-model-on-gpt-4-heels/?sh=65dbfdfd6b05\">https://www.forbes.com/sites/alexkonrad/2023/11/22/inflection-ai-releases-2nd-model-on-gpt-4-heels/?sh=65dbfdfd6b05</a>\"</p><p><a href=\"https://siliconangle.com/2023/11/22/inflection-ai-debuts-new-flagship-inflection-2-llm-trained-5000-h100-chips/\">https://siliconangle.com/2023/11/22/inflection-ai-debuts-new-flagship-inflection-2-llm-trained-5000-h100-chips/</a>\"</p><p>&nbsp;</p>",
    "publish_time": "2023-11-24 14:58:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "对话凯文·凯利：当我们还困在无效会议中时，很多公司已经不在会议室放椅子了",
    "url": "https://www.infoq.cn/article/ruyQDk6iC0hU6FBwrpb4",
    "summary": "<p></p><blockquote>采访嘉宾｜Kevin Kelly采访人｜霍太稳</blockquote><p></p><p></p><p>在数字世界的最前沿，有一位先知、一位导师，他以独特的视角和深邃的思考，引领着我们探索这个日益变化的世界。他就是凯文·凯利（Kevin Kelly），人们亲昵地称呼他KK，他是《连线》杂志的创始主编，也是《宝贵的人生建议》的作者，一个在科技与人文交叉领域的先驱者。</p><p>&nbsp;</p><p>KK对科技和文化的深度理解，使他在那个年代就意识到科技的巨大潜力和未来的无限可能。他坚信，科技将改变人类生活的方方面面，从我们交流的方式到我们学习、工作甚至娱乐的方式。</p><p>&nbsp;</p><p>1984年，KK发起第一届黑客大会（Hackers Conference），聚集了来自世界各地的创新者和思考者，共同探讨计算机科技对社会的影响。从那时起，他开始用笔和纸，记录下他对科技、文化和社会的思考。他的文章广泛出现在《纽约时报》、《经济学人》、《时代》、《科学》等重量级媒体和杂志上。</p><p>&nbsp;</p><p>在这个充满变化的世界里，人们很难预测未来会发生什么。但令人惊讶的是，KK预言了互联网时代的到来，并深入探讨了其对社会、经济和文化带来的深远影响。他坚信，人工智能将带领我们进入一个全新的时代，一个由智能驱动，由数据主导的时代。他的成就和贡献不仅在于杂志的创办和发展，更在于他对未来技术的深入研究和独到见解。</p><p>&nbsp;</p><p>不久前，KK的新书《宝贵的人生建议》正式发布，为这个时代中不断前行的奋斗者们指导了方向。借此时机，极客邦科技创始人&amp;CEO霍太稳（社区人称Kevin）与KK进行了一场深度对话，就当前技术圈和职场内的热门话题展开探讨。</p><p>&nbsp;</p><p>在访谈中，KK聊到了人工智能技术对整个世界的影响，并阐述了如何成为一个无法被AI取代的人。</p><p>&nbsp;</p><p>作为一名创业者，KK分享了他对“创业之路就是九死一生”这句话的理解。他回顾了自己加入《连线》杂志的始末，并表示所有创业公司离破产都只有一步之遥，无论是特斯拉、苹果还是亚马逊都毫无例外。对于初创公司来说，起起落落、生死关头都是常态。</p><p>&nbsp;</p><p>他也诟病了现在企业内部普遍存在的“开会文化”，KK表示自己不会参加莫名其妙的烂会，如果这场会议没有产出任何创新的东西，不如不开。而且他也观察到了一个有意思的现象——现在有些公司已经不在会议室里设椅子了，大家都得站着，所以会议不会拖得太长。</p><p>&nbsp;</p><p>在技术和人文领域深耕多年的KK身上有着诸多标签，他在外界眼中是一名创业者、作家、摄影师、艺术家、科技大佬......，但KK称他自己最喜欢的标签还是父亲这个身份。他很爱他的三个孩子，并尽可能多地抽时间陪伴他们，让孩子们切身感受到他所做的事情，而不只是乏味地言语说教。</p><p>&nbsp;</p><p>KK会带着孩子到世界各地学习、游历，希望他们感受不一样的世界，KK认为这对培养孩子的价值观和世界观尤为重要。</p><p>&nbsp;</p><p>以下是访谈实录，经编辑。</p><p></p><h2>怎样成为一个无法被AI取代的人</h2><p></p><p>&nbsp;</p><p></p><blockquote>InfoQ：首先，很高兴有机会能和您进行一场对话，我看了您的书，深受启发。您的新书中有一条让我最印象深刻的建议，您提到“成功最可靠的⽅法，是你⾃⼰定义成功。先射箭，然后在射中的地⽅，画⼀个靶⼼”。这与很多人认为的先瞄定目标再朝着目标努力似乎不太一样。您能详细解释下其中的含义吗？先射箭，如果没有靶心，又该如何去瞄准？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：其实我想强调的是，大家要把对成功的定义权掌握在自己手里，而不是接受别人的成功理念。对我来说，那些有趣的人之所以有趣，就是因为他们自己有一套关于成功的定义。而照着这个定义前进，就是箭的去向。要做什么、做到怎样就算是成功，应该由我们自己说了算。</p><p>&nbsp;</p><p>所以如果你已经有了目标、有了对于成功的理解，比如就是每天都陪孩子们一起吃饭，那该做的就是不错过任何一次陪伴他们的机会。如果能做到这一点，那就算是成功。这就是我们的箭头所在，现在可以围着它画靶子了。现在可以围着它画靶子了，而且只要做到这一点，你就是个成功的人。总而言之，成功是由自己创造的，而不是走进由其他人预先定义的概念中去。在我看来，每个人都应该有自己的一套、跟其他人不同的成功定义。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：说得好。第二个问题是，你在书中谈到了很多生活建议。我想问的是，是否有一些建议您想给出但是没写在书里的？是哪些建议，关于什么的？为什么您没有放在里面？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：确实，确实有很多建议是在书出版之后才记下来的。但之所以没放进去，主要是因为我是后来才想到的。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：是您认为这些建议可能不是太成熟吗？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：没有，我不是觉得不成熟，而是当时确实没想到。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：明白了，原来是这样。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我是后来才想到的，可书已经写完了。我在书后又记录了一些额外的想法，所以倒不是不成熟，只是这些念头后来才冒出来。当然，其中也有一些不成熟，或者是我觉得太浅显、没必要记录进去的。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：那您能举个例子吗？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：没问题。对于艺术家和创作者来说，我觉得最好是能创作一些能激发他人也参与创作的东西。创作那种能激发他人创作的艺术品，拍下那种能激发他人拍摄热情的照片。</p><p>&nbsp;</p><p>我觉得这是个好办法。有时候当我们不知道该创作什么作品、或者拍摄什么照片时，那就想想怎样的东西能激发其他人的共鸣，能让他们在看到你的作品时、自己也想创作一番。</p><p>&nbsp;</p><p>这就是好东西，我觉得艺术家的意义就在于激励更多人投身到艺术中来。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：是的，我们应该多做一点能启发他人的工作，而不只是把它当成份差事。另外在书里，您提到要做那些AI难以模仿的事。做⼀个不能被算法模型化的⼈，这样你将⽆可取代。有些具体的建议吗？比如应该培养哪些技能？从事哪方面的工作？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：AI的特点，就在于它们属于预测型机器，它们擅长的就是预测你接下来要说什么、预测你接下来想买什么、预测接下来你会选什么。如果AI真的能够预测你所做的一切，那它就能取代你。所以我们真正需要的是对生活和事物抱有兴趣，做出让AI意外的行动，让它没法预测你。只要它们预测不了你，它们就无法取代你。所以大家应该构建一种无法被预测的生活。如果你每天做的都是一样的事、吃的都是一样的东西，那你就完全可以被预测。如果你对于世界的观点、对于税收的态度、对于移民的关注也全是一成不变的，那你就可以被预测，你就可以被AI所取代。</p><p>&nbsp;</p><p>AI可以为你建模，因为你的可预测性太强了。你得有自己的生活，你得有能力摆脱其他人的影响、真正形成自己对于事物的观点。只有这样，你才不会简单得像个脚本。我们不能只听别人怎么说，不能只听媒体怎么说，而是要自己主动思考。对事物拥有独立的见解确实需要付出更多努力，但这会让你更难被预测，自然更难被AI所取代。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：没错，所以我们应该增强自己的创造力，让AI没办法模仿自己。但这种能力要如何获取，或者说我们怎么才能在日常生活中变得更有创造力呢？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：创造力确实很难获取、也很难轻易传授给他人。我们都知道，孩子们都比较有创造力，而我们要做的就是防止自己随着年龄增长而失去这份创造力。想要留住这份创造力，就不要打击孩子们、别毁掉他们的可能性。因为教育总是让孩子们别犯错，与众不同往往招致嘲笑，而这些都是在打击创造力。</p><p>&nbsp;</p><p>所以我们必须克服这一点，允许孩子们与众不同且不被嘲笑，也没必要因为犯了错或者做某些人们觉得奇怪的事情而感到尴尬。确实，来自身边伙伴们的压力如此之大，往往会把创造力消灭在萌芽之中。因此我们需要建立新的制度，从社会、家长、学校、老师等各个角度帮助孩子们得到赞扬、保持住创造力。我认为人的创造力其实是与生俱来的，但这一切随着学校和工作的训练和消磨而逐渐丧失。你必须学会忽视他人对你的看法，同时有意识地发挥自己的创造力。所以我觉得，这需要在教育层面留出足够的空间，给创造力一片生长的土壤。我认识的那些最具创造力的人们，往往都不太在乎别人怎么看自己。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：是的。要拥有创造力确实不容易，希望每天我们都能像个孩子一样探索自我、引导自我。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：没错。而且这种引导其实是自然而然的。我们天生就拥有创造力，所以需要引导的并不是刻意创造，而是不失去这份创造力。</p><p>&nbsp;</p><p></p><h2>“莫名其妙的烂会，我压根就不会参加”</h2><p></p><p>&nbsp;</p><p></p><blockquote>InfoQ：在您的书中，您还提到在同意参加⼀场⼯作会议之前，必须先看会议⽇程，并知道需要做出什么样的决定。如果不需要做出任何决定，就没必要参加这场会议。您是如何看待“开会文化”这一问题的？特别是那些没什么实际价值的烂会？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我就直接不去了。总之，只要我觉得某个会没什么新意，那我就不会去。我就是这么解决问题的。另外我还发现有个好办法，现在有些公司已经不在会议室里设椅子了。大家都得站着，所以会议不会拖得太长，时间久了太累人。</p><p>&nbsp;</p><p>所以每个人都不会浪费时间，把重要的事情说完之后就都撤了。这多好。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：确实，但有时候，如果想要激发一些创造性的想法，我们可能也需要通过会议进行头脑风暴。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：是的，要进行协作，就必须得开会。但大多数会议跟头脑风暴没有任何关系，跟协作也没有关系，单纯就是一个人把其他人早就知道的事情再说一遍。这样没意义的会就不该存在，我们只需要参与有必要的会。所以我才会在书里说，大家得自行判断要开的会属于哪一种。首先，这场会能告诉你一些你不知道的情况吗？会上是否要做出某些决策或者说行动？如果都没有，或者只是为了了解情况，那干脆就没有必要开，让他们给你发封电子邮件不就行了。所以，会议的真正必要性，在于根据你还不知道的信息来采取行动。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：没错，所以在你看来，如果会上没有新想法，那不如干脆别去。或者说如果只有些信息、不涉及行动，那也没什么意思。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：是的，决策和行动就是组织会议的唯一原因，如果两者都不沾，那不如直接把简单信息通过邮件发给大家。</p><p>&nbsp;</p><p></p><h2>创办《连线》杂志背后的故事</h2><p></p><p>&nbsp;</p><p></p><blockquote>InfoQ：确实，书面信息的理解效率还比听取会议更好一些。下面咱们聊聊关于《连线》杂志的事儿吧，毕竟作为InfoQ的创始人，我做的也是技术媒体。希望您能向我们分享几个故事，分享一些经验。当初你们为什么会决定创办这份杂志？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：这话说起来就长了，我可能没法完整回顾一遍。其实有本专门讲《连线》杂志创立过程的书，是Gary Wolf写的，书名是《Wired, A Romance》。简单来说，这本杂志源自一对居住在阿姆斯特丹的美国夫妇的构思。他们当初在阿姆斯特丹就试过，但没能成功，后来他们搬到了旧金山。</p><p>&nbsp;</p><p>故事的开端就是这样。1990年那会，互联网才刚刚兴起，他们来的正是时候。他们给我看了杂志的设计原稿，而且他们当时打算找位编辑。看了样刊，我说这太棒了，绝对能得到市场好评，所以我也决定报名加入。其实办杂志的成功几率特别特别低。大多数杂志，就跟大多数企业和初创公司一样，一般坚持不了5年就会失败。无论是餐厅、杂志还是其他业务，大都如此。但我觉得还是值得一试，令人高兴的是《连线》最终确实没有失败。</p><p>&nbsp;</p><p>必须得说，我们真的很幸运。其实如果从IPO的角度讲，也可以说我们是失败了。七年之后我们还是在卖杂志，但毕竟《连线》仍然存在。所以哪怕是30年之后《连线》易主了，但只要它继续存在，我就会觉得非常自豪。这就是《连线》的起源故事。一对来自阿姆斯特丹的夫妇，路易斯·罗塞托和简·梅特卡夫。还有另外两位设计师，再加上创刊时的五位编辑，一切就这么发生了。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：那么，您自己的愿景和目标是什么？您参与创办过《连线》杂志，这些愿景和目标对于杂志的发展和成功有什么影响？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：关于这个问题，我想引用联合创始人路易斯的说法。他说，他希望《连线》杂志读起来就像是从未来寄回来的。就是说，这应该是一本在未来编撰出来的杂志，只是被寄回了现在。应该向读者传递一种深深的未来感，我觉得这是个很棒的设计。所以我们就努力让它读起来像是来自未来。当然，未来的到来并不均匀，就像是一种趋势在整个地球上爆发、蔓延。如同火山中喷涌而出的岩浆，有些溅洒在上海、有些溅洒在东京，还有其他什么地方。总之，《连线》杂志希望带大家环游世界，一起探索未来会先在哪里冒出头来。</p><p>&nbsp;</p><p>因此，引导我们的就是那种努力创造未来的感觉。这种感觉不只来自信息和情报，更来自一种共鸣。《连线》做到了，而且这一切都是设计的产物，我们在讨论技术的同时创造出了未来感。这其实非常复杂，属于比较专业的问题了。总之当一切如预期般发挥作用，当读者们愿意在杂志面前敞开心扉，这种未来感也就实现了。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：不少初创公司都经历过生死时刻，那您在工作中有没有过类似的感受？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：任何一次创业都肯定会有生死时刻。只要看看他们的账本就知道了，无论是皮克斯、特斯拉、苹果还是亚马逊，他们都曾经离破产只有一步之遥。</p><p>&nbsp;</p><p>他们手里没钱了，连工资都发不出来，账上的钱再有半个月就会花光。但这就是常态，《连线》杂志也是如此。对于初创公司来说，起起落落、生死关头都是常态。</p><p>&nbsp;</p><p>所以具体讨论哪家公司都没有分别，毕竟创业就是这样一个过程。我们唯一能做的就是面对现实，很多企业最终倒在了半路，而且那些如今看来非常成功的公司也都有过这样的经历。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：确实。那您还记得自己创业过程中最艰难的时刻吗？《连线》有没有遇上过无法盈利的问题？最后您是怎么熬过来的？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：《连线》肯定也遇上过类似的情况。当时的情况是，几位创始人手里掌握着大部分股票。为了不把公司整体出售，我们只能以低价转让了自己的股权。所以从某种程度上讲，这也可以说是失败。有些人觉得创办的企业能变现就已经是成功了，但我们毕竟是低价变现，所以肯定是失败的。但我们也有成功的一面，那就是《连线》杂志生存了下来，也让我们赚到了一点钱。所以这就是所谓既失败了，但也成功了。</p><p></p><h2>技术人可以像英雄一样改变世界</h2><p></p><p>&nbsp;</p><p></p><blockquote>InfoQ：在创办《连线》杂志之前，您曾经是《全球概览》杂志的编辑和出版人。您是如何从一家杂志转向另一家杂志的？在这个过程中，有哪些故事可以分享？毕竟改变总会伴随不少困难。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：《全球概览》其实有点像互联网，只是当时互联网还没出现，但意思是差不多的。《全球概览》涵盖的内容很多，都是些非常实用的信息。它有点像博客或者报纸。我在80年代担任杂志编辑时，整个数字世界才刚刚拉开帷幕。</p><p>&nbsp;</p><p>所以我对技术文化很感兴趣，也试过引入一些跟《全球概览》类似的元素，但最终没能成功。其实我还办过一办叫《Signal》的杂志，跟《连线》差不多，只是没能引起关注。路易斯认为，《连线》的核心主线应该是关注技术创造者，而不仅仅是技术本身。我的那本杂志主要是介绍技术本身的，所以他的想法明显更好。因为他的想法更好，所以我才下决心脱离《全球概览》去了《连线》。路易斯的观点非常明确，要以讨论发明者及其目标为切入点讨论技术，并让这些创造者成为英雄。</p><p>&nbsp;</p><p>所以除了让杂志成为窥探未来的窗口，我们还有另外一项目标，那就是让科技人士成为英雄。其实在上世纪70、80年代，技术人往往被视为怪咖和失败者。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：那种典型的腼腆形象，比如说比尔·盖茨？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：确实，就像比尔那样，搞技术的就是那副口袋里插满了笔的形象，有点窝囊颓废。但我们说，不对，要让他们成为英雄。比尔·盖茨是真正的英雄，绝不是什么失败者。《连线》的一大目标就是要让这些从事技术的人们感受到自己就是英雄，自己正在改变世界，然后带着这股热情和主动性来讲述自己的故事。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：酷，你们确实做到了。很多技术人确实从《连线》杂志中获得了灵感和力量。而且现在有很多人像我一样，都想创办自己的杂志、媒体或者是企业。那么，KK，您对于这些想要创业的人们，有什么建议和经验可以分享吗？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：首先我得强调一点，就是这个世界上现成的信息已经太多了，已经足够指导那些想要自己创业的人们。所以我不知道自己还有什么可补充的，毕竟互联网上什么内容都能找到。我能提的唯一建议，就是对于年轻的创业者来说，最好是选择一个还没有固定的词汇或字眼能描述你想做的事情的方向。</p><p>&nbsp;</p><p>比如说大概十多年之前，如果你想搞区块链，那根本没人知道你在干什么，其中的概念也很难描述。市面上更是没有现成的词汇可以使用，所以这才是片真正的蓝海。或者，也许15年前你正在做一些类似于广播、但又不同于广播的业务，这就是现在的播客。但当时大家根本没听说过播客这个词，只能说它类似于广播但又不完全是广播。那么播客在15年前也算是个好方向。</p><p>&nbsp;</p><p>所以如果大家如今想要在某个领域有所建树，那最好是选片真正的蓝海，没有词汇可以直接归纳，也没有专家知道该怎么形容。如果你发现自己很难向父母解释自己在干什么，那这可能就是个好方向。</p><p>&nbsp;</p><p>总之我想说的是，最好别总想着再开发另外一种搜索引擎、或者开发另外一款天气预报应用。这些都有明确的概念了，所有人都知道那是什么东西。在这种红海里创业太困难了。所以，要尽量选择还没有名称、定义不明确、范围不清晰的方向，这对初创公司来说才更有前途。没错，失败的可能性很大，但潜在的收益也将极为可观。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：是的，创造确实非常非常困难，但如果有一天取得成功，我们就会迎来巨大的成功。而且随着业务规模的不断扩大，小组织也会逐渐发展成大团队。那么，管理大团队和管理小团队之间有什么区别？能不能分享一点您的经验？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我们都知道小团队有天然优势，比如更灵活、速度更快、成员之间更容易建立感情之类的。但缺点也很明显，就是所有工作都得由我们亲手完成，任务可以说是没完没了。第二个缺点，就是体量越小的公司失败率越高。所以这就得做出权衡，优缺点是相辅相成的。公司越大、安全性越高，但也越不可能做出惊人的颠覆。公司越小，颠覆一切的可能性就越大，但失败的几率也随之上升。我们必须把选择跟自己所处的人生阶段结合起来。对于已经有孩子的双职工家庭来说，承担这种风险的难度更大。但如果你还年轻而且单身一人，那就简单多了。</p><p>&nbsp;</p><p>我觉得如果你还年轻，那最好把自己能够承担更高风险的优势发挥出来。</p><p>&nbsp;</p><p></p><h2>慢即是快，成功的关键就是要坚持下去</h2><p></p><p>&nbsp;</p><p></p><blockquote>InfoQ：没错，创业确实无比艰难。那您有没有想过要放弃？面对困难的时候，你要如何克服失败、继续向前？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我在书里也提过这一点，大多数成功都源自耐心，你得心甘情愿把一件事做上10年。也许一年之内不会成功，但只要坚持不懈，长远来看终究会成功的。</p><p>&nbsp;</p><p>所以如果面对困境和难题，取得成功的一种好办法就是着眼于长远。只有这样才能坚持下来，坚持十年绝非易事，但做不到这一点就不可能成功。你的耐心越好，取得成功的可能性就越大。所以在面对挑战时，有时候我们只能耐心等待，只能缩小规模、裁掉一半的雇员，但明天的生活还是要继续。这就是耐心的力量。</p><p>&nbsp;</p><p>所以我想说的是，渡过难关的一种好办法就是把眼光放长远。大家得愿意把回报周期放到十年的尺度上，而不能指望着两、三年就原地起飞。大多数业务都需要十年时间，我自己就是那种能坚持下去的人。这就是我的办法。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：所以要把眼光放得长远一些。在中国，不少企业老板也告诉我，你得相信未来、你得培养自己的耐心，所以我想道理是相通的。那么KK，您是如何定位自己在社区互动中的角色？能不能分享一点您跟读者和作者们打交道的方法？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：很明显，跟客户之间的互动是越多越好。无论你做的是社交媒体还是零售业务，或者说你是搞艺术、搞演出的，面对一、两千粉丝，都应该尽量跟他们交互。但这里也存在权衡，因为交互会耗费大量时间、精力和资源。如果你是一家企业，你可以雇用专门的员工做这方面工作，但同时交互的效果也会变差。而如果你体量很小，那么交互的效果会很好、关联会非常密切，但这也对应着更高的成本，甚至占用掉你干正事的时间。我们当然也可以聘请全职主持人和社交媒体管理员，但因为体量太小，所以对应的成本就太高了。比如说当你单兵作战的时候，那跟1000名粉丝交互就已经占用掉了全部工作时间。那你就没办法再创作音乐作品了，每天唯一能做的就是陪他们玩。这样虽然跟社交的互动确实很有成效，但成本也太过高昂。总之一定要做好权衡。</p><p>&nbsp;</p><p>万事万物都不是免费的，我们必须得把资源投入到服务台、社区论坛、版主，还有各种昂贵的、人性化且接触频率很高的方案身上。如果你愿意付出，那就能得到回报。但发展社区跟与社区打交道总有成本，甚至可能在业务支出中占据很大一部分。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：是的，这必然对应着大量的时间或者资金投入，但同时也能从中获得很多回报。那在您看来，有没有哪些事件或者决定对您的职业生涯产生了重大影响？您又是如何定义职场上的成功和失败的？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：明白，这个问题跟我之前说的要在还没有固化下来的领域创业有关系，在这样的舞台上成功应该尽量由我们自己来定义。</p><p>&nbsp;</p><p>无论是对个人还是企业都是如此，我们不该借用、窃取或者照搬别人的成功定义，而应该创造属于自己的成功定义。比如说，我想办一家最出色的婴儿车工厂，而且全体员工都是在职母亲。</p><p>&nbsp;</p><p>也就是说，只要我们的员工100%都是在职母亲，那我们就已经成功了。要根据我们自己的成功定义把公司组织起来。我认为只要能找到独一无二的成功定义，那么无论是作为个人还是一家企业，你都能做得更好。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：其实在书中，您也告诉我们不一定要做最好的，但要做唯一的。那您觉得一个人能在职场上取得成功的关键因素是什么？我们又该如何培养这些能力和品质？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我觉得最好是找一家重视学习的企业，所在的组织越擅长教学、员工们的能力就越强。换句话说，好公司一定是教学型的公司，而教学的对象就是你的员工。</p><p>&nbsp;</p><p>在《连线》我们流传着一句话：我们聘用的是态度，培训的是技能。其实那些刚进入《连线》的新人都不具备必要的技能，他们根本不懂怎么开发网页。但那时候网页技术还在发展当中，所以我们根本就招不到所谓精通网页开发的人才，没人知道要怎么做。所以我们会根据员工的态度和能力进行筛选，然后培养他们逐渐掌握网页编程技能。他们自己会主动学习，我们也会努力教学。所以我觉得必须要让公司成为员工教育流程中的重要载体，引导他们，帮助他们成为更好的工作者、更好的人。所以教学就成了我们日常工作中的重要组成部分，但不是在教室里，而是通过同事间的讨论、结对工作、导师合作等等。公司内部应该建立起浓厚的学习氛围，抓住一切机会为员工提供指导和教育。</p><p>&nbsp;</p><p></p><h2>创业者的B面人生</h2><p></p><p>&nbsp;</p><p></p><blockquote>InfoQ：没错，培训不光是对于年轻人、对我们所有人来说都是非常重要的。第三部分问题主要涉及个人生活和家庭，应该会比较轻松。您创办了一本杂志、也出版了自己的书，而且还热爱摄影。听说您还在亚洲巡游过足足9年，用照片记录了不同国家的文化和风貌。所以你身上似乎有很多标签，创业者、作家、摄影师、艺术家、科技大佬、互联网教父等等。您最喜欢其中哪个标签，为什么？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：父亲，我最喜欢父亲这个标签。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：是指互联网教父吗？还是说只是孩子们的父亲？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：就是父亲，我有三个孩子。其实从某种意义上讲，这三个孩子是我人生中最大的乐趣来源。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：明白了，那在生活中您是那种严厉的父亲吗？会如何跟孩子沟通？因为我也有两个孩子，他们都很有个性，好像永远不会听我的话。您有类似的经历吗？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：当然，他们也不听我的话。但孩子就是这样，他们不会听你说话，但会看你怎么做事。所以我会尝试改变，努力通过行动、而非语言来教育自己的小孩。后来他们长大成人，会告诉我这确实很有效。他们觉得我是那种话不多，但会通过行动表达态度的人。这确实很难，但长辈对孩子的影响确实更多体现在行动上，而不是语言上。</p><p>&nbsp;</p><p>我在某些事情上非常严格，但其他事情上却相当宽松。所以孩子们也知道我到底关注什么，比如诚实、不说谎，我对这事就非常重视。我从来没对自己的孩子撒过谎，也不希望他们对我说谎。但其他小事，比如他们该穿什么衣服、该换什么衣服之类，我就不关注也不在乎。这就是我跟孩子们的相处方式，对有些事非常严格，对其他事能放则放。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：所以说，以身作则才是教育孩子的最佳方式喽？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：没错，我觉得这就是最佳方式。他们关注的不是大人说了什么，而是大人做了什么。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：确实，毕竟孩子们也不会乖乖照我们说的做。那您如何看待兴趣爱好跟日常工作之间的关系？毕竟每个人的时间都是有限的，二者之间该怎么平衡呢？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我个人不做平衡，因为我的爱好跟工作是一体的。我倾向于做那些自己无论如何都会做的事，即使没有报酬也无所谓。这就是所谓爱好，爱好是指我们不拿钱也愿意做的事情。我就会坚持做这类事情，不管有没有钱拿。</p><p>&nbsp;</p><p>所以这就成了我的爱好。现在你问我，我每天做的到底是爱好还是工作？我不清楚，因为二者几乎融为一体了。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：也就是说，对您来说爱好和工作是一体的。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：没错，我认识的那些最成功的人们也是如此。比如说沃伦·巴菲特，作为全球知名的投资者他其实根本就不需要继续赚钱了。他的钱就连捐都捐不完，还有比尔·盖茨都是这样。巴菲特已经那么有钱了，但还是在不断投资。他都90多岁了，何必呢？答案只有一个，投资是他的爱好，而不再是什么工作。</p><p>&nbsp;</p><p>他喜欢做投资，而且会一直做到自己寿终正寝的那一天。从这个角度讲，他其实从来都没有工作过。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：所以最好是找一份跟自己爱好相重合的工作。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：是的，找那些你甚至愿意掏钱去干的事情。如果找到了，那就会是你最擅长的东西。我知道很多人都是这样，他们做事就不是为了赚钱。沃特·迪士尼就是这样，他说他拍电影不是为了赚钱，他赚钱是为了能继续拍电影。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：另外还有一个平衡问题，就是你在职业生涯中要怎么平衡家庭和事业间的关系？很多职场人士一直饱受折磨，能不能向他们分享一点建议？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：好的，但这个问题很难有普适性的答案。这往往要取决于你有没有孩子、是双职工家庭还是单职工家庭等等，所以很难笼统地给出答案。</p><p>&nbsp;</p><p>就我自己来说，我倒没有想过太多。毕竟孩子们对于自己父母的期许和要求也是各有不同。所以无论如何，我觉得我们家算是比较平衡了，而且这种平衡是无意间形成的。我自己没想过太多，但结果还算不错。</p><p>&nbsp;</p><p>所以我也不太清楚，没办法给大家太好的建议。毕竟根据我自己的经验，每个家庭都有很大的差异，不同的家庭需要寻找属于自己的特殊平衡。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：找寻这种平衡非常困难。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：确实，而且我想强调的是这种平衡不能一概而论，我没办法给出一通百通的平衡方案。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：我听说您特别喜欢旅行，那您去过的让您印象最深刻的城市是哪个？您觉得旅行的意义是什么？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我还是先分享一点关于旅行的轶事吧。50年来，我一直在亚洲各地旅行。要说对某座城市印象深刻的瞬间，那应该是1975年左右我第一次尼泊尔加德满都的经历，那可以说是我一生中最奇妙的体验了。当时的加德满都大概只有100万人口，不太确定，但总之城市不是很大。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：那算是个小城市了。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：当时还很小，但整个城市里都没有私家车。</p><p>&nbsp;</p><p>卡车肯定是有的，但居民们出行就靠双脚，连自行车都没有。到处都是徒步街的人们，没有汽车、没有自行车。人们就这样用双脚及量自己生活的土地。整座城市都没有私家车，那种感觉太棒了，就如同穿越回了中世纪。我像是坐上了一台时光机，回到了自己从未谋面的过去。对我来说，那就是最令人印象深刻的城市。但现在不同了，毕竟时间已经过去了50年，一切早已经改变。但在当时，那就是我亲眼见证过的最神奇的城市。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：对您来说，旅行的意义是什么呢？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：旅行是保持学习的最佳方式之一，也是获得不同思维方式的最佳方式之一，更是尝试扭转思路的最佳方式之一。我认为通过游走于世界各地，你能发现人们之间的相似性，这也能让我们变得更加乐观。就拿战争为例，我们很难对自己曾经去过的国家痛下杀手。</p><p>&nbsp;</p><p>所以我觉得多出去旅行有益于世界和平。我认为旅行对年轻人来说非常重要，所以各个国家应该用补贴的方式让年轻人们走出去。美国、中国、印度，都应该让民众趁年轻的时候靠补贴出去旅行，借此了解关于我们身处的世界的各种知识和运行规律。等他们回来了，观念也会发生改变。他们应该旅行两年并在国外长住。你能想象，如果每个美国人都曾经在其他国家生活过两年，美国会变成什么样吗？你能想象中国的学生都在国外生活过两年，又会是怎样的情景吗？这将从根本上改变整个国家，让国家变得更好。我认为我们应该在美国实行强制性的全民服役，让年轻人通过维和部队在国外待上两年，帮助当地社区。这肯定会带来惊人的回报。</p><p>&nbsp;</p><p>我觉得旅行是种加快学习的方式，是一种磨练差异化思维、与他人和谐相处的好办法。而且，旅行也特别有助于减少国家之间的冲突。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：没错，好建议。我想我也应该带着自己的孩子去世界各地走一走，特别是美国还有中国各地。</blockquote><p></p><p></p><p>Kevin Kelly：我在出差的时候就会尽量带上孩子。没错，我在儿子女儿还小的时候就经常带他们出差，让他们看看爸爸在做什么、看看世界是什么样子。这比待在学校有意义多了，他们也愿意从学校里逃出来。是的，尽量多带孩子出去旅行，他们的人生都将因此而改变。</p><p></p><p></p><blockquote>InfoQ：社会才是真正的大学，而且效果比真正的学校还要好。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：的确如此。我曾经带我儿子去过泰国和不丹，当时他才上八年级。这些经历确实改变了他的人生。</p><p>&nbsp;</p><p></p><h2>万事开头难，只要肯写，就一定能写完</h2><p></p><p>&nbsp;</p><p></p><blockquote>InfoQ：另外一个问题，你在写作当中是如何克服倦怠情绪的？毕竟写书这种事工作量巨大，您能不能分享几个具体例子？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我其实在书里也分享过关于写作的建议。</p><p>&nbsp;</p><p>对我来说，写初稿是最难的。有些朋友可能有类似的经历，初稿最后肯定会被废弃掉。电影公司皮克斯也是一样，他们谈到在制作电影的时候，开头出来的效果总是特别差。他们会不断做修改和完善，让影片慢慢变得不那么糟糕，最终好起来、精彩起来。</p><p>&nbsp;</p><p>初稿就是最难的，所以我会假装自己给朋友写信抱怨，告诉他这书有多难写。比如说这个题目太麻烦了，里面涉及的复杂内容太多了之类。</p><p>&nbsp;</p><p>而在抱怨的同时，其实我们就已经是在写作了。就像是在给最好的朋友写信一样，你会在里面说自己目前有多么挣扎、多么沮丧，但又不得不坚持着写下去。在解释写作为什么困难的时候，其实我就已经开始写起来了、有进展了。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：可能比较好的办法，就是先把整个作品拆分成几个更小的部分。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：是的，这就是写作过程的一部分。但基本上对我来说，我就是试着解释自己在干什么。初稿真的太难写了，但我知道这并不重要，毕竟无论如何初稿最终都会被废掉。这只是个痛苦，但却不得不经历的阶段。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：明白了，那你每天都会这样做吗，毕竟这样的过程会耗费很长时间。</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：那也没办法，因为只有这样才会有第二稿。在拼尽一切之后，我们手里的初稿才会成为第二稿。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：下一个问题是关于乐观心态的。实际上在现代社会，面对家庭和工作的双重压力，现代人的生活已经非常艰难。您对此有什么好的建议吗？比如我们应该做点什么、想点什么来保持乐观的心态？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：这是个好问题。我们意识到，乐观其实是种可以通过学校教育来传授的技能。你是可以教会孩子如何拥有乐观心态的，而具体的教育方式就是帮助他们理解挫折。失败只是暂时的，不会伴随他们一生一世、成为永恒的烙印。失败是可以克服的、暂时的问题，理解了这一点，人们就会变得更加乐观。相反，很多孩子受到的教育就是不断强调他们有多蠢、他们有多坏、他们有多么不努力。他们从此失去了信心，变得越来越悲观，因为他们觉得自己的一切痛苦都来自倒霉或者命运的安排。但如果告诉孩子们，他们遇到的挫折都只是暂时的，只要保持耐心并继续努力就一定能够将其克服，但他们就会变得更加乐观。</p><p>&nbsp;</p><p>我还认为，把时间放长远也有助于培养乐观情绪，比如设定十年奋斗目标。此外，长远的眼光也有助于我们从那些真正重大的失败中走出来。人生就像股票市场，总会上下波动，会有萧条期、也会有衰退期。但如果着眼于十年的长期回报，而不关心短期内的涨跌起伏，那人就会变得更加乐观。因此，要把眼光放长远、保持良好的耐心。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：好建议，非常感谢。您在书中提到“毫不犹豫地⾃我投资——花钱上课，学习新技能。这些不起眼的投资，能产⽣丰厚的回报。”能举个具体的例子说说为什么自我投资很重要？其实我们InfoQ旗下《极客时间》产品也是一款为广大开发者提供技术专业知识的板块，这里有丰富的技术专业领域知识。作为一款IT教育产品，您认为这款产品要具备哪些特征才能够吸引更多开发者关注和使用？能不能给我们提点具体建议？</blockquote><p></p><p>&nbsp;</p><p>Kevin Kelly：我不太了解怎样为自己的社区吸引开发者。但我想说的是，无论花多少钱投资自身技能，哪怕它们看起来跟当下正在做的事毫无关系，最终也一定能转化为回报。</p><p>&nbsp;</p><p>有个著名的故事，就是史蒂夫·乔布斯曾经跑去参加书法课。每个人都觉得把大学学分浪费在书法上纯粹是疯了，但他认为这段经历让自己拥有了在第一台Macintosh电脑上发明漂亮字体的专业背景和视角。</p><p>&nbsp;</p><p>这就是投资的意义所在，甚至不一定要跟当前的业务直接相关。如果你想学焊接，那就花钱去学；如果你想学插花，那就花钱去学。总之你对自己的投入越多，就越是了解自己。</p><p>&nbsp;</p><p>这种自我认知代表着巨大的力量。你要找到最适合自己的位置、最适合自己的角色。但我们刚开始其实并不了解自己，特别是在年轻的时候，我们根本不知道自己是谁、不知道自己擅长什么。而投入学习的资源越多，你就越是能够看清楚自己。所以自我投资在某种程度上，是一种了解自己的方式。你在发掘自己的本来面目，为自己赋予新的技能。而这种技能将对应着新的力量、新的定位，还有发现自己真正专长的更好机会。</p><p>&nbsp;</p><p></p><blockquote>InfoQ：感谢您接受我们的采访，我的问题都问完了。请好好休息吧。</blockquote><p></p><p></p><p>Kevin Kelly：再次感谢你们对我工作的关注，也感谢你认真准备的这些问题。非常感谢。</p><p>&nbsp;</p>",
    "publish_time": "2023-11-24 15:27:15",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Julia在大模型时代下的新发展与新应用：2023 科学计算与Julia 技术研讨会免费报名中",
    "url": "https://www.infoq.cn/article/jhQlKslkhzbhJPXlU6Ej",
    "summary": "<p></p><p><img src=\"https://static001.geekbang.org/infoq/6b/6b2ba22ef501ed80ff952ec5779e3b6e.jpeg\" /></p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4e/4e142ee387cfa8fd8fd7586d4ad58196.jpeg\" /></p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f5/f5e0b0a20eb7b05a1c132e0f2183056d.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/02/02268610eb4f66346d68f920a2b7eb61.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4c/4c904a48881b2ce5ea97620f4e1b27be.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f9/f992b6ae5a9e1a079d2af5260b28a5f1.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/18/184f001007b91b947dd713f28a321441.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3a/3a7de53d83ea09bb5d095da27bac47e4.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/44/4467bacd16775f74057030cccd6d0b10.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/62/6215f73b81d3bb1c5c612fdcb917cfe5.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9b/9b2833b5ce481380f1cc4d8500daa846.jpeg\" /></p><p></p>",
    "publish_time": "2023-11-24 15:57:13",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "大模型深入智慧之地，手机厂商会如何交卷？",
    "url": "https://www.infoq.cn/article/s0y4orJmabSBw0uotrK5",
    "summary": "<p>受访嘉宾 | OPPO 数智工程事业部总裁 刘海锋</p><p>作者 | 罗燕珊</p><p></p><p></p><h3>一条新路出现：跟风与乘势？大模型浪潮下的未见与先见</h3><p></p><p></p><p>在蓬勃发展的 AI 浪潮中，各行各业似乎都在积极投入大模型。由此我们更想探讨，企业之所以追逐大模型，是基于真实的业务需求，还只是跟风效仿？</p><p></p><p>我们试图着眼于大模型风起云涌的智能手机领域，从一位探索者的实践里找寻答案。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/03/03ecd40d285bcdb8496fe888ebf9fe2c.png\" /></p><p></p><p>在 2023 年之前，刘海锋在 OPPO 所带领的团队除了承担 OPPO 云、大数据、推荐搜索、互联网安全的技术工作，还专注于打造小布助手这款个人 AI 产品，并不断迭代升级技术栈。</p><p></p><p>从最初使用垂域数据和 FAQ 进行检索，到引入神经网络提升长尾问题应答能力，实际上过去这些年，对话系统也逐渐形成了一套标准的架构范式，包括语音识别、意图理解、槽位填充、对话管理和生成等等。这种架构成为全行业的标准范式，在包括Apple、Google在内的大公司里已经稳定运行多年。</p><p></p><p>然而，自从 Transformer 模型问世后，许多公司开始尝试预训练方法，以便更准确地理解和回答一些长尾问题。</p><p></p><p>2020 年，OPPO 内部的认知计算部门已启动预训练语言模型的探索与实践。据 InfoQ 近日与刘海锋交谈了解，当时做预训练模型的初衷是应对那些无法通过常规方法回答的长尾问题，或者处理一些比较自由的、多轮的闲聊对话。</p><p></p><p>“那时候预训练模型并非承担主力任务的角色，大约有 5%～10% 的问题可能会被引导到它这儿，它更多是做一个补充，做深层次的问答。”</p><p></p><p>然而，这样的技术栈也带来了现实的问题，整个系统变得相对复杂，包含多路问答的解决方案，却没有完美地解决所谓的对话问题，且距离认知智能还很遥远。</p><p></p><p>在这个背景下，OpenAI 蹚出了一条新的路线，通过 ChatGPT 这样的产品，展示了用更简单的架构、利用大模型来生成所有问题答案的可行性。</p><p></p><p>因此，时至今日，对手机及智能终端厂商而言，大模型已经不是选择题，而是一道必答题，大家纷纷探索如何通过大模型让设备里的“智能助手”变得更智能，因为这很有可能成为未来终端厂商的核心竞争力之一。</p><p></p><h3>视线定义路线：那些“这里面一定有金子”的时刻</h3><p></p><p></p><p>11 月 16 日，在 <a href=\"https://www.infoq.cn/article/2uKaRRpLwAwdmgOm5mIJ?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">OPPO 2023 开发者大会</a>\"上，刘海锋宣布 OPPO 正式推出自主训练的安第斯大模型 （AndesGPT）。</p><p></p><p>实际上，在今年春节后，刘海锋便组织团队迅速推进 AndesGPT 项目，目前已迭代了多个版本。OPPO 主要训练了三大类规格的模型——AndesGPT-Tiny、AndesGPT-Turbo 和 AndesGPT-Titan，涵盖十亿至千亿以上多种不同参数规模的模型规格，灵活满足不同应用场景的需求。</p><p></p><p>刘海锋强调，无论是做 AI 大模型，还是任何系统和产品，其核心特性和功能通常是由公司对用户的主张、过去产品的经验积累等方面所决定，而不是凭空定义。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1b/1bfb634b3cb972a263a56a3d00d99250.png\" /></p><p></p><p>而对于 OPPO 而言，AndesGPT 更多源自智能语音助手“小布”的积累，其应用载体也主要是小布助手这一 C 端产品。据悉，近 5 年来，在构建月活过亿的 C 端产品小布助手的过程中，OPPO 已经完成了大规模高质量语料数据的积累。</p><p></p><p>基于此，OPPO AndesGPT 的三个核心技术特性分别为：对话增强、个性专属和端云协同。</p><p></p><p>对话增强：由于智能助手主要通过对话进行交互，因此强化“大模型知识问答的精准性”、优化“对话交互的流畅和自然度”是首要特性。个性专属：OPPO 是一家面向消费者的公司，强调为每个用户个体提供有用的大模型和智能应用。因此，与服务企业的大模型不同的是，AndesGPT 更关注满足个人用户的需求。这也导致其在技术和产品路线上与 ToB 的大模型存在差异，OPPO 要求模型是有状态的、能够记忆用户过去的交互历史、了解用户的偏好和兴趣，以提供更好的个性化服务。端云协同：由于大模型主要托管在云端，对智能终端产业来说，在技术上实现端云协同非常重要。OPPO 的方案是把小规格的模型放在手机上运行，让一些应用即使在断网的情况下也能使用。</p><p></p><p>核心能力方面，AndesGPT 聚焦在四个方向：知识、记忆、工具、创作。</p><p></p><p>在知识能力方面，AndesGPT 融合了知识图谱及通用搜索能力，为用户提供更专业的问答。通过知识增强技术，将外部知识与模型融合生成结果，降低幻觉。在记忆能力方面，AndesGPT 实现长期记忆机制，以支持无限长度的上下文和有状态服务。工具使用能力上，AndesGPT 能够更好地理解设备控制与服务 API，端到端生成可执行指令。目前 AndesGPT 已支持使用“系统设置、一方应用、三方服务、代码解释器”等各类工具。在创作方面，AndesGPT 已全面支持文生文、文生图与图生图场景，且积极尝试音乐生成。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ed/edee51603f99dacc25b28368f0b29376.png\" /></p><p></p><p>“虽然大模型和产品在现阶段仍有不足，也经常会遇到 bug，但团队致力于不断迭代和改进。”刘海锋表示，目前在大模型的实际应用上，更多的还只是“迈出了第一步”。</p><p></p><h4>&nbsp;独家技术创新 SwappedAttention</h4><p></p><p></p><p>事实上，OPPO 团队在两年前就开始对预训练语言模型进行探索和落地应用，自研了一亿、三亿和十亿参数量的大模型 OBERT。</p><p></p><p>目前业内模型训练中主要面临的挑战有两个：效率和成本。效率方面涉及如何在有限的资源内高效进行模型训练，而成本方面则关注如何最大程度地发挥每颗 GPU 的价值并降低训练的总成本。</p><p></p><p>刘海锋表示，受益于团队此前在“智能推荐”、“小布助手”场景里积累的经验，以及在大规模系统架构、云计算以及分布式系统方面的积累，使得 AndesGPT 项目的 Infra 优化有经验可循，再借助混合云架构，灵活解决算力资源瓶颈问题。</p><p></p><p>训练大模型只是整个过程的第一步，关键在于将其应用到实际产品中，解决性能和效果方面的问题，形成一个持续迭代的闭环。</p><p></p><p>那么，AndesGPT 如何进行创新和演进，如何变得更好？刘海锋以“记忆”能力为例展开说明，比如安第斯大模型“一定要提供 stateful API”，要提供无限的上下文能力。</p><p></p><p>但实践过程中，团队发现面临这样一个问题，即当上下文越来越长时首次推理的延迟很高。为解决长时记忆带来首字推理延迟的技术挑战，他们把一些先进的方法应用上，比如 FlashAttention 和后来的 PagedAttention（由加州大学伯克利分校提出）。如此一来，模型的应用性能是有得到提升，效果也有改善。</p><p></p><p>但这样还不够。刘海锋告诉 InfoQ，他觉得这里面还有更多的发掘空间，他当时跟团队说：“这里面一定有金子。”</p><p></p><p>在 PagedAttention 的基础上，OPPO 做了技术的演进和扩展，自主研发了长时记忆机制并命名为 SwappedAttention。长时记忆主要包括用户交互过程中产生的交互历史、个人数据，以及从中提取的结构化信息等。</p><p></p><p>具体而言，SwappedAttention 是通过将内存空间与计算交换、缓存历史的键值对（KV 值）的思路，来大幅减少首字计算量。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2f/2fa3ff1d9251f201b023ffcc82dc6846.png\" /></p><p></p><p>同时，SwappedAttention 采用了多层级缓存机制，涵盖了 GPU 显存、主机内存以及通过 GDS（GPU Direct Storage）连接外部存储设备。根据缓存时长、对话频率等策略进行分级存储与交换，以最优化资源利用。</p><p></p><p>实现场景方面，以处理多轮对话场景为例，随着聊天轮数累积，SwappedAttention 能有效减少对话时首字推理时间，用户可获得更快的系统响应。</p><p></p><p>而 FileChat 文档对话场景中，可以避免长文本的 KV 值进行重复计算，大量减少计算开销，缩短首字推理时间，并且可提升首字计算的并发度。在非首字的推理过程中，SwappedAttention 可以动态压缩 KV 值，进一步降低显存占用，提升整体吞吐量。</p><p></p><p>刘海锋表示，上述创新思路其实还是从经典的计算机科学里获得的启发。</p><p></p><p>“既然 GPU 里可以使用以 page 为单位的 cache，那么一定可以做以会话 /session 为粒度的 cache。既然这个 cache 可以存放在 GPU 内，那也可以将其交换到外部，交换到服务器的内存以及后台分布式系统的内存中。”他进一步解释，这个思路类似于计算机科学中存储层次的原理，有小 cache 就有大 cache，有 L1 cache 就有 L2 cache、L3 cache，它们不矛盾，可以叠加使用。</p><p></p><p>通过更大的缓存，结合 PagedAttention 算法一起使用，SwappedAttention 最终能够带来 50% 的首字延迟降低，以及 30% 的推理吞吐提升。</p><p></p><p>毋庸置疑，于大模型研究者而言，优化推理性能是一个需长期解决的问题。刘海锋表示，尽管有了 FlashAttention、PagedAttention 以及 SwappedAttention 等方法，实际上后续还会涌现一系列具有弹性的算法优化机制，以进一步降低推理延迟。</p><p></p><h4>&nbsp;端云协同</h4><p></p><p>目前，基于 AndesGPT 全新升级的小布助手，已进一步强化端云协同能力，在终端和云端分别部署 Tiny 和 Turbo 模型，根据使用场景和网络状态做智能分流。</p><p></p><p>刘海锋指出，端云协同，实际上是大模型促使原来智能助理的应用架构发生了改变。具体实现上，是在手机侧部署小模型（AndesGPT-Tiny）、云端部署大模型，然后由智能助理应用程序根据实际情况调用不同的模型。</p><p></p><p>最初 OPPO 在生产环境使用的模型参数规模大约在十几 B 左右，后来团队发现模型在涌现性方面相对逊色。进行了几次升级之后，目前云上使用的是 70B 的模型（AndesGPT-Turbo），运行效果良好。与此同时，内部还在推进千亿级别参数规模的模型优化（AndesGPT-Titan），目前还没有推向线上。</p><p></p><p>“我们必须承认所谓大的语言模型，它的核心特性叫做智能涌现。你要想让模型获得涌现能力，参数规模必须要足够大。”刘海锋强调道，今天行业内的一个基本共识是，要达到智能涌现的特性，模型的参数规模可能需要达到 50~70B 才行。因此，如果一些问题是需要智能涌现能力才能解决，那就必须使用云端部署的大模型。</p><p></p><p>对于模型调用的流量分配，刘海锋表示主要是根据用户场景做判断，比如某个应用总是执行固定的任务，或者处于断网的情况下，一般就会调用设备侧的小模型。再比如某个降级访问的问题，或者是有限场景下的使用，那么在终端侧部署的小模型也是可以解决的。</p><p></p><p>关于大模型在实际应用中的权衡和选择，刘海锋表示还涉及到功耗、内存等多方面的问题考虑，也是目前业内同行都在积极探索的热点。</p><p></p><p></p><h3>颠覆已然到来：大模型要把底层翻新，基础设施面对挑战</h3><p></p><p></p><p>整体来看，如今融入 AI 大模型的新一代智能助理产品给基础设施带来了不少新的挑战。</p><p></p><p>刘海锋指出，与之前大规模的 Web 应用架构相比，大模型的技术堆栈变得更为复杂。过去的架构比较“规整”，可以分为存储、离线数据处理、在线缓存和数据库等等层次，规模大了后也可以采用分布式系统架构，以“scale out”方式横向拓展。</p><p></p><p>但是对于今天的大模型和智能体应用来说，GPU 的需求变得极高，GPU 取代了 CPU 成为核心计算单元，这使得许多软件问题都需要围绕 GPU 来看。</p><p></p><p>其次，大模型应用的赋能也分不同的阶段来看。首先是训练阶段，对 GPU 的选择、网络基础设施和整体容错能力都有很高的要求。例如，在训练过程中需要定期有 checkpoint，将参数写入底层存储。这对存储系统提出了新的挑战，需要定制一套系统来处理从 GPU 加载数据到分布式内存存储的问题。</p><p></p><p>第三，一旦模型训练完成并推送到线上，就需要优化推理性能，以实现更有效的 GPU 利用。如前文所述，推理优化也是一项长期工作。</p><p></p><p>第四，在推理之外，模型的外围系统比如检索增强也需要格外重视和持续构建。刘海锋进一步表示，向量数据库是目前比较熟悉的一种解决方案，但随着模型上下文窗口的增大和模型能力的提升，他认为对于向量数据库的依赖可能会降低，也许会催生出新的系统架构，更易于使用或功能更强大，以弥补大模型本身的不足。</p><p></p><p>最后，他认为前端应用也会有较大变化，因为前端应用可能需要接多个模型，需要考虑多个模型的分流，这涉及到整体的判断逻辑。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1a/1a427381a2a8871fe136b908dd6feb17.png\" /></p><p></p><p>总的来说，刘海锋认为大模型时代使得软件架构以 CPU 为中心变成以 GPU 为中心，从训练到推理，再到增强和前端应用，不同环节的技术架构都与移动互联网时代有着显著的不同之处。伴随这波浪潮而来的是，许多技术挑战都将变得更加硬核。</p><p></p><p></p><h3>倒逼下的改革：从技术的研发方式，到人的组织方式</h3><p></p><p></p><p>随着 AndesGPT 项目的启动，刘海锋对团队的人力投入和资源配置进行了调整。目前，内部的大模型团队主要由以下团队构成：</p><p></p><p>模型竞争力团队：负责模型训练和调优。智能助理团队：也最核心的大模型应用产品的团队，专注于开发和改进智能助理应用，与模型竞争力团队协同工作，相互挑战和共同进步。应用 +AI 团队：使用安第斯大模型的 SDK，将其应用于公司已有的应用中，不限于智能助理，还要扩展到其他 C 端应用或孵化新应用，使终端产品更加智能。企业 +AI 团队：也叫企业智能化团队，主要将安第斯大模型应用于企业内部，涵盖的场景包括编码、数据分析、营销等，以提高效率和智能化。AI 安全团队：负责整体泛 AI 安全，包括数据安全、隐私保护以及更广泛的伦理和价值观等多维度的安全问题。</p><p></p><p>值得一提的是，今年春季后，刘海锋迅速成立了“安第斯 AI 安全实验室”，专注于为大模型和人工智能提供安全保障。其指出，大模型的安全性与保障应用程序安全的工作有很大的不同。</p><p></p><p>传统的应用安全工作主要关注 App 是否恶意，是否存在滥用行为等问题。然而，大模型和 AI 的安全性问题涉及到另一个维度，比如生成的内容是否包含敏感信息以及是否符合价值观等方面的考量。</p><p></p><p>同时，大模型安全需要处理的数据量也更大了。原来的“移动互联网安全”主要处理用户输入的数据，例如上架的应用、搜索查询等。然而，对于生成式 AI 的安全性而言，不仅需要处理输入，还需要关注输出。而输出的数据量通常比输入大一到两个数量级，对返回的内容都需要进行额外的处理工作。</p><p></p><p>因此，AI 安全，尤其是生成式 AI 的安全性，也是接下来技术工作者需要重点解决的一个难题。</p><p></p><p>除了安全挑战之外，随着大模型项目的推进，刘海锋对于人才能力挑战的问题深有体会。他认为，首先，新一波 AI 浪潮对产品经理能力提出了更高的要求。现代 AI 产品往往是技术驱动的，因此 AI 产品经理需要更“懂技术”才能进行高质量的决策和判断。</p><p></p><p>其次，对于研发同学，单纯懂算法是不够的，还需要对算法和架构有深入的理解。AndesGPT 团队成员要么是既熟悉算法又懂工程和架构，要么是双方能够很好地协同工作。</p><p></p><p>由于大模型存在许多不确定性，其可解释性还是个开放的问题。因此一个新的模型上线后，不能用单一指标来对整体效果做评判和反馈，且评测周期长，维度也比较复杂。刘海锋认为，大模型测试领域可能会出现新的技能和岗位需求。</p><p></p><p>为了适应新兴技术和需求，OPPO 会在实践的过程中灵活调整团队，比如尝试让技术研发同学担任产品负责人的角色等。“我觉得在新的时代，研发同学的组织方式也会有一些变革，它会跟原来不太一样。”</p><p></p><p></p><h3>深入智慧之地：未来，终端设备里的 AI 将无处不在</h3><p></p><p></p><p>据悉，为了更好地促进大模型及智能体生态发展，AndesGPT 后续将开源智能体框架，便于开发者打造自己的智能体。</p><p></p><p>此外，AndesGPT 团队也在开发一款个人知识管理智能体（简称 PKA）。用户可以把日常工作生活中阅读的文章、文档、文件和笔记上传存储分析， 结合大模型的理解和记忆能力，PKA 就能成为用户的个人知识管家——快速回答问题，这些问题可以是对某个知识点的询问、某篇文章的总结，甚至全局问答。</p><p>刘海锋进一步表示，智能体不需要额外安装，而是嵌入到小布助手当中，并分为不同的频道，每个频道涵盖不同的话题或服务，这有点类似于互联网门户时代的频道划分。OPPO 希望开发者和终端用户都能够创作或定义智能体，并互相分享有趣和实用的智能体，推动生态的创新和互动。</p><p></p><p>今天，互联网大厂和行业巨头纷纷布局自己的大模型，有些还提供公用的服务。但与此同时，许多追求业务领先的企业也会训练自己的模型，在刘海锋看来，这是一个互补的关系，如同混合云架构，它们并不是互相取代的关系。</p><p></p><p>“如果你用云计算的视角，你可以把大模型看成是一朵 AI 的云，我们还是把高质量的知识编码到这朵云里，然后它去做高性能的推理。所以，从这个角度上看，我觉得很多东西在技术上可能属于不同的话题，但基本的原理实际上是高度一致的。”</p><p></p><p>未来，刘海锋认为生成式大模型会成为终端厂商的核心产品和技术竞争力，与“拍照”、“自有 OS”并驾齐驱成为三条核心技术赛道。进一步地，智能手机会成为真正的人工智能手机，而 AI 则会无处不在，作为“一个智慧的外脑”嵌入到每一个软件和硬件里。</p><p></p><p>可见，大模型的进化将会是一次“深入智慧之地”的旅程。而它，才刚刚开始。</p>",
    "publish_time": "2023-11-24 16:15:32",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]