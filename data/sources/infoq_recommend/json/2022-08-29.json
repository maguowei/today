[
  {
    "title": "Java近期新闻：JDK 19-RC1、Spring更新、Micronaut、Helidon、Payara等",
    "url": "https://www.infoq.cn/article/qcH52QwOytWQNkcqmUbj",
    "summary": "<p><a href=\"https://www.infoq.cn/topic/java\">Java</a>\"近期新闻综述：JDK 19、JDK 20、Spring Boot 2.7.3和2.6.11、Spring Authorization Server 1.0.0-M1和0.4.0-M1、Spring Security 5.7.3,5.6.7和5.8.0-M2、Spring Cloud Dataflow 2.9.5、Spring Shell 2.1.1、Payara Platform 5 Community、Micronaut 3.6.1、Helidon 3.0.1和Apache Camel 3.14.5。</p><p></p><h4>JDK 19</h4><p></p><p>JDK 19早期访问版本的Build 36在过去的一周发布了，对Build 35进行了更新，修复了各种问题。关于这个版本的更多细节可以在<a href=\"https://jdk.java.net/19/release-notes\">发布说明</a>\"中找到。</p><p>&nbsp;</p><p>根据JDK 19的发布时间表，Oracle Java平台组首席架构师Mark Reinhold正式宣布，由于Build 36中没有未解决的P1 Bug，所以JDK 19已经进入了第一个发布候选阶段。</p><p></p><h4>JDK 20</h4><p></p><p>上周，JDK 20早期访问版本Build 11也发布了，对Build 10进行了更新，修复了各种问题。关于这个版本的更多细节可以在发布说明中找到。</p><p>&nbsp;</p><p>对于JDK 19和JDK 20，开发者可以向<a href=\"https://bugreport.java.com/bugreport/\">Java Bug数据库</a>\"报告Bug。</p><p></p><h4>Spring Framework</h4><p></p><p>对于Spring来说，过去是非常忙碌的一周，因为Spring Boot、Spring Authorization Server、Spring Security、Spring Cloud Dataflow和Spring Shell发布了一系列具有里程碑意义的版本。</p><p>&nbsp;</p><p>Spring Boot 2.7.3发布了48个Bug修复、文档改进和依赖项升级（例如Spring Security 5.7.3、Hazelcast 5.1.3、MySQL 8.0.30、Groovy 3.0.12和GraphQL Java 18.3）。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.7.3\">发布说明</a>\"中找到。</p><p>&nbsp;</p><p>Spring Boot 2.6.11也发布了，它修复了40个bug，改进了文档和依赖升级，比如:Spring Security 5.6.7, MySQL 8.0.30、Reactor 2020.0.22、Hibernate Validator 6.2.4.Final和Dropwizard Metrics 4.2.11。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.11\">发布说明</a>\"中找到。</p><p>&nbsp;</p><p>继2022年11月发布Spring Authorization Server 1.0 GA之后，第一个具有里程碑意义的版本也发布了。构建工具升级：JDK 17和Gradle 7.4.2。依赖项升级：Spring Framework 6.0.0-M5、Spring Boot 3.0.0-M4、Spring Security 6.0.0-M6、org.hsqldb:hsqldb:2.6.1、jakarta.servlet-api:5.0.0和mockito-core:4.6.1等。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/1.0.0-M1\">发布说明</a>\"中找到。</p><p>&nbsp;</p><p>与Spring Authorization Server 1.0.0-M1同时发布的是0.4.0（计划于2022年11月发布）的第一个里程碑版本。新特性包括：对UserInfo端点调用示例的增强，允许配置授权代码的生存时间（5分钟）。依赖项也有了升级：Spring Framework 5.3.22、Spring Security 5.8.0-M2、nimbus-jose-jwt:9.23和Gradle Enterprise插件。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/0.4.0-M1\">发布说明</a>\"中找到。</p><p>&nbsp;</p><p>在通往Spring Security 5.8.0的路上，第二个具有里程碑意义的版本已经发布。新特性包括：针对SAML页面的基于哈希的Content-Security-Policy、允许自定义重定向策略以及为GitHub Action设置权限的能力。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.8.0-M2\">发布说明</a>\"中找到。</p><p>&nbsp;</p><p>Spring Security 5.7.3和5.6.7已经发布——添加了一个Kotlin示例来演示如何与WebTestClient类集成和为GitHub Action设置权限的能力。两个版本的依赖项升级包括：Spring Framework 5.3.22、Project Reactor 2020.0.22、hibernate-entitymanager 5.6.10.Final和Eclipse Jetty 9.4.48。关于这个版本的更多细节可以在版本5.7.3和5.6.7的发布说明中找到。</p><p>&nbsp;</p><p>Spring Cloud Dataflow 2.9.5已经发布，依赖项Spring Boot升级到2.5.14，并修复了这些问题：对流进行更新后在审计仪表盘中隐藏敏感数据、使用VMware Tanzu 1.12.2创建带有多个输入和输出绑定的流失败。关于这个版本的更多细节可以在发布说明中找到。</p><p>&nbsp;</p><p>Spring Shell 2.1.1已经发布，修复的问题包括：分离的内置命令文档、命令行选项的补全不正确以及Spring Shell默认为基本的Jakarta EE验证器。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v2.1.1\">发布说明</a>\"中找到。</p><p></p><h4>Payara</h4><p></p><p>在上周发布Payara Platform Enterprise 5.42.0的同时，Payara也发布了相应的Community Edition 5.2022.3，其中包含了CVE-2022-37422的安全补丁，这是一个零日漏洞，会影响部署在Payara Platform所有发行版默认根目录中的Web应用程序，同时还发布了6个组件更新和7个改进。</p><p></p><h4>Micronaut</h4><p></p><p>Micronaut基金会发布了Micronaut 3.6.1，修复了几个模块的Bug，包括：Micronaut Security、Micronaut Servlet和Micronaut GCP。关于这个版本的更多细节可以在<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v3.6.1\">发布说明</a>\"中找到。</p><p></p><h4>Helidon</h4><p></p><p>Helidon 3.0.1已经发布，特性包括：根据配置恢复Map的注入行为、更新WebSocketHandler将查询参数从WebServer正确传播到Tyrus、JSR 356参考实现、<a href=\"https://www.jcp.org/en/jsr/detail?id=356\">WebSocket Java API</a>\"以及添加了Helidon SE和Helidon MP更新HTTP响应状范围计数器的示例。</p><p></p><h4>Apache Camel</h4><p></p><p>Apache Camel 3.14.5已经发布，包含15个改进和修复，比如——当一个cron配置在camel-quartz中过期，上下文将无法启动。另外还有依赖项的升级：Spring Boot 2.6.10、camel-spring-boot 2.6.10和camel-any23 2.7。关于这个版本的更多细节可以在<a href=\"https://camel.apache.org/releases/release-3.14.5/\">发布说明</a>\"中找到。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/08/java-news-roundup-aug15-2022/\">Java News Roundup: JDK 19-RC1, Multiple Spring Updates, Micronaut, Helidon, Payara</a>\"</p>",
    "publish_time": "2022-08-29 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "为什么我不会怀念 React？",
    "url": "https://www.infoq.cn/article/iq8WxF2Ia9sMKZ6kcSSl",
    "summary": "<p></p><blockquote>工程师Jack Franklin过去每天都使用 React，直到后来他加入谷歌从事 Chrome DevTools 工作，工作重点变成了引入 Web Components，他发现自己离开 React 之后好像也没有想象中的那样怀念 React。本文是他关于 React 和 Web Components 的一些实践与思考。</blockquote><p></p><p></p><p>两年多前，我从伦敦一家初创公司离职，在那里，我负责开发基于 React 的大型电子商务前端。离职后，我加入了谷歌，从事 Chrome DevTools 的工作。我最初的工作重点是引入 Web Components，这是一个新的测试基本构建块，用于开发新的 DevTools 特性和用户界面。由于最近 <a href=\"https://developer.chrome.com/docs/devtools/recorder/\">Recorder</a>\" 面板和其他面板的发布，现在，DevTools 中的很大一部分几乎都是 Web Components。</p><p></p><p>我曾经预计，当我离开以 <a href=\"https://www.infoq.cn/article/bFcMG2yN9RDkd2smS1wQ\">React</a>\" 为中心的角色后，会发觉转型很困难，并会怀念 React 所提供的东西。结果，我发现转型要比预期容易得多，并且我真的很享受更接近平台原语的工作，对我所编写的软件保持了更多的控制，在本文中，我想分享一下这个原因。</p><p></p><p>首先，以防引发歧义和争论，我想先清楚地阐明本文不是什么：</p><p></p><p>本文并非呼吁每个人都立刻抛弃 React，转而使用 Web Components。本文并非宣告 React “死亡”的博文，也并非所有项目的错误选择。本文并非宣称 Web Components 是所有项目的最佳解决方案。本文亦并非宣称所有的 Web 框架都是没用的或者很糟糕的选项。本文并非博文暗示，因为这种方法适用于我和我在谷歌的团队，因此对于你来说也是一样。所有的项目都不尽相同，而且几乎可以肯定的是，Chrome DevTools 对于你的项目有着不同的需求和约束。那也无所谓。本文应该被解读为一个人从每天使用 React 到不去触碰它的思考，以及这样做的经验。我之所以写下这篇博文，是因为我惊喜地发现，我是如此享受与 Web 平台更紧密的合作。</p><p></p><p>虽然我会用 “React” 作为我的比较，但你可以合理地将其替换为任何大型现代框架。</p><p></p><h2>使用平台</h2><p></p><p></p><p>近年来，“使用平台”已经成为一个有点被过度使用和滥用的短语，但是它的核心原理却让我产生了共鸣：我们能不能利用浏览器和 JavaScript 中的 API，在无需第三方依赖项的情况下，为我们的用户开发特性？</p><p></p><p></p><blockquote>注意：这里的答案并不总是“是”！我还是想把更多的特性添加到浏览器中。但是，相对于十年前，这个原生特性的范围有了很大的拓展。一个典型的例子就是构建表单：这曾经是一个使用 React 的合理理由，因为在这里，浏览器只提供了原始的特性。快进几年后，在最近的一个项目里，我可以用 100% 的原生特性来构建具有坚实用户体验的表单：</blockquote><p></p><p></p><p>我使用 <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation#using_built-in_form_validation\">HTML 验证属性</a>\"来强制执行必填字段（还可以使用基于模式的验证做得更多）。我使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects\">FormData API</a>\" 从表单中读取数值，而不是在状态中跟踪它们的数值（我不需要这样做，因为验证是由浏览器完成的）。如果我愿意，我甚至可以使用<a href=\"https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation#validating_forms_using_javascript\">约束验证 API</a>\" 来定制错误信息——直到几天前我才知道这个 API 的存在！这是不是比使用 npm 的一个库来为我打包这一切更费事？有可能！但是我可以通过多写一些代码来达到相同的效果，而不会因为额外的依赖项而影响到我的应用。</p><p></p><h2>保持控制</h2><p></p><p></p><p>当我刚开始使用 React 时，我最担心的就是如何适应自定义元素，但是我真的很喜欢用它们工作。</p><p></p><p>自定义元素可能会让你更容易写出更多的代码，但是，如果你以前用过任何一个流行的组件库，那么你就可以创建出一些令人惊讶的、熟悉的东西，但是有一个关键的区别：你不会放弃控制。</p><p></p><p>React 不允许你自行决定如何以及何时将你的组件渲染到页面上。你使用它的结构来编写代码，它决定何时渲染。10 次中有 9 次——甚至 100 次中有 99 次或更多——这完全符合你的预期。但是 Web 平台并非十全十美，我猜想大多数 React 开发者都会遇到过这样的情况：你很渴望能够调整自己的组件的渲染方式。</p><p></p><p>如何放弃对渲染过程的控制，将会导致混乱，正如 <a href=\"https://twitter.com/garybernhardt/status/1516099364611047436\">Gary Bernhardt 所发的这条推文</a>\"一样：</p><p></p><p></p><blockquote>为什么这段代码：console.log(mark ${Math.random()})alert(mark ${Math.random()})打印一条日志，但是显示两个警报？因为 React.StrictMode 隐藏了一条日志来“帮助”我为并发模式做准备。React 很好，但对于 99.9% 的应用来说，并发模式感觉就是个错误。这种行为现在已经在 React v18 中有所改变了，但是 React 不得不抑制额外的 console.log调用，这是它渲染我的应用的结果，这一事实让我感到惊讶；正是这种在我自己的应用中缺乏控制的情况，已经让我感到非常警惕。</blockquote><p></p><p></p><p>在软件开发中，这被称为<a href=\"https://martinfowler.com/bliki/InversionOfControl.html\">控制反转</a>\"（Inversion of Control）。当你使用像 React 这样的框架时，你的代码将不再直接控制组件（或函数）何时被调用。你的组件并不直接告诉 React 何时重新渲染它们，而是由 React 决定。你的组件已经把控制让给了 React。</p><p></p><p>我们的自定义元素解决方案不会有这种控制的倒置；我们通过明确地调用一个函数（在 lit-html 的例子中，它是一个名为 html 的<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals?retiredLocale=nl\">带标签模板源文本</a>\"）来控制每一次渲染。</p><p></p><p>没有使用 React 这种框架的不利之处在于，你必须考虑重新创建那些原本内置的部分，比如，确保我们批量渲染的基本调度器，或者使这些组件更容易测试的测试助手库。在这种情况下，你必须仔细考虑你的选择：如果我们避免使用 React，但最终重新实现了它提供的大部分内容，那么我们使用框架会可能会更好。在我们的案例中，我们依然认为这样的决策是合理的，因为我们不必重新构建一个具有 React 的所有复杂性的调度器：我们可以构建一个小型的、独立的实现，只实现我们所需要的东西。</p><p></p><p>在构建了我们的基本调度器之后，我们可以清楚地知道每个组件的渲染原因和时间，并且当我们需要偏离标准路径时，我们就能够实现。这种感觉很有价值：我所开发的每个软件项目中，都有至少一种组件需要做一些不同的事情来处理奇怪的边缘情况。</p><p></p><h2>选择可以轻松替换的依赖项</h2><p></p><p></p><p>自定义元素缺乏的一个领域是某种形式的 HTML 模板解决方案，它提供了高效的 HTML 重渲染。我肯定会建议使用一个库来解决这个问题，而我们选择了 <a href=\"https://lit.dev/docs/libraries/standalone-templates/\">lit-html</a>\"。lit-html 的魅力在于，它只是我们解决方案中的一小部分。我们本可以选择 Lit，一个基于自定义元素形成的功能更全面的组件库，但是这样做，会导致我们增加依赖项，同时也会失去一定的控制（重申我在这篇博文前面提出的观点：这不是对 Lit 的批评，对很多人来说 Lit 是正确的选择！）。</p><p></p><p>Lit-html 可以确保我们的 HTML 被有效地渲染，并且提供了一套很好的指令，让我们可以轻松地完成常见的任务，如<a href=\"https://lit.dev/docs/templates/directives/#classmap\">有条件地应用类</a>\"。虽然没有 JSX 那么完美，但是也非常的接近。</p><p></p><p>最重要的是什么？它是一个非常小的依赖项（<a href=\"https://bundlephobia.com/package/lit-html@2.2.2\">3.3kB gzipped</a>\"），更重要的是，如果我们需要的话，可以很容易地被替换。这听起来很消极，甚至很悲观，但当我们采用一个新的依赖项时，我们要问的一个主要问题是：“如果它消失了会怎样呢”？</p><p></p><p>假定 React 已经消失（这并不是说我认为它会消失）。我们处理这个问题的代价是什么？我们有几个选择：</p><p></p><p>维护 React 的复刻（fork），无论我们目前使用的是哪个版本。将我们所有的组件从 React 迁移到其他地方。这两个选项对我都没有吸引力；维护一个库意味着我们要么什么都不做，要么错过改进和/或安全修复；而迁移我们所有的组件，那就是一项浩大的工程了。我确信，一旦出现这样的情况，React 的复刻将会如雨后春笋般涌现出来，但是不管怎么说，它都需要很多的努力，经过很多的波折，才能使事情变得更健壮。迁移我们所有的组件，花费会非常大，而且对最终用户来说，也没有什么实际的好处，这对于企业和领导层而言是非常困难的。我们还必须学习一种新的框架（即使它与 React 相似），并且在这个框架中增加我们的专业知识。</p><p></p><p>这与自定义元素和 Lit-html 形成了鲜明对比。我们可以有很好的信心，自定义元素不会突然消失；它被嵌入到浏览器中，并且向后兼容是 Web 平台的一个核心原则。</p><p></p><p></p><blockquote>如果你在想自定义元素 v0 被移除而改用 v1，请记住 v0 是 Chrome 浏览器的特定实验性规范，而 v1 是一个跨平台的标准化规范。v0 的目的是收集开发者的反馈，以便为未来的标准化规范提供参考。要是 lit-html 从互联网上消失了呢？我们有同样的两个选择：维护一个复刻，或者取代它。维护复刻并不理想，原因与维护 React 复刻不理想一样，但有一点不同：lit-html 的范围要小得多，而且一般来说它是一个小得多的库。这将减少我们的工作量，使我们能够在需要时进行修复或改进。</blockquote><p></p><p></p><p>替换 lit-html 将是一项工作，但比替换 React 要少得多：它在我们的代码库中纯粹是用来让我们的组件（重新）渲染 HTML。替换 lit-html 仍然意味着我们可以保留我们的业务逻辑，最终保持它们为最终用户提供的价值。Lit-Html 是我们系统中的一块小的“乐高砖”，React（或 Angular，或类似）是整个“盒子”。</p><p></p><h2>第三方依赖项的成本</h2><p></p><p></p><p>第三方依赖，无论大小，都会有一系列的成本，你的用户和/或开发人员将为此支付。每个人对这一成本是否值得的看法会有所不同，这取决于你的应用程序和技术栈，但当我考虑添加新的依赖项时，会出现以下一组成本：</p><p></p><p>包大小：这个依赖对我们必须在浏览器中交付和执行的最终 JavaScript 增加多少权重？对于这个依赖项所提供的东西来说，这个包的大小是否合适和值得？突破性变化和升级：如果软件包有一个大的改动，需要工作来升级到最新版本，会发生什么？我们是继续使用旧版本（如果它没有得到更新或安全修复，那就不太理想），还是投入工作来升级？升级的工作是否可以很快得到优先考虑，或者是我们可能永远无法完成的工作类型？未维护的代码或问题的风险：谁能说第三方的依赖项可能有特定的漏洞或问题而导致问题？（这并不是批评所有那些孜孜不倦地维护开源软件的人——但这些事情常会发生）。Jeremy Keith 在他最近关于信任的文章中指出：</p><p></p><p></p><blockquote>你添加到项目中的每一个依赖项都是多一个潜在的单点故障。你自己的代码也是如此（把“依赖项”换成“文件”），但关键是你有完全的控制，你可能更熟悉它的工作原理，因为它是在内部编写的，而且你不需要对其他人负责来修复上游的问题。这并不是说你应该在每个项目上都重新创建一个世界；在自己构建和添加依赖项之间总是有一个很好的平衡，而且没有任何规则可以决定每次的正确结果。</blockquote><p></p><p></p><h2>总结</h2><p></p><p></p><p>这篇文章并不是说你不应该接触依赖项。在回应 Jeremey Keith 关于信任和第三方依赖项的帖子时，Charles Harries 提出，<a href=\"https://charlesharri.es/stream/libraries-over-browser-features\">跨浏览器兼容性在历史上是依赖项的驱动力</a>\"。</p><p></p><p></p><blockquote>浏览器兼容性是库（尤其是 Jeremy 提到的大库），如 React 和 Bootstrap--向开发者作出的基本承诺之一。我没有足够的时间在 caniuse.com 上浏览 Array.prototype.includes 或 MutationObserver 的页面。Lodash 在其主页的底部就承诺了跨平台兼容性。我完全同意 Charles 的观点，这也是为一个浏览器开发工具的工作具有优势的一个领域，因为我们了解用户对浏览器的偏好。</blockquote><p></p><p></p><p>我希望，随着浏览器所支持的基线特性集越来越统一，尤其是 IE 浏览器的消亡，我们的行业可以随着时间的推移，在缺省的状态下，能够实现浏览器的广泛内置特性，在绝对必要的情况下进行多重填充，并把框架作为默认的起点。</p><p></p><p>作者介绍：</p><p></p><p>Jack Franklin，谷歌工程师，负责构建 Chrome DevTools。</p><p></p><p>原文链接：</p><p></p><p>https://www.jackfranklin.co.uk/blog/working-with-react-and-the-web-platform/</p>",
    "publish_time": "2022-08-29 08:30:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "夸克程序员揭秘：手机如何变成一台智能扫描仪？",
    "url": "https://www.infoq.cn/article/rg3k0sJPiVMfOuTw6UTJ",
    "summary": "<p>8月24日，在夸克“Meet AI”开放日上，夸克AI视觉团队分享了夸克在AI视觉技术上的研发理念和实力。</p><p></p><p>数据显示，目前超过一半的夸克用户使用相机来提升学习、工作效率。今年5月，夸克的Slogan由“新生代智能搜索”升级为“你的高效拍档”。在搜索引擎之外，夸克App定位为「智能工具+内容+服务」的新模式，围绕用户的交互体验与使用场景迭代创新，满足用户主动获取信息、解决实际问题的需求。</p><p></p><h2>手机扫描正在超越传统扫描仪</h2><p></p><p></p><p>随着居家学习、移动工作的需求爆发，大学生和职场人对扫描的需求也发生了全新变化。夸克扫描王数据显示，学习是排名第一的使用场景，工作需求紧随其后，用户不仅需要清晰度更好的扫描内容，他们对后期的编辑、分享、存储甚至创作都有了更加个性化的需求，而传统的扫描仪已经很难满足这一变化。</p><p></p><p>夸克视觉技术负责人黄锐华表示，夸克的用户群体大多数是年轻用户群体，超过一半用户小于25岁，这部分用户群体的典型职业是学生和初入职场的工作者，这些年轻人善于挖掘和使用各种工具为学习和工作提效，而简单的搜索无法满足用户需求，因此夸克围绕搜索提供了一些智能工具的能力，希望以智能为核心，满足用户在办公、学习场景中的工具需求。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/6e/c7/6e0a3814c7a5dfc4dc98fdc3cae2f8c7.jpeg\" /></p><p></p><p></p><p>经过多年的技术沉淀和探索，夸克AI视觉技术加持的智能搜索、智能工具成为用户获取信息的重要入口之一，通过手机硬件与云端强大算力结合，夸克采用业界最新的深度学习算法，构建了一套完整的训练模型和技术能力，并且已经应用在日常学习、办公、生活等领域中，给用户提供智能化解决方案&nbsp;。</p><p></p><p>其中，夸克扫描王就是以AI视觉技术为核心的智能工具，从识别、录入、编辑、管理、个性化创意等方面，满足不同场景下的用户需求，帮助他们处理各类扫描问题。支持高清扫描、文字提取、格式转换、照片修复、魔法擦除、自拍证件照等十余项功能，把手机变成了一台智能扫描仪。</p><p></p><p>黄锐华表示，手机扫描正在超越传统扫描仪，给大学生和职场人带来更高效、更便捷的信息服务体验。在基于手机相机功能的搜索行为中，大学生的学习场景占比超过一半。</p><p></p><p>夸克扫描王在云端算力和视觉技术上的突破，帮助用户完成从传统图片、文件到数字化资产的进化，提升扫描效率。</p><p></p><p>尤其在面对一些复杂场景时，夸克扫描王也针对性的提出了多项技术解决方案。当被扫描内容模糊或有污渍时，夸克扫描王可以实现自动修复并提升清晰度；针对手机扫描容易出现的角度不正、遮挡等常见问题，夸克扫描王通过智能算法和图像识别进行摆正、校对；针对个性化的信息处理需求，夸克加大了在识别文字和版式上的技术投入，实现了提取文字、拍黑板、加密以及擦除等实用功能。</p><p></p><h2>自研多项AI技术，攻克扫描难题</h2><p></p><p></p><p>在提升手机扫描的能力方面，夸克AI自研了多项AI技术。</p><p></p><p>夸克突破了传统光学字符识别的技术瓶颈，首次将多模算法引入文字识别领域，让公式识别、手写识别的效果得到了大幅度提升，印刷文字识别精度达到99.99%，手写文字识别精度达到98.5%+。就算面对复杂的Word、Excel、PPT等板式和结构时，夸克扫描王也能像人一样进行深入理解，并通过自然语言处理和计算机视觉技术的深度融合，帮助用户精准、快速的解决复杂问题。</p><p></p><p>夸克App视觉算法工程师顾添锦详细介绍了多模态算法，多模态包括两种模态，一种是图像（视觉）数据，另一种是文本数据。在传统的深度学习领域，图像和文本两个模型一般是不搭界，“井水不犯河水”的状态。但在两年前，业界开始用这两种模态的数据进行混合训练，夸克视觉AI 团队也进行了一些探索，把文字和图像和文字本身进行连接，这样就可以替代传统的OCR识别算法。</p><p></p><p>这种方法的好处一方面是，在做模型训练时，图像特征跟文本特征可以相互验证，提升各自的准确率。同时，降低了数据的标注成本，文本数据可以有几十亿、上百亿的数据供使用，可以对大量的文本数据进行预训练，语义部分可以输出一些常用的文字组合的能力，再把图像输入进去时，对一些模糊场景有一定的文本脑补能力，这样能大幅度提升识别的能力。</p><p></p><p>同时，夸克也把游戏引擎数据模拟方法与半监督模型训练方法引入到了文件扫描的模型开发中，通过深度模拟和还原快速提升文件矫正、字迹清晰度、背景杂质擦除的实际效果,&nbsp;进一步拓展了手机扫描的能力和应用场景，提升用户的满意度、导出率。</p><p></p><p>此外，夸克还研发出了手机扫描的“离线模式”，无需网络也可以完成高质量的扫描，能在未知的环境中进一步保护用户数据隐私和安全。夸克也成为第一个将扫描AI算法上端的App。</p><p></p><p>夸克扫描王还研发了魔法擦除、记录屏幕、照片修复等实用功能，让图片更具美感和真实感。去杂质、擦除、植发等特色使用方法可以辅助用户创作。</p>",
    "publish_time": "2022-08-29 10:26:52",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "InfoQ 首届产品会议 PCon 全球产品创新大会优秀出品人与明星讲师诞生",
    "url": "https://www.infoq.cn/article/HAVUus3m32ipmrwc0irv",
    "summary": "<p>2020 年，InfoQ 诞生了要举办产品大会的想法，并策划了第一届产品会议内容，邀请了第一届产品领域的专家讲师。然后就是大家知道的，受不可控因素影响 2020 年的会议未能如期落地。2021 年，产品大会再次启动，我们信心满满，然后就是大家知道的，临近会期之前不具备举办线下会议的外部条件，产品会议再次延期。</p><p>&nbsp;</p><p>终于，在今年的 8 月，历时三年，首届 InfoQ 产品大会PCon全球产品创新大会和大家见面了，虽然当年邀请的讲师换了一大半，一些老师也换了公司换了团队，会议专题也根据今年的情况进行了调整，但是没有比顺利落地第一场更让人激动的了。</p><p>&nbsp;</p><p>8 月 18-19 日，2 天的会议包含了 4 个Keynote主题演讲，33 个演讲议题，1 个特色晚场交流环节，近 50 位嘉宾围绕产品创新、产品设计、产品体验、产品商业化、产品需求&amp;项目管理等多个话题方向，结合具体产品案例进行了精彩分享。</p><p>&nbsp;</p><p>大会结束后，按照 InfoQ 大会一贯风格，为了鼓励更多优质的内容分享，根据讲师前期投入与配合程度、现场听众满意度，以及专家团反馈等因素，大会评选出了优秀出品人和明星讲师，他们只占大会讲师总人数的 20%。</p><p>&nbsp;</p><p>下面让我们来看看，首届 PCon 都有哪些老师获得了优秀出品人和明星讲师～</p><p>&nbsp;</p><p>优秀出品人</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/aa/aa76b6321a7da484931cba5912254e60.jpeg\" /></p><p></p><p>&nbsp;</p><p>优秀出品人需满足条件：在大会筹备期间，和组委会一起给予讲师专业且中肯的建议，投入足够的时间帮助讲师优化内容和演讲技巧，参与讲师试讲并给予反馈，最终使得专题场均满意度在 90% 以上。</p><p>&nbsp;</p><p>明星讲师</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/58/582469e53aa35de32d4ff1572887c011.jpeg\" /></p><p></p><p>&nbsp;</p><p>明星讲师则需要在前期内容准备上较为积极，花时间和精力配合编辑打磨内容，多次展开远程试讲，同时在现场演讲表现力上有足够的亮点，收获参会者的好评。</p><p>&nbsp;</p><p>&nbsp;</p><p>PCon&nbsp;的落地特别不易，我们特别感谢加入到 PCon 全球产品创新大会的所有老师、嘉宾和参与者，感谢大家的支持和不离不弃，才有了 InfoQ 第一届产品大会的成功举办。虽然第一届的举办有很多遗憾，但第一届的成功落地和现场氛围也让我们坚定了将 PCon 继续举办的决心和信心。希望未来 PCon 依然和你们同在。</p><p>&nbsp;</p><p>下一站： 北京站</p><p>&nbsp;</p><p>第一场没有参与到 PCon 现场的小伙伴，机会来了～2022 年的第二场 PCon 将于 12 月落地北京。感兴趣的同学，可以联系&nbsp;InfoQ&nbsp;的票务经理，咨询电话：18514549229（同微信）。</p>",
    "publish_time": "2022-08-29 10:48:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "华为云大咖说容器专场——“容器新势能”",
    "url": "https://www.infoq.cn/article/i832rIfeEQUlRlKVxvtX",
    "summary": "<p>近几年，容器的应用率不断提升。然而，当容器在不同的环境应用时，如何提升效率、管理、优化成本及如何拆解大规模部署带来的复杂度问题，才是当下开发者们一直在密切关注的。</p>\n<p>于是在8月17日的华为云大咖说容器专场直播中，以“容器新势能”为主题，沙利文上海研究院院长丁卓文、华为云分布式云原生首席架构师张琦、美图高级技术总监王关胜，便聚焦容器技术现状，共同探讨了在分布式云、多云环境下容器部署的难点、解决方案及未来优化方向。</p>\n<h2><strong>本期嘉宾</strong></h2>\n<p>沙利文上海研究院院长丁卓文<br />\n华为云分布式云原生首席架构师张琦<br />\n美图公司高级技术总监王关胜</p>\n<h2><strong>直播亮点</strong></h2>\n<p>一、《云原生市场研究报告——容器》（2022）研报解读<br />\n二、《泛在新范式：分布式云原生UCS》<br />\n三、《美图公司大规模容器化部署最佳实践》<br />\n四、圆桌畅谈：云原生容器的未来将何去何从？<br />\n1、目前的云原生容器技术已经进入商用拓展期，这是不是意味着，容器技术已经完全成熟？容器技术的下一个阶段在哪？<br />\n2、边缘计算被称为云原生的新边界，容器技术将发挥哪些新的势能？<br />\n3、Kuberentes难用问题在未来会不会彻底被解决掉？<br />\n五、圆桌问诊：开发者们关心的问题<br />\n1、多云多集群管理下，用户面临的主要挑战是什么 ？多云多集群会是未来一个很重要的趋势吗？当前什么样的企业会实际部署多云多集群的状态？<br />\n2、在瞬时的高并发场景中，如何提高Kuberentes集群的整体稳定性？<br />\n3、企业当前对于容器的利用规模大概是呈现什么样的趋势，这样的趋势给开发者和企业发出了什么样的信号呢？</p>",
    "publish_time": "2022-08-29 11:39:27",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "华为云大咖说数智融合专场——“数智融合，云上创新”",
    "url": "https://www.infoq.cn/article/wj9FuVYxt63XpmOkfVmt",
    "summary": "<p>在VUCA时代，市场变化加速，企业需要更加敏捷而准确的数智化决策，但众多企业面临着数据的困境，数据能力现状与需求之间存在差距，我们知道数据要素的价值，但却很难获得。，而另一方面，数据分析和AI分析技术蓬勃发展，呈现出融合的趋势，让分析的广度和深度不断增强，让使用的门槛不断降低，越来越多的开发者开始关注数智融合的发展。</p>\n<p>8 月 16日，华为云大咖说数智融合专场邀请到了艾瑞研究院总经理徐樊磊、华为云数据智能创新 Lab 高级技术专家季振峰、T3 出行大数据平台研发负责人杨华、顺丰科技大数据总监蔡适择四位来自不同领域的数据专家坐镇，以不同的视角解读“数智融合”这个话题。</p>\n<h2><strong>本期嘉宾</strong></h2>\n<p>艾瑞研究院总经理徐樊磊<br />\n华为云数据智能创新 Lab 高级技术专家季振峰<br />\nT3 出行大数据平台研发负责人杨华<br />\n顺丰科技大数据总监蔡适择</p>\n<h2><strong>直播亮点</strong></h2>\n<p>一、《2022年中国数智融合发展洞察》研报解读<br />\n二、《数据治理的生产线，构建高效、安全的一站式数智融合治理平台》<br />\n三、《“围湖而建”的智慧出行——T3出行的Lakehouse架构与实践》<br />\n四、《DataOps驱动数据中台云原生》<br />\n五、圆桌畅谈：“数智时代，重塑数据价值需要几步？”<br />\n1、如何定义未来的\"数据价值”？未来的\"数据价值”是怎样的？<br />\n2、低/零代码实现自动化，AI是否真的可以反哺数据实现智能化？<br />\n3、基于AI应用的数据治理面临着哪些难题？想要重塑数据价值，需要怎么做？<br />\n六、圆桌问诊：开发者比较关心的问题<br />\n1、数智融合时代，如何做好\"元数据管理？<br />\n2、如何利用AI技术从源头上建立完整、科学的数据治理体系？</p>",
    "publish_time": "2022-08-29 11:41:26",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "亚马逊云科技案例研究：爱为物联",
    "url": "https://www.infoq.cn/article/pDQ7VpkyM6HJRltYB6FH",
    "summary": "<p>“自 2014 年开始搭建云平台起，爱为物联就选择与亚马逊云科技合作，并陆续接入了托管类服务和弹性伸缩类服务，运维管理及人力成本减少了 50%，年均毛利率提升 3% 左右。全球商业运营七年多以来，从未出现过安全性问题。”</p><p>符莎 爱为物联 VP</p><p></p><h2>构筑全球物联网服务平台基石</h2><p></p><p></p><p>爱为物联是一家以视频技术为核心的，拥有全栈物联网能力的公司。在平台团队成立之初就选择了云服务行业引领者亚马逊云科技进行合作，全力打造追求极致安全的平台和产品。</p><p></p><p>对于 IPC 安防视频类产品来说，完整产品包含硬件与软件两个部分。硬件部分，依托爱为物联在 IPC 安防领域多年的积淀能够为客户提供完善的产品服务。而软件部分，无非自建和上云两个选择，出于性能和成本投入方面的考量，爱为物联毫不犹豫的选择了后者。决定上云后，爱为物联横向对比了全球T OP5 的云厂商，综合评估安全、合规、稳定性、成本等关键因素后，最终选择了亚马逊云科技。</p><p></p><p>在基础能力方面，爱为物联希望获得全球化稳定的、安全的、能够动态伸缩的设备连接、管理、存储服务，为平台接入更多安防类、智能家居类产品提供基础能力。亚马逊云科技提供了由业务子系统、推送子系统、云存储子系统三部分组成的解决方案。业务子系统提供账号管理、权限管理、设备管理等功能，作为民用网络摄像机云服务及后续 IoT 服务的基础系统；推送子系统用于接收用户设备的推送告警音视频，实时向用户 APP 推送告警信息以及管理相关信息；云存储子系统用于接收用户设备的音视频并保存，提供音视频查看及回放。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/af/af42d7599c6bf54736e04f1109a89b2e.png\" /></p><p></p><p>云存储部分，爱为物联最初采用的是自研平台与&nbsp;<a href=\"https://aws.amazon.com/cn/s3/\">Amazon Simple Storage Service (Amazon S3)</a>\"&nbsp;对接的方式。2014 年，爱为物联曾研发自有的平台，投入了大量的人力、物力，如果后续继续维护，将投入更大的成本。近年来，爱为物联开始转用&nbsp;<a href=\"https://aws.amazon.com/cn/kinesis/video-streams/\">Amazon Kinesis Video Streams</a>\"&nbsp;对接。相比来说，采用托管式服务能够很大程度的降低成本。此外，采用 Kinesis Video Streams 能够从端侧数据采集到传输、存储、检索，保证整个数据链链路的安全。在面对设备厂商和品牌商等B端客户时，很多客户要求必须用到亚马逊云科技整套的产品和服务，因为客户认为亚马逊云科技的服务能够在稳定性、安全性与海外合规性方面提供更好的保障。爱为物联 VP 符莎说：“亚马逊云科技服务的设备量、客户量都非常巨大，所以在安全性和稳定性方面肯定比我们更加专业，因此我们信赖亚马逊云科技”</p><p></p><p>基于亚马逊云科技提供的托管式基础服务能力，为爱为物联的 IPC 安防视频类产品提供了完整的 C 端服务能力，为其打造全球物联网服务平台提供基础。在接入亚马逊云科技服务后，系统故障、资源弹性伸缩、数据监控等可用性达 99% 以上，网关延时在 10 毫秒以内。从 2015 年至今，年均复合成本下降 3% 左右。不仅如此，基于Kinesis Video Streams 云存储的业务，还通过向客户提供增值服务的商业模式，为爱为物联带来了可观的营收变现。2022 年下半年，在连接方面，爱为物联还计划接入&nbsp;<a href=\"https://aws.amazon.com/cn/iot-core/\">Amazon IoT Core</a>\"，方便 IPC 产品与智能家居设备联动，进一步优化全场景智能家居解决方案。</p><p></p><h2>低成本实现数据分析处理，让 AI 触手可及</h2><p></p><p></p><p>爱为物联与亚马逊云科技的合作最初聚焦于广泛通用的基础服务。但随着技术的迭代升级，客户对产品也有了更加多元化的需求。以视频监控为例，近年来，人工智能在安防市场广泛应用，客户对于视频监控产品的需求不仅限于视频存储和记录，还包括在视频调用时能够快速、准确地确定事件节点和目标对象，在发生安全事件时能够及时预警等。在这样的市场需求下，爱为物联希望获得更强大的云端数据分析处理能力，从而为C端用户提供更多、更实用的增值订阅服务，提升用户的体验度。</p><p></p><p>然而，对于满足客户多元化和升级需求类的服务，爱为物联不得不考虑中短期的成本及效益问题。一方面，终端用户希望体验更好的产品，但是如果大幅提升产品价格势必会降低爱为物联客户体验的满意度；另一方面，如果前期支出全部由爱为物联承担，则会为企业运营带来较大的压力。综合考虑产品功能优化与成本控制方面的问题，亚马逊云科技为其定制了专属的 AI 解决方案。</p><p></p><p>2021 年下半年，爱为物联引入了&nbsp;<a href=\"https://aws.amazon.com/cn/rekognition/\">Amazon Rekognition</a>\"&nbsp;技术，在原有功能的基础上，通过图像识别及分析，实现了快速构建AI应用，帮助进行人脸识别、装备检测、视频图片分析等，助力安防视频监控设备在人工智能的赋能之下快速获取数据信息，为客户提供更专业的泛视频解决方案。但是直接采用 Amazon Rekognition，API 调用次数较高，超出了爱为物联原本的成本预算。基于成本方面的考量，亚马逊云科技团队帮助爱为物联训练了人脸识别模型，然后将这个模型部署到&nbsp;<a href=\"https://aws.amazon.com/cn/sagemaker/\">Amazon SageMake</a>\"r 集群中，过滤设备产生的误报或漏报图片，再将通过 Amazon SageMaker 过滤后的图片推送到 Amazon Rekognition 进行相应的人脸识别检测，从而减少API的调用次数，优化成本，通过数种方案并行的方式，成本最终降低了 50% 左右。</p><p></p><p>采用 Amazon SageMaker 不仅是出于成本方面的考虑，更多是基于其在用户自定义 AI 场景方面的强大能力。Amazon SageMaker 能够对不同对象打标签，通过服务器端 AI 模型训练，用户可以将数据导入进去，训练出用于具体场景的解决方案。谈及为什么采用亚马逊云科技的 AI 服务，符莎说：“事实上，亚马逊云科技的基础服务和 AI 服务之间是解耦的，也就是说，用户也可以选择其他厂商的 AI 服务。但之所以选择亚马逊云科技的 AI 服务，是看中亚马逊云科技全球AI数据的准确性，尤其在人脸识别方面，识别的准确率远高于其他产品。”引入 Amazon Rekognition、Amazon SageMaker&nbsp;等 AI 服务后，仅 6 个月时间，超过 1 万客户选用该服务，付费订单数量近 2 万单，爱为物联累计收入数十万美元，目前用户数和服务调用数仍在逐月快速上升。借助 Amazon Rekognition，不需要将原有设备固件升级，就能让原有设备具备AI能力，优化了用户体验，并且加快了产品的推广上线，产品落地上线时间节省了70%左右。</p><p></p><h2>云端安全合规，助力企业出海远航</h2><p></p><p></p><p>作为一家 90% 以上业务都在海外的全球化公司，安全合规对爱为物联来说至关重要。</p><p></p><p>在合规安全方面，世界各个地区都有相应的数据隐私法规。最初，爱为物联与海外咨询机构合作，进行合规梳理及相关的认证工作，然后基于反馈自己再进行一系列整改，周期很长，成本过高，且需要花费大量精力对现有云创产品的合规安全性进行打磨。2018 年 《通用数据保护条例》（GDPR）生效，亚马逊云科技较早地完成自身合规化，基于亚马逊云科技安全合规的基础设施层构建爱为物联自身的 GDPR 合规需求，效率大幅提升。</p><p></p><p>据符莎介绍，在 AI 落地之前，合规安全方面的挑战还不算太大，因为数据隐私法规如欧盟的 GDPR 仅要求欧盟境内的个人隐私数据不出境即可，只要在欧洲市场、美国市场以及国内市场分别建立独立的数据中心即可解决问题。亚马逊云科技本身也提供全球本地化合规部署的基础。但在 AI 落地之后，由于各国对AI数据的开放度不同，所以会出现同一个应用在某些国家合规而在某些国家不合规无法上线的情况，如 AI 人脸识别应用。针对 AI 方面合规性的问题，亚马逊云科技团队与爱为物联进行了多次深入探讨，从方案落地到部署上线，提供了全流程的解决方案和安全建议，爱为物联按照亚马逊云科技团队提供的思路进行落地，最终克服了 AI 人脸识别应用的合规安全挑战，将应用成功上线。</p><p></p><p>在数据安全方面，爱为物联拥有自研的 P2P 解决方案，该方案可以让每个设备具有唯一的 UID 和经过 SSL 算法加密的 KEY，APP 连接设备时同时使用非对称加密和对称加密方式，生成动态密钥，完成设备安全连接以及音视频数据的加密传输。而亚马逊云科技提供威胁检测与事件响应、身份认证与访问控制、网络与基础设施安全、数据保护与隐私、风险管控及合规五层洋葱防护体系，对于爱为物联平台的安全保障起到了层层加护的作用。基于亚马逊云科技安全平台提供的技术服务组件和付费安全组件&nbsp;<a href=\"https://aws.amazon.com/cn/waf/\">Amazon WAF</a>\"&nbsp;与爱为物联自研的解决方案相互配合，爱为物联平台上线至今七年多的时间里，全球数百万的设备从未出现过重大安全问题和事故。符莎表示，这也得益于亚马逊云科技服务的稳定性和安全性。</p><p></p><p>未来，爱为物联会继续借助亚马逊云科技的平台优势，结合其提供的产品和服务，构建新一代的 Video SaaS 平台，例如，通过&nbsp;<a href=\"https://aws.amazon.com/cn/freertos/\">Amazon FreeRTOS</a>\"&nbsp;将 MCU 设备连接到云端；通过在芯片中植入 Kinesis Video Streams 、Amazon FreeRTOS 等构建硬件-平台-应用的完整产品和服务；通过 Amazon IoT Core 让互联设备可以轻松、安全地与云应用程序和其他设备交互等。</p>",
    "publish_time": "2022-08-29 15:05:35",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "谷歌推出 Carbon 后，我在思考为什么 Rust 没能成为 C++ 的正式继任者",
    "url": "https://www.infoq.cn/article/PTbFdvN70r5l1q5tUOdt",
    "summary": "<p>两年来，Rust 一直被用户评为最喜欢的语言，但<a href=\"https://archsummit.infoq.cn/2022/hangzhou/track/1281\">程序员们</a>\"却不这么认为。</p><p></p><p>最近，谷歌推出了“<a href=\"https://www.infoq.cn/article/vJVZMZWbipYjHUT0B74G\">Carbon</a>\"”，一种号称可能成为<a href=\"https://www.infoq.cn/article/ScK8IZsfqecKY0axzRcJ\"> C++</a>\" 继任者的开源编程语言。随着这门 “实验性”语言 成为互联网上的热门话题，人们也开始讨论为什么“<a href=\"https://qcon.infoq.cn/2022/beijing/track/1288\">Rust</a>\"”没能成为 C++ 的正式继任者。</p><p></p><p>那些使用 Rust、<a href=\"https://qcon.infoq.cn/2022/beijing/track/1288\">为 Rust 做贡献</a>\"以及对语言开发感兴趣的人将 Rust 社区称为“Rustaceans”。Rust 是一种静态类型编程语言。它性能好，安全性高，尤其突出的是并发安全性和内存管理。它的语法和 C++ 类似。该开源项目最早是由 Mozilla Research 开发的。2021 年，Rust 基金会接手了这门语言，并继续推动其开发。</p><p></p><p>在 CPP North 大会的演讲中，谷歌工程师 Chandler Carruth 建议说，使用 Rust 的继续使用 Rust 即可。Carbon 面向的是那些有大型 C++ 代码库而难以转换到 Rust 的人。确切地说，Carbon 就是 Carruth 口中的“继任者语言”，以现有的生态系统为<a href=\"https://archsummit.infoq.cn/2022/hangzhou/track/1277\">基础构建</a>\"，这里是指 C++。根据StackOverflow 的调查，Rust 被认为是增长最快的编程语言之一，一直被用户评为最喜欢的语言，但程序员们却不这么认为。</p><p></p><h2>优秀的语言应该安全、快速、易于编程，Rust 是这样吗？</h2><p></p><p></p><p>Rust 很难。它的语法很复杂，学习曲线很陡。它是专门设计用来解决一些编程上非常有挑战的问题。不过，对于初学者，使用 Rust 进行 Cuda 或 MPI 编程并不像 Swift、Go 这些选项那么简单。而且，Rust 很慢。与其他语言相比，它就是只蜗牛。即使是小项目，编译时间也长得令人痛苦，而从运行时指标可以看出，Rust 程序的效率比 C 程序低。</p><p></p><p>不难想象，重写经过几十年仔细审查的 C 语言库只会引入新的 Bug。代码中的 Bug 是程序员的噩梦。虽然它确实帮助开发人员避免了一些错误，但它并不能阻止他们无意中写出 Bug。另一个问题是括号上不断出现警告，尤其是 if 语句和 while 循环上。</p><p></p><p>因此，Rust 是一门复杂得多又低效得多的语言，可能很快就会被上述工具所取代。</p><p></p><h2>Rust依然很受欢迎？</h2><p></p><p></p><p>虽然第一手的经验讲述了一个不同的故事，但大多数大型科技公司都在使用 Rust，其他没使用的也有引入计划。最近，Rust 成为 <a href=\"https://archsummit.infoq.cn/2022/hangzhou/track/1282\">Meta </a>\"官方支持的服务器端编程语言之一。这份清单上之前已有 <a href=\"https://www.infoq.cn/article/Y9KJX5zaEXov90wK68JP\">C++</a>\"、Hack 和 Python。</p><p></p><p>Eric Garcia 是 Meta 的一名软件工程经理。他说，“在我们的产品和服务中，Rust 的使用迅速增加，我们致力于成为 Rust 长期的、受欢迎的早期采用者”。</p><p></p><p>Dropbox 在一些关键任务编程中 使用 Rust。当需要良好的安全性、多线程以及减少硬件数量时，其他互联网公司也可能会选择 Rust。例如，一个使用 Rust 编写的高效的 Web 服务可以为运行着数千台服务器的公司节省数百万美元的硬件。</p><p></p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247501770&amp;idx=2&amp;sn=b6bfd9f508e41e7edee9a114c017b431&amp;chksm=fbea7e05cc9df7131b4655f5be63851b96923a03ecfe137cd283e7d12bd726a70f8a85ae0aac&amp;scene=27#wechat_redirect\">谷歌</a>\"还计划在 Android 支持将 Rust 作为系统编程语言之后，在 Linux 内核中使用 Rust。重申一下，这样做的目的是减少安全漏洞。与此同时，微软也开始使用 Rust 来减少 Windows 组件中与内存相关的 Bug。目前，在 GitHub 上，微软有 25 个公共工作库正在使用 Rust。它们中的大多数都只是偶尔有提交，这与 317 个 C++ 库相比就显得微不足道了。</p><p></p><p>Facebook 也加入了 Rust 基金会（2021 年成立的一个组织，旨在让 Rust“成为系统编程的主流语言”），以 强化其与 Rust 的关系。</p><p></p><p>2020 年，<a href=\"https://mp.weixin.qq.com/s?__biz=MzIzNjUxMzk2NQ==&amp;mid=2247526072&amp;idx=1&amp;sn=107be44f568cb45c9db02beacbb268ba&amp;chksm=e8d4997adfa3106c1395208c991a685f188e7b49de7ab552cc81e99b838019478614d880dca3&amp;scene=27#wechat_redirect\">Linux 内核</a>\"开发人员提出用 Rust 重写新的 Linux 内核代码。想法是向之前用 C 编写的内核中添加使用 Rust 编写的新代码。不过，这个想法尚处于研究阶段，还是实验性的。</p><p></p><p>未来，Rust 将成为物联网（IoT）设备上最受欢迎的编程语言，因为物联网设备处理器能力弱，内存小，但又需要很高的安全性。而且，考虑到与大型科技公司的关系，它可能会成为需要向数百万用户提供 Web 服务的互联网公司的最爱。</p><p></p><p>原文链接：</p><p>https://analyticsindiamag.com/should-we-call-rust-a-failed-programming-language/</p>",
    "publish_time": "2022-08-29 15:27:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "聊聊低代码平台发展现状｜InfoQ大会早班车第19期",
    "url": "https://www.infoq.cn/article/tVC4NUTB45S7K2Yi61L1",
    "summary": "<p>“一百个人眼里有一百个哈姆雷特”，“一百个企业之中有一百个低代码平台”。本次大会早班车连线百度&amp;阿里技术专家，聊一聊目前业界低代码平台的发展现状，存在的问题以及未来的的可能性。</p>",
    "publish_time": "2022-08-29 15:51:04",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "百度量子计算研究所所长段润尧：量子计算产业化需要三大基础，钱、时间、人才",
    "url": "https://www.infoq.cn/article/0j4S5hqAlo70xO5qLOy8",
    "summary": "<p>“遇事不决，量子力学。”曾几何时，量子力学成为了人们口中的“玄学”。而利用量子力学原理进行有效计算的量子计算，正在引领新一轮科技发展的浪潮。</p><p></p><p>“万物都是由量子构成的，我们天天生活在量子的世界，但是又感受不到量子。同样的，量子计算让很多人一头雾水，它却能够在信息安全、药物研发等领域有着魔法般的计算能力和应用价值。”8月26日，百度量子计算研究所所长段润尧“AI呀，我去！”百度科技沙龙上表示，从量子技术到量子产业之间有着巨大的鸿沟，如果能够跨越这条鸿沟，新的量子革命将会到来。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/f0/69/f06fc7f21cbf736a9464264876433c69.png\" /></p><p></p><p></p><p>百度量子计算研究所所长段润尧</p><p></p><p>目前，量子计算的产业化发展仍处于相对早期的阶段，但各大科技公司已陆续介入该领域，这在一定程度上推动了量子产业化的步伐。</p><p></p><p>例如谷歌、IBM、微软等美国公司都在加快研发与布局量子计算平台。国内如百度、阿里巴巴、腾讯、华为等都在量子计算方面进行了布局。2019年谷歌在超导量子芯片上实现了量子霸权，2021年中科大在超导和光量子两种平台上也实现了量子优越性，这一系列成果展示了量子计算的巨大潜力。</p><p></p><p>8月25日，在量子开发者大会上，百度发布了自主研发的超导量子计算机“乾始”和全球首个全平台量子计算软硬一体化解决方案“量羲”。</p><p></p><p>据悉，乾始是集 “应用、软件、硬件” 三位一体的工业级超导量子计算机，让量子计算算力触手可及。通过对高潜量子应用、云原生量子软件平台、量子硬件平台等自主可控核心技术的高度集成，乾始将推动量子软硬一体化方案的实施和落地，加速量子计算的产业化进程。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ff/ff32099bcc4d29c75ca3c06562a38bae.png\" /></p><p></p><h3>量子计算产业化面临多个挑战</h3><p></p><p></p><p>在北京亦庄百度量子实验室内，一台超导量子计算机首次面世，揭开了量子计算的神秘面纱。</p><p></p><p>一块量子芯片、一套极低温测试系统便构成了一台超导量子计算机的核心，看似十分简单，但颇具威力。据了解，量子计算机最大的特点就是“算得快”，还不是一般的快 — 它有着经典计算机无法比拟的运算速度。</p><p></p><p>段润尧以信息安全领域公钥加密算法RSA为例介绍道，传统计算机需要200万亿年，而量子计算机只需要几分钟就可以轻松完成。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/10/0c/10154598b384da293c824ff2a175b30c.png\" /></p><p></p><p>百度超导量子计算机“乾始”</p><p></p><p>基于这种全新的计算特点，量子计算在基础科学探索、数字经济、人工智能、信息安全等众多领域具有极大的应用价值。例如，在药物研发领域，传统计算机无法模拟蛋白质的三维结构变化，量子计算机可以轻松搞定；在金融科技领域，衍生品定价、进行投资组合优化和风险评估等复杂的工作，对于量子计算机来说也不是什么难事儿。</p><p></p><p>近年来，在 IBM、谷歌和百度、阿里等国内外科技公司的布局下，量子计算的技术不断突破。不过，量子计算从实验室走向产业化，仍存在巨大的鸿沟。首先，量子计算还处于早期的发展阶段，量子计算的价值需要逐步实现。其次，现阶段量子计算领域的量子硬件和量子服务割裂，量子算力难以转化为用户触手可及的量子服务。第三，量子计算的学科交叉性，使得量子计算的产业化需要聚合多个领域的科研人员、开发者以及合作伙伴持续不懈努力。</p><p></p><p>“量子计算机的应用，理论上已经没有障碍，但实际上每家都在摸着石头过河。”段润尧表示，“有将近70%的大型企业希望能够进行量子计算相关的布局，这种布局不一定是直接用量子计算来解决实际业务，但是企业希望做好量子人才或技术的相关储备。”</p><p></p><p>段润尧认为，量子计算的产业化还需要三大基础：钱、时间和人才。“每一台量子计算机都十分烧钱，钱和时间都是有限的，人才还不能速成，很多高校里甚至都没有量子计算专业和正常培养的渠道。”</p><p></p><h3>每一家大科技公司都应该做好量子准备</h3><p></p><p></p><p>目前，世界各国均在围绕量子科技进行紧密布局，你追我赶，竞争态势十分激烈。中美两国是率先实现“量子霸权”的国家，这离不开政策、资金的大力支持。2018年，美国通过《国家量子倡议法案》，计划投资1000亿美元在量子计算等10个领域。在中国，量子信息已被列入《“十四五”规划和2035远景目标纲要》优先发展的“三驾马车”之一。</p><p></p><p>在国家政策的大力支持下，段润尧认为，每一家大的科技公司都应该做好量子准备，否则将难以应对量子产业化时代的到来。</p><p></p><p>百度对量子计算的布局始于2018年，这一年，百度成立了量子计算研究所，开始进行量子计算技术储备与应用路径探索，并先后发布了首个云上量子脉冲系统“量脉”，首个云量一体的量子机器学习平台“量桨”、首个云原生量子计算平台“量易伏”等产品。</p><p></p><p>据介绍，区别于谷歌、IBM的量子计算技术路线，百度侧重研发面向产业化的超导量子计算机。8月25日，百度发布了“乾始”超导量子计算机，和首个全平台量子软硬一体化解决方案“量羲”。&nbsp;“乾始”和“量羲”打通了量子硬件、量子软件和量子应用，实现了量子算力到生产力的转化，量子计算产业落地“最后一公里”问题有望获得突破。同时，各类量子芯片也可以做到“即插即用”，可以让用户更低门槛、更便捷地获得量子算力，做到“人人皆可量子”。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/af/f5/af9d94d39b47a83a8a470b6c689945f5.jpeg\" /></p><p></p><p>百度量子平台全景图</p><p></p><p>目前，围绕量子计算的产业生态已经初具雏形。IDC报告显示，全球量子计算市场将从2020年的4.12亿美元增长到2027年的86亿美元，6年复合年增长率超过50％。&nbsp;“开发者、科技公司、科研机构等每一个组织都做好自己擅长的事情，才能够构建成一个健康的量子生态。”段润尧称。</p><p></p><p>随着产业链上下游企业的加入，量子计算正在变得触手可及。段润尧介绍，下一步，百度量子将致力于为企业提供制定相应策略、完善解决方案、实时投入资金部署等一系列开源的方案，并赋能人工智能、能源、制造、金融、交通等多个领域，朝着‘人人皆可量子’的愿景努力。</p>",
    "publish_time": "2022-08-29 15:51:57",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]