[
  {
    "title": "Netflix工作10年，我收获的一些关键经验",
    "url": "https://www.infoq.cn/article/wMuuGUleIPIIDhWGibu5",
    "summary": "<p>开发者体验在很大程度上取决于开发人员所在的公司——与公司的价值观、文化和业务驱动力有关。随着公司的发展，公司的价值也会发生变化，相应地，开发人员创建、部署和维护代码的方式也会发生变化。本文讨论了为什么以及何时会发生对开发人员需求的变更、如何赶在变更之前做出改变，以及在发生变更时如何适应它们。在本文中，我将分享自己和同事多年来在Netflix收获的一些关键经验。</p><p></p><h1>公司成长带来的影响</h1><p></p><p>&nbsp;</p><p>速度和稳定性之间的平衡会随着公司的成长而发生变化。当一家公司在开始它的旅程时，他们会快速迭代并尝试不同的方法。他们通常需要快速构建出一些东西并对其进行测试，然后放弃它们或让它们继续演进。这种“原型”阶段通常对稳定性要求不高，因为失败的影响范围有限。</p><p>&nbsp;</p><p>然而，随着产品用户基数的增长，对稳定性和成本效益的期望将变得更高。这通常会导致对产品变更采取更谨慎（和更缓慢）的做法，稳定性将影响保持高速增长的能力。这可以通过建立稳定的CI/CD系统来实现，这个系统有助于达成一定程度的信任，从而实现更快速的增长。当开发人员相信他们的变更不会破坏生产系统，他们就能更专注于提升创新速度，而不会在手动验证变更上花费过多的时间。</p><p>&nbsp;</p><p>随着业务的增长，这种信任在发布过程中就变得至关重要，良好的测试实践（如测试金字塔）将为产品取得成功铺平道路。尽管如此，CI/CD过程仍然会影响验证过程的速度，并且随着整个产品系统的复杂性的增长，这种影响也将随之增加。</p><p>&nbsp;</p><p>多年来，Netflix在我们的标准CI/CD流程中引入了许多验证步骤，包括库版本依赖锁定（隔离特定库的故障）、自动化集成和功能测试，以及金丝雀测试。根据服务的复杂性程度不同，每个阶段需要花费相应长短的时间。如果一个服务有很多依赖项，那么其中一个依赖项在构建过程中导致失败并需要对其进行调试的可能性就会更大。功能更复杂的服务将占用更多的测试资源，也将花费更长的运行时间，特别是在需要进行更多集成和功能测试的情况下。在对具有多种流量模式（例如不同的设备、请求类型、数据需求）的服务进行金丝雀测试时，需要更长的时间来消除噪音并确保覆盖所有的流量模式。</p><p>&nbsp;</p><p>为了保持上述需求的灵活性，我们采用微服务架构来创建服务，因为微服务的依赖图更小、测试时间更短和噪音更少。此外，我们避免在没有简单的覆盖过程的情况下阻塞发布过程。如果一个依赖项版本导致构建失败，可以很容易回滚到或锁定前一个版本。测试失败可以根据所做的变更进行分析和修复、忽略（之后再进行重新评估）或修改。对于金丝雀测试失败，可以单独分析原因，开发人员可以根据需要选择继续发布。CI/CD的速度与稳定性之间的平衡最终由服务维护者根据他们自己的舒适度和业务影响来决定。</p><p></p><h1>集中式管理与个体选择</h1><p></p><p>&nbsp;</p><p>在某些时候，公司可能需要做出决定，是否让开发人员独立选择和维护符合他们业务需求的技术，或者推荐（或强制）由公司集中提供支持的技术。在我看来，集中式工具和本地工具之间的区别是集中式工具让公司能够在整个产品生态系统层面实现一致性。这种一致性可以是一致的集成（安全性、洞察力、弹性、CI/CD等）或最佳实践（架构、模式、依赖管理等）。从整体业务角度来看，这种集中式一致性可能非常强大，但可能对特定的应用场景不利。如果你定义了一个单一的一致性解决方案，那么几乎总是会有一些应用场景需要不同的方法才能在其业务驱动下获得成功。</p><p>&nbsp;</p><p>例如，我们指定Java和SpringBoot作为服务技术栈基础。然而，在很多情况下，数据工程需要使用Python或Scala来满足他们的业务需求。我们使用Gradle作为构建工具，它对于我们选择的技术栈来说非常有效，但对于使用Scala的开发人员来说，使用SBT可能更适合。因此，我们需要评估是否需要为个别的应用场景增强Gradle，或者允许（和支持）Scala开发人员使用SBT。</p><p>&nbsp;</p><p>在集中式与本地业务需求的决策权重方面做出正确的平衡，并能够对其评估权衡，这是一个持续演化的过程。要了解一个应用场景在什么情况下应该采用集中式技术栈，这需要通过查看数据来进行评估——用户的数量、工作流对业务的影响、集中式技术栈需要多少人提供支持？所有这些因素都需要考虑到，如果有足够的优先级和增长空间，那么就应该转向集中式技术栈。</p><p>&nbsp;</p><p>随着Netflix的文化开始推崇自由和责任，我们经常会看到开发人员决定在他们的应用场景中选择自己的解决方案，并对他们的选择责任。对于业务影响较小的小型应用场景，这是一种很好的选择。但如果存在影响范围不断扩大的可能性（越来越多的人开始使用它，或对业务的影响较高）,那么这个选择从长期来看对业务是有害的——如果只有一个人提供技术支持，或者那个人转到其他项目，当没有其他人能够提供技术支持时就会出现技术债务，因此这个选择会成为快速发展能力的瓶颈。</p><p>&nbsp;</p><p>因为并非所有的应用场景都能从集中式技术栈中受益，所以我们尝试采取分层的方式，我们提供了解耦的组件，这些组件可被用在具有高度集中式需求（例如安全性）的技术栈中。它们可以被单独使用（和管理），但随着你对整个生态系统依赖得越来越多，它们的集成和集中管理程度也会越来越高——我们称之为引导路线（Paved Path）。普通开发人员更容易接受集中式需求管理，而那些具有独特性质的业务可以选择自我管理和选择自己的道路——做出决定并承担相应的职责，例如，在出现问题时需要投入额外的时间，在未来可能需要迁移到集中式技术栈（如果受支持）的成本，如果这项技术被证明成本过高，将它从生态系统中移除有多容易。</p><p>&nbsp;</p><p>要走上这条引导路线，通常需要将服务迁移到新技术。在某些情况下，将遗留服务迁移到新技术所带来的破坏和成本比只在出现问题时才在服务上花费时间来得更低。我们在实践当中体会到了这一点，例如，对于最近曝出的Log4Shell漏洞，我们需要（反复地）升级所有系统的log4j版本。对于已经走上引导路线的服务，开发人员无需操心，所有东西都在几个小时内完成升级。对于那些部分处于引导路线上的服务，需要少量的互动，并在一天内完成升级。对于那些还未走上引导路线的服务，开发者需要花费好几天的时间进行密集的调试，经历了多个发布周期才能完成升级。不过，在宏大的计划中，这仍然比将预先迁移到引导路线更具成本效益，且对业务的影响更小。</p><p></p><h1>单代码库与多代码库策略</h1><p></p><p>&nbsp;</p><p>对于公司如何在单代码库与多代码库策略之间做出决定，目前还没有明确的答案，因为随着产品规模的扩大，这两种方法都存在重大缺陷。我能说的是它们在产品规模达到某个百分比时对发布速度产生的影响。如果采用了单代码库，要针对产品的子集（根据设计）发布版本是比较困难的。例如，如果你想发布代码变更或新版本（例如新的JDK版本），应用程序所有者可能很难在其他人之前发布变更。此外，单代码库发布变更的速度可能会慢得多，因为它必须通过所有产品的验证才能发布。</p><p>&nbsp;</p><p>相反，Netflix的多代码库方案提供了一种高度通用和快速的发布方法——每当发布了一个新的库版本，就通过自动依赖项CI/CD流程来更新依赖了这些库的应用程序。各个应用程序的所有者可以定义他们希望使用的代码变更版本（不管是好的还是坏的），并且在发布之后就可以立即使用。这种方法有几个关键的缺点：依赖版本管理非常复杂，版本问题调试的负担在于使用了这些依赖项的应用程序这边（如果你想更深入地了解Netflix是如何解决这种复杂性的，可以参考“<a href=\"https://nebula-plugins.github.io/videos/charlotte_jug_2021_robertoperezalcolea.html\">使用Nebula进行大规模依赖管理</a>\"”）。如果一个服务发布了一个新库，虽然它对99%的应用程序来说是完全可行的，但通常会有一小部分应用程序存在一些传递性依赖问题，问题，必须加以识别和解决。</p><p>&nbsp;</p><p>从长远来看，我们正在朝着一种混合方法的方向发展，我们将支持多代码库但单点发布的方法——个体代码库所有者可以发布新版本，但必须通过一个集中式的测试管道，为他们的消费者应用程序构建和运行库。如果管道失败，库所有者就有责任决定下一步采取什么步骤来解决问题。</p><p></p><h1>技术栈的融合</h1><p></p><p>&nbsp;</p><p>关于如何将整个公司迁移到一致的技术栈，你可能会听到“胡萝卜还是大棒”的比喻——你是提供吸引人的新特性和功能（胡萝卜）让人们自己选择，还是强制开发人员使用引导路线上的产品（大棒）？在Netflix，我们试图倾向于胡萝卜的方法，并为少数业务需求保留大棒。</p><p>&nbsp;</p><p>理想情况下，人们会采用胡萝卜的方法。集中式方法可能更适用于一些特定的场景，但从整体业务的角度来看，它具有很高的强制性。在这些情况下，个别开发人员不会有什么好处，甚至会给他们现有的开发工作流增加额外的障碍和复杂性。对于这些情况，我们强调从公司利益出发，并提供明确的理由说明其重要性。我们尽量减少任何额外的负担，并尽可能展示一致性方法的好处。</p><p>&nbsp;</p><p>在极少数情况下，我们会通过自上而下的方式提供一致性的技术栈，此时对于个体团队来说，迁移到新技术的优先级高于其他优先级。这通常是出于安全方面的考虑（如前面提到的Log4Shell漏洞案例），或者当一致性技术栈的整体业务利益超过单个团队的需求时——例如，在迁移的后半段，对剩余部分的支持成本变得过于昂贵且难以维护。</p><p></p><h1>自己构建与外部购买</h1><p></p><p>&nbsp;</p><p>构建与购买指的是完全内部构建与使用外部产品。在Netflix，我们在可能的情况下倾向于开源（OS），我们既生产也消费大量的开源产品。</p><p>&nbsp;</p><p>如果可能的话，我们倾向于“购买”，并且偏爱开源产品。如果我们能找到一个与需求高度一致的开源项目，并且这个项目有蓬勃发展的社区，那么它极有可能成为我们的候选方案。但是，如果找不到理想的开源项目，或者与现有项目在功能上有显著差异，我们将考虑在内部自己构建。在功能需求较小的情况下，我们通常会选择完全在内部构建和维护。如果项目比较大或者对外部有很大的影响，我们会考虑将其作为一个开源项目发布。</p><p>&nbsp;</p><p>如果你选择开源，不管你是选择发布自己的开源项目还是使用外部项目——这两种选择都需要开发成本。发布开源项目是需要成本的，因为需要围绕产品建立社区——代码和功能评审、举行会议、与内部使用保持一致。受欢迎的开源项目通常需要至少一名开发人员全职从事开源管理工作。如果选择使用外部产品，就需要保持与社区的工作关系——为产品做出贡献、影响未来的发展方向，并与内部使用保持一致。如果外部产品的发展方向因公司的使用而发生重大变化或开源项目被解散，这可能会成为一个风险点。</p><p></p><h1>开发者体验的演化</h1><p></p><p>&nbsp;</p><p>随着公司规模的增长，一致性开始变得越来越重要。在规模较小的发展阶段，开发人员可能需要跨多个技术栈和领域——他们管理着整个技术栈。随着技术栈的增长，将工作重点放在特定部分的需求变得越来越明显，于是一个技术栈有了更多的开发人员。随着越来越多的人参与到这个工作流中，技术栈的特定部分变得越来越专业，他们就有了更多的机会来优化他们不需要关心的东西——更集中化的基础设施、抽象和工具。从集中化的角度接管这些工作可以将他们解放出来，让他们专注于特定的业务需求，而为这些集中化组件提供支持的小团队可以为大量特定于业务的开发人员提供服务。</p><p>&nbsp;</p><p>此外，随着公司的增长，我们需要面对技术和需求会不断变化的事实，在过去可能失败的东西到了现在可能是可行的解决方案。我们需要树立一种接受和包容失败的态度——快速失败，然后再尝试。例如，我们长期以来一直<a href=\"https://netflixtechblog.com/what-is-an-a-b-test-b08cc1b57962\">通过A/B测试系统来测试面向Netflix用户群的新功能</a>\"，并经常会取消那些被认为对用户增长没有好处的功能。如果产品有了改进，或者用户需求发生了变化，我们也会回来重新试用这些功能。</p><p>&nbsp;</p><p>这方面的另一个内部例子是我们的Publisher Feedback功能，它用于在候选库发布到我们的多代码库生态系统之前对其进行验证。对于每一个候选发布版本，我们都会用指定的验收测试阈值测试依赖项的下游消费者，并在发生故障时向库发布者提供反馈，或者将这个版本自动作为库构建的一部分。不幸的是，因为基于常规CI工作流提供带外构建环境比较困难，所以我们也很难提供比编译时更多关于依赖关系的反馈，并且当我们意识到我们不打算使用与我们最初计划相同的基础设施进行声明式CI时，我们不得不重新进行评估。我们通过Rocket CI构建了一些基于PR（拉取请求）的功能，在现有的Jenkins基础设施上提供API、抽象和功能，同时避免与Jenkins构建环境产生耦合。</p><p>&nbsp;</p><p>我对在快速增长的公司工作的工程经理们的建议是：不要害怕尝试新事物，即使以前失败过。技术和需求在不断变化，在过去可能失败的东西到了现在可能是可行的解决方案。</p><p></p><p>作者简介：</p><p>Phillipa Avery是Netflix Java平台团队的经理，该团队支持Netflix所有后端服务从构建到部署的开发者体验。她来自澳大利亚，在过去的10年(大约10年)一直住在加州，喜欢花时间阅读、散步和举重训练——有时还尝试同时做这三件事。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/developer-experience-netflix/\">Scaling and Growing Developer Experience at Netflix</a>\"</p><p>&nbsp;</p>",
    "publish_time": "2022-08-02 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "TCP协议已不适用现今的数据中心",
    "url": "https://www.infoq.cn/article/hGEXgDo8C2wPTok21NUf",
    "summary": "<p></p><blockquote>四十年过去了，此番新协议的出炉也许又将掀起一波变革浪潮…</blockquote><p></p><p></p><p>作为过去四十年间最根深蒂固的标准之一，大家耳熟能详的传输控制协议（TCP）没准即将走向生命周期的终点。而这波变革的起点，应该会从全球规模最大的数据中心应用场景开始。但对于其他日常应用场景来说，哪怕有望把消息传递速度提升 100 倍，似乎也无法抵偿协议转变带来的巨大麻烦。</p><p></p><p>不过从历史经验来看，一切曾经专属于超大规模企业的技术优势，最终都将为中型 IT 部门所用。所以……我们不妨拭目以待。</p><p></p><h2>TCP 协议不适用如今的数据中心</h2><p></p><p></p><p>四十年前，TCP 一诞生就将目光投向多达上千个地理分布节点网络，且各节点间往往相距数百英里，属于名副其实的前沿科技。即使到今天，TCP 协议仍然能够实现大量数据的远距离传输工作，因此继续作为几乎一切 Web 技术的默认基础。</p><p></p><p>然而，如今的数据中心可跟当初大不相同。现在我们需要跟成百上千台机器打交道，在极短的时间间隔内进行通信。具体来讲，老迈的 TCP 是为了在毫秒单位下将数据包由网络一端传输至另一端而设计的，如今的数据中心却要求微秒级的数据传输速率。</p><p></p><p>斯坦福大学计算机科学系教授 John Ousterhout 在采访中表示，“TCP 的问题在于，它妨碍了我们运用数据中心网络的强大能力。现有网络已经可以在更短的时间尺度上实现机器之间的快速消息传递，但 TCP 拖了后腿。TCP 在设计上就没有考虑到这样的使用场景。”</p><p></p><p>触及 TCP 能力边界早已不是什么新鲜事，研究人员也想办法在某些核心问题上取得了进展。例如在拥塞控制中解决多台机器同时向单一目标发送消息的问题，就是依靠网络备份实现的。但这些都是在给本质上不适用的东西“打补丁”，做增量化调整。而以谷歌为代表的数据中心巨头们，已经不堪忍受 TCP 对于现实应用的种种限制。</p><p></p><p>在他看来，“对数据中心而言，TCP 中的每个设计决策都可以说是错的，而且没法用任何手段加以根治。唯一的办法就是全面做出修改，包括 API，也就是人们用来发送和接收数据的接口，全都得改。”</p><p></p><p>当然，这事说着容易做起来难。用“根深蒂固”甚至都不足以表达 TCP 的普及程度——几乎一切软件都依赖于它，而且是以非常具体、非常紧密的方式依附在它之上。</p><p></p><h2>颠覆者 Homa 出现</h2><p></p><p></p><p>作为系统研究领域的参与者之一，Ousterhout 和他的同行们打算放下历史包袱，勇敢探索这条荆棘丛生但又意义重大的道路。</p><p></p><p>有些朋友可能觉得 Ousterhout 这名字有些耳熟。没错，他目前的工作是在斯坦福大学研究分布式系统和软件，而且之前就曾经为不再适合时代需求的事物开发过替代技术，例如三十多年前的高级 Tcl（工具命令语言）脚本语言。</p><p></p><p>这段经历也促使他加入 Sun 公司，最终建立了自己的 Tcl 支持与工具开发商 Scriptics。在他的专利探索与研究当中，贯穿始终的主题一直是从传统技术根源中提取精华，并用更契合现代系统思维的事物取而代之。</p><p></p><p>对于 TCP 这个“历史遗留问题”，他给出的答案是 Homa。Ousterhout 已经在 Linux 内核上实现了 Homa，并且为生产环境做好了准备。接下来的挑战在于如何推进应用程序转换，让自己的新接口为更多生态成员所接纳。这是一项宏大且漫长的计划，毕竟目前数以百万计的应用程序都依赖于 TCP。</p><p></p><p>所以工作的第一步就是从超大规模运行环境开始，帮助受 TCP 影响最大的应用程序和用户。大多数运行在谷歌、亚马逊或 Azure 超大规模一数据中心内的应用程序，在编程时往往不会直接使用 TCP 套接字接口，而是使用可实现远程过程调用的库。具体来讲，其中一个程序会向其他机器发送一条消息，要求对方执行一项任务，再通过简短的响应获取执行结果。超大规模数据中心的操作者们大多依赖于相应的远程过程调用（RPC）框架，而且通常会选择内部原研工具，例如谷歌的 gRPC。在 Ousterhout 看来，如果谷歌能够修改自家框架以支持 Homa 和 gRPC，那原本的应用程序只要稍作调整应该就能对接自己的 Homa 新协议。</p><p></p><p>他解释道，“这也是脱离 TCP 的最大希望所在。如果我们能迈出这第一步，那大部分最重要的数据中心应用程序都可以用上 Homa 新协议。”他很清楚，相当一部分应用程序依靠 TCP 就足够了；只有那些规模最大的数据中心应用程序才有动力转向 Homa，配合内部定制的 RPC 工具将消息传递速度提高上百倍。对任何超大规模基础设施管理者来说，这都是一笔不容忽视的重大性能收益。</p><p></p><h2>有关 TCP 协议的研究，国内早已开始</h2><p></p><p></p><p>在过去的几十年中，TCP 相关的基本操作未做太大改动，但其拥塞控制算法经历了几代学者和工程师的迭代更新，比如 RFC2581《TCP 的拥塞控制》、加州理工学院研发的 FAST TCP 以及目前在数据中心网络中被广泛使用的 DCTCP 等。</p><p></p><p>然而，在过去几十年中发生变化的不仅仅是算法本身，网络环境也发生了巨大变化，尤其是云计算出现之后，云租户和应用对网络带宽、延迟以及稳定性的要求比过去的互联网用户提升了一到两个数量级，这导致传统 TCP 协议开始难以适用于云网络（数据中心网络）的高速、低延迟环境。虽然 RDMA 等新一代技术摒弃了传统 TCP 中的一些做法，以换取网络性能的大幅提升，但是 RDMA 拥塞控制算法本身蕴含着相当高的不稳定性风险，阻碍其在大规模网络中得到广泛应用。</p><p></p><p>三年前，阿里巴巴的一群工程师成功研发出新一代、超高性能云网络环境下对传统 TCP 和 RDMA 拥塞控制算法的替代方案–HPCC，旨在同时实现高速云网络的极致性能和超高稳定性。这一成果已被计算机网络方向世界顶级学术会议 ACM SIGCOMM 2019 收录，引起了国内外广泛关注。</p><p></p><p>HPCC 是在高性能的云网络环境下，对现有的拥塞控制的一种替代方案。它可让数据中心网络中的报文稳定的、以微秒级的延迟传输。当前主流的拥塞控制算法主要依赖于端的信息（例如丢包信息，延迟信息），以及极为有限的设备反馈信息（如 1 个比特的 ECN）做拥塞控制，而 HPCC 则创新性地运用了最新网络设备提供的细粒度负载信息而全新设计了拥塞控制算法。在 HPCC 的帮助下，主流的云应用，比如分布式存储、大规模机器学习，高性能计算等性能会得到几倍到几十倍不等的提升；云租户相应地将会感受到延迟显著降低，效率和性价比大幅提升。</p><p></p><p>在计算机网络里，传统的拥塞控制算法主要通过在端上调节流量，以维持网络最佳平衡状态。发送方根据网络承载情况控制发送速率，以获取高性能并避免拥塞崩溃（congestion collapse）导致网络性能下降几个数量级，并在多个数据流之间产生近似最大化最小流的公平分配。发送方与接收方确认包、包丢失以及定时器情况，估计网络拥塞状态，从而调节数据流的发送速率，这被称为网络拥塞控制。HPCC 的核心理念是利用精确链路负载信息直接计算合适的发送速率，而不是像现有的 TCP 和 RDMA 拥塞控制算法那样迭代探索合适的速率；HPCC 速率更新由数据包的 ACK 驱动，而不是像 DCQCN 那样靠定时器驱动。目前业内对网络传输协议的选择基本分为两大类：一类是以 TCP 为主，持续探索如何将 TCP 的性能调至更优的状态；另一类则希望研究可以取代 TCP 的新传输协议。HPCC 的出现为下一代拥塞控制开拓了一个全新的方向，无论是 TCP, 还是 RDMA，抑或是某种新的传输层协议，都可以直接使用 HPCC，或是在其基础上构建适用于高性能云网络的拥塞控制机制。</p><p></p><p>参考链接：</p><p></p><p><a href=\"https://www.theregister.com/2022/07/27/replace_tcp_datacenter/\">https://www.theregister.com/2022/07/27/replace_tcp_datacenter/</a>\"</p><p></p><p></p>",
    "publish_time": "2022-08-02 08:28:01",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "拆中台的传闻破了，中台的“平民化”时代要来了？",
    "url": "https://www.infoq.cn/article/HwD2iMWxZ3MW7HloOHiD",
    "summary": "<p>近两年，业内一直流传着“阿里在拆中台”的消息，阿里方面一直没有正面回应该传闻。直到近日，阿里巴巴宣布成立专注企业数智服务的子公司——瓴羊智能服务公司，正式打破了这则传闻。瓴羊的带队人朋新宇一直在阿里数据技术和产品部工作，也是阿里内部最了解数据中台的人之一。作为阿里中台的见证者，朋新宇在接受媒体采访时提到：“其实阿里内部的表述是中台要做薄，但并不等于拆中台。一年试错，三年成形，五年常态——中台已经做了五年了，就像盖房子一样，盖完房子拆掉周边的脚手架，但不等于拆房子。”</p><p>&nbsp;</p><p>这对中台领域来说绝对是个好消息，但为什么还是有用户觉得中台没成效？企业数字经济增长缓慢的问题到底在哪？三年前疫情未开始之际建设中台的那批企业建好了吗？有效果吗？实现中台“平民化”又是什么概念？本文，我们与InfoQ的老朋友、云徙科技副总裁兼CTO李楠共同探讨了上述话题。</p><p>&nbsp;</p><p>中台没有颠覆性创新？周期长，见效慢？</p><p>&nbsp;</p><p>时至今日，做不做中台的企业想必都对此有了一套自己的理解。暂不论各种说法的对错，此处仅强调中台不是一种单纯的技术手段，有些时候企业并不是需要中台解决某个技术问题，而是如何创新。</p><p>&nbsp;</p><p>“有些企业会认为ERP就能解决问题，何必需要中台。如果是这样，我们当初就不会出来创业做中台了，我们原来就是做ERP的。”首先，在ERP的情景下，生产要素可能分散进入到多个不同的系统，不利于数据的分析预测；其次，传统的技术架构很难支撑如今消费者对实时性的要求，瞬时流量的冲击下系统十分脆弱；最后，如果没有中台统一承接各业务线的流转，很多场景根本无法实现，比如缩短消费者下单和到货之间的时间差，只有通过中台的方式将销量、库存、原材料等数据全部打通，让订单可以智能化路由才有希望做到这件事情，没有中台，这些场景是很难实现的。</p><p>&nbsp;</p><p>在市场近两年关于中台的传闻中，“中台无法做颠覆式创新，仅适合做组合式创新”流传甚广，看起来与阿里要将中台做薄甚至拆中台的传闻十分契合。</p><p>&nbsp;</p><p>单从技术层面来看，中台可能算不上是颠覆性的，而是很多技术的集合，是一个系统化工程。但从应用来看，中台在帮助企业数字化转型上起到的作用是颠覆性的，中台将数据与业务相结合，对数字化能力的抽象和组装，对数字资产的建立是对传统方式的颠覆。李楠表示，云徙科技强调数据以用为先，从用数据的角度建立数据支撑，在数字中台的支撑下，用户所积累的数字化能力与过去相比是颠覆式的，但具体到其中的每一项技术，我们并没有创造一种新的编程语言或数据加工技术。</p><p>&nbsp;</p><p>至于中台周期长，见效慢的问题，可能与企业选择的路线有关。以数据中台为例，存在三种不同的模式，第一种是全域数据中台，将供应链全过程的所有数据资产建立起来进行集中管控，超大数据规模的互联网企业确实可以建成，因为本身的数据量足够丰富，从中可产生的经济形式足够多，可以将所有商业要素落地，值得企业花时间投入，但对其他企业而言太过笨重，代价过高；第二种是偏领域化的，比如只做消费者的数据，而且是仅做营销的消费者数据，目的单纯且具体，只要这个领域的数据能够支撑达成营收目标就可以，并不需要企业所有的数据资产接入，这类中台的建设难度低、周期短、收效快；第三种是业务数据一体化的数字化中台，主要为了解决具体的业务问题，比如门店智能补货，基于销量预测补货周期，这类中台将业务场景和流程以及该场景下需要的数据、算法集成在一起，更科学地运转业务流程。</p><p>&nbsp;</p><p>“技术与业务完美融合的中台是企业数字商业的新基建。企业建设系统的技术需要与业务整合，才能更贴近应用场景，更好地为数字化转型服务。”</p><p>&nbsp;</p><p>认为中台收效甚微的大多企业可能只是看到了其中一种建设方式，李楠表示上述第三种方式可以通过SaaS化的形式交付，业务流程相对标准，数据嵌入其中，一个月就可以完成在一个社区门店的适应性，并且可通过参数调休获得最高性价比。</p><p>&nbsp;</p><p>在选择了正确的路线之后，2019年已经有不少企业坚定地投入到了中台的建设中，这批企业已经通过中台获得了相应收益。随后而来的疫情让更多企业开始建立线上销售渠道，迫切地开始了数字化转型，中台的热度一路高涨。</p><p>&nbsp;</p><p>那么，中台在企业数字经济增长的过程中到底解决了哪些问题呢？</p><p>&nbsp;</p><p>企业数字经济增长到底存在哪些问题？</p><p>&nbsp;</p><p>“数字化转型的最终目的是为了整体营收有更高质量，向渠道变革要效率，向新的消费人群要收益。”</p><p>&nbsp;</p><p>企业要想做好数字化，首先从面临的难点着手，老生常谈的一句话是“数字化是一把手工程”，战略目标的制定是第一步，紧随其后的是业务目标、组织架构调整、人才储备以及相应的文化改革，不要在系统要上线的时候才发现使用方还是两个业务部门，还没有实现资源打通。</p><p>&nbsp;</p><p>其次，从技术选型上来看，市场是存在一些误区的，比如过分放大自主可控，所有事情都想从0到1开始干，或者希望厂商可以把源代码一起打包出售。李楠认为这种行为属于矫枉过正，站在别人的肩膀上可以走得更快、更远。</p><p>&nbsp;</p><p>然后，在供应商的选择上，业务、技术能力以及产品成熟度都是非常重要的，个别企业会过度看重技术先进性而忽略了对业务模式的理解、对业务场景和流程的分析，最后出来的产品难以契合企业的实际业务需要，或者是接近成品的半成品。对提供中台的厂商而言，这个问题同样存在，在这种情况下，如果企业具备一定的实力可以自己走完全程，如果不具备技术实力和人才储备，需要云徙这样的厂商帮助企业走完全程。</p><p>&nbsp;</p><p>最后，数据质量参差不齐。很多企业的数据基础比较差，需要先完善数据信息才能有效进行智能分析，这个过程可以选择和靠谱的合作伙伴一起完成。</p><p>&nbsp;</p><p>疫情反复三年，很多企业的现金流大幅缩减，大部分企业是不愿意在技术改造上投入过多成本的。在这种背景下，企业如何把数字化转型这件事情做好呢？</p><p>&nbsp;</p><p>“我认为对企业而言有两件事情是非常重要的，一是开箱即用的、中台架构的数字化创新系统；二是数字化创新平台具备可组装的特点，这会让企业以一种非常民主化的、门槛非常低的形式消费和组装数字化能力。”</p><p>&nbsp;</p><p>如何让中台更加“平民化”？</p><p>&nbsp;</p><p>不论外界对中台的看法是什么，云徙科技一直再尽一切努力让中台更加“平民化”，让中台更具可组装性，降低企业的使用门槛，更加低代码化，将业务应用开发与数据开发一体化，可视化绝大部分操作。“中台并不意味着企业用户本身要写大量代码才可以使用，我们一直在试图降低中台的使用门槛，企业也没必要自己建一个厚重的中台，云徙科技现在可以通过公有云服务或者私有化订阅的方式交付，企业直接租用就可以。”</p><p>&nbsp;</p><p>2020年，云徙科技提出了“软件定义中台”的理念，并通过模块化的方式重新规范了企业运营。这可以看作可组装思想的萌芽阶段。2021年，云徙科技推出的数字中台5.0则是可组装理念的初步实践，“可建、可变、可控”成了产品的灵魂。2022年7月正式发布的新一代企业营销数字化“SaaS +PaaS”平台，则是云徙科技在可组装的道路上迈出的重要一步。</p><p>&nbsp;</p><p>组装式中台可灵活应对企业演进式业务的系统需求。在一体化创新平台之上，是云徙科技可组装的业务与数据能力，如用户域、营销域、交易域、结算域等；同时支撑最上层快速创新的商业场景，比如门店促销、积分换购、精准营销等。</p><p>&nbsp;</p><p>组装式中台通过抽象建模、分析相似性和差异性，可以有效管理通用性和可变性。根据不同行业和业务模式的特性，细分领域到不同层级的业务能力，以功能包的形态经由能力共享市场流转。</p><p>&nbsp;</p><p>组装式中台可以实现开发时可拓展，上架时可预装，部署时可替换，运行时可配置。由此，企业可根据具体的业务场景按需快速组装和迭代扩展已有的数字化能力，即时生产出合适的解决方案，支持业务的演进。</p><p>&nbsp;</p><p>采访中，李楠提到可组装中台需要考虑两方面内容，一是组装什么；二是如何组装。如果仅提供一个组装的工具以某种技术手段将一些内容组装起来，而这些内容与业务的相关性不是很大，就失去了意义。云徙提供的中台之所以息息相关，是因为从营销场景出发，可组装的就是中台里面的子单元，可以叫业务能力或者API。</p><p>&nbsp;</p><p>怎么组装？一是必须能做到规模化复用；二是不同类型的能力可叠加；三是单元模块可定制化，可以通过低代码、可视化的方式去修改应用模块使用的数据模型等，可以将不同的子应用模块进行组合以解决不同场景的问题。</p><p>&nbsp;</p><p>“我们发现为了让中台更具可组装性，我们不得不对某些能力进行重构，以行业的颗粒度来进行解藕，解藕之后再进行组装，这才是组装的意义所在。”</p><p>&nbsp;</p><p>“通过可组装，我们在中台层把最难啃的骨头啃了，以后基于这个平台做开发的人，只要使用相应的开发工具，便可达到事半功倍的效果。”</p><p>&nbsp;</p><p>与此同时，云徙科技还加入了信通院可组装应用开发技术专家组，与各方专家共同研讨制定可组装技术的相关规范，推动可组装技术的应用落地。</p><p>&nbsp;</p><p>“平民化”的另一个表现是开箱即用。2021年，数字中台演进至5.0阶段，云徙科技确立了“一平台多企业云”战略，让企业无需花费大量成本自行定制，在云上就可以使用中台的能力。目前，数舰企业云已经形成了营销云、交易云、服务云、智慧云，覆盖营销数字化全链路的产品矩阵，并可灵活配置成消费者运营、新零售、BC一体化等解决方案。据李楠介绍，数舰企业云增加了许多新的模式和功能，不仅围绕公域运营的典型场景增强了消费者运营，还可以赋能门店进行更好的私域消费者运营；新增了BC一体化的云仓系统，实现仓库的统仓统配,方便库存管理；另外在渠道数字化领域不断开拓，加强了结算等功能，并提供一些金融属性的服务，如针对经销商和代理商进行授信订货等。</p><p>&nbsp;</p><p>此外，低代码也是让中台更加平民化的一种技术手腕。采访中，李楠表示，低代码是一种手段，但并不是唯一的方法，不要神化低代码。在最新的版本中，云徙大量应用了低代码技术，让应用侧更加灵活，降低扩展和定制的门槛，提高效率。</p><p>&nbsp;</p><p>面向未来，李楠认为一是需要不断增强中台的可组装能力，实现更细颗粒度的可组装化；二是作为桥梁，中台必须把数据与业务完美地结合在一起，数据开发与业务开发是一体化的，而不是割裂和各自为政的；三是客户需要的是集成的一体化平台，而云徙科技的任务就是用系统工程的方法，将一系列复杂的技术进行整合，通过PaaS这样的平台进行整体化输出，赋能业务增长。</p><p>&nbsp;</p><p>从现有信息来看，很多厂商对中台的讨论过度集中在技术方法论层面，而在产品化层面缺乏行业标准，各类厂商提供的中台产品之间无法互通，这就导致企业很容易被单一厂商绑定，而又没有哪一个厂商擅长解决用户全场景遇到的所有问题，但企业却不得不持续为单一厂商提供的产品买单，即便是一个错漏百出的方案。未来，相关标准的出台也会让中台领域去伪存真，发展得更加健康。</p><p>&nbsp;</p><p>嘉宾介绍：</p><p>&nbsp;</p><p>李楠，云徙科技副总裁兼CTO</p>",
    "publish_time": "2022-08-02 08:34:05",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "运行在太空的中国开源项目，如何用不到5年时间获得全球百万开发者青睐？",
    "url": "https://www.infoq.cn/article/rCCZv6wjahva3JBxcD0g",
    "summary": "<p>&nbsp;</p><p>中国的开源历史可以追溯到1994年，当时中科院的<a href=\"https://hlwksls.blogchina.com/983268384.html\">宫敏博士</a>\"用肩背手提的方式，将装有自由软件的20盒磁带从芬兰背了回来。彼时，Richard&nbsp;Stallman的自由软件运动正如火如荼，微软等公司还旗帜鲜明地反对开放源代码。</p><p>&nbsp;</p><p>而如今，世界各地的开发者每天都在使用微软开源的VSCode、TypeScript等工具，还有谷歌的Kubernetes、gRPC，Meta 的 React、Jest等等。我们清晰地看到，开源正在吞噬世界。</p><p>&nbsp;</p><p>虽然只有二十多年的开源历史，但来自中国的开源软件正在逐步被全球各地的开发者认可和使用，他们活跃在各个社区，积极参与产品的研发、维护和应用等。这些项目是如何一步步发展，并走向全球的呢？</p><p>&nbsp;</p><p>在今年的CNCF欧洲峰会上，华为成为首次发表非赞助性的技术Keynote演讲的中国公司，与Kubernetes、Envoy、Helm、gRPC、OpenTelemetry等全球知名项目同台分享。据悉，CNCF欧洲与北美峰会的Keynote极难入选。通过对2016年首届峰会以来的完全统计，在将近180次的欧洲与北美主旨演讲议题分享中，仅有华为、阿里巴巴和中国移动获得过分享机会。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/54/54105d711378a2d52fc9674c02c1dd38.png\" /></p><p></p><p>&nbsp;借此机会，InfoQ采访了在这次演讲中亮相的两个开源项目 <a href=\"https://github.com/kubeedge/kubeedge\">KubeEdge</a>\" 和 <a href=\"https://github.com/mindspore-ai/mindspore#readme\">MindSpore</a>\" 的主要参与者们，希望以它们为切入口，一窥中国开源项目如何成长、并拥抱世界各地的开发者们。</p><p>&nbsp;</p><p></p><h2>中国开源项目的太空之旅</h2><p></p><p>&nbsp;</p><p>在CNCF宣布今年要举办欧洲峰会后，MindSpore社区运作团队像往常一样按照申报流程提交了演讲摘要。“KubeCon + CloudNativeCon”可以称得上是云计算开源领域最大的峰会，这次同往常一样也是抱着试试的心态，没想到在CFP结果出来后，又收到了举办方额外的回复：可以在大会上进行15分钟的Keynote演讲。</p><p>&nbsp;</p><p>收到这个回复后，MindSpore社区运作团队欣喜之外，便与KubeEdge社区团队一起，开始准备演讲的详细内容。要知道，赞助厂商的分享只有5分钟，还要花费十几万美金，而面向将近1万名现场观众的这十五分钟的展示很难得。那么，究竟是什么吸引了会议的举办方呢？这要从&nbsp;KubeEdge 和 MindSpore&nbsp;的太空之旅说起。</p><p>&nbsp;</p><p>KubeEdge是华为在2018年开源的一款云原生边缘计算平台，聚焦离散边缘节点的形态，重点解决了高度分散的边缘计算平台环境下算力和网络都非常受限的问题，并通过将控制面放在云上来实现云边协同，为开发者提供与中心云一致的体验。这与国外很多从算力比较强的边缘云场景出发，来做整个Kubernetes集群轻量化的思路有很大不同。</p><p>&nbsp;</p><p>具体来说，KubeEdge的云边网络通信能够实现双向的、多路复用的消息通道，支持多种底层协议，并引入了应用层可靠性传输。为实现边缘必备的离线自制，KubeEdge 将 Kubernetes 的云原生节点下放到边缘，做了节点级的元数据持久化，并对绑定中心云的冗余功能进行裁剪，使软件内存达到了70M的最小极限。</p><p>&nbsp;</p><p>MindSpore 则是在19年发布、20年开源的全场景AI框架，主要用来解决人工智能领域近年来所遇到的一系列关键问题。与Google的TensorFlow、Facebook的PyTorch为代表的第二代通用框架相比，MindSpore在兼具两者优点的同时，在大规模自动并行、高阶自动微分、AI For Science、端边云全场景、AI安全等领域都进行了大量的创新。</p><p>&nbsp;</p><p>去年12月，KubeEdge 和 MindSpore 一起跟随由北邮、北大和中国移动研究院联合发起的“天算星座”中第一颗先导星“宝酝号”发射，在太空里执行云边实时推理和在轨计算任务。</p><p>&nbsp;</p><p>以前，卫星属于传统航空航天领域，在计算方面比较封闭，无法解决卫星数据中心日后承载的更多计算任务，同时通信模式和资源非常受限，科研人员要做很多重构工作。实际上，卫星数据中心利用云计算技术来解决问题的构想在业内还没提出多久，“宝酝号”直接跨过了从云到边缘、再到设备的过程，直接应用到了实践中，可以称得上是全球第一个使用云原生技术的卫星。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/46/466ad11a6d9918698298bde4b34d69b0.png\" /></p><p></p><p>&nbsp;</p><p>&nbsp;</p><p>根据北邮天算星座系统和AI负责人徐梦炜的介绍，卫星所处的物理环境非常特殊和复杂。比如粒子干扰可能会让卫星中计算机数值变成随机的：0会变成1、1会变成0，此外还面临极端的高低温环境。而卫星发射后，一旦出现问题，地面人员很难进行调试和修复，重启虽然可行但很多问题无法解决。</p><p>&nbsp;</p><p>这带给科研人员的挑战主要有三点：首先，星地之间需要简单可靠的通信模式。其次，由于地面站数量有限，每个卫星大部分时间不能和地面相联，即处于无连接状态，因此必须具有自治能力。最后也是最重要的，由于卫星上的技术开发、测试和迭代的难度要比地面上高出好几个数量级，所以需要一个灵活统一的服务调度框架。</p><p>&nbsp;</p><p>上述问题正好契合了边缘云计算的能力。徐梦炜团队把卫星当成是地面的扩展，每个卫星都是一个边缘节点，因此将目标锁定在K8s的边缘扩展框架。这个框架还要能灵活调度整体资源，因此团队便找到了之前早有关注的 KubeEdge 团队合作。</p><p>&nbsp;</p><p>前期，研发团队用了两三个月的时间来进行测试。徐梦炜团队先要选定相关的硬件，然后对硬件进行改造和封装，之后做太空仿真测试。虽然是比较标准的模式，但比起普通测试仍要复杂很多。期间，徐梦炜团队要和华为、卫星公司不停地构建和迭代方案。</p><p>&nbsp;</p><p></p><h4>开源“照进”航天</h4><p></p><p>&nbsp;</p><p>整个筹备期间，学生们的投入和热情让同时担任博士生导师的徐梦炜印象深刻。当时由于时间紧张，学生们要在数据站和卫星基地两边跑，有的学生在春节假期结束后没时间回北邮，而是直接从家里去卫星公司。</p><p>&nbsp;</p><p>“计算机专业的学生都倾向于找互联网高薪的工作，在很多人看来，航空航天是传统行业，没有那么吸引人。”徐梦炜说道，“但幸运的是，我们找到了一群愿意投入的学生，这让人很感动。”</p><p>&nbsp;</p><p>北邮参与该卫星项目的共有5名博士生和十几名研究生，这些被认为处在“传统”行业的科研人员和学生们正在积极拥抱开源。徐梦炜在博士期间做了自己的<a href=\"https://github.com/xumengwei\">边缘计算项目</a>\"并将其开源，现在其所在的北邮团队也在做<a href=\"https://github.com/UbiquitousLearning/\">开源的联邦学习项目</a>\"。</p><p>&nbsp;</p><p>卫星行业之前更多是国家驱动，普通高校里的科研工作者和爱好者对开源几乎没有需求，他们要么接触不到，要么做的东西也无法在实践中真正应用。科研人员的沟通基本以私下接触为主，没有对外社区讨论。但随着卫星商业化初步成功，越来越多的第三方机构、科研人员，甚至爱好者可以参与进来，推动了开源进入卫星领域。</p><p>&nbsp;</p><p>开源能够深入卫星领域的另一个原因就是软件定义卫星的趋势。</p><p>&nbsp;</p><p>正如美国太空望远镜科学研究所天文学家 Erik Tollerud 所说，天文学是一个基于软件的领域。今年7月，承载人类探索星辰大海梦想的詹姆斯·韦伯望远镜从距离地球 100 万英里处拍摄了一张全彩照片，一时间轰动全球。据悉，韦伯望远镜采用了事件驱动的软件架构、飞行软件由 C++编写、使用了面向文档的数据库 XML......软件正在成为人类探索宇宙的关键。</p><p>&nbsp;</p><p>之前卫星功能比较单一，软件占比相对较小，但软件定义卫星的趋势越来越明显。软件定义卫星就是不断地用新软件定义出新功能的卫星，支持应用软件按需加载、卫星功能动态重构，可以在不同空间、不同时间扮演不同角色，为不同用户服务。而在软件中，开源软件占比是很高的，进而增加了对整个开源的需求。</p><p>&nbsp;</p><p>据悉，天算星座未来也将在 <a href=\"https://github.com/TiansuanConstellation\">GitHub</a>\" 上开源，目前初步筹备工作已经完毕，但数据暂时还未开放，预计今年内公布。</p><p>&nbsp;</p><p>徐梦炜表示，开源软件对卫星安全来说是一把双刃剑，并非是纯消极的影响。“开源本身因为更多人的参与可以解决一些传统安全问题，当然也会面临恶意bug注入，这就要团队做更多测试、社区共同防御，同时引入更多的安全专家。”</p><p>&nbsp;</p><p>这是KubeEdge和MindSpore第一次在移动端边缘的应用，对项目团队来说是很大的进展。华为团队在峰会上分享了这个故事，产品不同的解决思路和独特的应用场景也引发了更多世界各地开发者的好奇和关注。</p><p></p><p></p><h2>开源与企业之间的矛盾</h2><p></p><p>&nbsp;</p><p>目前，KubeEdge社区贡献者超1000人、代码提交者280多人，参与社区的企业机构已有80多家。MindSpore 社区用户数量超190万，贡献者超过4500名。</p><p>&nbsp;</p><p>社区是项目演进很好的试金石，可惜很多企业并没有用好这一利器。有些公司在做开源是按照已经习惯的工作方式进行：先内部汇报，然后做预算和开发原型，项目放到社区时，已经是一个完成度很高的半成品，留给社区发挥的空间并不多。</p><p>&nbsp;</p><p>作为华为计算开源社区运作的负责人，黄之鹏非常不看好这种做法：开源项目不只是为了给一个商业公司卖产品。那么，如何利用社区的力量对产品进行迭代升级呢？</p><p>&nbsp;</p><p>黄之鹏更习惯先在社区里讲技术故事，发动社区的力量来启动项目、设计产品和研发。“一些大型开源社区里的既有项目也是这样做出来的，项目启动成本很低，甚至几乎为零。”</p><p>&nbsp;</p><p>通过社区，项目能够发现很多意料之外的场景。比如，MindSpore 与山水自然保护中心一起做野生濒危动植物识别；通过 CycleGAN 模型对世界保护非物质文化遗产扎染的图案进行训练，生成新的扎染图案来保护传承非遗工艺等。</p><p>&nbsp;</p><p>这里，存在一个悖论。</p><p>&nbsp;</p><p>一方面，企业不擅长对不确定性进行管理。作为市场参与的主体，所有企业都希望市场公开，但每个大企业实质上又是个计划经济体，有严格的流水线式运作，这导致企业在管理开源项目时，更倾向于把开源当成指标，为了开源而开源。</p><p>&nbsp;</p><p>另一方面，开源带来的一个巨大好处就是这种不确定性。很多年东西是规划不出来的，很多有趣的应用都是社区发现的，然后反过来回馈社区。很多公司会先定季度KPI再去做，这种从目标倒推行动的做法与此完全相反，这样的开源几乎做不成。</p><p>&nbsp;</p><p>两者看似是矛盾，但归根到底还是企业对开源的理解不够深。</p><p>&nbsp;</p><p>“中国的开源有很大发展，但实际的增速并没有数字显示得那么大。”黄之鹏说道，“真正熟悉开源并在大型社区做过的人没有那么多，但只有足够专业的人才知道怎么利用开源帮助项目发展、怎么评价某个开源项目的质量。一味追求star数、下载量，只会造成内容虚假、数字虚假和大量的资源浪费。”</p><p>&nbsp;</p><p>要真正让各种不同的开发者加入到社区参与项目维护，企业一定要保证开发的公开透明。云原生、中间件领域的开源项目，由于技术栈比较少，开发者会更看重社区的多样性。KubeEdge就属于这类，得益于社区良好的开放性和公平性，华为最近一年贡献占比在50%左右，越来越多的企业已经加大对KubeEdge的贡献投入。</p><p>&nbsp;</p><p>而一些技术栈很深、需要专业团队开发的开源项目则对主导企业的中立性要求没那么高，目前的AI开源框架基本是由几家大企业主导，但这并不意味着企业不需要注意中立性问题，比如即使作为开发主力，华为在MindSpore技术委员会中也只有一席，与业界大量专家一起来共建社区生态。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/66/6613616dd5e911b4add175ce49eb6c32.png\" /></p><p></p><p>社区活动现场</p><p>&nbsp;</p><p></p><h4>没有一成不变的治理模式</h4><p></p><p>&nbsp;</p><p>当社区规模逐渐变大，要保证良好的研发氛围就离不开社区治理，而社区治理也向来是开源的一大难题。</p><p>&nbsp;</p><p>KubeEdge从设计之初就想好了要做开放社区。因此，除了参与KubeEdge的方案设计和功能研发，华为云云原生开源团队负责人、也是KubeEdge项目的联合创始人的王泽锋还将很大一部分精力花在了社区的治理上。</p><p>&nbsp;</p><p>起初，社区主要依靠华为工程师们的投入，但当项目价值被迅速认可后，越来越多不同企业的贡献者参与进来，如何引导开发者参与社区讨论、迭代或修复项目变得很有必要。另外，贡献者会需要获得开发指导、了解社区流程，并希望参与更多技术方案决策。因此，贡献者的成长路线和社区整个组织架构的分工设计也是很重要的工作。</p><p>&nbsp;</p><p>为了让开发者们将精力聚焦在平台研发上，KubeEdge 采用了非常聚焦代码的 maintainer 管理模式，之后还成立了Special Interest Group（SIG）和工作组。王泽锋团队还提供自动化机器人驱动代码CI测试、Pull Request合入、Release包自动化编译发布等流程。</p><p>&nbsp;</p><p>开源社区的维护主要有四方面：一是开发者运营，主要包括通过公众号、视频号等多媒体平台建设，开发者社群和各种活动，帮助开发者融入社区；二是社区治理，包括搭建社区治理框架等，实现社区自治；三是与其他开源社区合作，尤其是进行技术连接；四是为开发者提供基础设施，像帮助社区成员参与开发的工具等。</p><p>&nbsp;</p><p>随着项目的发展，社区治理模式也迎来了挑战。“整体来看，KubeEdge受关注程度的增长速度，大于社区 maintainer 的成长速度，组织架构需要更快地调整来适配项目的发展。”王泽锋说道。</p><p>&nbsp;</p><p>贡献者虽然很有意愿参与到项目维护中，但他们需要有所贡献后才能够承担更多的责任，这意味着需要给他们一些成长的时间。现在，王泽锋团队在有意识地为社区贡献大的开发者提名为社区reviewer、approver等角色，帮助他们在贡献中更快提高。</p><p>&nbsp;</p><p>为适应发展，今年KubeEdge社区的治理架构将迎来一次升级，社区将在之前的基础上成立TSC治理委员会、用户委员会等组织，同时成立专门的社区运营团队，来实现更好的社区协作。</p><p>&nbsp;</p><p>如今，以委员会为主的开放治理模式似乎成为很多社区的首选治理模式，KubeEdge和MindSpore都是这种治理模式的受益者。不过在黄之鹏看来，开放治理模式并非对所有开源项目都有一样的效果。</p><p>&nbsp;</p><p>开放治理模式成为趋势的一个基础事实是，大企业近几年开始参与大型开源社区，开放治理架构随之增多。但是，大家容易忽略的是：开放治理是社区发展到一定阶段，有很多重量级玩家，涉及到利益平衡问题时才采的治理方式。</p><p>&nbsp;</p><p>“对很多强技术驱动的社区来说，成员的利益均衡机制设计对它们边际收益不高，之前的 BDFL（仁慈的独裁者）模式，对于很多小而精的开源项目，仍然是有必要的。就像 Linux 还很弱小的初期，需要 Linus Torvalds 作为强有力的领导来屏蔽各个方面的压力。”黄之鹏解释道，“这类项目会长期存在，开源社区的治理模式还是要因地制宜，百花齐放百家争鸣。”</p><p>&nbsp;</p><p></p><h2>走出去，不需要顾虑太多</h2><p></p><p>&nbsp;</p><p>实际上，有些国内企业主导的开源项目社区规模已经越来越大，来自世界各地的开发者都参与了进来，同时国内越来越多的开发者也在融入到不同的社区中。</p><p>&nbsp;</p><p>在“走出去”的过程中，大家或多或少都会有一些顾虑：来自中国的开源项目在国际环境里是不是要多做一些额外的沟通工作？实际证明，大家都想多了。</p><p>&nbsp;</p><p>有很多让王泽锋印象非常深刻的事情。CNCF TOC 的一位成员曾主动在推特上宣传KubeEdge，称其为“令人兴奋的项目”；一位素未谋面的红帽工程师在博客中称KubeEdge是他2021年最喜爱的开源项目；来自德国、印度、以色列的多个企业，自发地集成了KubeEdge，为他们的客户提供边缘计算产品。“只要项目本身的核心价值得到认可，大家都会尊重你。”</p><p>&nbsp;</p><p>同样一直在参加各种国外社区的黄之鹏也表示，世界上所有的开发者都差不多，大家有很强的好奇心，对新东西的接受度很好，不用有什么心理负担。黄之鹏主导的MindSpore社区里贡献者超过4500人，他们分别来自中东、东南亚和欧洲等不同国家和地区。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7f/7faa0fa8263d4cbfb65e4ba554230542.jpeg\" /></p><p></p><p>CNCF欧洲峰会参会者观看演讲</p><p>&nbsp;</p><p>&nbsp;</p><p>开源社区全球化本质上还是更广泛开发者生态的建立，更大的生态带来更多的不确定性。但在社区全球化过程中，社区面临的最大问题还是语言沟通。</p><p>&nbsp;</p><p>容易出现误解的大多是非技术上的问题。比如在沟通技术问题时，听众可能会错误地认为提问题的人着急或生气了，但可能在提问者的文化里其实是很温和地表达。还有像国内工程师习惯微信，国外开发者习惯写长邮件，不同国家的开发者使用的沟通工具都不一样等。</p><p>&nbsp;</p><p>对于这些问题，开发者们只能慢慢磨合。“不过这也很有意思，日常工作中很难有机会同时遇到这么多不同文化的交流。”黄之鹏说道。</p><p>&nbsp;</p><p></p><h4>社区治理之难</h4><p></p><p>&nbsp;</p><p>全球化社区里经常发生很多棘手的事情，有的问题可以规避，有的可能无解。</p><p>&nbsp;</p><p>之前某个小众的加密协议框架的开源项目的会议间歇时，由于在交流时身体间距太近，一位女性核心开发者指控另一位男性核心开发者性骚扰，两个人还在推特上掀起了大规模骂战。这件事正好发生在 MeToo运动时期，这个小众社区被动卷入到了该运动中，最终以该男性开发者从社区邮件列表上被永久性封禁结束。</p><p>&nbsp;</p><p>一旦涉及到地缘政治层面，问题就会变得更加复杂，不少开源社区都会被核心开发者的个人态度影响，牵连陷入了巨大的争议中。比如<a href=\"https://blog.rust-lang.org/2022/02/24/Rust-1.59.0.html\">Rust&nbsp;1.59&nbsp;发行的公告</a>\"中夹杂着一些带有个人立场的段落、node-ipc 包作者 RIAEvangelist 投毒等。</p><p>&nbsp;</p><p>但这些争议的背后其实都是典型的社区管理问题：Rust社区的release note为什么没有足够的review、NPM社区的核心依赖组件使用了单人维护的软件等等。</p><p>&nbsp;</p><p>很多社区会用CoC（Code of Conduct）来规范社区成员的行为，但现有的CoC机制依然是通过枚举的方式，守护一些约定俗成且确定性强的行为，但社区治理需要处理大量的未知风险，而社区治理机构又缺乏其被期待的效力执行能力。黄之鹏提出了一个概念叫“社区二阶美德”，即在以CoC为代表的一阶美德的基础上，有意识的建立一套让集体有效运作的、众人默认的习惯法体系。这要求核心成员在各方面达成一致，这样无论过错方是谁，都严重违反了大家公认的规则，社区处理问题就容易得多。</p><p>&nbsp;</p><p>另外，黄之鹏观察到，本地化社区治理特色正在逐步发展为新的治理模式。2016年后，整个世界的全球化进展受到冲击，加上后来疫情的影响，全球逐渐走向虚拟互联但物理隔离的状态。因应不同国家的政策、法律、法规等要求，社区治理也会有所差别。</p><p>&nbsp;</p><p></p><h2>结束语</h2><p></p><p>&nbsp;</p><p>做开源并非都是一帆风顺的，即使是在开源社区做了将近十年的黄之鹏，也会在做了很多努力但没有得到预期效果时感到挫败。</p><p>&nbsp;</p><p>“自己做项目时，最开始的预期都比较高，希望可以像K8s那样，一出来就会被大家关注。但初期的现实还是比较骨感的。”黄之鹏说道，“但其实大家熟知的大型社区也是一点点成长起来的，只不过我们没有经历过那个阶段罢了。”</p><p>&nbsp;</p><p>做开源一定是长期主义的事情，坚持到后面才会有收获。“从经历来看，至少要熬过头两年。之前在大型上游社区做项目时，从零到能够在OpenStack、RISC-V、CNCF这样的大型峰会讲Keynote，基本都需要四年时间左右，所以也希望有更多来自中国的开源社区和项目，能够有这种坚持和野望，把自己的故事带到更大的全球性舞台。”黄之鹏补充道。</p><p>&nbsp;</p><p>&nbsp;</p><p>嘉宾介绍：</p><p></p><p>徐梦炜，天算星座系统和AI平台负责人，北京邮电大学特聘副研究员</p><p>王泽锋，华为云云原生开源团队负责人，CNCF大使，CNCF KubeEdge、Volcano、Karmada项目联合创始人</p><p>黄之鹏，华为计算开源社区运营负责人</p><p></p><p></p><p>每一位开源参与者、每一个开源项目都可以成为舞台上的主角。</p><p>&nbsp;</p><p>新的一波开源浪潮正在席卷中国，【开源聚光灯】（<a href=\"https://www.infoq.cn/theme/opensource\">https://www.infoq.cn/theme/opensource</a>\"）是 InfoQ 重点打造的开源主题栏目，旨在通过新闻、系列访谈、用户调查、迷你书、视频等形式深入观察开源运动，围绕开源的价值和开源开发模式，与投身开源的每一个个体共同探讨开源发展现状，照亮每一个开源舞台上的参与者。</p><p>&nbsp;</p><p>如果你有开源故事或对开源的深刻观点想要分享、或开源项目想要寻求报道，欢迎联系微信 caifangfang842852（请注明姓名和来由）。</p>",
    "publish_time": "2022-08-02 10:06:25",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]