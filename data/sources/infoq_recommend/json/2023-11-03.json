[
  {
    "title": "Java近期新闻：未命名变量和模式、WildFly 30、MicroProfile 6.1和Payara Platform",
    "url": "https://www.infoq.cn/article/etTXLvgFCxt53yc6VGGg",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p></p><p>JEP 456（<a href=\"https://openjdk.org/jeps/456?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">未命名变量和模式</a>\"） 已从 Candidate 进入到 Proposed to Target 状态（JDK 22）。这一 JEP 提议在 JEP 443（<a href=\"https://openjdk.org/jeps/443?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">未命名模式和变量（预览）</a>\"，随 JDK 21发布） 的预览之后最终确定该特性。该特性将“通过 未命名模式 （用于匹配记录组件，无需声明组件的名称或类型）和 未命名变量（可以初始化但不使用）来增强语言。” 这两者都使用下划线字符表示，如 r instanceof _(int x, int y) 和 r instanceof _。评审预计于 2023 年 10 月 26 日结束。</p><p></p><p></p><h4>JDK 22</h4><p></p><p></p><p><a href=\"https://jdk.java.net/22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">JDK 22 早期访问版本</a>\" 的 <a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22%2B20?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Build 20</a>\" 已发布，包含自 Build 19 以来的 <a href=\"https://github.com/openjdk/jdk/compare/jdk-22%2B19...jdk-22%2B20?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">更新</a>\"，修复了各种 <a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2022%20and%20%22resolved%20in%20build%22%20%3D%20b20%20order%20by%20component%2C%20subcomponent&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">问题</a>\"。有关该版本的更多详细信息，请参阅 <a href=\"https://jdk.java.net/22/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>对于 <a href=\"https://openjdk.org/projects/jdk/22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">JDK 22</a>\"，开发者可以通过 <a href=\"https://bugreport.java.com/bugreport/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Java Bug 数据库</a>\" 报告问题。</p><p></p><p></p><h4>BellSoft</h4><p></p><p></p><p>与 Oracle 2023年10月的 <a href=\"https://www.oracle.com/security-alerts/cpuoct2023.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">关键补丁更新（Critical Patch Update，CPU）</a>\" 一同，BellSoft 发布了 <a href=\"https://bell-sw.com/pages/libericajdk/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Liberica JDK</a>\" 21.0.0.0.1、17.0.8.1.1、11.0.20.1.1、8u391、7u401 和 6u401 的 CPU 补丁。此外，还发布了包含 CPU 和非关键修复的 补丁集更新（Patch Set Update，PSU） 版本 21.0.1、17.0.9、11.0.21 和 8u392。</p><p></p><p></p><h4>Oracle</h4><p></p><p></p><p>Oracle 推出了 <a href=\"https://marketplace.visualstudio.com/items?itemName=Oracle.oracle-java&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Oracle Java Platform Extension for Visual Studio Code</a>\"，为 VSCode 带来了 Maven 和 Gradle 项目全功能 Java 开发（编辑/编译/调试/测试）能力，以及项目资源管理、调试和启动配置、JDK 下载器、重构等功能。</p><p></p><p></p><h4>GraalVM</h4><p></p><p></p><p>Oracle Labs 发布 <a href=\"https://github.com/graalvm/native-build-tools/releases/tag/0.9.28?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">0.9.28</a>\"版本的 <a href=\"https://github.com/graalvm/native-build-tools/blob/master/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Native Build Tools</a>\"。新版本提供了这些特性：<a href=\"https://github.com/graalvm/native-build-tools/blob/master/common/utils/src/main/java/org/graalvm/buildtools/utils/NativeImageUtils.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">NativeImageUtils</a>\"类中定义的 escapeArg() 方法回退到了之前的版本，修复了 Windows 路径转义问题；改进了 JDK 主要版本的检测；不再使用已弃用的 Gradle <a href=\"https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginConvention.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">JavaPluginConvention</a>\" 类，替换为 <a href=\"https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">JavaPluginExtension</a>\"类。有关该版本的更多详细信息，请参阅 <a href=\"https://github.com/graalvm/native-build-tools/compare/0.9.27...0.9.28?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">变更日志</a>\"。</p><p></p><p></p><h4>Spring Framework</h4><p></p><p></p><p><a href=\"https://spring.io/projects/spring-boot?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Spring Boot</a>\" 3.2.0 的 <a href=\"https://spring.io/blog/2023/10/20/spring-boot-3-2-0-rc1-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">第一个候选版本</a>\" 包含了错误修复、文档改进、依赖项升级和新特性，如：打破 <a href=\"https://docs.spring.io/spring-boot/docs/3.2.0-RC1/api/org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizers.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">TransactionManagerCustomizers</a>\"类与 <a href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/transaction/TransactionManager.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">TransactionManager</a>\"接口之间的循环；自动配置 <a href=\"https://docs.spring.io/spring-boot/docs/3.2.0-RC1/api/org/springframework/boot/jdbc/HikariCheckpointRestoreLifecycle.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">HikariCheckpointRestoreLifecycle</a>\"类，适配用户自定义的 <a href=\"https://www.javadoc.io/doc/com.zaxxer/HikariCP/latest/com/zaxxer/hikari/HikariDataSource.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">HikariDataSource</a>\" 实例；支持在 buildInfo Gradle 任务中添加 Gradle <a href=\"https://docs.gradle.org/current/javadoc/org/gradle/api/provider/Provider.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Provider</a>\" 接口。有关该版本的更多详细信息，请参阅 <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.2.0-RC1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>类似地，Spring Boot <a href=\"https://spring.io/blog/2023/10/19/spring-boot-3-1-5-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">3.1.5</a>\"、<a href=\"https://spring.io/blog/2023/10/19/spring-boot-3-0-12-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">3.0.12</a>\" 和 <a href=\"https://spring.io/blog/2023/10/19/spring-boot-2-7-17-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">2.7.17</a>\" 也已发布，包含了错误修复、文档改进、依赖项升级和显著的变更：纠正了 spring.jms.listener.concurrency 属性的行为，其中最大用户数被设置为此属性的值，最小消费者数始终设置为 1。这与文档描述不符，开发者应该在 spring.jms.listener.max-concurrency 属性中设置他们期望的最大值。有关这些版本的更多详细信息，请参阅 <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.1.5?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">3.1.5</a>\"、<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.0.12?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">3.0.12</a>\" 和 <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.7.17?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">2.7.17</a>\" 的版本说明。</p><p></p><p><a href=\"https://spring.io/projects/spring-security?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Spring Security</a>\" 6.2.0 的 <a href=\"https://spring.io/blog/2023/10/18/spring-security-6-2-0-rc2-released?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">第一个和第二个候选版本</a>\"，以及服务版本 6.1.5、6.0.8 和 5.8.8，都包含了错误修复和依赖项升级。这些版本的新特性包括：说明如何发布一个不再使用已弃用的 <a href=\"https://docs.spring.io/spring-security/site/docs/5.7.11/api/org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">WebSecurityConfigurerAdapter</a>\" 类的 <a href=\"https://docs.spring.io/spring-security/site/docs/6.2.0-SNAPSHOT/api/org/springframework/security/authentication/AuthenticationManager.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">AuthenticationManager</a>\" @Bean ；为依赖项使用了 <a href=\"https://medium.com/@callmeryan/gradle-version-catalog-728111fa210f?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Gradle Version Catalog</a>\" 。候选版本的新特性包括：为 <a href=\"https://docs.spring.io/spring-security/site/docs/6.2.0-SNAPSHOT/api/org/springframework/security/config/annotation/web/configurers/AuthorizeHttpRequestsConfigurer.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">AuthorizeHttpRequestsConfigurer</a>\" 类添加 Servlet Path 支持；允许在 <a href=\"https://docs.spring.io/spring-security/site/docs/6.2.0-SNAPSHOT/api/org/springframework/security/web/authentication/www/BasicAuthenticationFilter.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">BasicAuthenticationFilter</a>\" 类中设置 <a href=\"https://docs.spring.io/spring-security/site/docs/6.2.0-SNAPSHOT/api/org/springframework/security/web/authentication/AuthenticationConverter.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">AuthenticationConverter</a>\" 接口的实例。有关这些版本的更多详细信息，请参阅 <a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.2.0-RC2?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">6.2.0-RC2</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.2.0-RC1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">6.2.0-RC1</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.1.5?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">6.1.5</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.0.8?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">6.0.8</a>\" 和 <a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.8.8?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">5.8.8</a>\" 的版本说明。</p><p></p><p><a href=\"https://spring.io/projects/spring-authorization-server?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Spring Authorization Server</a>\" 1.2.0 的 <a href=\"https://spring.io/blog/2023/10/18/spring-authorization-server-1-2-0-rc1-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">第一个候选版本</a>\" 包含了依赖项升级和一个新特性，增加了可重复使用的默认身份验证失败处理程序类 <a href=\"https://github.com/spring-projects/spring-authorization-server/blob/main/oauth2-authorization-server/src/main/java/org/springframework/security/oauth2/server/authorization/web/authentication/OAuth2ErrorAuthenticationFailureHandler.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">OAuth2ErrorAuthenticationFailureHandler</a>\"。有关该版本的更多详细信息，请参阅 <a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/1.2.0-RC1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>类似地，Spring Authorization Server <a href=\"https://spring.io/blog/2023/10/18/spring-authorization-server-1-1-3-1-0-4-and-0-4-4-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">1.1.3</a>\"、<a href=\"https://spring.io/blog/2023/10/18/spring-authorization-server-1-1-3-1-0-4-and-0-4-4-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">1.0.4</a>\" 和 <a href=\"https://spring.io/blog/2023/10/18/spring-authorization-server-1-1-3-1-0-4-and-0-4-4-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">0.4.4</a>\" 已发布，包含了次要错误修复和依赖项升级：Spring Boot 3.1.4、3.0.11 和 2.7.16；Spring Security 6.1.5、6.0.8 和 5.8.8；以及 Spring Framework 6.0.13、6.0.13 和 5.3.30。有关这些版本的更多详细信息，请参阅 <a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/1.1.3?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">1.1.3</a>\"、<a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/1.0.4?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">1.0.4</a>\" 和 <a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/0.4.4?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">0.4.4</a>\" 的版本说明。</p><p></p><p><a href=\"https://spring.io/projects/spring-cloud-dataflow?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Spring Cloud Dataflow</a>\" 2.11.1 <a href=\"https://spring.io/blog/2023/10/17/spring-cloud-dataflow-2-11-1-released?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本</a>\" 包含了一些显著的变更，如：确保<a href=\"https://docs.spring.io/spring-cloud-dataflow/docs/2.11.1/api/org/springframework/cloud/dataflow/rest/client/TaskOperations.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">TaskOperations</a>\"接口中的 <a href=\"https://docs.spring.io/spring-cloud-dataflow/docs/2.11.1/api/org/springframework/cloud/dataflow/rest/resource/LaunchResponseResource.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Launch API</a>\" 具有向后兼容性；将常见的安全配置模块添加到依赖项管理中，修复了创建单体库后会出现的问题；升级到<a href=\"https://github.com/netplex/json-smart-v2/blob/master/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">json-smart</a>\"2.4.11、<a href=\"https://bitbucket.org/connect2id/nimbus-jose-jwt/src/master/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Nimbus JOSE + JWT</a>\" 9.31、<a href=\"https://github.com/xerial/snappy-java/blob/master/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">snappy-java</a>\" 1.1.10.4 和 <a href=\"https://commons.apache.org/proper/commons-compress/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Apache Commons Compress</a>\" 1.24.0，解决各种 CVE问题。有关这一版本的更多详细信息，请参阅 <a href=\"https://github.com/spring-cloud/spring-cloud-dataflow/releases/tag/v2.11.1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p></p><h4>WildFly</h4><p></p><p></p><p>Red Hat<a href=\"https://www.wildfly.org/news/2023/10/18/WildFly30-Released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">发布</a>\"了WildFly 30.0.0，该版本支持JDK 21，并且已通过TCK测试，作为Jakarta EE Core Profile的<a href=\"https://github.com/wildfly/certifications/blob/EE10/WildFly_30.0.0.Final/jakarta-core-jdk21.adoc#jakarta-core-profile-1001-tck-java-se-21-results?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">兼容实现</a>\"。该版本还支持大多数<a href=\"https://microprofile.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">MicroProfile</a>\" 6.0规范，但由于Red Hat不支持MicroProfile Metrics规范，所以不能声明是兼容实现。需要注意的是，Red Hat建议开发者继续在JDK 17和JDK 11上运行他们的应用程序，因为他们还没有在<a href=\"https://jakarta.ee/specifications/platform/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Jakarta EE Platform</a>\"和<a href=\"https://jakarta.ee/specifications/webprofile/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Jakarta EE Web Profile</a>\"上认证WildFly 30。尽管如此，Red Hat表示“WildFly 30是评估应用程序在SE 21上运行性能的绝佳选择。”有关该版本的更多详细信息，请参阅<a href=\"https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12313721&amp;version=12413594&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p></p><h4>Payara</h4><p></p><p></p><p>Payara发布了2023年10月版本的<a href=\"https://www.payara.fish/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Payara Platform</a>\"，包括Community Edition 6.2023.10、Enterprise Edition 6.7.0和Enterprise Edition 5.56.0。这些版本包含：错误修复；升级了OIDC客户端中的json-smart 2.4.11，解决了<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1370?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-1370</a>\"漏洞问题，该漏洞发生在解析嵌套的JSON结构数组和对象时，由于没有定义限制，可能导致堆栈溢出和软件崩溃；为Payara域命令，如start-domain和stop-domain，引入了新的超时选项--timeout。有关这些版本的更多详细信息，请参阅<a href=\"https://docs.payara.fish/community/docs/Release%20Notes/Release%20Notes%206.2023.10.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Community Edition 6.2023.10</a>\"、<a href=\"https://docs.payara.fish/enterprise/docs/Release%20Notes/Release%20Notes%206.7.0.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Enterprise Edition 6.7.0</a>\"和<a href=\"https://docs.payara.fish/enterprise/docs/5.56.0/Release%20Notes/Release%20Notes%205.56.0.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Enterprise Edition 5.56.0</a>\"的版本说明。</p><p></p><p></p><h4>MicroProfile</h4><p></p><p></p><p>MicroProfile工作组<a href=\"https://microprofile.io/2023/10/16/microprofile-6-1-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">发布</a>\"了<a href=\"https://microprofile.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">MicroProfile</a>\" 6.1，包含了规范的更新：MicroProfile Config 3.1、MicroProfile Metrics 5.1和MicroProfile Telemetry 1.1。</p><p></p><p>MicroProfile Config的重要变化包括：更新TCK，与Jakarta EE <a href=\"https://jakarta.ee/specifications/cdi/4.0/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Contexts and Dependency Injection 4.0</a>\"规范中的重大变化对齐，包括空的beans.xml文件以及将bean发现模式从all改为annotated；<a href=\"https://github.com/eclipse/microprofile-config/blob/main/tck/src/main/java/org/eclipse/microprofile/config/tck/broken/MissingValueOnObserverMethodInjectionTest.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">MissingValueOnObserverMethodInjectionTest</a>\"类，它断言了DeploymentException，因<a href=\"https://github.com/eclipse/microprofile-config/blob/main/tck/src/main/java/org/eclipse/microprofile/config/tck/broken/ConfigObserver.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">ConfigObserver</a>\"bean被定义为@ApplicationScoped（可代理）和final（不可代理）而导致失败。有关该版本的更多详细信息，请参阅<a href=\"https://download.eclipse.org/microprofile/microprofile-config-3.1/microprofile-config-spec-3.1.html#release_notes_31?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>MicroProfile Metrics的重要变化包括：引入MicroProfile Config属性，用于自定义<a href=\"https://github.com/eclipse/microprofile-metrics/blob/main/api/src/main/java/org/eclipse/microprofile/metrics/Histogram.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Histogram</a>\"和<a href=\"https://github.com/eclipse/microprofile-metrics/blob/main/api/src/main/java/org/eclipse/microprofile/metrics/Timer.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Timer</a>\"指标如何跟踪和输出百分位和直方图桶的统计信息；将<a href=\"https://github.com/eclipse/microprofile-metrics/blob/main/api/src/main/java/org/eclipse/microprofile/metrics/annotation/RegistryScope.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">@RegistryScope</a>\"注解定义为限定符；建议多应用程序部署使用mp.metrics.defaultAppName属性来消除因多应用程序服务器需要一致标签所导致的问题。有关该版本的更多详细信息，请参阅<a href=\"https://download.eclipse.org/microprofile/microprofile-metrics-5.1.0/microprofile-metrics-spec-5.1.0.html#release_notes_5_1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>MicroProfile Telemetry 1.1的重要变化包括：澄清哪些API类必须对用户可用；一种不依赖于时间戳的测试实现；澄清<a href=\"https://javadoc.io/doc/io.opentelemetry/opentelemetry-api/latest/io/opentelemetry/api/trace/Span.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Span</a>\"和<a href=\"https://javadoc.io/doc/io.opentelemetry/opentelemetry-api/latest/io/opentelemetry/api/baggage/Baggage.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Baggage</a>\" bean在当前span或baggage发生变化时的行为。有关该版本的更多详细信息，请参阅<a href=\"https://download.eclipse.org/microprofile/microprofile-telemetry-1.1/tracing/microprofile-telemetry-tracing-spec-1.1.html#release_notes_11?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>MicroProfile 6.1的初始兼容实现是<a href=\"https://openliberty.io/blog/2023/09/26/23.0.0.10-beta.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Open Liberty 23.0.0.10-beta</a>\"。</p><p></p><p></p><h4>Micronaut</h4><p></p><p></p><p>Micronaut基金会<a href=\"https://micronaut.io/2023/10/17/micronaut-security-oauth2-improper-access-control-vulnerability/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">披露</a>\"了<a href=\"https://micronaut-projects.github.io/micronaut-security/latest/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut Security</a>\"模块的OAuth2漏洞。在<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-36820&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-36820</a>\"这个漏洞中，如果令牌是由相同的身份发行者/提供者发布时，<a href=\"https://micronaut-projects.github.io/micronaut-security/latest/api/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">IdTokenClaimsValidator</a>\"类将跳过受众声明验证，导致访问控制不当。</p><p></p><p>Micronaut基金会还<a href=\"https://micronaut.io/2023/10/19/micronaut-framework-4-1-5-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">发布了</a>\" <a href=\"https://micronaut.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut Framework</a>\" 4.1.5版本，其中包括<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/v4.1.10?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut Core 4.10.0</a>\"和模块更新：<a href=\"https://micronaut-projects.github.io/micronaut-aws/snapshot/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut AWS</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-rxjava3/snapshot/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut RxJava 3</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-discovery-client/snapshot/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut Discovery Client</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-reactor/snapshot/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut Reactor</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-object-storage/snapshot/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Micronaut Object Storage</a>\"。此外，Netty升级到了<a href=\"https://netty.io/news/2023/10/10/4-1-100-Final.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">4.1.100.Final</a>\"。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/micronaut-projects/micronaut-platform/releases/tag/v4.1.5?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p></p><h4>Quarkus</h4><p></p><p></p><p><a href=\"https://quarkus.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Quarkus</a>\" <a href=\"https://quarkus.io/blog/quarkus-3-2-7-final-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">3.2.7</a>\"和<a href=\"https://quarkus.io/blog/quarkus-2-16-12-final-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">2.16.12</a>\"主要解决了几个CVE：</p><p></p><p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-44487?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-44487</a>\"，Tomcat的HTTP/2实现中的一个漏洞，容易受到<a href=\"https://www.securityweek.com/rapid-reset-zero-day-exploited-to-launch-largest-ddos-attacks-in-history/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">快速重置攻击</a>\"的影响，导致<a href=\"https://www.mail-archive.com/announce@apache.org/msg08557.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">拒绝服务</a>\"，通常表现为抛出OutOfMemoryError。<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39410?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-39410</a>\"，这是<a href=\"https://avro.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Apache Avro</a>\"的漏洞，允许攻击者反序列化不受信任或损坏的数据，导致内存消耗超出允许的限制，并进一步导致系统耗尽内存。<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34454?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-34454</a>\"，这是snappy-java的漏洞，允许攻击者利用未经检查的乘法引起可能的整数溢出，导致不可恢复的致命错误。</p><p></p><p>有关这些版本的更多详细信息，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.2.7.Final?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本3.2.7</a>\"和<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.16.12.Final?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本2.16.12</a>\"的更新记录。</p><p></p><p>Quarkus团队还<a href=\"https://quarkus.io/blog/cve-2023-44487/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">记录了</a>\"他们解决CVE-2023-44487的过程，包括CVE的概述、线程与事件循环以及他们的解决方案。</p><p></p><p></p><h4>Open Liberty</h4><p></p><p></p><p>IBM<a href=\"https://openliberty.io/blog/2023/10/17/23.0.0.10.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">发布</a>\"Open Liberty 23.0.0.10，支持JDK 21，并更新了featureUtility命令，在将新特性安装到Open Liberty时默认会验证特性的真实性。这替代了校验和，校验和不能确保下载文件的真实性。</p><p></p><p></p><h4>Apache软件基金会</h4><p></p><p></p><p><a href=\"https://tomee.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Apache TomEE</a>\" 9.1.1版本已发布，其中包括了错误修复、依赖项升级，其中最显著的变化是取消了对<a href=\"https://mvnrepository.com/artifact/org.apache.tomee/cxf-shade/9.0.0-M8?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CFX影子版本</a>\"的支持，转而支持<a href=\"https://cxf.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Apache CXF</a>\" 4.0。该版本还包含了对多个CVE的修复和反向移植：</p><p></p><p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34981?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-34981</a>\"，修复<a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=66512&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Bug 66512</a>\"引起的回归问题，如果响应不包含HTTP标头，就不会为响应发送<a href=\"https://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Apache JServ Protocol</a>\"（AJP）SEND_HEADERS消息，从而导致信息泄漏。这已在<a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=66591&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Bug 66591</a>\"中修复，建议开发者迁移到11.0.0-M6、10.1.9、9.0.75或8.5.89。<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42795?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-42795</a>\"，在回收各种内部对象（包括请求和响应，并且这些对象在被下一个请求/响应重用）时发生暴露，错误可能导致Tomcat跳过回收过程的某些部分，从而导致当前请求/响应的<a href=\"https://www.mail-archive.com/announce@apache.org/msg08559.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">信息泄漏</a>\"。<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35116?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">CVE-2023-35116</a>\"，这是针对Jackson Databind 2.15.2及更低版本的漏洞，攻击者可以创建一个使用循环依赖的对象，可能导致拒绝服务。值得注意的是，这个CVE还存在争议，因为Jackson的维护者<a href=\"https://github.com/FasterXML?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">FasterXML</a>\"认为，外部攻击者无法构造试图进行序列化的循环数据结构。</p><p></p><p>有关该版本的更多详细信息，请参阅<a href=\"https://tomee.apache.org/9.1.1/release-notes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p><a href=\"https://tomcat.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Apache Tomcat</a>\" <a href=\"https://www.mail-archive.com/announce@apache.org/msg08587.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">10.1.15</a>\"和<a href=\"https://www.mail-archive.com/announce@apache.org/msg08588.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">8.5.95</a>\"都包含了对主要问题的修复：重构代码后出现的HTTP压缩回归问题；因清理10.1.14和8.5.94中使用不必要的全限定类名导致的回归问题（影响了JDBC连接池）。有关这些版本的更多详细信息，请参阅<a href=\"http://tomcat.apache.org/tomcat-10.1-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">10.1.15</a>\"和<a href=\"https://tomcat.apache.org/tomcat-8.5-doc/changelog.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">8.5.95</a>\"的版本说明。</p><p></p><p></p><h4>JHipster</h4><p></p><p></p><p>JHipster 8.0.0的第一个候选版本包含了错误修复、依赖项升级以及一些显著的变化，如：在Hibernate中，由JHipster生成的equals()方法现在可以被<a href=\"https://blog.andrewbeacock.com/2008/08/how-to-implement-hibernate-safe-equals.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">安全使用</a>\"；改进了<a href=\"https://sonarcloud.io/component_measures?id=jhipster-sample-application&amp;metric=coverage&amp;selected=jhipster-sample-application%3Asrc%2Fmain%2Fwebapp%2Fapp%2Fadmin%2Fmetrics%2Fmetrics.component.ts&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">MetricsComponent</a>\"类的代码覆盖率；改进了对JHipster <a href=\"https://www.jhipster.tech/modules/official-blueprints/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Blueprints</a>\"的支持。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/jhipster/generator-jhipster/releases/tag/v8.0.0-rc.1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>JHipster Lite 0.45.0已经<a href=\"https://twitter.com/pascalgrimaud/status/1715375550452175124?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">发布</a>\"，包含了错误修复、文档改进、依赖项升级以及新功能/改进，如：为了支持YAML配置，新增了一个<a href=\"https://github.com/jhipster/jhipster-lite/blob/main/src/main/java/tech/jhipster/lite/module/infrastructure/secondary/YamlFileSpringPropertiesHandler.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">YamlFileSpringPropertiesHandler</a>\"类；为方便调试，为各种JHipster类新增了toString()方法；支持处理Spring属性文件中的多行注释。有关这个版本的更多详细信息，请参阅<a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v0.45.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">版本说明</a>\"。</p><p></p><p>JHipster团队还进行了10周年<a href=\"https://twitter.com/juliendubois/status/1715255172518035958?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">庆祝</a>\"。第一个<a href=\"https://github.com/jhipster/generator-jhipster/commit/c8630ab7af7b6a99db880b3b0e2403806b7d2436?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">代码提交</a>\"发布于2013年10月21日。</p><p></p><p></p><h4>EclipseCon</h4><p></p><p></p><p><a href=\"https://www.eclipsecon.org/2023?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">EclipseCon 2023</a>\"大会在德国Ludwigsburg的<a href=\"https://forum.ludwigsburg.de/forum,Lde/start.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Forum am Schlosspark</a>\"和<a href=\"https://www.fmz.de/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">电影与媒体中心</a>\"（FMZ）举行，吸引了来自Java社区的<a href=\"https://www.eclipsecon.org/2023/speakers?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">演讲者</a>\"，就汽车与移动性、物联网与边缘计算、开源最佳实践、编程语言与运行时、以及工具与IDE等主题发表了演讲。大会还设有<a href=\"https://www.eclipsecon.org/2023/community-day?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">社区日</a>\"，汇集了志同道合的个人、热情的专家和各行各业的好奇人士，举办会议、研讨会、进行项目更新、演示或小组讨论等。Eclipse基金会的Jakarta EE开发者布道师<a href=\"https://www.linkedin.com/in/ivargrimstad/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">Ivar Grimstad</a>\"<a href=\"https://www.agilejava.eu/2023/10/17/eclipsecon-2023-community-day/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">发布了</a>\"他关于<a href=\"https://www.agilejava.eu/2023/10/17/eclipsecon-2023-community-day/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">社区日</a>\"、<a href=\"https://www.agilejava.eu/2023/10/18/eclipsecon-2023-day-1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">第一天</a>\"、<a href=\"https://www.agilejava.eu/2023/10/19/eclipsecon-2023-day-2/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">第二天</a>\"和<a href=\"https://www.agilejava.eu/2023/10/19/eclipsecon-2023-day-3/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2OTg2MzEzOTksImZpbGVHVUlEIjoiZ08zb2RwYWViYkNnYjVxRCIsImlhdCI6MTY5ODYzMTA5OSwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iidHRDLLLdShi5KbOZSokhZs-k5Cj6xjTJsh_MyEYfA\">第三天</a>\"的每日总结。</p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/10/java-news-roundup-oct16-2023/\">https://www.infoq.com/news/2023/10/java-news-roundup-oct16-2023/</a>\"</p>",
    "publish_time": "2023-11-03 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "《云上新视界》第二期：“德爷闯东非”三维重建技术揭秘",
    "url": "https://www.infoq.cn/article/x110yyuDG8VkLC97gSzs",
    "summary": "<p>通过本次课程，您将了解物品三维模型重建的基本方法及挑战，以及如何利用神经渲染和相关技术克服这些难点的解决方案。此外，还将了解到物品的光场重建和虚实融合渲染技术原理。</p>",
    "publish_time": "2023-11-03 09:47:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "加速「数实融合」，如何抓住数字化转型新机遇？",
    "url": "https://www.infoq.cn/article/8TE8DYGhLDX5OpkTPdmS",
    "summary": "<p><img alt=\"unpreview\" src=\"https://static001.infoq.cn/resource/image/89/66/89b89e4c73007c962c2a4d7d34e21c66.jpg\" /></p>",
    "publish_time": "2023-11-03 11:21:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "火山引擎云安全解决方案负责人林扬确认出席FCon，分享金融企业如何构建安全云底座与合规能力？",
    "url": "https://www.infoq.cn/article/UPZWsozGefXCVeZxykpV",
    "summary": "<p><a href=\"https://fcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=atricle\">FCon 全球金融科技大会</a>\"，将于 11 月在上海召开。火山引擎云安全解决方案负责人林扬将发表题为《<a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5607?utm_source=infoqweb&amp;utm_medium=article\">金融企业如何构建安全云底座与合规能力？</a>\"》主题分享，介绍金融行业安全现状，挑战和发展趋势、安全技术框架建议，以及相关案例。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5607?utm_source=infoqweb&amp;utm_medium=article\">林扬</a>\"，20 年的网络安全从业经验，具备甲乙方安全经历和视角，担任过甲方 CISO，曾担任传统安全公司和互联网云公司解决方案负责人，擅长数字化和上云转型的安全规划和实践，长期深入研究各行业安全需求和问题，是国内行业网络安全攻防推演的专家。他在本次会议的演讲内容如下：</p><p></p><p>演讲：金融企业如何构建安全云底座与合规能力？</p><p></p><p>金融行业信息化和数字化一直走在国内前沿，对于科技风险、安全合规、攻防能力方面要求高，挑战巨大，火山引擎基于自身安全和风控的最佳实践，结合金融行业业务特点，为行业定制适合的安全技术框架和解决方案，云原生安全解决金融行业云基础架构底座安全问题，隐私计算保障金融行业数据共享交换的安全合规和业务价值增长，大模型安全帮助金融行业发现模型安全问题，提供大模型底座和模型算法安全的保障措施。</p><p></p><p>演讲提纲：</p><p></p><p>金融行业安全现状，挑战和发展趋势；金融行业安全技术框架建议；云原生安全：构建金融行业稳定弹性的云安全底座；数据安全：降低合规风险；隐私计算：助力金融行业数据合规互联互通，提升营销增长；大模型安全，帮助金融行业大模型探索提供安全保障；云原生、数据安全成功案例分析。</p><p></p><p>你将获得：</p><p></p><p>○ 了解云原生安全最佳实践和关键点；</p><p>○ 隐私和数据安全合规实践和可落地做法；</p><p>○ 了解业内安全助力业务增长的方法；</p><p>○ 了解大模型安全风险，备案所需的安全评估要点。</p><p></p><p>除上述演讲外，FCon 上海还将围绕&nbsp;<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1580?utm_source=infoqweb&amp;utm_medium=atricle\">DevOps&nbsp;在金融企业落地实践</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1591?utm_source=infoqweb&amp;utm_medium=atricle\">金融行业大模型应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1576?utm_source=infoqweb&amp;utm_medium=atricle\">创新的金融科技应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1577?utm_source=infoqweb&amp;utm_medium=atricle\">金融实时数据平台建设之路</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1588?utm_source=infoqweb&amp;utm_medium=atricle\">金融安全风险管控</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1589?utm_source=infoqweb&amp;utm_medium=atricle\">数据要素流通与数据合规</a>\"等进行交流。</p><p></p><p>FCon 上海 2023，相约 11 月！现在购票，享 8 折优惠 ，立省 ￥1360！咨询购票请联系：17310043226（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8ec7f7fb25c7949931b2b8a5deffddd.png\" /></p><p></p>",
    "publish_time": "2023-11-03 11:30:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "从使用的角度看 ByConity 和 ClickHouse 的差异",
    "url": "https://www.infoq.cn/article/c3SdxNDM4uhqfaP9aU3i",
    "summary": "<p></p><blockquote>Github: https://github.com/ByConity</blockquote><p></p><p></p><p>自 ClickHouse Inc 宣布其重要新功能仅在 ClickHouse Cloud 上开放以来，一些关注 ByConity 开源的社区小伙伴也来询问 ByConity 后续开源规划。为回答社区疑问，我们将之前分享的关于 ByConity 与 ClickHouse 相关功能对比的 webinar 整理为文章，并更新 ByConity 0.2.0 所发布最新功能与 ClickHouse 对比内容，帮助社区小伙伴了解 ByConity 开源社区规划与进展。</p><p></p><p></p><h1>ByConity &amp; ClickHouse 使用视角对比</h1><p></p><p></p><p>我们整理了一些从实用角度看 ClickHouse &amp; ByConity 的异同点，与大家分享：</p><p></p><p>技术架构和核心组件看两者各自特点数据库的基本操作差异：库表创建、数据导入、数据查询等方面两者有什么异同ByConity 的分布式事务ByConity 特殊的表引擎及其优势</p><p></p><p></p><h2>架构和组件</h2><p></p><p></p><h3>ClickHouse 的架构及组件</h3><p></p><p></p><p>ClickHouse 是典型的 MPP 架构，节点对等，所有的功能都被放在 ClickHouse server 组件中。当部署 ClickHouse 集群时，主要是把 ClickHouse server 部署在一组物理机上。</p><p></p><p></p><h4>分布式表 &amp; 本地表</h4><p></p><p></p><p>ClickHouse 提出了分布式表的概念，当 Client 做查询时，首先连接节点找到分布式表，通过 sharding key 的定义以及集群的配置知道分布式表对应的本地表及分布节点。再通过两阶段的执行，先到节点上做本地表的查询，再把查询结果汇聚到分布式表，然后再返回给客户端。</p><p></p><p></p><h4>Replicas</h4><p></p><p></p><p>ClickHouse 提供数据复制的能力，通过对每一个本地表配置 Replica 进行数据复制。不管是分布式的执行，还是数据的复制，都需要 Coordinator 进行节点之间的通信，包括任务的分发等。</p><p></p><p></p><h4>Zookeeper&nbsp;&amp;&nbsp;ClickHouse&nbsp;Keeper</h4><p></p><p></p><p>ClickHouse 之前通过 Zookeeper 提供 Coordinator 能力，部署一个 ClickHouse 集群需要同时部署一个 Zookeeper 集群来承担对应的工作。后来发现 Zookeeper 集群存在很多局限性，在大规模分析型数据查询中会碰到很多性能瓶颈和使用问题，因此进行了一定改进，用 C++ 和 raft 协议实现了 ClickHouse Keeper 组件。ClickHouse Keeper 提供两种部署方式，既可以像 Zookeeper 一样作为单独的集群去部署，也可以放在 ClickHouse server 里跟 ClickHouse server 一同部署。</p><p></p><h3>ByConity 的架构及组件</h3><p></p><p></p><p>ByConity 是存算分离的架构，整体架构主要分为三层：服务接入层、计算层和云存储层。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/03/03aadf14c89951de0c66d47ff8164ab9.png\" /></p><p></p><p></p><h4>服务接入层</h4><p></p><p></p><p>由一组 server 和共享的服务组件组成，包括 TSO、Daemon Manager、Resource Manager。</p><p></p><p>Server</p><p>服务接入层的 server 是做所有查询的入口，当 Client 连接 server 时，server 会先做查询的前处理，包括 SQL 解析、查询优化，生成 Query Plan。每个 Query Plan 由多个 PlanSegment 组成，server 负责把 PlanSegment 下发给 worker 做具体计算。</p><p></p><p>查询过程中会涉及到元数据的管理，比如需要知道库表、字段的定义及统计信息，如 Part 的信息等等，server 就会跟元数据的存储交互。元数据在 ByConity 目前采用 Foundation DB 来实现。</p><p></p><p>TSO：TSO（Timestamp oracle）是提供全局唯一单调递增的时间戳。在分布式事务的时候非常有用。在后面的事务部分将会介绍。</p><p></p><p>Daemon&nbsp;Manager：用来调度和管理任务。ByConity 的分层架构涉及到管理节点，对应提出了后台任务的概念，如 merge、实时数据导入时 Kafka 的 consumer 等，都作为后台任务来进行。后台任务的集中管理和调度都由 Daemon Manager 来实现。</p><p></p><p>Resource Manager ：顾名思义用来管理资源。计算层的 Virtual Warehouse 以及 worker 都由 Resource Manager 管理，分配查询和数据写入应该由哪个 worker 执行；Resource Manager 同时做一定的服务发现，如有新的 worker 加入或新的 Virtual Warehouse &nbsp;创建时，Resource Manager 能够发现。</p><p></p><p></p><h4>计算层</h4><p></p><p></p><p>计算层由一个或者多个 Virtual Warehouse （计算组）构成，执行具体的计算任务。一个 Virtual Warehouse 由多个 worker 构成。计算层为无状态的一层，为了查询的某些性能，这里会有 Disk 的参与，把一些数据缓存在 worker 本地做 disk_cache。在 ByConity 的查询中有冷查（第一次查询）和热查的区别，冷查需要从远端的云存储把数据拉到 disk_cache，后续查询可以直接重用 disk_cache 的数据，查询速度更快。</p><p></p><p></p><h4>云存储层</h4><p></p><p></p><p>采用 HDFS 或 S3 等云存储服务作为数据存储层，用来存储实际数据、索引等内容。</p><p></p><p></p><h3>ByConity 的部署要求</h3><p></p><p></p><p>在部署 ByConity 时，不同的组件有不同的硬件要求。对一些共享服务，如 TSO、Daemon Manager 和 Resource Manager，其资源需求相对较低且比较固定；server 和 worker 所需资源相对较多，尤其是 worker，需要根据不同的查询场景部署到不同的硬件规格上。</p><p></p><p>ByConity 社区推荐使用 Kubernetes 来部署，可通过官方提供的工具和脚本来实现自动化操作，集群后期的运维管理也更方便。具体的部署方式可在文档中查看：https://byconity.github.io/zh-cn/docs/deployment/deploy-k8s</p><p></p><p>由于部署 ByConity 也包括元数据以及远端的存储，即使部署测试环境也有前置要求，即 HDFS 和 Foundation DB。如本身已有环境，可直接进行配置使用。如果没有，可参考对应的部署文档进行设置。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a5/a528463e55528d4861728cffebd8cb76.png\" /></p><p></p><p></p><h3>ByConity 的架构特性</h3><p></p><p></p><p>ByConity 的架构演进源于字节在使用 ClickHouse 过程中所遇到的痛点。ByConity 的组件虽然比较复杂，但设计这些组件有其对应的优势。</p><p></p><p></p><h4>资源隔离</h4><p></p><p></p><p>资源隔离是一个业务高速发展中集群环境变复杂的过程中不可避免的问题。资源隔离有多个层面。</p><p></p><p>租户隔离，在 ToB 的业务上指多租户；在企业内部一般指各个业务线之间在共享集群上的业务隔离。不同的业务线之间通常希望独占部分系统资源，在进行分析、查询这些工作时可以相互不影响。这里必然也伴随着计算资源的隔离。</p><p></p><p>读写分离，由于读操作和写操作对硬件的要求、发生的时间以及热点都不一样，通常希望读写之间也不要互相影响，能够分开用不同规格的资源去跑。</p><p></p><p>冷热分离，一般指冷数据和热数据的存储能够用不同的硬件资源分离，一方面可以减少成本，另一方面也可以让冷热不同的查询之间不受影响。比如说如果有缓存的话，冷查询不会冲掉热查询的缓存，进而对热查询造成性能影响。</p><p></p><p></p><h3>ClickHouse&nbsp;的资源隔离</h3><p></p><p></p><p>ClickHouse 没有在架构层面对资源隔离做专门的设计，因此 ClickHouse 在做上述这些资源隔离时需要单独的方案。</p><p></p><p>读写分离可以通过精准配置 replica（部分专门负责读，部分专门负责写），结合 load balance 策略以及集群的部署方式做一定的区分。但此方案有一定局限性，一是运维成本较高，需要手动精准控制。二是读写分离的资源不方便重用，专门用来负责写的 replica，在读请求高峰时无法 serve 读请求。</p><p></p><p>冷热分离可以通过 TTL，TO DISK，TO VOLUME 的功能，把冷数据和热数据分别指定不同的存储介质去存储。存储方面能够带来成本节约的好处，但是在计算层面依然使用同样的资源，无法做到分离。</p><p></p><p></p><h3>ByConity&nbsp;的资源隔离</h3><p></p><p></p><p>ByConity 可以通过 Virtial Warehouse 部署和使用实现多级资源隔离。由于 Virtial Warehouse 是无状态的，可以针对不同业务、不同场景按需创建。Virtial Warehouse 的创建操作是无感的，所包含的 worker 的创建也比较灵活。不同的 Virtial Warehouse 之间资源独占，可以比较轻松地实现上述隔离。</p><p></p><p>租户隔离：不同的业务线可以根据各自需求创建不同的 Virtial Warehouse，对计算资源可以天然做到物理隔离。计算资源也可以在计算热点不同时做调整，实现成本控制和节省。</p><p></p><p>读写分离：ByConity 的设计要求用户在部署时指定好读和写操作分别使用哪个 Virtial Warehouse，系统会自动地根据不同的读写请求把计算转发到不同的 Virtial Warehouse 中，其天然具备读写分离的能力。</p><p></p><p>冷热分离：从存储上来讲，因为 ByConity 存算分离，所有的数据都会落在远端存储中，不需要做数据冷存介质和热存介质之间的区分，所有的数据都会有完整的一份在远端存储中。由于 disk_cache 的存在，热数据有缓存加速，且所有热数据的载入不需要用户介入，都是自动计算的过程，可以根据查询把所需要的热数据载入到 worker 本地。</p><p></p><p></p><h2>集群扩缩容</h2><p></p><p></p><p>扩缩容是在业务不断增长的场景中必须要考虑的话题。业务在爆发式增长的过程中，可能每两周就需要对集群进行一次扩容，每次扩容都需要伴随很多操作，带来很多的成本。因此扩缩容不得不考虑。</p><p></p><p></p><h3>ClickHouse&nbsp;的扩缩容</h3><p></p><p></p><p>ClickHouse 架构层面未专门考虑扩缩容。ClickHouse 的扩缩容需要通过一定手段来实现：</p><p></p><p>扩容副本，通过使用新的节点来部署新的 ClickHouse server，并把副本转移到新的节点上。但是副本扩容之后需要一定的时间进行复制，并且需要对复制的成功率及结果进行校验。这些操作都需要运维手动去做，没有专门的功能支持。</p><p></p><p>扩容分片，通过增加 Shard 把新的分片部署到新的节点。这种方式会导致数据无法再均衡，即老的数据依然落在老的分片上，在进行具体查询时不同节点上的数据分布不均，需要进行数据再均衡。而数据再均衡的过程在 ClickHouse 中无法自动实现。</p><p></p><p></p><h3>ByConity&nbsp;的扩缩容</h3><p></p><p></p><p>ByConity 是基于存算分离的无感弹性扩缩容，通过 Virtial Warehouse 和 worker 来实现。</p><p></p><p>业务隔离：Virtial Warehouse 可以根据不同的业务线去创建，其创建和销毁均无感。</p><p></p><p>负载隔离：每个 Virtial Warehouse 可以根据业务量的变化调整 worker 的数量。具体来说：一些组件如 Resource Manager 可以自动发现新增加到集群中的 worker，并自动实现数据再均衡。</p><p></p><p></p><h1>数据库的基本操作</h1><p></p><p></p><h2>库表创建</h2><p></p><p></p><h3>ClickHouse</h3><p></p><p></p><p>SQL 标准：ClickHouse 的 SQL 标准为 ClickHouse SQL，它从 ANSI SQL 演化而来，但有很多项不符合 ANSI SQL 标准，如果从其他的数据库迁移到 ClickHouse 需要有较多修改。支持协议：ClickHouse 支持的协议主要是 TCP 和 HTTP，client 和 driver 使用 TCP 协议，也有一些工具和专门的 driver 使用 HTTP。客户端：ClickHouse 本身就有 ClickHouse client，同时对于不同的语言也会有驱动性，比如 clickhouse-jdbc，clickhouse-go。表引擎：在创建库表的时候，ClickHouse 有 MergeTree 家族表引擎，要为每一个表去指定所用的表引擎，用得最多是 MergeTree 以及 MergeTree 衍生出来的 MergeTree 家族，如 replacing MergeTree，aggregated MergeTree 等。</p><p></p><p></p><h3>ByConity</h3><p></p><p></p><p>SQL 标准：ByConity 能够兼容 ClickHouse 原生的 SQL 标准，在 SQL 标准上提供了 dialect 的配置。除了可以使用 ClickHouse 原生的 SQL，ByConity 还提供了 ANSI SQL 的方式。ANSI SQL 不是严格意义上完全符合 ANSI 标准的 SQL，考虑到 ClickHouse SQL 与 ANSI 有比较多的 gap，ByConity 会把一些不符合标准的地方尽量做到符合 ANSI SQL 标准。ANSI 的 dialect &nbsp;可以看作是比 ClickHouse SQL 更加符合标准的 SQL 方式。支持协议：ByConity 原生支持 ClickHouse 的 TCP 和 HTTP 协议。客户端：除了 ClickHouse 支持的客户端以及驱动器，ByConity 有专门的客户端用于支持自己的配置和参数。表引擎：ByConity 提供了合一的表引擎 CnchMergeTree，分布式的执行过程都封装在里面，可以替代 ClickHouse 原生 MergeTree 家族多个 MergeTree 的能力，如 by default 的 MergeTree、replacing MergeTree，包括支持唯一键也在 CnchMergeTree 中封装。Virtial Warehouse 及计算组配置：创建 ByConity 库表有专门的设置，可以通过 DDL 为库表的读和写指定默认的 Virtial Warehouse。读写分离也是通过此操作实现的。</p><p></p><p></p><h2>数据导入</h2><p></p><p></p><h4>ClickHouse</h4><p></p><p></p><p>ClickHouse 的数据导入包括基础的 insert 操作，外部文件的导入&nbsp;insert into … infile…。另外 ClickHouse 提供了很多的外表引擎，可以利用这些外表引擎创建外表，通过&nbsp;insert select&nbsp;从外表把数据导入 ClickHouse。ClickHouse 多用在实时数仓场景，在 ClickHouse 的数据导入中，实时数据导入是一个比较重要的话题。ClickHouse 专门的表引擎—— ClickHouse Kafka 在 ClickHouse 中用得非常多。</p><p></p><p></p><h4>ByConity</h4><p></p><p></p><p>ByConity 对于基础 insert、外部文件导入以及外表数据导入与 ClickHouse 相同，语法上也一样。此外，ByConity 提供了更多的数据导入方式，包括一个数据导入工具，PartWriter。</p><p></p><p></p><h4>PartWriter&nbsp;</h4><p></p><p></p><p>可以集成在 Spark 的流程处理中，不通过 ByConity 的表引擎，直接将数据文件转换为 ByConity 能够识别的的 parts 文件。</p><p></p><h3>后台任务</h3><p></p><p></p><p>在数据导入时有很多后台任务需要管理，如数据导入之后的 merge 和 mutate 任务，Kafka 表引擎实时消费任务等。通过操作语句跟后台任务进行交互，监控后台任务的执行情况及系统表的性能指标，能够实现对后台任务的精准控制。</p><p></p><h2>实时数据消费</h2><p></p><p></p><p></p><h3>ClickHouse&nbsp;的&nbsp;Kafka&nbsp;表引擎</h3><p></p><p></p><p>ClickHouse 做 Kafka 的数据导入会创建以下几个部分：</p><p></p><p>用 Kafka 表引擎创建 Kafka 外表，指定从哪个 Kafka 的集群消费数据，整个 consumer 如何配置定义一个 ClickHouse 的 MergeTree 表，作为数据真正写入的表定义一个 Materialized View，把上述两个部分连接起来</p><p>Kafka 的数据导入在创建以上三个部分之后会在后台运行，之后不停地把数据从 Kafka 消费出来写入到目标表。</p><p></p><h3>ByConity&nbsp;的&nbsp;Kafka&nbsp;表引擎</h3><p></p><p></p><p>ByConity 从基本用法跟 ClickHouse 一致，从 Kafka 消费数据也是创建外表、CNCH MergeTree，并创建一个 Materialized View 把两部分连接起来。但是 ByConity 在具体操作中跟 ClickHouse 存在差异。</p><p></p><p></p><h3>Kafka&nbsp;消费模式方面的差异：</h3><p></p><p></p><p>ClickHouse 在 Kafka 消费时使用 High Level 的消费方式。这是一种自动化程度更高的消费方式，可以动态分配 Kafka 的 Partition 到 Consumer 的 instance。当发现有 Consumer 挂掉或有新的 Consumer 加入时，可以自动 Rebalance，把 Partition 进行重分配。ClickHouse其 MPP 的架构更加适合 High Level 消费方式，可利用 Kafka 进行 Rebalance。但是这种方式很难保证 Exactly Once，因为在 Rebalance 过程当中会由失败引起数据的重复消费，如果这些重复消费在目标表中没有去重手段，肯定会造成数据重复，无法保证 Exactly Once。在此消费方式下，Partition 经常 Rebalance 到不同的 Consumer 节点，在 ClickHouse 中则会 Rebalance 到不同的 ClickHouse shard，一方面运维排查比较困难，另一方面很难控制 Partition 具体会落到哪些 shard 上。</p><p></p><p></p><h2>如何保证 Exactly Once</h2><p></p><p></p><p>ByConity 采用 Low Level 的消费模式：Kafka 消费当中的 assign 静态地分配 Partition 到具体的 consumer instance，这也是 ByConity 多层架构的便利性，可以由 server 控制 Partition 的分发，由worker 执行真正的 consumer instance 的消费操作。</p><p></p><p>本身具有调度能力的产品更倾向于用 Low Level 的消费方式，如 Flink 和 Spark streaming。此方式的一个最大的好处是不会造成数据重复，尽量保证 Exactly Once，精准控制哪个 Partition 由哪个 consumer 消费。同时在提交 offset 时，也会让数据写入和 offset 的提交有事务保证。在线上运维排查及数据审计时也更加方便，Partition 不会乱飘，如发现 Partition 有比较大的 LAG 也有迹可循，直接从 server 上找到具体的 worker，进而找到具体失败的原因。</p><p></p><h2>数据查询</h2><p></p><p></p><h3>ClickHouse</h3><p></p><p></p><p>ClickHouse 对复杂查询的支持并不完整，它采用两阶段聚合的方式，即分布式表和本地表。在分布式表把查询分发到本地表，在本地表做第一个阶段的聚合之后再聚合到分布式表做第二阶段的聚合，也称为scatter/gather 的模式。</p><p>ClickHouse 提供了&nbsp;GLOBAL JOIN&nbsp;和&nbsp;GLOBAL IN，类似于 Broadcast Join 的方式。在一个大表去 join 小表的时候，可以让小表的数据先一步被计算出来，然后分发到大表去做 local 的 join。ClickHouse 对复杂查询支持有限，多表 join 一直是 ClickHouse 的痛点。使用 ClickHouse 需要在前期尽量把数据打平成大宽表。</p><p></p><h3>ByConity</h3><p></p><p></p><p>ByConity 的复杂查询通过优化器来实现，优化器对复杂查询有非常大的性能提升，推荐默认打开。ByConity 引入了多阶段的查询，首先由优化器生成执行计划并分派到各个 worker，进而支持比较复杂的查询，如节点之间有数据的消费能力的查询。</p><p>优化器的工作需要统计信息支撑，因为它里面有 CBO，需要去手动地维护统计信息。ByConity 提供了对统计信息操作的手段，包括 create Stats，drop stats，以及去查看统计信息的手段。具体内容可以参考优化器的分享：ByConity Monthly Webinar-20230321-优化器原理解析与性能差异_哔哩哔哩_bilibili</p><p></p><h1>分布式事务</h1><p></p><p></p><p></p><h2>为什么要支持事务</h2><p></p><p></p><p>在分布式系统中，不同的系统对事务支持程度不同，一般考虑 ACID 四个特性。OLTP 数据库对事务的要求较高，一般支持多种事务的隔离级别，且会支持比较高的级别，如 Serializable。但是一些 NO SQL 的数据库，为了达到极致性能，会把 ACID 的部分特性做得相对较弱。</p><p>OLAP 的环境中很多时候并不特别强调事务的重要性。但在真正的业务中，即使对 OLAP 系统，事务也是非常重要的。其中一个关键是保证数据的准确性，有些系统虽然能够保证最终的一致性，但在过程中会出现数据不准确的情况。对实时性要求比较高的系统，数据不准确会带来不好的用户体验。</p><p>此外在使用 OLAP 系统时，因为数据不都是一次性导入的，经常会有数据的增量更新，在这种需求里面也需要事务操作。</p><p></p><h3>ClickHouse</h3><p></p><p></p><p>ClickHouse 虽然有分布式的查询，但是并不支持分布式事务，本地事务支持目前仅针对单次写入在 max_insert_block_size 以内的数据有事务保证。</p><p></p><p>此种事务保证对于大部分在 ClickHouse 里面真正跑的查询是不够的，ClickHouse 社区目前正在实现事务增强，如提供 MVCC 和 RC 的隔离级别，支持多 insert 和多 select 组成的交互性事务。此功能还目前还在 experimental 阶段，需要特殊配制才能使用。即使最终完全实现也还是一个 local 的事务，只针对本地表有事务保证，无分布式事务的规划。</p><p></p><p></p><h3>ByConity</h3><p></p><p></p><p>ByConity 进行了比较完整的分布式事务实现，其 ACID 的特性保证如下：</p><p></p><p>原子性（Atomicity）：ByConity 在各种情况下都会保证原子性，包括掉电，错误和宕机等各种异常情况。一致性（Consistency ）：保证数据库只会从一个有效的状态变成另外一个有效的状态，不会有中间状态被看到，任何数据的写入必须遵循已经定义好的规则。隔离性（Isolation ）：ByConity 为用户提供的是 read committed(rc)隔离级别的支持。未完成的事务写入对于其他事务是不可⻅的持久性（Durability ）：ByConity 采取的存储计算分离结构，利用了成熟的高可用分布式文件系统或者对象存储，保证成功事务所提交数据的高可用。</p><p></p><p>另外，ByConity 通过两个比较重要的组件来进行事务保证。</p><p></p><p>Foundation&nbsp;DB：通过 Foundation DB 的能力做事务中的必要操作。Foundation DB 本身具有的原子性操作及CAS的操作在事务的执行过程中有帮助。Timestamp Oracle（TSO）：通过 Timestamp Oracle 提供全局唯一时间戳，时间戳是单调递增的，可以用来做事务的 ID。</p><p></p><p>在事务的具体实现中，这是一个典型的两阶段提交的实现。第一个阶段写入事务记录，包括写 undo buffer，远端存储，提交元信息等。第二个阶段真正提交事务，并更新事务记录的提交时间。在事务成功和失败的时候，用 undo buffer 去做一些清理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9f/9f79b456baa1918739e364828798a554.png\" /></p><p></p><p></p><p></p><h1>特殊的表引擎</h1><p></p><p></p><h2>Unique 表引擎</h2><p></p><p></p><p>很多分析型数据库有 Upsert 的需求，如果表中存在已有数据，希望覆盖掉前面的重复数据，因此需要唯一键的保证来进行判读。ClickHouse 很难保证数据插入的唯一性。ClickHouse 提供的 replacing MergeTree 可以在一定程度上达到此效果，但 replace MergeTree 不保证键一定是唯一的，因为它是异步，要在 merge 时才能做数据的覆盖。如果 merge 一直不做或者做得比较晚则会出现重复数据的状态，而这种状态在很多场景下不允许出现。因此需要一个能够保证键的唯一性的场景来做 Upsert 的支持。</p><p></p><h3>ByConity&nbsp;的实现方式</h3><p></p><p></p><p>ByConity 对 Upsert 支持中，行级的 update 操作被转换成 delete + insert。行级 delete 通过 DeleteBitmap 实现，DeleteBitmap 存放了该 part 中所有被删除的行的行号。具体的增删改查都会围绕 DeleteBitmap 操作，比如 insert 时修改 Bitmap 对比版本信息；在 select 之后，根据 DeleteBitmap 当中的标识去 filter 数据。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ea/ea17327360db0c2d21e83187e28fe51f.png\" /></p><p></p><p>为了加速执行，ByConity 对 Unique Key 创建了 index。因为在 Bitmap 中放的是行号，从 key 到行号需要索引，通过 Unique Key Index 可以实现 Key 到行号的快速定位。</p><p>唯一性的保证也需要控制写冲突的发生。在并发的情况下，如果有不同的写请求过来，需要加锁去保证写冲突不会发生。从上可知，Unique 表引擎需要一定代价，是在真正需要此场景的表里才会需要用到的表引擎。</p><p></p><h2>Bucket 表</h2><p></p><p></p><p>Snowflake 提出了 cluster table 的概念，即当一个表的数据量比较大时能够对表的数据进行再分片。即使是同一个 Partition 中的数据，也希望能够再分片，增加整个系统的并行度，并利用分片的 key 做性能优化。</p><p></p><p>Bucket 表在 ByConity 中需要以下语句来实现：</p><p></p><p>在 DDL 指定 cluster key，以及把表建成多少个 Bucket</p><p></p><p><code lang=\"null\">CREATE TABLE t(...)\nCLUSTER BY (column, expression, ...) INTO 32 BucketS</code></p><p></p><p>Bucket 后期可通过&nbsp;ALTER TABLE修改</p><p></p><p><code lang=\"null\">ALTER TABLE t CLUSTER BY (column, expression, ...) INTO 64 BucketS</code></p><p>也可以把 Bucket 表整个 drop 掉</p><p><code lang=\"null\">ALTER TABLE t DROP CLUSTER</code></p><p></p><p></p><h3>需要使用 Bucket 表的场景</h3><p></p><p></p><p>首先表的数据要足够大，一个 Partition 的数据要产生足够多且比较大的 Parts，⾄少需要显著多于 worker 的数量，不至于产生很多的小文件。另外要有一些性能优化的场景，有助于查询中性能的提升。</p><p></p><h3>使用&nbsp;Bucket 表的收益</h3><p></p><p></p><p>针对 cluster key 的点查可以过滤掉大部分数据，降低 ΙΟ 量以获得更短的执⾏时间和更⾼的并发QPS针对 cluster key 聚合计算，计算节点可以在数据子集进行预计算，实现更小的内存占用和更短的执行时间在两张表或多张表 join 时，针对 cluster key 可以获得 co-located join 的优化，极大程度上降低 shuffle 的数据量并得到更短的执行时间，提升查询效率。</p><p></p><p></p><h3>Cluster key 的选择</h3><p></p><p></p><p>用 Bucket 表的时候，需要注意 cluster key 的选择，选择的时候要尽量去选在查询条件中经常会用到的组合的 column、经常需要聚合的 column，以及 join 时的一些 join key。</p><p></p><h3>分桶数量的选择</h3><p></p><p></p><p>分桶数量可以参考 worker 的数量。做 Bucket 表一定程度上的目的是能够尽量发挥多个 worker 的计算能力去进行并行计算。所以在分桶数量选择上可以尽量地去选 worker 的倍数，比如 1 倍或者 2 倍。</p><p></p><h3>Recluster</h3><p></p><p></p><p>分桶指定好了可以改变，但是改变需要一定的代价，需要数据的重新分配。因此建议尽量在必要的时候才进行 recluster 的操作。</p><p></p><h1>数据湖支持</h1><p></p><p></p><p>ClickHouse 支持以外表的形式读取 Hive 以及 Hudi/Iceberg 等格式。这些外表都是以本地单机表的形式存在，因此性能并不能令人满意。且实现上较为割裂，使用起来较为不便。目前 Hive 仅能支持读取 HDFS 上数据，Hudi/Iceberg 仅能支持读取S3上的数据。</p><p></p><p>ByConity 通过统一的 Multi-catalog 的架构，极大增强了使用外表的便捷性。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9f/9fb408c6e3326a2b2f616610aa527320.png\" /></p><p></p><p></p><h3>ByConity&nbsp;Multi-Catalog</h3><p></p><p></p><p>Multi-Catalog 的设计允许用户在同一个 Hive 实例中同时连接多个不同的存储和元数据服务，而不必为每个存储创建单独的 Hive 实例。这简化了数据管理和查询的复杂性，使组织能够更好地管理和利用其多样化的数据资源。目前已经支持的外部 Catalog 有：Hive，Apache Hudi，AWS Glue。</p><p></p><p>用户可以使用创建一个基于 Hive 和 S3 存储的 Catalog</p><p></p><p><code lang=\"null\">create external catalog hive_s3\nproperties type='hive', hive.metastore.uri = 'thrift://localhost:9083';</code></p><p></p><p></p><p>然后使用三段式的命名来直接访问 Hive 外表</p><p></p><p><code lang=\"null\">select * from hive_s3.tpcds.call_center;</code></p><p></p><p></p><p>也可以使用 query 来查看 external catalog 相关的信息</p><p><code lang=\"null\">-- display information releated to hive_s3\nshow create external catalog hive_s3;\n-- show databases in hive_s3\nshow databases from hive_s3;\n-- show tables in tpcds database in hive.\nshow tables from hive_s3.tpcds;</code></p><p></p><p></p><p></p><h3>ByConity&nbsp;Hive&nbsp;外表</h3><p></p><p></p><p>ByConity CnchHive 可以充分使用 Virtual Warehouse 的计算资源执行查询。支持 HDFS 和 S3 文件系统。为了优化性能，ByConity Hive 外表支持统计信息集成优化器，它可以根据数据的统计信息自动选择最佳的执行计划。统计信息集成优化器可以在 benchmark 中显著提高查询性能。目前ByConity Hive 外表不仅能完整跑通 TPC-DS 基准测试，同时在性能方面表现出色。</p><p></p><p><code lang=\"null\">CREATE TABLE tpcds_100g_parquet_s3.call_center\nENGINE = CnchHive('thrift://localhost:9083', 'tpcds', 'call_center')\nSETTINGS vw_default = 'vw_default';</code></p><p></p><p></p><h3>ByConity&nbsp;Hudi&nbsp;外表</h3><p></p><p></p><p>ByConity 实现了对 Apache Hudi Copy-On-Write 表的进行快照查询。在开启 JNI Reader 后可以支持 Merge-On-Read 表的读取。Hudi 支持同步 HiveMetastore，因此 ByConity 可以通过 HiveMetastore 感知 Hudi 表。</p><p></p><p><code lang=\"null\">CREATE TABLE hudi_tableENGINE = CnchHudi('thrift://localhost:9083', 'hudi', 'trips_cow')SETTINGS vw_default = 'vw_default';</code></p><p></p><p></p><p></p><p></p><h1>总结</h1><p></p><p></p><p>下表总结了 ClickHouse 和 ByConity 之间的一些不同点，帮助大家有一个比较清晰的了解。除此之外，ByConity 还有很多特性。欢迎关注更多相关的内容分享。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6a/6ad0118826fbd9b8a2901fd02b174e5f.png\" /></p><p></p><p></p><blockquote>Github:&nbsp;https://github.com/ByConity</blockquote><p></p><p></p><p>分享视频：从使用的角度看 ByConity 和 ClickHouse 的差异_哔哩哔哩_bilibili</p><p></p><p>PPT 获取：https://bytedance.feishu.cn/file/X43Nb8Ec5o0kHcxIzdGcf880nSh?from=from_copylink</p>",
    "publish_time": "2023-11-03 12:35:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]