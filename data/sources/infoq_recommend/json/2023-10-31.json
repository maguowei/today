[
  {
    "title": "空间小程序: Web 开发者的下一个增长曲线？",
    "url": "https://www.infoq.cn/article/Cj9r10fBw460GHSRu1bO",
    "summary": "<p>YodaOS 首个版本发布于 19 年，它当时定位于开源智能音箱解决方案，笔者当时就作为 YodaOS 应用框架的核心维护者，为 JavaScript 开发者提供了内置的 JavaScript 语音应用框架。</p><p></p><p>时过境迁，智能音箱逐渐淡出了人们的焦点，似乎在语音助手领域的场景与 Web 生态并没那么契合，带屏音箱也让解决方案重新回到了 AOSP（Android）的生态。</p><p></p><p>而我兜兜转转 4 年过去，又回到了 Rokid，我仍然希望为 Web 开发者们找到一些有趣又足够支撑起工程师们生存的下一个增长曲线，于是便有了今天的 YodaOS JSAR —— 空间小程序。</p><p></p><p>几年时间，YodaOS 从原来的智能音箱操作系统（基于 Linux）升级为 YodaOS Master，后者是用于空间计算（AR/MR/XR）场景的操作系统，技术底座也从原来的 Linux Kernel 变为 AOSP，而 YodaOS JSAR 则是在这个系统之上构建的一套面向 Web 开发者的应用框架，可以说 YodaOS JSAR 是之前 YodaOS JavaScript Application Framework 的延续，从原来开发一个语音技能应用升级到空间小程序的开发。</p><p></p><p>就在不久前，笔者受邀参加了 OpenJS World 2023 在上海的一次小型分享会：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/c5/c514ee58cbec4cdfd6976eea90a16242.png\" /></p><p></p><p>OpenJS World 2023 上海站研讨会</p><p></p><p>本文将结合这次研讨会上分享的内容做一次文字版本的输出，以期望给本文读者了解 YodaOS JSAR 的全貌以及背后的思考逻辑。</p><p></p><p></p><h2>空间与空间计算</h2><p></p><p></p><p>作为背景补充，首先来了解什么是空间。</p><p></p><p>在增强现实（AR）的场景中，空间是指现实世界中的一个区域，这个区域可以是一个平面，也可以是一个立体的物体。用户通过空间小程序来获取空间的信息，比如空间的大小、空间的位置、空间的旋转角度等等，而在一般的 AR 应用开发中，我们都会使用一个场景来承载空间。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/30/30ce0dc6d7cf1829e83e7543edb9fe6c.png\" /></p><p></p><p>来自 Wolvic 技术文档</p><p></p><p>如上图，来自 Wolvic 的技术文档，它描述了一个浏览器在空间中的设计，可以看到浏览器之前的 Tab 现在变为了一系列环绕在用户周围的虚拟屏幕（网页），这样用户只需要通过转头即可切换要浏览的网页或应用，而功能菜单则位于虚拟屏幕的上下，可以通过手柄或者手势进行交互。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a4/a47e48755ddfdf12a7e6606269c483d6.png\" /></p><p></p><p>来自 YodaOS-Master 系统真机录制</p><p></p><p>而 YodaOS Master 系统也有同样的设计，用户可以在系统中打开不同的窗口，每个窗口对应一个网页或者安卓应用，用户通过手势或射线来与窗口和功能菜单进行交互。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e5/e51d7e2534861631c56eb2b32a62869c.png\" /></p><p></p><p>来自 Wolvic 技术文档</p><p></p><p>用户空间描述起来就如同上图一样：用户位于空间的中心，围绕着用户的是一个圆柱曲面，用户可以将曲面中的一部分作为一块虚拟屏幕用于显示一个网页或应用，用户通过转头来切换要使用的应用。</p><p></p><p></p><h2>空间小程序</h2><p></p><p></p><p>读者熟知的小程序一般是微信小程序，开发者通过开发小程序可以在用户无需下载应用的情况下，在微信中使用一些即开即用的功能，比如：点外卖、酒店预定、网约车等。</p><p></p><p>那空间小程序是什么呢？先来看一个演示视频：</p><p></p><p></p><blockquote><a href=\"https://ar.rokidcdn.com/web-assets/pages/yodaos-jsar-demo.mp4%EF%BC%88%E8%BF%99%E9%87%8C%E6%98%AF%E8%A7%86%E9%A2%91%EF%BC%89\">https://ar.rokidcdn.com/web-assets/pages/yodaos-jsar-demo.mp4（这里是视频）</a>\"</blockquote><p></p><p></p><p>可以看到除了在上一小节中看到的屏幕外，还在空间中有一些可交互的 3D 物体，这就是空间小程序。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/b3/b3e92b49547a3e6ec05d6b9e348e420f.png\" /></p><p></p><p>因此，空间小程序就是在原有的空间中，在屏幕之外添加一些可交互的 3D 物体，并且每个可交互物体之间是独立运行的。这就需要空间小程序具备以下特性：</p><p></p><p>安全性从平面到立体从窗口到空间</p><p></p><h2>为什么选择 Web</h2><p></p><p></p><p>单从空间小程序的技术实现来说，并不一定要选择 Web，像 Lua、Python 或是其他脚本语言都可以完成，这次除了我自己对于 Web 的一腔热血外，也需要一些特别的技术优势。</p><p></p><p>Web 技术从 1993 年 HTML 1.0 发布以来，从原来的文档分享，到信息站点，再到现在的 Web 应用，我们可以抽取到大家愿意使用 Web 技术的特点就是安全性和便捷性，而这两者相辅相成、互相成就。</p><p></p><p>因此 YodaOS JSAR 希望基于安全性和便捷性设计的空间应用框架，以此来让开发者和用户可以在独立的空间应用之外，可以做一些简单、有趣、便捷的“空间小程序”，它可以很容易被分享（当然安全性是前提）和传播。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/8b/8b1ce4c107a2eb19622097821abb258a.png\" /></p><p></p><p></p><h2>新三剑客</h2><p></p><p></p><p>在空间计算时代，YodaOS JSAR 给出了 Web 的新解决方案，即新的三件套 —— XSML、SCSS 和 TypeScript。</p><p></p><p></p><h3>XSML</h3><p></p><p></p><p>它对应于 HTML，全称是 eXtensible Spatial Markup Language，即可拓展空间标记语言。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/5d/5d854159bc0d591dac1fcd8e20b7ae76.png\" /></p><p></p><p>XSML 代码示例</p><p></p><p>上图是 XSML 的代码示例，熟悉 HTML 的开发者一定不陌生，几乎和今天的 HTML 类似，区别仅在于一些标签的差异，比如：</p><p></p><p> 变成了  变成了 </p><p></p><p>以下便是一些 YodaOS JSAR 新增的标签：</p><p></p><p>引用 3D 模型创建一个立方体创建一个平面创建一个球体创建一个胶囊形状创建一个圆环创建一个 3D 包围盒，类似于</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a7/a7bbe330297f7c748a2d0821039fbdbe.png\" /></p><p></p><p>上图的狮子就是通过 XSML 描述生成的：</p><p></p><p>源代码：<a href=\"https://github.com/M-CreativeLab/jsar-gallery-flatten-lion/blob/main/lib/lion.xsml\">https://github.com/M-CreativeLab/jsar-gallery-flatten-lion/blob/main/lib/lion.xsml</a>\"在线演示：<a href=\"https://jsar.netlify.app/playground?url=https://raw.githubusercontent.com/M-CreativeLab/jsar-gallery-flatten-lion/main/lib/lion.xsml\">https://jsar.netlify.app/playground?url=https://raw.githubusercontent.com/M-CreativeLab/jsar-gallery-flatten-lion/main/lib/lion.xsml</a>\" （请确保你本地可以访问 raw.githubusercontent.com 域名）</p><p></p><p></p><blockquote>如需了解完整的 XSML 说明，可访问：<a href=\"https://jsar.netlify.app/zh-CN/manual/latest/basic-concepts/intro-xsml\">https://jsar.netlify.app/zh-CN/manual/latest/basic-concepts/intro-xsml</a>\"</blockquote><p></p><p></p><p></p><h3>SCSS</h3><p></p><p></p><p>它对应于 CSS，全称是 Spatial Cascading Style Sheet，即空间层叠样式表。SCSS 语法完全继承自 CSS，使用方式也相同：</p><p></p><p>通过选择器选择对应的元素设置样式</p><p></p><p>比如：</p><p></p><p><code lang=\"css\">@material red {\n  diffuse-color: #ff2200;\n}\n\n#box {\n  rotation: 0 0 180;\n  position: 0 1 0;\n  material: \"red\";\n}\n</code></p><p></p><p>可以看到现在设置的不再是原来 CSS 的样式，而是面向 3D 空间设计的旋转、位置和材质等。通过 SCSS 可以非常容易和自然的布局空间样式，相较于脚本的方式更直观。</p><p></p><p></p><blockquote>如需了解完整的 SCSS 说明，可访问：<a href=\"https://jsar.netlify.app/zh-CN/manual/latest/basic-concepts/intro-scss\">https://jsar.netlify.app/zh-CN/manual/latest/basic-concepts/intro-scss</a>\"</blockquote><p></p><p></p><p></p><h3>TypeScript</h3><p></p><p></p><p>随着 Deno 和 Bun 这样的服务端运行时都默认支持了 TypeScript，YodaOS JSAR 也选择了 TypeScript 作为原生的支持语言，它在运行时内置了一个 TypeScript 编译器，在解释&nbsp;</p>",
    "publish_time": "2023-10-31 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Java近期新闻：外部函数和内存API、OpenJDK JEP、Apache Tomcat CVE",
    "url": "https://www.infoq.cn/article/gxV6VXEQ1tV41E0k6vRb",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p>&nbsp;</p><p>在结束了评审之后，JEP 454（外部函数和内存API）从Proposed to Target<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-October/008357.html\">进入</a>\"到了Targeted（JDK 22）状态。该JEP建议在经历了两轮孵化和三轮预览之后确定这个特性：在JDK 17中交付的JEP 412（<a href=\"https://openjdk.org/jeps/412\">外部函数和内存API(孵化器)</a>\"）、在 JDK 18中交付的JEP 419（<a href=\"https://openjdk.org/jeps/419\">外部函数和内存API(第二轮孵化器)</a>\"）、在 JDK 19中交付的JEP 424（<a href=\"https://openjdk.org/jeps/424\">外部函数和内存API(预览)</a>\"）、在 JDK 20中交付的JEP 434（<a href=\"https://openjdk.org/jeps/434\">外部函数和内存API(第二次预览)</a>\"），以及在JDK 21 GA版本中交付的JEP 442（<a href=\"https://openjdk.org/jeps/442\">外部函数和内存API(第三次预览)</a>\"）。自上一个版本以来的改进包括：新的Enable-Native-Access manifest属性，允许可执行JAR包中的代码调用受限制的方法而无需使用——Enable-Native-Access标志；允许客户端通过编程的方式构建C函数描述符，避免使用特定于平台的常量；改进了对本地内存中可变长度数组的支持；支持多字符集本地字符串。InfoQ将会继续跟进报道。</p><p>&nbsp;</p><p>JEP 460（<a href=\"https://openjdk.org/jeps/460\">Vector API(第七轮孵化器)</a>\"）已从JEP Draft 8315945进入到Candidate状态。这个JEP整合了针对前六轮孵化的增强：在JDK 21 GA版本中交付的JEP 448（ <a href=\"https://openjdk.org/jeps/448\">Vector API (第六轮孵化器)</a>\"）在JDK 20中交付的JEP 438（<a href=\"https://openjdk.org/jeps/438\">Vector API (第五轮孵化器)</a>\"）、在JDK 19中交付的JEP 426（<a href=\"https://openjdk.org/jeps/426\">Vector API (第四轮孵化器)</a>\"、在JDK 18中交付的JEP 417（<a href=\"https://openjdk.java.net/jeps/417\">Vector API (第三轮孵化器)</a>\"、在JDK 17中交付的JEP 414（<a href=\"https://openjdk.java.net/jeps/414\">Vector API (第二轮孵化器)</a>\"）、在JDK 16中作为<a href=\"https://openjdk.java.net/jeps/11\">孵化器模块</a>\"发布的JEP 338（<a href=\"https://openjdk.java.net/jeps/338\">Vector API (孵化器)</a>\"）。JEP 448最重要的变化包括对<a href=\"https://docs.oracle.com/en/graalvm/enterprise/20/docs/reference-manual/compiler/#graalvm-compiler\">JVM编译器接口</a>\" (JVMCI)的增强，以支持Vector API的值。</p><p>&nbsp;</p><p>JEP Draft 8315398（<a href=\"https://openjdk.org/jeps/8315398\">隐式声明类和实例主方法(第二次预览)</a>\"），即之前的未命名类和实例主方法(预览)、灵活主方法和匿名主类(预览)和隐式类和增强的主方法(预览)，根据前一轮<a href=\"https://openjdk.java.net/jeps/12\">预览</a>\"，即JEP 445（<a href=\"https://openjdk.org/jeps/445\">未命名类和实例主方法(预览)</a>\"）的反馈进行了增强。这个JEP建议“让学生可以在不需要理解太多语言特性的前提下编写他们的第一个程序。”2022年9月，Oracle的Java语言架构师<a href=\"https://www.linkedin.com/in/briangoetz/\">Brian Goetz</a>\"为此撰写了<a href=\"https://openjdk.org/projects/amber/design-notes/on-ramp\">“Paving the on-ramp”</a>\"一文。Oracle技术委员会成员<a href=\"https://www.linkedin.com/in/gavin-bierman-a0173075/\">Gavin Bierman</a>\"已<a href=\"https://mail.openjdk.org/pipermail/amber-dev/2023-May/008065.html\">发布</a>\"<a href=\"https://cr.openjdk.org/~gbierman/jep445/jep445-20230502/specs/unnamed-classes-instance-main-methods-jls.html\">规范文档</a>\"初稿，供Java社区评审。关于JEP 445的更多细节可以在InfoQ的其他<a href=\"https://www.infoq.com/news/2023/05/beginner-friendly-java/\">报道</a>\"中找到。</p><p>&nbsp;</p><p>Oracle技术委员会成员<a href=\"https://www.linkedin.com/in/gavin-bierman-a0173075/\">Gavin Bierman</a>\"对JEP 447（<a href=\"https://openjdk.org/jeps/447\">super()的前置语句(预览)</a>\"）的<a href=\"https://cr.openjdk.org/~gbierman/jep447/jep447-20230927/specs/statements-before-super-jls.html\">规范文档</a>\"进行了<a href=\"https://mail.openjdk.org/pipermail/amber-spec-observers/2023-October/004127.html\">更新</a>\"。JEP 447提议允许在构造函数的this()或super()之前出现不引用正在创建的实例的语句，并保留构造函数现有的安全性和初始化保证。</p><p>&nbsp;</p><p></p><h4>JDK 22</h4><p></p><p>&nbsp;</p><p>JDK 22<a href=\"https://jdk.java.net/22/\">早期访问构建版本</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22%2B19\">Build 19</a>\"提供了针对Build 18的<a href=\"https://github.com/openjdk/jdk/compare/jdk-22%2B18...jdk-22%2B19\">更新</a>\"，其中包括对各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2022%20and%20%22resolved%20in%20build%22%20%3D%20b19%20order%20by%20component%2C%20subcomponent\">问题</a>\"的修复。关于该构建版本的更多细节可以在<a href=\"https://jdk.java.net/22/release-notes\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p>对于<a href=\"https://openjdk.org/projects/jdk/22/\">JDK 22</a>\"，开发人员可以向<a href=\"https://bugreport.java.com/bugreport/\">Java Bug Database</a>\"报告错误。</p><p>&nbsp;</p><p></p><h4>Spring Framework</h4><p></p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-framework\">Spring Framework</a>\" 6.1.0的<a href=\"https://spring.io/blog/2023/10/12/spring-framework-6-1-rc1-released\">第一个候选发行版</a>\"包含了一些问题修复、文档改进、依赖项升级和新特性，例如：为改进对CRaC的支持，将<a href=\"https://docs.spring.io/spring-framework/docs/6.1.0-RC1/javadoc-api/org/springframework/http/client/reactive/ReactorResourceFactory.html\">`ReactorResourceFactory`</a>\"类从org.springframework.http.client包移到了 org.springframework.http.client包中；允许为<a href=\"https://docs.spring.io/spring-framework/docs/6.1.0-RC1/javadoc-api/org/springframework/web/client/RestClient.html\">`RestClient`</a>\"接口实现<a href=\"https://docs.spring.io/spring-framework/docs/6.1.0-RC1/javadoc-api/org/springframework/http/client/observation/ClientRequestObservationConvention.html\">`ClientRequestObservationConvention`</a>\"接口；在<a href=\"https://docs.spring.io/spring-framework/docs/6.1.0-RC1/javadoc-api/org/springframework/context/event/ApplicationListenerMethodAdapter.html\">`ApplicationListenerMethodAdapter`</a>\"类中公开shouldHandle(ApplicationEvent)方法，用于检查监听器是否对某个事件感兴趣。关于该版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.1.0-RC1\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p>类似的，Spring Framework 6.0.13已<a href=\"https://spring.io/blog/2023/10/12/spring-framework-6-0-13-available-now\">发布</a>\"，其中包含了问题修复、文档改进、依赖项升级和新特性，如：改进了针对<a href=\"https://docs.spring.io/spring-framework/reference/core/expressions.html\">Spring表达式语言</a>\"中因重复文本大小计算而导致的溢出的诊断；为注解了<a href=\"https://docs.spring.io/spring-framework/docs/6.1.0-RC1/javadoc-api/org/springframework/context/annotation/Configuration.html\">`@Configuration`</a>\" 的CGLIB代理类重新引入<a href=\"https://docs.spring.io/spring-framework/docs/6.1.0-RC1/javadoc-api/org/springframework/cglib/reflect/FastClass.html\">`FastClass`</a>\" 类。关于该版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.0.13\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-data\">Spring Data</a>\" 2023.1.0<a href=\"https://spring.io/blog/2023/10/13/spring-data-2023-1-goes-rc1\">第一个候选版本</a>\"（代号为Vaughn）的特新包括：支持JDK 21；通过配置Java<a href=\"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Executor.html\">`Executor`</a>\" 接口来使用虚拟线程；支持Kotlin<a href=\"https://kotlinlang.org/docs/inline-classes.html\">值类</a>\"；对CRaC优化进行了初步探索；文档迁移到了<a href=\"https://docs.antora.org/antora/latest/\">Antora</a>\"。关于该版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2023.1-%28Vaughan%29-Release-Notes\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p>Spring Data各个<a href=\"https://spring.io/blog/2023/10/13/spring-data-2023-0-5-2022-0-11-and-2021-2-17-released\">服务版本</a>\"（2023.0.5、2022.0.11和2021.2.17）的依赖子项目升级包括：Spring Data Commons 3.1.5、3.0.11和2.7.17；Spring Data MongoDB 4.1.5、4.0.11和3.4.17；Spring Data Elasticsearch 5.1.5、5.0.11和4.4.17；Spring Data Neo4j 7.1.7、7.0.11和6.3.17。这些版本分别包含在即将发布的Spring Boot 3.1.5、3.0.12和2.7.17中。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-shell\">Spring Shell</a>\" 3.2.0<a href=\"https://spring.io/blog/2023/10/13/spring-shell-3-2-0-m2-is-now-available\">第二个里程碑版本</a>\"提供了实验性的新终端UI和其他值得注意的变化，如：新的<a href=\"https://github.com/spring-projects/spring-shell/blob/main/spring-shell-core/src/main/java/org/springframework/shell/component/view/control/ViewCommand.java\">`ViewCommand`</a>\"类，为<a href=\"https://github.com/spring-projects/spring-shell/blob/main/spring-shell-core/src/main/java/org/springframework/shell/component/view/control/View.java\">`View`</a>\"接口提供更高级别的指令；改进了<a href=\"https://github.com/spring-projects/spring-shell/blob/main/spring-shell-core/src/main/java/org/springframework/shell/component/view/control/ButtonView.java\">`ButtonView`</a>\"和<a href=\"https://github.com/spring-projects/spring-shell/blob/main/spring-shell-core/src/main/java/org/springframework/shell/component/view/control/DialogView.java\">`DialogView`</a>\"类的实现。关于该版本的更多细节，包括新终端UI的演示，可以在<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v3.2.0-M2\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>Micronaut</h4><p></p><p>&nbsp;</p><p>Micronaut基金会<a href=\"https://micronaut.io/2023/10/10/micronaut-framework-4-1-4-released/\">发布</a>\"了<a href=\"https://micronaut.io/\">Micronaut框架</a>\"的4.1.4版本，包含<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/v4.1.9\">Micronaut Core 4.1.9</a>\"和模块更新：<a href=\"https://micronaut-projects.github.io/micronaut-serialization/snapshot/guide/\">Micronaut Serialization</a>\"、 <a href=\"https://micronaut-projects.github.io/micronaut-aws/snapshot/guide/\">Micronaut AWS</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-email/snapshot/guide/\">Micronaut Email</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-data/snapshot/guide/\">Micronaut Data</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-maven-plugin/latest/\">Micronaut Maven Plugin</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-sql/snapshot/guide/\">Micronaut SQL Libraries</a>\"和<a href=\"https://micronaut-projects.github.io/micronaut-discovery-client/latest/guide/\">Micronaut Discovery Client</a>\"。关于该版本的更多细节可以在<a href=\"https://github.com/micronaut-projects/micronaut-platform/releases/tag/v4.1.4\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>Quarkus</h4><p></p><p>&nbsp;</p><p>Red Hat<a href=\"https://quarkus.io/blog/quarkus-3-4-3-released/\">发布</a>\"了<a href=\"https://quarkus.io/\">Quarkus</a>\"的3.4.3版本，主要解决了<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-44487\">CVE-2023-44487</a>\"，一个与Tomcat HTTP/2实现有关的问题，容易受到<a href=\"https://www.securityweek.com/rapid-reset-zero-day-exploited-to-launch-largest-ddos-attacks-in-history/\">快速重置攻击</a>\"，进而出现<a href=\"https://www.mail-archive.com/announce@apache.org/msg08557.html\">拒绝服务</a>\"，通常表现为OutOfMemoryError。除此之外，还有文档方面的改进和一些值得注意的修复，如：调用响应式REST客户端被挂起（因接收到导致资源无法被释放的无效块响应）；被转换为原生构建的Quarkus应用程序（使用了Picocli和JAX-RS）消费SSE时抛出ClassNotFoundException；允许MicroProfile<a href=\"https://github.com/eclipse/microprofile-rest-client/blob/main/api/src/main/java/org/eclipse/microprofile/rest/client/annotation/ClientHeaderParam.java\">`@ClientHeaderParam`</a>\"注解覆盖“User-Agent”标头参数。关于此版本的更多细节可以在<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.4.3\">changelog</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>Micrometer</h4><p></p><p>&nbsp;</p><p><a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/README.md\">Micrometer Metrics</a>\"1.12.0-RC1、1.11.5、1.10.12和1.9.16分别带来了依赖项升级和错误修复：在运行Spring Boot应用程序时<a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-observation/src/main/java/io/micrometer/observation/ObservationRegistry.java\">`ObservationRegistry.NOOP`</a>\"接口的实例为空；调用定义在<a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-observation/src/main/java/io/micrometer/observation/Observation.java\">`Observation`</a>\" 接口内部类Context的computeIfAbsent()方法时抛出<a href=\"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ConcurrentModificationException.html\">`ConcurrentModificationException`</a>\" 。版本1.12.0-RC1中的新特性包括：将Jakarta Messaging规范的增强移到新模块micrometer-jakarta9；<a href=\"https://www.vmware.com/products/aria-operations-for-applications.html\">Wavefront</a>\"集成支持VMware <a href=\"https://docs.vmware.com/en/VMware-Cloud-services/index.html\">CSP</a>\"认证系统。关于这些版本的更多细节可以在<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.12.0-RC1\">1.12.0-RC1</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.11.5\">1.11.5</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.10.12\">1.10.12</a>\"和<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.9.16\">1.9.16</a>\"的版本说明中找到。</p><p>&nbsp;</p><p>类似的，<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md\">Micrometer Tracing</a>\"的1.2.0-RC1、1.1.6和1.0.11版本也包含了依赖项升级和错误修复，如：在Gradle构建中应用更广泛的<a href=\"https://github.com/openzipkin/zipkin-reporter-java/blob/master/README.md\">Zipkin Reporter</a>\"来解决依赖问题；在<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing/src/main/java/io/micrometer/tracing/contextpropagation/ObservationAwareSpanThreadLocalAccessor.java\">`ObservationAwareSpanThreadLocalAccessor`</a>\"类中设置了作用域时可以进行覆盖。1.2.0-RC1版本的新特性包括：为改进框架的配置，在匹配<a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-core/src/main/java/io/micrometer/core/aop/TimedAspect.java\">`TimeAspect`</a>\"类时将<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/micrometer-tracing/src/main/java/io/micrometer/tracing/annotation/SpanTagAnnotationHandler.java\">`SpanTagAnnotationHandler`</a>\"类定义为可选的；io.opentelemetry:opentelemetry-semconv改为io.opentelemetry.semconv:opentelemetry-semconv，因为OpenTelemetry已经弃用了旧的<a href=\"https://opentelemetry.io/docs/concepts/semantic-conventions/\">语义约定</a>\"模块，使用了一个具有不同Maven坐标的新模块。关于这些版本的更多细节可以在<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.2.0-RC1\">1.2.0-RC1</a>\"、<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.1.6\">1.1.6</a>\"和<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.0.11\">1.0.11</a>\"的版本说明中找到。</p><p>&nbsp;</p><p></p><h4>Apache软件基金会</h4><p></p><p>&nbsp;</p><p><a href=\"https://tomcat.apache.org/\">Apache Tomcat</a>\"团队披露了四个影响版本11.0.0-M1至11.0.0-M11、10.1.0-M1至10.1.13、9.0.0-M1至9.0.80和8.5.0至8.5.93的CVE。</p><p>&nbsp;</p><p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42795\">CVE-2023-42795</a>\"，在回收各种内部对象（包括请求和响应）时出现的信息暴露问题，即一些错误可能导致Tomcat跳过回收过程的某些部分，旧对象在被下一个请求/响应重用之前发生<a href=\"https://www.mail-archive.com/announce@apache.org/msg08559.html\">信息泄漏</a>\"。<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45648\">CVE-2023-45648</a>\"，攻击者在反向代理后面通过发送特制的无效标头促使Tomcat将单个请求视为多个请求，从而导致<a href=\"https://www.mail-archive.com/announce@apache.org/msg08558.html\">请求夹带</a>\"。之前提到的<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-44487\">CVE-2023-44487</a>\"。<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42794\">CVE-2023-42794</a>\"，<a href=\"https://commons.apache.org/proper/commons-fileupload/\">Commons FileUpload</a>\"包的Tomcat内部分支包含了一个未发布的针对Windows的重构，如果一个Web应用程序为上传的文件打开了一个流，但未能关闭流就会出现该漏洞。由于磁盘已满，该文件将永远不会从磁盘上删除，从而可能导致<a href=\"https://www.mail-archive.com/announce@apache.org/msg08556.html\">拒绝服务</a>\"。该CVE仅影响Tomcat 9.0.70至9.0.80和8.5.85至8.5.93。</p><p>&nbsp;</p><p>这些受影响版本的用户需要采取以下缓解措施之一：至少升级到Apache Tomcat的版本<a href=\"https://www.mail-archive.com/announce@apache.org/msg08554.html\">11.0.0-M12</a>\"、<a href=\"https://www.mail-archive.com/announce@apache.org/msg08552.html\">10.1.14</a>\"、<a href=\"https://www.mail-archive.com/announce@apache.org/msg08555.html\">9.0.81</a>\"和<a href=\"https://www.mail-archive.com/announce@apache.org/msg08553.html\">8.5.94</a>\"。</p><p>&nbsp;</p><p><a href=\"https://kafka.apache.org/\">Apache Kafka</a>\" 3.6.0<a href=\"https://www.mail-archive.com/announce@apache.org/msg08561.html\">版本</a>\"包含了错误修复、改进和新功能，例如：支持<a href=\"https://developer.confluent.io/learn/kraft/\">Kafka Raft</a>\" (KRaft)的委托令牌；将Kafka集群从ZooKeeper元数据系统迁移到KRaft元数据系统的能力；将<a href=\"https://cwiki.apache.org/confluence/display/KAFKA/KIP-405%3A+Kafka+Tiered+Storage\">分级存储</a>\"作为早期访问功能。关于该版本的更多细节可以在<a href=\"https://downloads.apache.org/kafka/3.6.0/RELEASE_NOTES.html\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p><a href=\"https://camel.apache.org/\">Apache Camel</a>\" 4.1.0<a href=\"https://www.mail-archive.com/announce@apache.org/msg08563.html\">版本</a>\"包含了错误修复、依赖项升级和新特性，如：捕获启动事件并按照人类可读的格式报告时间；新的<a href=\"https://camel.apache.org/components/next/thymeleaf-component.html\">Camel Thymeleaf</a>\"模板组件，作为对现有<a href=\"https://camel.apache.org/components/4.0.x/freemarker-component.html\">Camel Freemarker</a>\"和<a href=\"https://camel.apache.org/components/4.0.x/velocity-component.html\">Camel Velocity</a>\"组件的补充；一个新的命令，按照<a href=\"https://cyclonedx.org/\">CycloneDX</a>\"格式为给定的JBang项目生成SBOM。关于该版本的更多细节可以在<a href=\"https://camel.apache.org/releases/release-4.1.0/\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>Eclipse Vert.x</h4><p></p><p>&nbsp;</p><p>Eclipse <a href=\"https://vertx.io/\">Vert.x</a>\" 4.4.6<a href=\"https://vertx.io/blog/eclipse-vert-x-4-4-6/\">版本</a>\"包含了依赖项升级和一些值得注意的变更，如：升级到<a href=\"https://netty.io/news/2023/10/10/4-1-100-Final.html\">Netty 4.1.100.Final</a>\"，解决了上述的CVE-2023-44487；修复<a href=\"https://github.com/eclipse-vertx/vertx-sql-client/blob/master/vertx-pg-client/src/main/java/io/vertx/pgclient/data/Money.java\">`Money`</a>\" 类，弃用Money(long,int)构造函数，转而使用Money(Number)；不再支持curl命令中的空Host标头，这个空标头会抛出NullPointerException。关于该版本的更多细节可以在<a href=\"https://github.com/vert-x3/wiki/wiki/4.4.6-Release-Notes\">版本说明</a>\"和<a href=\"https://github.com/vert-x3/wiki/wiki/4.4.6-Deprecations-and-breaking-changes\">弃用和重大变更说明</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>Reactor</h4><p></p><p>&nbsp;</p><p><a href=\"https://github.com/reactor/reactor/blob/main/README.md\">Reactor</a>\" 2023.0.0的<a href=\"https://github.com/reactor/reactor/releases/tag/2023.0.0-RC1\">第一个候选版本</a>\"包含对reactor-core 3.6.0-RC1、reactor-pool 1.0.3和reactor-netty 1.1.12的依赖项升级。2023.0.0-RC1版本也进行了调整，其中reactor-kafka 1.3.21、 reactor-addons 3.5.1和reactor-kotlin-extensions 1.2.2保持不变。关于该版本的更多细节可以在<a href=\"https://github.com/reactor/reactor/compare/2023.0.0-M3...2023.0.0-RC1\">变更日志</a>\"中找到。</p><p>&nbsp;</p><p>类似的，Reactor 2022.0.12，<a href=\"https://github.com/reactor/reactor/releases/tag/2022.0.12\">第十二个维护版本</a>\"包含了对reactor-core 3.5.11、reactor-netty 1.1.12和reactor-pool 1.0.3的依赖项升级。2022.0.11版本也进行了调整，其中reactor-kafka 1.3.21、reactor-addons 3.5.1和reactor-kotlin-extensions 1.2.2保持不变。关于该版本的更多细节可以在<a href=\"https://github.com/reactor/reactor/compare/2022.0.11...2022.0.12\">变更日志</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>JHipster Lite</h4><p></p><p>&nbsp;</p><p><a href=\"https://www.jhipster.tech/jhipster-lite/\">JHipster Lite</a>\"0.44.0版本已经<a href=\"https://twitter.com/pascalgrimaud/status/1711764842917281880\">发布</a>\"，其中包含问题修复、依赖项升级和新功能（增强），如：在JDK 21的某些构建版本中启用；修复了在<a href=\"https://github.com/jhipster/jhipster-lite/blob/main/src/main/resources/generator/server/springboot/broker/kafka/KafkaPropertiesTest.java.mustache\">`KafkaPropertiesTest`</a>\" 类中使用Java <a href=\"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/HashMap.html\">`HashMap`</a>\"类的问题；为改善导航体验，在横向屏幕上显示小地图。关于该版本的更多细节可以在<a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v0.44.0\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>Piranha</h4><p></p><p>&nbsp;</p><p><a href=\"https://piranha.cloud/\">Piranha</a>\" 23.10.0<a href=\"https://github.com/piranhacloud/piranha/releases/tag/v23.10.0\">版本</a>\"包含了一些显著变化，如：依赖项和插件升级；修复了<a href=\"https://github.com/piranhacloud/piranha/blob/current/arquillian/jarcontainer/src/main/java/cloud/piranha/arquillian/jarcontainer/PiranhaJarContainer.java\">`PiranhaJarContainer`</a>\" 类中的代码坏味道；修复漏洞、技术债务、安全和可靠性问题。关于该版本的更多细节可以在其官方<a href=\"https://javadoc.io/doc/cloud.piranha/project/latest/index.html\">文档</a>\"和<a href=\"https://github.com/piranhacloud/piranha/issues?q=is%3Aissue+-label%3Awontfix+milestone%3A23.10.0+is%3Aclosed\">问题跟踪器</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>RefactorFirst</h4><p></p><p>&nbsp;</p><p><a href=\"https://improving.com/\">Improving</a>\"（一家提供培训、咨询、招聘和项目服务的公司）首席软件咨询顾问<a href=\"https://www.linkedin.com/in/jimbethancourt/\">Jim Bethancourt</a>\"宣布发布<a href=\"https://github.com/jimbethancourt/RefactorFirst/blob/main/README.md\">RefactorFirst</a>\" 0.5.0-M1。该版本包含了许多依赖项升级和新特性，如：新的RefactorFirst命令行；将HTML、CSV和JSON报告重构成各自的模块。值得注意的是，RefactorFirst现在需要JDK 11来解决<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4759\">CVE-2023-4759</a>\"，这是<a href=\"https://www.eclipse.org/jgit/\">JGit</a>\" 6.6.0以下版本存在的一个漏洞，攻击者可以使用特制git存储库中的符号链接将文件写入工作树之外的位置。因此，该项目也被移到GitHub上新创建的RefactorFirst目录中。关于该版本的更多细节可以在<a href=\"https://github.com/refactorfirst/RefactorFirst/releases/tag/0.5.0-M1\">版本说明</a>\"中找到。</p><p>&nbsp;</p><p></p><h4>摩洛哥Devoxx大会</h4><p></p><p>&nbsp;</p><p><a href=\"https://devoxx.ma/\">摩洛哥Devoxx大会</a>\"在<a href=\"https://www.hilton.com/en/hotels/agatmhi-hilton-taghazout-bay-beach-resort-and-spa/\">Hilton Taghazout Bay Beach Resort &amp; Spa</a>\"举办，来自Java社区的<a href=\"https://devoxx.ma/speakers/\">演讲者</a>\"发表了<a href=\"https://devoxx.ma/talks-by-tracks/\">主题</a>\"演讲，包括：架构、数据与人工智能、开发实践、DevOps与云计算，以及安全。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/10/java-news-roundup-oct09-2023/\">https://www.infoq.com/news/2023/10/java-news-roundup-oct09-2023/</a>\"</p>",
    "publish_time": "2023-10-31 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]