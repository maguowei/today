[
  {
    "title": "麒麟桌面操作系统运行安卓移动应用的技术实践",
    "url": "https://www.infoq.cn/article/1xVxjMBVxadWOVu3eTdg",
    "summary": "<p>本文整理自麒麟软件桌面研发部资深研发工程师孟庆彬在<a href=\"https://dive.infoq.cn/2021/beijing/track/1205\">DIVE全球基础软件创新大会 2022</a>\"的演讲分享。</p><p></p><p>以下为孟庆彬演讲的精华内容，经编辑。</p><p></p><h1>国产操作系统目前生产现状</h1><p></p><p></p><p>以飞腾平台为例，截止到2022年1月，飞腾平台已经适配了4000+的生态软件。经过分类统计，主要的分类聚焦在办公软件、影音软件、金融软件、游戏软件、社交软件、安全和存储上。</p><p></p><p>需要强调的是，游戏软件也是一些小众的游戏，4000+的应用也基本只能覆盖到这几类的软件行业。考虑到目前国产操作系统使用的情况，现在的主要用户还是党政军企这些ToB的企业，以办公安全场景为主，其他的都没有，这也就导致了Linux原生的生态倾向性比较明显。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0b/0b5dfa3b04687a582bf7ccbe3b2bbc6e.png\" /></p><p></p><p>目前Linux生态的短板就是生态很不丰富，与移动或者Windows生态相比，没有什么可比性。相对而言，办公类的软件比较成熟，但是像Photoshop，还有重办公设计类的软件也是不足的。</p><p></p><h1>麒麟系统如何融合移动应用生态</h1><p></p><p></p><p>麒麟有KMRE，麒麟移动运行环境的技术，这个技术我们给它打了标签，包括技术、融合、便捷。今天重点介绍一下KMRE的主要功能和工作原理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b6/b62ae95cb2bac8113627cc9c8ec30f1d.png\" /></p><p></p><p>首先介绍一下麒麟移动引擎主要的特点和主要的功能。它支持海量APP秒级启动。直接使用硬件，无性能损失。安卓与Linux窗口显示融合。统一的输入法，统一的音频设备，统一的输入设备，摄像头，视频通话。文件互通，剪切板互通，打开通知消息互通，打开方式互通。APP的统一管理，键盘辅助功能，鼠标滚轮功能，截图功能。APP同时运行，APP全屏切换，横竖屏切换，还有Linux共享桌面。这块功能下面会一一展开介绍。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/46/4657d39bbb2bd38ed800e113b62d26f7.png\" /></p><p></p><p>在Linux上，如果想运行安卓APP，主要有两个大的技术方向。第一个就是Google的Arc容器类的方案，Google的Arc是商业的Chrome组件，支持应用有限，效率一般。还有虚拟机和模拟器，像Bluestacks和GenyMotion效率都比较低，资源占用率很高，环境与宿主系统完全隔离。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c1/c18a81e944e82854c7391cb149a58a16.png\" /></p><p></p><p>KMRE不是虚拟机，它是类似于容器的一套方案，但也不是传统意义上的容器。它真正将Linux操作系统和安卓操作系统合二为一，从本质上让麒麟OS真正支持安卓APP的运行。 共用内核，直接使用硬件，无性能损耗，资源共享，目前支持arm和x86，也支持了多种CPU和GPU。</p><p></p><p>总结来讲，Linux目前运行安卓APP无非两套大的方案，要么就是容器，要么就是模拟器。我们是在容器的基础上改造了一个不是容器的方案，但也是继承了容器的方案。</p><p></p><p>KMRE显示目前有两种模式，一种是通用模式，通用模式主要是适配了驱动闭源的Nvidia卡、Intel显卡，兼容性比较高。另一种是高性能模式，目前适用于开源的驱动，比如AMD的显卡，目前是0性能损失。例如KMRE运行“和平精英”时，画质是不错的，实际的操作流畅度很高，帧率也很高，在高性能模式下体验非常好。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1c/1c90d0a512b706a53755515f4217043b.png\" /></p><p></p><p>在OS上运行安卓应用，大家都在讲的一个概念叫多APP多窗口同时运行。实际上对于安卓手机、安卓平板而言，它们基本上都是在一个屏幕同时只能运行一个应用。如果我们想多运行几个应用，会涉及到切换。对于用户的操作而言，他只能同时操作一个应用。但桌面系统大家已经熟悉了窗口式的应用，用多少个应用就开多少个窗口，同时可以看，可以用。而且对于大家熟悉的笔记本、台式机，它的屏幕是大横屏的形式，多开几个窗口显示器效果也会比较好。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4b/4bd2fd63ac0e0f1c5e99199d78a5a1f7.jpeg\" /></p><p></p><p>下面再介绍一下Linux下的桌面共享。正常的话，Linux应用，或者Windows上会议类应用的共享桌面，都是共享自己的主界面。当然对于安卓而言，只能共享安卓手机的窗口。对此，我们做了一些工作。我们现在共享的时候，Linux下跑腾讯会议，或者是QQ共享桌面，实际共享的是整个桌面。可以看到，图中是Linux原生的整个桌面，这保证了操作体验，也保留了在Windows下的共享桌面习惯，比较方便。去开会，去共享桌面，大概率会想要共享整个桌面，而不是单独的一个窗口。目前我们内部开会都是这样来做的，还是很方便的。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a6/a674fdc0cc2f8997fda838130111cf39.png\" /></p><p></p><p>文件互通。大家应该都比较熟悉Linux的文件系统以及安卓里面的文件系统，对于安卓而言，它的目录相对而言比较混乱，比较零散。对于Linux而言，显示更像是Windows这种可能用起来比较习惯。通过一些手段，一些努力，目前在安卓上面可以直接访问Linux文件。</p><p></p><p>图中是微信里面要给朋友发文件，正常的话都是微信打开文件系统，打开它的存储，去找对应的目录。我们做的优化是直接选择Linux目录下的文件直接传，通过微信发出去。下面的图片就是把安卓的文件系统在Linux下显示。这是一个Linux文管，能够直接看到安卓完整的目录结构，也可以按类型去看。安卓目录结构比较混乱，但如果按分类模式去看，也相对比较便捷。我们这块也是结合了各自的优劣，既能够按照符合Windows习惯的目录结构去看，也可以符合安卓便捷的方式去看，比如说按图片、音频、视频、文档分类，这两者都有。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d1/d1d80f8fe4d88280794907261d5ca6d1.png\" /></p><p></p><p>再来看看摄像头。因为安卓摄像头分辨率会比较高，摄像头可以跟着横竖屏方向去旋转。但PC上的摄像头一般分辨率比较低，且固定在某个位置，正常也不会有人去旋转它。这就导致了在摄像头使用上跟安卓存在着一些区别。由于我们的场景是PC上的摄像头使用安卓设备，所以在这方面也做了比较多的工作，目前已经适配了多款的摄像头。对于可以拍照、录像的APP，绝大部分适配的功能都是没有问题的。尤其对于重点的应用，像微信、腾讯会议，目前内部也一直在用，视频通话很流畅，体验也很好。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/45/45bb831b793964d2cf96177d6453a113.png\" /></p><p></p><p>对于手机输入法，大家可能比较习惯点一个位置，下面弹出手机各种各样的输入法，然后手动去打字。有很多种输入法，包括手写的、拼音的、九宫格。但实际上在Windows上，桌面OS的情况下，大家都习惯直接用键盘、鼠标去输入。PC上用键盘、鼠标打字速度是很快的，体验也不错，基于这一点，我们也在想怎么去实现。实际上现在也完成了可以用Linux的中文输入法直接输入到安卓系统里去。</p><p></p><p>图示就是在头条搜索，可以看到这个操作系统是安卓，输入法却是Linux的输入法，输入法会跟着光标走。另外，不管是Windows，或者是Linux，大家都习惯了用一些快捷键，像复制、粘贴、全选、撤销，就是对应的Ctrl+C、Ctrl+V、Ctrl+A， Ctrl+Z这些快捷键，而原生的安卓可能需要长按，因为它没有键盘、鼠标。这些我们都已经适配完成，可以通过快捷键去操作安卓这部分，这种体验是很流畅的。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/51/510339c8c9baac2b244050f457e487a7.png\" /></p><p></p><p>安卓里面的游戏也适配了Linux，包括PC机器的键盘、鼠标和游戏手柄。我们可以通过手柄，或者键盘、鼠标去玩一些游戏，体验很不错。为什么特别强调这块内容？因为我们在做游戏场景的时候也遇到了一些问题。打游戏可能需要十个手指多点触控，但实际上在Linux下这块支持不是特别友好。尤其像滚轮，像游戏的轮盘操作，以及手柄类自定义的组合键是比较多的。这块我们也是做了很多的事情，解决了轮盘的转换，还有在键鼠这块解决了多点触控和组合键的问题。目前，通过游戏手柄去玩大型的游戏是没有问题的。</p><p></p><p>什么叫打开方式互通？正常的安卓应用默认都是用安卓应用去打开，但安卓应用用Linux本地的应用去打开，Linux本地应用用安卓应用去打开，这样体验会更好。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/77/775215ec375862405731fdc9f428a33f.jpeg\" /></p><p></p><p>比如说用微信的时候，突然收到了一个文档，用安卓内置的WPS也可以，但是如果能够用Linux下的WPS，体验是不是更好？因为像WPS这种应用肯定是Linux原生操作起来更方便、更快捷。还有类似于图片查看器，也是在PC上直接操作更加灵活。网页也是一样，在PC上开网页可能开好几个，操作起来也比较便捷，但在安卓上，别人要给你发个网页或者发个网址都比较麻烦，效率或者体验肯定不如PC好。</p><p></p><p>我们在安卓里面做了一个插件，通过这个插件，可以把一些文件类型直接用Linux原生去打开，图片中就是别人给你发了一个Word文档，在右键的时候会打开右键菜单，这个时候我们就可以把应用用Linux原生的应用打开。</p><p></p><p>再介绍一下应用切换融合。希望让用户不要感知到跑的是一个安卓应用，还是一个Linux应用。我们从安装到使用都做了很多改进，比如说我们在安装的时候，让用户从应用商店下载、安装，在应用商店用户只需要去搜索对应的软件就可以，他不需要去关心这个软件到底是Linux软件还是安卓软件，他只要想用这个软件，去下载就可以了，我们就会给他自动安装。安装之后也符合常用的PC的操作习惯，安装之后会在桌面上有图标，任务栏也会有对应的图标，入口和Windows是统一的，用户用的时候，就可以直接点击，想用几个就开几个，是支持多窗口的。</p><p></p><p>对用户而言，都是完完整整、一个个独立的窗口，符合用户习惯。既然是窗口应用，当然支持用Alt+Tab快捷键进行应用切换。在任务栏可以预览它的效果，每个应用会有独立的预览情况，对用户而言，他不会感知到到底现在是一个Linux应用，还是一个安卓应用。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2c/2c185a12b363564b1c07d881214503ed.png\" /></p><p></p><p>我们从安装到使用，都是为了保证用户体验一致，安装好了之后在开始菜单就会有对应的图标，也可以在“自定义”大的桌面里面看到对应的图标。用户也可以把它固定到任务栏，或者直接右键发送到桌面快捷方式，用户会觉得这是PC上惯用的应用习惯。</p><p></p><p>正常的安卓手机通知都是在安卓的主界面上有一个下拉的通知栏，很多应用信息都会往那里发通知，现在为了和桌面PC深度融合，我们的通知会在系统的通知栏弹个气泡通知用户，如果你的应用是在任务栏下面，它就和QQ、微信的Windows的习惯是一样的，用闪烁来通知用户有消息来了。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5b/5bfe040c737341717fc0414321afb4c5.png\" /></p><p></p><p>以上是KMRE主要的功能介绍。目前通过KMRE已经完成了对4000+移动应用的适配，以后应用会上的越来越多。通过KMRE，也引入了4000+的移动应用。我们通过这些手段，已经可以把安卓的应用比较快速、低成本地迁移到Linux生态上面来，这样是对Linux生态很大的补齐。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e3/e36f72b4a34c8e799af27f98336cacee.png\" /></p><p></p><p>目前适配了以下这些重点应用。比如说金融类的同花顺，还有一些网银。影音类的像爱奇艺、抖音、QQ音乐。社交类的QQ、微信。教育类包括腾讯课堂、学习强国。游戏类的包括和平精英、QQ飞车。办公类的包括钉钉跟腾讯会议。也有一些应用，它可能现在还没有Linux原生应用，或者是Linux原生应用做得还不是特别好，然而移动应用已经很成熟了，这样的话能够很好地解决用户的实际需要。而且也可以支持多个窗口同时打开，随便开几个都没有问题。</p><p></p><h1>麒麟移动引擎主要工作原理</h1><p></p><p><img src=\"https://static001.geekbang.org/infoq/48/481d8f4a6df733d93fa220a877e1abae.png\" /></p><p></p><p>麒麟移动引擎的整体架构包括，KMRE的整体架构，最下面是硬件平台，有不同的CPU、GPU。比如支持国产的飞腾、麒麟990，还有Intel、AMD。GPU也有很多种，像AMD、Nvidia、Intel这种。对不同的硬件，我们都需要做适配，但因为抽象出了一个硬件的适配层，所以适配工作目前只是简单的配置工作就可以完成。</p><p></p><p>一个模块，为了解决安卓上网的问题，毕竟网络还是在Linux侧，安卓侧应用也要上网，我们搞了一个VirtWifi内核模块可以解决安卓内部的上网。这块目前也在努力，原来是一个虚拟的网络，目前已经基本上实现了安卓可以感知实实在在的网络。</p><p></p><p>在共用内核的基础之上，我们里面有两套系统，一个是Linux系统，一个是安卓系统。因为两个系统之间要紧密耦合，一些组件要交互或者共用。实际上在Linux下面有一个类似于启动进程的模块，这个模块可以理解为安卓的AMS，负责安卓应用的生命周期管理。</p><p></p><p>还有我们的管理服务，管理服务就是管理安卓的生命周期，因为对于安卓而言，如果用户用的话就把它用起来，如果不用就把它挂起来，既要保证它的响应速度，还要解决它的功耗问题。还有图形窗口，还有显示服务，实际上窗口跟显示都是在Linux侧来融合的，这两部分就是为了解决安卓显示窗口跟Linux怎么融合。</p><p></p><p>在软件商店方面，因为安装的时候用户无需感知是Linux还是安卓，所以我们对软件商店也做了一些修改。音频服务就是为了解决数据、音视频通话、输入输出设备问题。文件管理器插件就是怎么样把文件系统互相打穿。文件互通服务就是为了解决分享这块，用应用去打开时，这块涉及到一些文件路径的同步。还有OpenGL渲染库，这是显示相关的。还有通信模块，解决Linux跟安卓高效通信的问题。</p><p></p><p>在安卓部分我们也做了比较深度的修改。例如在应用层，我们有自己的KmreLauncher、KmreManager，还有InputMethod。KmreLauncher替代了安卓原生的Launcher，因为我们现在做的是跟PC的深度融合，所以安卓的Launcher是不需要的，把一些机制用自己的Launcher去替代了。</p><p></p><p>KmreManager就是为了解决Linux侧安卓端的管理以及通信问题的。InputMethod主要就是为了解决输入法。对于Framework修改，我们也做了一些修改，比如说显示SurfaceFlinger，还有输入的InputFlinger这些，都是为了更好地让这两个系统融合到一块。HAL在显示还有硬件方面做了修改，像Gralloc、Audio、EventHub、Camera。手机上的传感器设备会比较多，如果这些PC上有就用PC的，如果PC上没有，就要在PC上给安卓创建一个虚拟的设备。</p><p></p><p>经过这些模块组合之后，我们就在一套内核上跑了两套系统，两套系统就可以支持这两套系统的生态，比如Linux应用，安卓应用，使用起来比较灵活。</p><p></p><p>多窗口是怎么实现的？多窗口实际上是基于安卓11的虚拟屏技术，来实现窗口的多活。安卓本身它是有多个窗口显示的能力和接口的。但是考虑到安卓的实际产品，像手机、平板没有这种场景，所以这个技术用的人不是特别多。</p><p></p><p>目前安卓最新的版本也在往大屏方向切，这个技术可能会用得越来越多。我们是基于安卓的扩展屏这套技术，让应用打开到某些扩展屏的指定位置，再去控制扩展的生命周期，就是什么时候应该显示，什么时候应该销毁。通过这几个扩展屏之间的交互关系，来实现多窗口多活的问题。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a7/a76c0a86701b88683ec9a34ecc68690f.png\" /></p><p></p><p>再介绍下麒麟移动引擎文件互通是怎么做的。Linux可以访问安卓的文件管理器，安卓也可以访问Linux的文件管理器，这是怎么实现的？</p><p></p><p>Linux系统跟安卓系统本质上文件管理器整体的设计上是统一的，这块没有多大的差异，主要的差异点来自于权限的不足，Linux文件的权限体系跟安卓的权限体系不一样。目录显示、挂载都没有问题，但当访问时就会涉及到权限问题，只能看不能用是不可接受的。</p><p></p><p>我们主要修改了文件内核的一些模块，做了权限映射，这样就可以解决Linux跟安卓里面权限不同导致无法访问的问题。权限的问题解决了，其他的就只是文件的显示、挂载这些操作，这块可以做的场景是比较多。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4b/4bab4aed723c5506819b73ca4c543edd.png\" /></p><p></p><p>显示有两种模式，一种是性能模式，一个是兼容模式。如下图所示，对正常的安卓应用，就是安卓去显示，走SurfaceLinger，走OpenGL ES，走Gralloc，走fb，走正常的显示，这是安卓正常的流程。</p><p></p><p>但是、为了安卓和Linux窗口去融合，我们用Linux去做窗口管理，在安卓显示时把OpenGL ES这些指令都接到了Linux的Mesa库，通过Mesa库再去操作DRM，直接到窗口上去显示，这样性能会比较快。直接就相当于把Linux的显示系统，跟安卓的显示系统融合到一起，也形成了一个完整的显示系统。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4c/4c64ad6ef5e9d95404c961f0de518c8f.jpeg\" /></p><p></p><p>性能模式跟兼容模式的区别在于：性能模式主要参考了AMD驱动的开源方案。在沙箱中，移动环境执行图形渲染和合成，Linux端只做绘制和显示。这样的话，减少了JLES命令进行传输和翻页带来的性能损耗，提高了安卓的运行效率和显示效率。渲染和合成是在安卓部分做的，Linux只做绘制和显示。</p><p></p><p>对于兼容模式，有一些显卡可能没有开源出来，这块我们对沙箱中的移动环境中显示指令进行了转换，显示指令转换之后，Linux上面的显卡进行渲染合成，这可以满足大部分的硬件加速需求，对显示环境具有良好的适应性，能够更好地实现显卡的兼容效果。兼容模式可能会比性能模式多了一些指令的传输还有内存拷贝损耗。在性能模式下玩游戏，一点都不会感觉到卡顿。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6a/6aada8e5568a6769131465c756cdc6a5.png\" /></p><p></p><p>在视频编解码方面。正常安卓也有一套视频编解码能力，但这块跟Linux系统融合不能走软解，这样的话GPU占用太高了。安卓本身有OMX这套接口，这套接口是给一些移动厂商提供定制解码能力的。我们是用了这套接口，在硬件设备支持的情况下，优先使用解码芯片来加速解码，这样就减少了CPU的占用，系统的性能和流畅度就可以保证了，也充分利用了硬件加速能力。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c5/c5464fec3ee96063414242fad3a69f7a.png\" /></p><p></p><h1>麒麟系统在移动生态上的规划和布局</h1><p></p><p>麒麟系统在移动生态上的规划和布局方面。KMRE能够有效地把移动生态引入到Linux系统，补齐Linux系统生态不足的问题，随着一些新的技术的引用，应用会更快速地上架，以后应用会上的越来越多。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/84/841158c784b61bf2c779904d46184cbd.png\" /></p><p></p><p>我们在一套内核中跑了两个系统，一个安卓系统，一个Linux系统，虽然说有些模块、有些组件是复用的，一些模块做了一些深度的耦合，但实际上，它还是一套内核跑了两个系统。</p><p></p><p>我们现在也在思考，怎么样构造一个真正的融合的系统。我们也参考了业界好的一些实践，看一看怎么样去打造一款真正融合的系统，只有一个系统、一套内核的融合系统，不会从技术上看上去有分裂。我们也在朝着这方面努力，也在打造麒麟最新的一代OS系统，持续做探索和突破。</p><p></p><p>现在移动端设备非常丰富，手机、平板、穿戴设备随处可见。用户怎么样跟麒麟系统互动，麒麟系统在移动设备上怎么更好使用？这块我们也有自己的思考，我们也在打造麒麟系统自身的移动办公生态。毕竟我们的客户大部分还是在办公行业，也会有一些移动办公需求。在这方面，我们也在努力做一些不一样的产品，希望给用户不一样的体验，帮助用户解决一些实实在在的问题。</p><p></p><p>讲师介绍</p><p></p><p>孟庆彬，麒麟软件，桌面研发部资深研发工程师。拥有11年工作经验，长期从事Linux系统与Android系统融合方向的技术研究。在麒麟公司主要负责麒麟移动运行引擎的设计与开发，主要负责将安卓生态引入到国产操作系统。</p>",
    "publish_time": "2023-01-10 10:20:19",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Hyper 存在漏洞，Rust 项目易受拒绝服务攻击",
    "url": "https://www.infoq.cn/article/UiyjZqRp8Kpc2lW14WcN",
    "summary": "<p>近日，安全研究人员最近发现并披露了流行的 Rust 项目（例如<a href=\"https://github.com/tokio-rs/axum\">Axum</a>\"、<a href=\"https://crates.io/crates/salvo\">Salvo</a>\"和<a href=\"https://crates.io/crates/conduit-hyper\">conduit-hyper</a>\"&nbsp;）中的多个漏洞，产生这些漏洞的根源是没有在使用 Hyper 库时对 HTTP 请求设置适当的限制。</p><p>&nbsp;</p><p><a href=\"https://hyper.rs/\">Hyper</a>\"是一个非常流行的低级 HTTP 库，用 Rust 编写。该库不是功能齐全的 HTTP 服务器或客户端，但它包含了用于响应请求、解析请求主体和生成正确 HTTP 响应的方法，因此可以用作实现这些功能的“构建块”，是 Rust 最流行的 HTTP 库之一。</p><p>&nbsp;</p><p>安全公司 JFrog 发现，包含<a href=\"https://github.com/hyperium/hyper\">Hyper</a>\"的项目（如Axum、Salvo和conduit-hyper）容易受到为利用这些漏洞而精心设计的 HTTP 请求引起的拒绝服务 (DoS) 攻击。</p><p>&nbsp;</p><p>研究人员发现的问题在于<a href=\"https://docs.rs/hyper/latest/hyper/body/fn.to_bytes.html\">body::to_bytes</a>\"，这是一个将请求或响应主体复制到单个字节缓冲区的函数。该函数读取数据块，并可以创建一个具有足够空间的 Vector 来满足请求正文的预期长度。但是 Vector 的大小来自直接传递给 Rust 内存分配器的“Content-Length”标头，因此如果它太大，分配器就会崩溃进而使进程崩溃。</p><p>&nbsp;</p><p>据 JFrog 称，上面三个项目已经修复了他们的代码，但还有数量不详的、其他易受攻击的项目尚未做出回应。目前，Rust 的包存储库 crates.io 中列出的 2,579 个项目依赖于 Hyper，下载量已超过 6700 万次。</p><p>&nbsp;</p><p>JFrog 安全研究高级主管 Shachar Menashe 表示：使用 Hyper 时缺乏大小限制是一个非常严重的问题，攻击者可以很容易地利用它让 HTTP 客户端和服务器崩溃。</p><p>&nbsp;</p><p>这个问题实际上之前也出现过。<a href=\"https://github.com/hyperium/hyper/issues/187\">在 2014 年</a>\"和<a href=\"https://github.com/hyperium/hyper/issues/256\">2015 年</a>\"，Hyper 的开发人员修复了因接收到过大请求标头而导致的 DoS 漏洞。去年，在GitHub上的相关<a href=\"https://github.com/hyperium/hyper/issues/2414\">问题的帖子</a>\"中，Rust 开发人员 Michal Varner 建议采用合并警告机制。</p><p></p><p>参考链接：</p><p>https://jfrog.com/blog/watch-out-for-dos-when-using-rusts-popular-hyper-package/</p><p>https://www.theregister.com/2023/01/06/flaws_rust_projects_ddos/</p>",
    "publish_time": "2023-01-10 10:39:38",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "结束扩展安全更新计划，Win7彻底退出历史舞台",
    "url": "https://www.infoq.cn/article/kgKh7JomueAymwSIPtFe",
    "summary": "<p>作为Windows系列最为经典的版本，<a href=\"https://www.infoq.cn/article/2008/10/Windows-7-Official-Name\">Windows 7系统</a>\"计划在2023年1月10日结束ESU（付费外延扩展支持）。2020年，Windows 7系统结束外延支持后上线了ESU，允许通过付费的方式订阅安全补丁。如今，ESU的结束意味着即使企业用户想再付费，微软也不会再发布安全补丁。</p><p>&nbsp;</p><p>这也标志着，从2023年1月10日起，Windows 7系统将彻底退出历史舞台。</p><p>&nbsp;</p><p>微软建议受到影响的用户购买与 <a href=\"https://www.infoq.cn/article/t9IfZOEvdo7uvqFCsWkG\">Windows 11 </a>\"兼容的电脑，某些配备 Windows 7 的电脑符合条件，也可升级至 <a href=\"https://www.infoq.cn/article/6y3aEhAM21Als*W9zOko\">Windows 10</a>\"（需付费）。不过，微软表示，Windows 10也将于2025年1月14日结束支持，安装 Windows 10 可能出现无法修复电脑硬件的问题，或无法升级至 Windows 11。此外，它也不会启用 Windows 10 的硬件特定功能，如触摸屏或 Windows Hello。</p><p>&nbsp;</p><p>微软在其页面上提醒，“大多数Windows 7设备将不符合升级到Windows 11的硬件要求，作为替代方案，兼容的Windows 7电脑可以通过购买和安装完整版本的软件升级到Windows 10。在投资于Windows 10升级之前，请考虑到Windows 10将于2025年10月14日达到其支持期限。”</p><p>&nbsp;</p><p>公开信息显示，Windows 7发布于2009年10月；2015年1月13日，微软正式终止了对Windows 7的主流支持，但仍然继续为Windows 7提供安全补丁支持；2020年1月14日，微软停止对Windows 7系统的技术支持、软件更新和安全问题修复，但允许企业用户通过付费的方式订阅安全补丁。</p><p>&nbsp;</p><p>尽管Windows 7已经“老态龙钟”，但它依旧大受欢迎并被广泛采用。据数据统计公司 Statcounter的记录，截至2022年11月，Windows 7的市场份额为10.25%，排在Windows 7前面的分别是Windows 10（69.77%）、Windows 11（16.12%）。</p><p>&nbsp;</p><p>为什么个人/企业用户没有及时<a href=\"https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247490316&amp;idx=2&amp;sn=efcea4c47cf692fdde2da77cd3d27df3&amp;chksm=f951ae4fce26275950733390a79673d0966d5189f875df78efe37e2c330b368fa0efc3779eb8&amp;scene=27#wechat_redirect\">对操作系统进行更新</a>\"？有评论指出，原因之一是，企业的遗留应用程序与 Windows 新版本不兼容，他们不知道该怎么办，或者他们还没有进行应用程序兼容性测试——这是件大事。此外，还有一些人担心 Windows 更新的频率过高，以至于没有适当的流程来做出响应，也有一些人担心成本问题。</p><p>&nbsp;</p><p>研究公司 Forrester Research 的科技分析师 Andrew Hewitt 表示：“所有这些因素共同作用，导致大部分企业依旧选择继续使用 Windows 7。”</p>",
    "publish_time": "2023-01-10 10:53:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]