[
  {
    "title": "加入有序集合，Java集合框架变得更加完善",
    "url": "https://www.infoq.cn/article/PyfmlboNJMKzlhZTwDL3",
    "summary": "<p>JEP 431（<a href=\"https://openjdk.org/jeps/431\">有序集合</a>\"）已从Candidate状态进入到Proposed to Target状态（发布目标版本为JDK 21）。这个JEP建议引入“一系列新的集合接口，这些集合的元素按照指定的序列或顺序排列，并作为集合的结构属性。”其背后的动机是希望Java的集合框架能够提供定义良好的顺序和统一的操作。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/44/445787f834aaf9d3eafc4c747024b77f.png\" /></p><p></p><p>一直以来，Java的集合框架都需要一种集合类型可以表示指定顺序的元素序列和应用于这些集合的统一操作。不幸的是，对顺序的支持目前分散在集合框架的类层次结构中，这使得通过API来表达某些实际的概念变得较为困难。对此，有人提议引入新的接口来表示具有指定顺序的集合，并提供统一的API来访问它们的第一个和最后一个元素，可以按照相反的顺序处理它们。</p><p></p><p>缺少这种集合类型来表示具有指定顺序的元素序列一直是各种问题和抱怨的主要来源。例如，虽然List和Deque定义了顺序，但它们的公共超类是Collection，Collection并没有定义顺序。类似地，Set没有定义顺序，子类型（如HashSet）也没有，但其他子类型（如SortedSet和LinkedHashSet）有。</p><p></p><p>为了解决这个问题，新JEP为有序集合（Collection）、有序集（Set）和有序映射（Map）定义了新的接口，然后将其嵌入到现有的集合类结构中。这些接口中声明的所有新方法都有默认实现。有序集合、有序集和有序映射都具有不同的特征，有序集合表示元素具有指定顺序的集合，有序集表示不包含重复元素的集合，有序映射表示其条目具有指定顺序的映射。</p><p></p><p>新的reversed()方法提供了原始集合的反向顺序视图，支持所有不同类型的排序，可以使用所有常用的迭代机制（如增强的for循环、显式iterator()循环、forEach()、stream()、parallelStream()和toArray()）在两个方向上处理元素。</p><p></p><p>SequencedCollection接口包括几个新的方法，如下所示：</p><p></p><p><code lang=\"java\">interface SequencedCollection extends Collection {\n    // 新方法\n    SequencedCollection reversed();\n    // 从Deque抽象上来的方法\n    void addFirst(E);\n    void addLast(E);\n    E getFirst();\n    E getLast();\n    E removeFirst();\n    E removeLast();\n}</code></p><p></p><p>SequencedSet接口包含了与SequencedCollection相同的方法，包括reversed()。SequencedMap接口包含了几个新方法，如下所示：</p><p></p><p><code lang=\"java\">interface SequencedMap extends Map {\n  \n// new methods\nSequencedMap reversed();\nSequencedSet sequencedKeySet();\nSequencedCollection sequencedValues();\nSequencedSet&gt; sequencedEntrySet();\nV putFirst(K, V);\nV putLast(K, V);\n// methods promoted from NavigableMap\nEntry firstEntry();\nEntry lastEntry();\nEntry pollFirstEntry();\nEntry pollLastEntry();\n}</code></p><p></p><p>这三个新接口都刚好融入到现有的集合类型结构中，List将SequencedCollection作为其直接的父接口，Deque也将SequencedCollection作为其直接的父接口，LinkedHashSet实现了SequencedSet，SortedSet将SequencedSet作为其直接的父接口，LinkedHashMap实现了SequencedMap，SortedMap将SequencedMap作为其直接的父接口。</p><p></p><p>显式排位API（如SortedSet::addFirst和SortedMap::putLast）会抛出UnsupportedOperationException（因为它们的元素序列是通过比较来决定的），这些不实现所有SequencedCollection操作的不对称集合是有意义的，因为它将SortedSet和SortedMap也带入了有序集合家族，这样它们就可以得到更广泛的使用。</p><p></p><p>总的来说，引入新的接口来表示具有指定顺序的集合和应用于这些集合的统一操作，是Java集合框架向前迈出的重要一步。通过以一致且易于使用的方式提供对顺序的支持，集合框架对开发人员来说将变得更加直观和高效。</p><p></p><p>原文链接：</p><p>https://www.infoq.com/news/2023/03/collections-framework-makeover/</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/ecfagKNCSRckMTv7ozAI\">Java 近期新闻：JDK 21 发布计划、Payara 平台、JBang、JHipster、WildFly</a>\"</p><p><a href=\"https://www.infoq.cn/article/R4gOIJ1ILgX1KF8vU4Y2\">甲骨文推出新的 Java SE 通用订阅</a>\"</p><p><a href=\"https://www.infoq.cn/article/JtADhFJ2VYuoDT4BqkeF\">WireMock Spring Boot 将简化 Spring Boot 应用的 WireMock 配置</a>\"</p>",
    "publish_time": "2023-04-24 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]