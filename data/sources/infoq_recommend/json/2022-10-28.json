[
  {
    "title": "YMatrix CEO & 创始人姚延栋：万物智联时代，超融合数据库是最佳数据库形态",
    "url": "https://www.infoq.cn/article/cI3hJsUtojbDorNs5eh0",
    "summary": "<p>近一段时间内，有一个稍显陌生的技术概念不断被提及，那就是“超融合数据库”。对于大部分开发者而言，如果你是初次听闻这个技术概念，或许会感到疑惑：超融合数据库到底能解决什么问题？它与专用数据库相比，核心优势在哪里？</p><p></p><p>为了深入探究超融合数据库的概念、应用情况以及未来发展，本期《InfoQ极客有约》，InfoQ主编赵钰莹就与YMatrix CEO &amp; 创始人<a href=\"https://www.infoq.cn/article/NpFtpt7gOm4OJNtkUF4v\">姚延栋</a>\"进行了一次对谈。本期栏目的对话内容整理如下，供读者参考回顾。</p><p></p><p></p><p></p><p>InfoQ：到底怎么理解超融合数据库这个概念？</p><p></p><p>姚延栋：为了讲清这个东西，我们先考虑一下数据库到底为什么这么丰富多样。实际上，数据库就做三件事情：第一是接数据；第二是存数据；第三是用数据。</p><p></p><p>由于两个“多样性”，也导致整个数据库行业百花齐放：第一是底层数据类型的多样性（有时也称为多模），有关系数据、时序数据、图数据等等，这种多样性会让很多数据库专门解决一个数据类型的问题；第二个是数据处理的多样性，因为数据有多种多样用法，它有不同的视角、不同的模式，比如TP是小查询，但要去为高吞吐做优化，AP是大查询，我们优化的目的是低延迟，时序场景则经常查询最新值、明细和持续滑动窗口内的聚合值。</p><p></p><p>数据库产品多样性本质上是由以上两层引起来的，但这种多样性也会造成一个门槛问题。Gartner曾经出过一个报告，提到Hadoop的大多数项目没有达到预期，其中有一个很重要的原因就是复杂度太高。我们看到未来是一个万物智联的新时代，如果产品形态的复杂度还是这么高，可能也很难达到预期。我们就在想数据库最本质的东西是什么？未来最合理的形态应该是什么样的？</p><p></p><p>因此，我们就提出了超融合数据库，让用户可以非常简单地使用，有数据的时候可以往里面写，想用的时候就可以随时用。</p><p></p><p>InfoQ：大部分企业的技术栈可能是不同的数据库、不同的架构混杂在一起的，如果他们想用超融合数据库应该怎么做？</p><p></p><p>姚延栋：如果是一个新场景就比较简单，我们直接引入一个选型，使用我们的产品就好了；第二种是用户已经用了很多的数据库，如果他没有遇到痛点，让他去替换是很难的。不过随着数据量越来越大，问题也就慢慢地显现出来了，不管是硬件投入、系统复杂度、性能还是稳定性，都会出现一些问题，这个时候是我们最佳的切入时机，先通过单点切入，建立好信任感。</p><p></p><p>InfoQ：YMatrix 的应用场景主要有哪些？</p><p></p><p>姚延栋：我们现在分为三大类，智能制造、智能装备以及实时数仓。</p><p></p><p>首先说智能制造，工厂会涉及订单信息、工单信息、仓储、质检、设备运行数据、图片数据等等，这些数据随着时间推移会不断积累下来，形成数据资产，企业都希望能够挖掘这些历史数据产生价值。但是传统的方案可能选型四五种数据库，最终组装在一起。有的人可能也会选数据中台，但其实揭开中台的外衣之后，内部也就是四五个数据库组合一起，这种方式的复杂度非常高。在智能制造场景之下很难成功，因为整个链条太长了，出了问题之后也不容易诊断，而超融合数据库就可以解决这个场景下的问题。不管什么样的数据类型，还是对数据进行什么样的操作，都可以在一个数据库里面完成，极大地降低了复杂度。像比亚迪、小米等企业，他们就在智能制造工厂里来部署我们的产品，承接了它的时序数据和关系数据，还实现了对历史数据的查询、分析以及机器学习。</p><p></p><p>第二个场景是智能装备或者是泛物联网，比如智能网联汽车、智慧能源、智慧医疗、智慧地球等等，这个场景的特点就是时序数据量非常大，这个时候就需要强大的时序处理能力。当然了，任何一个场景很难只有一种数据，这种场景也有其他的数据类型，只是量多少而已，比如关系数据、文本数据等等，超融合也非常匹配这种场景。</p><p></p><p>理想汽车就是在这个场景下的案例，理想汽车的特点是车虽然不多，但是它的采集频率指标数蛮多的；北理新源是国家新能源汽车的大数据平台，我们刚接触的时候也就600多万辆车，现在已经超过1100万辆了，它的特点是车数虽然多，但它的采集频率比较低，指标数也比较少，叠加起来之后的总规模和理想汽车差不多。在这样的场景之下，就特别考验整个数据库的性能，从 <a href=\"https://www.infoq.cn/article/V09XNRs5lxfZtkmmsNUm\">YMatrix 4.0 </a>\"发布以来，我们做了很多工作去提升时序场景下的性能。</p><p></p><p>第三个场景就是经典数仓或者实时数仓，前面两个场景比较新，而数仓这个场景最早可以追溯到上世纪80年代，随着这个场景的发展，用户对实时性的要求越来越高。我们最近也开始接触一类用户，他们希望直接把 ETL 去掉，因为他觉得增加了复杂度，运维以及交付出了问题还得去解决，投入也很大，能不能用一个数据库搞定，彻底避免导出的过程。在这个场景之下，YMatrix 数据库产品有幸站在了Greenplum的肩膀上，改进了性能、高可用等等，使我们在实时数仓的场景上也有比较好的优势。</p><p></p><p>InfoQ：<a href=\"https://www.ymatrix.cn/article/98\">YMatrix5.0</a>\" 版本会有哪些新特性？</p><p></p><p>姚延栋：我们主要在两方面做了一些工作：性能和高可用。</p><p></p><p>超融合数据库一开始被提出来时，好多人会质疑它的实际价值，第一，到底能不能做出来？第二，即使做出来了，性能怎么样？通常意义上讲，大家觉得做的东西越多，可能很容易造成什么都做不好，这是一个非常直观的认识。在 YMatrix 4.0 版本相当于回答了第一个问题，就是我们把超融合数据库做出来了，YMatrix 5.0 相当于回答了第二个问题。</p><p></p><p>在高可用这一点，我们集成了Greenplum，但Greenplum有一个明显需要改进的地方，当Master结点故障之后，需要人工介入进行激活。这在经典的数仓场景下虽然没有特别大的问题。但在工厂生产等之类的关键场景中，如果Master挂了，这个时候还需要打电话让运维人员激活，这中间怎么也得过去一个多小时了，而一个小时可能会让工厂的生产损失上百万。在这样的考虑之下，我们对YMatrix4.0 的故障检测机制、高可用处理机制进行了全部重构，实现了故障自动检测和自动切换，这样就完全不需要人工参与了，让运维人员也可以放心睡个好觉。</p><p></p><p>InfoQ：<a href=\"https://ymatrix.cn/about\">YMatrix</a>\" 跟市面上其他数据库之间的差异性有哪些？</p><p></p><p>姚延栋：大多数的时序数据库还是类似当年NoSQL这种技术路线，当然有的时序数据库可能外面也包了一个SQL的接口，但本质上还是做了一个专用的数据库，解决专用的细分场景，我认为未来的大趋势这可能不是主流。</p><p></p><p>说到时序数据库的三种数据模型，或者三种建模方式分为：窄表模式、宽表模式以及树型模式。这三种建模方式各有优缺点，这里我简单地说下结论。</p><p></p><p>窄表模式写入最灵活，当你需要添加一个新指标的时候，不需要创建新的字段，只要往里面写就好了，但它的查询性能不好，只能支持一些比较简单的查询，比如查最新值、短时间的明细；而宽表模式会避免很多冗余的数据，所以性能很好，几乎支持所有类型的查询，但会遇到灵活性的问题，比如要添加一个新的指标，就需要在宽表模式里加个字段；树型模型其实是在以上两者之间进行了折中。</p><p></p><p>YMatrix 数据库则是窄表模式和宽表模式都支持，用户可以根据场景去选择。同时，为了解决宽表模式不灵活的问题，我们提供了一个专门的数据类型——MXKV，让你可以在里面加各种各样的新指标。</p><p></p><p>InfoQ：最近一两年，国内基础软件的发展是比较迅猛的，但坦白来讲，我们整体还是与国外有些差距的，您认为当前我们遇到的困境主要集中在哪些方面？如果我们想要去打破这样的困境，我们可以做什么样的事情？</p><p></p><p>姚延栋：基础软件本质是一个商业的范畴，既然是供需，就要看需求方需要什么样的产品，供应方又能供应什么样的产品。国外的产品确实好，而且价格也合理，我想不到任何理由客户不用，就像咱们的服装鞋帽在海外非常受欢迎是一样的道理。只是基础软件需要长期的积累和沉淀，耗资比较大，耗时也比较久，一旦落后就很难追赶上来。</p><p></p><p>打破困境还是要需要创新，只是跟着国外，我觉得只能是捡漏，做不大做不强。通过创新做出真正卓越的产品满足我们的场景，这样不仅可以同国内外的产品竞争，还可以去海外参与全球竞争，能参与全球的竞争并胜出的企业才是真正伟大的企业。</p><p></p><p>InfoQ：数据库行业面临的挑战主要有哪些？</p><p></p><p>姚延栋：最主要的挑战是商业化，就是别人为什么要买你的产品？要解决这个问题，第一要靠创新，第二要有一定的差异化。另外，国内很多初创数据库公司规模相对都比较小，很难形成生态，所以我们坚定地拥抱PostgreSQL 和Greenplum这两大生态，与其保持兼容。另一方面，我们也要为自己构建合作伙伴生态，在时序和实时数据分析方面，我们也在和很多的合作伙伴共同打造下一代的实时数据分析解决方案。最后就是营销了，酒香也怕巷子深，好东西要让所有人都知道，但是营销是一个非常专业的领域，在这里就不展开探讨了。</p><p></p><p>InfoQ：基础软件创业是个长跑，前期投入会比较大，姚总以及您的团队会因此感到焦虑吗？</p><p></p><p>姚延栋：至少在产品大方向上，我们没有什么焦虑的。因为当时出来创业的时候，最容易的就是继续做数仓，因为我们在Greenplum做了十几年，不管是产品形态、技术还是客户资源都是最容易的，但为什么我们没有做数仓，而选择了超融合数据库，并且从时序切入，其实是我们对未来的一个判断。</p><p></p><p>做数据库至少要看5年以上，判断5年以后会是什么样，我们认为5年以后万物智联的时代会来临，最重要的新变量就是时序数据，我们对这个方向还是比较认可的。当然一点不焦虑也不可能，特别是早期我们还没有和客户做验证的时候。现在我们确实经过了很多头部企业的验证，也基于很多数据看到了智能网联汽车等领域的蓬勃发展，我们的心态也会就更平静了。</p><p></p><p>InfoQ：YMatrix 对于开发者的学习门槛如何？</p><p></p><p>姚延栋：对于开发者门槛还是比较低的，以前如果用过 MySQL、Oracle、PostgreSQL这种关系型数据库，学习YMatrix 基本上可以平移过来，特别是用过PostgreSQL的开发者，语法几乎都是一样的，体验也都是一样的。</p><p></p><p>对于运维人员可能还是有一点门槛，但是这个门槛也会比较低。比如，基于PostgreSQL体系的数据库需要定期做analyze，收集一些统计信息。如果不收集统计信息，可能会导致性能变差，之前我们确实也碰到过几次这样的客户场景，客户突然说当时测的时候很好，但现在为什么突然变慢了。我们派技术人员一看，就是没做 analyze，赶紧给他配置定期的analyze等任务，为此我们也总结了一些最佳实践。通过这套最佳实践，我们把它产品化、智能化，再做到数据库里面去，通过数据库能够自动的甄别这种情况，后续我们也希望把这个门槛进一步地去降低。</p><p></p><p>InfoQ：作为一种新型的技术架构，虽然超融合数据库理念很美好，但是大家对于这种事情多少都会想，你是不是牺牲了某些垂直的特性，或者用了以后是不是会付出其他的一些代价，这些代价是否是符合整个行业发展趋势？</p><p></p><p>姚延栋：好多人都有类似的顾虑，认为这个东西会不会牺牲其他的东西。最终肯定是有权衡，举个例子，比如ACID可以确保数据正确性，能够确保数据不重、不错、不丢，还可以释放这个开发人员的精力。很多时序数据库、分析性数据库是不支持ACID的，很多人认为ACID会损失性能，但实际上是微乎其微的，和其他的技术优化点相比，ACID的开销其实是可以忽略的。</p><p></p><p>我们做超融合数据库到底会付出哪些代价？根据复杂度守恒定律来看，复杂度是不会凭空消失的，它只能是转移，我们降低了用户的复杂度，实际上增加了数据库内部的复杂度。这样一来，我们对数据库人才的要求会更高，相当于我们自己承担了更多的工作，也投入了大量的精力去招聘人才、培养人才，努力去降低复杂度。不过幸运的就是我们做到了这一点，也是一个重要的行业突破，它会慢慢地改变数据库的未来形态以及发展格局。</p>",
    "publish_time": "2022-10-28 09:14:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "用现代Java调整经典设计模式",
    "url": "https://www.infoq.cn/article/LlrBgvdmYPGNsVDOZuCZ",
    "summary": "<p>1998年出版的《<a href=\"https://martinfowler.com/bliki/GangOfFour.html\">设计模式——可复用面向对象软件的基础</a>\"》有资格成为计算机科学的经典著作，大学仍然将它作为教材，并被奉为业界的最佳实践。在Devoxx的一场深度<a href=\"https://devoxx.be/talk/?id=48051\">讨论</a>\"中，<a href=\"https://www.linkedin.com/in/vsubramaniam/\">Venkat Subramaniam</a>\"使用现代Java实现了<a href=\"https://en.wikipedia.org/wiki/Iterator_pattern\">迭代器</a>\"、<a href=\"https://en.wikipedia.org/wiki/Strategy_pattern\">策略</a>\"、<a href=\"https://en.wikipedia.org/wiki/Decorator_pattern\">装饰器</a>\"或<a href=\"https://en.wikipedia.org/wiki/Factory_method_pattern\">工厂方法</a>\"模式，对原有的设计模式进行了一番调整。</p><p></p><p>在<a href=\"https://devoxx.be/talk/?id=48051\">讨论</a>\"的引言部分，Subramaniam表示这本书的作者是软件开发的祖父，他们的设计模式是祖母的食谱——但即使你有了这些食谱，也不一定能做出这些菜。因此，他认为将设计模式作为一种沟通工具是有意义的，但将其作为一种软件设计工具却是一场灾难。</p><p></p><p>以下是我们在日常编程中可能遇到的常见模式，Subramaniam通过充满活力和快乐的方式让这些模式变得更加流式。</p><p></p><p>由于Java加入了函数式编程，迭代器模式发生了很大的变化。最大的一个变化是从外部迭代器到内部迭代器的转变，这是Java函数式API带来的。这个变化可以让你从使用冗长的命令式迭代</p><p></p><p><code lang=\"java\">int count = 0;\nfor(var name: names) {\n   if(name.length() == 4) {\n     System.out.println(name.toUpperCase());\n   count++;\n\n     if(count == 2) {\n        break;\n     }\n   }\n  }\n}\n</code></p><p></p><p>演变成使用流式的函数式迭代</p><p></p><p><code lang=\"java\">names.stream()\n     .filter(name -&gt; name.length() == 4)\n     .map(String::toUpperCase)\n     .limit(2)\n     .forEach(System.out::println);\n</code></p><p></p><p><a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/stream/Stream.html#limit(long)\">limit(long)</a>\"和<a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/Predicate.html\">takeWhile(Predicate<!--? super T-->)</a>\"（在Java 9中添加的）是<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.16\">continue</a>\"和<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.15\">break</a>\"语句的等效函数，第一个只接受数值限制参数，而第二个可以接受表达式。</p><p></p><p>尽管Java的函数式API作为JDK的一部分已经有近十年的时间了，但在代码库中仍然存在一些常见的错误。当函数管道“不”纯粹（修改或依赖外部可见的状态）时，可能会导致迭代操作的结果不可预测（特别是在进行并行执行时）。</p><p></p><p>策略模式——我们希望改变算法的一小部分，同时保持算法的其余部分不变。从历史上看，这个模式是通过一个方法来实现的，这个方法采用一个方法接口作为参数，作为参数的方法接口可以有多个策略实现，一个策略通常就是一个方法或函数。因此，函数式接口和lambda表达式在这里很适用。</p><p></p><p>虽然匿名类可以作为一种实现机制，但函数接口（<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html\">Predicate<!--? super T--></a>\"是一个很好的选择）或lambda表达式让代码变得更加流式，更容易理解。在现代Java中，策略模式更多的是一种特性，而不是需要付出大量努力才能实现的模式。</p><p></p><p><code lang=\"java\">public class Sample {\n  public static int totalValues(List numbers) {\n    int total = 0;\n\n    for(var number: numbers) {\n      total += number;\n    }\n\n    return  total;\n  }\n\n  public static int totalEvenValues(List numbers) {\n    int total = 0;\n\n    for(var number: numbers) {\n      if(number % 2 == 0) { total += number; }\n    }\n\n    return  total;\n  }\n\n  public static int totalOddValues(List numbers) {\n    int total = 0;\n\n    for(var number: numbers) {\n      if(number % 2 != 0) { total += number; }\n    }\n\n    return  total;\n  }\n\n  public static void main(String[] args) {\n    var numbers = List.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n    System.out.println(totalValues(numbers));\n    System.out.println(totalEvenValues(numbers));\n    System.out.println(totalOddValues(numbers));\n  }\n}\n</code></p><p></p><p>现代的做法是使用lambda表达式来表示策略。</p><p></p><p><code lang=\"java\">import java.util.function.Predicate;\n\npublic class Sample {\n  public static int totalValues(List numbers,\n    Predicate selector) {\n    int total = 0;\n\n    for(var number: numbers) {\n      if(selector.test(number)) {\n        total += number;\n      }\n    }\n\n    return  total;\n  }\n\n  public static boolean isOdd(int number) {\n    return number % 2 != 0;\n  }\n\n  public static void main(String[] args) {\n    var numbers = List.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n    System.out.println(totalValues(numbers, ignore -&gt; true));\n    System.out.println(totalValues(numbers, \n      number -&gt; number % 2 == 0));\n\n    System.out.println(totalValues(numbers, Sample::isOdd));\n  }\n}\n</code></p><p></p><p>在介绍工厂方法实现时，Venkat陈述了以下内容。</p><p></p><p></p><blockquote>从多态的角度来看，Java中最糟糕的关键字是什么？尽管final、instanceof和static都可能算是最糟糕的关键字，但它们都只是小兵，<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.5\">new</a>\"才是它们当中的黑手党。多模式（<a href=\"https://en.wikipedia.org/wiki/Creational_pattern\">创建模式</a>\"）、框架（<a href=\"https://spring.io/\">Spring</a>\"、<a href=\"https://github.com/google/guice\">Guice</a>\"）是为了解决new的“弊端”——缺乏多态性支持和紧密耦合。受<a href=\"https://www.ruby-lang.org/\">Ruby</a>\"基于上下文创建不同对象的多态能力的启发，Venkat使用Java的<a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-13.html#d5e19889\">default</a>\"关键字实现工厂方法模式。这种方法使用了接口和非常小的实现类，让代码变得更容易理解。</blockquote><p></p><p></p><p><code lang=\"java\">import java.util.*;\n\ninterface Pet {}\nclass Dog implements Pet {}\nclass Cat implements Pet {}\n\ninterface Person {\n  Pet getPet();\n\n  default void play() {\n    System.out.println(\"playing with \" + getPet());\n  }\n}\n\nclass DogPerson implements Person {\n  private Dog dog = new Dog();\n\n  public Pet getPet() { return dog; }\n}\n\nclass CatLover implements Person {\n  private Cat cat = new Cat();\n  public Pet getPet() { return cat; }\n}\n\npublic class Sample {\n  public static void call(Person person) {\n    person.play();\n  }\n\n  public static void main(String[] args) {\n    call(new DogPerson());\n    call(new CatLover());\n  }\n}\n</code></p><p></p><p>即使装饰器模式在理论上为许多程序员所熟知，但实际上很少有人使用它。它的实现最臭名昭著的例子可能是io包。Venkat基于函数的可组合性提出了一种不同的方法——使用<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html#identity--\">identity</a>\"函数和<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html#andThen-java.util.function.Function-\">andThen(Function<!--? super R,? extends V-->)</a>\"构建简单、流式的机制来增强对象的能力。</p><p></p><p><code lang=\"java\">class Camera {\n  private Function filter;\n\n  public Camera(Function... filters) {\n    filter = Stream.of(filters)\n      .reduce(Function.identity(), Function::andThen);\n  }\n\n  public Color snap(Color input) {\n    return filter.apply(input);\n  }\n}\n\npublic class Sample {\n  public static void print(Camera camera) {\n    System.out.println(camera.snap(new Color(125, 125, 125)));\n  }\n\n  public static void main(String[] args) {\n    print(new Camera());\n\n    print(new Camera(Color::brighter));\n    print(new Camera(Color::darker));\n\n    print(new Camera(Color::brighter, Color::darker));\n  }\n}\n</code></p><p></p><p>即使模式看起来会一直存在，就像Subramaniam<a href=\"https://www.youtube.com/watch?v=yTuwi--LFsM&amp;t=28s\">在讨论中提到的</a>\"：“设计模式经常被用来填补编程语言的空白。一门语言越强大，我们就越少谈论设计模式，因为设计模式自然会成为语言的特性。”</p><p></p><p>随着编程语言的演进和我们经验的积累，模式也会随着时间的推移而演变。其中一些模式被吸收为语言的特性，另一些则被认为已过时，而另一些变得更加容易实现。不管你最喜欢的是哪一类，Venkat建议把它们作为交流的手段，并让代码朝着这些模式的方向演变。此外，他建议尝试使用多种编程语言，让代码变得更加流式。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/10/modern-java-design-patterns/\">https://www.infoq.com/news/2022/10/modern-java-design-patterns/</a>\"</p>",
    "publish_time": "2022-10-28 09:55:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "文娱场景高音质降噪方案设计与落地",
    "url": "https://www.infoq.cn/article/OJ9wJPtHU2WJyhDNKEfM",
    "summary": "<p><strong>直播简介</strong></p>\n<p>随着近年深度学习的广泛应用，使用神经网络的降噪算法喷涌而出，而且这类算法不管是在降噪力度上，还是鲁棒性上，都要优于传统降噪，是当前处理各种不同场景噪音的首选方案。但是，在实时互动环境下，对于音频实时处理和性能要求比较高，这对于 AI 模型的设计和效果的平衡带来了的巨大的挑战。基于上述挑战，荔枝集团音频团队提出了一种轻量的降噪方案，该方案不仅能处理日常生活中常见的平稳和非平稳噪声，而且能很好的保留语音的音质，同时该 AI 降噪模型在运行时占用的内存和 CPU 消耗都极低，满足了全量 iPhone 机型以及大部分 Android 中低端机型。</p>\n<p><strong>听众受益</strong></p>\n<ul>\n<li>了解深度学习和机器学习</li>\n<li>了解音频相关算法</li>\n<li>AI 模型设计和落地</li>\n<li>高性能计算</li>\n</ul>",
    "publish_time": "2022-10-28 10:15:54",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "文娱场景高音质降噪方案设计与落地 | InfoQ《公开课》",
    "url": "https://www.infoq.cn/article/OJ9wJPtHU2WJyhDNKEfM",
    "summary": "<p><strong>直播简介</strong></p>\n<p>随着近年深度学习的广泛应用，使用神经网络的降噪算法喷涌而出，而且这类算法不管是在降噪力度上，还是鲁棒性上，都要优于传统降噪，是当前处理各种不同场景噪音的首选方案。但是，在实时互动环境下，对于音频实时处理和性能要求比较高，这对于 AI 模型的设计和效果的平衡带来了的巨大的挑战。基于上述挑战，荔枝集团音频团队提出了一种轻量的降噪方案，该方案不仅能处理日常生活中常见的平稳和非平稳噪声，而且能很好的保留语音的音质，同时该 AI 降噪模型在运行时占用的内存和 CPU 消耗都极低，满足了全量 iPhone 机型以及大部分 Android 中低端机型。</p>\n<p><strong>听众受益</strong></p>\n<ul>\n<li>了解深度学习和机器学习</li>\n<li>了解音频相关算法</li>\n<li>AI 模型设计和落地</li>\n<li>高性能计算</li>\n</ul>",
    "publish_time": "2022-10-28 10:15:54",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "马斯克成功收购推特，开除CEO等多名高管，还派特斯拉工程师进驻总部审查代码",
    "url": "https://www.infoq.cn/article/6NcqULAMegQoj9GApW5X",
    "summary": "<p></p><p></p><blockquote>这场马斯克收购推特的连环反转“大戏”，终于落幕。</blockquote><p></p><p></p><h3>靴子终于落地</h3><p></p><p></p><p>10月28日，据<a href=\"https://www.nytimes.com/2022/10/27/technology/musk-said-to-begin-firing-twitters-top-executives.html\">《纽约时报》</a>\"、<a href=\"https://www.cnbc.com/2022/10/27/elon-musk-now-in-charge-of-twitter-ceo-and-cfo-have-left-sources-say.html?__source=sharebar%7Ctwitter&amp;par=sharebar\">CNBC&nbsp;</a>\"、<a href=\"https://www.wsj.com/articles/elon-musk-completes-twitter-takeover-11666918031?mod=hp_lead_pos1\">《</a>\"&nbsp;<a href=\"https://www.wsj.com/articles/elon-musk-completes-twitter-takeover-11666918031?mod=hp_lead_pos1\">华尔街日报》</a>\"、<a href=\"https://www.washingtonpost.com/technology/2022/10/27/twitter-elon-musk/?scrolltoken=-Q8WUWfJibbKSSZiPw628q1blLAQ7Ar2jbZEGU9w3R5n02rpWWip68tFYURstYMdwSOBya5l_87TVPxuRaG4Too-JVCM46Tu7iHXIjM4mEfjg1Bs1qDqUkB3cD9lE7gX0JUDZDjkO6ZEyAt9OVPZzKm-WE5PgxZHd6bGB9WPh2pauRpMKOBfs3vNJevX19xtKeHOfwfwbwVh8rQZGFu5ISKqLpDX0IrRBkrHG9cy.eyJraWQiOiIyIn0\">《华盛顿邮报》</a>\"等多家外媒报道，马斯克收购推特的交易已经完成。这笔440亿美元的收购案终于迎来大结局。</p><p></p><p>在法院规定的完成交易的最后期限前，马斯克完成了交易。如果在10月28日前，不收购推特，他将面临诉讼。</p><p></p><p>此前，主持双方诉讼案的特拉华州法官裁定， 马斯克收购推特的交易期限截止到10月28日。特拉华州衡平法院院长Kathaleen McCormick写道：“这一行动将一直持续到 2022 年 10 月 28 日下午 5 点，以允许双方完成交易。”&nbsp;Kathaleen McCormick说，如果交易在那个日期和时间之前没有完成，新的审判日期将定在 11 月。</p><p></p><p>随着截止日期的临近，越来越多的迹象表明该交易朝着按时成功完成的方向发展。</p><p></p><p>据报道，马斯克在周二晚间向为该交易提供债务融资的贷方发送了借款通知，这些银行随即开始签署文件并进行资金转移。</p><p></p><p>10月27日，马斯克做了一个令人大跌眼镜的行为。根据马斯克在推特上发布的一段视频，他双手抱着一个水槽走进了推特总部，并配文“走进推特总部，好好琢磨这件事”。有人认为，此举暗示，他对推特的收购已成定局。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/ed/3b/edba2c6c24ef6be79ce6e9e6af35833b.jpeg\" /></p><p></p><p>此前，有广告商对即将为马斯克领导的Twitter 提出了担忧。《华尔街日报》报道说，许多广告商担心他提出的缩减内容审核和与潜在利益冲突的计划。10月28日，在收购前夕，马斯克向广告商保证他打算购买 Twitter。</p><p></p><p><a href=\"https://www.nyse.com/corporate-actions\">据纽约证券交易所网站称</a>\"，该社交媒体平台的股票将于周五停牌。</p><p></p><p>不过，许多分析师认为，鉴于今年美国许多科技股的价值下跌以及 Twitter 现在已难以吸引用户和发展壮大趋势放缓，马斯克现在为该公司支付的价格太高了。在最近的一次财报电话会议上，马斯克也承认，Twitter 是“一种长期萎靡不振的资产，但具有令人难以置信的潜力，尽管显然我自己和其他投资者现在为 Twitter 付出了过高的代价”。</p><p></p><h3>解雇原班人马，或将推进大裁员</h3><p></p><p></p><p>作为他上任这家社交媒体平台官方所有者后的“第一把火”。马斯克解雇了Twitter的主要高管。</p><p></p><p>据外媒报道，马斯克解雇了原推特首席执行官Parag Agrawal、首席财务官 Ned Segal、总法律顾问Sean Edgett以及法律政策、信任和安全负责人Vijaya Gadde。</p><p></p><p>消息人士称，Twitter 首席执行官 Parag Agrawal 和财务主管 Ned Segal 已离开公司旧金山总部，不会返回。</p><p></p><p>马斯克与推特的高管们早有纠葛。此前，马斯克曾在社交平台上批评过 Gadde。在马斯克与推特的法律斗争中，他还曾与Parag Agrawal发生过争吵。</p><p></p><p>现在，马斯克将他的推特个人简介更新为了“Chief Twit”。</p><p></p><p>近期，还有媒体报道称，马斯克计划对推特展开大规模的裁员计划。10 月 21 日，《华盛顿邮报》援引采访和内部文件报道称，马斯克在收购 Twitter 公司的交易中告诉潜在投资者，在收购完成后，他计划裁掉这家社交媒体公司 7500 名员工中的近 75%，将该公司员工数量从7500人减少到仅2000人。</p><p></p><p>对此，推特员工在信中表示了强烈反对。推特员工要求马斯克承诺，如果他的收购成功，将保持推特目前的员工人数。推特员工称，作为员工，他们理应得到具体的承诺，这样才能继续维护推特平台的完整性。他们在信中最后强调：“我们要求得到有尊严的对待，而不是被当作亿万富翁游戏中的棋子。”</p><p></p><p>但据彭博社27日的报道，马斯克告诉推特员工，他不打算裁员75%。</p><p></p><p>事实上，此前，马斯克曾多次提及想在收购 Twitter 后进行大幅裁员。</p><p></p><p>在 6 月与 Twitter 员工的问答中，马斯克表示需要“合理化员工人数”，并表示：“任何对 Twitter 有重要贡献的雇员都应该没有什么可担心的。”马斯克的这些言论明显会让 Twitter 员工惴惴不安。对此，Twitter 告知员工，没有全公司范围内的裁员计划。</p><p></p><p>早在今年4月底，据知情人士透露，马斯克在进行推特收购案交易谈判时告诉银行，他将关注这家社交媒体公司的利润，并提出了同时削减成本和裁员的想法。他没有详细说明哪些部门或职位可能受到影响。另外，据知情人士透露，马斯克已为推特物色一位新 CEO，身份暂未透露。马斯克告诉为其收购推特提供支持的银行，他将控制该社交媒体平台员工的薪酬水平。</p><p></p><p>不过，还没开始裁员，推特现在已经有很多员工主动离开了。</p><p></p><p>8 月 25 日，推特表示，由于公司正面临一系列挑战，包括与特斯拉 CEO 埃隆·马斯克的诉讼官司，以及“吹哨人”Peiter Zatko 的爆料，越来越多的员工开始离职。推特高管在一次公司全员会议上告诉员工，Twitter 目前的员工流失率为 18.3%。相比之下，在马斯克提出以 440 亿美元收购推特之前，推特的员工流失率徘徊在 14%至 16%之间，这与竞争对手的员工流失率基本一致。</p><p></p><h3>马斯克让特斯拉工程师审查推特代码</h3><p></p><p></p><p>据彭博社报道，马斯克昨天邀请特斯拉的工程师在 Twitter 总部与产品负责人会面，以深入研究 Twitter 代码。</p><p></p><p>据一位知情人士透露，周四，在 Twitter 的旧金山总部，推特的产品负责人向特斯拉工程师展示了公司的代码，以便他们评估并向马斯克解释公司需要什么。</p><p></p><p>知情人士说，截至当天中午，Twitter 的工程师无法再更改代码。知情人士说，这是为了确保在交易完成前产品不会发生任何变化。这些人拒绝透露姓名，因为该过程不公开。Twitter 在 4 月首次宣布该交易时也实施了类似的冻结措施。</p><p></p><p>马斯克在推特上表示，他对推特的的兴趣与赚钱无关。马斯克说，他买下推特是“为了帮助我所爱的人类”，并希望“文明拥有一个共同的数字城镇广场”。</p><p></p><p>今年4月，马斯克曾在温哥华举行的 TED2022 会议上表示，Twitter 算法应该是开源的，以避免任何类型的“幕后操纵”。马斯克认为推特应该将其源代码开源以接受公众审查。他说：“代码应该在 GitHub 上，以便对其进行检查，我只是认为这对美国和其他国家的民主属性很重要。如果我们能够增加对 Twitter 作为公共平台的信任，文明风险就会降低。”</p><p></p><p>马斯克还发布了他对 Twitter 的计划包括“X，适用于一切的应用程序”。一些人认为，这类超级应用可能类似于中国的社交应用微信。</p><p></p><p>马斯克曾表示，他计划重新考虑 Twitter 的内容审核政策，以服务于更极端的“言论自由”方法。他不同意 Twitter 对那些一再违反其规则的人进行永久禁令的做法，这增加了一些以前被禁止的用户重新出现在该平台上的可能性。</p><p></p><h3>漫长的收购之路</h3><p></p><p></p><p>这笔收购案持续已久，期间转折不断，一有什么风吹草动很快便能占据各大新闻头条。</p><p></p><p>马斯克购买推特的想法最早始于今年1月，他开始定期购买推特的股票，到 3 月中旬，他已经积累了该公司 5% 的股份。</p><p></p><p>今年 4 月，马斯克成为推特的最大股东，他提议以440亿美元的价格私有化收购推特。4月14日，马斯克更新了提交给美国证券交易委员会（SEC）的13D文件，文件显示，马斯克提出以现金方式、以每股54.20美元的价格收购推特已发行普通股。文件称，马斯克已于4月13日发送信件给推特提出了提议，表示将以每股54.20美元的价格收购“非马斯克所持有的全部推特已发行普通股”。</p><p></p><p>当时推特方面在一份新闻稿中证实，其已收到马斯克主动提出的上述提议。推特方面称，董事会将仔细审查该提案，以做出符合公司和所有股东最佳利益的行动方案。</p><p></p><p>然而到了5月的时候，马斯克开始反悔了。他不想买了，理由是推特未能充分披露平台上垃圾邮件和虚假账户的数量。</p><p></p><p>随后推特将其告上法庭，要求推特兑现交易承诺，认为他即便改变主意仍有义务完成交易。这起案件预计将于10月开庭。</p><p></p><p>接下来就是双方的法律斗争，推特和马斯克通过他们的律师展开了多轮互斥。</p><p></p><p>7月8日，马斯克向美国证券交易委员会（SEC）和推特法务部门发了一封信，明确表示将终止440亿美元并购推特的协议。</p><p></p><p>8月30日晚间，据彭博社等外媒报道，马斯克提交了一份终止推特收购的通知。美国证券交易委员会的一份文件称，马斯克已经致函推特，强调了终止收购协议的其他原因。</p><p></p><p>9月13日，推特公司的股东投票同意特斯拉首席执行官马斯克以440亿美元收购该公司并将其私有化的提议。</p><p></p><p>而到了10 月初，马斯克又改变了主意，表示如果推特放弃诉讼，他希望以每股 54.20 美元的原价收购 Twitter。由于不信任马斯克的动机，Twitter 的律师表示，特斯拉 CEO 的“提议是进一步恶作剧和拖延的邀请。”</p><p></p><p>特拉华州衡平法院法官最终裁定，马斯克必须在 10 月 28 日之前完成与 Twitter 的交易或接受审判。</p><p></p><p>参考文章：</p><p></p><p><a href=\"https://www.bbc.com/news/technology-63402338\">https://www.bbc.com/news/technology-63402338</a>\"</p><p></p><p><a href=\"https://www.nytimes.com/2022/10/27/technology/elon-musk-twitter-deal-complete.html\">https://www.nytimes.com/2022/10/27/technology/elon-musk-twitter-deal-complete.html</a>\"</p><p></p><p></p>",
    "publish_time": "2022-10-28 13:19:21",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "全面审查Twitter代码、当场炒掉CEO等众多高管：马斯克正式入主Twitter",
    "url": "https://www.infoq.cn/article/1jdi4LDTycjblozS8QwV",
    "summary": "<p>根据<a href=\"https://www.nytimes.com/2022/10/27/technology/elon-musk-twitter-deal-complete.html\">外媒报</a>\"道，马斯克现已完成440亿美元的Twitter 收购交易，并将自己的 Twitter 简历更改为“Chief Twit”。当地时间10月27日，马斯克<a href=\"https://twitter.com/elonmusk/status/1585341984679469056\">抱着“水槽”</a>\"进入Twitter 总部。这场持续半年的收购大戏终于迎来了落幕的时刻，但对于Twitter 员工以及公司自身发展来说，一切才刚刚开始。</p><p></p><h2>原高管被“请走”，裁员仍会进行</h2><p></p><p>&nbsp;</p><p>对于外界最为关心的“裁员75%”传闻，马斯克一行也给出了答案。根据<a href=\"https://www.bloomberg.com/news/articles/2022-10-27/musk-tells-twitter-employees-he-doesn-t-plan-to-cut-75-of-jobs#xj4y7vzkg?leadSource=uverify%20wall\">彭博社</a>\"消息，马斯克已经告知员工不会进行如此大规模精简，但还是会计划裁员，马斯克此前曾明确表示不理解为何表现不佳的员工还会被继续留用。即便没有该收购事件，Twitter 本身似乎也在计划25% 的裁员。</p><p>&nbsp;</p><p>不过，马斯克上任的第一把火烧到了原Twitter 高管层。据报道，马斯克先是罢免了首席执行官 Parag Agrawal，首席财务官 Ned Segal、公司政策主管Vijaya Gadde、总法律顾问肖Sean Edgett、首席客户官 Sarah Personette 等人都相继离开了Twitter 位于旧金山的总部大楼。<a href=\"https://www.nytimes.com/2022/10/27/technology/musk-twitter.html\">据《纽约时报》报道</a>\"，这些高管中至少有一名是被安保人员带走的。</p><p>&nbsp;</p><p>不过这些高管们也获得了可观的报酬。据报道，Agrawal 获得了 3870 万美元，Segal 获得了 2540 万美元，Gadde 获得了 1250 万美元，Personette 昨天在<a href=\"https://twitter.com/SEP/status/1585624570052202497\">推特</a>\"上表达了她对马斯克的收购感到兴奋，并获得了 1120 万美元。据<a href=\"https://www.bloomberg.com/news/articles/2022-10-28/musk-is-said-to-take-twitter-ceo-role-reverse-life-bans#xj4y7vzkg\">彭博社报道</a>\"，马斯克计划亲自担任推特 CEO。</p><p>&nbsp;</p><p>另外，马斯克也在 Twitter 上对此次收购进行了进一步<a href=\"https://twitter.com/elonmusk/status/1585619322239561728\">解释</a>\"：</p><p>&nbsp;</p><p></p><blockquote>我收购Twitter的原因在于，对未来文明来说，有一个共同的数字城市广场很重要，在那里，人们可以以一种健康的方式讨论各种各样的信仰，而不是诉诸暴力。</blockquote><p></p><p>&nbsp;</p><p>这意味着，马斯克未来或将放松Twitter 的内容审核机制，甚至前总统特朗普永久禁止进入该平台的政策或许也将被取消。据报道，对于推特用户的永久性禁令，马斯克计划取消。</p><p>&nbsp;</p><p>尽管马斯克曾表示，他收购Twitter “不是一种赚钱的方式”，但据报道，他提出了削减成本和增加收入的想法，政府和企业使用 Twitter 可能需要缴纳“少量费用”。</p><p>&nbsp;</p><p></p><h2>让汽车工程师审查Twitter代码</h2><p></p><p>&nbsp;</p><p><a href=\"https://www.bloomberg.com/news/articles/2022-10-27/tesla-engineers-visit-twitter-office-to-review-code-for-musk?leadSource=uverify%20wall\">据报道</a>\"，马斯克要求特斯拉的工程师与Twitter产品经理沟通，并对Twitter代码进行分析，这些工程师将向马斯克汇报witter的业务需求。</p><p>&nbsp;</p><p>另外收购完成前，Twitter的工程师不能修改代码。知情人士表示，这是为了确保在交易完成前产品不会发生任何变化。据悉审查过程不会公开。Twitter 在 4 月首次宣布该交易时也实施了类似的冻结措施。</p><p>&nbsp;</p><p>但目前，并不清楚汽车工程师审核社交媒体代码的匹配度。</p><p>&nbsp;</p><p>Twitter 的算法都是关于个性化的，使用机器学习来指导许多决策。例如，Twitter 训练了许多机器学习模型，帮助决定哪些因素要优先考虑。这些模型不能像常规代码一样被检查，而是需要在尽可能接近真实世界的环境中进行测试，而且为响应不断涌现的新数据、用户行为等，这些模型在真实系统中也会迅速变化。</p><p>&nbsp;</p><p>根据 Twitter 技术团队人士透露，Twitter 没有“主算法”，即Twitter 决策是不同算法基于大量数据和行为计算的结果，没有单一的算法可以指导 Twitter 决定增加或隐藏内容。</p><p>&nbsp;</p><p>而特斯拉FSD的算法和模型，重点也在感知、规划、矢量地图、自动标注、仿真等方面。</p><p>&nbsp;</p><p>此前，马斯克曾抱怨Twitter的算法，表示其存在“事实上的偏见”，并公开表示应该将Twitter 代码开源。为此，他还在Twitter上发起了<a href=\"https://twitter.com/elonmusk/status/1507041396242407424\">投票。</a>\"目前，已有110万多人参与投票，近83%的支持将其开源。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/53/530e16f47212a89395e0fefce0c85ba9.png\" /></p><p></p><p>&nbsp;马斯克接管Twitter后是否真的会将其开源现在还不得而知，但随着其调整内容审核机制想法的落实，Twitter内部算法势必会有所调整。</p><p>&nbsp;</p><p>“在机器学习时代，重要的不是算法，而是数据，”麻省理工学院教授兼计算机科学家<a href=\"https://people.csail.mit.edu/karger/\">David Karger曾表示</a>\"，马斯克可以通过使平台更加开放来改进 Twitter，以便其他人可以在此基础上构建新的方式。</p><p>&nbsp;</p><p>不过，纽约大学研究大型复杂系统的安全隐私的副教授 Damon McCoy表示，公开一些 Twitter 代码将提供更大的透明度，但即使是那些构建 Twitter 的人可能也无法完全理解它的工作原理。</p><p>&nbsp;</p><p>Twitter 的工程团队担心在所有这些复杂性中，一些代码可能会被断章取义并突出显示为偏见的标志，过多透露 Twitter 推荐系统的运作方式也可能导致安全问题。</p><p></p><h2>“X”的加速器</h2><p></p><p>&nbsp;</p><p>在软件应用领域，马斯克的雄心是做一款万能应用“X”。10月5日，马斯克<a href=\"https://twitter.com/elonmusk/status/1577428272056389633\">发推表示</a>\"，收购 Twitter 是创建万能应用“X”的加速器。他估计 Twitter 可能会将 X 加速 3 到 5 年。</p><p>&nbsp;</p><p>万能应用的概念起源于微信。马斯克认为，微信提供了一站式服务，用户可以发信息、支付、网上购物或叫出租车等。</p><p>&nbsp;</p><p>“在中国，你基本上生活在微信上，”马斯克在 6 月份告诉 Twitter 员工。他认为，为了鼓励人们使用和留在平台上，Twitter 应该像微信一样包罗万象。“如果我们能用 Twitter 重现这一点，我们将取得巨大成功。”</p><p>&nbsp;</p><p>X 也是马斯克在特拉华州注册收购 Twitter 的三个控股公司的名称。监管文件显示，如果收购发生，X Holdings I 将作为 Twitter 的母公司，X Holdings II 将收购 Twitter，X Holdings III 将为此次交易提供资金。</p><p>&nbsp;</p><p>有知情人士称，马斯克已告诉投资者他的计划：通过出售付费订阅服务减少对广告的依赖，允许内容创作者赚钱，并支持支付。</p><p></p><h2>不太专业的“程序员”</h2><p></p><p>&nbsp;</p><p>马斯克现在被人熟知的身份是企业家，但他同时也是一名程序员，不过并非专业出身。</p><p>&nbsp;</p><p>马斯克的编程生涯始于 10 岁时。当时的他对一台名为 Commodore VIC 的 5KB 内存计算机很感兴趣，在向他父亲索要之后，便拥有了这台电脑。</p><p>&nbsp;</p><p>不久后，马斯克使用计算机手册学习了 BASIC 计算机编程语言。据悉，培训手册的学习大约需要 6 个月，而马斯克能够<a href=\"https://amzn.to/3y8PqxJ\">在大约 3 天内完成</a>\"。</p><p>&nbsp;</p><p>马斯克第一次走进公众视野是在1984年。南非一本名为“个人计算机和办公技术”的刊物发布了马斯克设计的一款游戏源代码。这款游戏名为 Blastar，灵感来源于科幻小说的太空场景，需要运行167行代码。这是在计算机没有像今天这样适当的 GUI 时编写的，一切都需要在终端风格的界面上完成。</p><p>&nbsp;</p><p>当时的马斯克12岁，这家电脑杂志公司<a href=\"https://amzn.to/3y8PqxJ\">以 500 美元的</a>\"价格买下了这款游戏。这也成为马斯克科技生涯的起点。</p><p>&nbsp;</p><p>尽管马斯克作为程序员从来没有过朝九晚五的工作经历，但他确实在编写他初创公司 Zip2 的过程中发挥了重要作用。这是一款可以在地图上搜索企业目录的软件，据悉马斯克用C语言独立完成了这个软件后端的所有原始代码。</p><p>&nbsp;</p><p>不过根据<a href=\"https://amzn.to/3RuWb3H\">Ashlee Vance</a>\"编写的马斯克传记，该软件最终几乎完全由新员工重写。接管该项目的计算机科学专业学生能够用几行代码替换掉马斯克编写的大量代码。代码库最初也不是很灵活。这意味着如果将来需要进行更改，那将非常困难。</p><p>&nbsp;</p><p>Zip2 取得成功后，马斯克将赚到的钱投资到了他新的创业公司 X.com，几年后X.com与其竞争对手 Confinity 合并，成为 PayPal。合并过程中，X.com的大部分代码库都由更有才华的工程师重写。</p><p>&nbsp;</p><p>自此后，马斯克相继创建了特斯拉和 SpaceX。他在这些产品的开发中并没有发挥重要作用，这也意味着他从兼职程序员转变为全职创业者和企业家。</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.businessinsider.com/elon-musk-twitter-reach-agreement-to-close-acquisition-deal-2022-10\">https://www.businessinsider.com/elon-musk-twitter-reach-agreement-to-close-acquisition-deal-2022-10</a>\"</p><p><a href=\"https://thecodebytes.com/can-elon-musk-code-yes-but-hes-not-the-greatest-coder-alive/\">https://thecodebytes.com/can-elon-musk-code-yes-but-hes-not-the-greatest-coder-alive/</a>\"</p><p><a href=\"https://www.wired.com/story/twitter-open-algorithm-problem/\">https://www.wired.com/story/twitter-open-algorithm-problem/</a>\"</p><p><a href=\"https://www.bloomberg.com/news/articles/2022-10-27/musk-tells-twitter-employees-he-doesn-t-plan-to-cut-75-of-jobs\">https://www.bloomberg.com/news/articles/2022-10-27/musk-tells-twitter-employees-he-doesn-t-plan-to-cut-75-of-jobs</a>\"</p>",
    "publish_time": "2022-10-28 14:53:09",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "YMatrix 5.0重磅发布，以性能突破引领万物智联下的数据库最佳形态",
    "url": "https://www.infoq.cn/article/7EYtGawfRPRisKRVcqlj",
    "summary": "<p>10月26日，由北京四维纵横数据技术有限公司自主研发的超融合数据库<a href=\"https://www.infoq.cn/article/cI3hJsUtojbDorNs5eh0\">YMatrix 5.0</a>\"正式发布。</p><p>&nbsp;</p><p>不同于传统以及专用数据库产品，YMatrix实现了“一库多用”，可以支持各类传统及新兴数据场景，广泛支持多种数据类型，包括关系、时序、GIS、JSON、文本、图片数据等，也能满足包括机器学习、高级查询在内的全场景数据管理和复杂分析需求。</p><p>&nbsp;</p><p>YMatrix创始团队曾在全球排名Top3的Greenplum工作多年，是分析型数据库领域少见的世界级完整建制团队。创始人姚延栋所带领团队有大量服务全球500强企业的经验，对企业级数据库产品的需求、研发和应用有深刻理解。</p><p>&nbsp;</p><p>从第一行代码到5.0版本，仅两年时间，公司已获得累计近2亿元人民币的4轮融资，股东包括晨山资本、顺义产业基金、某头部云厂商、东方富海、中科创星、清华启迪等。</p><p>&nbsp;</p><p>此次产品发布会上，YMatrix&nbsp;CEO&nbsp;与创始人姚延栋分享了超融合数据库的发展趋势，以及万物智联场景下数据库的最佳形态。另外，杭州自动化技术研究院院长徐赤、小米智能制造软件产品部负责人封杨博士、三一重工泵送研究院泵诵云平台大数据负责人褚凤天，也参与了此次发布会，分别从工厂数字化、智能制造和工业互联网、智能设备运维等不同应用场景角度，分享了他们对下一代数据库的需求和理解。</p><p></p><h2>&nbsp;专用数据库&nbsp;vs. 超融合：下一代技术栈的竞赛</h2><p></p><p>&nbsp;</p><p>下一个时代，是万物智联和数智化转型的时代。那么，作为数字基石之一的数据库应该是什么样的？</p><p>&nbsp;</p><p>过去20年间，互联网飞速发展，为了应对不断升级、升维的数据环境，涌现了很多优秀的产品，或是功能强大，或是性能惊艳，或是易用性极佳。然而，用户选择时，功能、性能、易用性似乎构成了一个”不可能三角”，总是需要权衡和取舍。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fd/fd0b5d5267500ec2260e12c83fa824d5.png\" /></p><p></p><p>为了应对新增的需求，用户不得已的选择是不断叠加，先一个个叠加新的专用数据库产品，再叠加运维不同产品的专业化团队。最终造成的困境，杭州自动化技术研究院院长徐赤将其总结为“难、混、乱、散”：</p><p>&nbsp;</p><p>每出现一个新需求，就要叠加一个新产品，从选型、试点到验证，少则一两个月，多则半年甚至一年，堪比“炼狱”。由于目标混沌、路径混乱、缺少核心系统，数据总是呈现散乱并难以整合的状态。</p><p>&nbsp;</p><p>最后导致的直接结果就是“用户成本高“、”需求难以满足、痛点永远存在”。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/94/948ac7d55c202da273347cac959debce.png\" /></p><p></p><p>对此，徐赤在发布会上表示，在过去以专用类产品为主流的市场中，服务商忙着生产孤岛、企业忙着购买孤岛，工程师们忙着打通孤岛，循环往复，永无止境。而且，这样强行耦合的结构，牵一发动全身，非常不稳定。</p><p>&nbsp;</p><p>YMatrix创始人姚延栋介绍，作为数据库人，成立团队的初心，就是想从用户需求出发，做一款通用性强的产品，而不是和大多同行一样，开发专用数据库产品，继续一个问题接一个问题，只解决当下问题。</p><p>&nbsp;</p><p>据了解，在国际市场上，类似YMatrix这样具备&nbsp;“超融合”特性的产品，已经成为了近年的研发趋势。</p><p>&nbsp;</p><p>海外市场，Snowflake 和 Databricks 曾先后提出 “one data platform”理念；传统数据库头把交椅的Oracle也在走向融合方向；对复杂新兴场景需求更加熟悉的时序数据库大佬 InfluxDB 和 TimescaleDB，也先后启动了新一代融合型数据库的研发，对比大厂采取了更为激进的策略。</p><p>&nbsp;</p><p>国内市场中，YMatrix率先提出超融合数据库概念，在2020年完成了相应产品的研发；目前也有少数创业公司试水，从专用产品出发，研发符合新一代融合理念的产品。</p><p>&nbsp;</p><p>如何定义一款优秀的“超融合”数据库产品？</p><p>&nbsp;</p><p>首先，回到用户需求。</p><p>&nbsp;</p><p>小米智能制造软件产品部负责人封杨博士是这么定义的：以工业互联网场景为例，其本质是以“数据”为核心要素，企业实现全面连接。企业经营者的核心诉求，是如何最大化利用数据智能，为企业经营带来看得见的价值。</p><p>&nbsp;</p><p>再向上一层，则是跨过每个企业的微观需求，在垂直产业或多个产业交叉的维度，构建起全要素、全产业链、全价值链融合的新制造体系和新产业生态。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8c/8c106d2c0124f2d3c2fbd26f72a8aee9.png\" /></p><p></p><p>为了实现这个目标，需要搭建一个闭环的数据链条。在企业内到企业外，从采集、诊断、预测到智能决策，实现全环节覆盖。依赖优化后的结果，可以更及时、更准确的做商业决策，比如确定一个月后生产什么，需要提前备好多少原材料，技术工艺能怎么调优，等等。</p><p>&nbsp;</p><p>封杨博士介绍，从企业级用户的角度来看，代表最先进生产力的产品，首先应该是极致简单的，最好是一个顶N个，能降低企业的财务、人力、学习成本；其次，要好用易用，因为制造场景采集的数据类型五花八门，不同数据类型的交叉分析、应对业务诉求的复杂分析也是层出不穷。</p><p>&nbsp;</p><p>对此，姚延栋进一步解释，“用户并不关心什么TP、AP、湖仓、批流，他们想要的就是一个强大的数据库，能接入所有数据，做得了各种各样的分析。有数据就可以往里写，想用的时候随时用，允许他们把精力放在数据价值上，而不是数据库上。所以，行业内曾热烈讨论的湖仓之分、批流之分，只会是阶段性产物”。</p><p>&nbsp;</p><p>“使用YMatrix，用户只需要做一次选型，运维一个产品，就可以支持所有数据类型，满足所有可能的需求。每次新需求出现时，只需要考虑在YMatrix中怎么实现。这大大降低了选型成本和开发运维成本”，姚延栋介绍。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6f/6f89ea5fdb40921546d320730395522e.png\" /></p><p></p><p>“企业内很难有精通不同产品的通才，所以厂商应该把复杂度处理掉，把简单应用给到我们用户，这样既省钱，又省心省力”，封杨博士表示在应用YMatrix的超融合产品后，相当于实现了“无缝集成”，仅仅需要管理“1个极致轻松的数仓建设团队+1个极致专注的工业算法团队”。</p><p>&nbsp;</p><p>三一重工泵送研究院泵诵云平台大数据负责人褚凤天表示，“使用高效的产品，可以大量释放出精力和创造力，让团队聚焦工厂运营、设备管理、工艺调优等更有价值的工作”。</p><p>&nbsp;</p><p>“以常见的堵管故障为例，以前总是很难明确堵管的真实原因，现在可以在库内通过批量的算法，在采集到的工矿数据上，更好的定位原因，提升服务水平，降低客户投诉率”，褚凤天介绍，“在尝试从制造企业向服务型企业升级的过程中，数据能力会是重点之一，直接决定了服务水平和盈利水平”&nbsp;。</p><p></p><h2>性能突破，是超融合价值放大的必要前提</h2><p></p><p>&nbsp;</p><p>在数据库行业，性能似乎是一个永远有吸引力的话题。</p><p>&nbsp;</p><p>性能数据直观，谁高谁低，谁强谁弱，一目了然。最近，很多数据库厂商都开始性能打榜打擂。姚延栋对此表示，“这是好事，说明技术在进步。但是，仅仅在某个场景下实现性能快20%-30%，甚至1倍，是很难赢得客户的。客户需要的是铁人三项，甚至是十项全能”&nbsp;。</p><p>&nbsp;</p><p>“在YMatrix团队内部，我们关注全场景性能表现，包括写入能力、时序查询能力、单表OLAP分析、多表关联OLAP分析、Machine Learning性能以及 OLTP 能力等诸多方面”，姚延栋介绍，“性能加持下的超融合，才是真正的超融合，才能给用户提供价值”&nbsp;。</p><p>&nbsp;</p><p>目前，YMatrix在生产场景下的写入速度实现了1.52 亿数据点/秒。通常一个工厂的数据点大概在10万点以内，1.52亿是该场景规模的1500倍，哪怕是对写入能力要求最高的时序场景，也可以轻松满足其高并发、低延迟的写入需求。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/48/486a857ecb55ca731aa5506dff33b4d5.png\" /></p><p></p><p>此外，对比时序数据库独角兽TimescaleDB，查询耗时是YMatrix的5.1倍；对比知名OLAP数据库产品Clickhouse，YMatrix在SSB基础测试上快27%；对比MPP数据库主流厂商Greenplum，YMatrix在多表关联分析场景上实现了数倍的性能提升；对比全球流行的开源大数据平台Spark，YMatrix在机器学习场景上的性能是其8倍；在Intel实验室的TPC-B 国际标准测试中，YMatrix主键查询tps高达160万，数十倍于绝大多数产品。</p><p>&nbsp;</p><p>对于性能优化的重要性，三一重工褚凤天表示，“最直接的体现就是提高运行速度，我们可以更快速的反应，大大提高了运维团队的效率”。</p><p>&nbsp;</p><p>姚延栋介绍，此次发布的YMatrix 5.0版本，还包含了多至138项的性能优化，特别是针对写入和分析等重点领域，进行了深度的指令级优化。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7e/7e09fe6a38416f09587fbc0531f0e298.png\" /></p><p></p><p>在易用性方面，YMatrix设计了用户体验极佳的图形化installer，只需10分钟左右就可以完成数据库集群的搭建。同时，为了降低初学者的学习曲线，YMatrix提供了on boarding功能，用户可以在3分钟内体验一个完整的IoT场景，包括数据写入和查询分析。</p><p>&nbsp;</p><p>目前，YMatrix已经获得了从创业公司到大型企业的认可，其中有超过万亿市值的行业龙头企业，包括宁德时代、比亚迪等，以及世界500强企业，包括小米、三一重工等。</p><p>&nbsp;</p><p>“后续，YMatrix会在已经存在海量需求的时序场景深耕，尝试替代传统数据库和专用类产品”，创始人姚延栋介绍，“数据量大、指标量多的车联网、智能制造、智慧能源、智慧城市、智慧园区、智慧医疗等场景会是重要方向。这些场景所产生的业务需求，将最大化体现超融合产品的价值”。</p>",
    "publish_time": "2022-10-28 15:11:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "基于云原生向量数据库Milvus的云平台设计实践",
    "url": "https://www.infoq.cn/article/ulloKY4sMiy1pizsuLaa",
    "summary": "<p>本文整理自 Zilliz 合伙人、工程总监\\LF AI &amp; Data 基金会技术咨询委员成员栾小凡在<a href=\"https://dive.infoq.cn/2022/beijing\"> DIVE 全球基础软件创新大会 2022 </a>\"的演讲分享，主题为“<a href=\"https://dive.infoq.cn/2022/beijing\">基于云原生向量数据库 Milvus 的云平台设计实践</a>\"”。</p><p></p><p>以下为整理内容。</p><p></p><h3>什么是向量数据库</h3><p></p><p></p><p>在现实生活中非结构化数据的体量变得越来越多，所谓结构化数据指的是像音频、视频、图片，包括用户信息、分子式、时序数据，地理位置数据等，这些数据相比传统的结构化数据更贴合人的需求，它的描述能力更强，同时处理难度也更高。根据 IDC 的调查显示，未来 80% 以上的数据可能都是非结构化数据。但目前非结构化数据并没有被很好地利用起来。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5f/5f7ce915e5f154b3db7104f8645fad5a.png\" /></p><p></p><p>传统上非结构化数据往往都是通过 AI 去处理，各种各样的非结构化数据通过深度学习模型转化成 vector Embedding，即一组高维的稠密的数据，这组数据通过他们最近邻的关系，就可以演化出一些新的知识或者想法。</p><p></p><p>随着纬度变得越来越高，向量表达原始数据的能力就会变得越来越强。当然，维度无限的变大，也会造成很多处理上的困难：第一个困难是高维空间下，数据通常更加的稀疏；第二个问题是高维数据的计算量会比较大；第三个问题是维度高了，传统的数据库不再有效。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9e/9e841a134c02bf14941c57c2fee6ea5f.png\" /></p><p></p><p>所以在这个基础上，我们演化出了所谓的 Vector Index，帮助你快速做高维数据处理的算法，常见的算法有以下几种。</p><p></p><p>第一种 Hashing-based，它的思路很简单，找到一组哈希函数，哈希高维空间里的一些点，那个值依然能表示出它的近邻关系，用这个哈希函数把这个空间分成很多份，在查询的时候，根据要查的数据先做一个哈希，找到对应的桶里面去，计算量就可以大大减少。</p><p></p><p>第二种 Tree partitioning based，它基于解释空间划分的一个思想，按照不同的纬度把空间进行多次划分，最终做成一个树结构。</p><p></p><p>第三种 IVF，它本质上就是做一个聚类，然后在这个聚类当中找到每个聚类中间点，查询的时候去跟这些中间点做比较，距离比较近的就认为可能有最近邻的数据，只去搜索其中的一部分数据。</p><p></p><p>第四种 Graph based index，它的实现方式是构建近邻图，在高维空间下构建这张图的时候，通过一种算法去找到一些最近邻，在查询的过程中，从图上任意一个点出发，不停地通过最近邻找到最近的节点，发现周围没有更优解了，它就是局部最优，如果扩散的节点数足够多，最终召回率相对比较高。这种图结构索引相对执行速度比较快，但占有内存相对会大一些。</p><p></p><p>前两种做法它都存在一个比较大的问题，就是召回精度不够，随着纬度变大，召回精度可能会变得越来越低，现在在工业中主要是采用的后两种做法。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/29/299228922a4f38b05002e7365c6c722d.png\" /></p><p></p><p>这些向量都在解决怎么去索引高维数据的问题，但是没有解决一个很核心的问题：如果数据量变得很大，内存会放不下，查询性能也达不到预期。</p><p></p><p>所以我们做了向量数据库去索引并存储 Vector embedding，让你能够去做比较快的相似查询，它要实现的功能主要有几个：第一个是管理非结构化数据，支持 CRUD、导入导出、Backup、Snapshot；同时作为一个数据库，我认为现阶段要有很高的拓展性，同时又得有可用性；当然还有持久化能力，要保证用户写入的数据不丢，这个也是传统的这个向量索引所不具备的；随着用户对实时性要求的增高，Data freshness 也变得很重要；最后是易用性。</p><p></p><h3>云原生数据库设计实践</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fc/fc3737346e907e12fd9cd4bce905137f.png\" /></p><p></p><p>Vector database 到底是什么？接下来聊一聊，我们是怎么做<a href=\"https://www.infoq.cn/topic/CloudNative\">云原生</a>\"数据库的。这张图是 Milvus 的常见场景，最左端是一些非结构化数据，通过各种各样的模型或框架转换转换到高维的向量空间里面，然后对高维空间里的这些数据构建索引，去查询对应的图片或者文本，而多模态的查询取决于模型本身是不是有这个能力支持。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9f/9f8a75cb22b5506f937e6fac661680ae.png\" /></p><p></p><p></p><h4>这个系统有哪些要点？</h4><p></p><p></p><p>一、Data freshness versus Efficiency，数据的可见性和查询的效率之间会存在冲突，两者难以兼得。怎么去解决这个问题？我们引入了批流一体化，对于 Data freshness 我们用流式数据去解决，它可以提供实时的查询能力；对于 Efficiency 我们用批式插入的方式，导入的数据会写在对象存储上，我们会对它构建索引或者提供服务。如果流数据多了，我们会动态转化为批式方式，从而保证效率。</p><p></p><p>二、Performance versus Accuracy，所有高维度的查询不能做到百分之百的精确，除非去做暴力检索，比如我要 Top100 的结果，可能最终只搜出来 95 个。但是本质上，有一个通过 Performance 去换查询性能的逻辑，如果 BFS 每次读的点更多，可能相对精确度就会更高。我们通过 Tunable 来解决这个冲突，给用户提供不同的索引类型，也提供了很多查询的参数，让用户可以基于这些查询参数自己去做 Performance 与 Accuracy 之间的转化。</p><p></p><p>三、lteration efficiency versus Runtime efficiency，就是迭代效率和执行效率，我们有一个权衡，所有分布式这一层用 Go 去写，所有底层的执行引擎用 C++ 去写。大家一看应该就会清楚，Go 更偏向于系统的迭代效率，而 C++ 更偏向于系统的执行效率。</p><p></p><p>四、Scale versus Easy to maintain，很多人看来这个并不是权衡，但是我们发现 80% 易于维护的开源产品扩展性就有很大的问题，那么相反扩展性做得比较好的系统，它的维护成本都会比较高，我们的解决办法是拥抱云原生，后面会进一步介绍。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/35/352af8951446c6677ae6b537cec4b2ce.png\" /></p><p></p><p>左边这张图是我们系统的框架图，我们是个比较复杂的系统，上面有八种不同的节点，Coordinator 是传统系统里的 Master 角色，做一些管理逻辑，node 主要是执行不同的操作。底层还有三种依赖，一种是做流式存储的，一种是做对象存储的，还有一种是做元数据存储的，有了这三种依赖之后，整个 Milvus 就可以完全做到无状态，很大的好处就是它可以很容易的去跟 Kubernetes 结合，可以很快做动态的扩缩容，弹性相对较好，这个也是我们认为这是一个云原生系统的原因。相对 MicroService 服务模式，另外的一个好处是可以按需做扩容。</p><p></p><p>右边这张图是以日志为核心构建的一个系统，我们并没有采用现在数据库当中比较主流的同步协议，而是用这个 Pulsar 或者 Kafka 作为日志的存储，最核心的原因是减少系统的复杂度。因为我们作为一个 AI 系统，对一致性的要求并不是特别的高，写入链路的延迟也并不是特别的高，Pulsar 和 Kafka 已经可以很好地满足我们的需求了。</p><p></p><p>这是整个系统的大图。最左侧有一个 Proxy 作为代理节点，同时支持 restful 和 gRPC 两种协议。根据不同的数据类型，比如在执行 Query 的时候，会把请求发到 Query node，在执行写入的时候，会先把数据写到 Log Sequence 里，Log Sequence 会被 Data node 和 Query node 订阅，Query node 负责查询，DataNode 负责流批的转化，把数据转化成一个更大的批式数据，把它放到 S3 上去，Index node 负责把批式数据转化成索引文件，再 Load 回这个 Query node 来提供历史数据的查询能力，以提升整体效率。</p><p></p><p>在资源调配时，我们遵循了几个原则：第一个是 Pooling，尽可能做池化，为未来变成一个更大的系统做一些铺垫；第二是按照功能去做组件的切分，跟传统模式不同，我们把系统分成了读写和索引几种不同的节点，因为系统里对读写还有索引的要求是截然不同的；第三是可以针对不同的类型按需扩缩容。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e3/e3decfc5a9a4816a4ff4d20cdf2f2382.png\" /></p><p></p><p>Milvus 的引擎层用 C++ 写的，中间通过 CGO 对接 Quary 节点和 Index 节点、Data 节点，它里面大概分成两个部分，一是标量，一是向量。向量的引擎叫 Knowhere，里面支持像 FAISS、HNSW、ANNOY 这种主流的向量索引，当然我们也做了大量的改造和性能上的调整。标量存储原始的数据，同时还可以对它构建倒排索引，帮助用户比较快的去做标量的过滤。在这之上有一个 Parser 解析用户的查询，把它转化成 LogicalPlan，再通过 Optimizer 转化成 PhysicalPlan 做具体的执行。</p><p></p><p>通常的查询，用户一般都是同时去查标量和向量，标量承担过滤的作用，向量做检索的任务。在最底层我们也对硬件做了很多封装，包括我们现在可以支持 X86，正在做 GPU 的支持，未来也会针对异构算力去做更多的支持。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ab/abcaf229b6ee8751b6ca931b74e010f9.png\" /></p><p></p><p>这么复杂的系统，除了开发上的挑战以外，测试是一件更加困难的事，我们遵循的测试原则叫做：Break Fast, Test In Piece，Quick Discovery, Fix Agilely，也就是希望在日常的过程中尽可能多的对它造成一些破坏和测试，尽可能把每个模块分开去测，在遇到问题的时候能够快速发现，然后在版本发布之前提前修复，而不是把问题堆到线上。</p><p></p><p>因此，测试流程也分成了以下几大块。</p><p></p><p>第一块是日常测试，所有的代码在提交之前，有比较完整的单元测试和这个集成测试，每天晚上做回归测试，通常情况下百分之八九十的代码问题可以在这个过程中发现。去年我们把单元测试覆盖率提升到了 85，发现了很多很多的问题。我们计划再进一步提升到 90% 以上；</p><p></p><p>第二块是在发布的时候去做的，包括压力测试、混沌测试。右图是我们混沌测试的框架，不仅仅去做我们自己组件的测试，也做了很多依赖的测试。这其实帮我们发现了很多故障以后恢复不了的问题。过去基本上是发版本的时候会做基准测试，但我们发现如果不持续做，到发版本的时候性能基本上都会有一些回退。所以我们最近很重要的一个任务就是去构建长期执行的基准测试，可以及时发现到底是哪个版本引入的问题。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6b/6babd58863d65effc1259123b9cd7cc6.png\" /></p><p></p><p>接下来的测试包含插件引擎测试，就是对包括向量索引、依赖的存储之类的底层去做一些单独的测试，以及模糊测试和基于参数的测试，因为当系统发展到一个阶段以后，传统的测试很难轻易对它造成破坏，可能引入一些随机测试会比较好地解决这个问题。</p><p></p><p>发布版本以后，用户很自然会问这么复杂的系统，怎么去部署、运维呢？我们的原则是 Cloud As first citizen，就是以云作为第一优先级。这一原则有很多要点。</p><p></p><p>1. 怎么去发行它，我们很依赖 Kubernetes 的能力，因为整个系统本身已经非常复杂，而且又依赖了很多不同的角色，尝试过线下部署发现很难实现；</p><p></p><p>2. 系统要足够的健壮，未来我们做主备集群、数据同步，可能整个可用性相对更高一些；</p><p></p><p>3. 弹性，依赖于 Milvus 侧没有任何的状态，所以可以比较快地扩缩容；</p><p></p><p>4. 交付，在交付的过程中要能比较快速地执行完成；</p><p></p><p>5. 诊断，我们花了很多精力去做可视化的工具，包括整个监控系统，把全链路的一些比较重要的指标完整地去梳理了一遍，希望能够更多地帮助大家做 Milvus 性能的观测和排查。</p><p></p><h3>向量数据库即服务</h3><p></p><p>为什么我们要做这个服务？第一因素是因为我们是一家商业公司。我们除了做开源以外，也得把开源的能力变现。我们认为 Cloud service 一定是一条很长久的路，核心的原因是用户在使用一个产品的时候，成本会分为三个部分：第一个叫 Human labor cost，就是运维人员和开发人员的成本；第二叫 machine runtime cost，就是运行需要多少机器；第三个叫 opportunity cost，可能大部分人都没有很好地考虑机会成本。</p><p></p><p>我们处理 Multi cloud 的一个原则是说首先会选择一些云中立的一些协议，这样无论在哪个云上，你都可以找到对应的实现；第二是如果找不到很好的云中立的协议，我们会选择云中立的供应商；第三个是为云服务做一些定制化。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/39/39079e3da6eaf7feec93e6a00bb41475.png\" /></p><p></p><p>整个云服务架构最上面是暴露给用户使用的 Web Console 和 OpenAPI，中间通过一层 Getway 隔离前端和后端。后端分成四层架构：第一层叫做 Global Zone，是每一套 Cloud service，比如中国可能一套、美国可能一套，每套 Cloud service 里维护类似于账户、用户信息密码，还包括一些通知系统、配置系统的信息，可能不需要去做这个跨云跨机房的容灾部署；第二层叫做 Agent Zone，它其实是在每个 Avaliable Zone 里面都会有一套，主要做一些真正的管控，比如执行工作流启动服务起来、任务的调度、动态的扩缩容、监控；第三层叫做 Tenant Zone ，按照租户去做一个隔离，里面有一些类似于日账、日志采集、账单的逻辑；第四层叫做 Cloud &nbsp;Provider，包含了一些 IaaS 和 PaaS 服务。</p><p></p><p>最后简单讲讲我们的一些使用场景。</p><p></p><p>第一个是做搜索和推荐的场景，用户是东南亚非常大的一个电商，他们主要是用 Milvus 来做基于语义的推荐，有些单词一眼看上去不像是近义词，但通过模型向量化分析会发现它们是相近的，比如 bread 和 toast。</p><p></p><p>第二个是 Chatbots，是国内一个比较知名的银行在用，传统意义上的 Chatbots 基本上都是关键词的召回，有的时候如果用户的问题没有那么清晰，或者说很长有很多上下文的时候，那么这种关键词检索可能就不能特别好的帮助用户去检索到核心的信息，因此他们做了多路召回，用 Milvus 做语义理解，然后进行关键词的检索，效果还是非常不错的。</p><p></p><p>第三个是以图搜图的服务，先是在图片上找到具体的物体，再做向量化把它放到 Milvus 里面，然后再去对它做一些检索。像图片检索、声文检索、指纹检索，都是 Milvus 比较常见的一些应用场景。</p><p></p><p>相关阅读：</p><p></p><p><a href=\"https://xie.infoq.cn/article/dd26d0ed1efbd24b2e51f47a8\">Milvus 2.1 版本更新 - 简单可信赖、性能持续提升</a>\"</p><p></p><p><a href=\"https://xie.infoq.cn/article/3e779038d570e65b9a19bb3f5\">前所未有的 Milvus 源码架构解析</a>\"</p>",
    "publish_time": "2022-10-28 15:29:43",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "富士通“量子启发技术”，开始应用于丰田汽车生产",
    "url": "https://www.infoq.cn/article/mZ5DDq3e2ZhFUoLjJ6WY",
    "summary": "<p>近日，富士通有限公司和丰田系统公司宣布在丰田汽车公司的&nbsp;Tsutsumi 工厂推出新的<a href=\"https://www.infoq.cn/article/C44BsTWxez34dGFmvDWs\">汽车生产</a>\"指导系统，该系统利用富士通的量子启发式 Digital Annealer 技术，目的是通过提供优化组合，提高企业的问题解决能力，帮助汽车生产系统更快地适应不断变化的市场环境。</p><p>&nbsp;</p><p>富士通的 Digital Annealer 是系统制造商所说的“量子启发技术”。虽然它应该受到量子计算元素的启发，例如叠加、隧道和纠缠，但它并不是真正的量子计算机。该处理技术由富士通基于其长期从事的<a href=\"https://www.infoq.cn/theme/150\">制造行业</a>\"研究开发，利用约束处理技术以方程和不等式表示复杂的业务约束，从而实现高效的解搜索。</p><p>&nbsp;</p><p>据富士通表示，Digital Annealer 的芯片“能够快速执行并行、实时优化计算”，是寻找受限问题解决方案的硬件加速器。更简单地说，它是 HPC（高性能计算） 驱动服务器中的 ASIC（专用集成电路），旨在处理实际<a href=\"https://www.infoq.cn/article/E2V7y9AVabAGjZWTNSG2\">量子计算机</a>\"需要在一天内大量解决的各种优化问题。</p><p>&nbsp;</p><p>从具体实践来看，此前丰田系统公司和富士通曾在 2020 年的一个项目中使用该技术，优化<a href=\"https://www.infoq.cn/article/8WZkpiIXVklS84sGowMW\">供应链</a>\"和物流网络运营。Digital Annealer 可以为用户提供强大的组合优化问题解决能力，以应对传统硬件难以应对的挑战，这对于支持汽车生产至关重要。</p><p>&nbsp;</p><p>富士通 Digital Annealer 技术的应用场景之一是实时寻路。直观而言，一方面，A 点和 B 点之间的最快路径是最短路径，但是如果有多辆车试图从同一条路线穿过工厂，加上其他的限制条件，则可能导致路面拥堵。另一方面，即使传统计算上运行的软件可以确定装配线上车辆和组件的最佳顺序和时间，但富士通声称 Digital Annealer 技术可以更快、更有效地识别最佳组合。</p><p>&nbsp;</p><p>这种新系统是来自第三代Digital Annealer 以来可用的专有技术——该处理技术是由富士通研究通过长期从事制造行业的经验而总结的，它可以通过利用约束处理技术以方程和不等式表示复杂的业务约束，实现高效和高速的解决方案搜索。</p><p>&nbsp;</p><p>丰田看到了该技术的诸多优势，比如，可以优化汽车生产线，快速响应生产波动，以适应不断变化的市场环境，同时减少员工的工作量。同时通过为该项目开发的新技术，丰田系统旨在通过支持丰田汽车公司基于IT平台的业务转型，实现一个安全、可靠和舒适的出行社会。</p><p>&nbsp;</p><p>丰田表示，富士通的 Digital Anneale 技术只是该公司计划通过<a href=\"https://www.infoq.cn/article/C44BsTWxez34dGFmvDWs\">云服务</a>\"提供的几项 AI/ML、HPC 和量子模拟服务之一。从 2022 年 10 月起，富士通将在日本商业推出“富士通计算即服务（下称 CaaS）”服务组合，该平台建立在与Fugaku 超级计算机相同的架构之上，目的是为普通商业用户提供 Digital Annealer 等先进计算技术和软件技术，可以让其像AI一样降低访问高性能计算资源。</p><p>&nbsp;</p><p>此外，针对日本之外的全球市场，富士通计划从 2023 年开始推出这项服务。</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.hpcwire.com/off-the-wire/toyota-systems-leverages-fujitsus-quantum-inspired-digital-annealer/\">https://www.hpcwire.com/off-the-wire/toyota-systems-leverages-fujitsus-quantum-inspired-digital-annealer/</a>\"</p>",
    "publish_time": "2022-10-28 16:04:33",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "数字政府行业趋势洞察报告(2022年)解读",
    "url": "https://www.infoq.cn/article/826375c56a45aa5cf7502702f",
    "summary": "<p></p><blockquote>在今年举办的“2022数字化转型发展高峰论坛”上，《数字政府行业趋势洞察报告（2022年）》和《2022数字政府产业图谱》正式发布，报告聚焦我国数字政府产业发展各环节，绘制产业全景，同时展望数字政府未来发展趋势，旨在为我国数字政府的规划、建设、发展等环节提供参考，下文将对该报告核心内容进行解读。（文末提供报告下载方式说明）</blockquote><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/30/3035fec3494dd920af507642695d368c.jpeg\" /></p><p></p><h3>报告核心内容</h3><p></p><p></p><h4>1、数字政府的内涵</h4><p></p><p>数字政府是指借助互联网连通性，运用云计算、大数据、人工智能、区块链等新一代信息技术，打造政府数字化平台，创新政府业务模式，重塑政府管理、业务和组织架构，推进政府办公、公共服务、社会治理向数字化、网络化、智能化发展的新型政府运行模式。</p><p>&nbsp;</p><p></p><h4>2、数字政府建设是推进国家治理体系现代化的有力支撑</h4><p></p><p>在2019年党的十九届四中全会、2020年党的十九届五中全会以及2021年“十四五”规划纲要中，分别提出了推进数字政府建设、加强数字政府建设以及加快推进数字政府建设的要求，以此来推动国家治理现代化、提升国家治理效能。2022年6月国务院印发《关于加强数字政府建设的指导意见》，提出到2025年和2035年数字政府体系建设的两阶段工作目标，明确了数字政府建设的七方面重点任务，这一系列重大部署，将数字政府提升到了整个国家的战略高度。</p><p>&nbsp;</p><p>究其原因，从外部环境看，国际经济、科技、政治、文化等格局发生深刻调整，世界进入动荡变革期，要求我国以更加开放的姿态参与全球数字治理，协同推动数字经济、数字社会、数字政府建设。从国内环境看，在常态化疫情防控背景下，健康码、公共服务、移动政务办公需求激增，政府工作模式和社会运行模式加快变革，对各级政府的数字化建设和应急管理能力带来综合性考验。数字政府的建设使得政府治理更加科学化、高效化、透明化，从而为实现国家治理现代化提供有力支撑。</p><p></p><p></p><h4>3、我国数字政府产业增长势头强劲</h4><p></p><p>从地方推进看，截至2022年6月，我国31个省（自治区、直辖市）和新疆生产建设兵团，超过五成地区已经发布了专门的数字政府战略规划文件，另有若干地区在数字经济和智慧城市等政策中提及数字政府建设；从市场规模看，我国数字政府市场规模保持高速增长，以政务云为例，2021年，我国政务云市场规模达到802.6亿元，预计2023年市场规模将达到1203.9亿元。未来，政务数据、软件和服务市场份额将会持续扩大；</p><p><img src=\"https://static001.geekbang.org/infoq/fe/fe72bc9fea47c8be8a48af08f6d39eb1.png\" /></p><p></p><p>从产业格局看，数字政府具有覆盖面广、服务用户多、应用场景丰富、稳定性要求高等特征，政府对供应商所提供的满足“智能集约、数据共享、业务协同”需求的整体解决方案与服务能力需求迫切。未来，数字政府行业生态将从过去垂直、分化的产业链分工演进到集约、共赢的生态共同体，产业链上下游的紧密融合成为趋势。</p><p></p><h4>4、《2022数字政府产业图谱》描绘数字政府产业链上下游全景</h4><p></p><p>数字政府产业图谱重点围绕政务云、智慧中台、行业应用、城市大脑、安全等核心领域，绘制覆盖产业链上下游关键环节的服务提供商图谱，助力数字政府基础设施建设和场景应用落地。</p><p><img src=\"https://static001.geekbang.org/infoq/27/27bd628d63c1e07fe3a857b89d38d415.png\" /></p><p></p><h4>5、八大趋势展望数字政府新范式</h4><p></p><p>“十四五”时期，我国数字政府建设将进入快车道，预计整体将呈现出以下八大发展趋势。</p><p>趋势一、更注重数字化管理和数字化素养。基于当前数字政府管理机制还存在和新兴技术融合不充分的问题，未来需要从组织架构、标准规范、绩效考核等多角度进行机制创新、强化数字化管理，同时需要培养一大批具备数字思维、数字技能和数字素养的人才队伍，为全面增强数字政府建设效能提供人才支撑和储备。趋势二、更注重智能集约的数字化平台建设。基于当前各政务云资源利用不均衡，数据未有效打通及跨域协同仍存在问题的现状，一体化智能化将成为未来政务云建设与运营的主旋律，满足政务云统一规划、统一调度、统一安全和统一运营的需求，并借助云原生、大数据、人工智能、区块链等技术充分释放数据价值。同时共性应用支撑平台也将成为数字政府基础设施的重要组成部分。趋势三、更注重数据赋能驱动政府治理能力提升。在数据已成为我国经济发展的基础性、战略性资源的前提下，数字政府的建设将越来越重视数据价值的挖掘，将数据协同互通，打破数据孤岛现象，通过构建分类分级的数据授权机制，以应用场景为牵引，推动数据精准高效共享，提升政府治理能力。趋势四、更注重需求牵引的业务和运营模式创新。数字政府建设将聚焦企业和群众反映强烈的办事难、办事慢、办事繁等问题，进行流程优化和业务创新，推广如 “一网通办”、“一网统管”、“一网协同”等创新模式，数字政府的建设重心也将更加强调服务体验和场景化主题式应用，建立伴随数字政府全生命周期的管理运营体系。趋势五、更注重以城市大脑为抓手的智慧城市建设。后疫情时代部分地区的城市大脑及配套设施在疫情防控、政务服务、交通治理、社会管理、健康码等多领域发挥了重要作用，未来城市大脑建设将实现基于一体化的智能集约平台，同时随着城市大脑建设逐步细化，也将逐步向县域/新区下沉，并向乡级/镇街延伸。趋势六、更注重以数字技术提升基层治理精细化水平。鉴于新时代社会发展特点，基层社会治理也将呈现出新的发展趋势。一是通过云数底座的建立为基层社会治理数字化提供基础。二是通过规范数据采集建立基层治理数据库，实现市、区、街道多级数据互联互通。三是重视围绕基层不同人群需求的公共服务创新。趋势七、更注重构建全方位安全保障体系。一方面需要建立完善的安全管理体系、安全监管机制等，另一方面需要从IT基础设施、数据安全、应用安全等多维度，建立健全安全态势分析机制，并加强敏感数据保护。此外，随着信创产品不断成熟应用，将会充分考虑构建信创基础设施，加快发展重要领域核心关键技术。趋势八、更注重以标准化建设推动整体价值提升。数字政府建设探索初期，各地在实际建设过程中逐渐出现了信息系统不兼容、标准规范不一致、数据共享不通畅、业务协同不顺利等方面的问题，对于后续的进一步发展造成了较大制约。随着政府数字化转型步伐加快，标准化工作将成为了数字政府建设中不可或缺的基础支撑，是实现高效性、集约性、协同性的重要抓手。</p><p></p><p>报告编写单位</p><p>中国信息通信研究院云计算与大数据研究所、阿里云计算有限公司、腾讯云计算（北京）有限责任公司、华为云计算技术有限公司、浪潮云信息技术股份公司、联通数字科技有限公司、浪潮软件股份有限公司、武汉烽火信息集成技术有限公司、中国联通智能城市研究院、中兴通讯股份有限公司、科大讯飞股份有限公司、上海爱数信息技术股份有限公司、深圳市明源云科技有限公司。</p><p>&nbsp;</p><p>版权声明：本报告版权属于云计算开源产业联盟，并受法律保护。转载、摘编或利用其它方式使用本白皮书文字或者观点的，应注明“来源：云计算开源产业联盟”。违反上述声明者，本联盟将追究其相关法律责任。</p><p></p><p>如何获取《数字政府行业趋势洞察报告（2022年）》或《2022数字政府产业图谱》？</p><p>可通过微信搜索“可信数字化”公众号进行关注，在消息中回复“数字政府洞察报告”或“数字政府图谱”即可获得对应的资料下载链接。</p><p></p><p>数字政府报告及咨询联系人</p><p>中国信通院面向需求侧，聚焦数字政府建设水平和应用价值，形成IOMM-G数字政府基础设施水平和运营效果成熟度模型，为衡量数字政府案例成熟度提供依据；面向供给侧聚焦政务云、智慧中台、政务协同、数字党建、城市大脑等领域开展标准和评价。同时，相关评估的落地和推广充分发挥了数字政府案例的示范标杆作用，有力地推动了数字政府全面提质增效。</p><p>&nbsp;</p><p>有关本报告内容及数字政府相关的标准制定、咨询、评估，可联系：</p><p>吴老师&nbsp; wuning@caict.ac.cn&nbsp; 18813030639</p>",
    "publish_time": "2022-10-28 16:17:29",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "借力飞桨，电气设计师两周开发出工程规范AI搜索引擎，效率提升60倍",
    "url": "https://www.infoq.cn/article/8IfdDTb1YpasRCc394WV",
    "summary": "<p>泥沙钢筋是支撑建筑的基础原料，建筑工程规范则是建筑工程设计的基本依据。在建筑工程行业，查询、学习和遵循建筑工程规范贯穿了整个工作流程。而这些规范超过5200本，条款有数万条之多，还有数量及其庞大的图表数据。</p><p></p><p>面对复杂棘手的工程规范，工程设计人员只能在工程规范查询系统里通过关键字词进行查询，但现有的查询系统精准度与速度有限，有时甚至查询3-5次也找不到想要的规范条款，大大影响设计工作效率和质量。</p><p></p><p>尹昊，宁夏建筑设计研究院（装饰设计分院）的一名建筑电气工程师，日常工作中时时要和这些工程规范打交道。深感“查询之痛”的他，带着问题和百度飞桨相遇之后便萌生了新想法：为何不使用人工智能自然语言处理技术（NLP），打造一款能精准高效查询的工程规范检索系统？</p><p></p><p>凭借飞桨自然语言处理模型库PaddleNLP，尹昊在两周之内就成功开发出了一个工程规范AI搜索引擎“寻规”，实现了查询准确度和速度的大幅提升，查询效率相比以往提升了最高60倍，目前已经在宁夏建筑设计研究院铺开应用。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/1a/da/1a6574627e7df90368b30798cd47d7da.jpeg\" /></p><p></p><p>Web端“寻规”</p><p></p><h3>飞桨PaddleNLP在建筑行业的应用实践</h3><p></p><p></p><p>“我们的行业就是无规范不设计。”在建筑工程领域，从前期的调研，到立项、设计、施工，以及最终的交付和验收过程，都要严格满足建筑工程规范的相应条款。对设计环节而言，如遵循的规范与实际建筑环境并非准确匹配，将造成设计方案、图纸返工或修改等情况，严重影响工作效率。</p><p></p><p>目前，市面上可供应用的建筑工程规范查询工具并不多，查询模式基本为通过匹配关键字的方式呈现搜索结果，查询速度慢、错误率高等弊端凸显。尹昊举了一个例子：按照规范，建筑电气设计中一个插座回路最多只能接入十个插座面板，但住宅、医院、学校等不同性质的建筑可接入的插座面板数量要求并不一致；如果使用现有传统的查询工具，只能得到所有相关的结果，想要查询某类建筑的规范要求还需人工一条条筛选，耗时耗力。</p><p></p><p>精准、快速——这是尹昊想要打造的新工程规范搜索引擎最关键的两个特点。为此，他开始广泛关注AI相关的技术和平台，尝试利用AI实现搜索引擎的部分功能。刚了解到百度深度学习产业级开源开放平台飞桨时，尹昊就搜索了PaddleNLP相关的场景项目实例，这与自己想要短周期开发、快速实现部署的目标不谋而合。</p><p></p><p>利用工作闲暇之余的时间，尹昊开始利用飞桨进行工程规范搜索引擎的研发。阅读了飞桨相关开发文档，和飞桨PaddleNLP团队的工程师进行多番交流之后，尹昊采用飞桨NLP流水线系统PaddleNLP Pipelines，在两周内就完成了该搜索引擎的开发与上线。Pipelines中集成了百度ERNIE语义理解技术与RocketQA开放域问答技术，并提供模型压缩、高性能部署能力，保障了“寻规”的查询精度与效率。</p><p></p><p>“使用飞桨建系统的过程就像搭积木一样，Pipelines预置的组件涵盖了文档解析、数据处理、模型组网、预测部署、Web服务、UI界面等全流程系统功能，需要用哪个子功能模块和服务直接调用就可以，很好地解决了‘寻规’从搭建到部署落地的实际问题。”尹昊坦言，使用飞桨所训练出的语义模型能够提供更优质的结果，还简化了传统问答系统的级联架构和特征工程方案，使系统架构的复杂性大大降低。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/5b/18/5b2d8b40d1c01ff0a69d64d58714ca18.png\" /></p><p></p><p>微信小程序端“寻规”</p><p></p><h3>工程规范查询效率提升60倍</h3><p></p><p></p><p>目前，“寻规”已经在PC端、微信小程序端以及工业设计专业软件Auto CAD端上线。这款基于飞桨预训练中文语义模型成功构建的工程规范AI检索系统，相比传统查询工具的搜索结果错误率高的问题，针对80%的规范查询需求只要1次查询就能精确命中用户查询意图，并返回查询条款的结果；同时，平均查询到一条规范条款的时间大幅缩短到5秒左右，使规范查询效率提升了最高60倍。</p><p></p><p>寻规网址：<a href=\"https://www.xungui365.com/\">https://www.xungui365.com</a>\"</p><p></p><p>另一方面，“寻规”在AutoCAD端的上线，是建筑工程规范查询功能首次支持专业工业软件中快捷调用，它相当于一个能够在CAD中调出的小插件，“从行业设计师的角度来看，使用体验和效率都会有明显提升。”</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/f2/73/f2575b419c4a9ca26b19b5a0d35b0573.png\" /></p><p></p><p>AutoCAD端“寻规”</p><p></p><p>“在宁夏建筑设计研究院里推广使用之后也收到了很多建议，大家觉得点子很新，希望在查询返回结果的阅读体验上能有更多优化。”同事们热烈的反馈之外，尹昊更欣喜地看到了“寻规”为他们实际工作效率和质量所带来的提升。</p><p></p><p>在一个建筑内外装饰改造工程中，设计人员使用“寻规”后，原本等待业主了解规范条款要求、审图专家对规范可行性回复的时间，从7天缩减至1天；设计出图后按照规范要求修改图纸的时间，从5天变为一次性通过审图；而在施工阶段，参与建筑工程的各方通过“寻规”对规范条款进行同步检索与理解，助力施工平稳高效完成，原本需要2到3周的质量验收周期，也一次性就通过了质检和消防部门的验收。“寻规”为这一改造工程带来的整体效率提升，也让业主避免了即将来临的冬季停工期影响，提前完成了年度业务指标。</p><p></p><p>尹昊的脚步并未停歇。除了持续迭代优化“寻规”之外，他还计划着利用飞桨视觉方向的模型技术辅助工程设计制图。</p><p></p><p>正如最近十分火爆的AI画画一样，在工程设计的专业领域，AI辅助制图的强大潜力也有待挖掘——“给到基础底图，AI就能画出具体的图纸，区分出不同功能的房间后进行电气的布置，让设计师不需要再用鼠标一笔笔画图。”在尹昊看来，飞桨与建筑工程领域的结合还有无限的想象空间和实现可能。</p>",
    "publish_time": "2022-10-28 16:46:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "对话甲骨文公司副总裁谢鹏博士：全面数智化大背景下，云和数据库该怎样融合发展？",
    "url": "https://www.infoq.cn/article/Ago0m1CV4eKeCYHDD6k2",
    "summary": "<p>近日，在2022年甲骨文云全球大会（Oracle CloudWorld 2022）上，甲骨文公司宣布推出 MySQL HeatWave Lakehouse，它可基于<a href=\"https://www.infoq.cn/article/pDQ7VpkyM6HJRltYB6FH\">亚马逊云科技</a>\" (Amazon Web Services, AWS) 运行。MySQL HeatWave Lakehouse 是 MySQL HeatWave 产品组合的新产品，能够将事务处理、分析、机器学习和基于机器学习的自动化结合在单一 MySQL 数据库中。</p><p></p><p>MySQL HeatWave Lakehouse 采用大规模并行横向扩展 MySQL HeatWave 架构，客户可以通过单个查询在 MySQL 数据库中查询事务处理数据，并使用标准 MySQL 语法将其与对象存储中的数据组合。</p><p></p><p>甲骨文公司首席企业架构师 Edward Screven 表示：“MySQL HeatWave 是多年研究和开发的成果，我们正在将其转化为突破性创新，以应对MySQL 客户面临的更大挑战。事实上，MySQL HeatWave Lakehouse是我们今年就 <a href=\"https://www.infoq.cn/article/2a4wyAUCqEjD2ilr0s41\">MySQL HeatWave</a>\" 的第三个重大发布。存储在数据库之外的数据急剧增长，借助 MySQL HeatWave Lakehouse，客户可以利用 HeatWave 在各方面的优势，处理驻留在对象存储中的数据。MySQL HeatWave 目前在多个云平台上提供一项集成服务，用于事务处理、跨数据仓库和数据湖的分析以及无需数据仓库技术 (ETL) 的机器学习。</p><p></p><p>在这之前，甲骨文公司发布了可基于亚马逊云科技 (AWS) 运行的 <a href=\"https://www.oracle.com/mysql/\">MySQL HeatWave</a>\"，以支持开放式的多云基础架构战略。MySQL HeatWave能够在单一MySQL数据库中整合联机事务处理（OLTP）、分析、机器学习和基于机器学习的自动化功能。现在，AWS 用户可以在一个服务中运行事务处理、分析和机器学习工作负载，而无需在不同的数据库之间进行耗时的 ETL 复制，比如在用于事务处理的 Amazon Aurora 和用于分析的 Amazon Redshift 之间，或在用于分析的基于 AWS 的 Snowflake 以及用于机器学习的 SageMaker 之间进行 ETL 复制。</p><p></p><p>借此消息宣布之际，InfoQ有幸采访到了甲骨文公司副总裁及中国区技术顾问总经理谢鹏博士，请他来和我们聊一聊当下企业全面上云时代，有关云和数据库融合发展的一些话题。</p><p></p><p></p><blockquote>InfoQ：现在数据库上云已经成为大家普遍的共识，据Gartner预测，到2023年全球差不多有3/4数据库都会跑在云上，Oracle该如何应对这一趋势？</blockquote><p></p><p></p><p>谢鹏博士：从“单机型数据库”这个词来讲，大家表达的意思都差不多。无论叫单机<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247576871&amp;idx=1&amp;sn=7029d7289b942727fef06c2fd1e60fc4&amp;chksm=fbeb14e8cc9c9dfe89ad28325a948d1fcc24258f698f7f48370280cd55c3b3e6eb896c4a6fd5&amp;scene=27#wechat_redirect\">数据库</a>\"，还是说叫集中式数据库，实际上也是差不多，只是略有差别。我们可以看到，<a href=\"https://qcon.infoq.cn/2022/beijing/track/1295\">企业全面上云</a>\"的确是大势所趋。无论是从应用层到数据库，还是到基础设施，全面上云都是一个非常重要的推动因素、变革因素，在每一个层面都不能忽略。</p><p></p><p>从SaaS的角度来看，应用一定要跑在数据库上，不需要单独再去构建数据库。所以在这个趋势的带动下，很多应用本身就是像您讲的跑在一个单机数据库，或者跑在称之为集中式数据库上（Centralized）。这个是没有什么可选择的，因为只要选择SaaS，一定会选择云上数据库。</p><p></p><p>回到您提到的<a href=\"https://qcon.infoq.cn/2022/beijing/track/1295\">数据库上云的趋势</a>\"，无论从应用层到数据库，还是到基础设施，云计算都是一个非常重要的推动因素和变革因素。 首先，从应用层看如果是SaaS平台，其应用一定也是要部署在既定数据库上；第二是从云数据库自身来看，无疑企业级负载向云迁移推动了这个进程。但是如果我们细看一下，这个趋势也非单极和终级的趋势，做为企业的基础设施，都应是多云和混合云环境，我觉得这既是现实也会是常态。</p><p></p><p>混合云即是将公有云、私有云和本地计算统一构建到企业的IT基础架构，通过跨多个架构扩展的Kubernetes 集群实现服务的使用、管理和编排，从而企业能够构建单一、统一且高效的 IT 基础架构。混合云成为大多数商业系统合理的选择，一是公共云和私有云环境的有机结合，二是对即有IT投资的利用，三是可以满足合规、安全的需要。对数据库部署来说，混合架构也是现实及合理的选择，尤其对企业级的关键应用更是如此。Oracle可以高性价比地提供包括公有云、私有云和专属云的混合架构服务，数据库层也是如此。</p><p></p><p>在总的趋势下，还要看几个因素：</p><p></p><p>一是行业的因素，在不同的行业中趋势会不太一样。比如集中式数据库，它在Oracle内部被称之为叫做基础设施的行列，比如说电信、公共事业（包括水、电、气等等），还包括金融，同时还有制造业。在这几个行业有这几个趋势的情况下，相对来说向云数据库迁移会是审慎的，而且需要有一个成熟的阶段，相对来讲是比较慢的。如果在互联网为代表的行业，显然这个趋势是明显的，而且是在加速的。所以我觉得这是行业因素。</p><p></p><p>二是向云数据库迁移时，Workload（负载）是什么？如果你要去看事务型的处理，我觉得也要打一个问号。因为我们讲是在这个上云的趋势下，但是很多mission critical（关键型任务）并没有显现大规模迁移。但是如果要去看分析型的事务，YES！也就是OLTP和OLAP要分开去看，这是从事务的角度，但两者又是相辅相成的，有着扯不断的关联。</p><p></p><p>总体来讲，云是一个推动变革的因素，这一点是毫无疑问的。但在变革的过程中，我们也要从数据库来看行业因素，要看事务类型。</p><p></p><p>而是在整个过程中，Oracle实际上在这个趋势中，我们仍然是处于前列的位置。Oracle也在应技术和需求的趋势，在不断地变革自己。在这个变革过程中，Oracle实际上是抓住了两个数据库的引擎，也就是两个主流的数据库：Oracle DB、MySQL。此外，Oracle也在积极地去应对市场的趋势和技术的趋势。对于自身通过我们的研发投入，不断地进行变革。</p><p></p><p></p><blockquote>InfoQ：其实金融行业也算是比较偏传统的行业，但是现在很多金融企业他的<a href=\"https://qcon.infoq.cn/2022/beijing/track/1306\">数据库</a>\"也在逐渐上云。金融领域对数据库的要求是非常苛刻的，对高可用、低延迟的要求是非常高的。现在很多企业依然选择上云，他们都把核心系统迁移到了云上，是因为他们认为现在云上的数据库也变得很安全了、高可用了。对这样的趋势您是如何看待的呢？Oracle是否流失了一部分传统行业的客户？</blockquote><p></p><p></p><p>谢鹏博士：您讲的在金融行业观察到的现象，我们也注意到了，的确有这样的情况。金融行业也是我刚才讲的mission critical业务较为典型的行业之一，对高可用性，数据的强一致，有着非常高的要求，金融企业上云的态势如果从更细分业务层面去看，就会发现，上云速度比较快的是金融行业中的一些像互联网业务、渠道业务、支付业务这样的领域。但是核心业务和核心系统，相对来讲就非常审慎了。</p><p></p><p>互联网业务、渠道、会员管理等等，还有在支付方面，它们的业务性质决定了上云的迫切性和合理性。这些变革背后，是技术和需求的叠加有力地驱动了互联网金融的变革，比如说像支付，大家会知道每到不同的购物节，基本上可以说每秒要达到百万级别的交易，所以当强需求遇到对的技术，变革就水到渠成了。</p><p></p><p>但是在核心业务里面，我们要分解去看，它又呈现出不同的状态。回到Oracle，金融行业继续是Oracle非常重要的领域，许多企业也依然是<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247572156&amp;idx=1&amp;sn=fe3748c28e74a44c862ad9e984ef6aeb&amp;chksm=fbeb6373cc9cea6543455c7771b7da3dab26081099d3001da3eecdc079432c84d86b34123257&amp;scene=27#wechat_redirect\">Oracle</a>\"的重要客户。我们和客户一起会评估并选择对客户是合适的基础设施和平台，包括数据库，一样在上面提到的混合架构下考量。在其核心业务系统的这一块，我们与包括银行在内的许多金融服务企业，以及所有关键业务重要的企业都在紧密合作，而且这个合作在持续深入，已从数据库方面深入到业务连续性和安全方面。</p><p></p><p></p><blockquote>InfoQ：我们看到国内市场差不多有200多家数据库厂商，Oracle是如何看待国内市场这么多家数据库的现象？</blockquote><p></p><p></p><p>谢鹏博士：我们要稍微拉开一点看，数据库是属于IT中的基础设施的基础之一，而且是非常关键的基础，就像Database本身的含义一样。但有时候我们往往忽略对数据库认知的升级。进入数字化时代，当万物皆为数字，历史和现实都要装入数据库的背景下，无论数据和库这三个字的内涵与外延都大大拓展了，数据不仅是原来的数据，库也已不仅是存储和管理数据的集合。因此，数据库自然要被重新定义。依托自治管理（Autonomous）实现融合数据库(Converged Database) 并进一步实现融合数据平台(Converged Platform) 就是Oracle对变化万千的数据管理挑战的重新定义。</p><p></p><p>回到您刚才的问题，我觉得这么多款数据库一方面有它存在的合理性和推动力的。当进入了大数据、互联网时代以后，它产生了对数据库分布式的要求。分布式系统的要求来自于互联网对大数据存储、高并发和快响应的需求。当互联网和大数据规模急剧膨胀后，在成本上单机数据库很难承受，所以就需要分布式数据库来分担一些压力，这是一个商业的因素。一个是从市场需求，一个是从商业的因素，这两方面的推动，就产生了很多数据库投资者或者或者是有很多技术创新的想法进入了数据库投资和研发的市场。它带来的一个好处就是使不同的应用都可以找到更适合它的数据库，从这个角度看是有积极面的。</p><p></p><p>但从另一个方面看，即刚才说<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247574829&amp;idx=1&amp;sn=d234fe4fed2759a34e697a5a679203d8&amp;chksm=fbeb1ce2cc9c95f46321925247c91aa4b4e857f12b100de8b1ae4443f0d9e270a5b5b591dc10&amp;scene=27#wechat_redirect\">数据库</a>\"是最关键的基础设施之一，这个关键就体现在对高可用性和稳定有极高的要求。在这种情况下，一款数据库能否最终走向商用，才是生存下去的根本。但是如果要迈过商用这条槛，实际上对于数据库来讲，最重要的就是你能不能通过长期大量的场景验证，在高可用性和稳定性上面得到验证并有体系性的保证。 数据库百家争鸣这个局面是现实，我们也希望能够看到更优秀的数据库产品可以脱颖而出。但是大部分距离成熟化的商用，应该一段路要走。我们要去看过去关系型数据库，实际上发展都有长达五六十年的历史。如果没有这样长时间的沉淀，很难在成熟应用上得到足够的验证。</p><p></p><p></p><blockquote>InfoQ：您之前说过，数据库从研发到走向商用要经过五六十年研发的沉淀，才能最终走向商用。在没有经过很长时间沉淀的时候，这个市场上这样的现象只是一个局面。我们真正能够走向商用，还要再经过几十年的时间来验证这个事吗？我们需要多久才能看到结果？</blockquote><p></p><p></p><p>谢鹏博士：产品从研发到投入应用，并不需要几十年的周期。数据库它是在技术和应用场景的不断迭代中发展和进化的，然后再投资、再迭代，再继续成熟和发展。如果我们把产品成熟度打分是从1到5制，不是说一定达到5才可以投入应用。它要看满足不同的场景的成熟读度。而在某特定应用场景下，对数据库的要求就可以取得折中和平衡，或者说在平衡的前提下达到可用。比如，它可能在某些实时分析上做得很好，可能在这个场景中就会被有高性能实时分析需求的客户在这个应用所采用。这也是这么多数据库可以存在的原因，它有各自适合的应用场景。</p><p></p><p>谈到这里， 必须谈到的一个问题就是， 微服务架构下自带数据库是解决了不同数据库对不同场景的需求满足，但是带来了新的问题，即数据一致性无法完全由数据库保证，而得由服务调用解决数据的共享。构建数据中台的需求即由此而产生，回到了追求One data, One service。至此，我们 可以思考一下这是我们的初衷吗？</p><p></p><p></p><blockquote>InfoQ：是不是我可以理解为，这个数据库能不能商用已经成为了整个数据库市场洗牌的关键，能商用的可能会留下，不能够最终走向商用的可能被淘汰掉？</blockquote><p></p><p></p><p>谢鹏博士：这个话题就不是纯技术的话题，我们要从两个角度去看。因为我们从技术的角度，像一些开源的，它总能在开发者社区的参与下不断地去迭代出新版本；但如果从投资的角度和估值的角度去看，需要解决如何平衡开源路线和商业化，一个是精神，一个是未来。</p><p></p><p></p><blockquote>InfoQ：因为现在很多企业出海，大家想去海外淘金。目前很多企业都可以为出海业务提供服务，Oracle在这上面有没有布局呢？Oracle相对于其他的厂商有什么区别呢？我们怎么样服务中国客户？</blockquote><p></p><p></p><p>谢鹏博士：Oracle为中国的<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247566205&amp;idx=2&amp;sn=dbdd5f42e74bfe48187201718d722eea&amp;chksm=fbeb7ab2cc9cf3a44eb5502ec457499fb9ee4973aeb20263e3fe26c844224a09f172bede03e8&amp;scene=27#wechat_redirect\">出海业务</a>\"提供云服务是非常明确的策略，也是Oracle云平台的优势所在。从任务类型看：Oracle云基础设施平台（OCI），既支持Oracle工作负载，也支持NonOracle工作负载。在数据库方面，除支持基于OracleDB的工作负载、数据湖仓一体和MySQL Heatwave及MySQL Heatwave Lakehouse云服务外，更重要是支持各种云原生的应用和服务，用户可在OCI上构建云原生应用，支持基于标准的Kubernetes开源平台。从行业方面，特别聚焦在出海电商， 另外有游戏、HPC和IOT等等。</p><p></p><p>当国内的业务需要有一个支撑业务全球发展的平台，这个时候云平台实际上方便地满足了原来On-premise（本地部署）不能达到一些需求。 在企业出海时，选择Oracle云平台有两个最主要的好处：</p><p></p><p>第一是我们以提供更低的成本让客户去获得所需的云服务且全球一致。第二是提供给企业一个全球合规的云平台和数据的安全保证。</p><p></p><p>Oracle Privacy Assurance 保护客户的数据主权和管控数据不会离开Trust Boundary，同时，OCI目前在全球已拥有40个数据中心保证更经济、更快速和更合规地扩展海外业务。另外，在双引擎的数据库云服务上（Oracle DB和MySQL Heatwave LakeHouse）可以获得超越其他云厂商的极致性能。同时，面向 Microsoft Azure 的 Oracle 直连服务为企业提供了多云环境（包括 Oracle Exadata 数据库服务、自治数据库和 MySQL Heatwave 等 Oracle 数据库功能）的简单迁移之路。近日发布的MySQL Heatwave on AWS又将OLTP、分析、<a href=\"https://qcon.infoq.cn/2022/beijing/track/1300\">机器学习</a>\"和基于机器学习的自动化融合到了单个 AWS 实例中。</p><p></p><p></p><blockquote>InfoQ：在这个数字化转型的过程中，您觉得Oracle在国内助力企业数字化转型的过程中起到了什么样的作用？</blockquote><p></p><p></p><p>谢鹏博士：数字化是一个非常大的题目，而且会比较持久，可能要另谈。这个趋势是不会改变的，且未来已来，整个世界正在向一个数字化的社会演进。现在来讲，我们看到了一些主要的推动的技术因素，包括云、IoT、5G、<a href=\"https://qcon.infoq.cn/2022/beijing/track/1300\">AI</a>\"、虚拟现实、实时互动、数字孪生等等。这些都是目前显现出来的一些推动因素，必然还有一些不断新出现的技术会给企业带来很多的新创新方向。不过，具体到一个企业在做未来规划时要更加具体、聚焦。 另外，在<a href=\"https://www.infoq.cn/video/X4F32D6uCstZHtSWXwMe\">数字化转型</a>\"过程中，除了技术，企业要有数字化转型的思维，要建立数字文化，还要培养数字化人才，这些往往是容易忽略的因素。</p>",
    "publish_time": "2022-10-28 16:59:39",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]