[
  {
    "title": "Error Prone 通过检测常见错误帮助改善Java代码",
    "url": "https://www.infoq.cn/article/lpOyO0ClfYLGmmakS3is",
    "summary": "<p><a href=\"https://errorprone.info/\">Error Prone</a>\"是谷歌开源的一个Java编译插件，可以在编译时进行静态分析、bug检测，或者对可能的优化提出建议。插件中包括了超过500个<a href=\"http://errorprone.info/bugpatterns\">预定义的bug检查</a>\"，并且允许第三方和自定义插件。检查到问题之后，Error Prone能够将问题通过warning显示出来或者用预定义的解决方案自动修改代码。Error Prone 支持 Java 8、11，以及17，可以被用来修复bug或者大规模重构。文档中提供了使用 Maven、Bazel、Ant以及Grandle的安装和配置教程。需要将Error Prone在编译器中配置为annotation processor（注解处理器），下面是通过Maven创建测试工程的示例：</p><p><code lang=\"java\">\n    org.apache.maven.plugins\n    maven-compiler-plugin\n    3.10.1\n    \n        17\n        UTF-8\n        \n            -XDcompilePolicy=simple\n            -Xplugin:ErrorProne\n        \n        \n            \n                com.google.errorprone\n                error_prone_core\n                2.15.0\n            \n        \n    \n\n</code></p><p></p><p>接下来可以创建一个示例类。下面的方法使用了 equals  方法来对比两个数组，更准确地说，此处所比较的是对象本身而不是数组的内容。</p><p></p><p><code lang=\"java\">public boolean compare(String firstList[], String secondList[]) {\n    return firstList.equals(secondList);\n}\n</code></p><p></p><p>执行  mvn clean verify  触发Error Prone 分析，下面是运行结果中的错误信息中：</p><p></p><p><code lang=\"java\">[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:    \n    compile (default-compile) on project ErrorProne: Compilation failure\n[ERROR] …/ErrorProne/src/main/java/org/example/Main.java:[5,28] \n    [ArrayEquals] Reference equality used to compare arrays\n[ERROR]   (see https://errorprone.info/bugpattern/ArrayEquals)\n[ERROR]   Did you mean 'return Arrays.equals(firstList, secondList);'?\n</code></p><p></p><p>报出了<a href=\"http://errorprone.info/bugpattern/ArrayEquals\">ArrayEquals</a>\"错误，Error Prone的建议是修改实现方式，以比较数组的内容而不是比较对象。</p><p></p><p><code lang=\"java\">return Arrays.equals(firstList, secondList);\n</code></p><p></p><p>报错不仅可以帮助改善代码，也可以让Error Prone自动应用解决方案。   -XepPatchChecks  参数的应用应该包含由逗号分隔开的bug模式列表，在上面的情况中，只有ArrayEquals解决方案用于这段代码。 -XepPatchLocation  参数用于具体定位解决方案文件位置，在当前情境中是修改了源文件：</p><p></p><p><code lang=\"java\">\n    -XDcompilePolicy=simple\n    -Xplugin:ErrorProne -XepPatchChecks:ArrayEquals    \n        -XepPatchLocation:IN_PLACE\n\n</code></p><p></p><p>现在，在执行  mvn clean verify 之后，类文件被自动修改为：</p><p></p><p><code lang=\"java\">public boolean compare(String firstList[], String secondList[]) {\n    return Arrays.equals(firstList, secondList);\n}\n</code></p><p></p><p>文档里提供了更多关于<a href=\"https://errorprone.info/docs/flags\">命令行标识</a>\"的信息。除了内置的bug模式，也可以使用例如<a href=\"https://github.com/KengoTODA/errorprone-slf4j/blob/master/README.md\">SLF4J</a>\"等第三方发布的插件，或创建自定义插件。内置规则的源码提供了多种可用于定义插件的不同<a href=\"https://github.com/google/error-prone/tree/master/core/src/main/java/com/google/errorprone/bugpatterns\">示例</a>\"模板。例如，自定义一个能够用新的JUnit 5 @BeforeEach注解器代替旧版@Before JUnit注解器的Error Prone插件。</p><p></p><p>和前文例子不同，自定义的Error Prone插件应该被放置于Maven模块。Error Prone通过<a href=\"https://www.infoq.com/articles/java11-aware-service-module/\">服务加载器</a>\"机制来加载bug检测。这类之际通常一定的配置，然而谷歌的<a href=\"https://github.com/google/auto/tree/master/service\">AutoService</a>\"项目借助@AutoService注解简化了配置工作。@BugPattern注解用于定义bug的名称、简介以及严重性。在下面的例子中，如果没有找到@Before 注解器会返回Description.NO_MATCH ，否则<a href=\"https://errorprone.info/api/latest/com/google/errorprone/fixes/SuggestedFix.html\">SuggestedFix</a>\"会用@BeforeEach注解替代@Before注解。</p><p></p><p><code lang=\"java\">@AutoService(BugChecker.class)\n@BugPattern(\n    name = \"BeforeCheck\",\n    summary = \"JUnit 4's @Before is replaced by JUnit 5's @BeforeEach\",\n    severity = BugPattern.SeverityLevel.SUGGESTION\n)\npublic class BeforeCheck extends BugChecker implements BugChecker.AnnotationTreeMatcher {\n    private static final Matcher matcher =    \n        isType(\"org.junit.Before\");\n\n    @Override\n    public Description matchAnnotation(AnnotationTree annotationTree, \n            VisitorState visitorState) {\n        if (!matcher.matches(annotationTree, visitorState)) {\n            return Description.NO_MATCH;\n        }\n        return describeMatch(annotationTree, \n            SuggestedFix.replace(annotationTree, \"@BeforeEach\"));\n    }\n}\n</code></p><p></p><p>构建自定义Error Prone 插件的时候都是需要Error Prone和AutoService依赖的。</p><p></p><p><code lang=\"java\">\n  com.google.errorprone\n  error_prone_annotations\n  2.15.0\n\n\n  com.google.errorprone\n  error_prone_check_api\n  2.15.0\n\n\n  com.google.auto.service\n  auto-service-annotations\n  1.0.1\n\n</code></p><p></p><p>AutoService应该被配置为一个注解处理器。</p><p></p><p><code lang=\"java\">\n    \n        com.google.auto.service\n        auto-service\n        1.0.1\n    \n\n</code></p><p></p><p>现在，自定义的Error Prone 插件可以通过  mvn install 命令，安装在本地的Maven仓库。执行命令后，示例工程应该会被配置为使用新的自定义插件作为注解处理器。</p><p></p><p><code lang=\"java\">\n    \n        org.example.custom.plugin\n        ErrorProneBeforeCheck\n        1.0-SNAPSHOT\n    \n\n</code></p><p></p><p>新的  BeforeCheck  应该被加入到了Error Prone 分析中。</p><p></p><p><code lang=\"java\">\n  -XDcompilePolicy=simple\n  -Xplugin:ErrorProne -XepPatchChecks:BeforeCheck  \n          -XepPatchLocation:IN_PLACE\n\n</code></p><p></p><p>添加一个示例测试类，其中包含@Before和@BeforeEach的两个注解。</p><p></p><p><code lang=\"java\">public class ErrorProneTest {\n  @Before\n  void before() {\n  }\n  @BeforeEach\n  void beforeEach() {\n  }\n}\n</code></p><p></p><p>运行 mvn verify 时，新的自定义Error Prone插件将用@BeforeEach注解替换@Before注解。</p><p></p><p><code lang=\"java\">public class ErrorProneTest {\n  @BeforeEach\n  void before() {\n  }\n  @BeforeEach\n  void beforeEach() {\n  }\n}\n</code></p><p></p><p>Error Prone所使用的Java internal目前处于隐藏状态，可能会导致如下错误：</p><p></p><p><code lang=\"java\">java.lang.IllegalAccessError: class com.google.errorprone.BaseErrorProneJavaCompiler \n(in unnamed module @0x1a6cf771) \ncannot access class com.sun.tools.javac.api.BasicJavacTask (in module jdk.compiler) \nbecause module jdk.compiler does not export \ncom.sun.tools.javac.api to unnamed module @0x1a6cf771\n</code></p><p></p><p>Maven的<a href=\"http://errorprone.info/docs/flags#maven\">解决办法</a>\"是通过在项目根目录下创建.mvn目录来暴露Java internal，在目录中创建一个jvm.config文件，其中配置如下：</p><p></p><p><code lang=\"java\">--add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED\n--add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED\n--add-exports jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED\n--add-exports jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED\n--add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED\n--add-exports jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED\n--add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED\n--add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n--add-opens jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\n--add-opens jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED\n</code></p><p></p><p>或者可以将--add-exports和--add-opens 参数配置添加到Maven编译器插件的pom文件中：</p><p></p><p><code lang=\"java\">\n    org.apache.maven.plugins\n    maven-compiler-plugin\n    3.10.1\n    \n        \n            --add-exports\n            jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n          …\n</code></p><p></p><p>更多在Bazel、Ant和Gradle中使用Error Prone的信息可参见<a href=\"https://errorprone.info/docs/installation\">安装引导</a>\"。</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/qQFYqekRrzwOp8KPNVD4\">Java 近期新闻：顺序集合、Spring 6.0-RC1、Tomcat、Reactor 2022.0-RC1</a>\"</p><p><a href=\"https://www.infoq.cn/article/5VMP2p3hLyEKpYIILxLr\">Spring Boot 3 将于 2022 年 11 月发布，延迟了对 Java 模块系统的支持</a>\"</p><p></p>",
    "publish_time": "2022-10-26 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "谷歌、微软发布最新财报：营收持续增长，但利润萎缩",
    "url": "https://www.infoq.cn/article/ev51N1uqoPPp8iPdaieu",
    "summary": "<p>当地时间10月25日，谷歌母公司 Alphabet 公布 <a href=\"https://abc.xyz/investor/static/pdf/2022Q3_alphabet_earnings_release.pdf?cache=4156e7f\">2022 年第三季度业绩</a>\"。报告显示，Alphabet第三季度总营收为690.92亿美元，与上年同期的651.18亿美元相比增长6%；按照美国通用会计准则净利润为139.10亿美元，与上年同期的189.36亿美元相比下降26.5%；每股摊薄收益为1.06美元，上年同期的每股摊薄收益为1.40美元。财报发布后，Alphabet股价盘后跌超6%。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/97/978a66ace373ce06597ffa507292dfbb.png\" /></p><p></p><p>根据报告，谷歌的大部分业务都在逐年增长：广告收入从 531 亿美元增长到 544 亿美元，谷歌云从 2021 年第三季度的 49 亿美元跃升至 2022 年的近 69 亿美元，但值得注意的是，该公司云部门的亏损也从 6.44 亿美元增加到 6.99 亿美元。</p><p>&nbsp;</p><p>据报道，在今年9 月 1 日的谷歌内部全员会议上，首席执行官Sundar Pichai 声称，谷歌正在一个“具有挑战性的宏观经济环境”中运作，员工应该“深入思考变化”，并且宣布了名为“Simplicity Sprint，简单冲刺）”的方案，旨在提供员工的生产效率。</p><p>&nbsp;</p><p>为此，谷歌一直在努力审查其员工人数。尽管如此，该公司报告称其与上一季度相比有所增长：7 月份，谷歌拥有 174,014 名员工，而截至今年9月底，这一数字为 186,779 人。</p><p>&nbsp;</p><p>谷歌并没有悄无声息地<a href=\"https://xie.infoq.cn/article/c6e399bfb791cb4905aea1095\">裁员</a>\"，而是通过解雇或重组特定团队，给前成员在公司内部找到新职位的机会，因为谷歌也知道并非所有人都会这样选择。但这也意味着，这些人的名单可能不会在数周或数月内正式从谷歌消失。“我们放慢招聘步伐的行动将在 2023 年变得更加明显，”首席财务官 Ruth Porat 在公司的财报电话会议上表示。</p><p>&nbsp;</p><p>同天，微软发布了<a href=\"https://click.linksynergy.com/deeplink?id=nOD/rLJHOac&amp;mid=24542&amp;u1=[]vg[p]23186944[t]w[r]https://techurls.com/[d]D&amp;murl=https://www.microsoft.com/en-us/Investor/earnings/FY-2023-Q1/press-release-webcast\">2023财年第一财季财报</a>\"。报告显示，微软该财季营收为501.22亿美元，与去年同期的453.17亿美元相比增长11%；净利润为175.56亿美元，与去年同期的205.05亿美元相比下降14%；每股摊薄收益为2.35美元，与去年同期的2.71美元相比下降13%。具体业务数据如下：</p><p>&nbsp;</p><p>生产力和业务流程收入为 165 亿美元，增长 9%（按固定汇率计算增长 15%）：</p><p>&nbsp;</p><p>Office Commercial 产品和云服务收入增长 7%（按固定汇率计算增长 13%），受 Office 365 Commercial 收入增长 11%（按固定汇率计算增长 17%）的推动；&nbsp;Office Consumer 产品和云服务收入增长 7%（按固定汇率计算增长 11%），Microsoft 365 Consumer 订阅者增长至 6130 万；LinkedIn 收入增长 17%（按固定汇率计算增长 21%）；Dynamics 365 收入增长 24%（按固定汇率计算增长 32%）推动 Dynamics 产品和云服务收入增长 15%（按固定汇率计算增长 22%）。</p><p>&nbsp;</p><p><a href=\"https://www.infoq.cn/article/YPEcYYPmN4uCJb5pqjIG\">智能云</a>\"收入为 203 亿美元，增长 20%（按固定汇率计算增长 26%）：</p><p>&nbsp;</p><p>服务器产品和云服务收入增长 22%（按固定汇率计算增长 28%），受 Azure 和其他云服务收入增长 35%（按固定汇率计算增长 42%）的推动。</p><p>&nbsp;</p><p>更多个人计算的收入为 133 亿美元，略有下降（按固定汇率计算增长 3%）：</p><p>&nbsp;</p><p>Windows OEM 收入下降 15%；Windows 商业产品和云服务收入增长 8%（按固定汇率计算增长 15%）；Xbox 内容和服务收入下降 3%（按固定汇率计算增长 1%）；不含流量获取成本的搜索和新闻广告收入增长 16%（按固定汇率计算增长 21%）；设备收入增长 2%（按固定汇率计算增长 8%）。</p>",
    "publish_time": "2022-10-26 11:05:33",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "从零开始构建业务异常检测系统，FreeWheel面临过的问题和解决方案",
    "url": "https://www.infoq.cn/article/VNuFLZeLmv0iDEJB06OD",
    "summary": "<p></p><h2>背景</h2><p></p><p></p><p>在公司运行过程中，尤其是对于偏重数据的互联网公司，业务异常检测是一个非常重要但又很容易被轻视的工作。一旦因为业务发生异常并且没有被及时发现，一定会对公司和客户产生某种程度的损失，从而影响业务正常发展。很多公司都构建了基于规则的报警平台，并将其应用于业务的异常检测。但由于数据模式的快速变化，并且数据中存在着大量噪音，基于规则的异常检测误报率较高。基于机器学习和人工智能的业务异常检测可以获得比传统规则系统更高的准确率和扩展性，但由于面临诸如异常的定义较为模糊、缺少数据标签等诸多挑战，构建一个实用的业务异常检测系统需要算法工程师和数据开发工程师的精雕细琢才能完成。</p><p></p><p>FreeWheel 是一家数字广告管理技术和服务提供商，创建于 2007 年，是一家专门提供电视及互联网视频广告投放、监测、预测、增值等关键解决方案的技术公司，主营业务为高端视频媒体的广告服务。为客户提供稳定可靠的广告投放服务是 FreeWheel 的宗旨，为了提高服务质量，对业务的异常检测和预警非常关键。我们从 2020 年开始从零打造了基于机器学习的业务异常检测系统，覆盖了 FreeWheel 核心业务指标，为客户的广告投放保驾护航。</p><p></p><p>本文介绍了 FreeWheel 基于机器学习的业务异常检测实践，提炼了从零开始构建业务异常检测系统面临的问题和解决方案，文章介绍了常用的异常检测算法，比较了不同算法模型的优劣，介绍了可扩展的异常检测系统是如何搭建的，希望对于从事相关工作的朋友能够带来帮助。</p><p></p><h3>异常检测概述</h3><p></p><p></p><p>从应用场景分，异常检测包括指标异常检测、日志异常检测、网络异常检测、用户行为异常检测（风控、反作弊）等。从数据角度又可以分为新奇点检测 (Novelty Detection) 和离群点检测 (Outlier Detection)。</p><p></p><p>广告业务异常检测是以业务指标为基础，多维度、多角度的异常检测。一方面，业务指标是连续采集的时间序列，通常认为历史序列是正常的，从中学习特定的模式，未来的指标如果违反了这个模式，可以认为出现了异常，从这个角度看，属于新奇点检测的范畴。另一方面，业务指标在某几个维度下的值一般会满足某种分布，和多数正常值相比差别比较大的可能就是异常点，这属于离群点检测的范畴。受篇幅所限，本文主要关注新奇点检测问题，离群点检测的相关实践将在后续分享。</p><p></p><p>异常检测面临诸多挑战，第一，正常和异常的边界是非常模糊的，很多时候是“公说公有理，婆说婆有理”；第二，历史数据里经常包括很多噪音，甚至历史数据中就存在着异常。第三，几乎没有标注的异常标签；第四，正常数据的模式也不是一成不变的，会随着时间的推移和业务的演进发生很大的变化。指标异常检测算法，包括无监督、半监督、监督机器学习算法。其中以无监督应用最为广泛。无监督主要有基于统计模型的异常检测（如 EVT），基于时间序列预测的异常检测，基于隐变量重构误差的异常检测（如 VAE），以及其他深度学习的衍生模型（如 AnomalyTransformer) 等。监督的算法更偏向于传统的机器学习和深度学习的分类模型，半监督方法致力于解决标签数据不足的问题，提高监督方法的学习效果。本文主要介绍我们从零到一的实践经验和在生产环境中应用较为成熟的算法模型，除此之外，基于监督和半监督方法的模型也很快投入生产环境，期待后面分享给大家。</p><p></p><h3>业务指标监控</h3><p></p><p></p><p>FreeWheel 监控平台目前有两大指标数据来源，Prometheus 和数据平台。Prometheus 是目前主流的开源监控解决方案，具有数据模型灵活、延迟低等特点，目前存储 FreeWheel 绝大多数系统和应用指标和核心业务指标。Prometheus 的核心业务指标是从 Ad Server 直接采集而来，如请求量、广告曝光量等，聚合粒度较粗。另一部分来源于 FreeWheel 数据平台，通过对 AdServer 产生的广告日志的实时处理，将更细粒度的指标存入 Druid，其数据延迟为分钟级。有了细粒度的数据后，我们可以基于我们关心的维度进行实时聚合，如广告曝光量这个指标，根据客户 ID 进行聚合，可以对每个客户 ID 的广告曝光量时间序列进行异常检测和报警。</p><p></p><h2>快速搭建 V1.0 系统</h2><p></p><p></p><p>最早的时候，我们通过规则的方式对几个关键的指标配置了预警，比如，某个重要客户的曝光量或者转化率小于某个阈值就会触发报警；比如针对所有的站点，若流量同环比小于 80%，就认为可能有问题。这些规则确实起到了一定的作用，也检测到了很多异常，但缺点也很明显：第一是规则太多，不同客户的业务和流量模式千差万别，同一套阈值比较难以满足需求；第二点是业务变化很快，阈值需要随着业务变化不断地调整，维护成本高；第三点，也是最大的痛点是误报率大，需要耗费大量的人工处理报警。</p><p></p><p>为了从零开始快速搭建起基于机器学习的 V1.0 的异常检测系统，我们采用了简单直接的做法，基于历史数据训练回归模型，预测未来的指标和对应的上下界，如果真实值超过了上下界，则检测到异常并触发报警，也就是基于时间序列预测的异常检测。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/71/71edf06993498bdc61392d365d7456b8.png\" /></p><p></p><p>（注：绿色实线时指标的真实值，蓝色虚线是指标的预测值，橙色和红色分别是上下届，红框标注的是检测到的异常）</p><p></p><h3>第一版模型</h3><p></p><p></p><h4>ARIMA</h4><p></p><p></p><p>首先，为了能快速上线第一个版本，我们尝试了时间序列预测里最常用的 ARIMA 模型，ARIMA 是 Autoregressive Integrated Moving Average model 的缩写。ARIMA 模型有三个超参数 p,d,q，一般写作 ARIMA(p,d,q) 中，AR 是“自回归”，p 为自回归项数；MA 为“滑动平均”，q 为滑动平均项数，d 为使之成为平稳序列所做的差分阶数。对于每一个时间序列，都需要确定最适合的超参数 p,d,q，通常有一套成熟的策略进行人工选择，如通过观察差分之后的平稳性确定 d，通过观察 ACF 曲线和 PACF 曲线确定 q 和 p 等等。但是，对于数以万计的时间序列来说，人工调整显然不可行，这套经验策略也较难量化，因此我们采用类似网格搜索的方法确定超参数，这一过程也被称为自动定阶。</p><p></p><h4>周期性检测</h4><p></p><p></p><p>ARIMA 模型没有考虑时间序列的季节性（也称作周期性，下文统称周期性）变化，但周期性是大多数跟流量相关的指标必须要考虑的一个因素，并且不同的业务模式的流量周期是不一样的，看下面的两个例子。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/59/596643ea551c0c5fcea94bcf34ef8764.png\" /></p><p></p><p>如上图所示，按小时粒度聚合的 2 个指标，其周期分别为 24 和 168，分别代表每天重复的模式和每周重复的模式。</p><p></p><p>我们需要给出最匹配这个时间序列的周期值，即周期性检测。周期性检测的方法有很多，第一种就是相似度检测，假设周期为 T，将时间序列按照长度为 T 进行切分得到若干个分段，计算相邻分段的相似度。第二种方法是分析 ACF 曲线，ACF 全称是 Autocorrelation function，其表达了时间序列和自身偏移一定量之后的相关性。通过观察 ACF 曲线的特点可以推断出时间序列周期。除了这两种方法外，周期性检测还有快速傅里叶变换（FFT）、小波变换等方法。我们根据不同指标的时间粒度、数据量和不同方法的计算复杂度、准确性等，根据经验和实验结果构建了一个的选择周期性检测方法的决策树，由最适合的一种或几种方法，综合计算出时间序列的周期。</p><p></p><h4>Seasonal ARIMA</h4><p></p><p></p><p>由于普通的 ARIMA 模型不能够处理周期性，Seasonal ARIMA 模型引入了季节分量，可以更好地处理周期性，通常写作 SARIMA(p,d,q)(P,D,Q,s) 。s 是时间序列的周期，P,D,Q 分别对应季节分量的滑动平均项数、差分阶数和滑动平均项数。</p><p></p><p>在训练数据的选取上，虽然历史数据越多，模型拟合地会更好，但并不是越多越好，一方面，数据量增加会使得 ARIMA 模型拟合时间变长，另一方面，业务指标的模式可能随着时间而发生变化。以小时粒度指标，对于无周期的 ARIMA 模型，200~300 多个点即可取得比较好的效果，也就是 7~14 天左右的历史数据；对于周期性的 SARIMA 模型，5~10 个周期即可取得比较好的效果，对于呈现每周重复的模式，6 周左右的数据可以取得比较好的效果。</p><p></p><h4>如何计算上下界</h4><p></p><p></p><p>有了预测值之后，接下来我们需要得到判断异常的上下界阈值，ARIMA 模型在输出预测结果的同时，也输出了置信区间。置信区间概率论里的一个概念，是基于区间估计的结果，在预测的场景下，代表预测结果会一定的概率出现在这个区间，这个概率就被称为置信度。当随机变量符合正态分布时，95% 置信度的置信区间近似等于均值加减 2 倍标准差，而均值加减 3 倍标准差的置信度为 99.7%，这也就是常说的 2 倍标准差法和 3 倍标准差法。将置信区间作为判断异常的上下界阈值时最适合不过的了，当置信度越大时，置信区间越宽，超出上下界阈值的异常就越显著，换句话说，业务指标的异常就越严重。通过设置不同的置信度，我们可以探测到不同严重程度的异常。</p><p></p><p>在实际应用时，由于我们的业务指标通常时非负的，并不能满足正态分布（或者高斯分布），因此 ARIMA 模型直接输出的置信区间就不合适了。通过分析发现，绝大多数业务指标近似满足从零处截断的截断正态分布（高斯分布），因此我们只需要取出 ARIMA 模型输出的预测值和标准误差，就可以利用截断正态分布的累计分布函数和分位函数计算出置信区间。</p><p></p><h3>V1.0 系统架构</h3><p></p><p></p><p>有了第一版的模型的结果，我们上线了异常检测系统 V1.0，架构如下图所示：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/6e/6e12fd90bedc93cf955c0388cd03ef2d.png\" /></p><p></p><p>V1.0 系统的核心就是指标预测服务，指标预测服务将需要预测的指标的预测结果和报警上下界输出到监控平台，通过在监控平台上对需要进行异常检测到指标配置报警规则，由监控平台实时检查是否满足报警要求，也就是超过上下界，从而触发报警。指标预测服务是基于 PySpark 实现的，由两类定时任务构成。第一类是周期性检测和模型训练，频率较低，大约每天执行一次，负责将所有需要检测的指标和维度下的时间序列都进行周期性检测、ARIMA 超参数选取和 ARIMA 模型训练，并将周期数、ARIMA 超参数和 ARIMA 模型参数进行保存。</p><p></p><p>第二类是预测任务，基于 Spark 的并行计算能力，可以实现在较短时间能完成大量时间序列的预测工作。以小时级任务为例，每次预测任务都会预测时间序列未来 N 个小时（例如 N=24）的指标值和上下界，并写入数据库；小时级任务可以配置每隔 M 个小时（例如 M=6）执行一次，同时覆盖之前的预测结果。这样做的好处是既保证了预测数据的冗余，使得在预测任务失败或者延误的时候还有之前的预测结果可以使用，同时执行预测任务的 executor 可以允许在按需申请的 spot instance ec2 上，节约了计算成本，由于 spot instance 的不可靠性，预测任务可能随时失败，只要重试即可。另一方面，配置 M< p=\"\"></p><p></p><h3>当前的问题和优化</h3><p></p><p></p><p>对第一版的结果进行分析，我们发现有下面几个问题会导致精确率（Precision）不足，误报较多：</p><p></p><p>1) 区间太紧</p><p></p><p>首先是置信区间的问题，当我们选好一个合适的置信度，如 99%，会发现对于多数时间序列都是合适的，但对于那些规律性比较强的时间序列来说，其模型的拟合度非常好，MAPE 能小于 5%，预测的标准误差很低，因此置信区间会比较窄，如图：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/09/0935aae2415030f616d467a5a5305560.png\" /></p><p></p><p>这就会导致如果指标出现轻微的抖动，比如 +/-10%，就会被识别为异常，这显然是我们不希望看到的。我们的改进有两点，第一是对标准误差进行放大，当标准误差 / 均值的比例小于一定的程度时，将标准误差乘以一定的放大系数，再计算置信区间；第二是利用预期的抖动比例进行干预，将计算出来的置信区间和基于经验配置的容忍抖动比例（如 +/-20%）进行融合，这样得出的上下界既能符合模型的拟合结果，也能在业务上看来不至于特别离谱。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d5/d56e4880615488cc1fb8df9fb942f1d1.png\" /></p><p></p><p>2) 数据包含噪音</p><p></p><p>第二点，历史数据中包含异常点，会对模型的拟合和预测产生一定的影响。例如如果前一天流量因为某些原因（如压力测试）有一个很明显的尖峰，那大概率 ARIMA 模型预测的今天同周期也会相应地变高，从而导致对正常流量的误判。我们从两个方面解决这个问题，第一是模型启动的时候，我们用一个规则去识别那些比较明显的异常点；然后，当我们的模型开始运行，异常点被检测出来后，我们通过建立反馈机制修正模型的输入数据，将异常点的值修正为此前的预测值，后面模型的预测将不会收异常点的影响。当然如果异常点识别错了，反馈机制会带来负面效应，处理这个异常报警的运营人员会对其进行标记，从而避免这个问题。</p><p></p><p>3) 数据太稀疏</p><p></p><p>此外，我们发现，有一大部分时间序列的数据非常稀疏，也就是其历史上的取值经常缺失，导致时序预测准确度较差。针对这种情况，从业务的角度考虑，我们通过设置阈值跳过数据太稀疏或者历史流量过少的的场景，减少误报。</p><p></p><h2>第二代系统 (V2.0)</h2><p></p><p></p><h3>V1.0 的不足</h3><p></p><p></p><p>V1.0 异常检测系统有几个问题，首先在系统层面，随着需要配置异常检测报警的指标越来越多，通过 Hard Code 的方式部署的指标预测服务的扩展性问题就凸显出来；另外，业务上希望对于指标短时间抖动或者业务影响比较小的异常进行过滤，现有的架构难以实现。在模型层面，ARIMA（SARIMA）模型在很多场景下预测误差较大，基于这样的预测结果计算的上下界会导致较多误报警。</p><p></p><p>针对 V1.0 系统和模型的不足，我们设计了第二代异常检测系统 V2.0。</p><p></p><h3>异常检测系统 V2.0</h3><p></p><p></p><h4>架构</h4><p></p><p></p><p>在第二版的异常检测系统中，我们将异常检测的工作从监控平台完全剥离出来，专注于优化异常检测算法和策略，进而提升异常检测的效果。异常检测系统将结果以异常得分的形式输出给监控平台，由监控平台负责报警和运营操作。下面是系统整体的架构图。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/19/19e4e06b601428492761a4e7c3676bba.png\" /></p><p></p><p>异常检测系统包括元数据管理、模型训练、异常评估等几个模块。元数据理负责和监控平台同步异常检测需求和配置信息，如要检测的指标、数据源、维度、过滤条件等，并生成对应的时间序列元数据。模型训练和之前相似，不同的是从批任务变成了实时任务，通过内置的调度模块，一方面要服务监控平台实时配置的需求，对于新增的时间序列要优先进行训练，另一方面也要定期地对旧模型进行更新。</p><p></p><h4>异常评估模块</h4><p></p><p></p><p>异常评估模块也是一个长期运行的 Spark 应用，内置的调度模块会调度每个任务的运行，同时考虑实时数据源依赖、数据完整性检查、指标历史数据缓存、任务优先级等，将适合的任务提交 Spark Job Group。每个 Spark Job Group 都包括指标数据查询、数据处理、并行的时间序列异常检测和结果汇总与输出等多个 Spark Job/Stage，其中最核心的是并行的时间序列异常检测的 Stage，多个 Task 由 Spark 调度并行执行。</p><p></p><p>异常评估模块的另外一个关键点是对异常进行评估和打分 (0 到 1 之间的分数)，异常比较明显或者对业务影响比较大的异常的得分更接近 1，不明显的异常、噪音、对业务影响小的异常的得分更接近 0。相比 V1.0 异常检测系统，引入异常评估模块后极大地提升了异常检测的能力，一方面可以引入基于规则和策略的评估，另一方面可以直接基于无监督或者监督的机器学习模型给出异常打分。由于基于规则和策略的评估方法可解释性更强，占线上多数场景都采用此方法；在一些特殊业务场景中，通过模型直接打分也取得了不错的效果。</p><p></p><p>下面简单介绍下我们的打分策略，首先，选取评估窗口，即同时评估最近的几个时刻指标值的异常情况，评估窗口数据的异常相比只评估点数据的异常可以减少噪音的影响，当然，越新的数据权重越大。以流量指标为例，我们综合了以下几个因素进行评估：是否超出上下界、相比预测值流量异常下降（或者上涨）的幅度，即重构误差、历史流量大小，当前所处时刻流量的相对大小、异常持续的时间、历史上发生过类似异常的频率等。</p><p></p><p>除了基于影响的评估之外，我们还构建了根因分析系统对异常进行归因分析，提供一站式业务运营解决方案，极大地提高了运营效率，同时消除由于业务上预期的“指标异常”导致的误报警。对于可以简单找到根因的异常，我们选择直接在异常检测阶段进行消除，而不是导入根因分析系统，来减少计算压力。例如，程序化交易的流量异常下降，很可能是交易暂停，或者已经达到预算等原因导致的。</p><p></p><h3>新的算法模型</h3><p></p><p></p><h4>预测模型</h4><p></p><p></p><p>ARIMA（SARIMA）模型能够较好地拟合大多数的时间序列，但在实际使用中有两个比较突出的问题：一、对于不带周期项的 ARIMA，其预测结果会有较为明显的滞后现象，容易导致误判；二、如果周期数过大，模型拟合的速度很慢，如对于小时粒度的数据，当周期为 168 时，其单线程拟合时间超过 5 分钟。为了弥补 ARIMA 模型的不足，我们引入了 XGBoost、STL、SMA 和 EVT 等模型，不同的模型有各自的优缺点和适合的应用场景，下面我们先简单介绍下这些模型。</p><p></p><p>XGBoost</p><p></p><p>XGBoost 是一个梯度提升决策树（GBDT）的高效实现，以极强的模型学习效果和性能著称，可以解决 SARIMA 长周期预测性能无法满足要求的问题。应用到时间序列预测时，需要人工进行特征工程，我们选取了这么几类特征：</p><p></p><p>第一类是时间序列的 lag（滞后算子），也就是要预测的时刻 T 的前面时刻的值，如 T-1，T-2…. lag 并不是越多越好，对于小时粒度的数据，如果输入是 5 周（840），那么约靠前的 lag 可能的价值就越低，我们根据周期的不同，选取的 lag 数也不一样。如前序判断为 24 周期，则选取 1~40 lag，和每 24 个周期选取同周期的 lag，如 t-48，t-96，等等。第二类是时间特征，如星期几、是否为周末、当前小时等。第三类是时间窗口统计特征，如最近 24 小时的平均值，工作日的平均值，周末的平均值，过去 7 天当前小时的平均值，等等。</p><p></p><p>XGBoost 的拟合能力是非常强的，因此摆在我们面前很大的问题是如何避免过拟合，也就是虽然在训练数据上模型拟合地非常好，但在验证数据上预测误差较大。首先是从参数入手，包括使用 L2 正则，限制树的深度、对训练数据进行采样，预剪枝等参数都会起到一定的效果。此外，如果训练数据不足，过拟合是很难避免的，因此 XGBoost 只适用于时间序列历史数据非常多的情况。</p><p></p><p>此外，另一种解决单一的时间序列训练数据量较少的方法，是通过对相同指标不同维度的时间序列进行聚类，将相似的维度值对应的时间序列放到一起训练模型，这样可以增加训练数据量，缓解过拟合的问题。但这种方法扩展性较差，需要根据具体的指标和维度对应的时间序列的情况单独调整。</p><p></p><p>STL</p><p></p><p>对于某些长周期的指标，我们面临 SARIMA 拟合时间非常长，又没有足够的数据训练 XGboost 的情况，这时候时间序列分解派上用场了。时间序列分解是将时间序列分解为均值 (Mean) 、趋势 (Trend) 、季节 (Seasonality) 、循环 (Cycle)、随机误差 (Random) 这几个部分，分解方式通常包括乘法和加法。趋势表示这个时间序列的长期趋势，通常加上了均值，季节性（也叫周期性）指时间序列随着时间的季节波动，通常是年、周、日等，循环指的是指标在较长时间呈现出上下波动，通常会被合并到趋势项中，称作趋势 - 循环项（trend-cycle）。</p><p></p><p>将时间序列的周期和趋势分解开之后，我们可以通过更加简单的模型，如 ARMA，去拟合趋势，对于周期项，只需要简单的重复即可，最后将趋势的预测结果和周期相加即刻得到最终的预测结果。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/0e/0ef6a3e5e2c18151511516d21fadebc3.png\" /></p><p></p><p>图片来源于https://otexts.com/fpp2/stl.html</p><p></p><p>经典的乘法和加法分解只能支持固定周期，且受历史数据的异常点影响较大，STL(Seasonal and Trend decomposition using Loess) 分解则较好地解决了这两种问题，我们选用 STL 分解结合 ARIMA 拟合趋势的方法，较好地解决了长周期时间序列的预测问题。除了 STL 之外，还有 X11 和 SEATS 等分解方法。</p><p></p><p>SMA</p><p></p><p>在线上实际运行时，我们发现无论是 ARIMA、XGboost，还是 STL 分解，其模型训练时间都在分钟级，预测时间都在秒级，对于那些时间序列数量巨大的业务指标来说，显然是非常不经济的。</p><p></p><p>同时我们发现，这些业务指标都有一个特点，对于多数时间序列，他们的模式是非常稳定的，因此设计一种快速地算法解决这类问题可以极大地降低异常检测的成本。</p><p></p><p>我们从常用的同环比出发，设计一种结合周期的带权移动平均方法（Seasonality Moving Average，简称 SMA），可以在毫秒级完成预测任务。预测值为同比（最近几个周期同时刻）和环比（最近的数据）的加权平均，以小时粒度指标，周期为 24 时为例：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/dd/dd8b394ceda20a7ca16a8efa454eef03.png\" /></p><p></p><p>r(recent): 考虑最近的数据点数α(alpha): 最近数据的权重c(cycles): 考虑的周期数o(offsets): 同周期前后偏离的点数</p><p></p><h4>预测模型的评估</h4><p></p><p></p><p>对于以上的时间序列预测模型，需要评估其预测的准确程度，我们选用 SMAPE 作为预测模型准确性的评估指标：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/35/35e15f5f8bc9dd53480bef5cead32f61.png\" /></p><p></p><p>SMAPE 反映了模型拟合历史数据的误差，在模型拟合能力一定时，也反应了该时间序列的可预测性，或者叫模式（pattern）的强弱。上面四种模型基本上可以满足多数时间序列的异常检测，但是对于周期性和模式都比较弱的时间序列来说，上述模型预测误差都比较大，通常 SMAPE&gt;70，会导致有较多的异常误报。最初的做法是忽略这类时间序列的异常检测，在一定程度上解决了异常检测精准率不足的问题，但也降低了召回率。</p><p></p><h4>EVT</h4><p></p><p></p><p>为了提升周期性和模式都比较弱的时间序列异常检测的召回率，我们引入了极值理论（Extreme Value Theory，简称 EVT）。极值理论可以在数据分布位置的条件下，估计极值（极大值和极小值）的分布，从而估计正常数据合理的上下界。由于篇幅原因，本文不详细描述具体算法实现，大家感兴趣可以阅读论文（https://www.researchgate.net/publication/318919520）。论文作者考虑了概念漂移的问题，但没有考虑数据的周期性。对于存在一定周期性的时间序列，我们在应用极值理论模型的时候会先根据周期性进行数据采样，对于同周期的数据，采样的概率更大，这样更符合实际情况，对异常检测的准确率也更高。</p><p></p><h4>模型对比</h4><p></p><p></p><p>目前我们引入的模型有 ARIMA、XGBoost、STL-ARIMA、SMA、EVT 等，我们先来总结一下这些模型的特点：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/96/96cc9945ef1d5a83dd2c2a883d8a2d05.jpeg\" /></p><p></p><h4>模型选择</h4><p></p><p></p><p>随着模型引入越来越多，我们需要一套方法为特定的时间序列选择合适的模型。根据这些模型的特点，我们建立了一个决策树，根据指标的类型、周期性、历史数据量、实时性、成本等因素，选择合适的候选模型方案。</p><p></p><p>一个候选模型方案包括首选模型、若干个备选模型和保底模型。举一个典型的例子，因为极低的成本，SMA 将被作为首选模型，首先用 SMA 拟合时间序列的历史数据，并给予设定好的验证数据窗口，如最近 3 天，计算预测的 SMAPE 误差，若 SMAPE 小于预设的阈值（如 50），则认为 SMA 的拟合是有效的并将其作为模型选择的结果，否则，将尝试备选模型。假设 ARIMA、XGBoost、STL-ARIMA 都可以做为备选模型，则分别尝试对这三种模型进行拟合，在 SMAPE 小于阈值的模型中选择最优的作为模型选择的结果。如果备选模型都不能满足需求，则判断有没有保底模型，如果有保底模型（比如 EVT），则将其作为模型选择的结果，否则这个时间序列被认为是无效的。</p><p></p><h2>总结 &amp; 未来展望</h2><p></p><p></p><p>FreeWheel 业务异常检测系统从上线至今已有两年的时间，共接入了十几种业务场景和几十种指标，如针对不同客户集成方式的流量监控、程序化交易全生命周期的异常检测及根因分析等，帮助 FreeWheel 和客户主动发现广告投放中的若干个 P1、P2 级别的严重问题，减少了客户的损失，在维护客户关系方面发挥了重大作用。下一步，我们会支持更多的业务，尤其是针对 FreeWheel Marketplace 的业务，发现和解决广告需求侧和供给侧之间的匹配问题，以及客户流量的广告填充率不足的根因分析，帮助客户提高广告投放效果和利润。</p><p></p><p>从算法和模型的角度，目前线上大多数模型都是基于时间序列预测、针对特定指标和维度（时间序列）自动训练的小模型，其优点是灵活性和扩展性好，成本低；缺点也比较明显，不方便针对具体的业务优化特征工程，包括多指标协同、不同维度和标签之间的数据依赖等。因此，我们针对几种特殊的业务场景，如程序化交易，开发了基于神经网络的大模型；除此之外，我们也对其他的无监督、监督和半监督方法进行了研究和开发，希望后面能分享给大家。</p><p></p><p>作者简介：</p><p></p><p>钟雨，本科和研究生就读于清华大学，现任 FreeWheel 异常检测团队主任算法工程师，FreeWheel 业务异常检测算法团队负责人。曾供职于京东广告数据团队，Spark Contributor，具备丰富的大数据开发与调优、数据挖掘和机器学习经验，在广告大数据行业深耕多年。</p><p></p>",
    "publish_time": "2022-10-26 14:25:08",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "估值从3600亿缩水到1200亿，英特尔自动驾驶掌上明珠Mobileye的“灾难性”上市",
    "url": "https://www.infoq.cn/article/juifybjFERQvkbNCV8GL",
    "summary": "<p></p><blockquote>Mobileye 终于上市，但能“拯救”英特尔吗？</blockquote><p></p><p></p><h2>Mobileye IPO 后，估值缩水三分之一</h2><p></p><p></p><p>10 月 25 日，英特尔旗下自动驾驶子公司 Mobileye 登陆纳斯达克市场开始交易，交易代码为“MBLY”。</p><p>此次 IPO，Mobileye 在首次公开募股 (IPO) 中筹集了 8.61 亿美元。高盛集团和摩根士丹利是此次发行的主承销商。承销银行可以获得额外的 615 万股用于超额配售，这可能会使筹资总额超过 10 亿美元，并使其成为今年第二大 IPO。</p><p></p><p>Mobileye 在一份新闻稿中表示，它以每股 21 美元的价格发行了 4100 万股股票。该公司此前曾指导 IPO 定价可能在每股 18 美元至 20 美元之间。</p><p></p><p>此次 IPO 后， Mobileye 的估值为 167 亿美元，与英特尔最初希望达到的 500 亿美元估值相去甚远。</p><p>10 月 18 日， Mobileye 曾表示其首次公开募股的目标估值接近 160 亿美元，不到此前预期的三分之一。Mobileye 在一份监管文件中表示，它将以每股 18 至 20 美元的价格发行 4100 万股普通股，目标是根据拟议上市范围的上限筹集至多 8.2 亿美元。</p><p></p><p>今年 4 月，路透社曾报道，有消息人士称，Mobileye 上市的估值高达 500 亿美元，这意味着，Mobileye 很可能成为今年以来最大的科技 IPO，也将是全球自动驾驶领域的最大 IPO。</p><p></p><p>据悉，此次 IPO，Mobileye 自身仅出售 5% 的股份，低于大多数 IPO 典型的 10% 至 20% 的股份。这减少了由于估值较低而造成的财务损失。</p><p></p><p>根据提交给美国证券交易委员会的文件，英特尔将保留大量股份，包括 Mobileye 计划发行的所有 B 类股票。每股 B 类股票将拥有相当于 10 股 A 类股票的投票权。</p><p></p><p>路透报道，英特尔CEO Pat Gelsinger 在周一就Mobileye上市回应称，Mobileye之所以IPO并不是为了融资，更多是为了进入市场，“我们认为这家公司应该上市，这是让其潜力最大化的最佳方式。</p><p></p><h3>今年上半年营收 8.54 亿美元，业务增速正在放缓</h3><p></p><p></p><p>根据财务报告，Mobileye 本财年前六个月的收入为 8.54 亿美元，比去年同期增长 21%。该公司公布的净亏损为 6700 万美元。</p><p></p><p>2021 年，Mobileye 的收入为 13.9 亿美元，高于上一年的 9.67 亿美元和 2019 年的 8.79 亿美元。</p><p>富国银行分析师总结，Mobileye 从 2016 年到 2021 年以 31% 的复合年增长率增长。</p><p></p><p>Mobileye 的发展史，是一位 62 岁以色列教授的创业史。</p><p></p><p>Mobileye 由以色列教授 Amnon Shashua 于 1999 年创立。Amnon Shashua 教授出生于 1960 年，曾在以色列希伯来大学计算机系任教，专注研究计算机视觉科学。Amnon Shashua 教授将他大学任教期间的学术研究发展为单目视觉系统，仅使用相机和处理器上的软件算法来检测车辆。</p><p></p><p>在教学工作之外，Amnon Shashua 教授凭借着在 计算机视觉科学 上深厚的技术积累，成为了一名技术创业者，他创办了 3D 光学公司 CogniTens。在创办 Cognitens 期间，Amnon Shashua 教授与汽车制造商之间建立起了联系，也就有了后来的 Mobileye。</p><p></p><p>Mobileye 主要致力于汽车计算机视觉领域的研究，早期特斯拉的高级驾驶辅助 Autopilot 使用的就是 Mobileye 提供的视觉辅助方案。</p><p></p><p>自 Shashua 于 1999 年创立以来，Mobileye 凭借其 ADAS （高级辅助自动驾驶）产品在汽车界声名鹊起，并逐渐成为该领域的市场领导者。成立二十多年，Mobileye 在 ADAS 市场几乎处于垄断地位。分析师认为，Mobileye 目前占 ADAS 市场份额的 80%。</p><p></p><p>在 Mobileye IPO 招股说明书中的给潜在投资者的一封信中，Shashua 表示，他创立 Mobileye 的信念是，“计算机视觉技术可以帮助防止车祸和挽救生命”，“在那段时间里，我们的目标已经发生了变化并扩大了范围——从防撞到完全自动驾驶。” “虽然我们今天业务的核心是让人类驾驶的汽车更安全，但我们正在不知疲倦地努力实现自动驾驶汽车的未来。”</p><p></p><p>自主性是实现 Mobileye 长期目标的关键。根据招股说明书，高管们认为 ADAS 的潜在市场总额（TAM）为 160 亿美元，但预计 ADAS 和自动驾驶的潜在市场近期将在 400 亿美元左右，长期潜力约为 480 亿美元。</p><p></p><p>Bernstein 分析师 Toni Sacconaghi 认为 Mobileye 对市场预测有些过度乐观。“虽然 ADAS 几乎是近期机会的全部，但长期 TAM 偏重于自动驾驶汽车，尤其是机器人出租车”。</p><p></p><p>值得注意的是，尽管自 2012 年以来， Mobileye 的复合年增长率保持较高水平。但这家公司的增长故事似乎已经渐入尾声。</p><p></p><p>数据显示，在 2017 年，英特尔收购之前，Mobileye 的收入增长率已经在下降了，此后，收入增长持续放缓。如下图显示，Mobileye 的同比 (YoY) 收入增长从 2013 年的 102% 下降到 2022 年上半年（1H22 ）的 21%。Mobileye 的同比变化为 21%，低于 2019 年大流行前 26% 的水平。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/7e/e4/7e91ecd4f61bbb1974b137f2e489b1e4.jpeg\" /></p><p></p><p></p><p>Mobileye 收入同比变化</p><p></p><p>而且，Mobileye 的业务越来越集中于少数客户。如下图所示，Mobileye 的前三大客户占 Mobileye 1H22 收入的 73%，高于 2019 年的 62%。&nbsp;&nbsp;</p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6a/6a860fc61ab5f36110aa7ebf1393df23.jpeg\" /></p><p></p><p>Mobileye 在自动驾驶领域也面临着激烈的竞争。根据 Guidehouse Insights 自动驾驶系统排行榜，Mobileye 在 2021 年十大自动驾驶公司中排名第八，低于 2020 年的第五名。</p><p></p><p>在自动驾驶出租车市场，Mobileye 提到，其竞争对手包括 Cruise 和 Alphabet 的 Waymo， Aurora Innovation Inc. AUR 等。此外，其消费级 AV 竞争对手包括 Apple AAPL 、 Sony SONY 和特斯拉，他们正在为消费者开发自动驾驶汽车。</p><p></p><p>与 Mobileye 不同的是，驾驶辅助和自动驾驶行业的大多数竞争对手都经营其他盈利业务，这些业务为他们提供了研发实现自动驾驶技术所需的资金。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/99/99459b2bf485464900f6689eb0aa548a.jpeg\" /></p><p></p><p>Mobileye 的盈利能力与竞争对手对比</p><p></p><p></p><h3>Mobileye 上市，恐无法拯救英特尔</h3><p></p><p></p><p>Mobileye 于 2014 年首次上市，估值约为 50 亿美元，随后英特尔于 2017 年以 153 亿美元收购了它。</p><p>当时，英特尔收购 Mobileye 之时， 正值自动驾驶技术的热潮，许多高管宣称完全自动驾驶指日可待，而且是一个很容易解决的问题。</p><p></p><p>去年 12 月，英特尔宣布打算在 2022 年年中之前推动 Mobileye 上市。然而，由于市场情况动荡，该计划一再推迟。9 月 30 日， Mobileye 终于申请了 IPO。</p><p></p><p>而虽然终于上市了，只是现在，它以较小的估值出售了较少的股票。这意味着， Mobileye 首次公开募股并没有成为其母公司所需的一剂强心剂。这家芯片制造商对这家自动驾驶技术公司的投资并没有达到预期的效果。</p><p></p><p>英特尔 CEO Pat Gelsinger 对 Mobileye 大力押注，并对其 IPO 寄予厚望。英特尔正在改造其核心业务，现在制造和装备更多的制造工厂变得越来越贵，据悉，英特尔在北美和欧洲新建晶圆厂和封装厂的投资高达 700 亿美元。英特尔希望 Mobileye 上市后的收益可以为这些计划“输血”。</p><p></p><p>但不幸的是，今年的美国 IPO 市场正处于 20 年来最糟糕的状态。即使是在过去几年上市的公司也没有什么希望，去年在美国上市且交易价格低于 IPO 价格的公司比例高达 87%。</p><p></p><p>高通胀、利率上升和供应方面的限制也在考验芯片制造商。但还有更多的不利因素拖累了英特尔，今年，英特尔的业务起起落落。</p><p></p><p>一方面，PC 出货量直线 下降，导致对其处理器的需求下降。随后，美国商务部又以新规则对英特尔等同行进行了打击，要求芯片制造商获得个人许可证才能在中国销售先进芯片。因此，英特尔无法将其任何当前一代芯片（小于规定的 14 纳米阈值）出口到其主要市场之一。数据显示，英特尔去年来自中国市场的收入占其总营收的 27%。</p><p></p><p>收入未见起色，而且 Mobileye IPO 的表现平平，英特尔在扩张的同时，正在想方设法节约成本。英特尔与加拿大的布鲁克菲尔德资产管理公司签署了一项协议，在几年内为其提供了额外的 150 亿美元的自由现金流，以支付英特尔扩大其亚利桑那州晶圆厂业务所需的 300 亿美元中的一半，这家私募股权公司将获得该项目 49% 的股份。</p><p></p><p>此外，据报道，这家芯片制造商将在 11 月 开始裁员。“这些总是艰难的决定，但我们的成本太高，利润太低。我们必须采取行动解决这些问题，” 首席执行官 Pat Gelsinger 在对员工的视频讲话中说。</p><p></p><p>10 月 15 日，据报道，知情人士透露，由于 PC 市场增速放缓，英特尔计划展开大规模裁员，涉及人数可能达到数千人，包括销售和营销事业群在内的一些部门的裁员比例可能达到 20% 左右。</p><p></p><p>企查查显示，英特尔集团在中国共有 11 家成员企业，其中 3 家已注销，共有 20 家分支机构。其中，英特尔（中国）有限公司成立于 1994 年 1 月，注册资本约 2.6 亿美元，经营范围包括计算机系统集成及技术服务、从事新产品及高新技术的研究开发等，由英特尔亚洲控股有限公司全资持股。企查查风险信息显示，英特尔（中国）有限公司关联多个劳动合同纠纷；英特尔亚太研发有限公司、英特尔产品（成都）有限公司均存在多起劳动争议和劳动合同纠纷案件。</p><p></p><p>参考链接 ：</p><p></p><p>https://www.forbes.com/sites/greatspeculations/2022/10/25/no-automated-profits-in-mobileyes-ipo/?sh=14b0951d2423</p><p></p><p>https://qz.com/the-mobileye-ipo-can-t-save-intel-in-distress-1849686472</p><p>https://www.forbes.com/sites/greatspeculations/2022/10/25/no-automated-profits-in-mobileyes-ipo/?sh=14b0951d2423</p>",
    "publish_time": "2022-10-26 15:07:30",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "微软：GitHub年收入达10亿美元，拥有9千万活跃用户",
    "url": "https://www.infoq.cn/article/1s4tJwDHpM5zTbeScaRI",
    "summary": "<p>当地时间 10 月 25 日，微软发布了<a href=\"https://click.linksynergy.com/deeplink?id=nOD/rLJHOac&amp;mid=24542&amp;u1=[]vg[p]23186944[t]w[r]https://techurls.com/[d]D&amp;murl=https://www.microsoft.com/en-us/Investor/earnings/FY-2023-Q1/press-release-webcast\">2023财年第一财季财报</a>\"。在财报电话会议中，微软还宣布了GitHub的一些数据。GitHub是一个在线软件源代码托管服务平台，于2018年被微软公司收购。据微软称，GitHub 现在的年经常性收入为 10 亿美元，高于收购时所说的 <a href=\"https://www.cnbc.com/2018/06/05/github-interest-from-google-and-others-revenue-about-300-million.html\">2 至 3 亿美元</a>\"。</p><p>&nbsp;</p><p>该公司还宣布，现在GitHub平台拥有超过 9000 万活跃用户，高于收购完成时所提到的 2800 万，以及去年 11 月 Thomas Dohmke 取代 Nat Friedman 担任GitHub首席执行官时的 7300 万。</p><p>&nbsp;</p><p>这标志着微软在收购完成后首次分享GitHub的财务数据。</p><p>&nbsp;</p><p>微软首席执行官Satya Nadella在财报电话会议上表示：“GitHub 现在的年经常性收入为 10 亿美元，GitHub 的开发者至上精神从未如此强烈。” “超过 9000 万人使用GitHub——跟收购时相比，数据增长了三倍。”</p><p>&nbsp;</p><p>GitHub同时提供付费账户和免费账户。这两种账户都可以创建公开或私有的代码仓库，但付费用户拥有更多功能。许多开发人员，<a href=\"https://www.infoq.cn/article/ewgLo1XFw52E0BjwFHei\">尤其是开源倡导者</a>\"，此前非常担心微软收购后会改变GitHub的服务方式，并减少其免费产品以从中榨取更多资金。但从目前情况看来，免费服务并没有减少。另外，如果没有微软的帮助， <a href=\"https://www.infoq.cn/article/weSmeUflc2RhAVvoR5Xt\">GitHub Copilot </a>\"可能也没法实现。</p>",
    "publish_time": "2022-10-26 15:48:01",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "人群圈选效率提升 30 倍，云积互动基于 Apache Doris 构建统一数仓的实践",
    "url": "https://www.infoq.cn/article/PiUelj8v3KdWhylRMZx6",
    "summary": "<p>云积互动，全称深圳市云积分科技有限公司，成立于 2014 年，是国内领先的 AI 驱动的消费者运营服务提供商，致力于发展消费者运营相关理论、技术、算法、模型及软件工具，为全球消费性企业提供基于 AI 的消费者运营系统及运营策略服务，打造消费者运营领域最佳服务和实践标准，帮助企业构建消费者运营核心能力，以应对当前及未来的场景化运营挑战。</p><p></p><p>目前已成为天猫、京东、抖音、腾讯等主流电商和社交平台深度合作伙伴，服务客户 2300+，其中世界 500 强客户超过 18 家，包括全球第一的美妆、日化、医药集团，均深度服务超过 7 年。</p><p></p><h3>业务需求</h3><p></p><p>云积互动的主要业务是以消费者运营为核心，包含了会员通，CRM，策略营销，数据资产等一系列业务（如下图所示）。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/fe/18/fed438fe4f2770bbac0622cfc04e7f18.png\" /></p><p></p><p></p><p>早期云积互动的大数据需求较少，起步也比较晚，2019 年才开始搭建基于 CDH 的大数据平台，因此大数据平台的主要目的是为了满足早期较为单一的 BI 数据看板及报表功能。近年来，随着业务量快速增长，数据量的增长，业务对数据的实时性及灵活性提出更高的要求，大数据平台也从早期的只需要满足单一的 BI 服务需求，扩展到需要支持各业务线，包含圈人服务，人群分析，AI智能数据等多种业务需求。早期基于 CDH 的大数据平台已无法满足当前难度以及复杂度较高的的业务需求。</p><p></p><h2>大数据平台的迭代</h2><p></p><p></p><h3>早期数仓架构</h3><p></p><p>早期公司业务量较少，基于 Hive+Spark 构建的离线数仓即可满足早期大数据的需求。早期架构主要用于支持 BI 相关功能，数据大屏，自助报表等应用，大部分的指标仅要求 T+1 的指标，早期架构完全可以满足。</p><p></p><p>下图为云积互动早期数仓架构，早期的数据源主要为业务数据库 MySQL 以及日志，数据通过 Streamsets 实时采集数据并经 ETL 后传入ODS层，存储到 Kudu 中，通过 Impala 对 ODS 层的数据进行处理，实现实时查询业务的需求。通过 Hive 构建了离线数仓的 DWD、DWS 以及 DIM 层，使用 Spark 进行离线任务的计算与调度，最终处理并计算完成的数据输出到 MySQL 和 Kylin 中，应用于上层业务应用及分析。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/c1/f7/c1067136f47c40e3a8c02d28069e9ff7.png\" /></p><p></p><p></p><p>存在的问题</p><p></p><p>查询效率低：使用 Impala 多表查询速度太慢，亿级别表 Join 时，查询时间基本上在 3 分钟以上，部分复杂查询会在超过 3 分钟左右判定超时；同时使用 Impala 并行查询对内存消耗较大，影响其他任务运行。存储成本太高：使用多个系统存储数据（ Hive，Hbase，Kudu），存储成本较高，随着业务量的增长，数据量指数级的增多，存储成本更是成倍数增加。开发难度大：数仓开发基于代码，不能满足灵活的指标需求，当分析需求越来越多时，存在多个场景组合查询、自定义等查询场景，面对这样的场景，必须进行再开发，开发和时间成本都很高。数据链路长：较长的链路使得数据的一致性很难保证，数据在某一环节出现问题，排查难度高，运维成本也会增加。</p><p></p><h3>技术选型</h3><p></p><p>基于业务对数据实时性及灵活性更高的要求，我们在 2021 年初对当前市面上较为流行的分析引擎 ClickHouse 和 <a href=\"https://www.infoq.cn/article/JpZR7aT1waRlUhbsSrjr\">Apache Doris </a>\"进行了调研，调研中我们发现， <a href=\"https://www.infoq.cn/article/rLwih7JefQQW11sgv7HL\">Apache Doris</a>\" 具有高性能、简单易用、实现成本低等诸多优势。基于此，我们决定在部分业务上开始使用  Apache Doris，在使用的过程中逐渐发掘出 Apache Doris 更多强大之处以及优势，Apache Doris 在很多方面十分贴合我们的诉求，因此，我们决定在 2022 年全面应用 Apache Doris 在数据仓库中，基于 Apache Doris 构建云积互动企业级数仓，选择 Apache Doris 的主要原因如下：</p><p></p><p>该架构开发效率高，查询性能远高于 Hive数仓 ETL 由原来的 Spark 任务改为 Doris SQL 任务，使用 SQL 开发模式可进行快速迭代，开发效率提升了近一倍Doris 查询支持物化视图索引加速，Doris 在 1.0 版本开始引入了向量化引擎，性能提升 2~3倍，平均查询耗时降低了 60%。该架构对 OLAP 支持更好，支持更为灵活的查询。Doris 支持 Cube 函数，实现了 Kylin 的多维计算功能，极大的减少了 SQL 的开发量。Doris 支持 Bitmap 类型，可实现人群之间的快速交并差计算并落地新人群。支持主键唯一和聚合模型的表，极大的减少了开发难度。使用主键唯一模型可做到依据主键数据覆盖，自动实现数据更新功能。使用聚合模型的表，减少了 ETL 过程中的 Join 操作，同时解决了上层数据到达时间不一致而导致的数据关联不上的问题。</p><p></p><h3>新数仓架构</h3><p></p><p>最开始使用新的数仓架构主要是要解决圈人速度慢的问题，圈人服务的核心在于人群圈选，通过 SQL 代码或标签取值组合等多种方式，实现人群查找，帮客户找到符合画像的人群，现在各行各业都会设计广告营销场景，其中也包括云积互动，而如何快速准确找到对的人推送广告就成了大数据场景需要解决的问题。当时我们只是在部分功能上使用了 Apache Doris，用 Apache Doris 替代了 Spark+Impala 来实现实时圈人功能，出乎意料的是，Apache Doris 投入使用之后效果极佳。新版架构的实时圈人业务平均每个任务时间由 3~5 分钟提升至 10 秒左右，并且在人群落地方面，使用存储更小的 Bitmap 代替原来的人群落地为表，不仅数据管理方便，而且磁盘空间占用减少了 80% 左右。</p><p></p><p>除此之外，在一段时间的使用和学习中我们发现 Apache Doris 丰富的功能和核心优势，综上原因，我们产生了用 Apache Doris 数仓替代 Hive 数仓的想法，并迅速的付诸于实践。</p><p></p><p>当确定数仓使用 Apache Doris 之后，结合当前的业务需求以及早期架构需要解决的问题，需要将多平台数据打通，构建统一数据口径和数据指标，我们将数据仓库构建分为：ODS 层，DWD 层，DWS 层和 ADS 层，下图为各个分层主要负责的数据类型。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/16/dd/16a753b27d49712f2797b3613a14yydd.png\" /></p><p></p><p></p><p>新数仓的分层逻辑如下：</p><p></p><p>ODS 层：从业务侧、日志系统和埋点系统等拉取过来的数据，按照原字段名存入 ODS 层。</p><p></p><p>DWD 层：数据按照维度进行拆分，轻度聚合，将多个平台数据按照同一标准定义进行处理。</p><p></p><p>DWS 层：主要负责数据的聚合、数据宽表、基于维度的一些计算指标等等。值得注意的是，DWS 层中的部分表使用了 AGGREGATE KEY 模型， AGGREGATE KEY 模型可以提前聚合数据，适合报表和多维度业务，可以有效避免数据汇总时的 Join 操作，部分指标可以使用该表特性实现，无需敲代码，降低了开发成本。</p><p></p><p>ADS 层： 各业务模块根据各自的需求，将数据从 DWS 层汇聚数据指标到 ADS 层。</p><p></p><p>架构设计</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/54/62/5424ae5b692513a0cf47570a8f44ce62.png\" /></p><p></p><p></p><p>数据接入</p><p></p><p>业务数据 MySQL 存储在多台 RDS 中，因 Binlog 的留存时间较短，且数据存放于多服务器，同时还进行了分库存储，因此如何接入历史数据以及如何同时接入多个库的数据成了棘手的问题。在调研过程中我们发现 FlinkCDC 可以完美解决上述问题：FlinkCDC 可以在接入历史数据之后自动切换为读取 Binlog，且 2.x 版本已经支持断点续传，支持水平扩展，支持动态添加表。</p><p></p><p>日志和埋点数据我们采用 Kafka + Doris Routine Load 导入方式，Routine Load 支持支持用户提交一个常驻的导入任务，通过不断的从指定的数据源读取数据，将数据导入到 Doris 中，支持 Json 解析，并且可以做一些简单的 ETL，极大的减少了代码开发的工作。</p><p></p><p>数据加工</p><p></p><p>数据加工采用了 Doris SQL、Insert into 的方式将增量计算完的结果导入到数仓分层中（ODS\\DWD\\DWS\\ADS）。因业务需求对数据的实时性允许存在一点延迟性，因此将 Dolphinscheduler 设置为每 5 分钟调度一次增量 SQL；同时设置数仓每一层错峰执行任务，避免任务堵塞。</p><p></p><p>对于数据量比较小的表可以用一个 SQL 完成导入，而对于数据量大的表，为避免 union，需要分成多个 insert into 来执行。但有些大表的逻辑是多个大表的 Join 结果，对于这种场景，我们应用 AGGREGATE KEY 模型的表来解决，利用表的聚合特性来代替 SQL 的 Join 操作。</p><p></p><p>任务调度</p><p></p><p>任务调度一直沿用 Dolphinscheduler，页面化的操作简单方便，且对 SQL 的支持友好，整个大数据平台的任务都是通过该调度器完成。目前使用了2.x以上的版本，支持使用钉钉报警和邮件报警的功能来监控任务，任务失败将通过钉钉或者邮件发送。</p><p></p><p>监控</p><p></p><p>使用 Prometheus+Grafana 对 Doris 集群和 Flink 任务进行监控管理，页面化的监控，极大的减少运维成本。</p><p></p><h2>优化方案：</h2><p></p><p>使用 Flink CDC 启动多个同步任务后，磁盘 IO 飙升导致查询延迟变高对接多个数据源 CDC 任务同步数据时，中间数据写入 Kafka 进行合并和数据消峰，减少写入 Doris 的任务数。调整 DorisSink 写入频率，控制每批次数据量。优化部分表的分区分桶，降低数据分片数量。Doris 1.1.0-rc05 版本偶发后台合并线程持续合并已删除的 Tablet, 合并持续失败且数据版本最多的那个 Tablet 的版本数量升高至 150 左右使用元数据管理工具 meta_tool 删除已失效的 Tablet 元数据，版本数量显著下降，稳定在 30 左右对大表的超过两年的数据做冷备份，减少大表的 Tablet 数，降低整个 Doris 集群对 Tablet 的管理压力。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/de/7b/de227de38bf131ff68b50fa46065007b.png\" /></p><p></p><p></p><p>Bitmap 存储散列用户 ID，使用 Bitmap 相关函数计算时性能较差用户唯一 ID 通过字符串转换生成，基数大且非常稀疏；使用全局字典生成紧凑的 ID 代替，优化后性能提高近五倍</p><p></p><h2>总结和收益：</h2><p></p><p>Apache Doris 构建的离线+实时数仓一体化，采用 SQL 开发，并用 Dolphinscheduler 一键部署调度，极大的降低开发难度和开发工作量，可进行快速迭代以满足目前行业日益增长的数据需求。新架构采用 Flink+Doris 的架构体系，FlinkCDC+StreamLoad 可以做到流批一体化数据接入，减少了组件的使用，解决了数据的冗余存储，服务器资源节省了 30%，数据存储磁盘占用减少 40%，同时组件的运维成本大大减少。Doris的易用性极高，支持 MySQL 协议和标准 SQL，各业务线均可通过查询 MySQL 的方式进行数据查询，极大的减少了学习成本。</p><p></p><p>从 2021 年 Apache Doris上线云积互动的第一个业务至今，Apache Doris 在云积互动内部已成为大数据服务的基础，承担了包括人群分析、报表查询、指标计算等场景下的在线/离线需求，在较小的集群规模下支持了每天近2万次的用户在线分析查询。</p><p></p><h2>未来规划</h2><p></p><p>目前新的数据仓库已经建设完成，基于 Apache Doris 较多优异特性以及与业务需求较高吻合性，当前团队已经在着手搭建基于 Apache Doris 的数据质量管理和数据血缘，后续我们计划基于 Apache Doris 搭建数据指标体系。下面简单分享一下我们在数据质量管理和数据管理的实现想法。</p><p></p><p>数据质量管理</p><p></p><p>在 Apache Doris 的 ODS 层建表时设定一些非空主键，这些字段都是业务逻辑上的必须字段，当数据接入会给定一些默认值，这样就可以清晰的分类出这些数据，在质量分析中进行输出；在 ETL 中也会存在一些逻辑错误数据，这类数据会通过定时的 Doris SQL 脚本进行输出，同时也可以反馈到业务侧进行数据修复。</p><p></p><p>数据血缘</p><p></p><p>依托 Doris 提供的 SQL 审计功能，使用采集工具 Filebeat/Logstash 持续采集审计日志发送到Kafka，使用开源的 SQL 解析工具或者抽取 Doris 的 SQL 解析模块针对 DDL 或者 DML 进行解析，解析后的数据存入图数据库或者关系型数据库供业务端展示；该功能的实现对于数据问题排查、数据资产管理均有意义。</p><p></p><p>围绕着 Apache Doris 为核心的数据平台建设目前也在一直迭代发展，当然在使用中也发现了该产品的一些需要优化的地方，但不可否认它优秀的性能和丰富的功能，后续我们也将持续不断地进行优化，将优化方案贡献给 Apache Doris 社区。</p><p></p><p>作者介绍：</p><p>王杰：云积互动大数据团队leader，负责数据平台研发及数据治理。</p><p>蒙磊：云积互动大数据高级开发，负责数据平台研发和数仓开发。</p>",
    "publish_time": "2022-10-26 16:10:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "企业应用开发需求激增，低代码的价值和风险都不可忽视",
    "url": "https://www.infoq.cn/article/UdGTsgRmdWEUxMxV3Aii",
    "summary": "<p>越是充满不确定性的市场环境，越是考验企业的应变能力。这些不确定性，既来自难以预测的“黑天鹅”事件，也来自更加多变和多样的客户需求，它们促使企业业务必须在任何变量发生时，及时做出对应调整。</p><p></p><p>而这里的“调整”，并不仅仅停留在策略层面，还需要企业应用作为承载，包括新增应用来支持新业务的组织开展，也包括在原有的企业应用基础上延展更丰富的系统功能。尤其是在<a href=\"https://www.infoq.cn/video/vZCyL8c1iBoflL8RfjOi\">数字化</a>\"背景下，企业越来越多的业务向线上迁移，无论是内部的协作，还是对外的交互，都需要越来越多的数字原生应用来支持他们实现弹性和灵活性。</p><p></p><p>于是，近几年来企业应用市场出现了高速增长。根据Forrester此前的数据统计，全球企业应用市场的规模在2020年已经达到9000亿美元。如果按照市场5%左右的增长率估算，今年全球企业市场已经超过万亿美元。</p><p></p><p>但是，海量企业应用需求激增的背后，是巨大的开发人员缺口。如今，数字化转型的主角是各个行业中的传统企业，过去技术开发人员在这些企业里的配比非常低，在面临越来越多的应用开发需求时，很多企业显得力不从心。</p><p></p><p>正是在这样的背景下，“<a href=\"https://www.infoq.cn/article/lqvpIfkpbiv6Q7vO7N2A\">低代码</a>\"”又来到了聚光灯下。</p><p></p><h1>不止量变，企业应用还呈现云原生化、定制化</h1><p></p><p></p><p>普华永道中国数字化与科技咨询服务合伙人李临生，在日前的微软商业应用2022媒体发布暨用户大会上介绍了全球企业应用发展的具体特点：</p><p></p><p>从技术层面看，<a href=\"https://xie.infoq.cn/article/8b27bcfde2fbd7148c052830d\">云原生</a>\"趋势越来越明显，比如微软Dynamics 365过去提供的是本地部署版本，在近几年也完成了向云原生的升级，企业可以借助其中的Power Platform低代码开发平台，快速拓展应用，满足过去SaaS无法实现的业务场景需求；</p><p></p><p>从需求层面看，受到疫情影响，远程办公、桌面协同的需求不断加深，企业间的交易也日趋线上化，这催生了很多外部连接的企业应用；</p><p></p><p>从商业模式看，按量付费的订阅模式的接受度越来越高，企业应用市场开始从以场景为中心、一次性买断的方式向关注客户使用情况的方向演进。</p><p></p><p>除此之外，在中国，企业应用市场也呈现了一些不同于海外的特征。比如，对移动应用的需求更大；比如，需求成熟度不够，很多企业甚至不知道自己的需求是什么，应用开发比较盲目，试错频率更高；再比如，系统的二次开发和定制化需求更多等等。</p><p></p><p>“拿美国来说，他们的企业已经经历了精细化运营的阶段，很多业务都能够实现标准化。但中国企业过去十多年处于高速增长时期，管理模式还不稳定，变化频率非常高，标准化就很难。所以，我们更需要一些类似于低代码的方式，帮助企业适应快速迭代的环境。”李临生表示。</p><p></p><h1>从一个应用到多个应用，再到无穷创新</h1><p></p><p></p><p>据<a href=\"https://www.infoq.cn/article/1s4tJwDHpM5zTbeScaRI\">微软</a>\"大中华区商业应用事业部总经理李威介绍，微软<a href=\"https://www.infoq.cn/article/PPjm219eVKgsvIIPz4TP\">Power Platform</a>\"提供的正是这样一个低代码平台。“通过低代码开发能力，让企业中的所有人员，不管他是什么样的职能，是不是有技术专业背景，都能参与到数字化应用开发过程中。我们可以帮助企业把现有的一个应用变成多个应用，然后实现无穷创新。”</p><p></p><p>比如，企业中过去已有的ERP、CRM等核心业务系统，通常来说，不会频繁地做替换。但是，随着业务发展和市场变化，这些业务系统相对固定的功能就难以再匹配企业业务创新的需要，这时候，Power Platform就可以帮助企业在原基础上搭建出延展性的模块和应用。</p><p></p><p>Power Platform最早是<a href=\"https://www.infoq.cn/article/H8CJyfOhbQW*gQT8L3Pd\">Dynamics 365 </a>\"的可扩展性模型，2019年，它从Dynamics 365 脱离出来作为一个独立产品。具体包括了商业数据分析工具Power BI、应用开发工具Power Apps、业务流程自动化工具Power Automate、网站开发工具Power Pages，以及甚至不需要任何编码就能生成聊天机器人的Power Virtual Agents等等。</p><p></p><p>2020年，Power Platform正式在华商用，和微软智能云<a href=\"https://www.infoq.cn/article/YPEcYYPmN4uCJb5pqjIG\">Azure</a>\"、Microsoft 365以及Dynamics 365实现了连接。</p><p></p><p>“除了企业应用开发本身的需求之外，我们也看到很多企业在数字化进程中遇到的另一个挑战，就是当应用越来越多，在操作过程中往往要在很多界面之间切来切去，这带来了很多额外工作。同时，这种繁琐的过程有时候还会带来操作失误。而通过不同平台的无缝集成，比如，Microsoft 365、Dynamics 365和Power Platform的连接，企业很多工作就可以在同一个界面里完成。”李威强调。</p><p></p><p>举例来说，当企业销售人员在Outlook里收到一封邮件，就不再需要去其它应用查找发件人的相关信息，而是可以直接在Dynamics 365的CRM平台里查看到该发件人的购买记录等等；当相关人员在Power Platform开发了最新的功能、流程，也能直接同步整合到Teams，实时优化企业的沟通和协同办公流程。</p><p></p><h1>低代码的潜在风险，以及应对办法</h1><p></p><p></p><p>不过，低代码虽好，也有它的潜在问题和风险。</p><p></p><p>从使用者的角度来说，企业里的每一个人，不管有没有代码基础，都可以通过低代码开发平台变成开发者。这一方面使得企业应用数量呈指数级增长；另一方面，没有技术背景的人员开发的企业应用的稳定性、安全性也可能会受到挑战。</p><p></p><p>举例来说，很多低代码厂商提供的封装代码模块是未经企业开发人员检查测试的，开发过程中代码“不可视”，如果应用出现bug，不仅排查和解决的效率低，而且成本还高；与此同时，如果低代码平台本身的代码模块存在漏洞，那么这个漏洞就会随着代码片段被复制到各个地方，造成系统性风险；而在企业内部，非技术人员由于不具备开发知识，人为出错的概率也更高，这种情况带来的风险可大可小。</p><p></p><p>“当企业应用一多，最头疼的是IT部门。”微软大中华区 Power Platform 高级产品市场经理桑璐璐坦言，这时候，企业就需要更强的治理模型来管控风险。</p><p></p><p>换句话说，低代码的使用，往往要伴随企业应用治理方式的优化。在传统的软件开发过程中，企业一般都会有对应的安全流程确保开发过程的标准化，而在低代码模式下，就必须把安全标准延展到低代码环境。</p><p></p><p>桑璐璐告诉InfoQ记者，微软充分考虑到了这些问题，并且在Power Platform低代码平台中提供了专门的<a href=\"https://www.infoq.cn/video/MGUUzAtk1mO69BXdKftY\">治理</a>\"工具，既鼓励大家去开发自己的应用，同时保证代码安全和代码质量。</p><p></p><p>比如，Power Platform内置了一套供技术人员进行应用管理的管控程序。IT管理人员只要进入到管理中心，就可以用APP赋权给需要被赋权的人员，并且查看哪些APP由谁创建和使用，使用的情况如何，并随时根据需求做出调整；同时，还可以对非相关人员进行权限设置。这一来加强了管控，二来也避免了资源浪费。</p><p></p><p>而针对代码的质量和可靠性，Power Platform还提供了对应的检测功能，企业可以针对平台的应用、流程、机器人等功能的性能、安全性和可靠性进行检测。加上内置的测试机制，在每次应用开发和更新完成后，平台还会自动测试脚本，从而提升代码的可靠性。</p><p></p><p>此外，桑璐璐还强调，Power Platform基于的是CoE理念，在平台中还有预制好的套件，企业可以直接免费下载，查看由微软总结的，能够指导企业如何更合规、安全地管理企业应用的最佳实践。</p><p></p><h1>数字技术是通胀时代的通缩力量</h1><p></p><p></p><p>在微软商业应用2022媒体发布暨用户大会上，微软还宣布以微软与强生医疗中国的合作基础模型，推出面向医疗和生命科学领域的医疗<a href=\"https://xie.infoq.cn/article/71e30ef2eff57fb126b13d65d\">行业云</a>\"套件。而这个行业云的搭建，依托的正是Dynamics 365以及Power Platform。</p><p></p><p>据李威介绍，此前的几年时间里，微软与强生合作，帮他们构建了渠道管理、客户管理平台，打造了集团统一的端到端销售、渠道和数据分享流程。“在这个过程中，我们发现面向医疗和生命科学有很多需求是有通用性的，比如行业相关的主数据模型、一些流程模版、接口、行业标准等等，所以，我们把它们提取出来，作为该行业云套件的核心部分，然后免费开放给我们的合作伙伴和客户。”</p><p></p><p>也就是说，基于这个以Dynamics 365和Power Platform为基座的行业云，医疗产业中相关机构都可以根据自己的业务需要，自行创建智能流程、人员体验、数据洞察等定制化的方案，从而加速数字技术与大健康产业的融合创新。</p><p></p><p>诚如不久前微软CEO<a href=\"https://www.infoq.cn/article/NXEyRIC6MjIbWQMi4KYd\">萨提亚</a>\"・纳德拉在微软的全球合作伙伴大会上提到的一个观点——数字技术已经成为整个通胀时代中的一个通缩力量。它的意思是，数字技术将帮助企业在转型和创新的过程中达到事半功倍的效果，无论是节约成本、提升效率，还是缩短商品投入市场的周期。</p><p></p><p>而在这之中，低代码作为这个“通缩力量”的分支，正在帮助企业提高开发效率，缩短应用开发周期，节约开发成本，其价值已经逐渐显现出来。</p>",
    "publish_time": "2022-10-26 16:16:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "云原生图数据库在西门子成都工厂的数智化运营实践",
    "url": "https://www.infoq.cn/article/f59Vdt8BZvUs1W4gYyQN",
    "summary": "<p>西门子工业自动化产品（成都）有限公司是西门子在中国建设的首座数字化工厂，它主要负责工业自动化相关的产品，主要的产品是PLC可编程逻辑控制器、HMI人机交互界面和IPC工业电脑，2013年上半年投产。</p><p>&nbsp;</p><p>西门子之所以将这家该工厂定义为<a href=\"https://www.infoq.cn/article/t4kD2pO5729VljDuILYN\">数字化</a>\"工厂，是希望通过数字化软件、套件SIMATIC以及相关硬件实现研发、制造、质量、管理系统的整体联动。</p><p>&nbsp;&nbsp;&nbsp;</p><p>SEWC主要负责生产SIMATIC工业自动化产品核心的控制器，比如PLC，还有人机交互界面HMI和IPC工业电脑，供应中国以及全球的市场。数字化工厂持续致力于通过数字化的解决方案，智能制造为客户提供高质量准时交付的产品。</p><p>&nbsp;&nbsp;&nbsp;</p><p>据西门子<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247577018&amp;idx=2&amp;sn=8e70b75c5e284f48e612dd3c32af6f30&amp;chksm=fbeb1475cc9c9d63faf73dbdca45e80398fd9736a9ce98d1f4b50b9597c3aacbc17f80c94c1e&amp;scene=27#wechat_redirect\">工业自动化</a>\"产品（成都）有限公司信息技术部经理杨健介绍，工厂生产线上用到的系统是OEE系统，技术人员会通过这个系统收集各种设备的状态信息，但发生宕机时，却只能借助自动化或者人工来解决相应故障。</p><p></p><h2>为什么要用到图数据库？</h2><p></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p><p>以往，解决宕机或设备故障时，更多的是靠人工，因为每一次机器设备故障的代码是不同的，这是极为复杂的问题，就需要经验丰富的资深技术人员进行分析问题、寻找解决办法，同时去更新维修记录。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p><p>但生产线上的机台的复杂度是非常高的。随着自动化程度的提高，机台更深的组成会越来越复杂，同时它的知识点又特别多，各种故障代码和故障处理的方法更是多如牛毛。</p><p>&nbsp;</p><p>此外，设备上的信息是分散的，每一个设备之间有组成的关联关系，各个设备之间还有各种复杂的互动式的关联关系。加之由于产能扩展比较迅速，很多设备进厂以后，产线的增长速度也特别快，所以导致产生的资料特别多，依赖人工处理就变得很困难。</p><p>&nbsp;</p><p>所以，西门子在培育备份员工、培养新员工、提升员工知识体系等方面都面临着挑战，迫切需要一个数字化的解决方案，而<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247500424&amp;idx=2&amp;sn=dcf22dc313db442f824fe892ca670784&amp;chksm=fbea7b47cc9df2515bd7298af0b566e868d1918153a5dfd665d835e66b11b8aa3da2fd9ad363&amp;scene=27#wechat_redirect\">图数据库</a>\"正好可以很好地解决上述问题。</p><p>&nbsp;</p><p>杨健表示：“西门子是一家相对比较传统的数字化企业，所以西门子的工厂线上使用的传统型数据库比较多，比如关系型数据库等等。图数据库在于对知识节点之间的连接和它之间的推理，以及以后的查询都有独特的优势，这也是我们拿来做<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247518792&amp;idx=2&amp;sn=da607ee3f988305570a9531a7a87c37d&amp;chksm=fbea3387cc9dba91be577de89c3da1248635786e5cdc9b660fe665db2590eff0f7e785f001e9&amp;scene=27#wechat_redirect\">知识图谱</a>\"类型的维护，以及设备机台相关信息知识沉淀的一个工具”。</p><p>&nbsp;</p><p>但市场上数据库产品众多，据权威机构统计，截至目前，市场上有两百多款数据库产品，数据库的选型问题困扰着各行各业。为什么西门子成都工厂会在众多款数据库中选择了Amazon Neptune？</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p><p>对此，杨健称：“西门子成都工厂使用了<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247574956&amp;idx=2&amp;sn=485a6041750cd877974df921fefe5330&amp;chksm=fbeb1c63cc9c9575478410a5f797324771b1fb3cd7e6d62b33012b58944360ee18aafb1f414f&amp;scene=27#wechat_redirect\">亚马逊云科技</a>\"的云服务，无需关注底层的实践，更多是直接使用它。我们还在逐渐摸索不断优化的过程中，从使用效果来看，基本上达到了我们预先设想的，能够把关联性和一些分析的推荐呈现到机台的用户端。利用亚马逊云科技图数据库Amazon Neptune后，大大节省了人工要去努力进行判断，系统能够给予一个比较及时正确的故障的判断，我们基于这个系统做进一步的人工处理，大大节省了目前的资源和能力。”</p><p></p><h2>Amazon Neptune数据库在西门子成都工厂应用实践</h2><p></p><p>&nbsp;</p><p>将Amazon Neptune数据库部署到实际生产环境中，具体是怎么实现呢？</p><p>&nbsp;</p><p>杨健介绍：“当遇到故障时，我们会将故障汇报到机台上，然后在机台上做相应的数据采集。根据数据采集的源头来分门别类把这些故障录入到系统里面。Amazon Neptune数据库会根据我们录入的各种机台之间的关联关系，比如贴片机有吸嘴库、吸嘴库里面有吸嘴等等一系列的关联关系，基于这个图数据库，结合西门子引入的机器学习归因分析和内部研发部参与的各种算法的加持，我们就可以快速定位相应的原因，这个原因就会显示在OEE系统的界面上面。这样，普通操作人员也能很快地根据这个故障大概了解到问题的核心在哪里，从而进行有效的处理。”</p><p>&nbsp;&nbsp;&nbsp;</p><p>此外，西门子成都工厂引入了云数据库后，并没有对原有的系统和应用模式进行替换，目前还是主要采取互补的形式。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p><p>杨健表示：“至少在工业领域还存在着对实时性、安全性要求比较高的场景，所以我们不太可能把本地化传统的数据全部进行云原生化的替换，所以目前最主要的场景都是互补的。”</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p><p>将Amazon Neptune部署在实际生产环境也需要和其他基础软件做一些适配工作。云端的服务要通过某种API暴露出来，才能够被边缘端非常好的调用，这个也要适配本地的OE系统，实现API的调用，从而实现结果的互动。</p><p>&nbsp;</p><p>可以看到，从研发、生产制造、运维等角度来讲，Amazon Neptune云原生数据库的应用的确为西门子成都工厂带来了不少好处。</p><p>&nbsp;&nbsp;&nbsp;</p><p>对于研发来说，可以更好地实现市场定位，快速提供决策支持，快速获取各种产品与环境的关系，设计与生产的关系、设备与产品的关系、产品与零部件的关系、零部件与材料的关系以及供应商与采购商的关系，这样就能够及时发现、及时处理。</p><p>&nbsp;&nbsp;&nbsp;</p><p>对于生产制造来说，西门子成都工厂主要处理的是各种核心工艺、设备之间的关系，物料存储之间的关系，质量检测，生产、计划、能力、消耗等等一系列知识结构的体系化，争取能够实现动态自动的处理，为生产人员提供快速准确的应对帮助。</p><p>&nbsp;&nbsp;&nbsp;</p><p>对于运维保障来说，<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247555544&amp;idx=1&amp;sn=86d9baa52ce54636512cdb90ea752b84&amp;chksm=fbeaa017cc9d2901307e836b7508be74c77bf0d9b1ab8c6d99814aacc8479f9987fb845b9fc2&amp;scene=27#wechat_redirect\">云数据库</a>\"真正可以做到对运维的支持，比如说结构、使用手册、维护手段等等能够把它很好固化起来，同时能够通过非常友善方便而且及时专时专用的方式提供给使用者。同时还够提供多元化的方式，通过多种渠道进行相关的数据采集定位，找到问题，真正降低整个产线的故障成本。</p><p>&nbsp;</p><p>杨健称：“综合来看，实际上在整个生产的生命周期我们都拥有了这样一个知识体系以后，就能够真正做到知识的不断推进，结合亚马逊云科技图数据库Amazon Neptune技术、Amazon S3存储、计算服务等能够真正实现基于工厂无缝的基础架构的运维支撑，同时，又能够享受到高质量基于人工智能、基于图数据库的服务。”</p><p>&nbsp;</p>",
    "publish_time": "2022-10-26 16:21:39",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Webpack 创始人推出比Webpack“快700倍”的Turbopack，基于Rust编写",
    "url": "https://www.infoq.cn/article/iKecr1k4eQMMpCaaXEDr",
    "summary": "<p>10月26日，Vercel公司正式宣布推出新的打包工具Turbopack。Webpack 创建者 Tobias Koppers 于 2021 年 4 月加入该公司，牵头了该项目。</p><p>&nbsp;</p><p>Turbopack 是Vercel公司之前一些工作的延续。在此之前，他们用<a href=\"https://www.infoq.cn/article/bsUPti0p4VODQ19JdPeU\">基于 Rust</a>\" 的 SWC 替换基于 JavaScript 的转译器 Babel，速度提升了 17 倍。他们还替换了 Terser，压缩的速度提高了 6 倍，从而减少了加载时间和带宽的使用。</p><p>&nbsp;</p><p>“Webpack 已被下载超过 30 亿次。它已成为 Web 构建不可或缺的一部分。但就像 Babel 和 Terser 一样，是时候全力以赴了。我加入了 Vercel，组建了一个团队来构建Web下一代的打包工具。”Tobias说。</p><p>&nbsp;</p><p>据Vercel 首席执行官Guillermo Rauch 介绍，与 Webpack 一样，Turbopack 也是开源的。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/97/97a91fc45cd76e18cbc2c5cb11dc655e.png\" /></p><p></p><p>&nbsp;</p><p>Vercel 声称 Turbopack在大型应用中，展示出了 10 倍于 Vite 的速度，700 倍于 Webpack 的速度。在更大的应用中，差异更加巨大 —— 通常比 Vite 快 20 倍。而且启动速度飞快，在一个 3000 个模块的应用里，Turbopack 只花了 1.8 秒启动，Vite 花了 11.4 秒。</p><p>&nbsp;</p><p>Rauch 说，性能改进不仅是因为基于<a href=\"https://www.infoq.cn/article/1g3Yeu0kX7UXhV3R9E0P\"> Rust</a>\" ，还在于“基于增量计算思想的架构”。该团队借鉴了谷歌Bazel构建系统中的一些想法，该系统适用于大型项目。增量方法意味着避免做重复的工作，“如果你创建一个增量图，开发人员在其中进行更改，只有受影响的图部分会被重新计算。”</p><p>&nbsp;</p><p>Turbopack——目前处于 alpha 预览阶段——是“一种更好的架构，我认为 Rust 和正确架构相结合意味着我们至少在 10 年内不需要改变，”Rauch表示。</p><p>&nbsp;</p><p>Turbopack 是怎么来的？“Next.js 早在 2016 年就开始使用 Webpack 作为组件，”他说。“我们可能是 Webpack 的最大用户。我们在开始时和Webpack 创建者 Tobias聊了很多，因为当时我们有像沃尔玛这样的客户，有超过 250 名工程师在 Next.js 代码库上工作，分享一些关于编译过程的反馈。我们意识到 JavaScript 和 TypeScript 代码的数量增长如此之快，以至于超出了基于 JavaScript 的工具和架构的能力。Tobias 也从未想过该工具会得到如此广泛的采用。”</p><p>&nbsp;</p><p>Webpack 面向单页应用程序 (SPA) ，“但我们不是，因此我们改变了Webpack 的默认设置。”当 Koppers 加入 Vercel 时，“他带来了 10 年的专业知识，见证了这件事情的发展，”Rauch 说。“他意识到架构和运行时的所有缺陷。因此，Tobias 成为了 Rust 专家。”Turbopack 一个有趣的特性是，多亏了 Rust，它可以编译成 WebAssembly 并在浏览器中运行。</p><p>&nbsp;</p><p>“Turbopack 旨在成为 Webpack 的直接替代品，Next.js 是它的第一个客户，”Vercel 首席技术官 Malte Ubl 说，“随着时间的推移，我们计划针对所有开发者用例继续迭代和改进 Turbopack。”</p><p>&nbsp;</p><p>延伸阅读：</p><p><a href=\"https://vercel.com/blog/turbopack\">https://vercel.com/blog/turbopack</a>\"</p><p><a href=\"https://devclass.com/2022/10/25/webpack-founder-debuts-rust-based-turbopack-that-is-700x-faster/\">https://devclass.com/2022/10/25/webpack-founder-debuts-rust-based-turbopack-that-is-700x-faster/</a>\"</p>",
    "publish_time": "2022-10-26 19:06:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "继美光之后，SK海力士宣布明年资本支出减半，全球存储芯片市场暴跌幅度惊人",
    "url": "https://www.infoq.cn/article/4IfbhjAHEF3RI4kpS9Xt",
    "summary": "<p>10月26日，韩国芯片制造商SK海力士表示，将把明年的资本支出削减一半。</p><p>&nbsp;</p><p>HMC投资证券的科技研究主管Greg Roh认为，削减资本支出是市场一直在等待的强有力举措。Roh认为，海力士为缓解供过于求状况而采取的举措可能会加速明年的行业复苏，DRAM服务器需求可能首先反弹。</p><p>&nbsp;</p><p>此前，受存储芯片需求滑坡拖累，SK海力士今年第三季度利润下降了60%。SK海力士第三季度的营业利润降至1.7万亿韩元（12亿美元），低于分析师预估的2.5万亿韩元；营收为11万亿韩元，低于预估的12.2万亿韩元。</p><p>&nbsp;</p><p>SK海力士表示，半导体存储行业正面临前所未有的市场环境恶化。“作为<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247575824&amp;idx=1&amp;sn=abeca7a49c985e719edd40b35dc90ba8&amp;chksm=fbeb10dfcc9c99c93c427957dbb387e7db1cac78f7b71f10c9ed8c4b58bcc05d609eb13a8e8f&amp;scene=27#wechat_redirect\">存储芯片</a>\"的主要买家，个人电脑和智能手机制造商的出货量有所下降。”</p><p>&nbsp;</p><p>海力士表示，DRAM和NAND的价格季度环比至少下跌了20%。海力士计划从利润较低的产品开始逐步减产，但仍预计短期存储芯片供应将超过需求。</p><p>&nbsp;</p><p>据悉，截至今年第二季度末，海力士的库存从去年同期的6.2万亿韩元增加到11.9万亿韩元，几乎翻了一番。部分原因是海力士<a href=\"https://www.infoq.cn/article/XDzVXCMBFuEPxdGTQwVC\">收购</a>\"了英特尔的NAND业务，该业务于去年12月成为海力士的美国子公司。</p><p>&nbsp;</p><p>海力士并不是第一家采取类似行动的厂商。</p><p>&nbsp;</p><p>本月月初，芯片大厂<a href=\"https://www.infoq.cn/article/VLIDZiKBqtCyrMm8mjc1\">美光</a>\"（Micron）发布最新财报时再度预警，表示未来的存储芯片需求和公司经营将面临更严重的困难，公司 2023 财年的资本支出将削减 30%。</p><p>&nbsp;</p><p>美光表示，目前存储芯片市场的挑战是“前所未见”的，但是公司管理层相信，企业规模优势将帮助美光度过这一难关。</p><p>&nbsp;</p><p>美国科技行业人士巴内特（Richard Barnett）表示，最近，包括苹果在内的智能手机厂商已经削减了产量目标，这加剧了供应商美光科技所面临的困难。</p><p>&nbsp;</p><p>美光首席商务官萨达纳（Sumit Sadana）表示，真正令人吃惊的，是全球存储芯片市场暴跌的幅度。萨达纳介绍说，在过去几个月，美光科技已经将个人电脑和智能手机存储芯片销售增长预期，下调了几个百分点。这位高管表示，2022 年（自然年），公司的个人电脑存储芯片销售将比去年下滑两成左右，智能手机存储芯片的销售，将下滑接近一成。</p><p>&nbsp;</p><p>10月13日，日本存储芯片生产商铠侠Kioxia宣布减少位于四日市和北上市生产线的3D NAND闪存产量，削减幅度达到30%。铠侠方面表示，降低产量的主要原因是高通胀、宏观经济不景气以及一些地缘事件造成PC、其它电子设备等需求放缓。</p>",
    "publish_time": "2022-10-26 19:59:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]