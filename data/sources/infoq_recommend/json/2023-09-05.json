[
  {
    "title": "Java近期新闻：JDK 21 RC1、Apache Camel 4.0、Payara Platform、Apache Tomcat、Micronaut",
    "url": "https://www.infoq.cn/article/3EO246XRyUiAlTfku9mv",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p>为了与Oracle的最新设计思想“在语言和类文件中表达扁平化（flattenability）”保持一致，Oracle编程语言设计师<a href=\"https://www.linkedin.com/in/dansmithjava/\">Daniel Smith</a>\"<a href=\"https://mail.openjdk.org/pipermail/valhalla-spec-observers/2023-August/002320.html\">更新</a>\"了JEP 401（<a href=\"https://openjdk.org/jeps/401\">空限制值对象存储预览</a>\"）。该提案最初名为Primitive Classes（预览版），支持值对象的空限制存储，即在字段和数组组件中将它们初始化为类的初始实例，并拒绝空值写入尝试。有关值对象的定义，可参见JEP草案8277163（<a href=\"https://openjdk.org/jeps/8277163\">值对象预览</a>\"）。</p><p>&nbsp;</p><p></p><h4>JDK 21</h4><p></p><p>根据JDK 21的<a href=\"https://openjdk.org/projects/jdk/21/#Schedule\">发布时间表</a>\"，Oracle Java平台组首席架构师<a href=\"https://www.linkedin.com/in/markreinhold\">Mark Reinhold</a>\"正式<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-August/008059.html\">宣布</a>\"，JDK 21进入第一个<a href=\"https://openjdk.java.net/jeps/3#rc\">发布候选</a>\"，因为Build 35中已经没有未解决的P1 Bug。GA版本预计将于2023年9月19日发布。</p><p>&nbsp;</p><p>JDK 21最终将包含以下15项特性：</p><p>JEP 430：<a href=\"https://openjdk.org/jeps/430\">字符串模板（预览版）</a>\"JEP 431：<a href=\"https://openjdk.org/jeps/431\">有序集合</a>\"JEP 439：<a href=\"https://openjdk.org/jeps/439\">分代式ZGC</a>\"JEP 440：<a href=\"https://openjdk.org/jeps/440\">记录模式</a>\"JEP 441：<a href=\"https://openjdk.org/jeps/441\">Switch模式匹配</a>\"JEP 442：<a href=\"https://openjdk.org/jeps/442\">外部函数&amp;内部API（第三个预览版）</a>\"JEP 443：<a href=\"https://openjdk.org/jeps/443\">未命名模式和变量（预览版）</a>\"JEP 444：<a href=\"https://openjdk.org/jeps/444\">虚拟线程</a>\"JEP 445：<a href=\"https://openjdk.org/jeps/445\">未命名类和实例主方法（预览版）</a>\"JEP 446：<a href=\"https://openjdk.org/jeps/446\">作用域值（预览版）</a>\"JEP 448：<a href=\"https://openjdk.org/jeps/448\">向量API（第六轮孵化）</a>\"JEP 449：<a href=\"https://openjdk.org/jeps/449\">弃用Windows 32-bit x86移植，准备删除</a>\"JEP 451：<a href=\"https://openjdk.org/jeps/451\">准备禁用代理的动态加载</a>\"JEP 452：<a href=\"https://openjdk.org/jeps/452\">密钥封装机制API</a>\"JEP 453：<a href=\"https://openjdk.org/jeps/453\">结构化并发（预览版）</a>\"</p><p>&nbsp;</p><p><a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-21%2B35\">Build 35</a>\"仍然是JDK 21<a href=\"https://jdk.java.net/20/\">早期访问构建</a>\"的当前构建。要了解关于该构建的更多细节，请查看<a href=\"https://jdk.java.net/21/release-notes\">发布说明</a>\"。&nbsp;</p><p>&nbsp;</p><p></p><h4>JDK 22</h4><p></p><p>JDK 22<a href=\"https://jdk.java.net/22/\">早期访问构建</a>\"<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22%2B11\">Build 11</a>\"在上周发布，其中包括Build 10的<a href=\"https://github.com/openjdk/jdk/compare/jdk-22%2B10...jdk-22%2B11\">更新</a>\"，主要是修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2022%20and%20%22resolved%20in%20build%22%20%3D%20b11%20order%20by%20component%2C%20subcomponent\">问题</a>\"。要了解关于这个版本的更多细节，请查看<a href=\"https://jdk.java.net/22/release-notes\">发布说明</a>\"。</p><p>&nbsp;</p><p>对于<a href=\"https://openjdk.org/projects/jdk/22/\">JDK 22</a>\"和<a href=\"https://openjdk.java.net/projects/jdk/21/\">JDK 21</a>\"，我们鼓励开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java Bug数据库</a>\"报告Bug。</p><p>&nbsp;</p><p></p><h4>Spring Framework</h4><p></p><p><a href=\"https://spring.io/projects/spring-framework\">Spring Framework</a>\" 6.1的<a href=\"https://spring.io/blog/2023/08/17/spring-framework-6-1-m4-released\">第四个里程碑版本</a>\"带来了依赖项升级和一些值得注意的变化，其中包括：在@TestPropertySource注解中支持资源模式；在DatabaseClient接口中支持基于类的映射；新增RowMapper接口 ，能够自动绑定到数据库字段。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-framework/milestone/330?closed=1\">问题列表</a>\"。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-data\">Spring Data</a>\" 2023.1.0的<a href=\"https://spring.io/blog/2023/08/18/spring-data-2023-1-0-m2-2023-0-3-2022-0-9-and-2021-2-15-released\">第二个里程碑版本</a>\"（代号为Vaughn）发布，新特性包括：兼容JDK 21；支持<a href=\"https://kotlinlang.org/docs/inline-classes.html\">Kotlin值类</a>\"；通过Executor接口使用虚拟线程；使用检查点协调恢复（CRaC）进行优化探索。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2023.1-%28Vaughan%29-Release-Notes\">发布说明</a>\"。</p><p>&nbsp;</p><p>类似地，Spring Data<a href=\"https://spring.io/blog/2023/08/18/spring-data-2023-1-0-m2-2023-0-3-2022-0-9-and-2021-2-15-released\">服务版</a>\"的2023.0.3、2022.0.9和2021.2.15版本修复了Bug，并升级了相应的依赖项，如：Spring Data MongoDB 4.1.3、4.0.9和3.4.15；Spring Data Elasticsearch 5.1.3、5.0.9和4.4.15；Spring Data Neo4j 7.1.3, 7.0.9和6.3.15。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-modulith\">Spring Modulith</a>\" 1.0的<a href=\"https://spring.io/blog/2023/08/16/spring-modulith-1-0-rc2-released\">第二个候选版本</a>\"带来了一些值得注意的变化，其中包括：统一使用event_publication作为关系存储的表名，以及Event Publication Registry中MongoDB的集合名；将执行器重命名为modulith，消除了之前在执行器名称中使用的破折号；显式声明@ApplicationModule(allowedDependencies ={}禁止任何传出依赖。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-modulith/releases/tag/1.0.0-RC2\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Apache软件基金会</h4><p></p><p><a href=\"https://camel.apache.org/\">Apache Camel</a>\" 4.0.0<a href=\"https://camel.apache.org/blog/2023/08/RELEASE-4.0.0/\">发布</a>\"，带来了许多Bug修复、依赖项升级、改进和新特性，其中包括：使用GraalVM支持Spring Boot 3 AOT原生编译；支持<a href=\"https://micrometer.io/docs/observation\">Micrometer Observation</a>\"；在<a href=\"https://camel.apache.org/components/3.21.x/jpa-component.html\">Camel JPA</a>\"中支持分页。要了解关于该版本的更多细节，请查看<a href=\"https://camel.apache.org/releases/release-4.0.0/\">发布说明</a>\"。InfoQ后续会带来更详细的新闻报道。</p><p>&nbsp;</p><p><a href=\"https://tomcat.apache.org/\">Apache Tomcat</a>\" <a href=\"https://www.mail-archive.com/announce@apache.org/msg08416.html\">11.0.0-M10</a>\"、<a href=\"https://www.mail-archive.com/announce@apache.org/msg08417.html\">10.1.12</a>\"、<a href=\"https://www.mail-archive.com/announce@apache.org/msg08419.html\">9.0.79</a>\"和<a href=\"https://www.mail-archive.com/announce@apache.org/msg08418.html\">8.5.92</a>\"版本在上周发布，所有四个版本都提供了Bug修复和改进，其中包括：重构HTTP/2实现，以减少使用虚拟线程时的钉选（pinning）；增加了指向OpenSSL配置文件的直通密码，例如profile =SYSTEM，而不是在试图解析它时产生错误；依赖项升级到<a href=\"https://tomcat.apache.org/native-doc/\">Tomcat Native</a>\" 2.0.5。要了解关于这些版本的更多信息，可以查看<a href=\"http://tomcat.apache.org/tomcat-11.0-doc/changelog.html\">11.0.0-M10</a>\"、<a href=\"http://tomcat.apache.org/tomcat-10.1-doc/changelog.html\">10.1.12</a>\"、<a href=\"https://tomcat.apache.org/tomcat-9.0-doc/changelog.html\">9.0.79</a>\"和<a href=\"https://tomcat.apache.org/tomcat-8.5-doc/changelog.html\">8.5.92</a>\"版本的发布说明。</p><p>&nbsp;</p><p></p><h4>Payara</h4><p></p><p>Payara<a href=\"https://blog.payara.fish/whats-new-in-the-august-2023-payara-platform-release\">发布</a>\"了<a href=\"https://www.payara.fish/\">Payara平台</a>\"的2023年8月版，其中包括社区版6.2023.8、企业版6.5.0和企业版5.54.0，其中包括一些值得注意的Bug修复，诸如：在JDK 17中无法实例化LdapCtxFactory类；由于libpam4j-repackage.jar依赖项中的错误，无法在JDK 11.0.20或JDK 17.0.8上启动Payara Server；在使用DataSource接口中定义的getConnection()方法时，由于事务状态显示错误而导致的异常。要了解关于这些版本的更多信息，请查看<a href=\"https://docs.payara.fish/community/docs/Release%20Notes/Release%20Notes%206.2023.8.html\">社区版6.2023.8</a>\"和<a href=\"https://docs.payara.fish/enterprise/docs/Release%20Notes/Release%20Notes%206.5.0.html\">企业版6.5.0</a>\"的发布说明。</p><p>&nbsp;</p><p></p><h4>Micronaut</h4><p></p><p>Micronaut基金会<a href=\"https://micronaut.io/2023/08/18/micronaut-framework-4-0-4-released/\">发布</a>\"了<a href=\"https://micronaut.io/\">Micronaut Framework</a>\"的4.0.4、3.10.1和3.9.6版本。4.0.4版本提供了模块升级：&nbsp;<a href=\"https://micronaut-projects.github.io/micronaut-graphql/latest/guide/\">Micronaut GraphQL</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-neo4j/latest/guide/\">Micronaut Neo4J</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-reactor/latest/guide/\">Micronaut Reactor</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-servlet/latest/guide/\">Micronaut Servlet</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-cache/latest/guide/\">Micronaut Cache</a>\"和<a href=\"https://micronaut-projects.github.io/micronaut-crac/latest/guide/\">Micronaut CRaC</a>\"。3.10.1版本和3.9.6版本修改了SDKMan Gradle任务，用sdkMinorRelease属性取代了sdkMajorRelease，其中还包含联合发布及公告。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/micronaut-projects/micronaut-starter/releases/tag/v4.0.4\">4.0.4</a>\"、<a href=\"https://github.com/micronaut-projects/micronaut-starter/releases/tag/v3.10.1\">3.10.1</a>\"和<a href=\"https://github.com/micronaut-projects/micronaut-starter/releases/tag/v3.9.6\">3.9.6</a>\"版本的发布说明。</p><p>&nbsp;</p><p></p><h4>Hibernate</h4><p></p><p><a href=\"https://hibernate.org/search/\">Hibernate Search</a>\" 6.2.1.Final<a href=\"https://in.relation.to/2023/08/17/hibernate-search-6-2-1-Final/\">发布</a>\"。该版本带来了一些显著的变化，其中包括：如果Spring应用程序运行在JDK 13及更高版本上，则能够读取它重新打包后的Jandex索引；如果将属性hibernate.search.backend.query.shard_failure.ignore设置为false ，则部分失败的搜索查询现在可以触发一个异常；依赖项升级到<a href=\"https://hibernate.org/orm/\">Hibernate ORM</a>\" 6.2.7.Final和Elasticsearch client 8.9.0；兼容<a href=\"https://opensearch.org/\">OpenSearch</a>\" 2.9.0。</p><p>&nbsp;</p><p></p><h4>Micrometer</h4><p></p><p><a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/README.md\">Micrometer Metrics</a>\"的1.12.0-M2、1.11.3、1.10.10和1.9.14版本发布，其中包括Bug修复、文档改进、依赖项升级和新特性，诸如：不再要求在ObservationThreadLocalAccessor类上设置ObservationRegistry接口的实例；新增类JmsInstrumentation，使用Observation API检测Jakarta Messaging Session接口的实例。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.12.0-M2\">1.12.0-M2</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.11.3\">1.11.3</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.10.10\">1.10.10</a>\"和<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.9.14\">1.9.14</a>\"版本的发布说明。</p><p>&nbsp;</p><p>类似的，<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md\">Micrometer Tracing</a>\"的1.2.0-M2、1.1.4和1.0.9版本也已经发布，其中包括依赖项升级，以及在OpenTelemetry Tracer接口中使用CurrentTraceContext接口，以便更有效地合并scope、baggage以及检查空操作。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.2.0-M2\">1.2.0-M2</a>\"、<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.1.4\">1.1.4</a>\"和<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.0.9\">1.0.9</a>\"版本的发布说明。</p><p>&nbsp;</p><p></p><h4>Infinispan</h4><p></p><p><a href=\"https://infinispan.org/\">Infinispan</a>\" 14.0.14<a href=\"https://github.com/infinispan/infinispan/releases/tag/14.0.14.Final\">发布</a>\"，带来了一些值得注意的变化，其中包括：在Infinispan测试中删除了所有的Hibernate Search 5注解；为了解决CVE，依赖项升级到Netty 4.1.94.Final和Jackson 2.15.2；InvalidatedNearRemoteCache在并发访问的情况下持久化陈旧数值的能力。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/infinispan/infinispan/compare/14.0.13.Final...14.0.14.Final\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>JHipster</h4><p></p><p><a href=\"https://github.com/jhipster/generator-jhipster-react-native/blob/main/README.md\">JHipster React Native</a>\" 4.4.0<a href=\"https://github.com/jhipster/generator-jhipster-react-native/releases/tag/v4.4.0\">发布</a>\"，新特性包括：升级到Expo 49 SDK，其中React Native版本为0.72.3；更新LICENSE文件中的通知和许可信息；更新著作权声明。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/jhipster/generator-jhipster-react-native/compare/v4.3.0...v4.4.0\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>JBang</h4><p></p><p><a href=\"https://www.jbang.dev/\">JBang</a>\" 0.110.1<a href=\"https://github.com/jbangdev/jbang/releases/tag/v0.110.1\">发布</a>\"，带来了一些Bug修复：在容器中运行时抛出NullPointerException异常；在JavaSource类的getCompileOptions()方法中使用-g标志来替换JAVAC_OPTIONS和COMPILE_OPTIONS环境变量。</p><p>&nbsp;</p><p></p><h4>Piranha</h4><p></p><p><a href=\"https://piranha.cloud/\">Piranha</a>\" 23.8.0<a href=\"https://github.com/piranhacloud/piranha/releases/tag/v23.8.0\">发布</a>\"，提供了一些值得注意的变化，其中包括：使用PiranhaConfiguration 接口进行分发；新增ExitOnStopFeature类，在请求停止所有特性后退出JVM；新增WebAppFeature类，可用于托管单个Web应用程序。要了解关于这个版本的更多细节，请查阅<a href=\"https://javadoc.io/doc/cloud.piranha/project/latest/index.html\">官方文档</a>\"和<a href=\"https://github.com/piranhacloud/piranha/issues?q=is%3Aissue+-label%3Awontfix+milestone%3A23.8.0+is%3Aclosed\">问题跟踪系统</a>\"。</p><p>&nbsp;</p><p></p><h4>Reactor项目</h4><p></p><p><a href=\"https://github.com/reactor/reactor/blob/main/README.md\">Reactor</a>\" 2023.0.0的<a href=\"https://github.com/reactor/reactor/releases/tag/2023.0.0-M2\">第二个里程碑版本</a>\"发布，将依赖项升级到reactor -core 3.6.0-M2、reactor-netty 1.1.10和reactor-kafka 1.3.20。此外，2023.0.0-M2版本也做了调整，其中reactor-pool 1.0.1、reactor-addons 3.5.1和reactor-kotlin-extensions 1.2.2 构件保持不变。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/reactor/reactor/compare/2023.0.0-M1...2023.0.0-M2\">变更日志</a>\"。</p><p>&nbsp;</p><p>同样，Reactor 2022.0.10（<a href=\"https://github.com/reactor/reactor/releases/tag/2022.0.10\">第10个维护版本</a>\"）升级了依赖项reactor-core 3.5.9&nbsp;、reactor-netty 1.1.10和reactor-kafka 1.3.20 。此外，2022.0.10版本也做了调整，其中reactor-pool 1.0.1、&nbsp;reactor-addons 3.5.1和reactor-kotlin-extensions 1.2.2构件保持不变。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/reactor/reactor/compare/2022.0.9...2022.0.10\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>Byte Buddy</h4><p></p><p><a href=\"https://bytebuddy.net/\">Byte Buddy</a>\" 1.14.6发布，带来了一些值得注意的变化，其中包括：在AgentBuilder.PatchMode 枚举中新增SUBSTITUTE枚举，在ResettableClassFileTransformer接口中新增Substitutable子接口，用于按序打补丁；在给AgentBuilder接口打补丁时，可以显式指定差异匹配器的规范；根据新版本的要求为Android创建只读的JAR文件。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.14.6\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>JobRunr</h4><p></p><p><a href=\"https://www.jobrunr.io/\">JobRunr</a>\"是一个以持久存储为基础的分布式Java后台处理库。JobRunr 6.3.0版本<a href=\"https://www.jobrunr.io/en/blog/2023-07-14-jobrunr-v6.3.0/\">发布</a>\"，修复了一些Bug，并提供了一些新特性，其中包括：支持Micronaut 4.0和Kotlin 1.9；改进JobRunr仪表板性能，减少JobRunr REST API调用；改进稳定性，尽量减少抛出<a href=\"https://javadoc.io/doc/org.jobrunr/jobrunr/latest/org/jobrunr/SevereJobRunrException.html\">SevereJobRunrException</a>\" 类的实例；新增超时机制，在必要时自动中断<a href=\"https://javadoc.io/doc/org.jobrunr/jobrunr/latest/org/jobrunr/jobs/Job.html\">Job</a>\"类的实例。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/jobrunr/jobrunr/releases/tag/v6.3.0\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Arquillian</h4><p></p><p><a href=\"http://arquillian.org/\">Arquillian</a>\" 1.7.1.Final<a href=\"https://github.com/arquillian/arquillian-core/releases/tag/1.7.1.Final\">发布</a>\"，新特性包括：修复了arquillian-bom1.7.0.Final中一个构件在使用Maven 3.6.3时抛出校验和验证错误的问题；依赖项升级到<a href=\"https://resteasy.dev/\">RESTEasy</a>\" 6.2.4.Final。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/arquillian/arquillian-core/compare/1.7.0.Final...1.7.1.Final\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>Gradle</h4><p></p><p><a href=\"https://gradle.org/\">Gradle</a>\" 8.3<a href=\"https://github.com/gradle/gradle/releases/tag/v8.3.0\">发布</a>\"，新特性包括：支持JDK 20；使用工作进程将Java编译器作为<a href=\"https://docs.gradle.org/8.3/release-notes.html#faster-java-compilation\">编译器守护进程</a>\"运行，从而加快Java编译速度；可使用<a href=\"https://blog.jetbrains.com/kotlin/2023/02/k2-kotlin-2-0/\">Kotlin K2编译器</a>\"进行实验；改进<a href=\"https://codenarc.org/\">CodeNarc</a>\"插件的输出。要了解关于该版本的更多细节，请查看<a href=\"https://docs.gradle.org/8.3/release-notes.html\">发布说明</a>\"。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/08/java-news-roundup-aug14-2023/\">https://www.infoq.com/news/2023/08/java-news-roundup-aug14-2023/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/KPPWppqtOcT3czOYQqMf\">Java 近期新闻：Payara Cloud、MicroProfile Telemetry、Foojay.io 日历、JVM 语言峰会</a>\"</p><p><a href=\"https://www.infoq.cn/article/ClW8eLeOxRUqqpHWOJCC\">Java ZGC 垃圾收集器全面增强</a>\"</p>",
    "publish_time": "2023-09-05 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "百度智能云发布千帆大模型平台2.0：42个大模型、41个数据集、10个精选应用范式",
    "url": "https://www.infoq.cn/article/ciVUckNABKM3l6sZNUid",
    "summary": "<p>9月5日，2023百度云智大会在北京正式召开。会上，百度智能云千帆大模型平台宣布实现2.0全面升级，首次公布月活企业数已近万家，覆盖金融、制造、能源、政务、交通等行业的400多个业务场景。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4d/4d9b1bc77a8da13124930357e26409e8.jpeg\" /></p><p></p><p>升级后的百度智能云千帆平台2.0拥有“四个最”：预置最多的大模型和数据集、有最丰富最全面的工具链、最佳算力效能、最完备的大模型安全方案。</p><p></p><p>相比过去，千帆平台纳管的国内外主流大模型达到42个，还预置了41个高质量有行业特色的数据集，预装了知识问答、客服对话、代码助手等10个精选应用范式，大幅降低企业使用、训练和推理大模型的门槛。对于除文心大模型之外的第三方大模型，千帆平台不只是简单的接入，还提供中文增强、性能增强、上下文增强等能力。比如，原来要用英文对话效果才好的Llama2等国外大模型，现在用中文也一样好。</p><p></p><p>工具链变得更丰富和更全面，也更加轻量化、敏捷化。过去客户验证大模型的效果至少需要一周时间，现在基于一站式的工具链，只需一天就可以跑通一个模型并看到效果。值得关注的是，千帆平台的工具链里内置了103套高质量的prompt模版，还有自动化prompt工程能力，用户做起来会更方便、更轻松。</p><p></p><p>算力服务升级后，万卡集群训练大模型时，有效训练时间达到95%以上，极大的降低了时间成本，加速比可以达到 95%，充分释放集群的整体算力。千帆平台还兼容国内外主流芯片和操作系统，企业客户的算法可以以最小的修改成本在这些硬件上运行。</p><p></p><p>千帆平台全面升级模型安全、内容安全和数据安全保障能力。千帆平台为不同模型厂商设计了可信的专用隔离域，重点保护模型资产安全。在内容安全上预置安全模块，可以有效控制输入和输出的安全风险。在数据安全方面，千帆平台提供从模型、数据到日志的全链路加密，为模型厂商和用户提供可信任的执行环境。</p><p></p><p>“料多、好用、高效、放心”，百度集团执行副总裁、百度智能云事业群总裁沈抖用四个关键词形容百度智能云千帆大模型平台2.0。</p>",
    "publish_time": "2023-09-05 09:55:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "首届FCon全球金融科技大会正式起航，让金融数字化少走弯路",
    "url": "https://www.infoq.cn/article/2LP2mhqz1laUde9AmP8U",
    "summary": "<p>由极客邦科技旗下&nbsp;InfoQ&nbsp;极客传媒主办的首届<a href=\"https://www.infoq.cn/article/RZGMPJ7LgFy1HLhGy0KE\">&nbsp;FCon</a>\"&nbsp;全球金融科技大会正式起航，大会将于11月19日-20日在上海举办，话题聚焦当前金融行业遇到的问题，以及在数字化转型过程中的痛点等，将邀请国内外金融企业和金融科技公司的专家进行分享。</p><p></p><p>在9月2日的InfoQ《超级连麦.数智大脑》FCon起航系列直播中，极客邦科技创始人兼CEO霍太稳（Kevin）抽丝剥茧地分享了本次<a href=\"https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5\">FCon</a>\"大会举办的背景和初衷。</p><p></p><p>霍太稳表示，经过多年来对QCon全球软件开发大会、ArchSummit全球架构师峰会等一系列技术大会品牌的运营，极客邦认为，线下会议是链接知识输出方和需求方的重要桥梁。通过这一桥梁，可以快速地把业界成功案例分享给更多人、更多企业，而对于参与者而言，也可以通过知识的输入，快速吸取经验，在具体的工作中少走弯路。</p><p></p><p>与此同时，在服务各行各业的客户过程中，极客邦也逐渐发现，除了互联网等数字原生企业之外，越来越多的传统企业也在通过数字化转型探寻业务发展的第二曲线。基于这一背景，极客邦也将“推动数字人才全面发展，助力数字中国早日实现”作为公司愿景，致力于打造全球领先的数字人才发展平台。</p><p></p><p>其中，金融行业作为数字化转型的领先者，其实践与经验不仅将给同行业者予以参考，同时也将为其头发行业的数字化认知与转型带来启发。“我们希望可以复制QCon、ArchSummit等技术大会的成功经验，邀请金融科技领域最顶尖的公司、最顶尖的专家，在FCon这个会议平台上，分享他们的最佳实践。”霍太稳表示。</p><p></p><p>此外，在直播中，极客邦科技事业合伙人、InfoQ极客传媒总经理汪丹还与本届大会联席主席、度小满数据智能部总经理杨青进行了<a href=\"https://www.infoq.cn/news/bgkwHfzwe1vee7qlRpmf\">连麦</a>\"，探讨了金融数字化转型的现状，以及大模型等技术将如何助力金融业转型与创新。</p><p></p><p>据了解，度小满在&nbsp;AI&nbsp;领域已经有较多投入，长期以来一直在探索&nbsp;AI&nbsp;怎么更好地服务金融，尤其是信贷业务的难题，例如如何高效地获客、如何更好地识别风控，如何去更好地提升企业经营效率等等。对此，杨青在直播过程介绍了大模型在金融行业的应用特点，以及度小满基于以上思考认知的探索方向应用。</p><p></p><p>杨青是度小满金融的数据智能部总经理和技术委员会执行主席，目前正专注于&nbsp;AIGC&nbsp;在金融场景中的应用，带领团队发布了国内首个千亿中文金融大模型“轩辕”。同时，他作为FCon大会联席主席，也将在大会期间带来精彩分享。“期待FCon大会能够为金融科技行业带来更多的创新交流和合作的机会，以科技引领行业创新，大家共同推进行业的进步和发展。”</p><p></p><p>本届大会为期两天，包括半天Keynote主题演讲，以及10多个专题论坛。目前已经确认的大会联席主席还包括汇丰科技中国区代理总经理马国栋、蚂蚁集团副总裁兼首席技术安全官/韦韬博士、以及恒生聚源总经理吴震操。</p><p></p><p>专题设置上，涵盖“金融数字化转型挑战探索”、“金融大模型应用”、“基于AI与大数据的风控系统建设\"、\"金融大数据实时计算平台”等等目前比较热门技术和行业话题，聚焦金融行业在业务发展和数字化转型过程中的各种痛点。内容深度上，延续InfoQ的内容价值观，以实践为驱动，将邀请行业内的顶尖专家，为大家提供最具有实践参考意义的干货内容。</p><p></p><p>现阶段，大会嘉宾仍在持续邀约中，了解更多详情请点击链接：<a href=\"https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5\">https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5</a>\"</p><p></p><p>目前为FCon大会售票的早鸟期，前100位购票的观众可以享受5折的优惠（只限前100位），咨询购票可联系：13269078023（微信同手机号）</p><p></p><p></p>",
    "publish_time": "2023-09-05 12:05:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "AI大模型时代下的算力需求与挑战 | InfoQ《极客有约》",
    "url": "https://www.infoq.cn/article/axAUyTihpRTtlJBa20la",
    "summary": "<p>算力是信息时代的新生产力，也是 AI 的三大要素之一。随着 ChatGPT 在全球范围内掀起 AI 大模型热潮，AI 算力需求也实现了大爆发。当前 AI 大模型的算力需求特点是什么？怎样才能降低算力的使用门槛？IT 基础设施如何应对大模型不断增长的算力需求？本期，我们邀请到了浪潮信息 AI 应用架构师 Owen Zhu 博士，为大家分享 AI 大模型时代下的算力需求与挑战。</p>",
    "publish_time": "2023-09-05 13:47:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "百度智能云千帆平台月活企业数近万家，李彦宏：将推出文心大模型4.0",
    "url": "https://www.infoq.cn/article/EW0alWL1AfMtLrEBFdJf",
    "summary": "<p>时隔六个月，百度智能云交出大模型服务的成绩单。9月5日，2023百度云智大会宣布，千帆大模型平台上月活企业数已近万家，覆盖金融、制造、能源、政务、交通等行业的400多个场景。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/8f/8f389e1a093055bd26d33ac190576b68.png\" /></p><p>（百度智能云千帆大模型平台上月活企业数已近万家）</p><p>&nbsp;</p><p>很多企业已经感受到了大模型带来的智能力量。百度创始人、董事长兼首席执行官李彦宏表示，百度的目标是打造好大模型的基础能力，支持好AI原生应用开发。不久后，我们就将推出文心大模型4.0版本。我们希望创业者在文心大模型之上，可以做出AI时代的爆款应用。</p><p>&nbsp;</p><p>为了帮助企业更快的用上、用好大模型，百度智能云在大会上宣布四大举措：全新升级百度智能云千帆大模型平台；基于文心大模型重构数字政府、金融、工业、交通四大行业解决方案；发布覆盖服务营销、办公提效、生产优化三大领域的11款面向通用场景的AI原生应用；推出大模型新生态政策，为伙伴提供资金、算力、技术、营销等全方位的强力支持。</p><p></p><h2>百度智能云发布千帆大模型平台2.0：纳管42个国内外主流大模型</h2><p></p><p></p><p>百度智能云千帆大模型平台是百度智能云在3月推出的全球首个一站式的企业级大模型生产平台，不仅提供基于文心一言或者第三方开源大模型的大模型服务，还提供全套工具链和开发环境，帮助企业开发自己的专属大模型。</p><p>&nbsp;</p><p>“任何新技术的真正落地，都需要相应的方法论和工具的支撑。”百度集团执行副总裁、百度智能云事业群总裁沈抖表示，“我们用了半年时间，不断沉淀经验、积累工具，对千帆平台做了大量升级，让千帆大模型平台更好用、更贴心。”</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fe/feb0ef0243cf336e546bc71e447c3113.png\" /></p><p>（9月5日，百度智能云发布千帆大模型平台2.0）</p><p>&nbsp;</p><p>升级后的百度智能云千帆大模型平台2.0拥有“四个最”：预置最多的大模型和数据集、有最丰富最全面的工具链、最佳算力效能、最完备的大模型安全方案。</p><p>&nbsp;</p><p>本次重大升级，千帆平台纳管的国内外主流大模型达到42个，还预置了41个高质量有行业特色的数据集，预装了知识问答、客服对话、代码助手等10个精选应用范式，大幅降低企业使用、训练和推理大模型的门槛。对于除文心大模型之外的第三方大模型，千帆平台不只是简单的接入，还提供中文增强、性能增强、上下文增强等能力。比如，原来要用英文对话效果才好的Llama2等国外大模型，现在用中文也一样好。</p><p>&nbsp;</p><p>升级后的工具链变得更丰富和更全面，贯穿大模型完整的生命周期，也更加轻量化、敏捷化。过去客户验证大模型的效果至少需要一周时间，现在基于一站式的工具链，只需一天就可以跑通一个模型并看到效果。值得关注的是，千帆平台的工具链里内置了103套高质量的Prompt模版，还有自动化Prompt工程能力，用户做起来会更方便、更轻松。</p><p>&nbsp;</p><p>千帆平台还持续升级了算力服务，进一步降低客户的算力成本和时间成本。万卡集群训练大模型时，常规方法下，工程师们有30%-40%时间都花在容错和故障恢复上。现在，百度智能云自研的集群组网故障管理机制，使模型有效训练时间达到95%以上。基于分布式并行训练策略，千帆平台在万卡规模集群中的加速比可以达到 95%，充分释放集群的整体算力。千帆平台还兼容国内外主流芯片和操作系统，客户的算法可以最小的修改成本运行。</p><p>&nbsp;</p><p>安全是企业客户非常关心的话题。千帆平台全面升级模型安全、内容安全和数据安全保障能力。千帆平台为不同模型厂商设计了可信的专用隔离域，重点保护模型资产安全，预置安全模块，可以有效控制输入和输出的安全风险。在数据安全方面，千帆平台提供从模型、数据到日志的全链路加密，为模型厂商和用户提供可信任的执行环境。</p><p>&nbsp;</p><p>“料多、好用、高效、放心”，沈抖用四个关键词形容百度智能云千帆大模型平台2.0。</p><p>&nbsp;</p><p>金山办公通过千帆平台接入了文心一言，快速推出了“WPS AI ”，这是中国协同办公赛道首个落地的生成式AI应用。文心一言的中文优势，让WPS AI更符合中国人的办公习惯。千帆平台上丰富的安全机制为金山办公构建了四道安全防线，全面提升内容安全。金山办公首席执行官章庆元表示，WPS AI自9月5日起正式面向社会开放，率先应用在WPS智能文档。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/22/22c3c0e5ea0f374132424c56c2b453b4.png\" /></p><p>（金山办公首席执行官章庆元宣布，WPS AI自9月5日起正式面向社会开放）</p><p></p><p>此外，基于千帆平台，软通动力发布两大智能化招聘系统，分别为面向大型企业的通聘宝Pro版、面向中小企业的梧桐招聘Plus版。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a5/a5640bd4e64747e9b494d35e53b99bbd.png\" /></p><p>（基于百度智能云千帆大模型平台，软通动力发布两大智能化招聘系统）</p><p>&nbsp;</p><p>百度的很多产品也在基于千帆平台进行重构。百度网盘推出“云一朵”智能助理，通过自然对话，“云一朵”就可以帮助用户快速搜索文件和视频、总结知识、翻译文档，甚至进行内容创作。截至8月31日，“云一朵”智能助理累计使用人数已经超过600万。</p><p></p><h2>打造千帆平台产业样板间：发布4大行业解决方案+11个AI原生应用</h2><p></p><p></p><p>大模型在产业落地尚属早期，很多企业不知道该怎么用大模型，百度智能云率先在政务、金融、工业、交通四大行业打造了“行业样板间”。</p><p>&nbsp;</p><p>百度智能云发布了基于文心大模型重构的四大行业解决方案，数字政府解决方案——九州、金融解决方案——开元、工业解决方案——开物、智能交通解决方案——ACE3.0。</p><p>&nbsp;</p><p>九州可以让城市管理者只需要一句话、一个问题，就能获得更精细的城市治理处置建议，还可以让每个来办事的老百姓都能有一个自己专属的办事助手，办事服务变得像“唠家常”一样简单。</p><p>&nbsp;</p><p>类似的“智能助手”同样在金融行业发挥重要作用。每天，金融分析师有超过70%的时间都花在信息收集、数据加工和内外沟通上。开元打造的各类“岗位助手”，可以高效处理信息和数据，使金融分析师的时间真正用在业务分析上。</p><p>&nbsp;</p><p>目前，海淀城市大脑基于“九州”探索多项AI原生应用，进行场景试点打磨，目标是能针对任意主题，通过简单对话就可以将各类事件连接盘活，快速生成指标统计、数据对比，总结出市民最关注的事情，数分钟内给出处置建议。北京海淀区副区长徐振涛表示，对于大模型技术，我们正积极筹划，从基础设施建设和场景应用两个层面不断探索，百度文心大模型等国内领先的大模型参与其中。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/cc/cc0f39aea9425a96062b0d52528c2335.png\" /></p><p>（北京海淀区副区长徐振涛出席2023百度云智大会）</p><p>&nbsp;</p><p>在工业领域，重构后的开物不但能够用更少的数据样本、更短的时间构建出类似质量管控、安全生产、生产调度等产线智能应用，还可以帮助管理者通过自然语言交互方式，快速获取生产经营情况，做出决策并执行。开物还可以辅助地方政府做“强链、补链”的分析决策，促进产业链的全局优化。过去，百度开物聚焦于垂直行业的特定场景化赋能，新开物将实现从“产线智能 ” 到 “企业智能” 再到“产业链智能” 的跨越与提升。</p><p>&nbsp;</p><p>国家能源集团旗下的榆林能源与百度智能云合作的煤矿智能辅助运输管理系统，在大量车辆、安全、环境、经营数据中，解析出安全和效率更优的技术路径和管理策略，对比传统人工调度方式，可以大幅提高资源利用率，降低能耗和设备损耗。国家能源集团榆林能源智能管理中心主任陈湘源表示，通过系统的大规模应用和不断训练优化，辅助运输效率和安全管控能力将得到大幅度提升，后续将深化与百度等人工智能技术领先企业合作，为煤炭行业高质量发展提供助力。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ee/ee43dae3255666fda65594694ec0a9da.png\" /></p><p>(国家能源集团榆林能源智能管理中心主任陈湘源出席2023云智大会)</p><p>&nbsp;</p><p>ACE 3.0利用了大模型强大的知识压缩能力，将车、路、云、图的基本能力和交通全要素进行了聚合和泛化升级，打造了交通大模型，有效提升了交通感知、认知、预知能力。以前，交警部门识别像抛洒物这样的事件不是很精准，现在有了大模型，识别能力大幅提升。据云智大会现场演示显示，高速数字人“简璐璐”实现了24小时、无死角、不间断的自动巡游，对模拟的京哈高速异常停车事件几分钟内完成上报和应急处理。</p><p>&nbsp;</p><p>为了让企业快速用上大模型，百度智能云还推出了11款企业通用场景的AI原生应用，覆盖服务营销、办公提效、生产优化三大领域。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/fb/fb4103db1db6ece2276b180e6cc2458a.png\" /></p><p>（百度智能云推出11款企业通用场景的AI原生应用）</p><p>&nbsp;</p><p>在服务营销领域，“百度智能云曦灵”数字人平台进行了“形”、“神”两大升级。在形象方面，可用原来三分之一的成本、十分之一的制作周期，渲染出媲美好莱坞级别的高清3D数字人，并成为全行业唯一可以“小时级”实现超写实数字服装制作和穿着的平台。在人设及灵魂上，升级后的数字人将拥有强大的通识知识，并融会贯通金融、文旅、电商等各领域专业知识，塑造个性化人设。</p><p>&nbsp;</p><p>在办公领域，百度智能云发布了企业搜索引擎“甄知”。当员工在任何时候需要一条内容，只要告诉甄知，都可以跨模态、跨应用，迅速找到。让企业搜索真正成为帮助员工提高生产力的得力助手。同时，甄知已经可以实现“知识找人”，可以向员工推送可能感兴趣的文档，辅助员工持续学习。</p><p>&nbsp;</p><p>在安全生产领域，百度智能云安全生产智能助手“度安安”正式发布。它的能力来源于老师傅多年积累的安全生产经验。它可以把各种安全预警归类总结，整理地清清楚楚，同时可以自动生成巡检工单，让管理人员能快速知晓全局安全态势，迅速做出处置。中海油旗下的大型炼化企业大榭石化通过引入“度安安”，实现了安全隐患秒级预警，事故响应速度提升了50%。</p><p></p><h2>面向四类伙伴，发布大模型生态伙伴计划</h2><p></p><p></p><p>百度集团副总裁袁佛玉认为，大模型时代的生态体系，会有三个重大特点：应用生态的位置将更加核心；拥有行业专业知识的企业迎来巨大机遇和挑战；初创企业与开发者将带动生成式AI的应用繁荣。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/a4/a48eee0a4c8e4a533478d3b882550c3a.png\" /></p><p>（百度集团副总裁袁佛玉）</p><p></p><p>面向下一个阶段，百度智能云宣布了一系列大模型生态伙伴计划。第一，发展10家核心综合性伙伴，提供价值超过10亿的商机支持、1000万元专项资金支持；第二，发展100家核心应用软件开发伙伴，设立联合解决方案专项资金，落地百度智能云千帆AGI HOUSE专项培训；第三，计划支持1万家初创企业，落地“AI加速器”项目，推出千帆大模型社区，定期举办大模型相关赛事，激发创新活力；第四，广泛支持代理伙伴体系转型升级，将大模型服务触达百城千县。</p><p>&nbsp;</p><p>为了推动AI创新应用，繁荣文心大模型生态，百度在5月31日启动了“文心杯”创业大赛，大赛吸引了近 1000 个项目报名，30余个具有创新性的潜力项目入围Demo开发环节，接入百度智能云千帆大模型平台，进行基于文心大模型的Demo开发。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/53/539c7e1fabb5f76349a264f28b08b2e5.png\" /></p><p>（9月5日，百度“文心杯”创业大赛结果揭晓）</p><p>&nbsp;</p><p>百度“文心杯”创业大赛结果9月5日也同时揭晓，15个优胜团队中，基于文档智能的专业知识问答助手及阅读平台ChatDOC、基于大模型的智能电商购物助手Buysmart.AI获得一等奖，其余团队分获二、三等奖。优胜项目将获得百度最高千万级别的投资，同时，百度将在业务合作、技术辅导、市场宣传等方面提供长期支持。</p>",
    "publish_time": "2023-09-05 13:55:13",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "宇谷金融科技研究院院长吴易璋确认出席 FCon ，分享银行数字化转型在风控领域的实践",
    "url": "https://www.infoq.cn/article/LWzrM9p9R4TyuJlQCuQg",
    "summary": "<p><a href=\"https://fcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=atricle\">FCon 全球金融科技大会</a>\"，将于 11 月在上海召开。宇谷金融科技研究院院长吴易璋将发表题为《<a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5518?utm_source=infoqweb&amp;utm_medium=article\">银行数字化转型在风控领域的实践</a>\"》主题分享，介绍银行数字化风控是什么，零售业务、对公授信以及小微普惠，这些银行核心业务的数字化风控体系该如何构建，需要借助哪些工具，注意哪些环节，掌握什么技能，如何落地实施等等，这些问题都是银行数字化转型过程中首先要搞清楚的问题。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5518?utm_source=infoqweb&amp;utm_medium=article\">吴燕克（笔名：吴易璋）</a>\"《银行数字化风控：业务与实践》作者，《银行数字化转型 101 问》系列视频课制作者，银行数字化转型讲师。曾担任北京银行总行专职审贷官 10 年以上，参与设立 3 家持牌消费金融公司并负责风控工作，曾任北银消费金融公司风控负责人、海尔消费金融公司风险总监、包银消费金融公司风险总监等。银行风控领域深耕 20 余年，在银行零售业务、对公授信业务、普惠金融业务方面，积累了十分丰富的风控经验。</p><p></p><p>近 8 年来，致力于为银行业和金融机构提供咨询与培训方面的服务，服务范围涵盖消费金融、互联网贷款、银行数字化风控与银行数字化转型等热点内容。服务的银行及非银行金融机构已经超过 500 家，典型的代表有：农业银行总行及分行、交通银行总行及分行、华夏银行总行及分行、中信银行总行及分行、兴业银行总行及分行、浦发银行总行、邮储银行、工商银行、 建设银行、湖南银行、苏州银行、江苏银行、深圳农商行、广州银行等。他在本次会议的演讲内容如下：</p><p></p><p>演讲：银行数字化转型在风控领域的实践</p><p></p><p>银行数字化转型是近几年银行业最火热的话题，银行数字化风控是大多数银行特别是中小银行的当务之急，更是银行数字化转型的重中之重，特别是零售业务中的智能反欺诈、对公授信的数字化做法以及数字普惠金融等内容，本身也是部分领先银行都涉足不深的领域。</p><p></p><p>那么，银行数字化风控究竟是什么，零售业务、对公授信以及小微普惠，这些银行核心业务的数字化风控体系该如何构建，需要借助哪些工具，注意哪些环节，掌握什么技能，如何落地实施等等，这些问题都是银行数字化转型过程中首先要搞清楚的问题。</p><p></p><p>演讲提纲：</p><p></p><p>银行风控演进之路</p><p>○ 银行数字化风控演进的四个阶段：从风控 1.0 到风控 4.0 </p><p>○ 传统风控与数字化风控的最大区别——欺诈风险与信用风险“孰先孰后”？</p><p></p><p>对公授信业务数字化风控——全流程数字化智能应用</p><p>○ 数字化解决传统风控模式的四大痛点</p><p>● 信贷员难以多方广泛收集企业信息 </p><p>● 审贷官贷款审查标准不一致 </p><p>● 贷后管理与风险预警挂一漏万 </p><p>● 管理者无法及时全面可视化掌握风控全貌 </p><p>○ 案例分析：从 J 公司破产事件，看对公授信数字化风控如何实现对企业多维度风险预警</p><p></p><p>零售数字化风控命门——黑产识别与智能反欺诈</p><p>○ 日益猖獗的互联网金融欺诈揭秘 </p><p>○ 银行智能反欺诈策略、方法与常用技术 </p><p>○ 案例分析：“10 亿元骗贷大案”警示：黑产如何利用银行大数据风控漏洞攻击银行线上业务</p><p></p><p>数字普惠金融——金融科技破解普惠难题</p><p>○ 农村数字普惠金融的典型做法 </p><p>○ 信贷资金流向监控的两种方法</p><p></p><p>你将获得：</p><p></p><p>○ 分析银行零售、对公以及普惠金融的数字化风控体系建设与金融科技实践应用，展现银行数字化风控全貌</p><p>○ 数字化驱动银行业务发展，帮助银行相关业务人员全面提升数据思维与数字化风控能力</p><p>○ 帮助银行用数字化方式解决传统风控难题，提升风控精准度</p><p>○ 帮助银行理顺农村数字普惠金融的业务思路，破解农村普惠金融困境</p><p>○ 帮助金融科技公司了解银行业务及数字化工具如何应用于业务流程</p><p></p><p>除上述演讲外，FCon 上海还将围绕&nbsp;<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1580?utm_source=infoqweb&amp;utm_medium=atricle\">DevOps&nbsp;在金融企业落地实践</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1591?utm_source=infoqweb&amp;utm_medium=atricle\">金融行业大模型应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1576?utm_source=infoqweb&amp;utm_medium=atricle\">创新的金融科技应用</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1577?utm_source=infoqweb&amp;utm_medium=atricle\">金融实时数据平台建设之路</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1588?utm_source=infoqweb&amp;utm_medium=atricle\">金融安全风险管控</a>\"、<a href=\"https://fcon.infoq.cn/2023/shanghai/track/1589?utm_source=infoqweb&amp;utm_medium=atricle\">数据要素流通与数据合规</a>\"等进行交流。</p><p></p><p>FCon 上海 2023，相约 11 月！现在购票，前 100 人可享 5 折特惠购票，咨询购票请联系：13269078023（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8ec7f7fb25c7949931b2b8a5deffddd.png\" /></p><p></p>",
    "publish_time": "2023-09-05 14:37:18",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "革命性软件定义存储 HBlock，极致易用背后的技术解析",
    "url": "https://www.infoq.cn/article/sxFrOm3N9pvSYOE3AXpo",
    "summary": "<p>近日，天翼云联合 InfoQ 举办了以“存储难题新解法，揭秘极致易用的 HBlock”为主题的线上技术分享会”。天翼云国际业务事业部存储产品线总监潘亚莲与研发专家武志民参与了第一期分享，以“革命性软件定义存储 HBlock，极致易用背后的技术解析”为主题，讲解了 HBlock 在产品理念、应用场景、技术架构设计等方面的内容，本文将对其观点进行详细阐述。</p><p></p><h2>天翼云推出革命性软件定义存储 HBlock&nbsp;&nbsp;</h2><p></p><p></p><p>IDC 预测，到 2025 年我国数据量将增长到 48.6ZB，这给企业存储系统的容量、性能、运维、成本、灵活性等维度带来全方位挑战。此外，由于过度配置、数据孤岛、冗余备份、低访问速度、低效搜索，以及中断性的传输和迁移等操作，机房存在存储资源利用率低的问题。</p><p></p><p>为了解决异构存储和数据孤岛给企业带来的存储高成本、低效率的难题，天翼云研发出业界首款存储资源盘活系统——HBlock。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8a/8a1373925c037be483174be130c4685c.png\" /></p><p>HBlock 整体视图</p><p></p><p>HBlock 是一款全用户态的软件定义存储产品，能够和底层基础设施完全解耦，和服务器上现有的业务并存，可以把通用的 X86、ARM、龙芯等不同架构的服务器和它上面管理的存储资源统一管理，转换成高性能的虚拟存储阵列，通过标准的 iSCSI 协议提供分布式块存储服务。</p><p></p><h2>高效管理，轻松盘活&nbsp;&nbsp;</h2><p></p><p></p><p>用户可以通过 HBlock 对自己的存储资源进行全面高效的管理与使用，这些是通过管理平面各种功能来实现的。从管理平面上看，HBlock 分为四层：访问接入层、校验层、服务层和数据层。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e8/e85e7920c3d748d333e9f12999faa504.png\" /></p><p></p><h2>HBlock 管理平面</h2><p></p><p></p><p>在访问接入层，用户可以使用 API、命令行、管理控制台的方式，对 HBlock 进行灵活、直观、全面的管理。</p><p></p><p>在校验层，HBlcok 采用 HTTPS、加密鉴权以及接口校验的方式来确保接入的安全。</p><p></p><p>在服务层，用户可以根据自己本地硬件资源来选择创建单机版或集群版服务端，3 分钟就可完成部署，对存储资源进行创建、删除、扩容、统计、监控等操作。使用过程中出现任何问题，天翼云工程师都可以远程协助，接入到系统进行故障诊断排查，若考虑到隐私问题，也可以将运行日志发送给天翼云工程师进行排障。用户也可以设置邮件地址，来及时接收系统的告警信息。</p><p></p><p>在数据层，HBlock 对用户的数据进行统一管理，通过独特的技术架构实现高性能。</p><p></p><h2>HBlcok 极致易用背后的关键技术&nbsp;&nbsp;</h2><p></p><p></p><p>HBlock 不光为用户提供了高效、全面、灵活的管理手段，还提供了极高的性能。这一切的背后，是优秀的技术架构。HBlock 的技术架构从上到下分为三层：访问层、存储服务层和操作系统及硬件层。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8d/8dc47d86f1dd9043639f037ea4fc4911.png\" /></p><p>HBlock 技术架构</p><p></p><p>最上方是访问层，通过 iSCSI 提供块存储服务，通过 API、命令行、Web 界面提供管理服务，还支持 OpenStack、K8S 的 CSI driver 等管理方式。</p><p></p><p>中间是存储服务层，其核心是分布式租约模块，它是天翼云完全自研的，不要求时钟强一致或频率强一致，就可以给数据服务和管理服务，提供一致性保证。</p><p></p><p>存储服务层还提供利旧检测功能，用户在安装 HBlock 之前，可以利用这个工具对磁盘、网络、CPU、内存，从多个性能维度进行综合检测，让用户尽早的对各个部件的性能有基准的认识，识别出潜在的性能短板。</p><p></p><p>存储服务层的另一个重要模块是缓存，这是 HBlock 高性能优化的重点，后面会详细介绍。</p><p></p><p>存储服务层还包括 HA、数据冗余、故障域、数据重构等模块，提供了高可用、高可靠保障。IO 调度、索引、数据均衡模块，根据智能调度算法，保证各个节点、各个磁盘负载均衡，及时移出出现性能瓶颈的组件。</p><p></p><p>最下方操作系统和硬件层，HBlock 做到了真正的硬件异构。例如，对于不同规格的磁盘，在分配数据的时候，会根据磁盘的容量，负载，性能表现，网络时延，等信息去动态分配不同权重，然后计算出不同分配方式，保证各个组件在集群里发挥出最好的性能。</p><p></p><h3>写缓存的多模式匹配&nbsp;&nbsp;</h3><p></p><p></p><p>HBlock 作为块存储产品，其性能最直观地反映在数据读写能力上。HBlock 是通过写缓存与读缓存的设计来实现高性能的，接下来，我们就详细了解一下 HBlock 写入与读取数据的过程。</p><p></p><p>首先，看一下写入数据流：</p><p></p><p>客户端发起写请求，数据正常放到写缓存以后，继续往下到第二个备节点的写缓存，写成功最终才会向客户端反馈成功。那这样既可以保证数据在两个节点都有（避免了单点故障），又可以保证数据不需要落盘，到缓存就结束，IO 路径也可以尽量短，这样写的延时是相对比较低的。这是 HBlock 写入的基本流程，也被称为 WriteBack。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/51/51996276c78feea46beb5bb3b0ce3c17.png\" /></p><p>Write back</p><p></p><p>数据在写缓存里，根据不同的策略执行落盘。有定量策略，比如脏数据达到一定的比例后就会落盘，有定时策略，比如脏数据达到一定的时间了就落了。还有主动策略，比如客户端如果主动的发过来 sync 命令，也会落盘。落盘后会把数据放到读缓存，之后更新索引。</p><p></p><p>可能有用户会担心：虽然避免了单点故障，但是如果数据已经写入内存返回写入成功，但还未落盘这段时间，集群整体发生故障，数据一样会丢。</p><p></p><p>针对这种担心，HBlock 设计了另外两种写缓存模式，WriteThrough、WriteAround。</p><p></p><p>WriteThrough 模式下，数据到写缓存以后会继续等待数据落盘，等到数据真正落完盘以后再去向客户端反馈成功。</p><p></p><p>WriteAround 跟 WriteThrough 很类似，唯一的区别就是最后一步，它在落完盘以后数据不会进入到读缓存。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/00/00d9af9573c5d6ad1ef614d794d97cd8.png\" /></p><p>WriteThrough 与 WriteAround</p><p></p><p>这三种不同的写缓存，它们有各自的适用场景。比如 WriteBack，它的数据都是到内存就结束，所以它的读写性能相对来说比较高。WriteThrough 和 WriteAround 每次数据都要落盘，所以它的写性能相比 WriteBack 来说要低一些。对于 WriteAround 来说，因为最后数据不进读缓存，所以它更适合于写多读少的场景，相应它占用的内存也是最少，所以在具体使用的时候，可以根据不同的业务场景去做不同的配置。</p><p>可以将三种缓存模式总结成下表：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e9/e930899d0419f738ffc5a8e2cd86bcb1.png\" /></p><p></p><p>关于 WriteThrough 和 WriteAround，因为每次写都会落盘，会明显增加系统调用，更严重的是会增加对磁盘 sync 的次数。因此 HBlock 设计了自适应的写缓存，根据客户端的并发情况和磁盘的负载表现，去动态的调整对 sync 合并的时机，去平衡写请求等待时间和底层磁盘压力。</p><p></p><h3>读缓存与预读器的优化机制&nbsp;&nbsp;</h3><p></p><p></p><p>了解完数据写入流程，接着，看一下数据读取流程：</p><p></p><p>读请求到达以后，会依次从写缓存、读缓存中寻找数据。若没找到数据，就会到相应的磁盘上直接读，HBlock 会根据网络距离和节点负载选择最合适的节点。当它读完以后会把数据放到读缓存里，最后就可以向客户端返回数据了。</p><p></p><p>考虑到时间局部性原理，刚访问过的数据，将来可能还会被访问，这些数据就进入读缓存。根据不同的场景用户可以调整读缓存的大小或直接关掉。</p><p></p><p>考虑到空间局部性的原理，刚读过的数据它相邻位数据也有可能会被读到，所以会由预读器来判断是否需要从磁盘里提前把这些数据读上。通过预读器，HBlock 大幅度提升了客户端小 IO 的顺序读的性能，减少了客户端读请求的响应延时，避免对磁盘进行频繁的小 IO 的操作，更好的发挥磁盘的性能。</p><p></p><p>以上就是 HBlock 高性能背后的各种缓存机制，它们也确实发挥出很好的效果：块存储主要的性能指标是大 IO 的带宽和小 IO 的 IOPS，与开源的 Ceph 进行对比，从带宽的角度看，HBlcok 的写性能稳定优于开源 Ceph，从 IOPS 的角度看，HBlock 的写性能更是可以达到开源 Ceph 的 3-5 倍。</p><p></p><h3>直播预告：9 月 6 日 19:00，HBlock 深度揭秘</h3><p></p><p></p><p>如何保障服务高可用、数据高可靠、服务超易用、省钱不丢数据...... 以上对于成本、性能、安全性的考量，是企业在选择分布式存储产品时的重要因素。</p><p></p><p>围绕这些问题，天翼云国际业务事业部存储研发专家武志民和天翼云国际业务事业部存储产品线总监魏玮将做客直播间，带来“HBlock 实战，深挖独创存储技术亮点”的分享。9 月 6 日 19：00，所有关于 HBlock 实战的问题，您都可以从直播间里找到答案。</p><p></p><p>扫描下方图中二维码或点击阅读原文，提前预约直播，还可参加尝鲜期活动，免费领取至高 1PB 的私有云块存储服务。看直播，享尝鲜期福利，赶快报名吧！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/67/677c8eb23f5d902de68d42446d94ace0.png\" /></p><p></p><p></p>",
    "publish_time": "2023-09-05 15:05:55",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "《英特尔®️至强®️实战课》大模型时代的云服务安全利器",
    "url": "https://www.infoq.cn/article/QJjqKuKFNsWsB6259zxm",
    "summary": "<p>英特尔与行业领先技术媒体共同打造的《英特尔®️&nbsp;至强®️&nbsp;实战课》现已上线！本系列课程为互联网、医疗、金融、制造等行业提供有启发、可借鉴的实战案例，并分享基于第四代英特尔®️&nbsp;至强®️&nbsp;及英特尔数据中心产品组合成功落地实践的经验，为IT决策者、架构师和相关从业者输出最前沿的技术干货内容。</p><p></p><p>数字化进程的迅猛发展，促使云计算技术成为企业数据存储、处理和传输的重要方式。然而，数据的大规模集中存储和云端处理也引发了企业对数据安全和隐私泄露的担忧。人工智能作为云计算落地的重要场景之一，其用户数据和模型是企业宝贵的知识资产，如若出现问题，将会造成不可估量的负面影响和经济损失。因此，如何确保数据和模型的安全隐私，成为当前大规模机器学习和应用急需解决的难题。</p><p></p><p>《英特尔®️&nbsp;至强®️&nbsp;实战课》新一期内容即将上线，大招来袭！本期以“大模型时代的云服务安全利器”为主题，邀请InfoQ极客传媒主编赵钰莹、英特尔首席工程师宋川、阿里云机密计算安全专家于国瑞、阿里云高级安全专家刘煜堃四位业内大咖，从基本原理、技术框架、场景案例等方面，详细阐述英特尔®️&nbsp;至强®️&nbsp;处理器机密计算在人工智能数据安全和隐私保护方面的应用及实践。通过本期课程，您将了解到当前云服务安全领域的前沿趋势和解决方案，并获得更专业的实战经验！</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/4e/62/4e12e9e580e334a0301abbfe25e1d762.jpg\" /></p><p></p><p></p><h3>精彩亮点：</h3><p></p><p>如何通过机密计算增强大模型应用中的隐私保护？机密计算在可信执行环境中保护数据安全的最佳案例是？TDX隔离机制是否可以保证数据保密性及完整性？机密计算如何服务于大语言模型？</p><p></p><h3>课程内容：</h3><p></p><p>【英特尔®&nbsp;至强®&nbsp;处理器机密计算赋能数据为中心的云安全】</p><p>主讲人：宋川&nbsp;-&nbsp;英特尔首席工程师</p><p>【隐私与安全同行，探索阿里云可信云架构与机密计算】</p><p>主讲人：刘煜堃&nbsp;-&nbsp;阿里云高级安全专家</p><p>&nbsp;Demo环节</p><p>主讲人：于国瑞&nbsp;-&nbsp;阿里云机密计算安全专家</p><p>圆桌讨论</p><p>赵钰莹&nbsp;- InfoQ极客传媒主编</p><p>于国瑞&nbsp;-&nbsp;阿里云机密计算安全专家</p><p>刘煜堃&nbsp;-&nbsp;阿里云高级安全专家</p><p>宋川&nbsp;-&nbsp;英特尔首席工程师</p><p>&nbsp;</p><p>点击观看完整视频 <a href=\"https://s2.uao.so/be278658\">https://s2.uao.so/be278658</a>\"</p>",
    "publish_time": "2023-09-05 16:21:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]