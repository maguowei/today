[
  {
    "title": "Java近期新闻：JDK 21 RC1、Apache Camel 4.0、Payara Platform、Apache Tomcat、Micronaut",
    "url": "https://www.infoq.cn/article/3EO246XRyUiAlTfku9mv",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p>为了与Oracle的最新设计思想“在语言和类文件中表达扁平化（flattenability）”保持一致，Oracle编程语言设计师<a href=\"https://www.linkedin.com/in/dansmithjava/\">Daniel Smith</a>\"<a href=\"https://mail.openjdk.org/pipermail/valhalla-spec-observers/2023-August/002320.html\">更新</a>\"了JEP 401（<a href=\"https://openjdk.org/jeps/401\">空限制值对象存储预览</a>\"）。该提案最初名为Primitive Classes（预览版），支持值对象的空限制存储，即在字段和数组组件中将它们初始化为类的初始实例，并拒绝空值写入尝试。有关值对象的定义，可参见JEP草案8277163（<a href=\"https://openjdk.org/jeps/8277163\">值对象预览</a>\"）。</p><p>&nbsp;</p><p></p><h4>JDK 21</h4><p></p><p>根据JDK 21的<a href=\"https://openjdk.org/projects/jdk/21/#Schedule\">发布时间表</a>\"，Oracle Java平台组首席架构师<a href=\"https://www.linkedin.com/in/markreinhold\">Mark Reinhold</a>\"正式<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-August/008059.html\">宣布</a>\"，JDK 21进入第一个<a href=\"https://openjdk.java.net/jeps/3#rc\">发布候选</a>\"，因为Build 35中已经没有未解决的P1 Bug。GA版本预计将于2023年9月19日发布。</p><p>&nbsp;</p><p>JDK 21最终将包含以下15项特性：</p><p>JEP 430：<a href=\"https://openjdk.org/jeps/430\">字符串模板（预览版）</a>\"JEP 431：<a href=\"https://openjdk.org/jeps/431\">有序集合</a>\"JEP 439：<a href=\"https://openjdk.org/jeps/439\">分代式ZGC</a>\"JEP 440：<a href=\"https://openjdk.org/jeps/440\">记录模式</a>\"JEP 441：<a href=\"https://openjdk.org/jeps/441\">Switch模式匹配</a>\"JEP 442：<a href=\"https://openjdk.org/jeps/442\">外部函数&amp;内部API（第三个预览版）</a>\"JEP 443：<a href=\"https://openjdk.org/jeps/443\">未命名模式和变量（预览版）</a>\"JEP 444：<a href=\"https://openjdk.org/jeps/444\">虚拟线程</a>\"JEP 445：<a href=\"https://openjdk.org/jeps/445\">未命名类和实例主方法（预览版）</a>\"JEP 446：<a href=\"https://openjdk.org/jeps/446\">作用域值（预览版）</a>\"JEP 448：<a href=\"https://openjdk.org/jeps/448\">向量API（第六轮孵化）</a>\"JEP 449：<a href=\"https://openjdk.org/jeps/449\">弃用Windows 32-bit x86移植，准备删除</a>\"JEP 451：<a href=\"https://openjdk.org/jeps/451\">准备禁用代理的动态加载</a>\"JEP 452：<a href=\"https://openjdk.org/jeps/452\">密钥封装机制API</a>\"JEP 453：<a href=\"https://openjdk.org/jeps/453\">结构化并发（预览版）</a>\"</p><p>&nbsp;</p><p><a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-21%2B35\">Build 35</a>\"仍然是JDK 21<a href=\"https://jdk.java.net/20/\">早期访问构建</a>\"的当前构建。要了解关于该构建的更多细节，请查看<a href=\"https://jdk.java.net/21/release-notes\">发布说明</a>\"。&nbsp;</p><p>&nbsp;</p><p></p><h4>JDK 22</h4><p></p><p>JDK 22<a href=\"https://jdk.java.net/22/\">早期访问构建</a>\"<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22%2B11\">Build 11</a>\"在上周发布，其中包括Build 10的<a href=\"https://github.com/openjdk/jdk/compare/jdk-22%2B10...jdk-22%2B11\">更新</a>\"，主要是修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2022%20and%20%22resolved%20in%20build%22%20%3D%20b11%20order%20by%20component%2C%20subcomponent\">问题</a>\"。要了解关于这个版本的更多细节，请查看<a href=\"https://jdk.java.net/22/release-notes\">发布说明</a>\"。</p><p>&nbsp;</p><p>对于<a href=\"https://openjdk.org/projects/jdk/22/\">JDK 22</a>\"和<a href=\"https://openjdk.java.net/projects/jdk/21/\">JDK 21</a>\"，我们鼓励开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java Bug数据库</a>\"报告Bug。</p><p>&nbsp;</p><p></p><h4>Spring Framework</h4><p></p><p><a href=\"https://spring.io/projects/spring-framework\">Spring Framework</a>\" 6.1的<a href=\"https://spring.io/blog/2023/08/17/spring-framework-6-1-m4-released\">第四个里程碑版本</a>\"带来了依赖项升级和一些值得注意的变化，其中包括：在@TestPropertySource注解中支持资源模式；在DatabaseClient接口中支持基于类的映射；新增RowMapper接口 ，能够自动绑定到数据库字段。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-framework/milestone/330?closed=1\">问题列表</a>\"。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-data\">Spring Data</a>\" 2023.1.0的<a href=\"https://spring.io/blog/2023/08/18/spring-data-2023-1-0-m2-2023-0-3-2022-0-9-and-2021-2-15-released\">第二个里程碑版本</a>\"（代号为Vaughn）发布，新特性包括：兼容JDK 21；支持<a href=\"https://kotlinlang.org/docs/inline-classes.html\">Kotlin值类</a>\"；通过Executor接口使用虚拟线程；使用检查点协调恢复（CRaC）进行优化探索。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-data-commons/wiki/Spring-Data-2023.1-%28Vaughan%29-Release-Notes\">发布说明</a>\"。</p><p>&nbsp;</p><p>类似地，Spring Data<a href=\"https://spring.io/blog/2023/08/18/spring-data-2023-1-0-m2-2023-0-3-2022-0-9-and-2021-2-15-released\">服务版</a>\"的2023.0.3、2022.0.9和2021.2.15版本修复了Bug，并升级了相应的依赖项，如：Spring Data MongoDB 4.1.3、4.0.9和3.4.15；Spring Data Elasticsearch 5.1.3、5.0.9和4.4.15；Spring Data Neo4j 7.1.3, 7.0.9和6.3.15。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-modulith\">Spring Modulith</a>\" 1.0的<a href=\"https://spring.io/blog/2023/08/16/spring-modulith-1-0-rc2-released\">第二个候选版本</a>\"带来了一些值得注意的变化，其中包括：统一使用event_publication作为关系存储的表名，以及Event Publication Registry中MongoDB的集合名；将执行器重命名为modulith，消除了之前在执行器名称中使用的破折号；显式声明@ApplicationModule(allowedDependencies ={}禁止任何传出依赖。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-modulith/releases/tag/1.0.0-RC2\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Apache软件基金会</h4><p></p><p><a href=\"https://camel.apache.org/\">Apache Camel</a>\" 4.0.0<a href=\"https://camel.apache.org/blog/2023/08/RELEASE-4.0.0/\">发布</a>\"，带来了许多Bug修复、依赖项升级、改进和新特性，其中包括：使用GraalVM支持Spring Boot 3 AOT原生编译；支持<a href=\"https://micrometer.io/docs/observation\">Micrometer Observation</a>\"；在<a href=\"https://camel.apache.org/components/3.21.x/jpa-component.html\">Camel JPA</a>\"中支持分页。要了解关于该版本的更多细节，请查看<a href=\"https://camel.apache.org/releases/release-4.0.0/\">发布说明</a>\"。InfoQ后续会带来更详细的新闻报道。</p><p>&nbsp;</p><p><a href=\"https://tomcat.apache.org/\">Apache Tomcat</a>\" <a href=\"https://www.mail-archive.com/announce@apache.org/msg08416.html\">11.0.0-M10</a>\"、<a href=\"https://www.mail-archive.com/announce@apache.org/msg08417.html\">10.1.12</a>\"、<a href=\"https://www.mail-archive.com/announce@apache.org/msg08419.html\">9.0.79</a>\"和<a href=\"https://www.mail-archive.com/announce@apache.org/msg08418.html\">8.5.92</a>\"版本在上周发布，所有四个版本都提供了Bug修复和改进，其中包括：重构HTTP/2实现，以减少使用虚拟线程时的钉选（pinning）；增加了指向OpenSSL配置文件的直通密码，例如profile =SYSTEM，而不是在试图解析它时产生错误；依赖项升级到<a href=\"https://tomcat.apache.org/native-doc/\">Tomcat Native</a>\" 2.0.5。要了解关于这些版本的更多信息，可以查看<a href=\"http://tomcat.apache.org/tomcat-11.0-doc/changelog.html\">11.0.0-M10</a>\"、<a href=\"http://tomcat.apache.org/tomcat-10.1-doc/changelog.html\">10.1.12</a>\"、<a href=\"https://tomcat.apache.org/tomcat-9.0-doc/changelog.html\">9.0.79</a>\"和<a href=\"https://tomcat.apache.org/tomcat-8.5-doc/changelog.html\">8.5.92</a>\"版本的发布说明。</p><p>&nbsp;</p><p></p><h4>Payara</h4><p></p><p>Payara<a href=\"https://blog.payara.fish/whats-new-in-the-august-2023-payara-platform-release\">发布</a>\"了<a href=\"https://www.payara.fish/\">Payara平台</a>\"的2023年8月版，其中包括社区版6.2023.8、企业版6.5.0和企业版5.54.0，其中包括一些值得注意的Bug修复，诸如：在JDK 17中无法实例化LdapCtxFactory类；由于libpam4j-repackage.jar依赖项中的错误，无法在JDK 11.0.20或JDK 17.0.8上启动Payara Server；在使用DataSource接口中定义的getConnection()方法时，由于事务状态显示错误而导致的异常。要了解关于这些版本的更多信息，请查看<a href=\"https://docs.payara.fish/community/docs/Release%20Notes/Release%20Notes%206.2023.8.html\">社区版6.2023.8</a>\"和<a href=\"https://docs.payara.fish/enterprise/docs/Release%20Notes/Release%20Notes%206.5.0.html\">企业版6.5.0</a>\"的发布说明。</p><p>&nbsp;</p><p></p><h4>Micronaut</h4><p></p><p>Micronaut基金会<a href=\"https://micronaut.io/2023/08/18/micronaut-framework-4-0-4-released/\">发布</a>\"了<a href=\"https://micronaut.io/\">Micronaut Framework</a>\"的4.0.4、3.10.1和3.9.6版本。4.0.4版本提供了模块升级：&nbsp;<a href=\"https://micronaut-projects.github.io/micronaut-graphql/latest/guide/\">Micronaut GraphQL</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-neo4j/latest/guide/\">Micronaut Neo4J</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-reactor/latest/guide/\">Micronaut Reactor</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-servlet/latest/guide/\">Micronaut Servlet</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-cache/latest/guide/\">Micronaut Cache</a>\"和<a href=\"https://micronaut-projects.github.io/micronaut-crac/latest/guide/\">Micronaut CRaC</a>\"。3.10.1版本和3.9.6版本修改了SDKMan Gradle任务，用sdkMinorRelease属性取代了sdkMajorRelease，其中还包含联合发布及公告。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/micronaut-projects/micronaut-starter/releases/tag/v4.0.4\">4.0.4</a>\"、<a href=\"https://github.com/micronaut-projects/micronaut-starter/releases/tag/v3.10.1\">3.10.1</a>\"和<a href=\"https://github.com/micronaut-projects/micronaut-starter/releases/tag/v3.9.6\">3.9.6</a>\"版本的发布说明。</p><p>&nbsp;</p><p></p><h4>Hibernate</h4><p></p><p><a href=\"https://hibernate.org/search/\">Hibernate Search</a>\" 6.2.1.Final<a href=\"https://in.relation.to/2023/08/17/hibernate-search-6-2-1-Final/\">发布</a>\"。该版本带来了一些显著的变化，其中包括：如果Spring应用程序运行在JDK 13及更高版本上，则能够读取它重新打包后的Jandex索引；如果将属性hibernate.search.backend.query.shard_failure.ignore设置为false ，则部分失败的搜索查询现在可以触发一个异常；依赖项升级到<a href=\"https://hibernate.org/orm/\">Hibernate ORM</a>\" 6.2.7.Final和Elasticsearch client 8.9.0；兼容<a href=\"https://opensearch.org/\">OpenSearch</a>\" 2.9.0。</p><p>&nbsp;</p><p></p><h4>Micrometer</h4><p></p><p><a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/README.md\">Micrometer Metrics</a>\"的1.12.0-M2、1.11.3、1.10.10和1.9.14版本发布，其中包括Bug修复、文档改进、依赖项升级和新特性，诸如：不再要求在ObservationThreadLocalAccessor类上设置ObservationRegistry接口的实例；新增类JmsInstrumentation，使用Observation API检测Jakarta Messaging Session接口的实例。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.12.0-M2\">1.12.0-M2</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.11.3\">1.11.3</a>\"、<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.10.10\">1.10.10</a>\"和<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.9.14\">1.9.14</a>\"版本的发布说明。</p><p>&nbsp;</p><p>类似的，<a href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md\">Micrometer Tracing</a>\"的1.2.0-M2、1.1.4和1.0.9版本也已经发布，其中包括依赖项升级，以及在OpenTelemetry Tracer接口中使用CurrentTraceContext接口，以便更有效地合并scope、baggage以及检查空操作。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.2.0-M2\">1.2.0-M2</a>\"、<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.1.4\">1.1.4</a>\"和<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.0.9\">1.0.9</a>\"版本的发布说明。</p><p>&nbsp;</p><p></p><h4>Infinispan</h4><p></p><p><a href=\"https://infinispan.org/\">Infinispan</a>\" 14.0.14<a href=\"https://github.com/infinispan/infinispan/releases/tag/14.0.14.Final\">发布</a>\"，带来了一些值得注意的变化，其中包括：在Infinispan测试中删除了所有的Hibernate Search 5注解；为了解决CVE，依赖项升级到Netty 4.1.94.Final和Jackson 2.15.2；InvalidatedNearRemoteCache在并发访问的情况下持久化陈旧数值的能力。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/infinispan/infinispan/compare/14.0.13.Final...14.0.14.Final\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>JHipster</h4><p></p><p><a href=\"https://github.com/jhipster/generator-jhipster-react-native/blob/main/README.md\">JHipster React Native</a>\" 4.4.0<a href=\"https://github.com/jhipster/generator-jhipster-react-native/releases/tag/v4.4.0\">发布</a>\"，新特性包括：升级到Expo 49 SDK，其中React Native版本为0.72.3；更新LICENSE文件中的通知和许可信息；更新著作权声明。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/jhipster/generator-jhipster-react-native/compare/v4.3.0...v4.4.0\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>JBang</h4><p></p><p><a href=\"https://www.jbang.dev/\">JBang</a>\" 0.110.1<a href=\"https://github.com/jbangdev/jbang/releases/tag/v0.110.1\">发布</a>\"，带来了一些Bug修复：在容器中运行时抛出NullPointerException异常；在JavaSource类的getCompileOptions()方法中使用-g标志来替换JAVAC_OPTIONS和COMPILE_OPTIONS环境变量。</p><p>&nbsp;</p><p></p><h4>Piranha</h4><p></p><p><a href=\"https://piranha.cloud/\">Piranha</a>\" 23.8.0<a href=\"https://github.com/piranhacloud/piranha/releases/tag/v23.8.0\">发布</a>\"，提供了一些值得注意的变化，其中包括：使用PiranhaConfiguration 接口进行分发；新增ExitOnStopFeature类，在请求停止所有特性后退出JVM；新增WebAppFeature类，可用于托管单个Web应用程序。要了解关于这个版本的更多细节，请查阅<a href=\"https://javadoc.io/doc/cloud.piranha/project/latest/index.html\">官方文档</a>\"和<a href=\"https://github.com/piranhacloud/piranha/issues?q=is%3Aissue+-label%3Awontfix+milestone%3A23.8.0+is%3Aclosed\">问题跟踪系统</a>\"。</p><p>&nbsp;</p><p></p><h4>Reactor项目</h4><p></p><p><a href=\"https://github.com/reactor/reactor/blob/main/README.md\">Reactor</a>\" 2023.0.0的<a href=\"https://github.com/reactor/reactor/releases/tag/2023.0.0-M2\">第二个里程碑版本</a>\"发布，将依赖项升级到reactor -core 3.6.0-M2、reactor-netty 1.1.10和reactor-kafka 1.3.20。此外，2023.0.0-M2版本也做了调整，其中reactor-pool 1.0.1、reactor-addons 3.5.1和reactor-kotlin-extensions 1.2.2 构件保持不变。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/reactor/reactor/compare/2023.0.0-M1...2023.0.0-M2\">变更日志</a>\"。</p><p>&nbsp;</p><p>同样，Reactor 2022.0.10（<a href=\"https://github.com/reactor/reactor/releases/tag/2022.0.10\">第10个维护版本</a>\"）升级了依赖项reactor-core 3.5.9&nbsp;、reactor-netty 1.1.10和reactor-kafka 1.3.20 。此外，2022.0.10版本也做了调整，其中reactor-pool 1.0.1、&nbsp;reactor-addons 3.5.1和reactor-kotlin-extensions 1.2.2构件保持不变。要了解关于这个版本的更多细节，请查看<a href=\"https://github.com/reactor/reactor/compare/2022.0.9...2022.0.10\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>Byte Buddy</h4><p></p><p><a href=\"https://bytebuddy.net/\">Byte Buddy</a>\" 1.14.6发布，带来了一些值得注意的变化，其中包括：在AgentBuilder.PatchMode 枚举中新增SUBSTITUTE枚举，在ResettableClassFileTransformer接口中新增Substitutable子接口，用于按序打补丁；在给AgentBuilder接口打补丁时，可以显式指定差异匹配器的规范；根据新版本的要求为Android创建只读的JAR文件。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.14.6\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>JobRunr</h4><p></p><p><a href=\"https://www.jobrunr.io/\">JobRunr</a>\"是一个以持久存储为基础的分布式Java后台处理库。JobRunr 6.3.0版本<a href=\"https://www.jobrunr.io/en/blog/2023-07-14-jobrunr-v6.3.0/\">发布</a>\"，修复了一些Bug，并提供了一些新特性，其中包括：支持Micronaut 4.0和Kotlin 1.9；改进JobRunr仪表板性能，减少JobRunr REST API调用；改进稳定性，尽量减少抛出<a href=\"https://javadoc.io/doc/org.jobrunr/jobrunr/latest/org/jobrunr/SevereJobRunrException.html\">SevereJobRunrException</a>\" 类的实例；新增超时机制，在必要时自动中断<a href=\"https://javadoc.io/doc/org.jobrunr/jobrunr/latest/org/jobrunr/jobs/Job.html\">Job</a>\"类的实例。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/jobrunr/jobrunr/releases/tag/v6.3.0\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Arquillian</h4><p></p><p><a href=\"http://arquillian.org/\">Arquillian</a>\" 1.7.1.Final<a href=\"https://github.com/arquillian/arquillian-core/releases/tag/1.7.1.Final\">发布</a>\"，新特性包括：修复了arquillian-bom1.7.0.Final中一个构件在使用Maven 3.6.3时抛出校验和验证错误的问题；依赖项升级到<a href=\"https://resteasy.dev/\">RESTEasy</a>\" 6.2.4.Final。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/arquillian/arquillian-core/compare/1.7.0.Final...1.7.1.Final\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>Gradle</h4><p></p><p><a href=\"https://gradle.org/\">Gradle</a>\" 8.3<a href=\"https://github.com/gradle/gradle/releases/tag/v8.3.0\">发布</a>\"，新特性包括：支持JDK 20；使用工作进程将Java编译器作为<a href=\"https://docs.gradle.org/8.3/release-notes.html#faster-java-compilation\">编译器守护进程</a>\"运行，从而加快Java编译速度；可使用<a href=\"https://blog.jetbrains.com/kotlin/2023/02/k2-kotlin-2-0/\">Kotlin K2编译器</a>\"进行实验；改进<a href=\"https://codenarc.org/\">CodeNarc</a>\"插件的输出。要了解关于该版本的更多细节，请查看<a href=\"https://docs.gradle.org/8.3/release-notes.html\">发布说明</a>\"。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/08/java-news-roundup-aug14-2023/\">https://www.infoq.com/news/2023/08/java-news-roundup-aug14-2023/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/KPPWppqtOcT3czOYQqMf\">Java 近期新闻：Payara Cloud、MicroProfile Telemetry、Foojay.io 日历、JVM 语言峰会</a>\"</p><p><a href=\"https://www.infoq.cn/article/ClW8eLeOxRUqqpHWOJCC\">Java ZGC 垃圾收集器全面增强</a>\"</p>",
    "publish_time": "2023-09-05 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "百度智能云发布千帆大模型平台2.0：42个大模型、41个数据集、10个精选应用范式",
    "url": "https://www.infoq.cn/article/ciVUckNABKM3l6sZNUid",
    "summary": "<p>9月5日，2023百度云智大会在北京正式召开。会上，百度智能云千帆大模型平台宣布实现2.0全面升级，首次公布月活企业数已近万家，覆盖金融、制造、能源、政务、交通等行业的400多个业务场景。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4d/4d9b1bc77a8da13124930357e26409e8.jpeg\" /></p><p></p><p>升级后的百度智能云千帆平台2.0拥有“四个最”：预置最多的大模型和数据集、有最丰富最全面的工具链、最佳算力效能、最完备的大模型安全方案。</p><p></p><p>相比过去，千帆平台纳管的国内外主流大模型达到42个，还预置了41个高质量有行业特色的数据集，预装了知识问答、客服对话、代码助手等10个精选应用范式，大幅降低企业使用、训练和推理大模型的门槛。对于除文心大模型之外的第三方大模型，千帆平台不只是简单的接入，还提供中文增强、性能增强、上下文增强等能力。比如，原来要用英文对话效果才好的Llama2等国外大模型，现在用中文也一样好。</p><p></p><p>工具链变得更丰富和更全面，也更加轻量化、敏捷化。过去客户验证大模型的效果至少需要一周时间，现在基于一站式的工具链，只需一天就可以跑通一个模型并看到效果。值得关注的是，千帆平台的工具链里内置了103套高质量的prompt模版，还有自动化prompt工程能力，用户做起来会更方便、更轻松。</p><p></p><p>算力服务升级后，万卡集群训练大模型时，有效训练时间达到95%以上，极大的降低了时间成本，加速比可以达到 95%，充分释放集群的整体算力。千帆平台还兼容国内外主流芯片和操作系统，企业客户的算法可以以最小的修改成本在这些硬件上运行。</p><p></p><p>千帆平台全面升级模型安全、内容安全和数据安全保障能力。千帆平台为不同模型厂商设计了可信的专用隔离域，重点保护模型资产安全。在内容安全上预置安全模块，可以有效控制输入和输出的安全风险。在数据安全方面，千帆平台提供从模型、数据到日志的全链路加密，为模型厂商和用户提供可信任的执行环境。</p><p></p><p>“料多、好用、高效、放心”，百度集团执行副总裁、百度智能云事业群总裁沈抖用四个关键词形容百度智能云千帆大模型平台2.0。</p>",
    "publish_time": "2023-09-05 09:55:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "首届FCon全球金融科技大会正式起航，让金融数字化少走弯路",
    "url": "https://www.infoq.cn/article/2LP2mhqz1laUde9AmP8U",
    "summary": "<p>由极客邦科技旗下&nbsp;InfoQ&nbsp;极客传媒主办的首届<a href=\"https://www.infoq.cn/article/RZGMPJ7LgFy1HLhGy0KE\">&nbsp;FCon</a>\"&nbsp;全球金融科技大会正式起航，大会将于11月19日-20日在上海举办，话题聚焦当前金融行业遇到的问题，以及在数字化转型过程中的痛点等，将邀请国内外金融企业和金融科技公司的专家进行分享。</p><p></p><p>在9月2日的InfoQ《超级连麦.数智大脑》FCon起航系列直播中，极客邦科技创始人兼CEO霍太稳（Kevin）抽丝剥茧地分享了本次<a href=\"https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5\">FCon</a>\"大会举办的背景和初衷。</p><p></p><p>霍太稳表示，经过多年来对QCon全球软件开发大会、ArchSummit全球架构师峰会等一系列技术大会品牌的运营，极客邦认为，线下会议是链接知识输出方和需求方的重要桥梁。通过这一桥梁，可以快速地把业界成功案例分享给更多人、更多企业，而对于参与者而言，也可以通过知识的输入，快速吸取经验，在具体的工作中少走弯路。</p><p></p><p>与此同时，在服务各行各业的客户过程中，极客邦也逐渐发现，除了互联网等数字原生企业之外，越来越多的传统企业也在通过数字化转型探寻业务发展的第二曲线。基于这一背景，极客邦也将“推动数字人才全面发展，助力数字中国早日实现”作为公司愿景，致力于打造全球领先的数字人才发展平台。</p><p></p><p>其中，金融行业作为数字化转型的领先者，其实践与经验不仅将给同行业者予以参考，同时也将为其头发行业的数字化认知与转型带来启发。“我们希望可以复制QCon、ArchSummit等技术大会的成功经验，邀请金融科技领域最顶尖的公司、最顶尖的专家，在FCon这个会议平台上，分享他们的最佳实践。”霍太稳表示。</p><p></p><p>此外，在直播中，极客邦科技事业合伙人、InfoQ极客传媒总经理汪丹还与本届大会联席主席、度小满数据智能部总经理杨青进行了<a href=\"https://www.infoq.cn/news/bgkwHfzwe1vee7qlRpmf\">连麦</a>\"，探讨了金融数字化转型的现状，以及大模型等技术将如何助力金融业转型与创新。</p><p></p><p>据了解，度小满在&nbsp;AI&nbsp;领域已经有较多投入，长期以来一直在探索&nbsp;AI&nbsp;怎么更好地服务金融，尤其是信贷业务的难题，例如如何高效地获客、如何更好地识别风控，如何去更好地提升企业经营效率等等。对此，杨青在直播过程介绍了大模型在金融行业的应用特点，以及度小满基于以上思考认知的探索方向应用。</p><p></p><p>杨青是度小满金融的数据智能部总经理和技术委员会执行主席，目前正专注于&nbsp;AIGC&nbsp;在金融场景中的应用，带领团队发布了国内首个千亿中文金融大模型“轩辕”。同时，他作为FCon大会联席主席，也将在大会期间带来精彩分享。“期待FCon大会能够为金融科技行业带来更多的创新交流和合作的机会，以科技引领行业创新，大家共同推进行业的进步和发展。”</p><p></p><p>本届大会为期两天，包括半天Keynote主题演讲，以及10多个专题论坛。目前已经确认的大会联席主席还包括汇丰科技中国区代理总经理马国栋、蚂蚁集团副总裁兼首席技术安全官/韦韬博士、以及恒生聚源总经理吴震操。</p><p></p><p>专题设置上，涵盖“金融数字化转型挑战探索”、“金融大模型应用”、“基于AI与大数据的风控系统建设\"、\"金融大数据实时计算平台”等等目前比较热门技术和行业话题，聚焦金融行业在业务发展和数字化转型过程中的各种痛点。内容深度上，延续InfoQ的内容价值观，以实践为驱动，将邀请行业内的顶尖专家，为大家提供最具有实践参考意义的干货内容。</p><p></p><p>现阶段，大会嘉宾仍在持续邀约中，了解更多详情请点击链接：<a href=\"https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5\">https://fcon.infoq.cn/2023/shanghai/track?utm_source=szh&amp;utm_medium=art&amp;utm_campaign=5</a>\"</p><p></p><p>目前为FCon大会售票的早鸟期，前100位购票的观众可以享受5折的优惠（只限前100位），咨询购票可联系：13269078023（微信同手机号）</p><p></p><p></p>",
    "publish_time": "2023-09-05 12:05:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]