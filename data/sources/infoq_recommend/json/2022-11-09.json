[
  {
    "title": "亚马逊云科技向Well-Architected Framework添加容器透镜",
    "url": "https://www.infoq.cn/article/O9jijEFIBtaaeecQCe8K",
    "summary": "<p>亚马逊云科技在其<a href=\"https://aws.amazon.com/architecture/well-architected\">Well-Architected框架</a>\"添加了一个<a href=\"https://aws.amazon.com/blogs/containers/introducing-the-container-build-lens-for-the-aws-well-architected-framework/\">新的容器透镜</a>\"。这份新的技术白皮书概述了来自社区、亚马逊云科技合作伙伴和其内部容器技术专家的最佳实践。这些最佳实践为运行高性能、可靠和安全的容器工作负载提供了指导。白皮书中还提供了一些常见用例的参考架构。</p><p>&nbsp;</p><p>AWS Well-Architected框架以六大支柱为基础——卓越的运营、安全性、可靠性、性能效率、成本优化和可持续性。它为AWS用户提供了特定的信息，帮助他们采用AWS的最佳构建实践。新的<a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/container-build-lens.html\">容器透镜</a>\"加入了其他特定于领域的透镜，如物联网、无服务器、AI、ML和SAP。</p><p>&nbsp;</p><p><a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/operational-excellence.html\">运营卓越支柱</a>\"专注于系统的运行和监控，交付业务价值，提供洞见，推动持续改进。容器透镜关注的是容器生命周期管理和可观察性。例如，在准备阶段的建议包括确保了解容器的基本镜像是由什么组成的。这与最近对<a href=\"https://www.infoq.com/news/2022/10/google-devops-2022\">供应链安全性</a>\"的关注和更好地了解应用程序中使用的组件是保持一致的。</p><p>&nbsp;</p><p>这一支柱的其他建议还包括建立父镜像或烘焙镜像，然后用于创建所有下游的镜像。这种方法可以更好地控制和治理被包含在基础镜像中的内容。他们建议在构建了下游镜像后，将其用在所有的环境中。随着通过每个阶段的验证，不断在各种环境中推广使用。</p><p>&nbsp;</p><p><a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/security-pillar.html\">安全性支柱</a>\"的建议包括关注容器应用程序的最小特权，实现所有构建基础设施的访问控制，以及最小化镜像的攻击表面。他们建议在没有shell或包管理器的情况下运行distroless镜像，防止不良行为者随意修改镜像。最近，谷歌<a href=\"https://www.infoq.com/news/2022/10/distroless-slsa-level-two/\">宣布</a>\"他们的distroless构建达到了<a href=\"https://slsa.dev/\">软件工件供应链级别</a>\"（Supply chain Levels for Software Artifacts，SLSA）2级。类似地，Chainguard发布了<a href=\"https://www.infoq.com/news/2022/09/wolfi-supply-chain/\">Wolfi</a>\"技术预览版，在设计上提供了最小化的攻击表面。</p><p>&nbsp;</p><p><a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/performance-efficiency-pillar.html\">性能效率支柱</a>\"的建议主要关注容器的构建时性能。他们指出，运行时性能超出了容器透镜的范畴，应该包含在<a href=\"https://docs.aws.amazon.com/wellarchitected/latest/performance-efficiency-pillar/welcome.html\">性能效率支柱白皮书</a>\"中。</p><p>&nbsp;</p><p><a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/reliability-pillar.html\">可靠性支柱</a>\"主要关注监控应用程序的运行状况、构建和测试镜像的自动化以及对父容器镜像的自动化更新。这个支柱以使用基础父镜像的建议为基础，建议使用分层的方式来管理容器镜像。这应该从通用共享的基础镜像开始，然后安装特定于应用程序的工件，并在最后一层安装应用程序所需的二进制文件。</p><p>&nbsp;</p><p>他们进一步建议，所有这些镜像都要在源码控制系统中进行维护和标记。他们建议使用“持续集成过程，在源码控制系统中的容器镜像和镜像标签之间创建直接关联”。根据白皮书的说法，这种方法有助于确定在不同的镜像发布之间发生了什么变化。</p><p>&nbsp;</p><p><a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/cost-optimization-pillar.html\">成本优化支柱</a>\"主要关注镜像的效率、自动伸缩和快速启动时间。这三个建议将有助于减少所需的容器数量和运行时间。<a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/sustainability-pillar.html\">可持续性支柱</a>\"提出的建议与成本优化支柱类似。</p><p>&nbsp;</p><p>最后，白皮书提供了许多用于解决常见用例的参考架构，例如，关于如何确保容器构建管道安全的架构。他们指出，这个架构应该与运行任意类型管道相关的安全实践一起实现。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2f/2f8330c5bb34729443eb86f53cfcd7b1.png\" /></p><p></p><p>安全容器化构建管道的参考架构（来源：<a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/securing-containerized-build-pipelines.html\">亚马逊云科技</a>\"）</p><p>&nbsp;</p><p><a href=\"https://docs.aws.amazon.com/wellarchitected/latest/container-build-lens/container-build-lens.html\">容器透镜</a>\"现在可以在Well-Architected Framework文档中找到。Well-Architected Framework 的部分内容在<a href=\"https://aws.amazon.com/well-architected-tool/\">Well-Architected Tool</a>\"中可用，但容器透镜只提供了技术白皮书。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/11/container-well-architected/\">https://www.infoq.com/news/2022/11/container-well-architected/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/37KXc62o0QMozP8Y22Os\">亚马逊云科技开源Event Ruler</a>\"</p><p><a href=\"https://www.infoq.cn/article/69cDiK84CkeW7CEZXg9j\">Stack Overflow 2022报告：亚马逊云科技的软件开发“武器库”</a>\"</p>",
    "publish_time": "2022-11-09 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "开发人员必须知道的 Web3基本工具和技术",
    "url": "https://www.infoq.cn/article/AazZuDOCh0oSR27pbBNw",
    "summary": "<p>Web 3开发人员缺口很大，相对来说，目前只有一少部分开发人员成为该领域的专家。因此，如果一位成熟的Web 2工程师，想要进入Web 3行业，应该从哪里开始呢？要了解哪些基本概念、学习哪些工具和技术？</p><p>&nbsp;</p><p>本文将探讨Web 3，包括它的重要性以及与Web 2的区别。然后再来看看，有志于Web 3开发人员应该熟悉的技术栈。</p><p></p><h1>Web3 第一课</h1><p></p><p>在深入研究Web 3应用程序中使用的技术之前，让我们首先了解<a href=\"https://www.infoq.cn/video/9XgAQ2GxwUVgMKZBpi0j\">Web 3</a>\"是什么，以及它为什么重要。</p><p>&nbsp;</p><p>Web 3的五个关键特性是去中心化、区块链、安全性、可扩展性和隐私。在Web 3的去中心化世界中，区块链技术和其他协议从根本上改变了数据的存储、分发和访问方式，同时提供了一个本地事务层。当下流行的<a href=\"https://www.infoq.cn/article/a7ls8rH7EoAweEdLcNfO\">Web3应用案例</a>\"是去中心化金融（DeFi 和加密货币）、在称为“DAO”的去中心化治理模式中投票、以及作为所有权证明的不可伪造代币（NFT）。</p><p>&nbsp;</p><p>Web 3背后的许多动机，都是基于用户、公司和政府之间的信任受到侵蚀。看上去好像有点愤世嫉俗，但确是如此。</p><p>&nbsp;</p><p>在去中心化金融里，用户将资金存储在自己的私人钱包中，交易时无需与中心化机构互动或依赖国家的法定货币。</p><p>&nbsp;</p><p>建立在区块链上的投票应用程序，所有投票数据都是透明的，且任何人验证起来都很简便，因此不必再担心选举中发生徇私舞弊。这就是让 Web 3 “无需信人”的原因：该技术是透明的，并且通过密码学得到保护，因此不再是只能盲目信任某些机构。</p><p>&nbsp;</p><p>NFT 可用于证明任何数字资产（如音乐或艺术）的所有权，让你可以更直接地支持创作者。</p><p>&nbsp;</p><p>所有这些例子，其核心都牵涉到不再需要依赖中央机构或中介机构。</p><p>&nbsp;</p><p>需要注意的是，Web 3 并不是要取代 Web 2，就像 Web 2 没有取代 Web 1 一样。对于 Web 1 中出现的静态网站，在 Web 上仍然占有重要地位。即使 Web 3 越来越受欢迎和使用，Web 2 应用程序也将有一席之地。</p><p>&nbsp;</p><p></p><h1>去中心化的应用程序（Dapps）</h1><p></p><p>我们现在大致了解了<a href=\"https://www.infoq.cn/article/jsf43rxkftgecP5aQCNG\">什么是 Web 3</a>\"，以及为什么去中心化的概念很重要。那么Web3应用程序实际上是什么样子的呢？</p><p>&nbsp;</p><p>嗯……它们看起来很像 Web 2 应用程序！<a href=\"https://www.infoq.cn/article/6tiOQEV3UHCLAMGDXPXH\">去中心化的应用程序</a>\"，也称为“dapps”（或“dApps”），由一个前端 UI 组成，其与部署在区块链上的“智能合约”（一个小代码程序）交互。在交易或将数据写入区块链时，前端还可以与用户的钱包交互。与 Web 2 应用程序的主要区别在于，智能合约和区块链取代了由单个人或公司拥有和维护的经典的服务器和数据库。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/bd/bdf139b8d62ec581970b55da99a0240d.png\" /></p><p></p><p>&nbsp;</p><p>去中心化应用架构</p><p>&nbsp;</p><p></p><h1>定义 Web 3 技术栈的技术</h1><p></p><p>&nbsp;</p><p>那么，如何真正构建一个去中心化的应用程序（dapp）？好消息是，可以从已有的编程技能和经验开始！我们已经知道 dapp 有一个前端，这意味着需要了解 HTML、CSS 和 <a href=\"https://www.infoq.cn/article/CSRgKxyZK0XNK9ZARYEp\">JavaScript</a>\"。可能还会使用Angular、React或Vue等框架或库，除非你喜欢用原生JavaScript。这对于已经精通这些技术的前端开发人员来说是个好消息。</p><p>&nbsp;</p><p>现在，让我们看看需要专门为Web3学习哪些语言、工具和框架：</p><p>&nbsp;</p><p><a href=\"https://soliditylang.org/\">Solidity</a>\"&nbsp;是一种编程语言，用于编写在以太坊区块链上运行的智能合约。它看起来像是 C++、Python和JavaScript的混合体。如果你现在已经学习了几种编程语言，那么你每次去学一门新语言都会变得更容易。由于大多数智能合约都涉及某种货币兑换，因此遵循<a href=\"https://docs.openzeppelin.com/\">适当的标准</a>\"和<a href=\"https://consensys.net/blog/developers/solidity-best-practices-for-smart-contract-security/\">在安全方面的最佳实践</a>\"至关重要。</p><p>&nbsp;</p><p>Solidity项目地址：https://soliditylang.org/</p><p>&nbsp;</p><p><a href=\"https://trufflesuite.com/docs/truffle/\">Truffle</a>\"是一个框架，可以用来编写、测试和部署智能合约。 其网站将其描述为“使用以太坊虚拟机 (EVM) 的区块链开发环境、测试框架和资产管道”。就像React 帮助你构建JavaScript应用程序一样，Truffle 帮助你构建智能合约。使用 Truffle 并不是绝对必要的，但是这个框架将极大地帮助你，因为它抽象了一些开发复杂性。对于 VS Code 用户，<a href=\"https://trufflesuite.com/blog/build-on-web3-with-truffle-vs-code-extension/\">Truffle for VS Code</a>\" 扩展会让开发周期更加容易。</p><p>&nbsp;</p><p><a href=\"https://trufflesuite.com/docs/truffle/\">Truffle</a>\"项目地址：https://trufflesuite.com/docs/truffle/</p><p>&nbsp;</p><p>Ganache是用于本地开发和测试智能合约的个人区块链。开发人员只需要通过几个简单的命令，就可以创建以太坊区块链的本地实例。Ganache 允许你在本地开发 Web 3应用，就像在本地或测试环境而非生产环境中开发 Web 2 应用程序一样。</p><p>&nbsp;</p><p><a href=\"https://trufflesuite.com/docs/ganache/\">Ganache</a>\"项目地址：https://trufflesuite.com/docs/ganache/</p><p>&nbsp;</p><p><a href=\"https://web3js.readthedocs.io/\">Web3.js</a>\" 是一个用于与以太坊交互的 JavaScript 库。你将在前端应用程序中使用 web3.js 来执行诸如连接到用户的钱包、授予对智能合约的访问权限以及调用智能合约上的函数等操作。智能合约可以通过命令行或UI访问，因此 web3.js 可以帮助你从 UI 使用智能合约。</p><p>&nbsp;</p><p>Web3.js 项目地址：https://web3js.readthedocs.io/en/v1.8.0/</p><p>&nbsp;</p><p>MetaMask 是一个 Web 3 钱包，你可以使用它的浏览器扩展程序或移动应用程序。我们之前提到过钱包，但还没有真正描述过钱包是什么。钱包为你的数字资产提供接口。你使用只有你自己知道的私钥保护钱包里的内容。 MetaMask 为用户提供了一种安全的方式，连接到基于区块链的应用程序，并与它们的钱包交互。对于开发人员来说，需要钱包来部署智能合约并与之交互。通常，私钥必须写在代码中才能交互，但 <a href=\"https://trufflesuite.com/blog/introducing-truffle-dashboard/\">Truffle Dashboard</a>\"能够将MetaMask钱包连接到项目而无需暴露密钥。</p><p>&nbsp;</p><p>MetaMask项目地址：<a href=\"https://metamask.io/\">https://metamask.io/</a>\"</p><p>&nbsp;</p><p><a href=\"https://infura.io/\">Infura</a>\"是连接以太坊和其他区块链以及去中心化存储网络（如 IPFS）的基础设施提供商。无需过多介绍，与区块链的任何交互都需要通过 JSON-RPC或WebSockets 访问节点。 Infura 提供了基础设施，因此你不必找机器来启动自己的节点。如果你实在想运行自己的节点，Infura 也可以作为备用。 Infura 还提供了一个开发套件和工具包，包括监控、指标、日志记录、事务管理和其他用于构建 dapp 的功能。这是对我们已谈论过的其他一些技术的进一步抽象，可以使 Web3 开发更加容易。</p><p>&nbsp;</p><p><a href=\"https://infura.io/\">Infura</a>\"项目地址：<a href=\"https://infura.io/zh\">https://infura.io/zh</a>\"</p><p></p><h1>结论</h1><p></p><p>Web 3 是支持下一代软件的下一代互联网。区块链是更透明的技术，不但消费者在采用，<a href=\"https://consensys.net/reports/web3-report-q3-2021/\">主要机构也在采用</a>\"，这让区块链成为了主流。</p><p>&nbsp;</p><p>了解Web 3 技术以及构建方法，将为你打入市场提供优势。</p><p>&nbsp;</p><p>对于已经拥有强大的Web 2基础，又有志于Web3的开发人员，我希望现在你对自己充满信心，因为你已掌握的知识就是良好的开端！花一些时间学学上面的技术，你可能会比你想象的更快做好准备，以迎接Web3的到来。</p><p>&nbsp;</p><p>原文链接：</p><p></p><p><a href=\"https://dzone.com/articles/the-essential-web3-tools-and-technologies-develope\">https://dzone.com/articles/the-essential-web3-tools-and-technologies-develope</a>\"</p>",
    "publish_time": "2022-11-09 11:43:10",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "高性能时序数据库引擎的技术实践 | DBTalk 技术公开课第4期",
    "url": "https://www.infoq.cn/article/uwaPEhX7fNM34wwmhUfd",
    "summary": "<p>随着万物互联时代的到来，时序数据处理成为释放数据价值，提升业务能力的关键。YMatrix 面向时序设计，同时兼顾分析速度。最近发布的 YMatrix 5.0 推出了全自研的时序存储引擎、向量化和全套的编码压缩，在性能方面得到了长足的进步。本次分享会全面解析性能优化技术。</p>",
    "publish_time": "2022-11-09 12:11:03",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "只有时代的 Oracle, 没有 Oracle 的时代 - 看国产数据库如何突出重围 | DBTalk 技术公开课第4期",
    "url": "https://www.infoq.cn/article/yjDlwOakrRVI9SuLkhCV",
    "summary": "<p>在国产化浪潮下，自主可控重要性凸显，去 IOE 已经逐步在政务、金融等垂直行业场景落地。其中，“去 O”也成为了众多企业及数据库从业者最关切的话题之一。</p>\n<p>腾讯云数据库 TDSQL 在过去多年里助力金融， 保险等多个行业上的核心系统成功去“O”。 本次的分享会将详解 TDSQL 如何在以内核兼容为基础，打造从驱动、迁移、内核三个层面的 Oracle 兼容能力， 帮助客户平滑迁移 Oracle 数据库。分享将涵盖 TDSQL 在内核、工具、接口等方面的全方位的兼容性工作。</p>",
    "publish_time": "2022-11-09 12:11:09",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "得物数据库中间件平台“彩虹桥”架构演进及落地实践 | DBTalk 技术公开课第4期",
    "url": "https://www.infoq.cn/article/vO8sd9j6Oslq9AA0amyz",
    "summary": "<p>ShardingSphere 是 Apache 社区一款优秀的开源分布式数据库生态项目，得物在 ShardingSphere 基础上，根据自身业务属性和特点，定制了一套数据库代理中间件“彩虹桥”。本次议题主要介绍“彩虹桥”的架构演进和落地实践。</p>",
    "publish_time": "2022-11-09 12:11:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]