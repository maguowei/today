[
  {
    "title": "Contentsquare跨多个服务的通知解决方案：微服务和Apache Kafka",
    "url": "https://www.infoq.cn/article/6PR40uZ9o0o4UcSwEf2d",
    "summary": "<p>Contentsquare平台的许多场景都需要通知功能。作为其微服务架构的一部分，<a href=\"https://engineering.contentsquare.com/2023/building-a-reliable-notification-system/\">该公司创建了一个跨多个服务的通用解决方案</a>\"。在实现过程中，开发人员改进了可观察性，同时还克服了一些可扩展性挑战。</p><p>&nbsp;</p><p>Contentsquare的通知功能可以用于密码重置、API配额超标告警等，并根据用户的喜好通过电子邮件、Slack或Microsoft Teams发送。该公司选择循序渐进地推出与通知相关的功能，以便在需要时提高性能和可扩展性。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/24/24eefad035379f00730ba322d4f54791.jpeg\" /></p><p></p><p>通知组件（来源：<a href=\"https://engineering.contentsquare.com/2023/building-a-reliable-notification-system/\">Contentsquare工程博客</a>\"）</p><p>&nbsp;</p><p>Contentsquare的平台使用了微服务架构，通知子系统由几个微服务组成。Notification Consumer负责处理来自<a href=\"https://kafka.apache.org/\">Apache Kafka</a>\"主题的消息。Mailer Service用于电子邮件通知发送，并使用<a href=\"https://ejs.co/\">EJS模板引擎</a>\"根据预配置的模板呈现电子邮件内容。最后，Integration Service负责Slack和Microsoft Teams通知，它将基于<a href=\"https://api.slack.com/block-kit\">Slack的Block Kit</a>\"或<a href=\"https://learn.microsoft.com/en-us/microsoftteams/platform/task-modules-and-cards/cards/cards-reference#adaptive-card\">Microsoft Teams Adaptive Cards</a>\"编写JSON消息体。Slack Service和Microsoft Teams Service（如下所示）分别负责向Slack或Microsoft Teams API发送通知消息。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0a/0a2321559a4fa3e5b9b282170ac54b04.jpeg\" /></p><p></p><p>用于向Slack和Teams发送通知的微服务（来源：<a href=\"https://engineering.contentsquare.com/2023/building-a-reliable-notification-system/\">Contentsquare工程博客</a>\"）</p><p>&nbsp;</p><p>Contentsquare软件工程师<a href=\"https://www.linkedin.com/in/jbanzio/\">Joseph-Emmanuel Banzio</a>\"分享了该团队在推出通知功能时的经验：</p><p></p><blockquote>在此过程中，我们遇到了几个瓶颈，为此，我们扩展并增强了系统的可靠性。一个值得注意的挑战是，在创建Notifications主题之前，我们最初使用了单个Kafka主题进行微服务间通信。在我们发布实时告警测试版之前，这个功能一直运行良好。</blockquote><p></p><p>&nbsp;</p><p>除了使用专用的Kafka主题进行告警通知外，该团队还优化了通知存储，以免读取时出现高延迟。他们实现了一种数据保留机制，用来删除旧的通知记录。另一个需要调查的问题是，一些用户没有收到电子邮件。经过仔细研究，这是由于SPF（<a href=\"https://en.wikipedia.org/wiki/Sender_Policy_Framework\">Sender Policy Framework</a>\"）配置错误引起的，安全团队已经解决了这个问题。</p><p>&nbsp;</p><p>为了帮助解决电子邮件通知问题，该团队创建了一个专门的电子邮件可观察性解决方案。其中，它会定期检索第三方电子邮件服务收集的发送事件并存储在Contentsquare的平台中。这种方法提供了电子邮件通知流的端到端可见性。</p><p>&nbsp;</p><p>在该功能上线的过程中，开发人员还致力于提高了平台的可观察性。他们创建了一个<a href=\"https://www.elastic.co/kibana\">Kibana</a>\"仪表板来监控和分析日志，一个<a href=\"https://grafana.com/\">Grafana</a>\"仪表板来监控通知微服务使用的云资源。此外，该团队还扩展了对Kafka生产集群的监控，以确保资源利用率和Consumer Group Lag在可接受的范围之内。将来，该团队计划提升系统弹性，以防系统故障，并提高通知发送的及时性，实现近实时发送。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/10/contentsquare-notifications/\">https://www.infoq.com/news/2023/10/contentsquare-notifications/</a>\"</p>",
    "publish_time": "2023-10-30 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "程序员篡改ETC余额，一年私吞260余万元；语雀公布故障原因及赔偿方案；各家财报发布，创始人们：就很难受｜Q资讯",
    "url": "https://www.infoq.cn/article/urmClYMAW106DweFJNo4",
    "summary": "<p></p><blockquote>&nbsp;程序员篡改ETC余额，一年私吞260余万元；国内厂商已无法从英伟达下单，寻求国内替代成唯一方案；苦英伟达“一家独大”久矣？甲骨文、IBM 下单 AMD；芯片设计初创公司SiFive裁员20%，此前估值25亿美元；AMD回应大幅裁员：小幅优化和调整；宿华辞任快手科技董事长，CEO程一笑兼任；消息称张一鸣通知负责人：PICO业务看不到希望将关停，字节人士否认；财报一发，没有一个创始人能笑着面对；国家数据局正式揭牌；故障超过 8 小时，语雀公布原因及赔偿方案；小米正式发布小米澎湃OS；华为：全面完成 5G-A 技术性能测试；Mojo 编程语言发布 Mac 版本；Python 公布了实现 no-GIL Python 的计划……</blockquote><p></p><p>&nbsp;</p><p></p><h2>科技公司</h2><p></p><p>&nbsp;</p><p></p><h4>程序员篡改ETC余额，一年私吞260余万元</h4><p></p><p></p><p>2023年9月，上海市公安局浦东分局北蔡派出所接到某科技公司员工张女士报案称，其公司发现计算机系统被他人篡改数据，导致公司账户钱款损失。民警随即展开工作，最终嫌疑人曹某迫于压力，主动投案自首。</p><p>&nbsp;</p><p>2022年8月，曹某发现所在公司的网站后台有漏洞，身为软件工程师的他，决定铤而走险，用其母亲的身份证自行注册了一个ETC账户，并绑定了其母亲的银行卡。随后曹某以每周4至5次、每次1万元的频率，陆续从该账户内提取了230余万元。之后，曹某又利用朋友的身份证再次办理账号，以同样的方式再次从公司提现36万元。</p><p>&nbsp;</p><p></p><h4>国内厂商已无法从英伟达下单，寻求国内替代成唯一方案</h4><p></p><p>&nbsp;</p><p>10月25日，英伟达在向美国证券交易委员会（SEC）递交的一份文件中披露，美国政府通知公司，针对中国更新的“先进计算芯片和半导体制造设备出口管制规则”立即生效，中国云厂商、服务器厂商、销售代理商均已无法从英伟达下单。“出口管制规则”刚出炉时，原定有30天公示期，被行业人士视为“最后30天窗口期”。在窗口期内，中国企业原本可以集中采购、运输急需的高端AI芯片。美国芯片企业出于对中国市场的依赖，理论上也会和中国企业打配合。</p><p>&nbsp;</p><p>按照美国政府最新的要求，“综合性能达到4800或以上，并且是为数据中心设计或销售的产品”将需要“立即停止出口”。NVIDIA给出的说明是，公司A100、A800、H100、H800和L40S产品的发货将立即受到影响。一位云厂商高管表示，美国“出口管制规则”步步紧逼的情况下，规模化采购国产芯片是培育本土产业链的唯一路径。</p><p>&nbsp;</p><p></p><h4>苦英伟达“一家独大”久矣？甲骨文、IBM 下单 AMD</h4><p></p><p>&nbsp;</p><p>因英伟达 GPU 供应紧张，甲骨文与 IBM 转向 AMD 产品。甲骨文计划使用 AMD Instinct MI300X AI 芯片及 HPC 用GPU；IBM 可能采用 AMD的Xilinx FPGA 解决方案。AMD Instinct MI300X 今年 6 月发布，提供强大性能，预计 2024 年供应充足。AMD 拥有足够芯片零部件，可以支撑 MI300 在四季度发布。AMD 的 FPGA 产品线因具有更低的功耗和时延，在AI推理中具有优势。</p><p>&nbsp;</p><p></p><h4>芯片设计初创公司SiFive裁员20%，此前估值25亿美元</h4><p></p><p>&nbsp;</p><p>10月25日消息，当地时间周二美国芯片设计初创公司SiFive表示，公司已裁员约20%，约130人。SiFive总部位于美国加州圣克拉拉，芯片设计均基于RISC-V技术架构，该公司竞争对手是最近上市的英国芯片设计公司Arm。和Arm一样，SiFive的工作专注于芯片底层设计，而不是芯片本身。</p><p>&nbsp;</p><p>SiFive在一份声明中表示：“随着我们发现并专注于最大机会，公司正对所有全球团队进行战略重新调整，为的是更好满足客户快速变化的需求。”SiFive发言人大卫·米勒（David Miller）表示，这次裁员涉及公司所有部门，其中也包括高管团队。他强调，公司的产品线不变。</p><p>&nbsp;</p><p></p><h4>AMD回应大幅裁员：小幅优化和调整</h4><p></p><p>&nbsp;</p><p>近日有传闻称，AMD在中国区大规模裁员。就此，AMD官方回应称：“网络传闻失实。基于公司战略的调整，公司近期对组织架构进行了小幅度的优化和重组。”</p><p>&nbsp;</p><p>同时了解到，为顺应市场的变化，AMD中国区还在为重点领域的业务继续开展招聘。根据此前发布的财报数据，AMD今年第二季度收入54亿美元，环比基本持平，净利润2700万美元，环比增长119％，总收入和调整后每股收益均超出华尔街分析师预期。</p><p>&nbsp;</p><p></p><h4>宿华辞任快手科技董事长，CEO程一笑兼任</h4><p></p><p>&nbsp;</p><p>10月20日晚间，快手科技在港交所发布公告宣布，由于需要专注其他事务，自2023年10月29日起，宿华不再担任董事会董事长，将继续担任执行董事和薪酬委员会成员，其不同投票权不会发生变化，董事长一职由程一笑接任。</p><p>&nbsp;</p><p>两年前的10月29日，快手科技宣布宿华和程一笑调整分工，宿华辞去首席执行官一职，继续担任董事长、执行董事、薪酬委员会委员，负责制定公司长期战略；程一笑出任首席执行官，负责公司日常运营及业务发展。</p><p>&nbsp;</p><p></p><h4>消息称张一鸣通知负责人：PICO业务看不到希望将关停，字节人士否认</h4><p></p><p>&nbsp;</p><p>10月21日消息，有媒体报道称PICO业务将被逐步关停，字节跳动放弃元宇宙。文章引述相关人士的说法称，PICO 负责人近期前往新加坡找张一鸣汇报工作，得到的反馈是字节跳动将逐步放弃 PICO 业务，并称原因是“PICO 所处的硬件领域非字节跳动所擅长，几年下来成绩未达预期、并且看不到未来的希望”。</p><p>&nbsp;</p><p>对此，字节跳动相关负责人向媒体回应称，此消息不实。PICO在正常运营，公司会长期投入XR业务。</p><p>&nbsp;</p><p></p><h4>财报一发，没有一个创始人能笑着面对</h4><p></p><p>&nbsp;</p><p>马斯克在特斯拉财报会上表现像“小婴儿”</p><p>&nbsp;</p><p>金融分析师兼 YouTube 博主凯文・帕夫拉斯（Kevin Paffrath）透露，在特斯拉糟糕的财报电话会议上，其首席执行官埃隆・马斯克（Elon Musk）表现得像个“小婴儿”，几乎要哭出来！Paffrath说：“对于一位公司的领导者来说，抱怨经济形势而不是提出应对计划，这似乎是可悲的！”</p><p>&nbsp;</p><p>据悉，马斯克在电话会议上一度暗示，由于利率上升，借贷成本更高，他将推迟工厂的建设。他说：“如果利率保持在高位，甚至更高，人们购买汽车就会变得更加困难。他们根本负担不起买车的开支。”但Paffrath抨击了马斯克的回应，称这位特斯拉首席执行官“害怕了”，并建议马斯克应该与墨西哥政府谈判达成更好的协议，或者可能“向高收入地区打广告”。Paffrath此前曾呼吁特斯拉向非粉丝推广其产品。</p><p>&nbsp;</p><p>谷歌市值大跌8500亿，云业务Q3收入不及预期</p><p>&nbsp;</p><p>10月25日，谷歌母公司Alphabet发布了截至9月30日的2023财年第三季度财报。财报显示，Alphabet第三季度营收为766.93亿美元，较上年同期的690.92亿美元增长11%，按固定汇率计算同比增长11%；净利润为196.89亿美元，较上年同期的139.10亿美元增长42%。</p><p>&nbsp;</p><p>Alphabet第二季度营收和每股收益均超出分析师一致预期，但是云业务营收不及预期。由于云业务对于Alphabet未来增长至关重要，它的营收不及预期引发投资者担忧，拖累股价在盘后交易中大跌6.65%，市值蒸发1164亿美元(约合8510亿元人民币)。</p><p>&nbsp;</p><p>微软CEO今年薪酬降低11.6%，承认放弃Windows Phone是错误决定</p><p>&nbsp;</p><p>10月25日，微软发布了 2024 年第 1 财季（截至 2023 年 9 月 30 日）财报，其中显示今年微软 CEO 萨蒂亚・纳德拉（Satya Nadella）基于绩效的薪酬有所降低，并且不再与微软 XGP 业务增长情况挂钩。外媒认为这是因为微软 XGP 用户增长连续两年未达到预期目标。</p><p>&nbsp;</p><p>此外，纳德拉在接受媒体采访时候，还承认放弃 Windows Phone 和移动设备是错误决定，这也是微软历史上第三位承认在移动领域犯错的首席执行官。</p><p>&nbsp;</p><p>纳德拉在2014年接替鲍尔默（Steve Ballmer）担任CEO，仅仅一年之后就将鲍尔默任内斥资74亿美元收购的诺基亚手机业务勾销。纳德拉接受采访时候表示微软“退出”手机业务本应该处理的更好。勾销诺基亚手机业务之后，Windows Phone事实上就退出了移动舞台。微软后来推出了运行Android的 Surface Duo和Surface Duo 2智能手机，但由于没有后续产品，也缺乏软件更新，Surface Duo手机品牌的未来悬而未决。</p><p>&nbsp;</p><p>扎克伯格豪赌元宇宙巨亏271亿元，明年AI将成Meta最大投资领域</p><p>&nbsp;</p><p>10月26日，脸书母公司Meta发布了截至 9 月 30 日的 2023 财年第三季度财报。财报显示，Meta 第三季度总营收为 341.46 亿美元，较上年同期的 277.14 亿美元增长 23%；净利润为 115.83 亿美元 (约合 847.55 亿元人民币)，较上年同期的 43.95 亿美元增长 164%。</p><p>&nbsp;</p><p>Meta 创始人马克・扎克伯格 (Mark Zuckerberg) 大力押注的元宇宙业务依旧在“流血”。第三季度，Meta 负责元宇宙业务的现实实验室部门再次营业亏损 37 亿美元 (约合 271 亿元人民币)。对于公司的后续发展，扎克伯格表示在2024年，就工程和计算资源而言，AI将成为Meta最大的投资领域。此外，扎克伯格补充道，为了避免布置大量的新员工，公司将降低一些非AI项目的优先级，并将相关人员转向从事AI工作。</p><p>&nbsp;</p><p>科大讯飞净利大跌，创始人套现25亿</p><p>&nbsp;</p><p>据科大讯飞财报显示，今年第三季度，科大讯飞的营收同比实现2.89%的增长，但公司前三季度的营收却小幅下跌0.37%。利润方面，科大讯飞第三季度、前三季度归属于上市公司股东的净利润分别减少81.86%、76.36%。而前三季度，公司扣除非经常性损益的利润为-3.24亿元。</p><p>&nbsp;</p><p>此次发布的财报中，科大讯飞还提到，截至7月3日，公司2022年7月3日通过的股份回购期限已届满。不过，公司大手笔回购的同时，身为科大讯飞创始人和董事长的刘庆峰却在第三季度减持了公司的股份。若按8月14日科大讯飞63.98元/股的收盘价计算，刘庆峰此次减持预计将套现超25亿元。对此，科大讯飞在公司发布的公告中解释称，此前刘庆峰曾通过质押融资等方式借款筹集资金23.5 亿元，鉴于债务已到期，刘庆峰需要减持股份用于偿还上述借款本金。</p><p>&nbsp;</p><p>另外，因为学习机出现违背主流价值观内容，并引发科大讯飞股价午后跳水触及跌停后，科大讯飞董事长刘庆峰表示，问题出现后，已经第一时间把大模型的安全审核能力放进来，同时也跟公安报备了相应情况。他同时感慨，“中国的创新不容易，我们今天刚发布了星火大模型最新版本，但负面舆情却铺天盖地，这背后是有推手的。”</p><p>&nbsp;</p><p></p><h4>国家数据局正式揭牌</h4><p></p><p>&nbsp;</p><p>10月25日上午，国家数据局正式揭牌。国家数据局负责协调推进数据基础制度建设，统筹数据资源整合共享和开发利用，统筹推进数字中国、数字经济、数字社会规划和建设等，由国家发展和改革委员会管理。</p><p>&nbsp;</p><p></p><h2>IT 业界</h2><p></p><p></p><h4>故障超过 8 小时，语雀公布原因及赔偿方案</h4><p></p><p>&nbsp;</p><p>10&nbsp;月 23 日消息，据多位用户反馈，蚂蚁集团旗下的在线文档编辑与协同工具语雀在 23 日 14:00~15:00&nbsp;之间出现大规模服务器故障，在线文档和官网目前均无法打开。在经历了近 10&nbsp;小时的故障之后，语雀服务现已全部恢复正常，各端语雀都可以正常访问，功能也恢复。</p><p>&nbsp;</p><p>10月24日晚，蚂蚁集团旗下在线文档编辑与协同工具语雀就前一日持续7个多小时的重大服务故障致歉，并公布故障原因及赔偿方案。语雀方面表示，10月23日下午，服务语雀的数据存储运维团队在进行升级操作时，由于新的运维升级工具bug，导致华东地区生产环境存储服务器被误下线。语雀将向所有受到故障影响的用户提供赔偿，针对语雀个人用户将赠送6个月的会员服务，针对语雀空间用户会单独制定赔偿方案。语雀方面强调，用户所有数据均未丢失。</p><p>&nbsp;</p><p>更多详情可以查看：</p><p><a href=\"https://mp.weixin.qq.com/s/LOjiaULzEgkI5VEe74kX0g\">语雀突发 P0 级事故！宕机 8 小时被网友怒喷，运维又背锅？</a>\"</p><p>&nbsp;</p><p></p><h4>小米正式发布小米澎湃OS</h4><p></p><p>&nbsp;</p><p>10月26日，在小米澎湃OS暨小米14系列新品发布会上，小米董事长雷军发表演讲。雷军表示，小米集团宣布全新战略升级：从手机 X AIo，升级到人车家全生态。</p><p>&nbsp;</p><p>而小米澎湃OS也正式亮相。雷军表示，他对澎湃OS提出了五个要求：一、每个独立设备能实现最佳性能表现；二、更加便捷高效的跨端连接；三、成为生态智能大脑，为用户提供主动智能服务；四、实现跨设备全系统隐私安全的坚固防护；五、坚持建设开放生态。</p><p>&nbsp;</p><p></p><h4>华为：全面完成 5G-A 技术性能测试</h4><p></p><p>&nbsp;</p><p>近日，华为全面完成5G-A技术性能测试。华为方面介绍称，5G-A作为5G的演进和增强，连接速率和时延等传统网络能力实现了10倍提升，同时引入了通感一体、无源物联、内生智能等全新的革命性技术。</p><p></p><h4>Python 公布了实现 no-GIL Python 的计划</h4><p></p><p>&nbsp;</p><p><a href=\"https://www.infoq.cn/article/XahMWSZLXwqYo6TWKDvg?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">Python </a>\"指导委员会宣布接受 PEP 703（Making the Global Interpreter Lock Optional，让全局解释器锁成为可选），公布了实现 no-GIL（或称为自由线程）Python 详细的路线图。</p><p>&nbsp;</p><p>Python 的全局解释器锁（GIL）阻止了同时多线程执行代码，成为了在多核 CPU 上提高 Python 代码运行效率的一大障碍，消除这一障碍是好事，但这也有可能会破坏现有的扩展模块，或显著降低性能以及可维护性。而第三方软件包生态系统是 Python 的一大优势，Python 项目在实现自由线程时需要谨慎，需要避免破坏这一优势。推进 PEP 703 需要将其纳入主线，作为定期发布版本的一部分推出。Python 指导委员计划分成三个阶段：实验阶段，支持但不默认阶段，默认阶段。</p>",
    "publish_time": "2023-10-30 08:05:02",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "前端“秀肌肉”，云端 Photoshop 亮相",
    "url": "https://www.infoq.cn/article/8H2DQIB9m4mu5KBSMRxK",
    "summary": "<p>WebAssembly + Emscripten, Web 组件 + Lit, Service Workers + Workbox，以及全新 Web API 在此汇聚。Chrome 和 Adobe 正在携手打造新的图像编辑体验。</p><p></p><p>为 Photoshop 桌面应用程序开发 Web（photoshop.adobe.com）版，标志着将高度复杂和图形密集型软件引入浏览器的一个巨大里程碑。它的诞生离不开 Adobe 工程师们的多年努力，以及同 Chrome 等浏览器供应商的携手合作与 Web 技术本身的持续发展。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/23/23919d6bfe4d48af201aa2ba5d3af2fd.png\" /></p><p></p><p>Photoshop Web 版中包含一系列高级功能，例如生成填充等</p><p></p><p>在本次案例研究中，我们将一同了解现已公布的高级 Web 功能、已经实现的性能优化以及未来有望落地的更多可能性。感兴趣的朋友还可参考《Photoshop 的 Web 之旅》（<a href=\"https://web.dev/ps-on-the-web/%EF%BC%89%E4%B8%80%E6%96%87%E4%BA%86%E8%A7%A3%E6%9B%B4%E5%A4%9A%E7%BB%86%E8%8A%82%E4%BF%A1%E6%81%AF%E3%80%82\">https://web.dev/ps-on-the-web/）一文了解更多细节信息。</a>\"</p><p></p><p></p><h2>发展愿景：让 Photoshop 登陆浏览器</h2><p></p><p></p><p>几十年来，Photoshop 一直是图像编辑和图形设计领域的黄金标准，一直在 Windows 和 macOS 平台上为创意人士提供助力。但随着将其从桌面平台上解放出来，一个充满机遇的新世界也由此敞开了大门。</p><p></p><p>Web 的优势，在于无处不在、顺畅灵活的访问方式。用户只需打开浏览器即可着手编辑和协作，无需任何安装步骤。工作内容还可跨设备实现无缝衔接。</p><p></p><p>通过链接形式共享工作流程。Photoshop 文档可以通过 URL 访问，而不再隐藏于文件系统之内。如此一来，创作者可以轻松将链接发送给其他协作伙伴。</p><p></p><p>轻松实现跨平台操作。作为运行时，Web 抽象掉了底层操作系统，使得 Photoshop 能够覆盖用户手中的多种不同平台。</p><p></p><p>但实现这个愿景也面临着巨大的技术挑战，工程师们需要重新思考 Photoshop 这样强大的应用程序要如何在 Web 上运行、起效。</p><p></p><p></p><h2>全新 Web 功能，释放 Photoshop 潜力</h2><p></p><p></p><p>近年来，新的 Web 平台功能不断涌现。依托各种标准化和实施成果，Photoshop 级的应用程序终于具备了登陆 Web 端的可能性。Adobe 工程师也在项目中创新性地使用了几大关键下一代 API。</p><p></p><p></p><h2>使用 Origin 私有文件系统，实现高性能本地文件访问</h2><p></p><p></p><p>Photoshop 在操作中需要读取和写入大量 PSD 文件，这就要求其必须高效访问本地文件系统。新的 Origin 私有文件系统 API（OPFS）就提供一套指定特定数据源的快速虚拟文件系统。</p><p></p><p><code lang=\"null\">const opfsRoot = await navigator.storage.getDirectory();\n</code></p><p></p><p>OPFS 能够快速创建、读取、写入和删除文件。例如：</p><p></p><p><code lang=\"null\">// Create fileconst file = await opfsRoot.getFileHandle('image.psd', {create: true});// Get read/write handleconst handle = await file.createSyncAccessHandle();// Write contents handle.write(buffer);// Read contentshandle.read(buffer);// Delete fileawait file.remove();\n</code></p><p></p><p>对于绝对速度最快的同步操作，Web Workers 能够使用 FileSystemSyncAccessHandle。</p><p></p><p>这种本地高性能文件系统，让 Photoshop 具备了在浏览器端严格处理文件工作流程的能力。</p><p></p><p></p><h2>释放 WebAssembly 的力量</h2><p></p><p></p><p>WebAssembly 的任务，是使用 JavaScript 重新创建 Photoshop 计算密集型图形处理体系的重要前提。Adobe 使用 Emscripten 编译器将其现有 C/C++ 代码库移植成了 WebAseembly 模块。</p><p></p><p>其中，WebAssembly 的以下重要功能发挥了关键作用：</p><p></p><p>Threads —Photoshop 使用工作线程以并行方式处理任务，例如处理图像图块：SIMD — SIMD 矢量指令用于加速像素操作与过滤。异常处理 — C++ 异常在 Photoshop 代码库中得到广泛应用。流实例化 — Photoshop 的 80 MB+ WASM 模块离不开流式编译的支持。调试 — Chrome 的 WebAssembly 调试支持在 DevTools 中发挥着重要作用。运用 P3 宽色域</p><p></p><p>P3 那宽广的色域足以令 sRGB 色谱相形见绌，但长期以来，后者一直是 Web 端上的唯一选择。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d8/d862dfc5c411182ed03cfdcb69474b91.png\" /></p><p></p><p>如今，Photoshop 使用新的 color() 函数与 Canvas API 将 P3 充分运用起来，带来了更加准确的色彩表现。</p><p></p><p><code lang=\"null\">color: color(display-p3 1 0.5 0)\n</code></p><p></p><p></p><h2>Web 组件让 UI 更加灵活</h2><p></p><p></p><p>Photoshop 属于 Adobe 整体 Creative Cloud 生态系统中的组成部分。使用基于 Lit 构建的标准化 Web 组件策略，即可实现跨应用程序的 UI 一致性。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f8/f8f57c523e50e0f71c5dc4807c066705.png\" /></p><p></p><p>Photoshop 的 UI 元素来自 Adobe 的 Spectrum Web 组件库，Adobe 设计系统中的各种实现均来自该库。</p><p></p><p>Spectrum Web 组件具备以下特性：</p><p></p><p>默认可及性——开发时即考虑到各现有及新兴浏览器规范，并可支持辅助服务选项。轻量化——使用 LitElement 以将运行开销控制在最低。基于标准——基于 Web 组件标准（例如自定义元素与 Shaodw DOM）进行构建。框架中立性——依托于浏览器的支持，可匹配任意框架。</p><p></p><p>此外，整个 Photoshop 应用均使用基于 Lit 的 Web 组件构建而成。Lit 的模板和虚拟 DOM diffing 可实现高效 UI 更新。Web 组件封装更可以在必要时轻松集成来自其他团队的 React 代码。</p><p></p><p>总体而言，Web 组件的浏览器原生自定义元素与 Lit 的性能优势相结合，共同为 Adobe 提供了构建 Photoshop 复杂 UI 所需要的灵活性，同时保持其拥有良好的运行效率。</p><p></p><p></p><h2>优化 Photoshop在浏览器中的性能表现</h2><p></p><p></p><p>虽然有各项 Web 新功能作为实现基础，但像 Photoshop 这样的资源密集型桌面应用程序仍需要大量的性能跟踪与优化调整，才能转化为一流的线上使用体验。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/85/85f65ccc4144176561bd31900eae870f.png\" /></p><p></p><p>在 Photoshop Web 应用进行初始加载时，会对长任务进行拆分</p><p></p><p></p><h2>使用 Service Workers缓存资产与代码</h2><p></p><p></p><p>Service Workers 允许 Web 应用在本地缓存其资产、代码和其他资源，以便在初次访问之后加快加载速度。尽管尚不完全支持离线运行，但 Photoshop 已经依托 Service Workers 来缓存其 WebAssembly 模块、脚本及其他资源。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/10/10f98b415d4fe440697f106625469a92.png\" /></p><p></p><p>在 Chrome DevTools Application 面板 &gt; 缓存存储处，可查看 Photoshop Web 版已经预缓存的各种资源类型。在这里，我们可以看到其代码被拆分成多个 JavaScript 块进行本地缓存，这样就能在后续加载时获得极快的加载速度。</p><p></p><p>这套缓存机制对于加载性能产生了巨大影响。在首次访问之后，后续加载往往非常快（以 M1 Macbook 平台为例）：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/cd/cdfe8b97c61338595e48d9578e7594bf.png\" /></p><p></p><p>Adobe 还使用 Workbox 库，轻松将 Service Worker 缓存集成至整个构建过程当中。</p><p></p><p></p><h2>V8 引擎对缓存资源进行优化</h2><p></p><p></p><p>当从 Service Worker 缓存处返回资源时，V8 引擎会采取以下优化策略：</p><p></p><p>在 install 期间缓存的资源，会被立即编译并进行代码缓存，从而实现更快、更一致的性能表现。在 fetch 期间通过 Cache API 缓存的资源，在第二次加载时将获得缓存优化，速度高于常规缓存。V8 会根据缓存检测资源的重要度，并更主动地进行编译。</p><p></p><p>这些优化策略能够覆盖 Photoshop 中的大量缓存 Wasm 模块。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/6e/6e69d4bce114b262d277ea1b19a4bfb5.png\" /></p><p></p><p>Photoshop Web 版在后续加载中能够更快显示关键视图，这在一定程度上归功于 V8 的代码缓存机制。</p><p></p><p></p><h2>大型 WebAssembly 模块的流式处理与缓存</h2><p></p><p></p><p>Photoshop 的代码库需要多个大型 WebAssembly 模块，有些大小已经超过 80 MB。V8 和 Chrome 能够支持流式编译，因此可以高效处理这些大体量模块。</p><p></p><p>此外，在首次从 Serivce Worker 处请求 WebAssembly 模块时，V8 会生成优化版本并将其存入缓存，这种方式对于 Photoshop 这类大体量应用至关重要。</p><p></p><p></p><h2>通过多线程实现图形并行操作</h2><p></p><p></p><p>Photoshop 中的很多核心图像处理操作（例如转换像素）可以通过跨线程并行处理来大幅加快速度。WebAssembly 的多线程支持可以利用多核设备的算力优势，快速执行各类计算密集型图形任务。</p><p></p><p>如此一来，Photoshop 就能以与桌面版相同的多线程方法高效执行 WebAssembly 当中的关键图像功能。</p><p></p><p></p><h2>调试 WebAssembly以做进一步优化</h2><p></p><p></p><p>强大的 WebAssembly 调试支持，对于诊断和修复开发过程中的性能瓶颈至关重要。</p><p></p><p>Chrome DevTool 能够分析 WASM 代码、设置断点并检查各种变量，由此体现 JavaScript 自身的可调试性优势：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d4/d49bc80911b573c5468b0a98334c9c81.png\" /></p><p></p><p></p><h2>将设备上的机器学习功能与 TensorFlow.js 相集成</h2><p></p><p></p><p>Web 版 Photoshop 的最新版本，还包含基于 TensorFlow.js 的 AI 驱动功能。将云端模型转为本地设备运行，有助于改善隐私、延迟和成本。</p><p></p><p></p><blockquote>TensorFlow.js是谷歌发布的一套开源机器学习库，主要面向希望在浏览器中运行客户端的JS开发人员。其具备成熟的Web机器学习选项，以及全面的WebGL及WebAssembly后端操作程序支持。未来随着Web新标准的持续发展，用户还可选择在浏览器中使用WebGPU后端以获得更佳性能。</blockquote><p></p><p></p><p>Select Subject（选择对象）功能，可使用机器学习自动提取图像中的主要前景对象，从而大大加快复杂取像的执行速度。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/7f/7f1c95f4da09d11fadbcccf38ed5ddd1.png\" /></p><p></p><p>以这张夕阳插图为例，我想将画面改为夜间。这时我们可以使用“选择对象”加 AI 提示来提取相应区域进行修改。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/02/02ae848adbf7c4d3177c1d9ab5adbf57.png\" /></p><p></p><p>Photoshop 能够根据我的 AI 提示词生成更新后的插图。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/43/43fc3c0bd27022be966ba6ab29f1b4f0.png\" /></p><p></p><p>还可添加更多视觉效果。</p><p></p><p>其中的 AI 模型已经由 TensorFlow 转换为 TensorFlow.js，因此可实现本地运行：</p><p></p><p><code lang=\"null\">// Load Select Subject modelconst model = await tf.loadGraphModel('select_subject.json');// Run inference on image tensor const {mask, background} = model.execute(imgTensor);// Refine selection from mask\n</code></p><p></p><p>Adobe 还与谷歌合作为 Emscripten 开发了代理 API，希望借此解决 Photoshop 中 WebAssembly 代码与 TensforFlow.js 之间的同步问题，并由此实现了框架间的无缝集成。</p><p></p><p>“由于谷歌团队通过各种受支持的后端（WebGL、WASM、Web GPU）提高了 TensorFlow.js 的硬件执行性能，模型性能实现了 30% 至 200% 的提升（模型体量越大，性能收益越高），并在浏览器端实现了近实时性能。”</p><p></p><p>关键模型也进行了优化，重点关注 Conv2D 等重视性能的操作类型。Photoshop 还可根据性能需求，选择在本地设备还是云端运行模型。</p><p></p><p>关于更多详细信息，请参阅 TensorFlow.js Photoshop 说明文章：</p><p></p><p><a href=\"https://blog.tensorflow.org/2023/03/how-adobe-used-web-ml-with-tensorflowjs-to-enhance-photoshop-for-web.html%E3%80%82\">https://blog.tensorflow.org/2023/03/how-adobe-used-web-ml-with-tensorflowjs-to-enhance-photoshop-for-web.html。</a>\"</p><p></p><p></p><h2>Web 版 Photoshop 的未来规划</h2><p></p><p></p><p>Photoshop Web 版的发布代表着一个巨大的里程碑，同时也是通往无穷可能性与全新世界的第一步。</p><p></p><p>Photoshop 将继续在 Web 端不断开拓，随着浏览器供应商对标准和性能的增强而逐步提升，并陆续发布更多功能选项。Photoshop Web 版仅仅只是开始，Adobe 后续计划在 Web 上积极构建完整的 Creative Cloud 套件，立足浏览器解锁更多更为复杂的设计类应用。</p><p></p><p>Adobe 还将与浏览器工程师们密切合作，共同推进标准和性能的提升，协力将 Web 打造成真正的独立平台，为各类雄心勃勃的用例提供支持。更多激动人心的时刻，就在前方！</p><p></p><p></p><h5>原文链接：</h5><p></p><p></p><p><a href=\"https://medium.com/@addyosmani/photoshop-is-now-on-the-web-38d70954365a\">https://medium.com/@addyosmani/photoshop-is-now-on-the-web-38d70954365a</a>\"</p><p></p><p></p><h5>相关阅读：</h5><p></p><p></p><p><a href=\"https://www.infoq.cn/article/jds0wDTz7DSUGzpc81hs\">WebAssembly&nbsp;的核心语言特性与未来发展</a>\"</p><p><a href=\"https://xie.infoq.cn/article/0450be77b842463d6abc0daa8\">Photoshop&nbsp;崩溃怎么办无法打开&nbsp;Photoshop</a>\"</p><p><a href=\"https://www.infoq.cn/article/H9VRjX3X1MeXqImEwI6J\">Java 极客眼中的&nbsp;WebAssembly</a>\"</p><p><a href=\"https://xie.infoq.cn/article/a289d0a020cab73be9c559db4\">Photoshop&nbsp;2023 如何切换语言？</a>\"</p>",
    "publish_time": "2023-10-30 09:47:41",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "智谱AI张鹏谈大模型进展和挑战，在CNCC会议上推出第三代基座大模型ChatGLM3",
    "url": "https://www.infoq.cn/article/Ndi571huMEScbH9hcrar",
    "summary": "<p>在2023年10月27日的沈阳CNCC中国计算机大会上，大模型已经成为了大会议题的焦点，各个领域都在围绕大模型展开讨论。</p><p></p><p>在27日上午的“大模型的研究进展与产业应用展望”论坛，由CCF副秘书长谭晓生主持，德国国家工程院院士张建伟、复旦大学计算机学院教授邱锡鹏、智谱AI CEO张鹏、科大讯飞研究院院长刘聪、蚂蚁集团副总裁徐鹏等专家参与讨论的圆桌交流环节也取得了丰富的成果，专家从各自的视角分享了大模型的进展、挑战以及未来的问题。以下整理智谱AI CEO张鹏老师的部分观点。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/3e/80/3e64309742f0047dbee5b8ab84c1af80.png\" /></p><p></p><p>关于大模型领域的进展，张鹏认为，目前大模型的进展可以归结为通用智能，即基础模型的通用智能水平的提升。上一代人工智能大多数还是单向的感知能力。而大模型最大的优势是能把这些感知能力整合起来，形成一个更泛化的、更强大的认知级别的能力。这其中就包括推理能力、复杂问题的拆解能力，以及跨模态对齐能力。</p><p></p><p>最受关注的其实就是跨模态融合的能力，经过实践后发现多模态或者跨模态的数据可以通过训练的方法完美的融合到一起，在一定程度上提升了大模型的智能水平。</p><p></p><p>另外，基于认知能力的提升，可以观察到像智能体 Agent 这一类的研究，确实能够极大地增强大模型在实际应用当中的效果，让大模型从搭配 Benchmark 的实验环境走入到真正的应用当中，来解决实际的应用问题，这在张鹏看来是让人欣喜的进展。</p><p></p><p>大模型在研发和应用过程中也会遇到不少的挑战。张鹏认为，除了算力和数据方面的挑战之外，在算法方面也同样有挑战，当前所有的大模型都基于2017年提出的Transformer架构，未来是否会被改进或被新的东西代替也是大家关心的问题。另外张鹏考虑更多的另一个挑战是应用安全问题，包括私有数据训练等，首先要考虑的就是安全。</p><p></p><p>关于产出的内容审核的解决办法，大模型产出的内容在提供给用户之前，对于所提供的内容审核问题也是很重要的。张鹏说，首先平台要保证尽量不要传递错误的讯息，其次是为了达到这个目的，可以借鉴已有的多年的经验，例如人机融合或者人机交互是提升工作效率的有效方式之一。通过借鉴互联网、社交媒体等行业的经验，可以降低人工成本，并保证内容的安全性。</p><p></p><h3>智谱 ChatGLM3 以及相关系列产品发布</h3><p></p><p></p><p>在此次 CNCC 会议上，智谱AI推出了自主研发的第三代基座大模型ChatGLM3以及相关系列产品。这是继智谱AI推出千亿基座的对话模型ChatGLM和ChatGLM2之后的又一重大突破。</p><p></p><p>此次推出的 ChatGLM3 采用了独创的多阶段增强预训练方法，使训练更为充分。评测显示，在 44 个中英文公开数据集测试中，ChatGLM3 在国内同尺寸模型中排名首位。智谱 AI CEO 张鹏在现场做了新品发布，并实时演示了最新上线的产品功能。</p><p></p><h3>ChatGLM3全新技术升级 更高性能更低成本</h3><p></p><p></p><p>通过更丰富的训练数据和更优的训练方案，智谱AI推出的ChatGLM3性能更加强大。与ChatGLM2相比，MMLU提升36%、CEval提升33%、GSM8K提升179% 、BBH提升126%。</p><p></p><p>同时，ChatGLM3瞄向GPT-4V本次实现了若干全新功能的迭代升级，包括多模态理解能力的CogVLM-看图识语义，在10余个国际标准图文评测数据集上取得SOTA；代码增强模块Code Interpreter根据用户需求生成代码并执行，自动完成数据分析、文件处理等复杂任务；网络搜索增强WebGLM-接入搜索增强，能自动根据问题在互联网上查找相关资料并在回答时提供参考相关文献或文章链接。ChatGLM3的语义能力与逻辑能力得到了极大的增强。</p><p></p><p>ChatGLM3还集成了自研的AgentTuning技术，激活了模型智能体能力，尤其在智能规划和执行方面，相比于ChatGLM2提升了1000% ；开启了国产大模型原生支持工具调用、代码执行、游戏、数据库操作、知识图谱搜索与推理、操作系统等复杂场景。</p><p></p><p>此外，ChatGLM3本次推出可手机部署的端测模型ChatGLM3-1.5B和 ChatGLM3-3B，支持包括 vivo、小米、三星在内的多款手机以及车载平台，甚至支持移动平台上CPU芯片的推理，速度可达20 tokens/s。精度方面1.5B和3B模型在公开Benchmark上与ChatGLM2-6B模型性能接近。</p><p></p><p>基于最新的高效动态推理和显存优化技术，ChatGLM3当前的推理框架在相同硬件、模型条件下，相较于目前最佳的开源实现，包括伯克利大学推出的 vLLM 以及 Hugging Face TGI的最新版本，推理速度提升了2-3倍，推理成本降低一倍，每千tokens仅0.5分，成本最低。</p><p></p><h3>新一代“智谱清言”上线 &nbsp;国内首推代码交互能力</h3><p></p><p></p><p>在全新升级的ChatGLM3赋能下，生成式AI助手智谱清言已成为国内首个具备代码交互能力的大模型产品（Code Interpreter）（<a href=\"https://chatglm.cn/main/code\">https://chatglm.cn/main/code</a>\"）。“代码”功能目前已支持图像处理、数学计算、数据分析等使用场景。</p><p></p><p>随着WebGLM大模型能力的加入，智谱清言也具有了搜索增强能力，可以帮助用户整理出相关问题的网上文献或文章链接，并直接给出答案。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/7d/f7/7d8bb050b2d550f323a7f6b606df01f7.png\" /></p><p></p><p>此前已发布的CogVLM 模型则提高了智谱清言的中文图文理解能力，取得了接近GPT-4V的图片理解能力,它可以回答各种类型的视觉问题，并且可以完成复杂的目标检测，并打上标签，完成自动数据标注。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/30/a9/303865200b30fc355285fae7a60380a9.png\" /></p><p></p><p>自2022年初，智谱AI推出的GLM系列模型已支持在昇腾、神威超算、海光DCU架构上进行大规模预训练和推理。截至目前，智谱AI的产品已支持10余种国产硬件生态，包括昇腾、神威超算、海光DCU、海飞科、沐曦曦云、算能科技、天数智芯、寒武纪、摩尔线程、百度昆仑芯、灵汐科技、长城超云等。通过与国产芯片企业的联合创新，性能不断优化，将有助于国产原生大模型与国产芯片早日登上国际舞台。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/47/47a447d222962fce01b6c1f09bbbfdb9.png\" /></p><p></p><p>智谱AI此次推出的ChatGLM3及相关系列产品，全面提升了自身的模型性能，为业界打造了更开放的开源生态，并进一步降低了普通用户使用AIGC产品的门槛。AI正在引领我们进入一个新的时代，大模型必将加速这一时刻的到来。</p><p></p><h3>【活动推荐】</h3><p></p><p></p><p>在 2023 年 12 月 28-29 日，InfoQ 将在上海举办<a href=\"https://qcon.infoq.cn/2023/shanghai/track\">QCon全球软件开发大会</a>\"，这个会议上结合当前的趋势热点，设置了 GenAI 和通用大模型应用探索、AI Agent 与行业融合应用的前景、LLM 时代的性能优化、智能化信创软件 IDE、LLM 时代的大前端技术、高性能网关设计、面向人工智能时代的架构、高效的编程语言、性能工程、LLM 推理加速和大规模服务、现代数据架构演进、建设弹性组织的经验传递、SaaS 云服务弹性架构设计等专题，目前也正在邀请业界的专家来会议上演讲。感兴趣的可以点击<a href=\"https://qcon.infoq.cn/2023/shanghai/track\">QCon会议官网</a>\"，查看详细的介绍，也欢迎您来会议上演讲，分享技术实践。</p>",
    "publish_time": "2023-10-30 09:51:56",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "基于 Dubbo，如何利用APISIX 构建跨网 RPC",
    "url": "https://www.infoq.cn/article/9jJUiWSlyYueK14artaj",
    "summary": "<p>作者｜王晓彬</p><p>&nbsp;</p><p></p><blockquote>为解决数据跨网问题，政采云搭建了一条基于&nbsp;Dubbo&nbsp;的“高速公路”，同时采用了&nbsp;APISIX&nbsp;作为中心网关，为网络路由、公共特性提供支持。本文将重点介绍政采云“高速公路”工程建设中如何采用节流策略来应对挑战。我们将讨论链路协议的优化实践以及对网络传输效率的思考。</blockquote><p></p><p>&nbsp;</p><p>政采云平台是一个政府采购专属平台，为各级政府部门和国有企业提供支持。从网络架构的角度来看，政采云平台是一个集合了公有云、私有云和政务云的混合云网络。所以对于业务来说，跨网数据传输是一个常见的需求场景。</p><p>&nbsp;</p><p>为了满足这种需求，政采云“高速公路”工程于&nbsp;2022&nbsp;年底启动，旨在整合现有的网络传输方案，提供一致、便捷和高速的跨网业务体验。随着跨网方案整合的推进，公司的跨网流量越来越多地流向了新型基础设施——政采云“高速公路”工程。</p><p>&nbsp;</p><p></p><h1>挑战</h1><p></p><p>&nbsp;</p><p>“高速公路”方案得到了公司的支持，在&nbsp;2023&nbsp;年上半年通过新业务的试点后，下半年开始陆续迁移历史跨网方案的业务。从监控中，我们感受到了来自流量的压力。具体表现为：</p><p>&nbsp;</p><p>心跳应用告警频繁发生。监控指标如响应时间（RT）和吞吐量下降。</p><p>&nbsp;</p><p>为了确保业务的稳定性并提高用户体验，我们采取了各种优化措施。总体而言，我们主要探索了两种思路：</p><p>&nbsp;</p><p>资源优化：这种优化思路相对较简单，主要涉及资源的重新调配。具体措施包括对单点的中心网关和&nbsp;Dubbo&nbsp;网关进行资源隔离，以最小化故障对系统的影响。此外，通过直接增加pod等方式，也能有效缓解压力。这样可以确保在资源方面有足够的储备，以满足系统在高负载情况下的需求。性能优化：这一思路需要在架构层面进行深入优化，以尽可能填补木桶模型的短板。这是非常重要的，因为只有通过性能的最大化利用，才能实现系统的水平扩展。</p><p>&nbsp;</p><p>综合考虑这两种思路，可以在资源充足的同时，通过性能优化来确保系统的稳定性和高可用性。这种综合策略通常是解决高压力环境下的系统性能问题的有效方法。</p><p></p><h1>问题与目标</h1><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/92/9234dbdc9126ff19240a50e263faaf7a.png\" /></p><p></p><h2>跨网&nbsp;RPC（“高速公路”）的主要流程</h2><p></p><p>&nbsp;</p><p>客户端发起请求，包括生成代理、方法调用、参数返回的序列化，发起网络请求；基于&nbsp;Dubbo&nbsp;协议的本地网络传输；出口网关（基于&nbsp;Dubbo&nbsp;的&nbsp;Java&nbsp;应用）转发，涉及获取请求、反序列化参数、HttpClient&nbsp;转发；基于&nbsp;HTTP&nbsp;协议的公网网络传输；APISIX&nbsp;中心网关转发；基于&nbsp;HTTP&nbsp;协议的公网网络传输；入口网关转发，涉及获取请求、HTTP&nbsp;包拆解、参数序列化、Dubbo&nbsp;泛化转发；基于&nbsp;Dubbo&nbsp;协议的本地网络传输；服务端接收请求，获取数据、反序列化参数、方法调用、序列化结果，返回数据；原路返回，同请求流程。</p><p>&nbsp;</p><p>整个流程对性能影响比较大的环节有：Sdk&nbsp;行为&nbsp;[1,9]，网络传输&nbsp;[2,4,6,8]&nbsp;和网关行为&nbsp;[3,5,7]。其中，Sdk&nbsp;行为涉及到&nbsp;RPC&nbsp;框架选型，在当前公司已经广泛使用&nbsp;Dubbo&nbsp;的背景下，可以先不考虑。需要重点考虑的，则是网络传输中协议的选择以及网关对性能的影响。</p><p>&nbsp;</p><p></p><h3>传输协议问题</h3><p></p><p>&nbsp;</p><p>鉴于现有背景，用户通常希望使用本地Dubbo一样直接跨网。所以。“高速公路”工程的设计是围绕&nbsp;Dubbo&nbsp;框架的特性进行的。</p><p>&nbsp;</p><p>与业务对接中，经常会被问到，我们使用了&nbsp;Dubbo&nbsp;的某个特性，你们能否支持？出于对场景支持的考虑，在设计“高速公路”架构时，我们重点考虑了接近原生体验的特性。为此，我们设计了隧道机制。现在，基于这一特性，我们可以轻松地对业务说：“是的，可以支持！”</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c5/c5f2912ddc42e12ce6491d33b195c2ff.jpeg\" /></p><p>隧道机制方案的中间层使用了&nbsp;HTTP&nbsp;协议作为隧道协议，它可以穿透层层网络设备和网关，是比较稳健的一种方式。但是在流量压力下，整体的性能/吞吐量，逐渐成为当前方案的主要矛盾。</p><p>&nbsp;</p><p>首先，在协议层面，我们先要了解下&nbsp;HTTP/1.1&nbsp;协议存在的性能问题。</p><p>&nbsp;</p><p>HTTP&nbsp;头部巨大且重复，由于&nbsp;HTTP&nbsp;协议是无状态的，每一个请求都得携带&nbsp;HTTP&nbsp;头部，特别是对于有携带&nbsp;Cookie&nbsp;的头部，而&nbsp;Cookie&nbsp;的大小通常很大；队头阻塞问题，同一连接只能在完成一个&nbsp;HTTP&nbsp;事务（请求和响应）后，才能处理下一个事务；</p><p>&nbsp;</p><p>为此，我们需要寻找一个更加高效的传输层协议来代替&nbsp;HTTP/1.1。</p><p>&nbsp;</p><p></p><h3>网关问题</h3><p></p><p>&nbsp;</p><p>另外一个比较明显的瓶颈，是本地集群内的&nbsp;Dubbo&nbsp;网关。</p><p>&nbsp;</p><p>Dubbo&nbsp;网关负责接收来自本地客户端的&nbsp;Dubbo&nbsp;协议数据，反序列后通过&nbsp;HTTP&nbsp;转发至公网中心网关。因为市面上没有&nbsp;Dubbo&nbsp;转&nbsp;HTTP&nbsp;的网关，第一个版本我们选择了自研。在转发效率上，显然有天然的不足。主要有以下几个原因：</p><p>&nbsp;</p><p>对网关本身性能的担忧。比如下图中，Spring&nbsp;Cloud&nbsp;Gateway&nbsp;对比其他网关的性能表现不足。同样是基于&nbsp;Netty&nbsp;的&nbsp;Java&nbsp;网关，我们也没有信心能比&nbsp;Spring&nbsp;Cloud&nbsp;Gateway&nbsp;更优秀。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c9/c925a3cedea14adfc3b56766eb035fb8.png\" /></p><p>图片来源见参考资料</p><p>&nbsp;</p><p>额外的参数序列化程序。由于需要转换协议，网关需要额外的一次序列化和反序列化。同时由于Dubbo&nbsp;网关不存在业务参数对象，我们需要一个通用的&nbsp;JavaBean&nbsp;描述对象作为过渡，这又增加了一次转换。HttpClient&nbsp;串行阻塞式的通信方式，将大大的降低并发效率。</p><p>&nbsp;</p><p>为了解决上述问题，我们需要一个类似于&nbsp;NGINX&nbsp;的高性能、非阻塞的网关来实现高效的反向代理，并使用更精简的通信协议来提高吞吐量。</p><p>&nbsp;</p><p></p><h1>优化方案</h1><p></p><p>&nbsp;</p><p></p><h2>协议方面</h2><p></p><p>&nbsp;</p><p>协议方面，我们尝试使用了&nbsp;Dubbo&nbsp;协议作为隧道协议。这能带来哪些收益呢？简而言之包括两个方面。</p><p>&nbsp;</p><p>减少包的大小，提高网络吞吐量</p><p>&nbsp;</p><p>Dubbo&nbsp;协议更加精简，承载的头部信息更少。协议设计上很紧凑，能用&nbsp;1&nbsp;个&nbsp;bit&nbsp;表示的，不会用一个&nbsp;byte&nbsp;来表示，比如&nbsp;boolean&nbsp;类型的标识。Http为了更好的兼容性，请求头部携带了很多上下文和元数据。对于内部通信来说，服务端和客户端相对固定，很多信息是没有必要的。以下是Dubbo官方性能测试，Tps（每秒处理事务量）Dubbo协议比Http高30%-50%左右（最常见的高并发小数据量场景）。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/04/0418f8a54cf8793ffbad9ad25a689abe.png\" /></p><p></p><p>&nbsp;</p><p>另外，Dubbo&nbsp;使用长连接，可以重复使用已经建立的&nbsp;TCP&nbsp;连接，减少了连接建立的开销。</p><p>&nbsp;</p><p>传输协议开销</p><p>&nbsp;</p><p>由于整条链路使用了相同协议，可以避免不同协议间的装包和解包。</p><p>&nbsp;</p><p></p><h2>网关方面</h2><p></p><p>&nbsp;</p><p>网关方面，我们使用了&nbsp;APISIX&nbsp;代替&nbsp;Dubbo&nbsp;网关。</p><p>&nbsp;</p><p>APISIX&nbsp;是基于高性能的&nbsp;OpenResty&nbsp;开发的，从架构和设计角度对性能追求极致，因此可以满足我们对网关性能的基本要求。同时，它具有出色的扩展性，能够满足我们的自定义需求。简而言之，我们既希望享有类似&nbsp;NGINX&nbsp;的高性能，又希望可以根据需要扩展功能。</p><p>&nbsp;</p><p>APISIX&nbsp;实现了&nbsp;xRPC&nbsp;四层协议扩展框架，允许开发人员自定义特定于应用程序的协议。基于xRPC框架，APISIX&nbsp;可以提供几种主要应用协议的代理实现，用户还可以基于该框架支持自己私有的基于&nbsp;TCP&nbsp;的应用协议，使其具有类似于&nbsp;HTTP&nbsp;协议代理的精确粒度和更高级别的&nbsp;7&nbsp;层控制。通过使用&nbsp;APISIX&nbsp;的&nbsp;xRPC&nbsp;扩展，我们成功地增加了对&nbsp;Dubbo&nbsp;协议的直接转发功能，从而实现了全链路&nbsp;Dubbo&nbsp;协议传输。</p><p>&nbsp;</p><p>这一举措解决了之前提到的两个问题：显著提升了网关性能，同时减少了协议转换的成本。此外，我们也不再需要维护额外的应用网关，实现了中间件层面的收敛。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6e/6ea2b8bb4d31037473ab0af9674f8bdc.jpeg\" /></p><p>我们已经通过&nbsp;PR&nbsp;（<a href=\"https://github.com/apache/apisix/pull/9660\">https://github.com/apache/apisix/pull/9660</a>\"）的方式将上述特性提交给&nbsp;APISIX&nbsp;社区，因此下一个版本中我们将能够直接使用开源版本。</p><p>&nbsp;</p><p>注：APISIX&nbsp;的&nbsp;Dubbo&nbsp;插件支持&nbsp;HTTP&nbsp;转&nbsp;Dubbo，目前没有Dubbo&nbsp;直接转&nbsp;Dubbo&nbsp;的方式。虽然&nbsp;Dubbo&nbsp;协议是私有协议，但是&nbsp;Dubbo&nbsp;框架的应用非常广泛，这一特性可能会有很多意想不到的用法。</p><p>&nbsp;</p><p></p><h1>本轮改造不足</h1><p></p><p>&nbsp;</p><p>2022年下半年，我们对各跨岛方案，进行了整合升级，也就是现在的“高速公路”方案，保障跨岛标准化同时，解决了之前方案实践过程中面临的很多业务痛点。通过替换隧道协议，我们希望优化网络&nbsp;IO&nbsp;模型，提高链路转发效率。经初步测试，单次&nbsp;2k&nbsp;包请求&nbsp;RT&nbsp;可以降低&nbsp;1/3&nbsp;左右。</p><p>&nbsp;</p><p>但是，在实践业务场景中，该架构下一些痛点也开始逐渐显现。</p><p>&nbsp;</p><p></p><h2>支持场景不足</h2><p></p><p>&nbsp;</p><p>对云岛业务结构的公司来说，云平台属于公司内部、完全可控的局域网，而岛端则是有自己安全网络策略的独立内部网络。我们的跨网&nbsp;RPC&nbsp;需要穿透混合云网络中的各种设备和网关，到达云岛的另一头服务。Dubbo&nbsp;协议作为私有协议，在大部分的跨岛场景中并不适用。</p><p>&nbsp;</p><p>目前，这种模式只能在内部的一些网络使用，比如独立搭建的AI集群和平台业务集群的通信。</p><p>当然，基于“高速公路”架构的良好扩展性，我们可以做到不同场景自动切换协议，在获得&nbsp;Dubbo&nbsp;协议优势的前提下，也能退化&nbsp;HTTP&nbsp;协议兜底。</p><p>&nbsp;</p><p></p><h2>对网络吞吐量的优化不足</h2><p></p><p>&nbsp;</p><p>接口需要发送大量数据时，这些数据无法被放在一个&nbsp;RPC&nbsp;的请求或响应中，需要分批发送。</p><p>Dubbo协议下，这种情况只能串行发送。Dubbo协议在单次请求下性能较好，但是整体吞吐量的提升仍然不够。</p><p>&nbsp;</p><p>在我们的跨网第一个版本上线前，曾经做过性能压力测试。测试场景如下：</p><p>&nbsp;</p><p>云端调岛，上行数据，30M&nbsp;带宽，发送&nbsp;2KB&nbsp;数据，逐步增大并发量。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/22/22180e671600127d82ceb6ad25fdb3aa.jpeg\" /></p><p></p><p>&nbsp;</p><p>30M&nbsp;入口带宽，发送&nbsp;2KB&nbsp;数据，TPS&nbsp;大于&nbsp;500/s，入口带宽将成为瓶颈。当发送数据增加到&nbsp;80KB，TPS&nbsp;下降约&nbsp;16&nbsp;倍，RT&nbsp;上升约&nbsp;1.5&nbsp;倍。</p><p>&nbsp;</p><p>从监控上看，tps&nbsp;到达一定量后，带宽即达到上限。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f7/f7a94b3a0b826c81d0b320d8df00dedd.png\" /></p><p></p><p>&nbsp;</p><p>可以看到，当前“高速公路”的实际业务场景下，吞吐量是“高速公路”第一个版本最大的一个瓶颈。此次网关和协议的升级，显著降低了&nbsp;RT&nbsp;指标，一定程度提升了整体吞吐量。</p><p>&nbsp;</p><p></p><h1>后续规划</h1><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c3/c34f14d039ef7f3f036638673c17fad7.png\" /></p><p>经过对&nbsp;APISIX&nbsp;的协议扩展，我们使用&nbsp;APISIX&nbsp;代替了&nbsp;Dubbo&nbsp;自研网关，基本实现了对通信效率的预期优化。但是，我们也有支持场景和通信效率两个明显的痛点需要解决。</p><p>为此，我们重点调研了&nbsp;Dubbo3&nbsp;主力通信协议——Triple&nbsp;协议。</p><p>&nbsp;</p><p>Triple&nbsp;协议是&nbsp;Dubbo3&nbsp;设计的基于&nbsp;HTTP&nbsp;的&nbsp;RPC&nbsp;通信协议规范，它完全兼容&nbsp;gRPC&nbsp;协议，支持&nbsp;Request-Response、Streaming&nbsp;流式等通信模型，可同时运行在&nbsp;HTTP/1&nbsp;和&nbsp;HTTP/2&nbsp;之上。对于我们项目来说，Triple&nbsp;协议的几个特性刚好是我们欠缺的。</p><p>&nbsp;</p><p>完全兼容基于&nbsp;HTTP/2&nbsp;的&nbsp;gRPC&nbsp;协议</p><p>&nbsp;</p><p>Triple&nbsp;协议听起来是个私有协议，实际上则是标准的公有协议，兼容&nbsp;HTTP/1&nbsp;和&nbsp;HTTP/2。这意味着穿透性强，痛点之一的场景支持就不再是问题了。</p><p>&nbsp;</p><p>对比&nbsp;HTTP/1，二进制分帧带来的并行效率提升，首部压缩减少大量包体，在网络吞吐量上，HTTP/2在性能上有了极大提升。</p><p>&nbsp;</p><p>作为&nbsp;Dubbo&nbsp;主力协议，仍然保留着避免协议转换的优势，与“高速公路”架构契合</p><p>&nbsp;&nbsp;</p><p>经过&nbsp;Dubbo2&nbsp;协议的实践与总结，我们将着力推动&nbsp;Triple&nbsp;协议的升级，完美解决性能问题。</p><p>&nbsp;</p><p>未来，我们将按以下几步进行：</p><p>&nbsp;</p><p>助力开源项目&nbsp;APISIX&nbsp;扩展&nbsp;Triple&nbsp;协议</p><p>&nbsp;</p><p>APISIX&nbsp;本身有着非常优秀的扩展性，同时有&nbsp;Dubbo2&nbsp;协议的经验，相信这一步会比较顺利。</p><p>&nbsp;</p><p>推动公司&nbsp;Triple&nbsp;协议的升级</p><p>&nbsp;&nbsp;</p><p>今年政采云整体升级完&nbsp;Dubbo3，后面升级协议也将是一个可选项。</p><p>&nbsp;</p><p>性能压测验证</p><p>&nbsp;</p><p>对于当前架构，之前做了完整的压力测试，也明白瓶颈所在。后续我们将持续测试，深挖这一基础设施的性能潜力。</p><p>&nbsp;</p><p>参考资料：</p><p><a href=\"https://www.jianshu.com/p/7182b8751e75\">https://www.jianshu.com/p/7182b8751e75</a>\"</p><p><a href=\"https://www.infoq.cn/article/qfcz1fj9wvFvGidjpcho\">https://www.infoq.cn/article/qfcz1fj9wvFvGidjpcho</a>\"</p><p><a href=\"https://zhuanlan.zhihu.com/p/432512918\">https://zhuanlan.zhihu.com/p/432512918</a>\"</p><p><a href=\"https://cn.dubbo.apache.org/zh-cn/docsv2.7/user/perf-test/\">https://cn.dubbo.apache.org/zh-cn/docsv2.7/user/perf-test/</a>\"</p><p>&nbsp;</p><p>作者介绍：</p><p>王晓彬，Apache&nbsp;Dubbo&nbsp;Commiter、政采云资深开发工程师，负责基础服务相关工作。</p>",
    "publish_time": "2023-10-30 10:28:35",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "高级别自动驾驶时代，如何找到车路协同更优解？",
    "url": "https://www.infoq.cn/article/H74QyxxT4AT4QfUSVzxE",
    "summary": "<p>近日，在“以边缘·致多元”边缘计算新品发布暨合作伙伴大会上，浪潮信息联合百度发布首代车路协同路侧计算单元 RSCU。该产品通过系统设计，性能可满足 L2 至 L4 高等级自动驾驶融合应用的算力需求，还支持百度开放、兼容的智路 OS 操作系统连接上层场景，能够在双向 8 车道路口全面感知信号灯、摄像头、激光雷达、路牌路标、气象站等状态，目前已经在北京、武汉等多地部署测试。</p><p></p><p>会后，浪潮信息边缘计算产品线总经理孙波、百度车路协同首席架构师王淼接受了 InfoQ 在内的媒体采访，进一步分享浪潮信息与百度在车路协同方向上的探索与思考。</p><p></p><h2>车路协同：让聪明的车驶向智慧的路</h2><p></p><p></p><p>车路协同是自动驾驶技术发展的关键因素之一，其采用先进的无线通信和新一代互联网等技术，全方位实施车与车、车与行人、车与路等动态实时信息交互，并在全时空动态交通信息采集与融合的基础上，开展车辆主动安全控制和道路协同管理，充分实现人、车、路的有效协同，保证行车安全，提高通行效率，改善交通环境，从而形成的安全、高效和环保的道路交通系统。</p><p></p><p>人们对车路协同的探索最早可以追溯到 20 世纪 50 年代末，当时通用汽车在新泽西州打造了一条埋入大量通信设备的概念高速公路；1990 年代，日本将智能交通系统确立为国家项目；2011 年，中国科技部在 863 计划中设立了智能车路关键技术研究项目，为车路协同技术的发展提供了支持。</p><p></p><p>随着近年来自动驾驶技术加速发展，产业链基础配套和市场开发也越来越成熟，高级别自动驾驶正在加速“上路”。可以预见的是，“车路云”协同发展将成为趋势——不仅需要车辆本身具有很强的车载算力、高精度传感器、操作系统等，还需要加强路侧感知、计算、通信的边缘计算基础设施建设，并能够与边缘云、数据中心云实现多级云边协同。而这也对路侧边缘计算基础设施的性能、存储、可靠性、软硬协同等方面提出了更高的要求。</p><p></p><p>孙波在接受采访时表示，在车路协同系统中，多个摄像头和雷达采集到的数据需要在极低时延内处理并呈现结果。此时，算力便显得至关重要，需要超过 200 TOPS 来支撑整个现场数据的实时处理。</p><p></p><p>“从设备角度出发，性能需求不容忽视。每个摄像头采集的是视频流，每秒产生 30 帧照片。若要做到实时分析，每帧图片经过推理处理以判断车辆位置，需要每秒分析 30 次。若算力无法达到此水平，可能需要进行抽帧处理，即每秒只处理 10 帧或 1 帧，导致算力差异和时延增加。为确保高实时性，需要使用高性能设备进行实时处理。我们跟百度一起在路侧计算单元设备中增加了较强性能的计算单元来支持实时处理。对于通信精度，更着重于设备侧的时钟同步。基于卫星通信的时钟和精度可以达到纳秒级。”</p><p></p><p>要想实现较高的性能，王淼认为需要注意以下两个方面：首先，硬件和软件需要基于高可靠的系统流程进行设计。其次，系统中采用了许多分布式架构。以手机摄像头为例，目前市场上热销的手机可能配备四个摄像头，而每个路口可能包含超过 20 个摄像头。在如此复杂的情况下，如何确保系统的性能？答案是在路侧大脑中建立一个分布式的调动系统，该系统可以并发处理数千个任务，从而确保摄像头的时延。</p><p></p><p>“在系统中，除了 CPU 外，还包括 GPU 和其他各种异构神经网络算力。为了提高性能，我们利用不同的算法逻辑，尤其是最新的神经网络技术。这些技术有助于将计算压力从传统的CPU 中解放出来，从而实现毫秒级的时延。随着人工智能技术的不断发展，主频的提高已经不再像过去那样重要。现在，整个技术栈越来越强调人工智能的计算，以实现更高的性能。”王淼说道。</p><p></p><h2>车路协同路侧计算单元 RSCU 背后的设计与思考</h2><p></p><p></p><p>为了实现让聪明的车驶向智慧的路，浪潮信息携手百度智能云发布首代车路协同路侧计算单元 RSCU。</p><p></p><p>据介绍，针对车路云协同场景下路侧逐渐增加的感知设备，路侧计算单元在算力性能方面进行优化设计，可以最大支持 260 TOPS 的算力，最多可支持双向8车道路口的信号灯、摄像头、激光雷达、路牌路标、气象站等传感器数据传输，面向 L2 至 L4 高级别自动驾驶场景，为“聪明的车”提供更精准的人、车、道路、环境、交通事件的全要素实时检测和分析，并通过车路云的协同，助力智慧城市、智慧交通场景。</p><p></p><p>此外，为保障路侧计算单元的与云端的高效协同，全新路侧计算单元还支持百度开放、兼容的智路 OS 操作系统，可以更好的衔接上层自动驾驶、车路协同应用场景，具有高性能、智能化、开放性、兼容性、协同性、安全性六大特性，全面提升车路云协同效率。</p><p></p><p>目前，百度已经率先在全国多地高等级自动驾驶示范区对该产品进行测试实验，验证了其在自动驾驶到城市交通治理的智能网联全场景服务能力。测试数据显示，基于首代车路协同核心计算单元构建的“感知-计算-通信”路侧边缘智能体系，能够实现对路口范围的人、车、道路、环境、交通事件的全要素实时检测和分析，位置精度≤1.0m（人机非,平均），速度精度≤1.5m/s（均值），交通对象感知定位类型识别准召率≥90%，路侧对象感知端到端时延（含通信时延）≤300ms（均值）。</p><p></p><p>在谈到车路协同路侧计算单元 RSCU 的设计时，孙波表示 RSCU 是目前在路侧方面算力最强的一个产品，需要结合路侧计算的时延和数据处理对于性能的要求，来做产品的整体系统设计。</p><p></p><p>“在这个过程中，我们面临了许多挑战。一个典型的挑战是在路侧环境中放置计算力服务器，这些设备需要应对春夏秋冬、风雨雪雾等各种恶劣环境，包括高温和寒冷。为了解决这个问题，我们可以采用一些算力相对较低的设备，并让它们自身进行宽温设计。例如，EIS200 可以在- 40 ℃到65℃之间正常工作。这款设备的算力约为 200 多 TOPS，虽然已经具有相当大的算力，但这也带来了功耗和散热的挑战。”</p><p></p><p>为了解决这些问题，浪潮信息与百度采取了多种创新方法。对于高功耗设备在路侧环境中的适应性问题，其采用了主动散热方案。当设备的功耗达到 300 瓦时需要进行散热创新，通过隔离散热设计，将服务器中娇贵的器件隔离在内部干净的环境中，并通过第二散热风道与外界进行热交换，由此成功解决了散热问题。</p><p></p><p>“这个联合项目的成功不仅给我们带来了很多技术上的突破和经验，而且对于边缘计算在其他行业的落地也具有重要意义。由于 AI 大模型训练需要大量的算力支持，这些模型需要在边缘侧落地应用。因此，这个项目不仅加速了边缘行业的创新和发展，还对边缘算力提出了更高的要求。随着算力需求的增加，解决环境适应性问题的挑战也会进一步加剧。”</p><p></p><p>孙波认为，基于这个联合项目的知识和成果，可以在相关领域应用边缘计算技术，例如水利、高速、制造、能源、电网巡检等等。这些应用可以快速复制到其他许多行业中，为产业的落地提供助力。“未来，我们将继续积极应对挑战，为边缘计算在其他行业的落地提供更多支持，并不断推动技术的发展和创新。”</p><p></p><p>在智慧交通领域，除了车路协同路侧计算单元 RSCU，浪潮信息与百度还合作让其适配了名为智路 OS 的生态系统，这也是由工信部指导认证的路侧操作系统生态。王淼提到，“未来的路侧会像现在的智能车一样，形成一个类似的生态系统。这个生态系统最终将包含两个关键的核心零部件，即芯片和操作系统。在这两个领域，手机和车方面稍显落后，但在道路方面，我国已经提早布局并看得更远。”</p><p></p><p>随着更多参与方加入，以及芯片和操作系统的进一步发展，整个生态系统将会更加完善和强大，并为智慧交通带来更多的无限可能。</p><p></p><h2>边缘计算将走向怎样的未来？</h2><p></p><p></p><p>AIGC 大模型的飞速发展为边缘计算业务带来了新的创新。然而，边缘计算基础设施也将面临更大的挑战。孙波认为，未来边缘计算的发展方向将面临三大难题：</p><p></p><p>首先，环境适应是边缘计算设备面临的一个重要问题。随着算力不断增加，设备的功耗也会随之提高。为了确保设备的稳定运行，需要采取更为先进的散热和环境适应手段。例如，针对未来算力提升至更高数量级的情况，需要研究更为高效的散热方式和适应各种环境下的产品设计。</p><p></p><p>其次，算力支撑是边缘计算设备的另一个重要发展方向。随着智能化和系统化的决策分析需求不断提升，边缘计算设备需要更大的算力支持。未来，边缘计算设备将朝着大算力方向发展，以更好地满足各种复杂任务和系统性的决策分析需求。</p><p></p><p>最后，安全是边缘计算面临的另一个重要挑战。与数据中心服务器相比，边缘计算设备部署在更加复杂和恶劣的环境中，需要直接面对公网安全挑战。因此，未来需要研究如何提高边缘计算设备的安全性能，以及如何实现设备的智能化运维和故障自恢复等功能。</p><p></p><p>整体而言，未来边缘计算的发展将朝着环境适应、大算力支撑和安全保障等三个方向发展。在这个过程中，需要不断研究新的技术和方法，以提高边缘计算的易用性、可靠性和维护性，更好地满足行业需求。</p><p></p><p>而要想实现边缘计算的规模化落地，关键不仅仅在于简单地拥有一个边缘计算服务器。整个产业链的协同也至关重要。</p><p></p><p>“我们需要与合作伙伴共同研究、打破限制，以推动场景的落地。这也是我们认为边缘计算要实现规模化落地所必须重视的路径。未来，我们将继续与百度等合作伙伴围绕边缘场景进行深入研究，打磨场景方案并推动其落地。在这个过程中，我们通过不断的迭代和发展，逐渐走向一个新的阶段。在众多边缘场景中，我们发现城市治理和交通是具有明确需求且非常大的场景。”孙波认为，未来的城市将是智慧化的，交通更应该如此。只有实现了智慧化的交通，才能真正解决道路交通拥堵的问题，因此，行业需要结合未来的趋势来思考如何使道路更加智能化。</p><p></p><p>“在未来的规模化落地过程中，我们将不断打磨场景和硬件设备，使其更加适用于业务场景。同时，我们相信百度也将不断迭代和优化其上层软件平台，推出更新的技术和更好的方案，共同推动设备的不断完善。”孙波说道。</p>",
    "publish_time": "2023-10-30 10:28:42",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "中国工商银行基于生产流量的创新探索及实践",
    "url": "https://www.infoq.cn/article/OXrxX4NmLQS2ggjsfvN6",
    "summary": "<p></p><blockquote>作者 | 中国工商银行金融科技研究院云计算实验室</blockquote><p></p><p></p><p>随着互联网金融的高速发展，金融产品和服务模式不断创新，业务规模呈现爆炸式增长态势，新老业务迭代加速，在业务迭代升级或系统重构时，如何确保业务架构调整后的功能连续性，是常规测试工具面临的难题。相较于传统测试数据，生产流量具有多样性的特征，利用生产流量进行功能性验证能够最大程度提升验证效果，保障架构转型过程的安全性和稳定性。在这样的背景下，流量录制回放技术应运而生。</p><p></p><p></p><h3>流量录制回放的行业现状</h3><p></p><p></p><p>由于传统的测试数据缺乏真实性和多样性，测试案例覆盖度往往无法满足实际的需求，为此互联网头部企业提出通过流量录制回放工具弥补传统自动化测试系统的不足，并以此衍生出了多种方案，其中较为有代表性的工具和产品有 GoReplay、TcpCopy、Jvm-Sandbox-Repeater、阿里云引擎回归测试平台等。这些工具都是由用户层、流量采集、数据持久化模块所组成（如图 1 所示），其中服务端提供了流量录制规则配置和数据分析的能力，用户根据自身需求分析录制场景和录制规则，并基于录制工具开展生产流量录制；采集端则根据业务提供的录制规则进行数据收集和聚合并转发给存储节点进行持久化；回放端主要提供了实时回放、用例沉淀、压测模型转换、链路分析、依赖分析等能力。此外，持久化的流量数据可根据业务需求进行差异化定制，并应用于在线巡检、变更影响面评估、智能用例推荐、强弱依赖识别、业务模型评估、覆盖率分析等场景，从而形成围绕流量的运维生态。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/08/08cd70609841c9ed5f662d67b3bdec95.png\" /></p><p></p><p>图 1 业界流量录制回放业务架构</p><p></p><p></p><h3>中国工商银行在流量录制回放领域的探索</h3><p></p><p></p><p>随着工商银行分布式转型工作深入推进，开放平台交易量爆发式增长，分布式架构错综复杂的调用链给运维体系带来巨大挑战。工商银行借鉴行业先进经验，打造了流量录制回放平台，从六个方面对流量录制回放技术进行探索和实践。</p><p></p><p></p><h4>字节码增强方式录制，多维度可定制化任务管理</h4><p></p><p></p><p>针对工商银行内部技术框架的多样性，相较于其他录制方式，字节码增强方式因其无侵入特性，具有更高的包容性，可以支持以较低的成本对应用服务进行拦截，进而实现服务请求响应报文、链路特征、交易耗时等信息的录制。</p><p></p><p>平台提供了应用、集群、容器、服务、交易时间等多种维度的录制能力（如图 2 所示），用户可根据自身诉求定制录制规则，以任务的形式灵活的控制录制时间段、设置灰度模式、采集链路资源等，实现多维度流量灵活录制。精准的录制任务投放，不仅降低了录制链路的处理压力，还能帮助用户有效控制录制工具的影响范围，降低性能损耗，同时保障应用节点安全稳定。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/3d/3d91012c33d77176e9e3abd47f0b68f9.png\" /></p><p></p><p>图 2 字节码增强录制与定制化任务管理</p><p></p><p></p><h4>梳理核心链路，构建流量录放模型</h4><p></p><p></p><p>核心链路的梳理是整个流量录放工作的重中之重，能否将核心链路梳理好，直接决定其能否保证录制链路和数据的完整性以及能否达到录放的预期效果。在分布式架构下，工商银行利用链路追踪监控技术，通过流量染色和拓扑分析机制，形成面向业务场景的全链路拓扑结构，业务系统再根据梳理出来的目标链路拓扑进行梳理以及性能容量评估，最终得出流量录放模型，以最大程度还原生产交易场景。</p><p></p><p>录制链路梳理：业务系统通过链路拓扑分析，根据自身需求，梳理需要录制的资源信息以及上下游依赖，并以此可衍生出录制任务的维度和配置。性能容量评估：为保证生产录制过程不会影响日常交易，生产录制前，业务系统必须在测试环境进行性能容量评估，为录制工具预留一定的资源。</p><p></p><p></p><h4>建立流量跨域自动化传输机制</h4><p></p><p></p><p>为了避免流量录制回传过程中出现敏感信息泄露，工商银行提供了配置化的脱敏能力，可以基于用户配置实现针对性脱敏，建立生产录制流量跨域回传测试环境的常态化运行机制（如图 3 所示）。针对小批量录制数据，平台支持用户在线下载并手工导入测试环境。针对海量数据报文，平台支持后台自动生成批量文件、传输并导入测试环境，该方式具备数据分段传输、断点续传、完整性检查等功能特性。</p><p></p><p>为解决环境间数据差异性问题，平台提供了多维度的自定义替换功能，用户可根据场景特色进行配置，以提升回放成功率，最终形成一套流量录制、脱敏、传输、替换的全自动化流程。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/de/deff1825312a81bcde4ef840cd3e1859.png\" /></p><p></p><p>图 3 自动化脱敏传输与替换</p><p></p><p></p><h4>具备高适配、高并发的回放能力</h4><p></p><p></p><p>传统的流量回放模式主要将流量无序的压入应用容器，该方式无法保障服务调用先后顺序，可能引发事务不一致风险。工商银行基于生产采集的服务接口信息，实现了报文组装和服务接口模拟调用，根据流量录制时序进行回放，支持用户灵活设置录制数据段、回放速率等个性化回放配置，形成从流量录制到回放的一站式演练能力。</p><p></p><p>针对部分下游强依赖场景，工商银行支持根据其入口流量透传的链路信息查找对应的子调用响应并返回，降低下游依赖性的同时提高了回放的成功率和场景适配性。</p><p></p><p></p><h4>形成多维度结果比对分析机制</h4><p></p><p></p><p>为提升流量回放结果的可观测性，平台提供基于定制化规则的多维度比对分析能力，实现录制响应报文与回放响应报文的差异化感知。基于 ClickHouse 的实时分析架构，可支撑百亿级交易的实时比对聚合，及时反馈回放任务运行效果，进而形成程序架构质量评价。多维度的结果筛选和分析能力（如图 4 所示），可有效协助业务人员敏捷分析异常原因，并及时做出调整。用户针对异常的流量可施行二次回放，直至回放成功率达到 100%，保证业务迁移前后功能的一致性。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/7e/7e8228465169e12dc17c5ff704b6b0bd.png\" /></p><p></p><p>图 4 结果比对分析</p><p></p><p></p><h3>场景化应用</h3><p></p><p></p><p>工商银行目前已初步形成一站式的常态化演练机制，在灾备带压演练、仿真切流验证、测试环境回归测试等场景提供了关键的技术支撑，最终保障生产业务安全。截至目前，平台已完成二十余个应用系统的接入使用，其中测试环境已得到规模化应用，灾备环境和仿真环境也已顺利支撑个人结算、信用卡产品等重点应用的验证工作。</p><p></p><p></p><h4>带压灾备演练</h4><p></p><p></p><p>在应用架构转型背景下，为确保灾备环境的承载能力，工商银行利用生产真实流量在灾备云实施回放，检验应用核心交易和服务在灾备云环境的性能和功能情况。带压灾备演练主要操作流程如下：</p><p></p><p>应用根据自身交易场景，梳理录制灰度集群、服务、时间段、关联交易等录制链路信息。运维支持人员根据应用梳理的生产操作手册，提前完成数据库数据同步以及生产报文录制，待流量录制完成后将其回传到灾备环境。为保证灾备环境回放真实性，运维支持人员以倍速回放灰度流量的方式模拟生产高并发冲击对业务系统性能容量的影响。应用根据回放的比对结果分析回放的业务交易成功率以及系统的整体承载能力（如图 5 所示），并以此作为应用架构转型成功与否的评判标准之一。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/80/80ebcd4f73d7d608a0eeb75ccc7b9cd0.png\" /></p><p></p><p>图 5 回放结果大屏展示</p><p></p><h4>仿真切流验证</h4><p></p><p></p><p>在应用架构转型的背景下，为保证业务核心交易的安全平稳升级，工商银行将生产真实流量准实时回放到生产仿真环境，验证业务切流前后交易的一致性。</p><p></p><p>与灾备带压演练不同，运维人员完成数据库数据同步后，同时下发录制任务和回放任务，生产录制的流量完成存储后将被准实时回放到仿真环境，应用根据生产交易结果与仿真交易结果的比对分析，判断核心交易逻辑是否与切流前一致。</p><p></p><h4>测试回归验证</h4><p></p><p></p><p>为保证回归测试案例的真实性、多样性和覆盖完整性，工商银行将生产真实流量脱敏后回传到测试环境进行回放，模拟生产真实交易进行的场景，以回放比对分析结果作为评判功能迁移或升级前后是否一致的标准。随着生产和测试流量的持续积累，回放案例库可基本覆盖业务代码的所有分支，测试人员通过流量回放实现了应用业务系统的常态化回归测试，大幅提升测试效能。</p><p></p><p></p><h3>未来展望</h3><p></p><p></p><p>未来，工商银行流量录制回放平台将进一步与链路监控、服务限流、混沌工程等其他运维工具相结合，完善运维工具链和分布式监控运维体系，拓展工具使用场景，提升流量录放的价值和意义，为金融业务场景稳定性提供有力支撑。</p><p></p><p>好文推荐</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651184614&amp;idx=1&amp;sn=b43b9e284546eb0a88e5cd88aac46de4&amp;chksm=bdb825b58acfaca3d677861a4deccc0719767a1de6fc85d33061016eb6017a505b6fff532a73&amp;scene=21#wechat_redirect\">智谱 AI“超 25 亿融资”的背后</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651184469&amp;idx=1&amp;sn=7c5092f6322f9a72636fc30c8bbdffc5&amp;chksm=bdb825068acfac1095093a40f05ef999ac26ae381553e9c257ae357e9788c1d3b93351276afe&amp;scene=21#wechat_redirect\">是时候彻底放弃“高分低能”的 Leetcode了：AI 时代的面试需要大变革！</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651184468&amp;idx=1&amp;sn=2821cc81d28db3bfda2838db761de083&amp;chksm=bdb825078acfac11692aece58bd302a22299223fe5d36a7e2d33bb42438bdb5e52d6f91aa22d&amp;scene=21#wechat_redirect\">B 站广州研发工作室解散；外媒曝光苹果中国区丑闻；OpenAI 被曝已叫停新大模型项目 | Q资讯</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651184325&amp;idx=1&amp;sn=3ae0633290e470d16d6a609d74ccdf0e&amp;chksm=bdb824968acfad80203433a2cdfa0c49e3f56f133d7abfa29b456e3fb9d63298475aadd7afdb&amp;scene=21#wechat_redirect\">“MySQL 之父”的 MariaDB 要完蛋了？叫停两款核心产品并裁员 28%，分析师：该行为无异于自毁长城</a>\"</p><p></p><p></p><p></p>",
    "publish_time": "2023-10-30 11:10:55",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "技术与实体加速融合，企业转型的新挑战和新机遇在哪？",
    "url": "https://www.infoq.cn/article/TjLavHdW9IkHp4gDqEEW",
    "summary": "<p>2016 年“新经济”被首次写入我国《政府工作报告》，2017 年报告首次明确促进“数字经济加快成长的要求。从特征与内核来看，“新经济”与“数字经济”之间一脉相承，强调以新一代信息技术为基础，推动产业持续创新，创造新的经济增长点。随着相关举措的深入发展，技术正在加速赋能实体，<a href=\"https://www.infoq.cn/article/2Zc5zKlXjzSbYa4ZaS0O?utm_campaign=geek_search&amp;utm_content=geek_search&amp;utm_medium=geek_search&amp;utm_source=geek_search&amp;utm_term=geek_search\">数字经济与实体经济的融合</a>\"成为必然趋势。</p><p></p><p>在这一过程中，从全球到全国，从地方到千行百业，都面临着全新挑战和产业机遇。那么，作为新经济的核心群体，从独角兽企业、瞪羚企业等新物种企业，到传统企业、初创企业，面对新趋势如何乘势而上？如何结合自身特点和优势制定战略目标、拆解转型路径和方法？如何从商业模式创新、实施策略落地到新型人才培养多管齐下？</p><p></p><p>10 月 31 日 19:30-21:00，极客邦科技创始人 &amp;CEO 霍太稳将<a href=\"https://live.infoq.cn/room/1915\">对话长城战略咨询</a>\"总经理武文生，畅谈数字化发展进程和趋势，深度探讨在数字经济与实体经济加速融合背景下，企业如何抓住产业发展新机遇，以及数字化人才发展需求等话题。</p><p></p><p>长城战略咨询是聚焦新经济的专业咨询机构，主要面向企业和高新区提供新经济咨询服务。长城战略咨询总经理武文生是企业战略咨询、区域发展战略、瞪羚独角兽研究领域专家。担任国家现代服务业总体专家组专家、中国企业联合会管理咨询专业委员会副主任委员及多家上市公司独立董事等。多年来主持完成了 200 余项企业战略咨询、公共咨询项目。</p><p></p><p>点击链接或扫描二维码即可报名预约本次直播：<a href=\"https://live.infoq.cn/room/1915\">https://live.infoq.cn/room/1915</a>\"</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/43/43e1e6326d9170f9dfb2626ecbcc5b69.jpeg\" /></p><p></p>",
    "publish_time": "2023-10-30 12:38:55",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]