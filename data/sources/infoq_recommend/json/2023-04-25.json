[
  {
    "title": "领英通过实施消息客户端 SDK，将开发效率提高了10倍",
    "url": "https://www.infoq.cn/article/31oV8dKq8heHUsRQPGfB",
    "summary": "<p>领英在近期发布的文章《<a href=\"https://engineering.linkedin.com/blog/2023/unifying-messaging-experiences-across-linkedin\">如何通过消息客户端 SDK 大幅提升开发效率</a>\"》中称，通过使用 SDK 抽象数千行代码至共享库，他们得以削减跨多平台应用的代码维护成本。在一个用例场景下，新 SDK 在构建全新领英体验时可以节省四十余名开发者数周的劳动。</p><p>&nbsp;</p><p>领英的高级员工工程师 <a href=\"https://www.linkedin.com/in/micurs/\">Michele Ursino</a>\" 和领英的工程负责人 <a href=\"https://www.linkedin.com/in/joe-xue-66782012/\">Joe Xue</a>\" 对 SDK 是如何提高生产力的解释如下：</p><p>&nbsp;</p><p></p><blockquote>我们的 Messenger SDK 通过将数千行代码抽象为共享库，减少了跨多个应用程序的代码维护成本，极大地提升了开发人员的工作效率。在部分情况下，我们实现了跨十倍的代码数量减少，从三千多行减至几百行。其结果是，开发人员现在可以在几周内创建新的信息体验，而非原先的几月或几季度。</blockquote><p></p><p>&nbsp;</p><p>Ursino 和 Xue 称，通过创建一个跨领英消息体验的共用前端平台，他们已经证明了这种可被他人复制、用于自己核心功能的模式：</p><p>&nbsp;</p><p></p><blockquote>同领英一样，拥有多个大型应用的组织应重新考虑应用构建的方式。与其将应用当作独立个体，组织可以在可重复使用的平台库之上，建立轻薄的应用层，按需暴露各类技术支柱的高级能力乃至用户界面。</blockquote><p></p><p>&nbsp;</p><p>领英<a href=\"https://engineering.linkedin.com/blog/2020/bootstrapping-our-new-messaging-platform\">在2020年年中完成了其消息体验的重构</a>\"。不过，据 Ursino 和 Xue 说明，“在运行领英产品的设备上实现完整消息可靠性和功能性是一项复杂的任务，不仅工作量繁重且对细节要求颇高。”为确保最大限度的一致性和可靠性，领英对其消息传递平台进行了扩展，涵盖了客户侧设备和前端 API 中的消息数据管理。领英的消息传递团队将所有消息传递功能打包为一个全功能的数据层 SDK，用于解决客户端应用中消息传递数据的管理复杂性问题。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/78/7802e504274cb018bc45afd42713e818.png\" /></p><p></p><p>来源：<a href=\"https://engineering.linkedin.com/blog/2023/unifying-messaging-experiences-across-linkedin\">https://engineering.linkedin.com/blog/2023/unifying-messaging-experiences-across-linkedin</a>\"</p><p>&nbsp;</p><p>领英将新的 SDK 分为两类库：用于应用程序 API 中消息整合的 API 库（“messenger-api”），以及用于表示设备本地信箱的客户库（messenger-data）。</p><p>&nbsp;</p><p>其中，API 库有三项功能：桥接客户与后端消息传递平台基础设施间&nbsp;<a href=\"https://graphql.org/\">GraphQL</a>\" 请求、允许主机 API 自定义消息传递 API 的行为，以及允许其他系统使用 GraphQL 对消息传递数据进行装饰。该 API 库实现了对外部系统消息传递数据的错误检查，并暴露了一个 GraphQL 模式，其中包含每个平台中客户 SDK 库用于获取信息的查询。这种架构方式允许主机 API 代码对每个 API 请求生命周期中，后端消息平台传至前端的消息数据进行自定义转换。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/44/44c3a10e70b6a649223d6950d32b8e95.png\" /></p><p></p><p>来源：<a href=\"https://engineering.linkedin.com/blog/2023/unifying-messaging-experiences-across-linkedin\">https://engineering.linkedin.com/blog/2023/unifying-messaging-experiences-across-linkedin</a>\"</p><p>&nbsp;</p><p>客户库为消息传递实现了一个以<a href=\"https://en.wikipedia.org/wiki/Event-driven_architecture\">事件为驱动</a>\"的数据层（EDDL），为客户设备中的信箱数据提供了实时的表示，且与后端中实际的信箱数据进行同步。该 API 库意在保障最大化消息传递可靠性，允许应用程序开发者轻松访问信箱数据。此外，其所采用的反应式方法也支持了设备中对话和消息的快速渲染和屏幕刷新，即时地将任何数据变化通知主机应用程序代码，从而允许必要的用户界面刷新。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b9/b9094091931d15f740411f8229c375ed.png\" /></p><p></p><p>来源：<a href=\"https://engineering.linkedin.com/blog/2023/unifying-messaging-experiences-across-linkedin\">https://engineering.linkedin.com/blog/2023/unifying-messaging-experiences-across-linkedin</a>\"</p><p>&nbsp;</p><p>领英已经将其旗舰应用程序的消息传递功能迁移至 Messenger SDK，为全客户平台提供一致且可靠的消息传递体验。该 SDK 带来了跨平台的功能平等性以及现代化的代码库，提高了稳定性和可靠性，也提升了开发人员的生产力。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/03/linkedin-messenger-sdk/\">LinkedIn Improves Development Productivity by 10x Implementing a Messaging Client-Side SDK</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/87fXytBSTUiUDmTkHfcO\">领导力匠艺：像开发人员打造代码那样打造你的领导力</a>\"</p><p><a href=\"https://www.infoq.cn/article/7Ps0qyHfQhp59g7YrEvZ\">当你的技术栈不能满足每个人需求时，下一步是什么呢？</a>\"</p><p><a href=\"https://www.infoq.cn/article/FAxivpNAGHAIyYMupEJG\">提高软件质量：如何处理数据发现更多 Bug</a>\"</p><p></p>",
    "publish_time": "2023-04-25 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]