[
  {
    "title": "Java近期新闻：JNoSQL 1.0、Liberica NIK 23.0、Micronaut 4.0-RC2、Log4j 3.0-Alpha1、KCDC、JCON",
    "url": "https://www.infoq.cn/article/YhwF4dfEr8cbDXSjPGhZ",
    "summary": "<p></p><h4>JDK 21</h4><p></p><p>JDK 21<a href=\"https://jdk.java.net/21/\">早期访问构建</a>\"<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-21%2B28\">Build 28</a>\"在上周发布，其中包括Build 27的<a href=\"https://github.com/openjdk/jdk/compare/jdk-21%2B27...jdk-21%2B28\">更新</a>\"，主要是修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2021%20and%20%22resolved%20in%20build%22%20%3D%20b28%20order%20by%20component%2C%20subcomponent\">问题</a>\"。要了解关于这个版本的更多细节，请查看<a href=\"https://jdk.java.net/21/release-notes\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>JDK 22</h4><p></p><p>JDK 22<a href=\"https://jdk.java.net/22/\">早期访问构建</a>\"<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22%2B3\">Build 3</a>\"在上周发布，其中包括Build 2的<a href=\"https://github.com/openjdk/jdk/compare/jdk-22%2B2...jdk-22%2B3\">更新</a>\"，主要是修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2022%20and%20%22resolved%20in%20build%22%20%3D%20b03%20order%20by%20component%2C%20subcomponent\">问题</a>\"。要了解关于这个版本的更多细节，请查看<a href=\"https://jdk.java.net/22/release-notes\">发布说明</a>\"。</p><p>&nbsp;</p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/21/\">JDK 21</a>\"和<a href=\"https://openjdk.org/projects/jdk/22/\">JDK 22</a>\"，我们鼓励开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java Bug数据库</a>\"报告Bug。</p><p>&nbsp;</p><p></p><h4>Spring Framework</h4><p></p><p>Spring Boot的<a href=\"https://spring.io/blog/2023/06/22/spring-boot-3-1-1-available-now\">3.1.1</a>\"、<a href=\"https://spring.io/blog/2023/06/22/spring-boot-3-0-8-available-now\">3.0.8</a>\"和<a href=\"https://spring.io/blog/2023/06/22/spring-boot-2-7-13-available-now\">2.7.13</a>\"版本完善了文档，升级了依赖项，并带来了一些重要的Bug修复，比如：SpringApplication类中定义的from()方法在Kotlin应用程序中难以使用；SSL配置会覆盖来自WebClient接口的其他自定义项；支持JDK 20，但在JavaVersion枚举中没有为其定义值。要了解关于这些版本的更多细节，可以查看<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.1.1\">3.1.1</a>\"、<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.0.8\">3.0.8</a>\"和<a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v3.1.1\">2.7.13</a>\"版本的发布说明。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-security\">Spring Security</a>\"的6.1.1、6.0.4、5.8.4、5.7.9和5.6.11版本<a href=\"https://spring.io/blog/2023/06/20/spring-security-6-1-1-6-0-4-5-8-4-5-7-9-5-6-11-released\">发布</a>\"，带来了Bug修复、依赖项升级和新特性，例如：使<a href=\"https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/index.html\">OAuth 2.0 Resource Server</a>\"文档与Spring Boot的功能保持一致；参考手册新增一个章节，其中包括与本地镜像支持及使用限制相关的信息；迁移到<a href=\"https://github.com/asciidoctor/asciidoctor-tabs/blob/main/README.adoc\">Asciidoctor Tabs</a>\"。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.1.1\">6.1.1</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/6.0.4\">6.0.4</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.8.4\">5.8.4</a>\"、<a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.7.9\">5.7.9</a>\"和<a href=\"https://github.com/spring-projects/spring-security/releases/tag/5.6.11\">5.6.11</a>\"版本的发布说明。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-vault\">Spring Vault</a>\" 3.0.3<a href=\"https://spring.io/blog/2023/06/19/spring-vault-3-0-3-available\">发布</a>\"，修复了Bug，完善了文档，升级了依赖项，并增加了一些新特性，比如：改进了日志记录功能，在令牌撤销失败时记录令牌访问器；向EnvironmentVaultConfiguration类添加AWS身份和访问管理（IAM）认证；在VaultTransitOperations接口的encrypt()方法中包含key_version属性。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-vault/releases/tag/3.0.3\">发布说明</a>\"。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-graphql\">Spring for GraphQL</a>\"的1.2.1和1.1.5版本<a href=\"https://spring.io/blog/2023/06/20/spring-for-graphql-1-1-5-and-1-2-1-released\">发布</a>\"，带来了Bug修复、依赖项升级和新特性，例如：增强GraphQL请求体检查，防止应该出现400 Bad Request时出现500 Internal Server Error；消除了IllegalArgumentException（在使用现有的Java Connection类型时，由于没有定义ConnectionAdapter接口而出现的异常）。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-graphql/releases/tag/v1.2.1\">1.2.1</a>\"和<a href=\"https://github.com/spring-projects/spring-graphql/releases/tag/v1.1.5\">1.1.5</a>\"版本的发布说明。</p><p>&nbsp;</p><p><a href=\"https://spring.io/projects/spring-authorization-server\">Spring Authorization Server</a>\"的1.1.1、1.0.3和0.4.3版本<a href=\"https://spring.io/blog/2023/06/20/spring-authorization-server-1-1-1-1-0-3-and-0-4-3-available-now\">发布</a>\"，其中包括Bug修复和依赖项升级。1.1.1版本带来了一个提升性能的新特性，即在使用OAuth2AuthorizationConsent类时，用String类中的substring()方法替换replaceFirst()方法。要了解关于这些版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/1.1.1\">1.1.1</a>\"、<a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/1.0.3\">1.0.3</a>\"和<a href=\"https://github.com/spring-projects/spring-authorization-server/releases/tag/0.4.3\">0.4.3</a>\"版本的发布说明。</p><p>&nbsp;</p><p>Spring Modulith 1.0.0的<a href=\"https://spring.io/blog/2023/06/23/spring-modulith-1-0-m1-released\">第一个里程碑版本</a>\"提供了Bug修复、依赖项升级和一个新特性（默认将应用程序中定义的ExecutorService接口的实例传播到Scenario类的实例中）。该项目已经从实验状态提升为正式项目，并引入了以下破坏性的变化：将执行器端点从applicationmodules重命名为application-modules；将组标识符从org.springframework.experimental重命名为org.springframework.modulith；从基于JDBC的事件注册表中删除了以前弃用的配置属性spring. module .events.jdbc-*。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/spring-projects/spring-modulith/releases/tag/1.0.0-M1\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>BellSoft</h4><p></p><p>BellSoft<a href=\"https://bell-sw.com/blog/new-version-of-liberica-nik-23-0-with-parallelgc-is-available/\">发布</a>\"了<a href=\"https://bell-sw.com/liberica-native-image-kit/\">Liberica Native Image Kit</a>\"（NIK）的23.0版本，新特性包括：将<a href=\"https://docs.oracle.com/en/java/javase/20/gctuning/parallel-collector1.html\">ParallelGC</a>\"垃圾收集器作为一个实验特性集成；实现JFR <a href=\"https://bestsolution-at.github.io/jfr-doc/openjdk-15.html#jdk.ThreadCPULoad\">ThreadCPULoad</a>\"事件；从JNI-to-Java调用存根中删除可能破坏兼容性的类型检查；使用LinuxThreadCpuTimeSupport类中定义的getThreadCpuTime()方法实现用户CPU时间线程。</p><p>&nbsp;</p><p></p><h4>IBM Semeru Open Edition</h4><p></p><p>IBM<a href=\"https://community.ibm.com/community/user/wasdevops/blogs/tony-renaud/2023/06/19/ibm-semeru-runtime-open-edition-v2001-released\">发布</a>\"了<a href=\"https://developer.ibm.com/languages/java/semeru-runtimes/\">S</a>\"<a href=\"https://developer.ibm.com/languages/java/semeru-runtimes/\">emeru</a>\"<a href=\"https://developer.ibm.com/languages/java/semeru-runtimes/\">Runtime</a>\" Open Edition 20.0.1。该版本基于OpenJDK 20.0.1和<a href=\"https://projects.eclipse.org/projects/technology.openj9\">Eclipse OpenJ9</a>\" 0.39.0构建。要了解关于该版本的更多细节，请查看<a href=\"https://www.ibm.com/support/pages/semeru-runtimes-release-notes/\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Micronaut</h4><p></p><p>Micronaut 4.0.0的<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v4.0.0-RC2\">第二个候选版本</a>\"发布，提供了Bug修复、依赖项升级和以下改进：使用不安全的setter支持Jackson；新增UnsafeBeanInstantiationIntrospection接口（BeanIntrospection接口的变体，包含一个instantiateUnsafe()方法，允许跳过实例化验证）；<a href=\"https://kotlinlang.org/docs/ksp-overview.html\">Kotlin</a>\"<a href=\"https://kotlinlang.org/docs/ksp-overview.html\">Symbol Processing</a>\"&nbsp;API中的<a href=\"https://kotlinlang.org/docs/all-open-plugin.html\">All-open</a>\"编译器插件支持。</p><p>&nbsp;</p><p>Micronaut基金会<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v3.9.4\">发布</a>\"了Micronaut Framework 3.9.4，主要是修复了Bug和升级了模块：<a href=\"https://micronaut-projects.github.io/micronaut-security/snapshot/guide/index.html\">Micronaut Security</a>\"和<a href=\"https://micronaut-projects.github.io/micronaut-servlet/snapshot/guide/index.html\">Micronaut Servlet</a>\"。它还将一个依赖项升级到<a href=\"https://netty.io/\">Netty</a>\" 4.1.94。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v3.9.4\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Eclipse基金会</h4><p></p><p>在创建6年多以后（2017年3月），<a href=\"http://www.jnosql.org/\">JNoSQL</a>\" 1.0.0<a href=\"https://github.com/eclipse/jnosql/releases/tag/1.0.0\">发布</a>\"。JNoSQL是<a href=\"https://jakarta.ee/specifications/nosql/\">Jakarta NoSQL</a>\"规范的兼容实现。其新特性包括：迁移到jakarta.* 命名空间，支持<a href=\"https://jakarta.ee/specifications/data/\">Jakarta Data</a>\"规范；实现新方法，探索图、文档、键值和文档NoSQL等数据库类型的fluent-API；新增方法count()和exists()，作为DocumentManager和ColumnManager接口的默认方法。在2019年11月成为兼容实现之前，JNoSQL是一个方便开发人员使用Java创建NoSQL数据库应用程序的项目。</p><p>&nbsp;</p><p>在MicroStream<a href=\"https://microstream.one/blog/article/microstream-becomes-an-eclipse-project/\">宣布</a>\"其Java原生持久性层成为Eclipse项目两个月后，<a href=\"https://github.com/eclipse-store/store/blob/main/README.md\">Eclipse Store</a>\"的<a href=\"https://microstream.one/blog/article/the-first-release-of-eclipse-store/\">第一个版本</a>\"（以前称为<a href=\"https://microstream.one/products/microstream-for-java/\">MicroStream Persistence</a>\"）已经面向Java社区发布。目前，MicroStream代码库中的非Eclipse集成，如Spring Boot、Quarkus和Helidon，将继续保持开源，而代码将在重构后（以使用Eclipse Store和<a href=\"https://github.com/eclipse-serializer/serializer/blob/main/readme.md\">Eclipse Serializer</a>\"项目）托管在一个新的MicroStream存储库中。</p><p>&nbsp;</p><p>Eclipse Vert.x 4.4.4<a href=\"https://vertx.io/blog/eclipse-vert-x-4-4-4/\">发布</a>\"，升级到Netty 4.1.94.Final，以解决<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34462\">CVE-2023-34462</a>\"漏洞（攻击者可以在未配置空闲超时处理器的情况下操纵SniHandler类为每个连接缓冲最大16MB的数据，这会迅速导致OutOfMemoryError错误，并可能引发分布式拒绝服务）。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/vert-x3/wiki/wiki/4.4.4-Release-Notes\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Apache软件基金会</h4><p></p><p>Apache Tomcat团队<a href=\"https://www.mail-archive.com/announce@apache.org/msg08282.html\">披露</a>\"，11.0.0-M5、10.1.8、9.0.74和8.5.88版本受到<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34981\">CVE-2023-34981</a>\"的影响（如果响应不包含任何HTTP头，就不会发送<a href=\"https://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html\">Apache JServ</a>\"<a href=\"https://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html\">Protocol</a>\"&nbsp;(AJP)&nbsp;SEND_HEADERS 消息，<a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=66512\">Bug 66512</a>\"修复中的回归就可能导致信息泄漏）。<a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=66591\">Bug 66591</a>\"修复了这个问题，开发人员最好迁移到11.0.0-M6、10.1.9、9.0.75或8.5.89等小版本。</p><p>&nbsp;</p><p>Apache Camel 3.20.6<a href=\"https://www.mail-archive.com/announce@apache.org/msg08278.html\">发布</a>\"，带来了Bug修复和改进，包括：当从<a href=\"https://camel.apache.org/components/3.20.x/eips/message.html\">Camel Message</a>\"填充<a href=\"https://camel.apache.org/components/3.20.x/cxf-component.html\">Camel CXF</a>\"消息时，确保REQUEST_CONTEXT和RESPONSE_CONTEXT头已映射；增强<a href=\"https://camel.apache.org/manual/camel-jbang.html\">Camel JBang</a>\"模块，支持OpenAPI。要了解关于该版本的更多细节，请查看<a href=\"https://camel.apache.org/releases/release-3.20.6/\">发布说明</a>\"。</p><p>&nbsp;</p><p>类似地，Apache Camel 3.14.9<a href=\"https://www.mail-archive.com/announce@apache.org/msg08277.html\">发布</a>\"，修复了以下Bug：在FileConverter类中使用Files类的createTempFile()方法，而不是直接创建文件；在<a href=\"https://github.com/FasterXML/woodstox/blob/master/README.md\">Woodstox</a>\" XML命名空间上使用<a href=\"https://camel.apache.org/components/3.20.x/languages/xtokenize-language.html\">XML Tokenize</a>\"时可能出现的NullPointerException。要了解关于该版本的更多细节，请查看<a href=\"https://camel.apache.org/releases/release-3.14.9/\">发布说明</a>\"。</p><p>&nbsp;</p><p>Apache Log4j 3.0.0的<a href=\"https://www.mail-archive.com/announce@apache.org/msg08284.html\">第一个Alpha版本</a>\"带来了显著的变化，包括：允许通过更灵活的依赖注入模式创建插件；将Kafka、<a href=\"https://zeromq.org/\">ZeroMQ</a>\"、CSV、JMS、JDBC和Jackson的支持拆分到各自的模块中；在多个类和接口中移除对Serializable接口的支持，包括Message、Layout、LogEvent、Logger和ReadOnlyStringMap。</p><p>&nbsp;</p><p><a href=\"https://jmeter.apache.org/\">Apache JMeter</a>\" 5.6.0<a href=\"https://www.mail-archive.com/announce@apache.org/msg08288.html\">发布</a>\"，修复了一些Bug，并增加了一些新特性，比如：使用<a href=\"https://github.com/ben-manes/caffeine/blob/master/README.md\">Caffeine</a>\"来缓存HTTP头，而不是Apache Commons Collections LRUMap类；为提升启动速度，使用Java ServiceLoader类来加载插件，而不是通过类路径扫描；通过使用Java LongAdder和类似的并发类来避免Calculator类中的同步，改进许多线程频繁生成采样器时的计算过程。要了解关于该版本的更多细节，请查看<a href=\"https://jmeter.apache.org/changes.html\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>JHipster</h4><p></p><p>JHipster团队<a href=\"https://twitter.com/pascalgrimaud/status/1672226808903892993?cxt=HHwWgoDQiYjb-LQuAAAA\">发布</a>\"了<a href=\"https://www.jhipster.tech/jhipster-lite/\">JHipster Lite</a>\" 0.35.0，修复了Bug，完善了文档，升级了依赖项，改进了Sonar分析，提供了更多错误细节和一个等待选项。要了解关于该版本的更多细节，请查看<a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v0.35.0\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>堪萨斯开发者大会</h4><p></p><p>2023<a href=\"https://www.kcdc.info/\">堪萨斯开发者大会</a>\"（KCDC）于上周在密苏里州堪萨斯城的<a href=\"https://kcconvention.com/\">堪萨斯会议中心</a>\"举行，来自Java社区的<a href=\"https://www.kcdc.info/speakers\">演讲者</a>\"带来了研讨会和<a href=\"https://www.kcdc.info/sessions\">专题演讲</a>\"，主题涉及：Java、架构、云、数据科学、JavaScript、项目管理和安全。</p><p>&nbsp;</p><p></p><h4>JCON欧洲站</h4><p></p><p>同样在上周，<a href=\"https://2023.europe.jcon.one/\">JCON Europe 2023</a>\"在德国Kön的<a href=\"https://cinedom.de/\">Cinedom</a>\"举行，来自Java社区的<a href=\"https://2023.europe.jcon.one/speaker\">演讲者</a>\"就Java、开发生产力工程、安全性、Web组件、微服务和云原生等主题发表了<a href=\"https://2023.europe.jcon.one/schedule\">演讲</a>\"。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/06/java-news-roundup-jun19-2023/\">https://www.infoq.com/news/2023/06/java-news-roundup-jun19-2023/</a>\"</p>",
    "publish_time": "2023-07-11 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "虚拟孪生如何助力制造业高质量发展",
    "url": "https://www.infoq.cn/article/N03gO1QRyxu3ayx1gLHJ",
    "summary": "<p>工业制造是数字孪生的主战场，通过把相关技术应用于产品设计、生产制造和远程售后服务等方面，可以帮助企业更好地反馈和优化业务结果，减少成本浪费。但是，数字孪生相关技术本身的资金投入并不小，场景的选择非常重要。</p>\n<p>在最新一期的《超级连麦.数智大脑》直播中，达索系统技术咨询部杨宠博士，介绍了达索系统提出的“虚拟孪生”概念，围绕产品全生命周期解读了虚拟孪生的价值，并详细剖析了多个虚拟孪生应用案例及未来展望。</p>",
    "publish_time": "2023-07-11 12:13:34",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "迈向普罗大众的生成式 AI：如何为技术爆发创造条件",
    "url": "https://www.infoq.cn/article/XUWsx9CoDjTY0mdtMFIj",
    "summary": "<p>生成式 AI、大语言模型（LLM）无疑是 AI 行业当下的最大热点。自 2023 年初以来，ChatGPT、Stable Diffusion 等生成式 AI 技术凭借惊人的输出表现，在行业领域以及大众层面都引发了大量关注与应用热潮。</p><p></p><p>2023 年 6 月 27 日 - 28 日，亚马逊云科技中国峰会在上海世博中心盛大召开。大会第一天，亚马逊云科技全球产品副总裁 Matt Wood 博士发表主题演讲，向与会者传达了亚马逊云科技对生成式 AI 技术的态度与愿景。Matt Wood 表示，生成式 AI 是整个技术行业的一项巨大突破，亚马逊云科技对此感到十分兴奋。为了让更多人更早从这一技术创新中受益，亚马逊云科技正在帮助企业、开发者乃至整个行业，利用亚马逊云科技积累的技术、资源和经验推动生成式 AI 技术向大众化发展。</p><p></p><h1>生成式 AI：行业离未来还有多远？</h1><p></p><p></p><p>生成式 AI 的基础是参数规模可达千亿级别的大型模型，基于大量文本、代码或图像数据集训练，需要数万甚至更多的 GPU，经过几千小时才能训练完成。大模型能够释放超越传统界限的创新，将人类推向未知的领域。用户可以使用大模型加速创意流程、加快总结排序过程，或创造全新的交互体验，乃至提升复杂决策的可靠性与效率等。</p><p></p><p>然而，虽然生成式 AI 技术拥有广阔的应用前景，但它在普及的路上也面临着重重阻碍。大模型训练所需的庞大硬件资源、时间、人力成本投入，对于大多数企业而言都是沉重的负担。企业在训练模型时需要收集海量数据，而如何应对这些数据的法律授权问题，如何保障数据的安全性也会让很多企业的开发团队头痛不已。现阶段大模型的输出质量仍然是一个问题，包括 ChatGPT 在内的公开服务都在实践中表现出了输出质量不稳定、回答过分自信、对领域知识了解不足等问题。</p><p></p><p>针对上述问题，亚马逊云科技在本次峰会上也提出了相应的解决方案。Matt Wood 博士在演讲中提到了亚马逊云科技涉足生成式 AI 领域研发的几项关键产品和服务：Amazon Bedrock、Amazon Titan 与 Amazon CodeWhisperer。这些产品与亚马逊云科技已有的 Amazon SageMaker、Amazon Aurora 等服务，以及亚马逊云科技自研的 Inferentia 和 Trainium 芯片结合，将为行业提供一条通向平民化的生成式 AI 普及路径。</p><p></p><h1>大模型平民化，亚马逊云科技的理想与方案</h1><p></p><p></p><p>Amazon Bedrock 是亚马逊云科技刚刚推出的全托管生成式 AI 服务，其允许用户通过 API 访问亚马逊云科技和第三方基础模型提供商的预训练基础模型。开发人员无需担忧底层基础架构，只需通过简单易用的 API，选择所需模型，就能输出合适的文本或图像内容。亚马逊云科技还提供了 Amazon Titian 模型库，让用户可以在安全、私有的环境下对模型进行优化和微调。最后，Amazon CodeWhisperer 工具则借助了生成式 AI 技术，帮助用户显著提升开发效率，快速获得生成式 AI 的收益，并降低大模型应用的门槛。</p><p></p><p>Matt Wood 提到，从云计算开始，亚马逊云科技就一直在推动创新技术的民主化进程。在生成式 AI 领域，亚马逊云科技认为大模型民主化的关键就在于使用门槛较低、种类丰富、较为低廉的开发和应用成本，易于为行业和领域需求定制模型，同时安全可靠、无需担忧法律和隐私问题。为此，Amazon Bedrock 与 Amazon Titan 提供了一系列有着各自专长的基础模型，用户可以轻松将数据输入模型，通过无服务器的 API 部署应用。Amazon Bedrock 支持私有数据定制化，为开发人员提供了安全的开发环境。</p><p></p><p>对于企业而言，Amazon Bedrock 为他们创造了一个非常合适的生成式 AI 起点和开发框架，他们可以将 Amazon Titan 模型库中的模型，快速调整为可以更好解决领域问题的行业模型，大幅降低了大模型的开发门槛。Amazon Bedrock 即用即付的费用模式，结合亚马逊云科技自研的高效能推理和训练芯片，则可以大幅降低大型模型训练前期的成本投入。Matt Wood 认为，这样的方式足够简便、经济实惠，可以同时适应大企业与中小创投企业的需求。</p><p></p><p>值得一提的是，Amazon Bedrock 还能大幅降低大模型输出自信满满但错误回答的概率，且输出内容都经过了云端认真审核，确保健康无害。亚马逊云科技在训练 Amazon Titan 模型时，使用的数据也都经过了授权或使用许可，符合相关法律要求，企业可以放心地使用这些模型，无需担心潜在的隐私与法律问题。</p><p>如今，已经有企业利用 Amazon Bedrock 开发了针对广告内容分发的行业模型，并取得了 50% 的成本节约、35% 的效率提升与 45% 的点击率提升。在可见的未来，会有大批行业企业意识到亚马逊云科技提供的生成式 AI 服务解决方案的优势，并通过这些方案享受到类似的收益。</p><p></p><h1>释放 AI 潜力：从前台实践到后台支撑</h1><p></p><p></p><p>在开发生成式 AI 基础框架服务的同时，亚马逊云科技也在关注如何利用生成式 AI 改善生产力，新推出的 Amazon CodeWhisperer 便是这样的工具。它可以为开发人员提供很好的帮助，用户通过自然语言指示系统生成他们所需的代码，大幅提升开发效率。Amazon CodeWhisperer 支持 15 种编程语言，未来还会加入更多选项。该工具能够从开发人员使用的源代码库中提取有用的资源来生成代码，从而更准确地把握需求。</p><p></p><p>在内部对比中，CodeWhisperer 带来了 57% 的开发时间节省和 27% 的代码质量提升，效果十分明显，已经有包括瑞士军刀在内的企业，开始使用 Amazon CodeWhisperer 来改进现有的软件开发流程。亚马逊云科技认为，Amazon CodeWhisperer 还能帮助用户进一步降低大模型技术应用的门槛，让他们以更快的速度、更高的质量和更安全的方式开发生成式 AI 应用，为技术民主化的进程提供助力。</p><p></p><p>Matt Wood 提到，生成式 AI 的本质是以前所未有的方式支持和处理数据。数据对于生成式 AI 而言是一切工作的起点，而亚马逊云科技对此的答案就是云原生的数据战略。如果说 Amazon CodeWhisperer 是生成式 AI 的前台应用，那么云原生的数据战略就是亚马逊云科技为企业提供的后台支撑。</p><p></p><p>首先，亚马逊云科技提供了全球领先的全类别云数据库服务，提供低时延、低成本等优势。例如，元宇宙企业 Gevos 就使用了亚马逊云科技的云数据库作为核心负载的托管平台，显著提升了游戏开发的生产力。与此同时，用户还可以使用 Amazon EMR、Amazon Aurora 的全新 ETL 服务等工具组合，获得广泛而深入的数据分析能力。最后，Amazon DataZone 这样的数据管理服务可以帮助企业搭建数据治理框架，进而形成自己的数据战略。</p><p></p><p>所有这些数据能力组合在一起，为亚马逊云科技的客户带来了可见的先发优势。当用户充分利用这些能力来结合诸如 Amazon SageMaker、Amazon Bedrock 等 AI 服务，就能够快速实现一些全新的应用，从现有的数据中挖掘出可观的价值。</p><p></p><p>在用户推动数据与 AI 战略的过程中，亚马逊云科技还为企业设置了足够的安全护栏，帮助开发团队在免于安全与法律问题的同时获得更高的自由度，进行更广泛的实验。通过这些实验的成果，开发人员就能够整合自身所处行业的专业知识，推出效果令人满意的行业 AI 应用。</p><p></p><h1>写在最后</h1><p></p><p></p><p>本次亚马逊云科技中国峰会，标志着亚马逊云科技在生成式 AI 领域正式开始全面出击，向着这一技术全面普及的目标大踏步前进。Matt Wood 博士的演讲不仅全面回顾了亚马逊云科技的一系列创新产品和服务，也为企业如何利用这些服务搭建自己的生成式 AI 开发框架，并制定 AI 与数据战略提供了很好的建议。</p><p></p><p>Matt Wood 总结说，在整个行业中，亚马逊云科技实现了以最快、最低成本以及最简单易行的方式提供生成式 AI 模型。最近，亚马逊云科技还投资了一亿美元来进一步促进生成式 AI 领域的创新和进步，其中的一项重要举措就是建立一个新的生成式 AI 创新中心。这个创新中心集结了亚马逊云科技在机器学习方面的科学家，与此同时也会积极地同客户合作，帮助他们构想、设计和推出新的生成式 AI 产品、服务和流程。</p><p></p><p>Matt Wood 认为，随着越来越多的企业甚至个人经常使用这些生成式 AI 模型，它们的反馈与输出会越来越好。对于行业的未来，Matt Wood 博士也充满乐观：“我们正处于一项重大技术创新的发展早期和爆发前夜，我们所见的一切都只是起跑线，而非天花板。”</p>",
    "publish_time": "2023-07-11 12:33:15",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "5天内用户数破亿、增速碾压ChatGPT，Twitter劲敌Threads是如何构建的？",
    "url": "https://www.infoq.cn/article/xk8s3S1qPLZopINuBCA4",
    "summary": "<p></p><blockquote>小扎和马斯克的“格斗”，从八角笼中来到了社交平台上。</blockquote><p></p><p></p><p>当地时间 7 月 5 日，Meta 旗下的 Instagram 正式发布 <a href=\"https://www.infoq.cn/article/WAb5hXYcthvYjYqVMyxN\">Threads</a>\"，与 Twitter 展开直接竞争。据介绍，Threads 的定位是“用文本分享动态和加入公共对话”。应用上线后，Meta 公司首席执行官马克·扎克伯格“实时”公布 Threads 最新成绩：4 小时，注册用户 500 万；7 小时，注册用户 1000 万；24 小时，注册用户 3000 万；48 小时，注册用户 7000万。</p><p>&nbsp;</p><p>北京时间 7 月 10 日 15 点左右，据数据追踪网站 Quiver Quantitative 披露，Threads 的登录用户数已经突破 1 亿人。扎克伯格表示，这主要是自然需求，Threads 甚至还没有开展很多推广活动。这远远超出了预期。</p><p>&nbsp;</p><p>而此时，距离 Threads 在美洲地区首发上线连 5 天整都没到。Threads 的注册用户增速也打破了此前 ChatGPT 留下的记录，后者用了 2 个月实现注册用户数破亿。此外，Threads 用户的活跃度也很高，据报道，过去几天 Threads 上的帖子数量已经达到 9500 多万条，点赞数 1.9 亿次。</p><p>&nbsp;</p><p>投资银行 Evercore ISI 表示，虽然现在还处于早期阶段，但预计 Threads 可以为 Meta 带来可观的现金。Threads 有望在未来两年内覆盖近 2 亿的日活跃用户，并产生约 80 亿美元的年收入。</p><p>&nbsp;</p><p>那么，这样一款现象级应用程序是如何构建的？</p><p></p><h2>Threads 是如何构建的？</h2><p></p><p>&nbsp;</p><p>近日，国外工具分析平台 Emerge Tools 率先对 Threads App 进行了拆解分析，分别揭晓了 Android 版 Threads 以及 iOS 版 Threads 是如何构建的。</p><p>&nbsp;</p><p>Emerge Tools 表示，Meta 投入大量资源对应用做移动性能优化。通过测试和分析，可以看到 Meta 的移动应用优化确实做得不错。Meta 采取的不少模式虽非典型的最佳实践，但凭借着强大的基础设施和工程能力，Meta 仍然在这场“以终为始”的性能大战中占据了主动。</p><p></p><h3>拆解 Android、iOS 版 Threads&nbsp;</h3><p></p><p>&nbsp;</p><p>Android 版 Threads 方面，跟其他 Meta 应用一样，Threads 也提供通用 APK 文件。虽然业界认为 AAB 才是最佳实践，但 Meta 还是选择了高度优化过的通用 APK——把资源、自定义打包共享库和 Redex 结合了起来。</p><p>&nbsp;</p><p>Threads 还发布了调试代码。Threads 提供com.instagram.debug.devoptions.sandboxselector&nbsp;和&nbsp;com.instagram..debug.quickexperiment 等调试包。</p><p>&nbsp;</p><p>此外，Threads 在应用的某些部分使用了React Native，-&nbsp;InstagramBundle.js.hbc.spk.xz&nbsp;可能是Hermes 字节码（js.hbc）的压缩版本。</p><p>&nbsp;</p><p>其中有个很大的.spo文件，看起来像是不同本机库的编译版本。其中附带一个元数据文件：</p><p><code lang=\"null\">arm64-v8a/librtc.so 11336240 bda527a307edd868700fccfab15481f403d3f39363289d5d6a717579f284bed7\narm64-v8a/libgojni.so 11330024 616915938eb1face6aa3392aedab8bddce280f2b84423377ac65896a6b3faad7\narm64-v8a/libarfxgraphicsmerged.so 9710600 afb00aa881a63b20371e447dbbad61fefcf4df2c23c922a9e44e2171d7a649ad\n...</code></p><p>&nbsp;</p><p>Emerge Tools 猜测这个.spo 文件是所有本机库的合并版本，第二个条目是 offset/size，第三个条目则是 checksum。</p><p>&nbsp;</p><p>UI 方面，根据@richz（Threads 工程师）的帖子，Threads 主要用 Jetpack Compose 来构建自己的UI。跟整个 dex 大小相比，dex 的组装部分相对较小（约 130 KB），所以也许能更高效地使用 Compose 并/或共享 Instagram 代码、控制实际代码量。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a6/a6793a4891215ad72f0b9f3408d62ac0.png\" /></p><p></p><p>&nbsp;</p><p>Threads 的 iOS 版有两点比较突出：</p><p>&nbsp;</p><p>Thredas 有 0 个动态库，而 Facebook 应用却大量使用动态框架。Threads 的插件体量几乎逼近人们的认知极限。其中 BarcelonaShareExtension 达到 81 MB。相比之下，最大的 Instagram 插件-&nbsp;InstagramNotificationExtension 也仅为 23.5 MB，InstagramShareExtension&nbsp;则为 5.6 MB。</p><p></p><h3>后端采用Cinder，基于Python 3.10构建</h3><p></p><p>&nbsp;</p><p>此外，据 CPython 核心开发者 Łukasz Langa 透露，Threads 的后端使用了 Cinder，这是基于 Python 3.10 构建的高性能版本，其中包含 JIT、延迟加载模块、预编译静态模块，而且针对 Python 3.10 做出了一系列有趣的调整。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/58/589a03e48e18b6510e453677edf55333.png\" /></p><p></p><p>据了解，Cinder 是 Meta 内部打造的、强调高性能的 CPython 3.10 生产版本。其中包含多种性能优化，例如字节码内联缓存、协和即时评估、每次一个方法 JIT，以及使用类型注释在 JIT 中实现类型专用字节码、从而提高性能的实验性字节码编译器。</p><p>&nbsp;</p><p>Cinder 目前已经在支持 Instagram，而且正越来越多被用在 Meta 公司的各类 Python 应用程序当中。Meta 表示，公开发布 Cinder 是为了推动将部分工作负载回流至 CPython 的讨论，同时努力减少 CPython 开发者在性能优化方面浪费的时间。</p><p>&nbsp;</p><p>但 Cinder 本身尚不完善，也不是 CPython 的替代品，Meta 发布项目代码的唯一理由，就是想帮助 CPython 在速度方面更上一层楼。虽然 Meta 自己确实在生产环境中运行 Cinder，但无法为其他开发者提供生产层级的技术支持。只能保证 Cinder 在 Meta 自己的生产工作负载中稳定且快速，但不保证其在其他外部工作负载或用例中具有良好的稳定性、正确性或性能。</p><p>&nbsp;</p><p>据介绍，Instagram 拥有非常庞大的 Python 代码库，所以由引用计数复制所带来的开销也极为沉重。为此，Cinder 开发出名为“不朽实例”（Immortal Instance）的解决方案，能够从引用计数中清退对象。此功能通过定义 Py_IMMORTAL_INSTANCES 进行控制，并在 Cinder 中默认启用。这对生产流程是一个巨大的胜利（节约开销约 5%），但也会令直接代码的运行速度变慢。由于引用计数操作会频繁发生，所以启用此功能前必须检查对象是否确实参与了引用计数。</p><p></p><h3>Threads 的启动时间如何？</h3><p></p><p>&nbsp;</p><p>Emerge Tools 用 ETTrace 来查看 Threads 的实际启动时间。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e6/e6fa7804c68cb1fdbced16490dc93f40.png\" /></p><p></p><p>使用ETTrace为Threads的启动过程生成火焰图。</p><p>&nbsp;</p><p>Emerge Tools 表示，由于 Meta 公开的 build 混淆，能从栈中追踪到的信息不多。但仍然可以看到，其中存在大量 pre-main 时间（在追踪期间约为 50 毫秒）。</p><p>&nbsp;</p><p>还有一个会在应用启动时初始化的 WKWebView，它的速度也相当慢。这意味着整个登录体验并非本机、而是在显示 webview，或者是出于追踪的目的而将登录放在了后台。</p><p></p><h2>Threads 未来会“去 Instagram 化”吗？</h2><p></p><p>&nbsp;</p><p>分析发现，Threads 在 Android 和 iOS 两大平台上都照搬了不少 Instagram 代码，比如 InstagramBundle.js.hbc.spk.xz 等等。</p><p>&nbsp;</p><p>其中，Android 版 Threads 与 Instagram 间的/assets/dsp也是相同的。考虑到 Threads 与 Instagram 高度集成，二者共享代码也完全在情理之中。</p><p>&nbsp;</p><p>此外，iOS 版 Threads 的 BarcelonaShareExtension 与 Instagram 的 FBSharedFramework 之间拥有很多相同元素。一些值得注意的相同元素：</p><p>&nbsp;</p><p>FilterAsset.bundle；ig_signals_cupid_better_recall_v1.mlmodelc&nbsp;与&nbsp;ig_signals_cupid_v2.mlmodelc；资产目录几乎完全相同。</p><p>&nbsp;</p><p>作为一款新产品，Threads 的发布显然有些仓促。Threads 在 Android 和 iOS 两大平台上和 Instagram 共享大量代码，明显是为了加快开发速度。Threads 团队希望快速行动，在一切可能的位置直接使用 Instagram 那边的现成代码。在未来的发展中，Threads 会不会逐步“去 Instagram 化”值得关注。</p><p>&nbsp;</p><p>目前，Threads 还缺少了一些关键功能，比如没有翻译按钮、不能搜索内容（只能搜索用户）、没有话题标签功能、没有编辑按钮（发布帖子后无法进行编辑）、不能私信等。Meta 产品副总裁 Connor Hayes 也承认，有一些功能没能赶上这次发布，它们会在日后更新时推出。</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://twitter.com/llanga/status/1676846870520291329\">https://twitter.com/llanga/status/1676846870520291329</a>\"</p><p><a href=\"https://news.ycombinator.com/item?id=36612835\">https://news.ycombinator.com/item?id=36612835</a>\"</p><p><a href=\"https://www.emergetools.com/deep-dives/threads\">https://www.emergetools.com/deep-dives/threads</a>\"</p>",
    "publish_time": "2023-07-11 13:49:55",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "数智化探索的价值：有深度的技术加成有温度的业务 ｜InfoQ 《一探到底》",
    "url": "https://www.infoq.cn/article/xLKYIf53YK74WgheLFRY",
    "summary": "<p>ChatGPT火热全球，同样也席卷到了金融行业。作为始终秉持“保险+科技”的企业，众安保险也走在人工智能+金融的探索上走在行业的前沿。未来人工智能将为金融行业带来哪些变局呢？InfoQ《一探到底》【走进众安】系列收官篇，从众安的十年，看保险科技的十年，与你一同探索金融行业的数智化创新之路！期待众安保险在下一个十年用有温度的保险温暖世界，并谱写出新的篇章。</p>",
    "publish_time": "2023-07-11 14:09:32",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "MySQL 之父，和 Amazon、科大讯飞、宝洁、字节、用友等企业专家齐聚深圳 ArchSummit 架构师峰会！",
    "url": "https://www.infoq.cn/article/voHUFYJyZEG8uSQtYolF",
    "summary": "<p>在新的大模型时代，数字化技术和人工智能正在深刻地影响传统的研发方式，同时开发者也需要提升自己的技能来应对变化。在 7 月 21 日 即将开幕的<a href=\"https://archsummit.infoq.cn/2023/shenzhen/schedule?utm_source=haibao&amp;utm_medium=richeng&amp;utm_campaign=10&amp;utm_term=infoqweb\">深圳 ArchSummit 架构师峰会</a>\"上，我们将专注于架构师在工作中所需的技术和技能，围绕微服务架构、运维、DataOps、大数据架构等话题，继续分享常规的技术实践内容。</p><p></p><p>同时，也会在会议上探讨大模型对传统研发领域的挑战与机遇，以及如何在实践中加以应用。我们邀请了来自各行业的权威专家与实践者，分享他们在运用大模型研发过程中关于代码辅助生成等方面的经验与心得。</p><p></p><p>除此之外，听众还将听到“Mesh 技术实践案例”、“低代码架构实践”、“金融级高可用系统架构设计”、“QUIC 传输和架构优化”、“智能化数据治理”、“架构师成长之路”等专题演讲。</p><p></p><p>以下为大会日程：</p><p><img src=\"https://static001.infoq.cn/resource/image/01/7a/011f09063f1e187db68e2e5bb431ab7a.png\" /></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/bd/56/bd6b9566721d570c61ba9db2f5510156.png\" /></p><p></p><p>除了技术专题演讲之外，我们还策划了「ArchSummit 特色晚场交流：大模型时代架构师的应对之道」，架构师在大模型时代需要如何转变思路？欢迎你来参与讨论。</p><p></p><p>购票 / 参会可联系票务经理瑞丽：18514549229（微信同手机号）。</p>",
    "publish_time": "2023-07-11 15:16:03",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "蚂蚁链摩斯发布隐私计算 SaaS 服务 MORSE OPEN",
    "url": "https://www.infoq.cn/article/Ts4HLspXGbGIbtqxbvP6",
    "summary": "<p>“隐私计算 inside、隐私计算+数据、隐私计算即服务、隐私计算+模型，将会让 PaaS 型的隐私计算变成 SaaS 型的隐私计算，更加随手可得。”</p><p></p><p>这是<a href=\"https://www.infoq.cn/article/fQxQ3ICY8XUP1HHmFCoF\">蚂蚁</a>\"链摩斯业务总经理李怀勇在隐私计算发展过程中的最新观察。</p><p></p><p>在刚刚闭幕的世界人工智能大会上，蚂蚁链摩斯推出了隐私计算开放服务 MORSE OPEN ，实现隐私计算轻量级接入，降低中小机构的技术使用门槛。</p><p></p><p>MORSE OPEN 基于摩斯的产品底座打造，是一种支持云上部署的 SaaS 化服务，核心包括 OpenAPI 、安全数据服务 DaaS 、机密计算服务 CaaS 、安全模型服务 MaaS 等。其中，MaaS 可帮助大模型安全调优和安全推理。</p><p></p><p>李怀勇表示，隐私计算行业已经出现了三个大的变量及趋势：</p><p></p><p>趋势一：数据要素市场化，在政策的红利下通过数据要素的流动能够释放巨大的产业新价值；</p><p></p><p>趋势二：智能化升级，大模型爆发加速了行业应用全面智能化的到来；</p><p></p><p>趋势三：数字化时代，数据的隐私安全带来的强诉求。</p><p></p><p>他判断，在这三个趋势的带动下，<a href=\"https://www.infoq.cn/article/5KJiUZKVdGQDHOczrupV\">隐私计算</a>\"会在要素流通应用、全域智能应用以及隐私增强应用中发挥更大的价值。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/05/058493eb7cd2f45b48d3c3023e3307d0.jpeg\" /></p><p>蚂蚁链摩斯业务总经理李怀勇在 2023WAIC 上的分享</p><p></p><p>我是蚂蚁集团的李怀勇，负责蚂蚁链摩斯业务。2017 年至今，我们一直在打磨摩斯隐私计算产品，推动并帮助隐私计算在各行各业的深入应用，今年我们的产品也升级到了 2.0 。</p><p></p><p>今天我带来的演讲题目是“隐私计算行业应用新范式”，希望站在当下对隐私计算的行业应用提出一些思考以及判断，以及面向未来，它有什么机会？</p><p></p><p>回到技术原点，隐私计算技术通常意义是指这三类技术，包括多方安全计算（MPC）、可信执行环境（TEE）、联邦学习（FL）。从技术角度来看，相比较 AI ，隐私计算不能算得上“创造型”技术，更是“增强型”技术。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7e/7e57a1a87ddf6ba5b16583f3aa831d02.png\" /></p><p></p><p>在应用侧有什么增强？</p><p></p><p>1、合规增强，让数据可信安全流通；</p><p></p><p>2、智能增强，从数据智能到联合数据智能。（过去所有的数字智能风控、数字智能营销等，都会被联合智能升级一遍，通过多方数据融合，形成联合数字风控、联合数字营销。）</p><p></p><p></p><h2>三大变量带来三个机会</h2><p></p><p></p><p>从需求侧看，目前行业有三个大的变量及趋势：一个是数据要素市场化，在政策的红利下通过数据要素的流动能够释放巨大的产业新价值；一个是智能化的升级，大模型爆发加速了行业应用全面智能化的到来；还有一个是数字化时代的隐私安全、数据安全本身的强诉求。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/71/718db89dc09ddfc39a28852b29b620e0.png\" /></p><p></p><p>在这三个趋势的带动下，隐私计算会在这三类应用中发挥巨大价值，要素流通应用、全域智能应用以及隐私增强应用。</p><p></p><p>首先，我们来看看目前比较火热的要素流通应用，这个在政务行业应用比较广泛：</p><p></p><p>1、数据开放，一个新型的数据开放平台或者是数据交易所，通过隐私计算能力实现各类政务数据的安全融合，并且通过安全定制的方式应用到各类数据应用场景，这类场景通常用可信执行环境（TEE）的方式来实现；</p><p></p><p>2、垂直领域应用（如联合科研），基于医疗数据的多方数据的联合安全计算，实现一些联合的科研，比如疫情防控、学术论文的一些分析，这个通常使用 FL 的方式；</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/98/98e7e681340a912b6bf14fdcbebbdb96.png\" /></p><p></p><p>我们看到，要素流通的应用趋势，一方面需要叠加数据全生命周期的合规及保护诉求，实现全流程可追踪；也需要结合区块链来应用。另一方面核心在于对于中心化的数据密态融合环境的建设有了更高要求。</p><p></p><p>其次，我们来看金融及零售行业的全域智能应用趋势：</p><p></p><p>1、金融行业的联合风控。基于三方数据的模型安全训练到模型的安全推理，通过同态以及 MPC 的方式实现模型的保护。</p><p></p><p>2、大型企业的联合营销。实现广告主、媒体以及三方 DMP 数据的安全融合计算，对投放人群做更加精准的刻画、圈选。中小客户用 TEE ，部署成本低，对安全诉求更高的大型客户用 MPC 模式。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6d/6d13bb868ddb476c81ad65afef757de7.png\" /></p><p></p><p>我们注意到，全域智能正逐步成为大型企业数字化建设的标配，通过联合模型和外部广域数据以及公共大模型形成全域智能应用，而且数据网络越来越大、维度也越来越多，算法更复杂，模型更大。</p><p></p><p>最后，我们来看互联网行业的隐私增强应用趋势：</p><p></p><p>在互联网行业，实时型的隐私计算应用越来越成为刚需。互联网核验类应用，人脸、住址等敏感信息的安全核验，从 ID 到向量、文本等；互联网保护隐私的广告应用，通过 PIR 匿名查询的方式实现广告流量的出价决策等。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/03/031ac8ccd613bb21e4709740e17af6e5.png\" /></p><p></p><p>从这里看到的趋势就是：从结构化数据到非结构数据的安全保护；ID 匿名化实现千人十面保护隐私。</p><p></p><p></p><h2>行业痛点--高成本、缺标准、规模小</h2><p></p><p></p><p>在这些旺盛的行业应用背后，隐私计算也存在不少痛点：高成本，技术集成对接的成本比较高更适合大企业；缺标准，技术服务商参差不齐，缺乏产品安全等级评估以及增加互联互通障碍；小规模，从技术出发的自闭环单点应用为主，缺少聚合共享的规模化应用。</p><p></p><p>所以回到今天的主题，在这种应用趋势和行业痛点下，我们判断：交互增强应用、数据增强应用、算力增强应用、算法增强应用这四种隐私计算模式，将成为<a href=\"https://www.infoq.cn/article/e1Hpl35MabWuXxXta35e\">数字化</a>\"的标配。</p><p></p><p>我们判断，未来会以隐私计算 inside 、隐私计算+数据、隐私计算即服务、隐私计算+模型这四种模式，让上个时代的 PaaS 型的隐私计算变成 SaaS 型的隐私计算，更加随手可得。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6b/6b9719ae9a71334047fcfc34d81ebebd.png\" /></p><p></p><p>基于此，我们全新推出了摩斯开放服务 MORSE OPEN ，实现隐私计算轻量级接入，降低中小机构的隐私保护门槛。</p><p></p><p>通过连接数据方、模型算法、行业集成等生态伙伴，我们将陆续推出四类服务：</p><p></p><p>1、OpenAPI 服务，把隐私计算变成一个集成服务，即使是单功能也能调用；</p><p></p><p>2、数据变成为 DaaS 的安全数据服务，助力企业开展数据网络和智能决策服务；</p><p></p><p>3、CaaS 机密算力服务，让中小企业也可以享受到隐私计算的安全服务；</p><p></p><p>4、MaaS 安全模型服务，帮助大模型安全调优和安全推理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/87/879e70f2e0457bef06a0fd9847c7bb25.png\" /></p><p></p><p>我们相信，隐私计算一定会成为数字化、智能化的加速器，让各行各业收益。</p><p></p><p>*注：摩斯是蚂蚁链推出的隐私计算商业化产品，基于多方安全计算、隐私保护、区块链等技术，解决企业数据协同计算过程中的数据安全和隐私保护问题，实现数据可用不可见，多方协同释放数据要素价值。</p><p></p><p>目前产品已广泛应用于联合营销、政务数据安全开放、联合风控、多方联合科研等业务场景。至今已服务 300+ 机构，在银行、保险、电信、汽车、零售、互联网等 10 多个行业落地，是国内最早大规模商用的隐私计算产品之一。</p><p></p>",
    "publish_time": "2023-07-11 15:31:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "大模型可以摆脱落地难的问题吗？InfoQ 大模型技术应用创新大赛正式开启！",
    "url": "https://www.infoq.cn/article/SxoPZCy8D5QhAHXUd4Iy",
    "summary": "<p>2022 年末以来，人工智能大模型成为技术领域乃至全球创新领域最炙手可热的话题。以 ChatGPT 引领的大模型产品发展日新月异，有预测数据显示，到 2030 年，<a href=\"https://www.infoq.cn/article/uui4NVydvW9GO32OA3tB\">AIGC</a>\" 的市场规模或将超过万亿人民币。2023 年国内主要厂商也相继推出自研的大语言模型产品，另外国内也推出了大量的大语言模型应用，逐步构建起基于中文语言特色的大语言模型生态。</p><p></p><p>我们可以预见的是：未来几年将成为大模型相关技术快速发展的窗口期，相关的算法、算力基础设施、下游 B 端通用应用软件、垂直行业领域和工业软件领域都有望迎来加速增长。</p><p></p><p>理想自然是丰满的，然而回归现实：<a href=\"https://www.infoq.cn/article/LHxY4zv2dPgJfWaJYxtC\">大模型技术</a>\"可以摆脱 AI 落地难的问题吗？大模型技术的这波狂欢有多少是与解决实际问题挂钩的呢？</p><p></p><p>打破大模型技术落地难的现状，InfoQ 向全球极客</p><p>发起【大模型技术应用创新大赛】</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/bd/bd949c0f39c2753ee90e2f5f9d60dc44.jpeg\" /></p><p></p><p>“落地即一地鸡毛”，这恐怕是前几年大家对 AI 技术落地常见的评价。时间倒退到五六年前，“豪华团队 + Paper + 比赛刷榜”就是一个团队最好的背书，也是最受资本追捧的。但是，投资总有一天要考虑回报。于是，“落地”又成为了过去两三年被大部分 AI 企业反复提起的词汇。</p><p></p><p>与此同时，一家家 AI 领域创业公司在预上市前公布出来的财务数据也让很多人震惊于相关技术研发的投入资金居然这么高。在大模型时代，投入的资金恐怕在成倍数增长，那么收益呢？金融、制造、汽车、教育等领域是否真的因大模型技术而发生改变了呢？</p><p></p><p>为了加速推动全球大模型相关技术创新发展及工程化应用落地，助力数字经济发展。InfoQ 特此向全球极客发起本届【大模型技术应用创新】大赛，围绕大模型的技术创新与应用开展讨论，期望发掘更多能够解决产业数字化转型过程中实际问题的创新方案，共同推动大模型等技术在不同行业的落地实践。</p><p></p><p>为了与全球的前行者共同探索人工智能的无限可能，本届大赛面向广泛的开发者群体，包括未来开发者、企业开发者、个人开发者。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/50/50c96ac61ca00db3eef7f4ec21b95cec.png\" /></p><p></p><p>为了实现“产业落地最后一公里”的目标，本届大赛除了技术创新赛道、产品经理赛道，特别设置了四大产业应用赛道，分别是金融、汽车、制造、教育四大领域，我们将联合四大产业领域中的实践企业共同细化赛题，并在可能的情况下公开部分应用场景和实际数据，供参赛团队开发使用。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/95/95dd7efe37b038ef128e26d4fd246a3d.png\" /></p><p></p><p>本届大赛流程分为报名、初赛和决赛三个阶段。6 月 30 日 -8 月 30 日是大赛报名阶段，参赛方需按照报名规则完成报名；8 月 31 日 -9 月 30 日是大赛初期阶段，参赛方需根据所选赛道的提交要求，将修改和完善的初赛作品提交到指定邮箱；10 月 15 日，根据初赛结果，专家会评选出进入决赛的团队，届时请及时查看比赛结果；10 月 15 日 -11 月 30 日，参赛方需根据所选赛道的提交要求，将修改和完善的决赛作品提交到指定邮箱；12 月 10 日，将举办大模型产业峰会暨颁奖典礼，届时会有精彩的主论坛演讲及获奖团队名单公布。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ff/ff361251fa71698bdfe5bdabb4d2762d.png\" /></p><p></p><p>与此同时，本届大赛特别设立了赛事顾问、赛道主席及大赛评委。赛事顾问将针对大赛的整体方向给出指导，赛道主席及大赛评委将在大赛过程中对选手的问题进行答疑，并基于评分维度对初赛、决赛的作品进行打分。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ba/bac0c0344aeffee2ae6efab971a17ebb.png\" /></p><p></p><p>目前，大赛相关指导单位及专家评委基本确认完成，将于近期在大赛官网进行公布，欢迎广大开发者朋友及时关注。</p><p></p><p>最后，我们诚挚邀请所有关注前沿科技、热爱创新创造的开发者和企业参与到本届极客松大赛中来，通过技术交流、项目展现等多种形式，分享您的研究成果和创新想法，与全球的前行者共同探索人工智能的无限可能，打破人工智能技术落地难的困境！</p><p></p><p>PS：如果您有兴趣成为赞助商，与全球人工智能领域最具潜力和极客精神的开发者、生态伙伴以及更多社区伙伴分享您公司的技术方案及前瞻见解，发现并选择合适的生态伙伴，快速推动自身技术在各行各业的落地，欢迎在大赛官网填写【我要赞助】表单，我们的团队将尽快与您联系！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1f/1fd5aada07fc7026d270062a3b71219f.png\" /></p><p></p><p>详情查看大赛官网：<a href=\"https://www.infoq.cn/zones/geekathon2023\">https://www.infoq.cn/zones/geekathon2023</a>\"</p><p>&nbsp;</p>",
    "publish_time": "2023-07-11 17:06:04",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "红帽：我们为什么要改变 RHEL 源码的发布策略？｜InfoQ《极客有约》",
    "url": "https://www.infoq.cn/article/leVHm81oCJkYMaIKFSQG",
    "summary": "<p>为什么红帽要改变RHEL源码发布方式？怎样才算违反 GPL 开源许可？本期《极客有约》，红帽首席架构师张家驹将带来红帽的开源思考。</p>",
    "publish_time": "2023-07-11 17:08:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]