[
  {
    "title": "Java近期新闻：JDK 20进入Rampdown阶段，JDK 21专家组，Apache Tomcat，JakartaOne",
    "url": "https://www.infoq.cn/article/2ExYPtjbtxGvHCVqXw6y",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p>JEP 429，<a href=\"https://openjdk.org/jeps/429\">作用域值（孵化器）</a>\"，已从JDK 20的Proposed to Target状态<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-November/007225.html\">提升</a>\"为Target状态。这个<a href=\"https://openjdk.java.net/jeps/11\">正在孵化</a>\"的JEP，最初名为范围局部变量（孵化器，Extent-Local Variables），由<a href=\"https://wiki.openjdk.java.net/display/loom/Main\">Loom项目</a>\"赞助，提议在线程内部和线程之间共享不可变数据。这优于线程局部变量，尤其是在使用大量虚拟线程时。</p><p>&nbsp;</p><p>JEP 436，<a href=\"https://openjdk.org/jeps/436\">虚拟线程（第二次预览</a>\"），已从JDK 20的Proposed to Target状态<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-November/007223.html\">提升</a>\"为Target状态。在<a href=\"https://wiki.openjdk.org/display/loom/Main\">Loom项目</a>\"的支持下，该JEP基于JDK 19中提供的JEP 425，<a href=\"https://openjdk.org/jeps/425\">虚拟线程（预览版）</a>\"，提出了第二次的预览，以便有时间为该功能的演进提供更多的反馈和经验。需要注意的是，除了少量在JDK19中被固化的JEP 425 API外，本预览版本没有进行任何更改，因此没有在第二次预览中提出。</p><p>&nbsp;</p><p>JEP 437，<a href=\"https://openjdk.org/jeps/437\">结构化并发（第二个孵化器）</a>\"，在JDK 20中从Proposed to Target状态<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-November/007224.html\">提升</a>\"为Target状态。该JEP也是在<a href=\"https://wiki.openjdk.org/display/loom/Main\">Loom项目</a>\"的支持下，提议基于从JDK 19中提供的JEP 428，<a href=\"https://openjdk.org/jeps/428\">结构化并发（孵化器）</a>\"中重新孵化该特性，以便有时间提供更多的反馈和经验。唯一的变化是更新了 StructuredTaskScope 类，以支持在任务作用域中创建的线程继承作用域值。这简化了跨线程不可变数据的共享。</p><p>&nbsp;</p><p></p><h4>JDK 20</h4><p></p><p>JDK20<a href=\"https://jdk.java.net/20/\">早期访问构建版本</a>\"中的第<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B27\">27</a>\"版也已于上周发布，其中包括对第26版各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2020%20and%20%22resolved%20in%20build%22%20%3D%20b23%20order%20by%20component%2C%20subcomponent\">问题</a>\"的修复和<a href=\"https://github.com/openjdk/jdk/compare/jdk-20%2B22...jdk-20%2B23\">更新</a>\"。有关该版本的更多详细信息，请参阅<a href=\"https://jdk.java.net/20/release-notes\">发布说明</a>\"。</p><p>&nbsp;</p><p>根据JDK 20的<a href=\"https://openjdk.java.net/projects/jdk/20/#Schedule\">发布时间表</a>\"，Oracle Java平台组首席架构师<a href=\"https://www.linkedin.com/in/markreinhold\">Mark Reinhold</a>\"正式<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-December/007233.html\">宣布</a>\"JDK 20已进入Rampdown第一阶段。这意味着主线源代码库已经分支到JDK<a href=\"https://github.com/openjdk/jdk20/\">稳定代码库</a>\"，并且不会为<a href=\"https://openjdk.java.net/projects/jdk/20/\">JDK 20</a>\"添加额外的JEP。至此，计划于2023年3月发布的GA版本将最终包含如下七（7）个特性：</p><p>&nbsp;</p><p>JEP 429，<a href=\"https://openjdk.org/jeps/429\">作用域值（孵化器）</a>\"JEP 432，<a href=\"https://openjdk.org/jeps/432\">记录模式（第二次预览）</a>\"JEP 433，<a href=\"https://openjdk.org/jeps/433\">switch模式匹配（第四次预览）</a>\"JEP 434，<a href=\"https://openjdk.org/jeps/434\">外部函数和内存API（第二次预览）</a>\"JEP 436，<a href=\"https://openjdk.org/jeps/436\">虚拟线程（第二次预览</a>\"）JEP 437，<a href=\"https://openjdk.org/jeps/437\">结构化并发（第二个孵化器）</a>\"</p><p>&nbsp;</p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/20/\">JDK 20</a>\"，鼓励开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java缺陷数据库</a>\"报告缺陷。</p><p>&nbsp;</p><p></p><h4>JDK 21</h4><p></p><p>JSR 396、<a href=\"https://jcp.org/en/jsr/detail?id=396\">Java SE 21</a>\"上周提交，正式宣布JDK 21的六人专家组，分别是<a href=\"https://www.linkedin.com/in/siritter/\">Simon Ritter</a>\"&nbsp;（Azul Systems）、<a href=\"https://www.linkedin.com/in/jay-a/\">Jayaprakash Arthanareeswaran</a>\"（Eclipse 基金会）、<a href=\"https://www.linkedin.com/in/andrew-haley-3546112/\">Andrew Haley</a>\"&nbsp;（红帽）、<a href=\"https://www.linkedin.com/in/christoph-langer-764280208/\">Christoph Langer</a>\"（SAP SE）、&nbsp;<a href=\"https://www.linkedin.com/in/iris-clark-49159b13b/\">Iris Clark</a>\"（甲骨文）以及<a href=\"https://www.linkedin.com/in/briangoetz/\">Brian Goetz</a>\"（甲骨文）。 Clark和 Goetz将担任规范负责人。 其中值得<a href=\"https://openjdk.org/projects/jdk/21/spec/\">关注的日期</a>\"包括2023年6月至2023年8月的公开审查，以及2023年9月的GA版本发布。</p><p>&nbsp;</p><p>JDK 21<a href=\"https://jdk.java.net/21/\">早期访问构建版本</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-21%2B1\">第1版</a>\"也已于上周发布，其中包括最初的一组<a href=\"https://github.com/openjdk/jdk/compare/jdk-21%2B0...jdk-21%2B1\">版本更新</a>\"。</p><p>&nbsp;</p><p></p><h4>Spring框架</h4><p></p><p>SpringShell的2.1.4和3.0.0-M3版本<a href=\"https://spring.io/blog/2022/12/05/spring-shell-2-1-4-and-3-0-0-m3-are-now-available\">已经提供给</a>\"Java社区。2.1.4版构建在Spring Boot 2.7.6之上并提供了缺陷修复。3.0.0-M3版是构建在Spring Boot 3.0之上的第一个里程碑版本，它提供了缺陷修补和新的测试框架，以消除测试shell应用程序的传统艰巨任务，在这些任务中测试更复杂，也就是说，超出了方法目标的简单单元测试。有关这些版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v2.1.4\">2.1.4版本</a>\"和<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v3.0.0-M3\">3.0.0-M3版本</a>\"的发布说明。</p><p>&nbsp;</p><p>SpringTools 4.17.0<a href=\"https://spring.io/blog/2022/12/07/spring-tools-4-17-0-released\">已经发布</a>\"，其中包含对Spring Tools 4 for Eclipse 2022-12版本的更改。这个新版本还提供了对以下方面的实验性支持：Spring Boot版本验证，其中IDE将向Spring Boot项目提供更新的主要、次要或补丁版本的警报；Spring Boot升级支持，以协助将现有项目升级到更新的Spring Boot版本；以及特定于Spring的验证和重构，以指示是否可以或应该更改源代码中的某些内容，以使Spring项目与Spring中的最新建议或进步保持同步。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/sts4/wiki/\">用户指南</a>\"。</p><p>&nbsp;</p><p></p><h4>Quarkus</h4><p></p><p>红帽（Red Hat）<a href=\"https://quarkus.io/blog/quarkus-2-14-3-final-released/\">发布</a>\"了Quarkus 2.14.3.Final，该版本对缺陷进行了修复，更新了文档，并将<a href=\"https://github.com/smallrye/jandex/blob/main/README.md\">SmallRye Jandex</a>\" 3.0.5、Stork 1.3.3和&nbsp;<a href=\"https://mina.apache.org/downloads-sshd.html\">Apache Mina SSHD</a>\"构件、 sshd-core 和 sshd-common 升级到了2.9.2版本。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.14.3.Final\">发布说明</a>\"。</p><p>&nbsp;</p><p>Quarkus 3.0.0的<a href=\"https://quarkus.io/blog/quarkus-3-0-0-alpha2-released/\">第二个alpha版本</a>\"提供了Jakarta EE 10流的第二次迭代，该迭代正在进行中，计划于2023年1月底发布下一个alpha版本。Quarkus 3.0.0.Alpha2基于Quarkus 2.14.3.Final。有关该版本的更多详细信息，请参<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.0.0.Alpha2\">阅变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>Open Liberty</h4><p></p><p>IBM<a href=\"https://openliberty.io/blog/2022/12/06/22.0.0.13-beta.html\">发布</a>\"了Open Liberty 22.0.0.13-beta，支持：Jakarta EE 10规范<a href=\"https://jakarta.ee/specifications/authentication/3.0/\">Jakarta Authentication 3.0</a>\"、<a href=\"https://jakarta.ee/specifications/authorization/2.1/\">Jakarta Authorization 2.1</a>\"、<a href=\"https://jakarta.ee/specifications/security/3.0/\">Jakarta Security 3.0</a>\"和<a href=\"https://jakarta.ee/specifications/faces/4.0/\">Jakarta Faces 4.0</a>\"；即将发布的<a href=\"https://microprofile.io/\">MicroProfile</a>\"&nbsp; 6.0；以及配置首次故障数据捕获（FFDC）日志以在FFDC日志文件达到指定期限后自动清除FFDC日志的能力。</p><p>&nbsp;</p><p>IBM还<a href=\"https://openliberty.io/blog/2022/12/07/relicense-eplv2-proposal.html\">提议</a>\"根据<a href=\"https://www.eclipse.org/legal/epl-2.0/\">Eclipse公共许可证2.0版</a>\"重新授权Open Liberty，以便Open Liberty可以继续作为MicroProfile和Jakarta EE规范的兼容实现以做出贡献。为Java社区创建了一个GitHub<a href=\"https://github.com/OpenLiberty/open-liberty/issues/23585\">议题</a>\"，以提供反馈并监控进度。</p><p>&nbsp;</p><p></p><h4>GraalVM Native Build Tools</h4><p></p><p>在通往1.0版本的道路上，<a href=\"https://labs.oracle.com/\">Oracle实验室</a>\"发布了<a href=\"https://github.com/graalvm/native-build-tools/blob/master/README.md\">Native Build Tools</a>\" <a href=\"https://github.com/graalvm/native-build-tools/releases/tag/0.9.19\">0.9.19</a>\"版本，这是一个GraalVM项目，由与GraalVM Native Image互操作的插件组成。这个最新版本提供了：修复了编译任务， nativeCompile ，每当本机运行参数发生变化时，它就会过时；修复了默认情况下无法从Maven Central下载的GraalVM元数据存储库的问题；并从工作流中删除了 dev 版本。有关该版本的更多详细信息，请参阅<a href=\"https://graalvm.github.io/native-build-tools/latest/index.html#changelog\">变更日志</a>\"。</p><p>&nbsp;</p><p></p><h4>Apache软件基金会</h4><p></p><p><a href=\"https://tomcat.apache.org/\">Apache Tomcat</a>\"的<a href=\"https://www.mail-archive.com/announce@apache.org/msg07803.html\">10.1.4</a>\"和<a href=\"https://www.mail-archive.com/announce@apache.org/msg07788.html\">9.0.70</a>\"&nbsp;版本提供了显著的变化，其中包括： WebappLoader 类的重构，因此如果配置为在加载类时使用转换器，则它仅对Jakarta EE的迁移工具具有运行时依赖性（仅10.1.4版本）；修复了当HTTP/2流被重置时当前活动流计数没有减少的问题；以及<a href=\"https://commons.apache.org/proper/commons-daemon/\">Apache Commons Daemon</a>\" 1.3.3的更新。有关这些版本的更多详细信息，请参阅<a href=\"https://tomcat.apache.org/tomcat-10.1-doc/changelog.html\">10.1.4</a>\"版和<a href=\"https://tomcat.apache.org/tomcat-9.0-doc/changelog.html\">9.0.70</a>\"版的发布说明。</p><p>&nbsp;</p><p>Apache Tomcat 11.0.0（alpha）的<a href=\"https://www.mail-archive.com/announce@apache.org/msg07789.html\">第一个里程碑版本</a>\"提供了：与<a href=\"https://jakarta.ee/specifications/servlet/\">Jakarta Servlet</a>\",&nbsp;<a href=\"https://jakarta.ee/specifications/pages/\">Jakarta Server Pages</a>\"和<a href=\"https://jakarta.ee/specifications/expression-language/\">Jakarta Expression Language</a>\"规范的当前开发版本保持一致；BASIC认证现在默认使用UTF-8；从字节到字符的转换现在将触发异常，而不再是替换给定编码的无效字节序列。有关该版本的更多详细信息，请参阅<a href=\"https://tomcat.apache.org/tomcat-11.0-doc/changelog.html\">变更日志</a>\"。</p><p>&nbsp;</p><p>用于Jakarta EE的<a href=\"https://tomcat.apache.org/download-migration.cgi\">Apache Tomcat Migration</a>\"工具1.0.6版本已经发布，其特性包括：正确处理1.0.5版本中引入的 javax.annotation 包的回归；并允许并行使用 ClassConverter 类。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/apache/tomcat-jakartaee-migration/blob/main/CHANGES.md\">变更日志</a>\"。</p><p></p><h4>Hibernate</h4><p></p><p>Hibernate ORM 6.1.6.Final也已发布，提供了缺陷修复和性能改进，例如：在<a href=\"https://hazelcast.com/glossary/hibernate-second-level-cache/\">二级缓存</a>\"中发现引用时，初始化实体，避免不必要地调用属性setter方法；一个改进的方法，用于检查HQL查询结果的重复项，从而减少了内存中ORM处理的数量；以及JDK-8180450（<a href=\"https://bugs.openjdk.org/browse/JDK-8180450\">二级超级缓存问题不能很好地扩展</a>\"）中所描述的<a href=\"https://redhatperf.github.io/post/type-check-scalability-issue/\">性能限制缓解措施</a>\"。</p><p>&nbsp;</p><p></p><h4>Eclipse Vert.x</h4><p></p><p>针对在4.3.5版本中发现的大量缺陷报告，Eclipse Vert.x 4.3.6<a href=\"https://vertx.io/blog/eclipse-vert-x-4-3-6/\">发布</a>\"了新特性，例如：允许多个正则表达式在CORS中允许下游项目保留他们的配置（ vertx-web 模块）；对Hazelcast 4.2.6进行依赖项升级（ vertx-hazelcast 模块）；并为 Tuple 接口（ vertx-sql-client 模块）中的 of() 方法添加了类型检查。有关该版本的更多详细信息，请参阅<a href=\"https://github.com/vert-x3/wiki/wiki/4.3.6-Release-Notes\">发布说明</a>\"。</p><p>&nbsp;</p><p></p><h4>Resilience4j</h4><p></p><p>Java容错库<a href=\"https://resilience4j.readme.io/\">Resilience4j</a>\"的<a href=\"https://github.com/resilience4j/resilience4j/releases/tag/v2.0.2\">2.0.2</a>\"和<a href=\"https://github.com/resilience4j/resilience4j/releases/tag/v2.0.1\">2.0.1</a>\"版本已经发布，其特性包括：修复了未在 recordResultPredicate 属性上打开的 CircuitBreaker 、CheckedSupplier 和 CheckedFunction 接口的相应装饰器实现；通过 resilience4j-spring-boot3 和 resilience4j-spring6 构件支持Spring Boot 3.0；即使配置文件中没有实例条目，也可以应用Spring Boot定制程序。有关Resiliece4j的更多详细信息，请参阅<a href=\"https://www.infoq.com/news/2022/12/resilience4j-2-0-0/\">InfoQ的新闻报道</a>\"。</p><p>&nbsp;</p><p></p><h4>JDKMon</h4><p></p><p><a href=\"https://github.com/HanSolo/JDKMon\">JDKMon</a>\" <a href=\"https://github.com/HanSolo/JDKMon/releases/tag/17.0.41\">17.0.41</a>\"版本是一个用于监控和更新已安装JDK的工具，已于上周发布。这个新版本由Azul首席工程师<a href=\"https://de.linkedin.com/in/gerritgrunwald\">Gerrit Grunwald</a>\"创建，支持：对Gradle 7.6及其他版本的依赖升级；以及一个单独的GraalVM构建下载对话框，包括<a href=\"https://gluonhq.com/\">Gluon</a>\"、<a href=\"https://github.com/graalvm/mandrel/blob/default/README.md\">Mandrel</a>\"和<a href=\"https://bell-sw.com/liberica-native-image-kit/\">Liberica Native Image Kit</a>\"&nbsp;（NIK）。</p><p>&nbsp;</p><p></p><h4>Ktor</h4><p></p><p>JetBrains<a href=\"https://released/\">发布</a>\"了Ktor的2.2.1和2.2.0版本，这是一个用于创建微服务和Web应用程序的异步框架，其中包括：OpenAPI文档生成；用于创建自定义客户端插件的新API，以通过一组处理程序访问处理请求和响应的不同阶段；一个新的 RateLimit 插件，用于设置传入请求的速率限制；以及用于序列化/反序列化数据对象的新ProtoBuf<a href=\"https://ktor.io/docs/serialization.html?_ga=2.153931448.1066270626.1670799259-702398823.1656974717&amp;_gl=1*u7b6c5*_ga*NzAyMzk4ODIzLjE2NTY5NzQ3MTc.*_ga_9J976DJZ68*MTY3MDc5OTI1OC42My4xLjE2NzA3OTk0MTguMC4wLjA.#register_protobuf\">序列化器</a>\"。</p><p>&nbsp;</p><p></p><h4>JakartaOne Livestream 2022</h4><p></p><p>第四届<a href=\"https://jakartaone.org/2022/\">JakartaOne Livestream 2022</a>\"年年度会议于上周举行，来自Java社区的演讲嘉宾就以下主题进行了<a href=\"https://jakartaone.org/2022/#speakers\">演讲</a>\"：Jakarta EE Core Profile；MicroProfile 6.0；Piranha Cloud，Testcontainers；Jakarta NoSQL和Cosmos DB；和云原生Java。虚拟会议由Jakarta EE项目经理<a href=\"https://ca.linkedin.com/in/tanja-obradovic-095604\">Tanja Obradovic</a>\"、Jakarta EE高级营销经理<a href=\"https://www.linkedin.com/in/shabnam-mayel/\">Shabnam Mayel</a>\" 和Jakarta EE开发人员倡导者&nbsp;<a href=\"https://se.linkedin.com/in/ivargrimstad\">Ivar Grimstad</a>\"主持，会议还包括Eclipse基金会执行董事<a href=\"https://www.linkedin.com/in/mikemilinkovich/\">Mike Milinkovich</a>\"的主题演讲，以及代表Payara、Tomitribe、Oracle、Microsoft和IBM的Java知名人士进行的行业主题演讲。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/12/java-news-roundup-dec05-2022/\">https://www.infoq.com/news/2022/12/java-news-roundup-dec05-2022/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/vl9UfPTm6oOPAUgYpN5c\">InfoQ 2022 年趋势报告：Java 篇</a>\"</p><p><a href=\"https://www.infoq.cn/article/ZYvBqLEPNaY4FvJjyopx\">Java 近期新闻：JDK 20 的 JEP 提升为 Targeted 状态，亚马逊云科技推出 Lambda SnapStart 特性</a>\"</p>",
    "publish_time": "2022-12-28 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "复杂查询响应速度提升10+倍，度言软件基于 Apache Doris 实时数仓建设实践",
    "url": "https://www.infoq.cn/article/i4KDKeZwASbRcSALDi1D",
    "summary": "<p></p><blockquote>作者 | 杭州度言软件大数据团队编辑整理 | SelectDB</blockquote><p></p><p></p><p>杭州度言软件有限公司（度言软件）成立于2014年，是信贷不良资产处置技术服务供应商，以“智能科技赋能不良资产处置，推动贷后行业合规高效发展”为使命，运用云通讯、大数据、人工智能等智能科技为信贷不良资产处置业务赋能，提供贷后管理通信能力支撑，实现了催收作业的智能化管理，客户群体为银行、消费金融公司、AMC 等金融机构和为这些机构提供人力资源外包服务的相关公司，目前已拥有 2000 多家企业客户。</p><p></p><p>度言软件以围绕信贷不良资产案件高效流转管理为目的核心，从机构管理、团队管理、坐席管理、外呼作业、调解法诉等环节入手，帮助客户构建数智化的业务管理体系，以数字化系统提升管理效能、以智能化工具赋能处置作业，打通金融机构、外包服务公司、司法系统等多方的业务系统，并按照监管要求对外呼行为、录音文件、沟通记录等案件相关数据进行记录、汇集、稽核、统计和分析，具有海量账号同时登陆、数据请求高并发、多来源数据汇总接入的特点要求。</p><p></p><h1>业务需求</h1><p></p><p></p><p>2021 年之前，度言软件旗下产品的数据需求主要由传统数据库 MySQL、MongoDB、ElasticSearch 为主的技术架构来实现，近两年随着业务不断发展带而来数据量的高速增长，传统的数仓技术架构已初显瓶颈，难以满足客户日益丰富多样化的数据及分析需求。为了给客户提供更优质的服务体验，度言软件亟需对现有的技术架构做出优化和重构。</p><p></p><h1>早期架构及痛点</h1><p></p><p></p><h2>数仓架构 1.0 版本</h2><p></p><p></p><p>初创期间，由于公司业务量相对较少，主要还是以 OLTP 业务和少量的业务报表服务为主，并且对于数据分析方面的需求也很少，仅通过传统的数据库基本就能满足早期的业务数据需求。数仓架构 1.0 如下图所示：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/99/99bd91d4a88ebe985403b86270843e7a.png\" /></p><p></p><h2>数仓架构 2.0 版本</h2><p></p><p></p><p>随着公司业务的不断扩展，数据体量也出现极速增长的态势，业务侧对于数据分析方面的需求也逐渐多了起来，为此我们成立了专门的大数据团队，为搭建新的数仓及业务数据分析需求进行服务。如下图所示为数仓架构 2.0 ：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7e/7ef27b959bcb0486c0e88f68e7d9ee0f.png\" /></p><p></p><p>数仓架构 2.0 版本是基于 MaxCompute + Hologres/MySQL 来搭建的。数据来源主要有 MySQL 和 <a href=\"https://xie.infoq.cn/article/7565f826ac0dea0b1989c3572\">MongoDB</a>\" 的业务数据以及埋点日志数据；数据首先采集到数据总线 DataHub 中，后经过 DataHub 直接导入到 MaxCompute，MaxCompute 作为一个离线数仓，我们将其进行了传统的数仓分层；数据的加工处理和分析计算主要在离线数仓中进行，并将计算好的结果导出到 MySQL中，来对接 QuickBI 展示报表。此外，我们还尝试了将 Hologres 用作实时数仓，作为 MongoDB 的替换方案，用于业务上的查询系统。</p><p></p><h2>早期架构存在的问题：</h2><p></p><p></p><p>响应速度较慢。MySQL 对于大表的聚合计算并不友好，响应速度较慢。产品侧要求数据查询响应时间在 5 秒以内，虽然我们也基于 MySQL 进行了许多优化，但优化效果十分有限，仍无法达到 5s 的响应要求；我们甚至尝试了直接用 MaxCompute 对接 QuickBI，希望基于 MaxCompute 的查询加速和 QuickBI 的缓存来帮助我们解决问题，然而结果并不理想。维系维度表成本高、难度大。 离线数仓在数据同步的时效性上并不占优势(每 5 分钟进行一次批量同步)，因此不太适合数据频繁更新和删除的场景，同时也给维度表的维护带来了额外的工作量。在数据更新和删除场景中，我们需要定期通过过滤和去重来保持数据的一致性，而事实上，大多时候需要报表数据实时关联维度表，这让我们直接放弃了在离线数仓中维系维度表的方案。不支持高并发点查询场景。 原实时数仓虽然可以满足我们对数据分析的部分性能要求，但其对高并发的点查场景并不太友好，不管是采用列式存储还是行级存储建表，优化之后的响应时长在 500 毫秒左右，综合来看性价比不算太高。</p><p></p><h1>解决思路</h1><p></p><p></p><p>为了解决上述问题，我们希望理想数仓能具有如下特性：</p><p></p><p>实现一站式实时数仓，能同时满足多种不同业务数据需求，大大简化大数据架构体系；可同时支持 OLAP，Ad-hoc 和高 QPS 点查场景；数据接入友好，写入即可见，对数据增删改和聚合等都有较好的支持；架构简单，运维部署和维护简单，有较好的监控体系。</p><p></p><h1>技术选型</h1><p></p><p></p><p>在 2022 年 3 月份，我们对市场上主流的的几款即席查询数据库进行了调研，调研中我们发现每个产品只能满足某 1 个或几个特定的使用场景，没有一个产品可以完全满足所有的选型要求，而同时采用多个产品，将大大增加开发运维成本，同时也会使架构变得更加庞大复杂，这并不符合我们对理想数仓的要求。</p><p></p><p>正在这时，我们从开源社区、技术媒体等渠道了解到了<a href=\"https://github.com/apache/doris\"> Apache Doris</a>\" ，经初步调研，我们发现 <a href=\"https://www.infoq.cn/article/lbsiDBw2R3HWYDiezOMH\">Doris</a>\" 基本可以满足我们对理想数仓的所有要求。接着我们对 Doris 展开了深入调研，并使我们最终决定使用 Doris：Doris 架构非常简单，只有 FE 和 BE 两类进程，这两类进程都可以进行横向扩展，单集群可以支持到数百台机器、数十 PB 的存储容量，并且这两类进程通过一致性协议来保证服务的高可用和数据的高可靠。这种高度集成的架构设计极大的降低了分布式系统的运维成本，同时也不需要依赖于 Hadoop，避免了我们需要投入成本来额外部署 Hadoop 集群。</p><p></p><h1>基于 Doris 的新数仓架构设计</h1><p></p><p></p><p>最初使用 Doris 的初衷是替换部分 MySQL 数据量较大的报表，基于 MySQL 的查询约需要几十秒的响应时间，在替换为 Doris 后，查询性能有了显著提升，几秒内即可返回结果，最长的 SQL 执行时间大概在 8 秒左右，速度相较于之前提升了8 倍。Doris 的初步应用就给了我们一个意外的惊喜，因此我们决定使用 Doris 完全替换掉早期数仓中的 MySQL，在这使用过程中，我们又发现 Doris 远比我们想象的要强大，目前已将客户报表及公司内部运营决策数据全部迁移至 Apache Doris，并计划用 Apache Doris 来替换 MongoDB 和 ElasticSearch，用于业务上高 QPS 的点查场景。以下是基于 Doris 的新数仓架构设计及使用情况：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/09/09bf7223d4167488e9279b49496a2798.png\" /></p><p></p><h2>数据建模：</h2><p></p><p></p><p>我们在业务上使用最多的是 Unique 模型和 Aggregate 模型，这两种模型基本能够满足业务需求。</p><p></p><p>Unique 模型主要用于维度表和业务表(原始表)的接入，确保数据导入过程中的一致性。Aggregate主要用于报表数据的导入，Aggregate 分为 Key (维度列) 和 Value（指标列），Value 列支持四种聚合方式：sum ,replace,max,min。当前主要以replace 聚合方式为主，方便统计数据重复导入和修正结果，后续也会尝试更多的方式来充分发挥 Doris 的性能。</p><p></p><h3>数据接入：</h3><p></p><p></p><p>使用 Flink-Doris-Connector 进行实时导入：主要用于业务数据的导入，基于MySQL 的 Binlog 日志写入到 Kafka 后，通过 Flink 解析加工后准实时写入 Doris。使用 DataX 进行离线导入：主要用于对接离线数仓已计算后的报表数据。</p><p></p><h3>数据开发：</h3><p></p><p></p><p>目前 Doris 主要以提供终端查询为主，复杂的 SQL 开发任务运行比较少，为尽可能减少 Doris 在数据加工方面的资源消耗，当前仅有报表集群在凌晨执行少量的 SQL 任务，主要以 Doris SQL 通过 insert into 的方式来导入。</p><p></p><h3>数据管理：</h3><p></p><p></p><p>Doris 支持将当前数据以文件的形式通过 Broker 备份到远端存储系统中，后可以通过恢复命令从远端存储系统中将数据恢复到任意 Doris 集群。通过该功能，Doris 可支持定期对数据进行快照备份，也可以通过该功能在不同集群间进行数据迁移。我们也会定期将集群数据备份到阿里云 OSS 上，作为备用数据恢复方案。另外，在这期间我们对 Doris 集群进行了一次拆分，将报表集群和业务上的高并发查询集群分开，采用了 Doris 的数据备份和迁移功能。</p><p></p><h3>监控和报警：</h3><p></p><p></p><p>我们使用官网推荐的 Prometheus 和 Grafana 进行监控项的采集和展示，Doris 本身提供了丰富的监控指标和标准监控模版，可以非常便捷地对 Doris 集群使用情况进行监控和报警。</p><p></p><p>另外，为了进一步对慢 SQL 进行优化，我们还部署了审计日志插件，对于特定用户和特定的慢 SQL 进行优化和资源限制。如下是我们日常使用中的一些指标：</p><p></p><p>慢 SQL 查询：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/64/64760aa7fa882aef9da731e07c94ec39.png\" /></p><p></p><p>对于一些长文本 SQL，无法完全展示，可以进一步查看fe.audit.log。</p><p></p><p>主要查询统计指标：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/aa/aa9e44bce5558508d0f24d273509b6cd.png\" /></p><p></p><h1>优化实践：</h1><p></p><p></p><h2>提高并发</h2><p></p><p></p><p>我们考虑在资源给定的情况下，如何最大程度地提高并发。刚开始引入 Doris 集群的时候，我们尝试对复杂 SQL 进行压测（SQL 层面优化已完成），但始终无法达到预期的压测效果。后来我们尝试调低 parallel_fragment_exec_instance_num 的值，顺利完成了压测目标。</p><p></p><p></p><blockquote>需要说明的是：parallel_fragment_exec_instance_num 指的是 Scan Node 在每个 BE 节点上执行实例的个数，相当于在整个查询计划执行过程中的并发度，调高该参数可以提升查询效率，但同时也会增加更多机器资源的消耗。因此在资源有限且查询耗时满足业务需求的情况下，通过调低参数来节省单个 SQL 的资源消耗，有助于提高并发表现。另外，我们通过 Doris 社区了解到，在即将发布的新版本中将实现参数自动设置，无需进行手动调整。</blockquote><p></p><p></p><p>如下图，我们可以看到，在参数设置为 16 的时候，异常率高达 82.84%，并且期间还出现了 BE 宕机重启，将参数调低至 8 后，异常率也同步降低到了 27.66%。最后我们将参数设置为最小值 1 后，异常率为 0，查询响应也能达到预期目标。</p><p></p><p>说明：测试环境已重新取数，配置较低，数据仅用来说明 parallel_fragment_exec_instance_num 变动所带来的效果。</p><p></p><p>当参数调整为 1：parallel_fragment_exec_instance_num = 1</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/59/59d5f3a73af0fb26595d155974c05b9c.png\" /></p><p></p><p>当参数调整为 8：parallel_fragment_exec_instance_num = 8</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/cd/cdb776a827f55e405cad098f6bf6033e.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/38/381617b229938f501da88a77d7eb465f.png\" /></p><p></p><p>当参数调整为 16：parallel_fragment_exec_instance_num = 16</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/03/0391526a20553cbba246161a9906699c.png\" /></p><p></p><h2>BE 内存问题</h2><p></p><p></p><p>最初我们使用的是 Doris 0.15 的<a href=\"https://xie.infoq.cn/article/2a11160bfc7e86b8412752cef\">版本</a>\"。由于刚开始处于测试阶段，Doris 集群配置比较低或参数配置的不合理，当某些 SQL 扫描数据量较大时，就可能因为内存问题导致 BE 宕机。</p><p></p><p>在向社区咨询后，了解到 Supervisor 是用 Python 开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台 Daemon，并监控进程状态，异常退出时能自动重启，因此我们参照官网给出的例子直接用 Supervisor 对 Doris 的 FE 和 BE 进程进行管理。</p><p></p><p>但是在运行了一段时间后，新的问题又出现了(已升级到 1.1.0 版本)。Doris 的 BE 节点内存一直在缓慢上升状态，并且达到了设置的最大内存参数 80% 后仍在继续上涨。后经分析发现 BE 存在内存泄漏问题，因此设置的参数并未生效。为此，我们将 Supervisor 切换为 Systemd 来守护 FE、BE 进程，限制整个节点的内存使用上限。不过在 Doris 1.1.3 推出之后，此问题已得到彻底的修复。</p><p></p><h2>资源占用</h2><p></p><p></p><p>在迁移完新集群后，我们发现通过 Flink-Doris-Connector 数据导入占用非常高的集群资源，虽然设置了按批次写入(每 3s 写入一次 )，以限制数据的导入频率，但集群资源的占用仍未得到较大改善。因此我们在集群资源和数据实时可见性方面做了权衡，介于我们对数据实时性的要求相对不是太高，所以我们将每 3s 写入一次改为每 10s 或 20s 写入一次，调整写入时间后，集群的 CPU 资源占用下降明显，得到改善。</p><p></p><h1>应用现状</h1><p></p><p></p><p>目前度言软件有 2 个 Doris 集群，1 个集群用作线上业务的查询系统，主要是应对高 QPS 的点查场景，我们将原先基于业务库 MySQL 和 MongoDB 的查询迁移至 Doris，一方面减少了业务库的读写压力，同时也提高了用户查询服务的使用体验。在 Doris 中，最复杂的查询在 1 秒以内即可响应，响应速度提升了十几倍；另外 1 个集群主要用作即席查询(AD-Hoc Query)和报表分析，具体包括公司内部使用的所有报表和一些临时查询、客户报表、数据实时大屏。</p><p></p><p>总而言之，使用 Doris 替换了部分业务使用场景后，用户在产品上的使用体验有了进一步得到提升，页面打开更加流畅，原本因为查询慢而不能实现的功能，当前已经实现并上线使用。同时在资源成本上也减轻了 MySQL 和 MongoDB 数据库的压力，不需要频繁进行升配和磁盘升级。</p><p></p><h1>总结规划</h1><p></p><p></p><h2>效果总结</h2><p></p><p></p><p>Doris 完美覆盖了原本需要多个技术栈才能实现的业务场景，极大地简化了大数据的架构体系。Doris 对 Join 支持较好，因此我们选择了将维度表放到 Doris 中进行维护，相较于之前在离线数仓中进行维护，明显地提高了开发的效率，并降低了数据出错的可能性，满足了业务上对维度表近实时更新的需求。Doris 支持 MySQL 协议和标准 SQL，开发人员学习成本低，上手简单，可以快速将原先的业务迁移至 Doris 上来。Doris 社区活跃，版本迭代速度快。在遇到任何问题时，都可以向社区求助，<a href=\"https://cn.selectdb.com/\">SelectDB</a>\" 为 Apache Doris 组建了一支全职专业的技术支持入队，24H 内即可得到社区的响应回复。</p><p></p><h2>未来规划</h2><p></p><p></p><p>到目前为止，基于 Doris 的实时数仓搭建已基本完成，但我们对 Doris 的进一步尝试才刚刚开始，比如 BE 的多磁盘部署，物化视图的使用，Doris-On-ES，Doris 多租户和资源划分等。</p><p></p><p>此外，我们也希望 Doris 未来能对以下功能进行进一步优化：</p><p></p><p>Flink-Doris-Connector 能支持单 Sink 同时写入多张表，不需要再通过分流后多个 Sink 写入。物化视图能够支持多表 Join，不再局限于单表。进一步优化数据的底层 Compaction，在保证数据可见性的同时能够尽可能降低资源消耗。Doris-Manager 提供对慢 SQL 的优化建议以及表信息收集，对于不合理的建表进行一定的提示。</p><p></p><p>从 3 月份使用 Doris 以来，我们一直都和 Doris 社区保持着密切的联系，后续我们也将继续围绕 Doris 作为实时数仓应用到更多的业务使用场景中，对于使用中遇到的问题和优化的方案，我们也会持续和社区保持热切联系，为社区进步贡献我们的一份力量。</p>",
    "publish_time": "2022-12-28 10:24:54",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "入选 Gartner 全球数据库魔力象限，腾讯云数据库是怎么做到的？",
    "url": "https://www.infoq.cn/article/xCE63ur1yCVjO1Sfv95r",
    "summary": "<p>随着数字化进程的加快，数据逐渐成为数字时代的基础性战略资源和革命性关键要素。作为数据存储与计算的基础软件，数据库对于筑牢数字经济底座至关重要。数据库支撑着经济社会活动的关键核心业务，几乎所有的应用软件都需要基于数据库进行存储、管理和分析。在国产自研数据库不断创新的情况下，其在安全、稳定、高效性方面的优势持续凸显，市场占有率也在日益扩大。</p><p></p><p>近日，腾讯云数据库进入 Gartner 数据库魔力象限，在 OLTP（TDSQL/TDSQL-C）及轻量级 TP 能力（KeeWiDB）得分均为国内第一。作为 IT 圈公认专业、客观的“裁判员”，Gartner 榜单反映了行业趋势与发展动向，也被众多的技术决策者所认可。</p><p></p><p>腾讯云数据库为何能够入选 Gartner 全球数据库魔力象限？多项数据库核心能力（critical capability）得分国内第一的秘密是什么？12 月 29 日 19:00-21:20 DBTalk 技术公开课，将带来腾讯云数据库自研之路的挑战和突破，带你了解自研数据库在存储、数据访问等方面的技术创新与实践。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8c/8cadc53f89081dc2923d084aeb3ea8a1.png\" /></p><p></p><h2>议题介绍</h2><p></p><p></p><p>专题出品人：潘安群，腾讯云数据库技术负责人</p><p></p><h5>开场致辞：19:00-19:20 《Gartner 数据库魔力象限解读》</h5><p></p><p>分享嘉宾：潘安群，腾讯云数据库技术负责人</p><p></p><h5>议题一：19:20-20:00《TDSQL 在 TP 领域的技术探索和实践》</h5><p></p><p>分享嘉宾：雷海林，腾讯云数据库专家工程师、TDSQL 首席架构师、Tech Lead</p><p>议题简介：</p><p>经过近 20 年的研发和应用实践，腾讯分布式数据库 TDSQL 已被越来越多客户所采用，在分布式、高可用、稳定、性能等方面持续突破，支撑金融、政务、电信、游戏、互联网等各个领域进行数字化改造，尤其是在核心交易场景方面得到了非常广泛的应用。</p><p>本次分享重点介绍这 2 年 TDSQL 在 TP 领域的一些技术突破，以及如何通过这些技术帮助我们的客户顺利完成从传统集中式架构到分布式数据库的转型。</p><p></p><h5>议题二：20:00-20:40《新一代云原生 TDSQL-C 关键技术突破》</h5><p></p><p>分享嘉宾：刘迪，腾讯云数据库产品总监</p><p>议题简介：</p><p>云应用程序的这些需求为云原生数据库提供了新的机会，而传统的企业内部数据库系统无法完全满足这些需求。腾讯云原生数据库经过多年的研发和打磨，所实现的计算、内存与存储资源的解耦的“日志即数据库”架构、HTAP、Serverless 等特性已是全球首创或业内领先的技术，同时其性能对比传统云数据库达到数倍的大幅度提升。</p><p>本次分享将围绕着腾讯云原生数据库在架构演进、软硬结合探索、自研内核优化等方面的核心技术解析。结合海量数据存储、高频交易场景、流量洪峰 / 不可预估场景、开发测试等周期性峰值业务场景的行业案例，深入解析新一代云原生数据库 TDSQL-C 的产品特性、技术亮点以及未来的发展趋势。</p><p></p><h5>议题三：20:40-21:20《KeeWiDB 轻 TP 技术实践》</h5><p></p><p>分享嘉宾：伍旭飞，腾讯云专家工程师</p><p>议题简介：</p><p>KeeWiDB&nbsp;作为一个兼容 Redis 协议的 NoSQL&nbsp;数据库，除了兼容社区 Redis 行为外，作为存储数据库，有必要实现 Redis 不具备的 TP 能力，从而更好的符合用户对存储数据库的诉求, 同时作为 NoSQL 数据库还需要提供高性能的 TP。本次分享介绍 KeeWiDB 在 TP 实现的一些思考和实践。</p><p></p><h2>预约报名</h2><p></p><p>扫码即可预约本次直播，还可以通过评论区向演讲嘉宾提问、交流！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e3/e3aa5fb56b526e061dbe3994c36dee59.jpeg\" /></p><p></p>",
    "publish_time": "2022-12-28 11:27:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "高性能网关基石——OpenResty",
    "url": "https://www.infoq.cn/article/dbafc4972efc9ce8053de57d2",
    "summary": "<p></p><h2>什么是 OpenResty</h2><p></p><p>OpenResty 一个基于 Nginx 的高性能 Web 平台，能够方便地搭建处理超高并发的动态 Web 应用、Web 服务和动态网关。例如有名的 Kong 网关和国产新秀 ApiSIX 网关都是基于 OpenResty 来进行打造的。</p><p></p><p>OpenResty 通过实现 ngx_lua 和 stream_lua 等 Nginx 模块，把 Lua/LuaJIT 完美地整合进了 Nginx，从而让我们能够在 Nginx 内部里嵌入 Lua 脚本，用 Lua 语言来实现复杂的 HTTP/TCP/UDP 业务逻辑，同时依然保持着高度的并发服务能力。</p><p></p><h2>处理阶段</h2><p></p><p>一个正常的 Web 服务的生命周期可以分成三个阶段：</p><p></p><p>initing：服务启动，读取配置文件，初始化内部数据结构running：服务运行，接受客户端的请求，返回响应结果exiting：服务停止，做一些必要的清理工作，如关闭监听端口</p><p></p><p>OpenResty 主要关注的是 initing 和 running 这两个阶段，并做了更细致的划分</p><p></p><h3>OpenResty 的 initing 阶段</h3><p></p><p>configuration：读取配置文件，解析配置指令，设置运行参数master-initing：配置文件解析完毕，master 进程初始化公用的数据worker-initing：worker 进程初始化自己专用的数据</p><p></p><h3>OpenResty 的 running 阶段</h3><p></p><p>在 running 阶段，收到客户端的请求后，OpenResty 对每个请求都会使用下面这条流水线进行处理：</p><p></p><p>ssl：SSL/TLS 安全通信和验证preread： 在正式处理之前预读数据，接收 HTTP 请求头rewrite：检查、改写 URI ，实现跳转重定向access：访问权限控制content：产生响应内容filter：对 content 阶段产生的内容进行过滤加工处理log： 请求处理完毕，记录日志，或者其他的收尾工作。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d6/d6a1f565a49191dc854d298f40ff6336.png\" /></p><p></p><p></p><h2>OpenResty 执行程序</h2><p></p><p>OpenResty 根据上面的处理阶段提供了一些指令，在开发时使用它们就可以在这些阶段里面插入 Lua 代码，执行业务逻辑：</p><p></p><p>init_by_lua_file：master-initing 阶段，初始化全局配置或模块init_worker_by_lua_file：worker-initing 阶段，初始化进程专用功能ssl_certificate_by_lua_file：ssl 阶段，在握手时设置安全证书set_by_lua_file：rewrite 阶段，改写 Nginx 变量rewrite_by_lua_file：rewrite 阶段，改写 URI ，实现跳转或重定向access_by_lua_file：access 阶段，访问控制或限速content_by_lua_file：content 阶段，产生响应内容balancer_by_lua_file：content 阶段，反向代理时选择后端服务器header_filter_by_lua_file：filter 阶段，加工处理响应头body_filter_by_lua_file：filter 阶段，加工处理响应体log_by_lua_file：log 阶段，记录日志或其他的收尾工作</p><p></p><p></p><blockquote>这些指令通常有三种形式：xxx_by_lua：执行字符串形式的 Lua 代码：xxx_by_lua_block：功能相同，但指令后是｛ ．．．｝的 Lua 代码块xxx_by_lua_file：功能相同，但执行磁盘上的 Lua 源码文件。这边推荐使用 xxx_by_lua_file，它彻底分离了配置文件与业务代码，让两者可以独立部署，而且文件形式也让我们更容易以模块的方式管理组织 Lua 程序。</blockquote><p></p><p></p><p>下面是  OpenResty 指令所在的阶段和执行的先后顺序图</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/40/403e6a74d4e6d8a07c8449957a7cbf62.png\" /></p><p></p><p></p><h2>Demo 编写</h2><p></p><p>为了能够直观的看到上面的处理阶段,接下来编写一个 OpenResty 的 小 demo. 先在本地电脑上安装 OpenResty 然后执行下面命令看看有没有安装成功,如果安装成功了,就会出现版本号</p><p></p><p><code lang=\"shell\">$ sudo openresty -v\nnginx version: openresty/1.21.4.1\n</code></p><p></p><p>然后执行下面命令创建一些文件夹:</p><p></p><p><code lang=\"shell\">mkdir testresty &amp;&amp; \ncd testresty &amp;&amp; \nmkdir logs conf service &amp;&amp; \ncd logs &amp;&amp; touch error.log &amp;&amp; touch access.log\n</code></p><p></p><p>创建完成后,文件目录结构就像下面这样:</p><p></p><p><code lang=\"shell\">├── conf\n├── logs\n│   ├── access.log\n│   └── error.log\n└── service\n</code></p><p></p><p>其中, conf 文件夹是存放 nginx.conf 等配置的地方,然后自己编写的 lua 代码文件可以放在 service 文件夹下.接下来,创建和编写每个阶段所需的 lua 脚本文件, 只在里面编写一条打印日志的代码, 然后放进 service 文件夹下</p><p></p><p>rewrite.lua</p><p></p><p><code lang=\"lua\">ngx.log(ngx.ALERT,\"this is rewrite\")\n</code></p><p></p><p>access.lua</p><p></p><p><code lang=\"lua\">ngx.log(ngx.ALERT,\"this is access\")\n</code></p><p></p><p>content.lua</p><p></p><p><code lang=\"lua\">ngx.log(ngx.ALERT,\"this is content\")\n-- 响应内容\nngx.say('hello world')\n</code></p><p></p><p>header_filter.lua</p><p></p><p><code lang=\"lua\">ngx.log(ngx.ALERT,\"this is header_filter\")\n</code></p><p></p><p>body_filter.lua</p><p></p><p><code lang=\"lua\">ngx.log(ngx.ALERT,\"this is body_filter\")\n</code></p><p></p><p>log.lua</p><p></p><p><code lang=\"lua\">ngx.log(ngx.ALERT,\"this is log\")\n</code></p><p></p><p>编写 nginx.conf 配置文件, 放进 conf 文件夹下</p><p></p><p><code lang=\"conf\">user root;\n\nworker_processes    1;\nevents {\n    worker_connections  512;\n}\n\nhttp {\n    server {\n        listen  80;\n    \n        location / {\n            rewrite_by_lua_file service/rewrite.lua;\n            access_by_lua_file service/access.lua;\n            content_by_lua_file service/content.lua;\n            header_filter_by_lua_file service/header_filter.lua;\n            body_filter_by_lua_file service/body_filter.lua;\n            log_by_lua_file service/log.lua;\n        }\n\n    }\n}\n</code></p><p></p><p>然后启动 OpenResty, 使用 -p 选项, 传入你上面创建的文件夹地址</p><p></p><p><code lang=\"shell\">$ sudo openresty -p $HOME/testresty\n</code></p><p></p><p>启动完成后, 然后用浏览器访问 http://localhost, 可以看到上面通过 ngx.say('hello world') 的响应内容设置返回的 hello world.打开 logs/error.log 文件,可以看到 Lua 代码里打印的日志:</p><p></p><p><code lang=\"shell\">2022/12/26 15:59:26 [alert] 31700#0: *119 [lua] rewrite.lua:1: this is rewrite, client: 127.0.0.1, server: , request: \"GET / HTTP/1.1\", host: \"localhost\"\n2022/12/26 15:59:26 [alert] 31700#0: *119 [lua] access.lua:1: this is access, client: 127.0.0.1, server: , request: \"GET / HTTP/1.1\", host: \"localhost\"\n2022/12/26 15:59:26 [alert] 31700#0: *119 [lua] content.lua:1: this is content, client: 127.0.0.1, server: , request: \"GET / HTTP/1.1\", host: \"localhost\"\n2022/12/26 15:59:26 [alert] 31700#0: *119 [lua] header_filter.lua:1: this is header_filter, client: 127.0.0.1, server: , request: \"GET / HTTP/1.1\", host: \"localhost\"\n2022/12/26 15:59:26 [alert] 31700#0: *119 [lua] body_filter.lua:1: this is body_filter, client: 127.0.0.1, server: , request: \"GET / HTTP/1.1\", host: \"localhost\"\n2022/12/26 15:59:26 [alert] 31700#0: *119 [lua] body_filter.lua:1: this is body_filter, client: 127.0.0.1, server: , request: \"GET / HTTP/1.1\", host: \"localhost\"\n2022/12/26 15:59:26 [alert] 31700#0: *119 [lua] log.lua:1: this is log while logging request, client: 127.0.0.1, server: , request: \"GET / HTTP/1.1\", host: \"localhost\"\n</code></p><p></p><p>通过日志可以观察到每个阶段的执行顺序是怎样的.</p>",
    "publish_time": "2022-12-28 12:04:07",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "欧拉操作系统部署超300万套，基于欧拉的RISC-V 商业发行版正式发布",
    "url": "https://www.infoq.cn/article/Mbt2ed1GNaliC975Rw7i",
    "summary": "<p>InfoQ 获悉，12月28日，以“立根铸魂 崛起数智时代”为主题的操作系统产业峰会成功在线上举办。本次峰会由开放原子开源基金会、中国软件行业协会、CCF（中国计算机学会）开源专委会、绿色计算产业联盟、中关村科学城管委会共同主办。</p><p></p><h2>欧拉操作系统部署超300万套</h2><p></p><p></p><p>据介绍，过去一年，欧拉加速发展。数据显示，截至目前，欧拉累计装机量超过300万套，中国服务器操作系统新增市场份额超过25%。</p><p></p><p>欧拉已构筑关键技术根基和创新机制，并实现规模部署在各行各业核心系统，形成商业的正循环，还打通了从处理器、整机、OSV、ISV的完整产业链生态，充分激发产业链活力，从技术创新，到加速用户规模部署，伙伴商业成功反哺社区贡献，加大技术创新投入，从而形成一个正循环、自加速的生态发展体系。这是中国第一次在基础软件领域，依托全产业链力量，构筑关键技术根基，通过开源共建的方式，快速跨越一个技术路线的生态拐点。</p><p></p><p>华为常务董事、ICT基础设施业务管理委员会主任汪涛表示，华为将持续聚焦根技术投入，提升基础软件的创新力和竞争力，支撑数字基础设施的建设和应用软件生态的繁荣；持续软件开源开放，与全产业共建中国开源体系；并通过生态创新中心、产教融合、产研结合等多种方式赋能产业伙伴，提升产业链竞争力。</p><p></p><p>开放原子开源基金会理事长孙文龙在大会致辞中表示，欧拉已实现产业生态的快速构建和商业装机的规模部署，欧拉的快速发展证明，充分利用、参与、支持、回馈开源，是实现操作系统技术创新和产业繁荣的有效路径。</p><p></p><p>中国科学院王怀民院士表示，中国正进入开源创新新阶段，从参与融入到蓄势引领。崛起的开源产业需要强大的开源创新平台，面向未来需要构建分布式、智能化、国际化的新一代开源创新平台。</p><p></p><p><a href=\"https://www.infoq.cn/article/QjevmYIB7vFP6ol3FxWl\">openEuler社区</a>\"建立之初的愿景就是成为一个源于中国、融入全球的大型基础软件开源社区。目前，欧拉已通过统一账号、统一构建工具、统一测试平台等实现分布式、智能化的代码管理，以创新技术吸引超千名海外开发者。面向未来，持续建设欧拉生态体系、创新体系，将欧拉打造成为全球领先的数字基础设施操作系统，从共建产业根技术、共筑产业新生态、共创开源新模式、共启全球化进程四个方面，汇聚全产业链力量，共同筑牢产业根基，崛起数智化时代。</p><p></p><p>本次大会上，海外基金会Linux、CNCF、OpenInfra、OpenHPC等，纷纷表示与欧拉的合作已经取得进展和成果，期待与欧拉深入合作，共建全球开源生态，服务更多的企业用户。</p><p></p><p>此外，随着欧拉在各行各业的规模应用，涌现出一大批优秀的应用案例和创新实践，有力地推动操作系统产业的创新和行业数字化转型深入。OpenAtom openEuler社区、国家工业信息安全发展研究中心发起，由院士、专家、学者组成的多元化专家委员会，围绕应用规模、示范推广价值、技术领先性三个维度，评选出十大“2022年度openEuler领先商业实践”奖项。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/04/0477a971be66b088450c943d827c950e.png\" /></p><p></p><h2>基于 openEuler 的 RISC-V 商业发行版“傲来2.0-RV”正式发布</h2><p></p><p></p><p>会上，中国科学院软件研究所联合中国科学院计算技术研究所、平头哥半导体、芯来科技、赛昉科技、澎峰科技，共同发布了基于 openEuler 的 RISC-V 商业发行版“傲来2.0-RV”。傲来2.0-RV聚焦RISC-V指令集，可提供桌面、模拟器、硬件板卡等多种运行环境。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/32/32bb9469b443451b1599426eceb41801.png\" /></p><p></p><p>近几年，<a href=\"https://www.infoq.cn/article/fAulr19Ues2ECIAEidgC\">RISC-V </a>\"以其开放的指令集架构受到越来越多操作系统厂商和开发者的青睐，不少操作系统开始拥抱 RISC-V，并成为一种新兴趋势。2020年4月，欧拉社区RISC-V SIG组正式成立，目前已完成6000+软件源码包适配，RISC-V镜像仓库的RPM软件包数量超过23000个。</p><p></p><p>目前，openEuler作为一个支持多样性算力的<a href=\"https://www.infoq.cn/minibook/ARa5HwDdOveaDKavLSc3\">开源操作系统</a>\"，支持x86、Arm、RISC-V、LoongArch、SW64、Power 六大处理器架构。中国工程院倪光南院士在主题发言中表示，欧拉走出了一条既符合国际开源规则，又具备“中国特色”的基础软件发展道路，openEuler社区已达到国际同类水准。</p><p></p><h2>《中国软件根技术白皮书(操作系统册)》正式发布</h2><p></p><p></p><p>本次峰会上，中国软件行业协会联合广大企业、研究机构、院士专家、openEuler、openGauss等优秀开源社区，凝聚操作系统产业界共识，结合openEuler、OpenHarmony在行业中的成功实践经验，组织编写并发布《中国软件根技术白皮书（操作系统册）》（以下简称“白皮书”），借此进一步汇聚产业共识，凝聚产业力量，合力在操作系统领域实现原创性突破。</p><p></p><p>中国工程院廖湘科院士在主题演讲环节介绍白皮书中主要观点：</p><p></p><p>以原生自主操作系统为代表的软件根技术是数字基础设施的核心组成部分，是技术创新和数智化发展的基石；云、管、边、端数字全场景的打通成为数字基础设施操作系统的刚性需求；操作系统实现多样性算力、全场景支持，可使能数字世界全场景无缝协同；开源和生态建设未来将成为国产操作系统创新发展的主流模式。</p>",
    "publish_time": "2022-12-28 14:36:08",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "“玩脱了”连累特斯拉？马斯克要辞去推特CEO，网友：新 CEO 是不是得睡公司？",
    "url": "https://www.infoq.cn/article/9fPyXmLWVaFJGrVJ9dch",
    "summary": "<p>近日，马斯克在推特上发起一项关于自己是否应该辞去Twitter领导人职务的投票，并称自己将遵循投票结果。结果显示，参与投票的1750万人中，有57.5%的人希望他离开。</p><p>&nbsp;</p><p>之后，马斯克发推文回应称，“一旦找到蠢到可以接任这个工作的人后，我就辞去CEO职务！之后，我将负责管理软件和服务器团队。”不过，这个接任者似乎并不好找。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/f5/f587bc63f23a46a67dfe934be43dbf17.png\" /></p><p></p><p></p><h2>收拾马斯克留下的烂摊子</h2><p></p><p>&nbsp;</p><p>接手马斯克以来，马斯克一系列草率且看似反复无常的决策已引起各方批评。</p><p>&nbsp;</p><p>马斯克先是表示推特要“言论自由”，因此要恢复之前被封禁的大多数推特账户，其中包括极右翼分子、散播虚假信息等。据报道，截至11月底，大约 6.2 万个被禁或冻结的推特账户已经恢复，在这些账户粉丝数都超过了1万人，其中超过1.1万个是因为违反推特新冠虚假信息规则而被冻结的。现在，推特也不再执行其新冠肺炎误导信息政策，即不再优先删除或标记与新冠相关的误导性健康信息。马斯克这一行为更是导致大量广告商撤离，推特收入出现了“大规模”下降。</p><p>&nbsp;</p><p>“该公司经营状况非常糟糕，现金流为负，可能濒临破产。”马斯克在采访中说道。</p><p>&nbsp;</p><p>早前就有知情人士透露，马斯克已指示推特团队通过压缩云服务以及剔除额外的服务器空间，每年节省超过 10 亿美元的基础设施成本。之后，马斯克还被曝拖欠推特在其全球的办事处及旧金山总部的租金，还拍卖了部分家具，不过推特否认拍卖与推特的财务状况有关。</p><p>&nbsp;</p><p>11月底，为增加营收，此前因认证问题而暂停的推特付费服务 Twitter Blue 重新上架，售价仍然为每月8美元。该服务上架后，假冒蓝V认证账户泛滥。有账号伪装成制药公司Eli Lill 并发布了关于胰岛素将免费的消息，导致该公司的股价暴跌。还有冒充马斯克汽车公司特斯拉的账号称，聘用了童工。随后推特紧急撤销了该服务，又于12月重新上线。</p><p>&nbsp;</p><p>另一方面，马斯克还解雇了原公司 7500 名员工中约50%的员工，然后通过忠诚度要求、“代码审查”和其他激进举措赶走了更多员工。马斯克表示，希望自己的员工更“硬核”，可以长时间工作，减少休息甚至离开办公室的时间。他的做法如此极端，以至于推特因在旧金山总部<a href=\"https://www.washingtonpost.com/business/2022/12/07/musk-twitter-bedrooms-san-francisco/\">非法安装临时卧室</a>\"而被旧金山建筑检查部门传讯，马斯克在推特上称此举旨在<a href=\"https://twitter.com/elonmusk/status/1600272617759731712\">帮助“疲惫”的员工</a>\"。网上有人表示，马斯克可能希望任何新任CEO也能在办公室睡觉。&nbsp;</p><p>&nbsp;</p><p>大量裁员后，推特背后错综复杂的基础设施已经出现问题，如转发无法正常使用、双重身份验证报错致难以登陆、保存的草稿莫名被删除等。马斯克还删除了一项预防用户自杀的功能，该功能向查找某些内容的用户推广预防自杀热线和其他安全资源等。不过不久公司便恢复将很快上线。</p><p>&nbsp;</p><p>但最近，马斯克还遇到了数据泄漏的大麻烦。一名黑客在暗网上要价20万美元（约139.4万元人民币），出售在2021年利用漏洞（现已修复）收集到的4亿推特用户数据。这名黑客还嚣张地表示，如果埃隆·马斯克想要避免被欧洲GDPR法规下超过540万欧元（约4000万元人民币）的罚款，那么他就应该购买这些数据。针对此次黑客勒索事件，爱尔兰数据保护机构表示，推特显然违反了《通用数据保护条例》的规定，该条例是欧洲的隐私法规，通常与巨额罚款挂钩。</p><p>&nbsp;</p><p>此外，推特近日突然暂停了至少六名科技记者的账户，其中包括纽约时报、华盛顿邮报和 CNN 的记者，原因是这些账户使用公开可用的航班信息跟踪了马斯克的私人飞机位置。随后，推特禁止了包括其他追踪Mark Zuckerberg、Jeff Bezos和Bill Gates私人飞机的账户，并更新了隐私政策，禁止发布或链接到有关个人实际位置或旅行路线的信息，无论信息是否公开。</p><p>&nbsp;</p><p>可以看出，新任 CEO 要收拾马斯克因率性、随意而造成的“烂摊子”，难度系数不低。</p><p>&nbsp;</p><p>马斯克一系列操作也并未让自己获益。今年以来，特斯拉股价跌幅已超58%，背后原因直指马斯克“豪赌”推特所引发的投资者离场，马斯克本人也失去“世界首富”宝座。有知情人士表示，向马斯克提供 130 亿美元贷款用于收购推特的一些银行正准备在本季度计入其贷款亏损，但要保证不能对其季度收益造成重大拖累。</p><p></p><h2>谁是新任 CEO</h2><p></p><p>&nbsp;</p><p>虽然马斯克还没有正式离任，但大家已经开始纷纷帮助他物色人选了。</p><p>&nbsp;</p><p>首先是自告奋勇的企业家和天使投资人&nbsp;Jason Calacani。他在4月份时就私信马斯克称担任推特CEO是他“梦想的工作”。“董事会成员、顾问，无论什么……你都有我的支持，” Calacani 在马斯克与推特打官司期间这样对马斯克说道。</p><p>&nbsp;</p><p>Calacani 在马斯克接管推特过程中一直为他辩护。12月18 日，他就谁应该成为推特新任CEO<a href=\"https://twitter.com/Jason/status/1604637490131787777?s=20&amp;t=2FwSATjHURcBvRAX5Q7w9w\">进行了民意调查。</a>\"可惜，在投票的 13,879 人中，只有 8.2% 的人认为他应该担任 CEO。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/29/291dbd83f903b8faa67c12288127903b.png\" /></p><p></p><p>&nbsp;CNN 给出的人选除了有Calacani，还有David Sacks、Sriram Krishnan、Wild cards，理由如下。</p><p>&nbsp;</p><p>David Sacks和马斯克都是PayPal最初的创始团队成员，他曾创立并运营企业通信平台Yammer，并于2012年以12亿美元的价格将其出售给微软。“Sacks至少有一些管理社交平台的经验。”</p><p>&nbsp;</p><p>Sacks还是马斯克的坚定维护者。在马斯克与苹果发生矛盾、马斯克因私人飞机被追踪而封禁账户等事件中，Sacks都坚持维护马斯克。上个月，有推特用户问Sacks，他和马斯克在什么方面存在分歧，Sacks的回答是：国际象棋。另外，他本人也足够“卷”，有一天工作 16 小时、全家连带着刚出生不久的婴儿直接住公司的经历。</p><p>&nbsp;</p><p>Sriram Krishnan 则是CNN 认为可能最好的选择。Krishnan 有在推特产品上的直接工作经验，之前曾帮助管理负责该平台功能的团队。他还曾为Snap和Facebook开发移动广告产品。最近，Krishnan 投资了Andreessen Horowitz的加密初创公司，这可能有助于实现马斯克为推特建立支付能力的目标。</p><p>&nbsp;</p><p>“Krishnan可以说是马斯克目前推特领导团队中最不知名的一位，因此也可能是最没有争议的，这可能有助于转移该公司最近的一些负面消息。”CNN 评价道。</p><p>&nbsp;</p><p>Jared Kushner 更多来自一些网友的猜测，因为Kushner还有一个身份是唐纳德·特朗普的女婿，网友发现他与马斯克一起看了世界杯。Kushner还与推特最大投资者之一的沙特王室关系良好。在特朗普的白宫担任顾问之前，Kushner曾在他家族的房地产开发公司工作，去年他表示将离开政界，创办一家投资公司。他之前还拥有《纽约观察家》周刊。</p><p></p><p>此外，前 T-Mobile CEO &nbsp;John Legere在11月份时候就在推特上对马斯克说，“也许我应该掌管推特，你可以支持产品/技术，但不再管理日常业务和内容审核。” Legere 补充道：我很贵，但你为推特支付的费用也很贵。”</p><p>&nbsp;</p><p>Legere是一位经验丰富的企业高管，将 T-Mobile 从四面楚歌、差点被淘汰出局的第四大运营商转变为美国第二大无线运营商。但他还是被马斯克用一句“no”无情地拒绝了。之后，Legere还自嘲道：不能说我没有努力过。</p><p>&nbsp;</p><p>有的网友开始怀念推特前CEO Jack Dorsey，不过他早就<a href=\"https://twitter.com/jack/status/1524507652117700609?s=20&amp;t=TXGT9YjhmtEq210zSmgFtA\">表示</a>\"，“我永远不会再担CEO”。当被问及谁应该成为推特的 CEO 时， Dorsey 回答称“最终没有人”。</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.cnet.com/news/social-media/twitters-next-ceo-after-elon-musk-heres-who-could-take-the-reins/\">https://www.cnet.com/news/social-media/twitters-next-ceo-after-elon-musk-heres-who-could-take-the-reins/</a>\"</p><p><a href=\"https://edition.cnn.com/2022/12/19/tech/twitter-alternate-ceo/index.html\">https://edition.cnn.com/2022/12/19/tech/twitter-alternate-ceo/index.html</a>\"</p>",
    "publish_time": "2022-12-28 14:40:09",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "百度「凭什么」让每个人实现数字人自由",
    "url": "https://www.infoq.cn/article/Eg2VKA5xj61C4FH5ofYX",
    "summary": "<p></p><p></p><blockquote>从度晓晓、希加加、林开开到叶悠悠，百度已经造出了一个AI数字人家族。</blockquote><p></p><p></p><p>在元宇宙风潮之下，<a href=\"https://www.infoq.cn/theme/165\">数字人</a>\"先火了。近两年，国内数字人项目呈现井喷态势。IDC预计，到2026年，中国AI数字人市场规模将达到102.4亿元。作为时下最热的技术话题，我们判断，开发者有必要对数字人技术有完整的认知和理解。</p><p></p><p>在此背景下，InfoQ 特别策划了<a href=\"https://www.infoq.cn/theme/165\">《数字人基础技术解析》专题</a>\"。本专题将首先对数字人做概要介绍，紧接着围绕数字人的技术、应用落地等维度分别做解读。我们将收集来自国内业界一流团队的最佳实践，供读者参考。</p><p></p><p>本文是本专题的技术&amp;实践篇。近日，百度数字人与机器人业务负责人李士岩接受了InfoQ专访，详细介绍了<a href=\"https://www.infoq.cn/article/kso0s8Dl1QWabtcPWTTA\">百度对AI数字人</a>\"的技术探索和应用落地实践。</p><p></p><h2>百度发力AI数字人</h2><p></p><p></p><p>近两年， 百度在AI数字人领域动作频频，大力布局。百度看好数字人的发展前景，这一认知和判断，是基于对计算平台，对行业及B端市场目前呈现出来的需求判断的基础上。</p><p></p><p>李士岩表示，从整个需求端看，这几年，企业的数字化转型，包括智能服务、智能营销、智能内容生产等，都有着非常旺盛的需求。数字人是一项由技术驱动的产品，近几年来，人像自动建模技术、人像低成本驱动技术，以及通过算法让数字人实现自动化内容生产的技术、规模交付的技术等逐渐发展成熟，这使得数字人的能力与企业的智能化转型所需要的能力高度契合。</p><p></p><p>在这样的背景下，百度布局AI数字人，已是自然而然的选择。</p><p></p><p>这两年，国内各家云厂商纷纷开始布局虚拟数字人。李士岩认为，这种现象恰恰反应了当前的市场需求，以及当下各项技术的成熟度已经开始呈现逐步满足这些需求的趋势。</p><p></p><p>与友商相比，百度在数字人领域的定位，从横向上看，更聚焦于百度传统的AI优势。“我们具有全链路的AI能力，数字人是一个既和视觉技术有关，也和语音技术有关，也和像AIGC这样的自动生产内容的技术有关的、需要拉通全链路的底层AI技术的产品。基于百度全链路的AI能力，可以将数字人的体验进行端对端的优化，并将其效果做到最好”。</p><p></p><p>从纵向的技术领域看，百度在与数字人的核心竞争力相关的多项技术上投入很大，保持了很大的研发压强，且未来还会持续投入。例如在多模交互上，百度智能云发布了智能对话平台UNIT 7.0，它支持跨模态交互。在视觉领域，目前，百度智能云曦灵可以做到高效地生产超写实的数字人像，与传统的生产流程和速度相比，可以提升几倍甚至几十倍。</p><p></p><h2>创造“希加加”、度晓晓</h2><p></p><p></p><p>今年以来，希加加、<a href=\"https://www.infoq.cn/article/rMaACTsMeatV9vgt9CdU\">度晓晓</a>\"等数字人频频站上百度大型对外活动的C位，也不断在直播、服装等领域破圈。那么，希加加、度晓晓是如何创造出来的？这背后有什么样的技术在支撑？</p><p></p><h3>成熟的制作流程</h3><p></p><p></p><p>李士岩介绍，希加加和度晓晓都属于虚拟偶像这一类数字人。针对这类数字人，百度已经有了一套打磨地非常成熟的创造流程。</p><p></p><p>这是一套以技术为底座的流程。</p><p></p><p>通常先对数字人做人设定义，包括名字、技能、性格等。例如，希加加可以画画，度晓晓可以写高考作文，这些技能背后都基于百度一系列AIGC的能力来加持，使数字人的人设更饱满。</p><p></p><p>第二步是人像建模和人像绑定，这是目前业内花费成本较高的一步。在这一环节，百度智能云曦灵数字人平台已经实现了智能人像生成技术，使生成效率更高。</p><p></p><p>制作完人像后，第三步是互动环节。目前，虚拟偶像领域的瓶颈在于，一个虚拟偶像它必须要频繁地被使用，需要频繁地发内容。对于超写实的虚拟偶像来说，如果用传统的内容生产方式，不但成本按秒计算，生产周期也非常长。在这一方面，百度智能云曦灵已经形成了智能化、平台化的内容生产方式，以人像生产环节为例，依托百度智能云数字人人像生成引擎等技术，已经将超写实人像生成效率大幅提高，不仅能一键秒级生成六大风格的超高精人像，还提供1358个微调维度供用户“精雕细琢”。</p><p></p><p>第四步不断通过AI技术，为这两个虚拟偶像增添新的技能，比如画画、写作文等。未来，她们做的事情还会更多，还会不断丰富技能，使其人设更加饱满，更加有记忆点。</p><p></p><h3>超逼真的“肉身”</h3><p></p><p></p><p>超写实数字人具有类人的外观，业内很多数字人产品尤其是虚拟偶像都被塑造了超高的颜值。多次登上舞台的希加加，在形象上也做到了十分类人，五官、皮肤等非常逼真，毫发毕现，令人印象深刻。</p><p></p><p>如果采用以前游戏和电影制作中用到的传统制作方式，要做出像希加加这样写实度这么高的数字形象，制作成本较高，因为它要基于3D艺术家的手工加工，还做一系列复杂的绑定操作。一般平均生产出一个数字人的周期在1-2个月左右，对于希加加这种虚拟偶像级别的人效时间可能会更长。</p><p></p><p>李士岩介绍，对于超写实、虚拟偶像级别的数字人，百度能将其生成的时长缩减到不到一周时间。</p><p></p><p>数字人的人像生成分为三维建模和人像绑定两大阶段。实现如此大幅度的提效，需要攻克多项技术难点，包括三维模型的融合和生成技术、智能绑定技术等，这都要基于大量的3D和4D 数据进行训练，学习个性化绑定、个性化表情的特征，才能将数字人智能化的生产出来。</p><p></p><p>在这些方面，百度从2019年到现在已经过了3年多的实践和积累。在智能绑定方面，百度有几乎是行业内最大的人脸的4D数据库，4D数据会记录一个人在做不同表情时，在时序上，人面部每个点的肌肉变化的序列，通过大量的序列学习，能做到人脸个性化标签的智能绑定。通过这种方式能将智能生产的数字人的面部的生动性，提高到一个新的台阶。</p><p></p><p>数字人的人像质量主要看两个纬度，静态真实性和动态生动性。接下来，百度还将在数字人（特指智能生成的虚拟人）的静态写实度和动态生动性这两个维度持续深耕，通过算法优化持续的迭代。</p><p></p><p>除人像外，衣服、场景等数字资产也都是采用智能化的生成方式。希加加的服装资产，如最近在安踏时装走秀和北京国际时装周走秀中，希加加穿的服装是采用智能化生成的，比原来的生产周期低了75%以上，目前还在探索采用视觉技术，比如毛发自动生成技术。</p><p></p><h3>“全能型”数字人</h3><p></p><p></p><p>希加加、度晓晓都是全能型选手。希加加擅长作画、写诗、作曲、说多国语言、实时直播。度晓晓可以作曲作画，脱口秀、直播、写高考作文。</p><p></p><p>这些超能力离不开百度文心大模型和飞桨深度学习框架的支持。</p><p></p><p>李士岩认为，大模型是接下来一个非常重要的技术趋势。百度的大模型基于百度深度学习框架的技术为基础来进行发展。 飞桨深度学习框架，提供了在上面开发深度学习模型的基础，使得开发大模型的效果和效率都有了显著提升。</p><p></p><p>如今，大模型不仅越来越多地被应用在写诗，作画这种AI生成的能力，同时也越来越多地用到了数字人的模型的智能生产和内容的智能生产上来。</p><p></p><p>在这两个维度，已经明显地看到了大模型所带来的很多优越性，因为它生产的内容，更接近于用户输入，描述的生产种类更多，更丰富，具有更好的扩展性。</p><p></p><p>在数字人的数字资产的内容生产方面，依托飞桨和文心大模型，百度在以下多个细分领域取得了突破。</p><p></p><p>一是播报式的内容生产，目前百度在文字、图、面部表情合成上的准确率已能达到98.5%。例如手语数字人，它的本质是将音视频及文字跨模态的转化成数字人的手语动作。无论是手语播报，还是口语播报，本质上都属于数字人生产的第一类内容，即播报类的内容。在今年的冬奥会、两会上都有百度的虚拟主持人来实时播报节目。</p><p></p><p>数字人内容生成第二个赛道，是数字人的表演类内容的生产，比如唱歌、跳舞。目前百度AI数字人正在尝试做表演类内容的综艺节目。最近，爱奇艺闯关游戏真人秀《元音大冒险》正式开播，百度数字人家族希加加、林开开、叶悠悠“加盟”。他们将与常驻玩家大张伟、秦霄贤等一起进行游戏闯关和歌曲唱演，在月球上的虚拟世界 — MEMOON元音大陆“闯关”。百度智能云曦灵也正是这一节目的数字人技术合作伙伴，并通过《元音大冒险》的“实战”，形成了数字人综艺技术底座，在保证同等效果的情况下，效率提升一倍，成本下降一半，为品牌及商业化带来双向收益。</p><p></p><p>声音处理是当前虚拟数字人的一大难点，要做到与人声的高还原度，还要让数字人唱出美妙的歌声更是非常之难。除了传统的TTS相关技术，百度通过文本生成声音的技术，大模型相关的技术等来让数字人说话，唱歌。在百度的AI开放平台上已有大量已经训练好的语音的模型，有很多声音已能够做到真假难辨。目前，这一技术已支持百度的虚拟偶像发行“单曲”。</p><p></p><p>第三类是叙事类的表演内容。不仅仅是歌舞和跳舞，涉及到带有故事情节的表演类内容时，需依靠跨模态的生成技术和分析技术。在这个方面，百度还在持续投入。相信在未来的一到两年内，可以做到部分叙事类内容的自动化生产。</p><p></p><h3>多模态交互：数字人核心技术</h3><p></p><p></p><p>多模态交互是各厂商在推出自家的数字人产品时，普遍强调的卖点。这也正说明，这项技术是数字人满足客户业务场景中的一项核心技术。</p><p></p><p>如何提升数字人的多模态交互能力。李士岩认为，核心在于下述关键技术点，一是与语音识别相关的技术；二是自然语言理解、对话系统相关的技术；三是视觉相关的技术。</p><p></p><p>ASR是百度传统的优势技术，基于注意力模型的ASR（自动语音识别）的能力，使得在开放空间内的语音识别效果、抗噪效果大幅提升。此外，NLP也是百度的传统强项，在性能层面具有优势，比如手语数字人，本质上是利用NLP技术来做翻译，它将文本、语音和视频通过翻译转化成了数字人的手语来进行表达。在视觉相关的技术上，百度积累了大量的识别模型，且这些模型正在通过百度的各个产品、业务不断应用，在应用的过程中反哺这些模型，使它识别地更快、更准。</p><p></p><p>李士岩表示，这三项技术都已在百度内部形成了正向迭代的循环。百度是既具备语音，也具备语义，也具备视觉的公司。在端对端做优化和链条的能力上，百度也具备良好基础，能够应用到多模交互技术的场景，通过端对端的形式来进行优化，只有这样才能够将效果做到极致。</p><p></p><h3>3D超写实数字人怎样更节省算力？</h3><p></p><p></p><p>就目前的情形看，3D卡通数字人和2D数字人对算力的要求不高，无论是基于云端的服务器，还是基于本地的服务器，还是基于移动端，甚至网页端都能够渲染得比较好。</p><p></p><p>“行业所攻坚的难点应该是，3D超写实的数字人应该怎样更加节省算力。算力的背后是客户的成本，现在3D超写实数字人如果要渲染得比较好，还是必须要基于一个云端的服务器，或者是一个Work station来，且要在里面做大量的优化”。李士岩说道。</p><p></p><p>在3D超高精数字人渲染的发展方向上，李士岩认为，接下来主要有两个发展趋势，一是将3D超高精的数字人在移动端上直接做渲染，在这方面，百度已具备一定技术。比如，将数字人带入到三川创视酒店智能营销屏赋能数字营销，超写实数字人可以在算力小的安卓设备跑起来。目前可以在三川上百家酒店看到这种硬件设备。</p><p></p><p>另一个发展趋势，百度判断，云端的分布式渲染，既保证渲染质量，又能够做到低延迟和低丢包率。百度最近发布的数字人直播平台就应用了这样的技术，它基于云做渲染，但在云端上做了很多优化和处理，使得延迟率跟丢包率都比较低。</p><p></p><h2>数字人自由靠什么实现？</h2><p></p><p>此前，李士岩曾谈到，“我们近两年的奋斗目标是,通过百度智能云曦灵平台的开放,让每个人实现数字人自由。</p><p></p><h3>数字人生产平台技术架构</h3><p></p><p>想要实现“人均一个”数字人，标准化产品将成为降低运营门槛的关键。</p><p></p><p>为了数字人的规模化生产，百度推出了数字人平台“百度智能云曦灵”，今年9月，百度智能云曦灵推出“数字明星运营平台1.0”及“数字人直播平台2.0”，2个SaaS化平台。</p><p></p><p>曦灵的技术架构自下而上分别是：最底层是一系列的AI底层技术，如ASR，TTS 、&nbsp;NLP、肢体识别，声音合成等；再往上一层是人像及数字资产的生成技术，这里面既包含了人像的智能化生产、智能化绑定相关的技术，也包括数字服装的智能生产、数字场景的智能生产。再往上两类是主要应用场景化的应用平台，这两个大应用场景，一是政企服务场景，一是偏内容生产的演艺数字人场景，在这两个方向上有数字员工平台，在演艺场景，有数字明星运营平台和数字人直播平台。</p><p></p><p>“数字明星运营平台1.0”及“数字人直播平台2.0”基于大的曦灵”平台的架构，且完全基于云端算力来进行构造。在最底层和分布式的云端算力，再往上层是一系列的人像内容生产的组件，再往上一系列的技能组件。这些技能调用了曦灵平台最底层的一系列语音和视觉的能力。正是因为有这样的基础平台的支撑，加上云端算力的架构才能够端对端的对这两个平台的体验进行优化和打磨。</p><p></p><p>李士岩表示，行业内的大多数虚拟人，尤其是超写实的数字人的制作，在现阶段仍需要有专业的2B服务的团队来做端到端的长期打磨，这个过程中需要花费大量的时间、人力和制作成本以及运营等周边费用，降本提效就变得格外重要。百度智能云曦灵发布这两个平台也正是为了解决这一行业痛点。</p><p></p><p>这两个平台都是非常易用的SaaS软件，并且均包含云端版本，通过一个网页即可登陆，在这两个平台上操作就像操作PPT一样简单。在平台上可以自动化生产数字人的人像，生成后客户可以对这个人像进行超过一千个纬度的微调，包括对鼻子、眼睛，眉毛等进行各种细节调整，在生产完人像后就可以利用平台上的AI技术让数字人做自动化的播报和内容生产，通过一个摄像头即可实现中之人的直播内容生产，更重要的是，在夜间等闲时流量期间，还可以实现纯AI驱动的数字人直播。</p><p></p><p>李士岩提到，关于这两个平台，百度AI数字人团队还引入了一项新技术——基于单目摄像头的动捕技术。现在针对数字人，如果要进行动作捕捉，大多数情况下需要穿一套动捕服，甚至需要依赖光学模式来做，这个成本非常贵。在这两个平台上，仅通过一个几百块的摄像头就可以实现动作捕捉技术，这是这两个平台一个比较大的技术创新点。</p><p></p><p>具体而言，要想把单目动捕的技术做好，涉及到很多细节点，比如针对动作感知的模型做了大量的优化工作。比如要基于算法来构建物理引擎（指数字人的身体与具备物理特性的物体产生‘碰撞’，如人与地面接触），且做了大量优化工作保证效果。</p><p></p><h3>虚拟偶像、带货直播最具商业潜力</h3><p></p><p>据悉，在应用落地方面，百度AI数字人目前主要应用在直播、金融、广电、互娱、政务、运营商、零售等场景。</p><p></p><p>其中虚拟偶像，带货直播、虚拟主播是虚拟数字人目前相当热门的应用场景。李士岩认为，这也是数字人率先实现商业价值的领域。</p><p></p><p>“从现在看到的数据看，回归到虚拟人应用价值的第一性原理上来说，我们判断，虚拟人的价值，一方面在于它的知识和技能，但另外一个非常重要的方面就在于，要给予数字人本身生产的内容消费”。</p><p></p><p>而数字人的内容消费价值最大的两个赛道，就是虚拟偶像类和直播带货这两类场景。根一些研究机构公布的这两个赛道在未来数字人行业市场规模成长的数据看，这两个赛道所占的比重比较大。</p><p></p><p>“现在的企业无论是在产品的定义和生产，还是在营销上，都在追求的非常重要的一点是，要与它的用户不断地建立交流，建立联系。其次，品牌越来越重要了，大家都在巩固自己在用户心中的品牌心智。数字人在上述层面都能发挥非常重要的作用”，李士岩表示。</p><p></p><p>从品牌角度，百度认为，一个符合企业品牌气质的数字人形象，更能帮助企业增强它的品牌在用户心智中的作用。据李士岩观察，今年，能看到，大量的品牌都采用了数字人的形象来做品牌大使，这一方面反映出，现在品牌在营销的领域正在拥抱数字人这一类为代表的新内容。同时也反映出，企业在将品牌心智注入它的用户的方法上，也越来越多希望通过采用数字人这种更加人性化的方式。在与用户的交流方面，虚拟人具有的人性化、高并发、7×24小时无休的特征，恰好满足了企业长期与其用户建立反馈闭环的强诉求。</p><p></p><h3>SaaS和订阅将成重要商业模式</h3><p></p><p>李士岩认为，SaaS和订阅会是数字人非常重要的商业模式。</p><p></p><p>“百度认为只有SaaS化的产品才是在本质上跟客户实现共赢的，因为它的本质是按用量来收费，按用量来收费的本质是，为用户创造的价值越多，就能更多的创造利润，这在本质上实现了和客户的共赢。SaaS的发展方向是我们会坚决做、坚决投入的一个方向”。</p><p></p><p>目前，百度智能云希望，基于数字人以及周边一系列的技术来赋能B端客户，包括金融、广电、互联网、运营商行业等。</p><p></p><p>百度认为，数字人除了能服务于B端企业之外，在未来也有更多发展前景。一方面，伴随着计算平台的迭代，分布式云端渲染技术的发展，数字人会由B端逐步向C端扩展。百度期望数字人的未来首先在2B的场景下可以为用户在智能营销、智能服务、智能内容生产等维度创造价值。</p><p></p><p>从更长远来看，百度的判断是，在未来基于空间计算和平台里面，数字人是每个人进入到空间计算平台里的通行证，能帮人们更好地开展社交，表达自我。同时，数字人也会是空间计算平台内一个新的服务载体，也会是一类新的主要内容，但它的内容呈现的形式以互动的方式为主。</p><p></p><h4>采访嘉宾介绍：</h4><p></p><p>李士岩，百度数字人与机器人业务负责人。百度数字人与机器人业务负责人，从事人工智能相关产品设计、研发、运营10余年，主导了百度智能云机器人和数字人的早期研发与运营，形成了完备的商业化产品矩阵。设计专业背景，曾获“光华龙腾中国服务设计十代杰出青年”和 红点、Adesign等奖项。</p>",
    "publish_time": "2022-12-28 14:44:03",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "企业经营中的博弈论实战 | TGO鲲鹏会",
    "url": "https://www.infoq.cn/article/39uY4rSRbBTUa1HQ5Tkf",
    "summary": "<p>本次分享您将收获：<br />\n1、创业经营的关键成功要素<br />\n2、TGO博弈论小组的精益运营心法<br />\n3、企业经营和博弈游戏的风险控制？<br />\n4、如何感受场域，组建共创共赢生态？</p>",
    "publish_time": "2022-12-28 15:22:25",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "AIGC发展现状与应用展望",
    "url": "https://www.infoq.cn/article/kxtTSYgd34dmmI8Pzb1A",
    "summary": "<p>内容简介：AIGC（AI Generated Content)，利用人工智能技术来生成文本、图片、语音等内容，它被认为是继PGC、UGC之后的新型内容创作方式。目前，AIGC正处于技术和商业化交汇的路口。本次闭门会将分享AIGC的技术与发展现状，共同探讨AIGC的潜在商业化机遇。</p>\n<p>听众收益</p>\n<ol>\n<li>了解生成式AI(Generative AI)和AIGC的内涵</li>\n<li>了解AIGC的主要技术及发展现状</li>\n<li>了解AIGC目前国内外主要应用及玩家</li>\n<li>在开放探讨与碰撞中展望AIGC未来潜在应用领域、AIGC商业化模式，识别自身业务与AIGC的结合</li>\n</ol>",
    "publish_time": "2022-12-28 15:36:43",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Apollo开放平台迎来8.0版本，百度自动驾驶开放平台迈向易用性时代",
    "url": "https://www.infoq.cn/article/x03UATveuuHTuH0TsINI",
    "summary": "<p>12月28日，百度举行了Apollo开放平台8.0线上发布会。会上，百度面向所有开发者，正式推出了Apollo自动驾驶开放平台的全新升级版本——Apollo开放平台8.0，进一步夯实了平台的易用性，让开发者操作更简单易上手。同时，百度Apollo也面向外界分享了在自动驾驶教育、生态合作伙伴等方面的最新进展。</p><p>&nbsp;</p><p>Apollo开放平台8.0正式发布 带来多维度全新升级</p><p>&nbsp;</p><p>百度Apollo开放平台自上线以来始终保持着创新和高频的自我迭代，从最开始聚焦于基础能力的搭建，走向侧重场景能力的发展，再升级为对平台工程易用性精益求精的追求。百度自动驾驶平台生态负责人张亮表示，“Apollo开放平台8.0分别从‘新架构’、‘新能力’两个重要层面进行了全面升级，从开发者的实际需求出发进行改良，帮助开发者更好、更快地熟悉和使用百度Apollo开放平台。”</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d6/d618c56b04895d8f74534d4671534724.png\" /></p><p></p><p>首先在平台架构层面上，Apollo开放平台8.0从面向技术分层的架构，升级为了结合技术与生态分层的架构。在“新架构”体系中，最底层为硬件设备，通过开放标准协议与认证，可助力Apollo的生态合作伙伴为开发者提供丰富的自动驾驶设备选择。在此之上是软件核心，可以提供搭建基于Apollo自动驾驶系统的最小软件子集的能力，本次升级开放了感知开发全流程，同时提供了基于本地HMI Dreamview的PnC仿真调试能力，从而提升感知和PnC的研发效率。再往上一层，是软件应用，可以为开发者提供全新的自动驾驶模块扩展能力与扩展方式，并以场景的形式开放。在架构顶层则是云端服务，新增了模型训练服务能力，并升级了实训平台与仿真能力。通过这套全新架构，Apollo开放平台8.0可以为开发者提供易用的软件核心和云服务工具，以及易扩展的硬件设备与软件场景应用。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/d6/d62f3ed8d2ee71dc6fe8762b6052fc9f.png\" /></p><p></p><p>其次在平台能力构建上，Apollo开放平台8.0主要从三方面进行了升级。第一，在工程框架上引入软件包管理机制，以软件包的方式组织和管理Apollo模块，让开发者可以按需下载、减少数据量，让安装部署所需的时间从“天”级别缩短至30分钟内，大大地降低了安装与工程扩展的门槛。第二，Apollo开放平台8.0在原有基础上升级了感知框架与开发流程，一方面新引入了3个基于深度学习的模型，进一步丰富了感知模型类型，并且有效提升了精度；另一方面开放了感知的全流程开发环节，从模型的训练、部署到验证各个环节，开发者除了能选择平台自带的模型之外，更可以基于自己的需求扩展更多模型。第三，Apollo开放平台8.0采用了全新的PnC工具链，可提供PnC仿真测试的本地调试功能以及便捷的云端仿真场景管理功能，开发者通过插件即可将Apollo开放平台的场景和动力学模型下载至本地，整体可使调试效率提升1倍以上。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/07/07ecd77875d69cadbffc52e3b1ed89d9.png\" /></p><p></p><p>此外Apollo开放平台8.0的另一举措，是上线了全新的针对自动驾驶的一站式学习实践社区——Apollo Studio。对于自动驾驶这一技术门槛高、学习难度大、实操成本高的领域而言，Apollo Studio可以帮助正在观望、想要进入或是想寻求突破的开发者解决部分困扰。这一社区可以为开发者提供学习课程和云端实践的机会，新手跑通一个样例Case仅需5分钟，极大降低了学习难度；同时还可以为开发者提供自动驾驶PnC、感知等一系列赛事机会，让开发者们可以与全球的同好们一同竞技、挑战自我；并且，作为一个汇聚了自动驾驶行业达人的社区，这里更可以成为开发者们与行业大牛进行深度技术交流、与同行分享和互动的绝佳窗口。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/93/9377ec8598f73285d49fbff427b7e1e5.png\" /></p><p></p><p>Apollo EDU阶段性成绩亮眼 将联手北理展开新合作</p><p>&nbsp;</p><p>在百度Apollo生态中非常重要的一环，还有自动驾驶领域的教育和人才培养。过去几年间，Apollo持续与教育生态伙伴联手，培养跨学科、有交叉融合能力和创新实践能力的优秀人才，为行业“造血”。去年12月，百度发布了Apollo EDU人才培养计划，立下三年培养百万自动驾驶人才、覆盖千所院校的目标。目前，Apollo通过校企合作、师资培养、举办赛事等种种切实的行动，已经对此前定下的目标有了阶段性的兑现，Apollo EDU已覆盖自动驾驶相关技术人才超33.5万人、覆盖院校数达700多所。</p><p>&nbsp;</p><p>在与权威机构的产学研合作方面，Apollo在去年也与中国计算机学会智能汽车分会（CCF IV）携手共建了“自动驾驶国家新一代人工智能开放创新平台”，面向开发者开展技术研讨会、科学教育大讲堂等。在此次发布会上，Apollo还进一步宣布，后续将与北京理工大学展开进一步合作，共建智能网联汽车联合创新中心，未来将致力于合作培养智能网联汽车高素质复合型人才。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5e/5e8bba72993d1da799b194310c61ad81.png\" /></p><p></p><p>事实上，除上述密集的举措之外，Apollo EDU在自动驾驶行业人才培养方面也已经摸索出一套行之有效的方案，以确保对不同类型的人才“因材施教”。面向高校人才，Apollo坚持产、学、研、用融会贯通的理念，为高校提供虚拟教研室平台、DKIT上车实践平台的全链路解决方案等。而面向产业实践型人才，则着重提供实用实战型的课程体系，培养自动驾驶集成类、测试类、运维类等应用型岗位人才，以及算法、工程技术类等研究型人才。张亮称，“未来，Apollo EDU也将与更多高校、机构展开教育方面的合作，让更多对自动驾驶有兴趣的开发者有机会入行、同时也是为行业培养源源不断的生力军。”</p><p>&nbsp;</p><p>Apollo X提出针对性共促方案 为企业规模化商业落地助力</p><p>&nbsp;</p><p>Apollo开放平台在此次发布会上也提出了专为生态伙伴打造的“企业自动驾驶能力建设地图”。基于企业自身场景应用所处的阶段特征，提供不同的共促方案，来帮助企业更好、更高效地实现自动驾驶的规模化商业落地。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/d5/d56f1fa0ed9bb71651772b317ca4c16e.png\" /></p><p></p><p>对于处在早期原型搭建阶段的企业而言，Apollo X提出的方案主要从搭建所需的工具以及能力两方面下手，为企业提供包含Apollo核心系统、二次开发接口、功能安全软件能力的域控制器与推荐传感器在内的套件，以及端到端的搭建服务与技术培训咨询。</p><p>&nbsp;</p><p>对于处在中后期、具备小规模量产能力并开启启动场景运营的企业而言，Apollo X提供的方案则主要聚焦在与应用场景匹配的软件能力上，以及具备规模化算力支撑的仿真、模型训练、数据管理等研发工具平台和业务监控云工具等，主要是从规模化、成熟化的场景运营视角，帮助企业优化作业成本、风险及效率。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/ea/ea43b964e6871d92e909e19d2d48d2f4.png\" /></p><p></p><p>Apollo开放平台始终秉承“开放能力、共享资源、加速创新、持续共赢”的核心理念，不断带来创新和升级。此次Apollo开放平台8.0的推出，再次让Apollo开放平台在工程易用性上向前迈进一大步，降低操作难度、操作成本的门槛，让更多开发者可以简单方便地上手Apollo开放平台、投身自动驾驶技术领域。</p><p>&nbsp;</p><p>目前，Apollo开放平台的开源代码量已超过75万行，并且汇聚了来自全球165个国家的10万多名开发者，拥有全球超220家生态合作伙伴。未来Apollo也期待与更多开发者及合作伙伴一起，不断拓展能力边界、探索自动驾驶技术和产业的更多可能性，一起“新新”向荣，聚力同行。</p>",
    "publish_time": "2022-12-28 16:05:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]