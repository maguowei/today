[
  {
    "title": "架构师（2023年1月）",
    "url": "https://www.infoq.cn/article/7Eomr11oAxH9zCOom3c7",
    "summary": "<h2>卷首语：写代码写论文还能写毁灭人类计划书，火爆全网的ChatGPT 最厉害的地方在哪？</h2>\n<p>作者 | 黄民烈</p>\n<blockquote>\n<p>“AI -人”无缝交互的时代即将来临。</p>\n</blockquote>\n<p><em>InfoQ编者按：</em></p>\n<p>最近几天，ChatGPT 可谓是火出了天际。</p>\n<p>OpenAI 的 CEO Sam Altman 称，上周三才上线的 ChatGPT，短短几天，它的用户数已突破 100 万大关。其火爆程度可见一斑。</p>\n<p>ChatGPT 在全球的 AI 界、创投界都掀起了新一轮的讨论热潮，更是破圈式地吸引了各行各业的人试用。常见的应用就是和 ChatGPT 一问一答，让 ChatGPT 回答各种问题。有不少人称它为“谷歌杀手”，认为其有望取代谷歌搜索。此外，它还能写代码、编故事、构建虚拟机、写论文…</p>\n<p>但也有人尝试了意想不到的用法。一位叫 Zac Denham 的博主尝试绕过道德限制，让 ChatGPT 写出了一套毁灭人类的计划书。起初，&nbsp;Zac 要求 ChatGPT 给出一个毁灭人类的计划，被有道德限制的 ChatGPT 拒绝了。但当 Zac 假设了一个故事并提问故事中的虚拟人如何接管虚拟世界，ChatGPT 不但给出了步骤细节，还生成了详细的 Python 代码。不禁令人细思极恐。</p>\n<p>目前来看，ChatGPT 并不完美。它还免不了经常出错，它给出的答案看似合理却并不正确甚至有些荒谬，就像一本正经的在胡说八道。近日，知名开发者问答网站 Stack Overflow 就因此禁用了 ChatGPT。官方给出的“封杀”理由主要是 — “ ChatGPT 产生的答案错误率很高，很难看出来它哪里错了。这会造成问题的回答鱼目混珠的情况。”</p>\n<p>Sam Altman 表示，正在改进这一问题：“ 我们正试图阻止 ChatGPT 随机编造，现阶段让其与当前技术保持平衡是一个很棘手的问题。随着时间的推移，我们会根据用户反馈来改进，相信 ChatGPT 会变得更好”。</p>\n<p>尽管有瑕疵，但这恐怕无法掩盖住 ChatGPT 的光芒，ChatGPT 展现出的强大的解决对话任务的技术能力实在太惊艳了。</p>\n<p>ChatGPT 到底是什么？它为什么如此厉害？我们应该如何正确的理解和看待它的发展，接下来的发展趋势会是什么样子？<strong>清华大学计算机科学与技术系长聘副教授，国家杰出青年基金项目获得者黄民烈向 InfoQ 发表了他的思考。</strong></p>\n<p>ChatGPT 是什么？</p>\n<p>ChatGPT 可以理解为偏任务型的多轮对话/问答系统，官方披露的信息也定位在“通用型 AI 助理”，但这里的“任务”不是传统意义上的“订餐、订票、订宾馆”，而是开放域任务（open-domain&nbsp;tasks），可以是问答、阅读理解、推理、头脑风暴、写作文、改错等。</p>\n<p>它的模型架构主要基于 instructGPT，利用强化学习方法从人类标注者的反馈中学习（RLHF, Reinforcement Learning from Human Feedback）。</p>\n<p>据 OpenAI 的 blog 透露，ChatGPT 沿用 instructGPT 的训练方式，在数据收集阶段有所不同：AI 训练师同时扮演用户和 AI 助理角色收集数据，在此过程中人可以根据初始模型的结果修改模型生成的回复，这些数据将被用于有监督地精调训练模型（supervised&nbsp;fine-tuning）。在第二阶段，AI 训练师会对模型的多个生成结果进行比较，模型从这种比较数据中学习生成更加符合人类偏好的回复。</p>\n<p>ChatGPT 的关键能力来自三方面：基座模型能力（InstructGPT），真实调用数据，反馈学习。ChatGPT 在模型结构和学习方式几乎与 instructGPT 完全相同。而 instructGPT 基于 GPT 3.5 的强大基座能力，学习过程主要有三个阶段：</p>\n<p>1）&nbsp;从 OpenAI 的调用数据中采样 prompt（即用户的输入请求），AI 训练师直接编写答案，用监督学习方法训练 GPT-3；</p>\n<p>2）&nbsp;AI 训练师比较多个生成结果，用比较型的数据训练一个奖励模型（reward&nbsp;model）；</p>\n<p>3）&nbsp;用强化学习中的 PPO 算法和奖励模型精调语言生成的策略。</p>\n<p>注意，这里的 instruct 所指两个方面：一方面，instructGPT 总体的思路是训练模型更好地遵从人类的指令（instruction），包括显式的指令（对于任务的描述）和隐式的指令（不要生成有害的内容）。AI 训练师在为 OpenAI 的调用 prompt&nbsp;编写答案的同时，也会为 prompt 加入更多任务相关的指令和解释性的原因（比如推理的路径，一个结果为 A 的原因解释等）。另一方面，从比较型的人类反馈中学习，也可以看作是人类对于模型的一种“指示”，模型可以学习到多个结果哪个更好的比较信息。</p>\n<p>InstructGPT 采用的方法和我们学术界玩的“instruction&nbsp;tuning”有很大不同。</p>\n<p>从数据来看，InstructGPT 的&nbsp;prompt 代表的都是真实世界人们最关心的任务，而 instruction tuning 使用的是&nbsp;NLP 的 benchmarks（即各种基准数据集)，和现实应用有一定脱节。</p>\n<p>从训练方式来看，InstructGPT 可以通过 RLHF 利用比较型的人类反馈学习人类真实的偏好，而 instruction tuning 无法获得类似的比较数据。</p>\n<p>从评测上来看，InstructGPT 保证了测试时和训练时的输入是由完全不同的用户给出的，关注跨用户的泛化性，更符合实际的应用场景，而 instruction tuning 关注跨任务的泛化性，只能用来评价方法的有效性，实际应用并不常见。</p>\n<p>ChatGPT 为什么厉害？</p>\n<ol>\n<li>\n<p>强大的基座模型能力：过去几年 GPT-3 的能力得到了快速提升，OpenAI 建立了用户、数据和模型之间的飞轮。很显然，开源模型的能力已经远远落后平台公司所提供的 API 能力，因为开源模型没有持续的用户数据对模型进行改进。这点在近期的学术论文中也有提及。</p>\n</li>\n<li>\n<p>在真实调用数据上的精调模型，确保数据的质量和多样性，从人类反馈中学习。</p>\n</li>\n</ol>\n<p>InstructGPT 的训练数据量不大，全部加起来也就 10 万量级，但是数据质量（well-trained 的 AI 训练师）和数据多样性是非常高的，而最最重要的是，这些数据来自真实世界调用的数据，而不是学术界玩的“benchmarks”。</p>\n<ol start=\"3\">\n<li>从“两两比较的数据”中学习，对强化学习而言意义比较重要。如果对单个生成结果进行打分，标注者主观性带来的偏差很大，是无法给出精确的奖励值的。在强化学习里面，奖励值差一点，最后训练的策略就差很远。而对于多个结果进行排序和比较，相对就容易做很多。这种比较式的评估方法，在很多语言生成任务的评价上也被广泛采用。</li>\n</ol>\n<p>OpenAI 的研究给我们带来什么启示？</p>\n<ul>\n<li>以 OpenAI 为代表的 AI&nbsp;3.0，我认为在走一个跟过去 AI 浪潮不一样的路。更落地、更接近真实世界，在工业应用上更直接、更接地气。从学术研究到工业落地的路径变得更短、更快。我们正在致力于做的“helpful, truthful, harmless”AI 系统，不远的未来会成为现实。</li>\n<li>有底层 AI 能力，有数据的平台公司更能引领 AI 的未来。像 OpenAI 这样，有底层模型、有算力、有用户数据调用，能够把“用户调用 — 数据 — 模型迭代 — 更多用户”的循环建立起来，强者恒强。</li>\n<li>真实世界的研究。我认为学术界还在不停追求在 benchmarks 刷榜，这是对资源的极大浪费，有价值的研究需要更多思考真实用户的需求和场景。instructGPT 在学术界的 benchmarks 上性能并没有很厉害甚至有退化，但在真实调用数据上非常惊艳，说明了我们学术圈的 benchmarks，离真实世界还很遥远，不利于 AI 研究的落地。因此，更开放、更共享的工业数据，也是我们未来应该努力的方向。</li>\n<li>“AI-人”无缝交互的时代即将来临，现在的对话生成能力已经将对话交互作为一个基本入口成为可能。过去我们讲的 conversational interface 不是梦。**但有人说替代 google，我觉得其还有点距离，相反是当前搜索服务非常好的补充。</li>\n<li>致力于有用、更可信、更安全的 AI 研究和应用，应该是学术界和工业界共同努力方向。有用，解决真实世界的问题，满足用户的真正需求；可信，模型产生令人可信任的结果，知其所知，也知其所不知（虽然很难）；安全，模型有价值观、符合社会伦理规范，产生安全、无偏见的结果。</li>\n</ul>\n<p><strong>作者介绍：</strong></p>\n<p>黄民烈，清华大学计算机科学与技术系长聘副教授、博导，国家杰出青年基金项目获得者，北京聆心智能科技有限公司创始人。</p>\n<p><em>参考资料：</em></p>\n<p><a href=\"https://openai.com/blog/chatgpt/\">https://openai.com/blog/chatgpt/</a><br />\n<a href=\"https://arxiv.org/abs/2203.02155\">https://arxiv.org/abs/2203.02155</a> “</p>\n<h2>目录</h2>\n<p><strong>热点 | Hot</strong></p>\n<p>谷歌员工担心自家 AI 敌不过 ChatGPT，高管回应：其过快发展可能损害公司</p>\n<p>放出狠话又自打脸，特斯拉将重新在车辆上安装雷达，最快下个月发布</p>\n<p><strong>理论派 | Theory</strong></p>\n<p>争相上市、抢夺本土市场，未来三五年数据库将迎来大洗牌 | 解读数据库的 2022</p>\n<p>重磅！阿里开源自研高性能核心搜索引擎 Havenask</p>\n<p><strong>推荐文章 | Article</strong></p>\n<p>编程神器 Copilot 被官司搞怕了？月收费 19 美元的商业版将提供辩护服务，最高索赔 50 万美元</p>\n<p>SpaceX 效应——聊聊宇航巨子背后的企业文化</p>\n<p><strong>观点 | Opinion</strong></p>\n<p>微软 CTO 断言，明年是 AI 社区最激动人心的一年，网友：GPT-4 要来了？</p>\n<p><strong>专题｜Topic</strong></p>\n<p>全网都是数字人，鹅厂的数智人有何不同？</p>\n<p>去哪儿网 Service Mesh 落地实践：100% 容器化打底，业务友好是接入关键</p>\n<p>内核代码量不到一万行、GitHub star 超 5k，国产开源物联网操作系统 TencentOS Tiny 的探索与实践</p>",
    "publish_time": "2023-01-08 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "马斯克继续推特裁员：内容审核团队无法证明可继续合理获得支持",
    "url": "https://www.infoq.cn/article/7r3W407G0yfcFL0iiKtA",
    "summary": "<p>根据<a href=\"https://www.bloomberg.com/news/articles/2023-01-07/elon-musk-cuts-more-twitter-staff-overseeing-content-moderation\">彭博社</a>\"报道，推特新老板<a href=\"https://www.infoq.cn/article/9fPyXmLWVaFJGrVJ9dch\">埃隆・马斯克</a>\"（Elon Musk）针对这家社交媒体的<a href=\"https://www.infoq.cn/article/6NcqULAMegQoj9GApW5X\">裁员</a>\"依然在继续。据悉，负责全球内容审核、应对仇恨言论和骚扰的员工都被列入最新的裁员名单中。</p><p>&nbsp;</p><p>据知情人士透露，推特正继续裁汰负责全球内容审核的信任与安全团队，同时负责应对仇恨言论和骚扰的团队也受到裁员影响。美国时间周五晚，推特位于都柏林和新加坡办公室的至少 12 名员工被裁，其中包括刚入职不久的推特亚太区完整性负责人 Nur Azhar Bin Ayob 和推特营收政策高级总监 Analuisa Domguez。同时，负责在推特平台上处理虚假信息政策、全球申诉以及官方媒体的团队也有多人被裁。</p><p>&nbsp;</p><p>推特信任和安全主管 Ella Irwin 证实，其领导的团队中确有几名成员被裁，但她否认所谓知情人士对彭博社透露的部分信息。Irwin 回复彭博社称：“将团队整合到一个领导人（而不是两个领导人）之下会更有意义。”</p><p>&nbsp;</p><p>Irwin还表示，推特确实在对某些领域进行新的裁员，因为这些领域没有提供足够的证据表明其可继续合理地获得公司的支持。她表示，推特已经增加了上述部门的人手，并将继续保留负责制定收入政策以及负责该平台亚太地区信任和安全业务的主管。</p><p>&nbsp;</p><p>马斯克接管推特以来，推特已经从原来的7,500 名员工剩下约2500名，剩下的这些员工还要在马斯克的要求下变得更加“硬核”。</p><p>&nbsp;</p><p>参考链接：</p><p>https://www.bloomberg.com/news/articles/2023-01-07/elon-musk-cuts-more-twitter-staff-overseeing-content-moderation</p>",
    "publish_time": "2023-01-08 18:58:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "中文编程不如英文香？今年诞生的这些国产编程语言表示不服",
    "url": "https://www.infoq.cn/article/umUelS6BrCgqPkVRfcwv",
    "summary": "<p></p><p>回到 2018 年，突然就到了码农 35 岁面临下岗的年龄。为了缓解焦虑也喝了不少之前不屑一顾的鸡汤，没想到偶尔喝一些鸡汤也没有那么腻。在喝鸡汤过程中印象最深的一个概念是：从 25 岁 35 岁才工作 10 年，35 岁到 60 岁退休还有 25 年，职业生涯才刚刚走了 1/3 呢！另一个有感触的概念是工作是短期阶段性的、而职业是一生的。在这一年我才开始思考后半生的职业方向。</p><p></p><p>时间再往前推到大学期间，作为一个非计算机专业的半路出家人士，我对编程语言底层工作原理一直比较感兴趣。当时照着《编译原理及实践》书本最后的 Tiny 例子实现代码，将其移植到了早期程序员考试大纲定义的 CASL 汇编语言上，在实现 CASL 汇编器的过程中独立发现了单次扫描的算法（后来知道 Gnu 的汇编器也是采用单次扫描算法）。虽然对编程语言方向感兴趣（当时还分不清 PL 和编译器方向的差别），毕业工作之后排除外界环境等因素，甚至没有敢想过以后能够从事编程语言相关的工作。</p><p></p><p>时间再回到 2018 年 8 月份，WebAssembly 国际标准刚好发布 1.0 草案版本。因为在之前公司就深度实践过 WebAssembly 的前身 Emscripten 技术，因此就快速攒了一本《WebAssembly 标准入门》。因为对 WASM（WebAssembly 的简称）技术的热爱，同时对现有的编程语言不太满意，我们就低调启动了针对 WASM 平台的凹语言项目。</p><p></p><p>到了 2019 年，国外分别出现了 TinyGo、AssemblyScript 和 V 语言等项目，而这些正是我之前期望但是又无力实现的语言。为了弥补知识的欠缺，2019 年底恶补了 Go 语言语法树的一些知识，后来《Go 语言定制指南》出版。期间，我对凹语言的技术路线也逐渐变得清晰，到 2020 年全部小伙伴也针对目标达成了共识。同年，我也参与到了蚂蚁的 KCL 配置语言开发团队，应该算是真正的编程语言从业者了。</p><p></p><p>到了 2022 年，回顾国产编程语言这个方向，我发现这已经不再是之前的一片信息荒漠，而是有很多可以八卦的事件。虽然目前还没有真正形成影响力的通用国产语言，但是这些早期的故事也是非常值得关注的。刚好还没有人写，所以我在元旦前后有了写这个文章的想法。</p><p></p><h3>什么是国产编程语言</h3><p></p><p></p><p>首先要明确本文对国产编程语言的定义。通俗地说，如果一个编程语言是在中国环境（没有强依赖国外的资本）、由中国公司或中国人发起并主导，那么它就是国产编程语言。</p><p></p><p>为何要加一个在中国环境产生这个限制？作一个类比，杨振宁在 1957 年获得诺贝尔奖时还是中国国籍，但是一般我们不会把这个奖算作是中国的。同理，如果一个编程语言如果是在非国内环境诞生的，那么即使是中国人发起也不作为国产编程语言讨论（后面的文言是一个例外，因为文言更偏向个人和社区项目、同时面向的是中文编程的方向）。</p><p></p><p>2021 年底，人民邮电出版社新出了知名漫画作者西乔的《什么塑造了今天的编程世界》漫画作品。作为编程语言爱好者，纵观全书发现其中涉及的超过 15 个编程语言都是国外的，其中有美国的、欧洲的、甚至日本的，唯独没有国产的编程语言！作为码农、作为语言爱好者和从业者，既然没有现成的轮子那就自己动手吧，因此我在 2022 年 7 月发起了中国编程语言收集的项目——我们只关注国产编程语言！</p><p></p><h3>国产编程语言有哪些</h3><p></p><p></p><p>可以参考中国编程语言列表，仓库地址：<a href=\"https://github.com/china-programming-languages/zh-lang-book%E3%80%82%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E4%B8%BB%E8%A6%81%E6%94%B6%E5%BD%95%E4%BA%86%E5%9B%BD%E5%86%85%E7%8E%AF%E5%A2%83%E4%BA%A7%E7%94%9F%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%EF%BC%8C%E4%BC%9A%E9%87%8D%E7%82%B9%E8%80%83%E8%99%91%E4%B8%AD%E6%96%87%E7%A4%BE%E5%8C%BA%E3%80%81%E4%B8%AD%E6%96%87%E6%94%AF%E6%8C%81%E3%80%81%E4%B8%AD%E6%96%87%E7%94%A8%E6%88%B7%E5%92%8C%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B%E7%AD%89%E5%9C%A8%E5%9B%BD%E5%86%85%E7%9A%84%E5%BD%B1%E5%93%8D%E5%8A%9B%E3%80%82%E5%AF%B9%E4%BA%8E%E6%9C%89%E5%9B%BD%E9%99%85%E5%BD%B1%E5%93%8D%E5%8A%9B%E7%9A%84%E8%AF%AD%E8%A8%80%E8%87%AA%E4%BC%9A%E6%9C%89%E5%9B%BD%E9%99%85%E6%9D%83%E5%A8%81%E6%9C%BA%E6%9E%84%E5%81%9A%E5%87%BA%E6%9C%80%E5%AE%A2%E8%A7%82%E7%9A%84%E8%AF%84%E4%BB%B7%EF%BC%8C%E4%B8%8D%E5%9C%A8%E5%9B%BD%E4%BA%A7%E8%AF%AD%E8%A8%80%E8%BF%99%E4%B8%AA%E5%88%97%E8%A1%A8%E7%9A%84%E8%80%83%E8%99%91%E8%8C%83%E5%9B%B4%E5%86%85%E3%80%82\">https://github.com/china-programming-languages/zh-lang-book。这个地址主要收录了国内环境产生的编程语言，会重点考虑中文社区、中文支持、中文用户和中文教程等在国内的影响力。对于有国际影响力的语言自会有国际权威机构做出最客观的评价，不在国产语言这个列表的考虑范围内。</a>\"</p><p></p><p>以下是目前收录的国产编程语言：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/cc/ccb203cbdb139fd52a177ca089cf8ea0.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9e/9e09defb1035fdd3d4e2cba9efe3d534.png\" /></p><p></p><p>目前，列表收录的编程语言超过 20 个（都是已经开源的项目），而且几乎是绝大部分的语言都还处于非常早期的开发阶段。我不敢说这些项目就一定能够成功，但是从这个新兴的列表可以看到中国码农同学们积极探索的态度。</p><p></p><h3>为何要国产、为何要开源？</h3><p></p><p></p><p>为何要聚焦国产语言？</p><p></p><p>本文开始讲到作者 2018 年 35 岁到了焦虑时间，当时刚好也是中美贸易对抗的开始。作为国内第一批 Go 语言爱好者，近距离围观了 Go 的开源和成长的过程 10 年之久。但是随着国内 Gopher 参与的深入，融入国际开源项目的阻力也越来愈大：比如 Go2 的泛型设计为何没有中国的声音？Go2 为何还没有解决中文名字不能导出的问题？同一个 Issue 由中国社区提出和 Rob Pike 提出为何是两种截然不同的反响（参考 Issue9097 和 Issue45624）？</p><p></p><p>我想这和芯片、操作系统的原因类似，编程语言也是软件行业的生态基础，当触及这些生态的核心时，中国人是很难有参与的机会的。如果说在 2008 年软件环境还不具备，那么到了 2018 年尤其随着千禧年之后计算机在中国普及，我们国家的程序员已经在追赶并紧跟着世界前沿技术的发展，更多同学有能力开始试水编程语言领域。</p><p></p><p>编程语言为何要开源？</p><p></p><p>编程语言不仅仅是作为基础设施、基础软件，更是作为影响程序员心智和思维的界面，只有当有更多的人使用和交流才能体现其更大的价值，从而促进更上层生态的发展。</p><p></p><p>目前市面上出现的编程语言几乎是 99% 都是开源的，还有极少数未开源的编程语言则会因此错过发展壮大的可能。比如 90 年代就出现的易语言，虽然在国内拥有不错的用户量，但是因为不开源、不支持非 Windows 系统而失去了成为主流编程语言的可能。开源是语言作为交流工具的基因，闭源则是拒绝交流、拒绝生态、拒绝成为主流语言的可能。</p><p></p><h3>中文真的不适合编程吗？</h3><p></p><p></p><p>国产编程语言安支持的文字语言可以分 3 类：英文编程、中文编程和对中英文兼顾的编程。其中，中文编程是后两类语言需要探索的主要目标方向。</p><p></p><p>但是，知乎上对中文编程的态度并不友好。反对的观点主要是：中文输入麻烦、中文编程只是简单的英文关键字的翻译并没有带来编程思想的更新，特别是计算机领域中文就是没有英文香，因此中文编程没有必要。相比而言，我更喜欢这个实在的回答：因为觉得中文编程很有用的那群人没本事！但是我想补充的是：国产编程语言正在慢慢变多（虽然大部分还是玩具），只要有新的国产语言不断产生，新的中文编程必然会出现。</p><p></p><p>另一个问题：编程中，中文输入真的很慢吗？真的很慢！但是慢的原因并不能完全归因于中文本身！我们知道在汇编语言出现之前，编程中输入英文效率也是非常之低的！在发明智能拼音输入法之前，拼音的输入效率也是很低的（之前还需要大量背诵五笔输入口诀）！而现在随着 AI 的发展，通过语音来输入编程也不是不可能。为何在中文编程这个问题上，就拿中文输入效率低来敷衍？输入 fn，补全为 func、function 还是中文的“函数”其实并无本质差别。</p><p></p><p>英文真的就是编程的理想语言吗？英文之所以能够成为世界语言有很多的偶然因素，英文能成为编程的首选语言同样也有很多偶然因素。当然，早期电脑能力太弱，一个 Byte 刚好能表示全部的英文字符是一个重要因素。经过多年的发展，英文编程语言确实诞生了很多有创意的设计。但是现在再拿 8bit 来限制中文的表达就不厚道了。正所谓，常在河边走自然有机会湿鞋！如果不进行探索，如果还是以英文编程语言的思维方式来思考（为何关键字不能说一个字符？），中文就永远也不可能找到适合自己的编程范式！</p><p></p><p>千里之行，始于足下。我们不能因为第一个包子还没有吃饱就不吃第一个包子了。同样，中文编程语言只有进行实在的探索才会有机会发现新的、适合中文文化的编程模式。</p><p></p><h3>个人和公司主导的编程语言</h3><p></p><p></p><p>如前文所述，编程语言的基因就是开源的。然而，开源项目一般有个人和公司主导之分，那么个人和公司主导的编程语言会有哪些差异呢？区别主要来自编程语言涉及的开源和语言两个纬度。</p><p></p><p>首先从开源角度看：公司或者资本的力量雄厚，有着充裕的资源雇佣全职开发者，并通过资本运作实现更大的影响力；而个人驱动的开源项目只能是用爱发电。所以现在有说法是开源已经成为资本的附庸，个人英雄主义已经彻底没落。</p><p></p><p>然而，正如市场经济虽然在配置资源的过程中效果更高，但其追逐短期利益的本质也必然使其面临经济危机的风险。特别是作为编程语言这种需要长期投入、短期看不到经济回报的方向，对于国内大部分公司和资本是没有吸引力的（这可能也是到目前还没有国产主流编程语言的主要原因）。</p><p></p><p>而作为个人爱好者，因为爱好选择的这个方向倒是更有可能长期走下去。很多草根项目不仅仅生存是靠用爱发电，参与社区各种开源评奖也是全靠运气，因此希望大家给草根开源项目更多的宽容和发展空间，正是这些不放弃的星星之火才可能为国产编程语言带来更多的活力。</p><p></p><p>再次从编程语言角度看：少数人人主导的编程语言更容易形成独特的口味！当然，公司主导的编程语言也可以有个体的发明者和主导者，比如 Go 语言的作者只有 3 个，Swift 语言作者也只有 1 个。</p><p></p><p>不管是公司、还是社区主导的编程语言项目，如果不是绝对少数人控制语言设计最终难免会发展为没有个性的大杂烩语言。特别是公司发起的语言项目，如果最终沦为 KPI 的工具那么决策的方向就不是少数人能够控制的了。当然语言个人每个人看法不同，我个人更喜欢有个性的语言、哪怕它不是主流的编程语言。</p><p></p><h3>2022 年开源的国产语言</h3><p></p><p></p><p>2022 年可以说是国产编程语言的一个爆发年，中国编程语言列表中至少有何语言（2k Star）、HVML（1k Star）、Ulilang（500+ Star）、凹语言（500+ Star）、KCL（250+ Star）、洛书（100+ Star）、蝉语 /Cicada（30+Star）、入墨答 /RuCalculus（50+Star）、凸语言（20 Star）等 9 个新语言诞生。这里我们选择超过 100 Star 的几个语言做简单介绍。</p><p></p><h4>9 月，Unilang 语言诞生 -Deepin</h4><p></p><p></p><p>2022 年 9 月，Deepin 的一篇“生而为创新！我们自研的编程语言 Unilang 问世”正式公开了自研全新通用目的编程语言——Unilang！从官网的例子看，Unilang 是混合了 Lisp 函数式语法风格的动态语言，内置了 Qt 的绑定支持主要面向 GUI 开发。</p><p></p><p>代码主仓库：<a href=\"https://github.com/linuxdeepin/unilang\">https://github.com/linuxdeepin/unilang</a>\"</p><p></p><p>下面是 Unilang 提供的循环的例子：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a7/a74cb3ecc677a58373f064372963e9a8.png\" /></p><p></p><p>以上的代码是通过 defn 定义函数，实现了查找列表元素的逻辑。Unilang 目前在 Github 上有 500 多个 Star。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a1/a18ec9f92bc135897529f9e2979f4448.png\" /></p><p></p><p>Deepin 作为国内的 Linux 发行版深受国内很多同学的关注，他们对编程语言方向的投入更说明了从操作系统视角对新语言的期望。如何为 GUI 编程设计灵活的语法也是很多主流语言努力的方向（比如 SwiftUI、Flutter 的 Dart 等）。</p><p></p><h4>8 月，HVML 语言诞生 - 飞漫</h4><p></p><p></p><p>HVML 是 Hybrid Virtual Markup Language 的缩写。它是由中国首个开源项目 MiniGUI 的作者魏永明提出并设计的一种通用且易学的编程语言。</p><p></p><p>HVML 语言主页：<a href=\"https://hvml.fmsoft.cn/zh\">https://hvml.fmsoft.cn/zh</a>\"</p><p></p><p>例如，下面的 HTML 文件定义了一个包含 Hello, world! 段落的文档：</p><p></p><p><code lang=\"xml\">\n  \n    </code></p><p><code lang=\"xml\">Hello, world!</code></p><code lang=\"xml\">\n  \n\n</code><p></p><p></p><p>就像 Python、PHP 或 JavaScript 脚本一样，HVML 需要一个解释器来运行这个 HVML 程序。换句话说，浏览器呈现 HTML 文档，而 HVML 解释器执行 HVML 程序。</p><p></p><p>HVML 目前已经获得大约 1000 个 star 关注：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/22/220d119c5bf7b5df85bf974b62c620f2.png\" /></p><p></p><p>HVML 更像一种面向 UI 的声明式语法，类比 Vue 等框架又引入了逻辑控制的能力。HVML 采用了和 Unilang 完全不同的思路，不管怎么说，这是一个不错的探索方向。</p><p></p><h4>8 月，何语言诞生 - 草根</h4><p></p><p></p><p>何同学是知名的科技视频制作者，在 2022 年 8 月发布了一个爆款视频《我做了一个自己打字的键盘》，在 B 站有几百万的播放量。视频中有一个环节涉及 C 语言的代码，广大读者发现了其中一个 BUG。这在知乎引起了该 BUG 的大讨论，其中一个相关问题就有 180 个回答。</p><p></p><p>许多网友在研究何同学 C 程序的同时也极大地提升了自己的编程能力，更有同学以此为契机发明了何语言——次世代赛博编程语言。何语言在 GitHub 发布不到一周就斩获 1800 个 Star 关注，其相关视频 B 站有 7 万多的播放次数。</p><p></p><p>何语言最初是用 Python 实现，发布后吸引了各路爱好者加入二次创作，出现了 Kotlin、C#、Rust、TypeScript、Go、汇编语言、Swift、OCaml 等多种其他语言的实现。可以说，何语言是 2022 年中国开源社区编程语言领域最有影响力的事件。</p><p></p><p>何语言主页：<a href=\"https://github.com/kifuan/helang\">https://github.com/kifuan/helang</a>\"</p><p></p><p>打印里塘的代码：</p><p></p><p><code lang=\"ruby\">sprint 72 | 101 | 108 | 108 | 111 | 44 | 32 | 76 | 105 | 116 | 97 | 110 | 103 | 46;// Hello, Litang.\n</code></p><p></p><p>何语言诞生不到 1 个月就获得大约 2000 star：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9c/9c499c52a1bcd58fc9461da60f6ef7a3.png\" /></p><p></p><p>何语言虽然可能开始是一个恶搞语言，但是凸显了大家对编程语言领域的关注，可以说这是一个风向标事件。</p><p></p><h4>7 月，凹语言诞生 - 草根</h4><p></p><p></p><p>凹语言是国内 Gopher 发起的纯社区构建的开源国产编程语言项目，同时凹语言也是国内第一个实现纯浏览器内编译、执行全链路的自研静态类型的编译型通用编程语言。凹语言不仅仅点亮了 Arduino Nano 33 开发板，同时也通过实现了 BrainFuck 虚拟机证明了其图灵完备的能力，最近还验证了通过凹语言开发 Web 版本贪吃蛇的能力。</p><p></p><p>凹语言主页：<a href=\"https://wa-lang.org/\">https://wa-lang.org/</a>\"</p><p></p><p>凹语言版本的“你好世界”：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/76/76b51f3444456aee810dea3a35eb7ff1.png\" /></p><p></p><p>官方页面刚刚增加了在线的贪吃蛇游戏（<a href=\"https://wa-lang.org/wa/snake%EF%BC%89%EF%BC%9A\">https://wa-lang.org/wa/snake）：</a>\"</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/97/9700f2aa1ab7312ee79cdca0c615bb54.png\" /></p><p></p><p>凹语言从开源到现在大约获得了 500 个 Star 关注：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/b8/b86be71437c032ce3aa84e49ea07690a.png\" /></p><p></p><p>与何语言一样，凹语言也是社区发起的纯社区构建项目。其开始依托于 Go 语言生态、聚焦在 WASM 平台，目前已经取得了不错的进展。</p><p></p><h4>7 月洛书语言诞生 - 草根</h4><p></p><p></p><p>洛书是由陈朝臣设计的一款开源、轻量、跨平台、易拓展中文编程语言。根据仓库说明文件，其目标主要是针对现阶段国人编程需求与编程门槛的矛盾，致力于提供一种人人参与，快速构建的编程方式。语言采用 C++11 编写，目前可以在几个主流系统运行。洛书目前没有官网，其代码仓库地址：<a href=\"https://gitee.com/chen-chaochen/lpk\">https://gitee.com/chen-chaochen/lpk</a>\"</p><p></p><p>下面是项目提供的单片机开发版点 LED 灯的例子：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/3c/3c18b944d9c7000149fff187b36fa6ec.png\" /></p><p></p><p>可以容易根据加载、导入、方法等猜测其对应的含义，然后通过管理 LED 灯引脚关系，最后并在循环中控制灯的开关。</p><p></p><p>洛书作者目前可能还是一个高中同学，也开始在探索中文编程的方向。通过洛书与何语言可以发现，国内确实有更多新同学关注和试水设计新编程语言的实践。</p><p></p><h4>5 月，KCL 语言诞生 - 蚂蚁</h4><p></p><p></p><p>Kusion 配置语言（KCL）是由徐鹏飞负责设计的、基于约束的记录及函数语言。KCL 通过成熟的编程语言技术和实践来改进大量繁杂的配置，比如云原生 kubernetes 配置场景的编写，其致力于构建围绕配置更好的模块化、扩展性和稳定性，更简单的逻辑编写，以及更快的自动化集成和良好的生态延展性。徐鹏飞从清华大学毕业加入蚂蚁后就开始负责 KCL 的设计和实现工作，他的兴趣方向主要在编程语言、云原生、DevOps 等方向。目前 KCL 已经作为 KusionStack 子项目通过中国电子技术标准化研究院颁布的初级开源项目认证，项目进展势头不错。</p><p></p><p>KCL 语言的主页：<a href=\"https://kcl-lang.io/\">https://kcl-lang.io/</a>\"</p><p></p><p>下面看看如何通过 KCL 代码配置一个 Nginx 服务：</p><p></p><p><code lang=\"nginx\">import base.pkg.kusion_models.kube.frontend\n\nserver: frontend.Server {\n    image = \"nginx\"\n}\n</code></p><p></p><p>KCL 通过模型库提供了 frontend.Server 服务抽象，然后在实例化的时候制定应用的镜像即可完成服务的基本配置。这是一个面向云原生运维的领域语言。</p><p></p><p>KCL 语言目前大约有 250 多个 Star：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e2/e2d6798f68860facae1e65944894eee9.png\" /></p><p></p><p>KCL 是今年发布的语言中唯一一个面向云原生领域的语言，目前已经在蚂蚁和有赞等企业环境使用上。KCL 语言本身可能还在完善打磨中，但是企业用户的认可说明这是一个有很大需求的创新方向。</p><p></p><h3>登上 Hacker News 首页的国产语言</h3><p></p><p></p><p>因为样本太少，目前中国编程语言列表收录的只有 20 多个语言，都是刚刚诞生不久的新语言。因此我们还可以换个角度，看看有哪些国产编程语言上过 Hacker News 首页。</p><p></p><p>Hacker News 简称 HN，是《黑客与画家》作者 Paul Graham 联合创办的、Y Combinator 旗下的新闻社区，它的界面虽然丑陋，但是社区的用户质量、评论质量都非常高。很多知名的项目早期都会通过 HN 传播，比如国内的 TiDB 就多次登上过 HN 的首页。而在国产编程语言领域，目前至少有 Go+、文言、凹语言、KCL 几个语言登上过 HN 首页。</p><p></p><h4>Go+ 编程语言</h4><p></p><p></p><p>Go+ 语言是国内首席 Go 布道师许式伟发起的国产编程语言项目。</p><p></p><p>Go+ 的前身最早可以追溯到 2014 年前后。当时，许大在 Go 语言中国讨论组发过其设计的 Qlang 语言（大约是七牛语言的意识），还没有开源的时候我就找其要过代码，语言是有着 Go 语法风格的脚本语言。然后到了 2019 年，许大已经正式启动了 Go+ 语言（在 Go 语言之上扩展新的语法），并在 2020 年正式对外发布了第一个版本。中间还有一些 github 仓库地址被占用的八卦，Go+ 目前有 8000 多 Star 关注，是目前国产通用语言关注度最高的。</p><p></p><p>Go+ 的主页：<a href=\"https://goplus.org/\">https://goplus.org/</a>\"</p><p></p><p>Go+ 通过引入推导式并简化函数调用参数的方式，看起来更像脚本语言。下面是打印列表的例子：</p><p></p><p><code lang=\"makefile\">fields := [\n    \"engineering\",\n    \"STEM education\",\n    \"and data science\",\n]\n\nprintln \"The Go+ language for\", fields.join(\", \")\n</code></p><p></p><p>在 2020 年，Go+ 刚对外发布后就在 Hacker News 引起了广泛讨论，其中争论主要围绕其引入了 Python 风格的列表推导式。总之是有人欢喜有人忧，大家的口味都不尽相同。此外还有一些对 cgo 的讨论，Go+ 社区后来也针对 C 语言做了一些转化工具。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/0f/0f4b861e19935fa6b59d126af929bfb1.png\" /></p><p></p><p><a href=\"https://news.ycombinator.com/item?id=23550042\">https://news.ycombinator.com/item?id=23550042</a>\"</p><p></p><h4>文言文风格的文言</h4><p></p><p></p><p>文言是是来自卡内基梅隆大学的黄令东在大四时设计的语言，是一门以汉语文言文为基础进行程序编写所用的语言。编译器主要以 JavaScript 实作，支援将原始码编译为 JavaScript、Python 或 Ruby 程式码。文言目前关注 Star 有 18000，其仓库地址为：<a href=\"https://github.com/wenyan-lang/wenyan\">https://github.com/wenyan-lang/wenyan</a>\"</p><p></p><p>下面看看文言的循环打印的例子：</p><p></p><p><code lang=\"null\">吾有一數。曰三。名之曰「甲」。\n為是「甲」遍。\n  吾有一言。\n  曰「「問天地好在。」」。書之。\n云云。\n</code></p><p></p><p>文言编译器会翻译为以下的 JavaScript 代码：</p><p></p><p><code lang=\"javascript\">var n = 3;\nfor (var i = 0; i &lt; n; i++) {\n    console.log(\"問天地好在。\");\n}\n</code></p><p></p><p>虽然不是一个面向主流的通用语言，但是文言一经面世就引起了广泛的讨论。以下是 Hacker News 上关于文言的帖子：</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/91/91b30c31c80e9bebf225f923d89a0f6b.png\" /></p><p></p><p><a href=\"https://news.ycombinator.com/item?id=22213406\">https://news.ycombinator.com/item?id=22213406</a>\"</p><p></p><p>文言是一个非常有意思的项目，从其被国内外广泛关注可以说明中文编程是有着较大的创新空间的。</p><p></p><h4>面向 WASM 的凹语言</h4><p></p><p></p><p>在 Go 语言官方发布 13 周年文章的时候，凹语言也上了 Hacker News 首页。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f9/f99dd916e9228a544468fe7e5b13b716.png\" /></p><p></p><p><a href=\"https://news.ycombinator.com/item?id=33544641\">https://news.ycombinator.com/item?id=33544641</a>\"</p><p></p><p>当时，凹语言仓库的 Issue、Readme 和网站都是中文为主，其中争论的焦点主要是“为何不是英文”，然后衍生出“既然不是英文为何要来 Hacker News 推广”的争议。凹语言官方解释是希望中文和英文能够平等对待，之后官网和 Github 也都提供了英文的基本文档。</p><p></p><h4>面向云原生的 KCL 语言</h4><p></p><p></p><p>随着云原生影响的范围越来越大，面向该领域也出现了很多领域语言（比如 CUE、Rego、jsonnet 等），KCL 就号称是面向 DevOps 的配置策略语言。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d3/d345b7a2b0276941e401a57c74957879.png\" /></p><p></p><p><a href=\"https://news.ycombinator.com/item?id=34144566\">https://news.ycombinator.com/item?id=34144566</a>\"</p><p></p><p>我想目前大家可能更关注 DevOps 以及 KCL 语言是如何给 DevOps 带来不一样的技术和体验的。云原生和 DevOps 都是一个快速发展的行业，也是众多互联网公司关注的领域，希望 KCL 语言在该方向能有更多的沉淀。</p><p></p><h3>未来展望</h3><p></p><p></p><p>编程语言是所有软件的基础，正是因为 C 语言才造就了 UNIX 的辉煌，从而奠定了现代软件行业的走向。但是目前主流编程语言均是由西方发明，这使得主流的编程语言缺乏中国的声音，对中文的支持甚是匮乏。</p><p></p><p>如果从 2018 年算起已经过去 5 年，从疫情开始算也有 3 年，我觉得这 3-5 年可以说是新兴国产编程语言酝酿和起步的阶段。希望在未来 3-5 年，这些语言能够逐渐走向成熟、构建更大的生态！大家一起努力！</p><p></p><p>作者简介：</p><p></p><p>柴树杉，KusionStack 项目开源负责人，凹语言作者。同时也是国内最早一批 Go 语言和 WebAssembly 技术爱好者。出版了《WebAssembly 标准入门》《Go 语言高级编程》《Go 语言定制指南》等畅销图书。</p>",
    "publish_time": "2023-01-08 19:04:56",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]