[
  {
    "title": "借助AI和ML技术减少缺陷滑移，将测试验证时间缩短一半",
    "url": "https://www.infoq.cn/article/YEzcIgoYoY3SPYi2CNQY",
    "summary": "<p>可能很多人都会意识到，在软件开发项目中，验证时间经常会被拉长。为了按计划日期发布版本，发生在最后一刻的变更和缺陷修复需要验证团队具备一定的灵活性才能兑现交付承诺。于是我们不得不面对这些问题：我们能否提高灵活性？我们能否加大测试覆盖范围？我们能够提高效率？我们能否将验证时间缩短50%？</p><p>&nbsp;</p><p>在飞利浦磁共振（MR）业务系统集成与验证部门，我们正在实施我们的测试策略，预计会在两到三年内达成目标。在本文中，我将解释我们策略的两个重要“支柱”：左移和使用最先进的技术来支持我们的验证活动。</p><p>&nbsp;</p><p></p><h2>集成和验证所面临的挑战</h2><p></p><p>&nbsp;</p><p>我们面临的挑战与产品复杂性、测试中需要覆盖的配置数量的增加、并行程序执行以及分布在不同地点并与多个内部和外部供应商合作的工作模式有关。这些挑战直接影响了验证计划、工作时间分配和前导时间（lead time）。</p><p>&nbsp;</p><p>影响验证执行前导时间的一个因素是缺陷滑移（slippage），特别是如果我们在项目的后期阶段才发现缺陷。这是一个我们可以改进的地方。在验证的最后阶段，我们不应该进行“测试”……验证应该是一项证明我们的产品符合需求规格的“文档性工作”。</p><p>&nbsp;</p><p>验证总是发生在开发的最后阶段，这个阶段的“交付压力”很高。为了应对这种“压力”，我们必须在验证方式上变得更加智能和高效。我们的愿景是在减少验证前导时间的同时摆脱基于风险/影响的测试策略和在发布每一个版本时测试所有的东西！</p><p>&nbsp;</p><p>为了实现这一愿景，我们的策略侧重于关注以下几点：</p><p>&nbsp;</p><p>向移——从缺陷检测变成缺陷预防，将测试重点从验证转向需求、开发和持续集成阶段。世界级团队——为不同的验证领域建立卓越中心，并在全球范围内管理能力/专业知识，包括在荷兰的贝斯特、印度的班加罗尔和浦那和中国的苏州建立集成和验证团队。测试覆盖——重构需求：将设计与需求分离，并将需求转到适当的组件/子系统/产品级别。在产品和子系统级别改进测试设计。通过操作剖面/工作流来提高测试覆盖率，即进行更接近实际客户使用场景的测试。测试自动化——使用最先进的技术来提高效率和测试自动化覆盖率。全球测试场部署——优化跨站点的测试配置，提升测试执行灵活性。</p><p>&nbsp;</p><p>或许，推动测试和验证活动效率和有效性的最重要的因素是减少缺陷滑移。其次，它也是推动研发组织整体生产力的因素。我会详细说明这个问题。</p><p>&nbsp;</p><p>你是否正在使用或考虑使用人工智能(AI)和机器学习(ML)来提高验证过程的效率和有效性？也许我们正在做的事情会激发你去探索类似的领域。</p><p>&nbsp;</p><p></p><h2>左移——从缺陷检测转向缺陷预防</h2><p></p><p>&nbsp;</p><p>我们在这方面的策略与缺陷滑移有关。对于每一个缺陷，我们都要问三个问题：</p><p>&nbsp;</p><p>缺陷是在哪个开发阶段发现的？缺陷应该在哪个阶段被发现？是什么导致了缺陷滑移？</p><p>&nbsp;</p><p>在评估了缺陷滑移后，下一步就是查看数据。哪个开发阶段的滑移最多？这个可以通过滑移“热图”来显示：</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/68/6876a2f7bbbdb149f4420948a79d4b93.jpeg\" /></p><p></p><p>&nbsp;</p><p>你可以在帕累托图上深入了解其他细节，比如哪些子系统或功能区域显示出最高的缺陷滑移率。</p><p>&nbsp;</p><p>期望一次性解决所有问题是不现实的。我们选择前2到3个出现最多缺陷滑移的阶段，然后与多学科团队一起深入研究，以了解其中的根本原因，包括需求缺失、需求分解中出现的差异或不一致、测试用例缺失、影响评估中出现的差异等。</p><p>&nbsp;</p><p>了解根本原因让我们能够采取必要的行动做出改进，以防止在针对性的功能领域再次发生缺陷滑移。在最近的项目中，我们更加注重软件集成测试，因此验证首次通过率得到显著的提升。我们的验证时间表变得更加可预测。下一步是将重点转向开发和开发测试阶段。</p><p>&nbsp;</p><p></p><h2>在测试中应用机器学习和人工智能</h2><p></p><p>&nbsp;</p><p>如前所述，验证总是发生在项目的最后阶段，这一阶段的压力很大。我们的策略将有助于应对这种随“压力”而来的挑战，但我认为还有更多的可能性，例如，机器学习（ML）和人工智能（AI）可以帮助我们在测试方面变得更加智能吗？</p><p>&nbsp;</p><p>我们目前正在探索一些领域，我认为ML和AI可以在这些领域发挥作用。</p><p>&nbsp;</p><p></p><h3>分析基础系统数据</h3><p></p><p>&nbsp;</p><p>我们可以访问已安装的基础系统的日志文件，用来提高我们产品的质量和可靠性。通过了解客户如何使用系统，我们可以设计出尽量接近产品真实使用情况的测试用例，从而提高测试覆盖范围——这些信息可以从日志文件中提取。</p><p>&nbsp;</p><p>客户数据工作流的一个重要方面是扫描并生成不同的解剖图像。我们的客户根据自己的偏好创建扫描协议来优化对比度、分辨率、扫描速度等，导致的结果是不同的解剖结构使用了大量的扫描协议。因此，要为验证活动创建输入并在可接受的验证时间表内执行完它们是不现实的。</p><p>&nbsp;</p><p>于是我们问自己：在整个已安装的基础系统中是否存在一些可以代表典型应用场景的扫描协议？通过数据挖掘和过滤技术，我们可以在几分钟内为超过160个解剖场景生成典型的扫描协议，这是无法通过人工手动实现的。我们得到了一组可管理的扫描协议，涵盖了不同的解剖结构，具有最佳的可实现的覆盖范围，并尽可能接近真实客户使用场景。下一步，我们正在尝试提取可以与这些扫描协议相结合的典型操作，如图像后处理、存档或打印数据等。</p><p>&nbsp;</p><p></p><h3>自动化变更影响分析</h3><p></p><p>&nbsp;</p><p>我们正在试验产品级别的代码覆盖率度量。如果能够在产品级别为已经自动化的测试进行代码覆盖率度量，我们就可以训练出检测测试用例与代码之间可追溯性的算法。然后，如果修改了代码，我们是否能够自动识别出相关的测试并作为CI管道的一部分来执行？事实上，我们正在使用人工智能来自动分析代码变更影响。</p><p>&nbsp;</p><p>如果我们可以加入测试执行结果(通过/失败的测试)和缺陷的历史数据会怎么样？然后我们能够自动地包含适当级别的回归测试吗？我们目前正在探索这一想法——概念验证仍然需要做一些计划。</p><p>&nbsp;</p><p></p><h3>合成数据</h3><p></p><p>&nbsp;</p><p>测试MR功能需要图像数据。在这方面，我们主要使用体模（Phantom）。体膜是一种特殊构造的物体，用于磁共振扫描仪成像。体模包含了扫描时产生一致和可预测结果的模式和流体。使用体模会导致我们错过使用扫描患者真实图像数据进行测试时可能遇到的解剖结构变化。对于内部的验证活动，我们可以扫描志愿者，但可用性和图像数据仍然十分有限。所以，我们正在探索将合成数据作为测试输入。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3f/3f9b199c934e41f281f020e12d2070ca.jpeg\" /></p><p></p><p>&nbsp;</p><p>“无限”的数据和数据的多样性将增加测试覆盖范围。用于自动化测试的合成数据有助于我们提高测试系统的利用率。而且，GDPR不适用于合成数据。</p><p>&nbsp;</p><p></p><h3>缺陷分类</h3><p></p><p>&nbsp;</p><p>我们探索的另一个可能应用AI的领域是缺陷管理。假设我们可以根据标题、缺陷描述和属性自动将缺陷分配给相应的团队去诊断或解决，那会怎样呢？我们就可以知道一个缺陷是否与之前提交的缺陷重复了，或者根据之前拒绝的理由建议再次拒绝它。</p><p>&nbsp;</p><p>目前，所有缺陷都由缺陷审查委员会（DRB）负责管理。DRB由来自不同领域/职能的专家组成，他们花费大量的时间阅读和理解缺陷内容，并决定下一步的措施。如果可以不经DRB讨论评审，并同意由AI算法提出的提案来分配缺陷，那么时间将会显著减少。使用现有缺陷数据库的训练数据和测试数据的效果看起来不错，主要的问题在于缺陷的某些属性数据发生了变化，例如，组织/团队名称发生了变更。在训练算法之前，需要进行数据验证和填充。</p><p>&nbsp;</p><p></p><h2>提升效率的好处</h2><p></p><p>&nbsp;</p><p>我们最希望获得的好处是提高验证的可预测性和缩短验证的前导时间。如前所述，我们的目标是将验证前导时间缩短50%。我们因此能够在设计和集成过程中越来越多地利用我们的专业知识，而不仅仅是执行验证测试。我们已经开始了这个旅程，但还没有达到终点。</p><p>&nbsp;</p><p>提高可预测性的一个重要因素是减少缺陷滑移。如果每一个开发阶段滑移了一个缺陷，都会增加修复成本。在验证阶段发现缺陷需要进行重新验证，并带来额外的回归测试。假设每个缺陷平均需要3到5天的工作量用于怎段、修复和验证，那么你就可以轻松地计算出可以节省多少工作量。每个人都更愿意在可创造价值的事情上投入。</p><p>&nbsp;</p><p></p><h2>到目前为止，我们学到了什么</h2><p></p><p>&nbsp;</p><p>基于对缺陷滑移的管理和分析将焦点左移，这确保了我们的关注点是正确的。在接近产品实际用户使用场景的测试覆盖中，AI和ML技术已经被证明非常有用。第一批结果显示，在影响分析和（合成）数据创建等领域的效率提升看起来很有希望。但我们也才刚刚开始，仍然需要在旅程中不断学习。</p><p>&nbsp;</p><p>我们也想要改进其他东西，但也必须接受我们不能一次做完所有事情的现实。我们需要做出选择，快速获胜有助于快速取得成果，推动变革，并获得继续进行后续改进的预算。怀有愿景、选择战略，并制定路线图和优先事项是推动持续改进的一个途径。这将为我们继续履行运营承诺提供“喘息的空间”。</p><p>&nbsp;</p><p></p><h2>未来ML和AI将为测试领域带来些什么</h2><p></p><p>&nbsp;</p><p>随着人工智能算法越来越多地集成到我们的产品中，对于算法的训练和验证来说，有充足的高质量数据就变得至关重要。我预计其他行业也将如此，我坚信合成数据将成为一个重要的推动因素。因为我们处理的是病人的数据，所以GDPR使得使用真实图像数据变得越来越困难，从这个角度看，合成数据将会有所帮助。</p><p>&nbsp;</p><p>我还相信，鉴于我们的案例，整个行业也将会采用人工智能/机器学习技术。例如，集成和验证历史数据为自动化影响评估并确定需要进行哪些测试提供了可能性。人工智能还支持自动计划适当级别的（回归）测试。分析和处理基础系统的数据，了解客户如何使用我们的产品，这对于提高测试覆盖范围来说至关重要。设计好客户如何使用我们产品的可检测性，以及能够连接到基础系统获取这些信息，都是至关重要的。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/test-strategy-verification-effectiveness-efficiency/\">https://www.infoq.com/articles/test-strategy-verification-effectiveness-efficiency/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/NuKxISZRb5sjg1lXgmeN\">AI大模型背后的惊人数字：问ChatGPT 5个问题，耗水500毫升？训练一次GPT-3，碳排放量相当于开车往返月球？</a>\"</p><p><a href=\"https://www.infoq.cn/article/TSJbOkWweAvFh44Oo2dL\">企业级生成式AI应用，如何克服“幻觉”问题</a>\"</p>",
    "publish_time": "2023-09-22 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "创邻科技创始人、CEO 张晨博士确认出席 FCon ，分享新一代 HTAP 图技术在智能风控领域的实践与挑战",
    "url": "https://www.infoq.cn/article/TDdJaEAY6dBu474REtL0",
    "summary": "<p><a href=\"https://fcon.infoq.cn/2023/shanghai/?utm_source=infoqweb&amp;utm_medium=atricle\">FCon 全球金融科技大会</a>\"，将于 11 月在上海召开。创邻科技创始人、CEO 张晨博士将发表题为《<a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5553?utm_source=infoqweb&amp;utm_medium=article\">新一代 HTAP 图技术在智能风控领域的实践与挑战</a>\"》主题分享，介绍最新一代图存储计算框架以及其实现存储计算一体化的底层逻辑，以及 Galaxybase 图平台在多家金融机构中的业务实践和应用成效。</p><p></p><p><a href=\"https://fcon.infoq.cn/2023/shanghai/presentation/5553?utm_source=infoqweb&amp;utm_medium=article\">张晨博士</a>\"，浙江创邻科技有限公司 CEO，人社部 2017 年度“中国留学生回国创业启动支持计划”重点类项目人才之一，浙江省千人计划专家，杭州市全球引才“521”计划专家，浙江省钱江人才计划、杭州市西湖区 325 海外引才计划 A 类项目人才，浙商青云榜 30 强，加拿大滑铁卢大学计算机科学博士、麦吉尔大学计算机科学博士后。</p><p></p><p>曾担任美国运通大数据科学家，参与研发美国运通内部第一批大数据挖掘与机器学习的风控算法；其博士论文中基于 HBase 的分布式事务处理的论文和谷歌基于 Bigtable 的分布式事务处理科研同时独立发表，成为了硅谷初创 Splice Machine 的核心底层技术之一，因此受邀成为软件架构师，研发了世界首款基于 Hadoop 的关系型数据库 Splice Machine。</p><p></p><p>加拿大 Graph Intelligence 联合创始人，搭建了世界首款深度集成于 Hadoop 的原生分布式图数据库。回国创立浙江创邻科技有限公司，研发了全自主知识产权的分布式图数据库 Galaxybase，参与编写了中国信通院《图数据库白皮书和基础功能标准》。他在本次会议的演讲内容如下：</p><p></p><p>演讲：新一代 HTAP 图技术在智能风控领域的实践与挑战</p><p></p><p>近年来，人工智能、云计算、大数据等信息技术的日渐成熟，推动着金融机构加速数字化转型，业务逐渐朝着智能化、线上化、互联网化发展，进而对风控业务提出更高要求。如何克服风控场景中时效性和复杂度的双重痛点，成为金融机构的关注焦点。构建一个既能支撑分析业务，又能支撑实时业务（OLTP）的 HTAP 数据库，成为重要课题。</p><p></p><p>在此背景下，Galaxybase 图平台真正意义上实现了图领域的 HTAP 能力。不同于传统图数据库与图计算相分离的架构，它通过融合 OLTP 和 OLAP 能力以支撑实时决策，满足金融机构在智能风控场景下对于大规模数据高效存储、查询和实时计算的迫切需求。</p><p></p><p>本次演讲将介绍最新一代图存储计算框架以及其实现存储计算一体化的底层逻辑。深层讲解 Galaxybase 图平台在多家金融机构中的业务实践和应用成效。实践案例包括 Galaxybase 图平台赋能某国有大行信用卡中心构建信用卡实时在线申请反欺诈系统，实现实时、立体、全生命周期的信用卡用户管理与风险防控；以及某国有大型商业银行以 Galaxybase 图平台为底座打造企业级图平台，通过构建完整统一的风险大图以实现事前预警、事中识别、事后分析的全流程风控闭环。通过演讲，将帮助大家了解金融客户如何利用金融科技创新来实现金融风控的质的飞跃。</p><p></p><p>演讲提纲：</p><p></p><p>数字化转型中的智能风控挑战Galaxybase 图平台技术架构介绍Galaxybase HTAP 智能风控解决方案金融风控领域的成功案例</p><p></p><p>你将获得：</p><p></p><p>○ 了解新一代 HTAP 图技术的架构和优势</p><p>○ 了解图技术在金融风控领域的应用价值</p><p>○ 了解头部金融机构在图技术领域的最新探索实践</p><p></p><p>除上述演讲外，FCon 上海还将围绕 DevOps 在金融企业落地实践、金融行业大模型应用、创新的金融科技应用、金融实时数据平台建设之路、金融安全风险管控、数据要素流通与数据合规等进行交流。</p><p></p><p>FCon 上海 2023，相约 11 月！现在购票，前 100 人可享 5 折特惠购票，咨询购票请联系：17310043226（微信同手机号）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8ec7f7fb25c7949931b2b8a5deffddd.png\" /></p><p></p>",
    "publish_time": "2023-09-22 11:20:25",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "借助Arm SIMD指令提升Java应用性能",
    "url": "https://www.infoq.cn/article/ISTQo2dzKEy4FTsuEtPq",
    "summary": "<p><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/18/7d/188a1e57b75e7d0ed5281ff231e4497d.png\" /></p>",
    "publish_time": "2023-09-22 14:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "思科史上最大规模收购：2047亿元拿下Splunk，有人“内幕”交易获46000%回报？",
    "url": "https://www.infoq.cn/article/VVL0kfRbYXJH7W2pxiUA",
    "summary": "<p>&nbsp;</p><p></p><blockquote>原来日志分析这么值钱？</blockquote><p></p><p>&nbsp;</p><p>本周四，思科公司表示，将以每股157美元的价格收购网络安全软件厂商Splunk。这笔现金交易总值约280亿美元（折合约2047 亿元人民币），成为思科有史以来手笔最大的收购活动。此次收购价格相当于思科公司总市值的13%左右。</p><p>&nbsp;</p><p>借助 Splunk，思科获得了一个可以很好地融入其安全业务的可观察性平台，帮助客户更好地了解安全威胁，同时还可以借助AI技术解析大量日志数据以解决其他问题，如了解系统故障等。</p><p>&nbsp;</p><p>显然，两家公司的CEO都对这笔交易感到高兴。思科CEO Chuck Robbins强调了运用人工智能及Splunk技术中的AI要素实现网络保护的重要意义。Robbins在声明中指出，“双方合兵一处，将共同推动下一代AI安全性与可观测性。从威胁检测与响应、再到威胁预测和预防，我们将帮助不同规模的组织机构拥有更高的安全性和弹性。”</p><p>&nbsp;</p><p>与此同时，Splunk 总裁兼首席执行官Gary Steele 滔滔不绝地谈论了合并后公司的可能性。“与思科的联合，代表了 Splunk 发展历程的下一阶段，加速了我们帮助全球组织变得更有弹性的使命，同时为我们的股东提供了直接且引人注目的价值，”他说道，股东们肯定会对这笔交易感到满意。据悉，周四收盘时，Splunk股价上涨21%，而思科股价下跌4%。</p><p>&nbsp;</p><p></p><h2>双强结合还是抱团取暖？</h2><p></p><p>&nbsp;</p><p>“我们将共同成为全球最大的软件公司之一。”Robbins在分析师电话会议上说道。</p><p>&nbsp;</p><p>Constellation Research 创始人兼首席分析师 Ray Wang 认为，两家公司有很好的合作潜力。“当你可以通过人工智能和可观察性来处理威胁检测和安全问题时，这就是一种自然的协同作用，”Wang 表示，“客户得到了更好的网络安全，Splunk得到了一把钥匙，而思科在推动人工智能估值方面有了更好的故事。因此，思科网络遥测和Splunk可观测平台将为客户提供一个巨大的数据视图。”</p><p>&nbsp;</p><p>网络安全专家Allen Westley 也评价称，这项交易能使用户充分利用两个领域的优点：Cisco 的硬件和 Splunk 的软件。思科以其硬件产品而闻名，例如路由器、交换机、防火墙和接入点。然而，这些产品一直面临着来自公有云的压力，其传统的后端市场被侵蚀。思科一直试图通过专注于软件和服务（尤其是安全领域）来实现收入来源多元化。Splunk 在各个行业拥有庞大而忠诚的客户群，包括金融服务、医疗保健、零售和政府。Splunk 还拥有强大的合作伙伴生态系统，其中包括思科本身。</p><p>&nbsp;</p><p>显然，思科对这次收购抱有很高的期待。这笔交易预计将于2024年第三季度完成，思科表示交易后首年的毛利率应该有所提高，第二年则有望实现非公认会计准则（Non-GAAP）收益增长。</p><p>&nbsp;</p><p>在Splunk之前，思科数额最大的交易就是2006年以69亿美元收购了有线电视机顶盒制造商 Scientific Atlanta。而当时，思科的市场已经成功突破1000亿美元大关。但随着公有云大量吞噬思科旗下的传统后端业务，该公司迫切需要找到新的、规模可观的收入来源，而网络安全就成为最有希望的探索方向。</p><p>&nbsp;</p><p>在2022财年，思科将其核心交换与路由业务的名称从“基础设施平台”变更为“安全、敏捷网络”，重点关注如何在网络设备中内置安全设计。思科公司还有一个名叫“端到端安全”的独立报告部门，统筹旗下各类安全产品。</p><p>&nbsp;</p><p>截至7月29日的上一财年，思科核心业务收入增长22%、达到291亿美元，其中安全部门销售额增长4%，达到39亿美元。</p><p>&nbsp;</p><p>不过，思科股价今年的表现略逊于纳斯达克大盘指数，涨幅为12%，而整体科技股指数上涨达27%。过去五年间，相较于行业整体来说，思科股价的回报更是难以令人满意。在此期间，思科股价仅上涨约10%，而纳斯达克科技股整体涨幅高达66%。</p><p>&nbsp;</p><p>Robbins在本周四接受采访时表示，他预计思科和Splunk之间的组织协同效应将在12至18个月内逐渐展现。他还提到，思科将以现金加债务的组合方式为此次交易筹集资金。</p><p>&nbsp;</p><p>收购消息公布后，不少分析师就双方业务存在交集、可能面临监管审查和思科收购价格等问题提出了质疑。更有分析师在电话会议上尖锐指出，Spunk的云转型举措“平庸无奇”。</p><p>&nbsp;</p><p>Spunk银行的客户也吐槽道，“我们喜欢 Splunk，在技术监控和商业智能方面投入了大量资金。但一段时间后，它的价格变得如此之高，我们就全部砍掉了，转移到 kdb/tableau/elk/任何成本更低的蹩脚系统。”</p><p>&nbsp;</p><p>近年来，Splunk逐渐放弃了本地“客户自管”方法，转而专注于面向云环境的产品。</p><p>&nbsp;</p><p>交易完成后将加入思科高管团队的Splunk公司CEO Gary Steele在电话会议上指出，“我们仍拥有不少大客户，他们非常依赖我们在其客户自管环境中提供的功能。”Steele一年多前刚刚加入Splunk。在此之前，他曾担任网络安全厂商Proofpoint的CEO，这家公司于2021年被笲股权公司Thoma Bravo以123亿美元收入囊中。</p><p>&nbsp;</p><p>“我认为可观察性和安全工具非常适合思科，并且可以与硬件很好地捆绑在一起。出于这个原因，我敢打赌 Splunk 在 Cisco 的领导下也能做得相当不错。”称曾在思科工作的“cliffcrosland”表示看好这项收购。</p><p></p><h2>“内幕”交易获得46000%回报？</h2><p></p><p>&nbsp;</p><p>在大家都将目光放在收购上时，有眼尖的网友发现，有一位“幸运”的操盘手以2.2万美元撬动了总值1000万美元的Splunk杠杆，回报率高达46000%。</p><p>&nbsp;</p><p>因为这一笔“恰到好处”的操作引发了内幕交易指控，这位操盘手在网络安全软件公司Splunk开盘之后迅速获得近46000%的回报。这个时机拿捏得极为巧妙，毕竟就在一天之前，思科公司刚刚宣布要收购Splunk这家AI驱动网络安全厂商。</p><p>&nbsp;</p><p>在周四的一条推文中，专司提供交易数据的Unusual Whales发现了一笔“疯狂操作”。有人在周三砸下2.2万美元，连开127笔Splunk看涨期权。在金融领域，看涨期权代表一种合同，其本质就是允许交易者在特定日期之前以约定的价格购买股票或债券等资产。就在这笔操作的几个小时之前，思科刚刚宣布了这项今年之内规模最大的技术收购。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a0/a06c311dd5a8a45ced462d685c9b4a03.png\" /></p><p></p><p>&nbsp;</p><p></p><blockquote>知道什么叫疯狂操作吗？昨天，有人开了127笔Splunk看涨期权，总价格为2.2万美元，明天到期。而就在今天，思科宣布以280亿美元收购Splunk，后者股价飙升20%。就是说，这份合同昨天价值0.04美元，今天价值18.30美元。他们带着45650%的回报变现离场……&nbsp;</blockquote><p></p><p>&nbsp;</p><p>没错，这位操盘手随后离场，在不到24小时之内就把2.2万美元的投资变成了1000万。社交媒体观察人士纷纷猜测，这怕不是赤裸裸的内幕交易。Unusual Whales还称，这并不是Splunk 唯一不寻常的交易，“昨天的流量警报突出显示了接近Splunk 新收购价格的类似交易。”</p><p>&nbsp;</p><p>彭博资讯分析师James Seyffart认为，“此人要么是市场上最愚蠢的家伙，要么就是最幸运的家伙。”</p><p>&nbsp;</p><p>“如果情况属实，那这么明目张胆的内幕操作肯定会令其东窗事发。美国金融业监管局（FINRA）和证券交易委员会（SEC）绝不会坐视不理，而且此类事件的处理速度一般都很快，特别是激起这等巨大反响的情况。”Seyffart说道。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/b6/b6114adeb1368a0dce9d1dd641d2ddce.png\" /></p><p></p><p>“这可能只是正常的赌博。但这几乎肯定是内幕交易，无论是哪种方式，肯定会有人接受 SEC 的访问。”有网友表示。</p><p>&nbsp;</p><p>另外，根据监管文件，如果思科退出交易或者收购并监管机构阻止，思科仍须向Splunk支付14.8亿美元的收购终止费。而如果Splunk一方选择放弃，则需要向思科支付10亿美元赔偿。</p><p>&nbsp;</p><p></p><h2>“收购是推动公司营收增长的一种方式”</h2><p></p><p>&nbsp;</p><p>“我既惊讶又完全不惊讶。很惊讶是因为 Splunk 是一个很难吞下的大骨头，不奇怪是因为思科长期以来就对该领域感兴趣（他们试图收购 Datadog 但被拒绝）”有网友说道。</p><p>&nbsp;</p><p>从竞争对手到“衍生公司”，思科以<a href=\"https://www.infoq.cn/article/2015/07/cisco-opendns\">收购</a>\"来构建公司闻名。在Splunk之前，思科公司2019年曾向软件公司 Datadog 提出收购要约，收购价格远高于Datadog首次公开募股时设定的 70 亿美元估值。但据报道，当时Datadog 不准备放弃自己的 IPO 计划。在 Datadog 看来，随着时间的推移，作为一家上市公司，它的价值可能会更高。</p><p>&nbsp;</p><p>当时就有人指出，思科未来可能寻求类似性质的交易以助其转型。后来思科的收购就一直没有停过。单在今年，思科就共收购了四家安全厂商：威胁检测平台Armorblox、身份管理供应商Oort，外加关注云安全领域的Valtix与Lightspin。</p><p>&nbsp;</p><p>思科首席财务官 Scott Herren 表示，公司的现金状况使其能够在看到机会时灵活地进行战略收购。</p><p>&nbsp;</p><p>他认为收购是推动公司营收增长的一种方式，同时有助于推动公司的整体战略目标。“当我思考我们的收购策略与公司整体战略的契合点时，实际上是在寻找我们需要的创新，并找到与我们的战略非常契合的公司，”Herren 说道。</p><p>&nbsp;</p><p>“然后让我们谈谈这笔交易……它是否有意义，或者是否存在……我们可以满足的卖方价格点，我认为这显然将继续成为我们作为一家公司战略的核心部分在那里寻找创新并推动收入增长，”他说。在思科看来，既推动创新又推动营收增长的收购案例包括2018年的Duo Security、 2020年的ThousandEyes和2021年的Acacia Communications 。</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.splunk.com/en_us/blog/leadership/splunk-and-cisco-unite-to-accelerate-digital-resilience-as-one-of-the-leading-global-software-companies.html\">https://www.splunk.com/en_us/blog/leadership/splunk-and-cisco-unite-to-accelerate-digital-resilience-as-one-of-the-leading-global-software-companies.html</a>\"</p><p><a href=\"https://twitter.com/unusual_whales/status/1704870849831125446\">https://twitter.com/unusual_whales/status/1704870849831125446</a>\"</p><p><a href=\"https://techcrunch.com/2021/08/23/how-cisco-keeps-its-startup-acquisition-engine-humming/\">https://techcrunch.com/2021/08/23/how-cisco-keeps-its-startup-acquisition-engine-humming/</a>\"</p><p><a href=\"https://realmoney.thestreet.com/investing/technology/cisco-reported-offer-for-datadog-software-ambitions-15096681\">https://realmoney.thestreet.com/investing/technology/cisco-reported-offer-for-datadog-software-ambitions-15096681</a>\"</p><p><a href=\"https://medium.com/@allen.westley/ciscos-splunk-acquisition-what-you-need-to-know-6b2a6843f748\">https://medium.com/@allen.westley/ciscos-splunk-acquisition-what-you-need-to-know-6b2a6843f748</a>\"</p><p><a href=\"https://www.cnbc.com/2023/09/21/cisco-acquiring-splunk-for-157-a-share-in-cash.html\">https://www.cnbc.com/2023/09/21/cisco-acquiring-splunk-for-157-a-share-in-cash.html</a>\"</p>",
    "publish_time": "2023-09-22 14:45:31",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "取代Vue和React？25年码龄程序员不满Web开发现状创建新框架Nue JS，能减少90%代码量！",
    "url": "https://www.infoq.cn/article/g0GvSuHjpVAA1Pbx8SO7",
    "summary": "<p></p><blockquote>是重复造轮子，还是颠覆式创新？</blockquote><p></p><p>&nbsp;</p><p>近日，前端开发者 Tero&nbsp;Piirajinen 推出了一个名为 Nue.js 的极简化前端开发工具，并迅速引发社区讨论。Piirajinen&nbsp;在 Hacker News 上表示，它是 React、Vue、Next.js、Vite、Svelte 和 Astro 的替代品。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/cd/cd98ef813341b88ab00a58c8d94f1ca2.png\" /></p><p></p><p>据悉，Nue 源自德语单词 neue，与英语中的“new”同义。它能帮助具备 HTML、CSS 和 JavaScript 知识的开发者构建服务器端组件与响应式界面。具体来说，Nue 有三大优势：改善开发者体验；加快项目进度；加快页面加载速度。而其最大的亮点在于，它能将用户界面代码量控制在其他同类方案的十分之一。</p><p>&nbsp;</p><p>Nue 作者 Piirainen 是一位来自赫尔辛基的前端开发者，并在开源项目、技术产品和初创企业中工作了 25 年以上，比较知名的成果包括 Riot.js、Flowplayer 和 jQuery 等。目前，Piirainen 正在独力开发 Nue.js 项目，并积极寻求更多贡献者的加入。</p><p>&nbsp;</p><p>Piirajinen 在 Hacker News 上的帖子中提到，过去 12 个月以来，他一直从事项目开发工作，最近还转为全职。他的开发目标有两个：</p><p>&nbsp;</p><p>Nue JS——一个用于构建用户界面的小型（压缩后仅为 2.3 kb）JavaScript 库。它类似于 React 和 Vue，但去掉了 hooks、effects、props、portals、watchers、injects、suspensions 等各种抽象元素。只要开发者具备 HTML、CSS 和 JavaScript 方面的基础知识，就完全可以轻松上手。它支持服务器端渲染和客户端响应式组件，设计灵感来自 Vue 2.0 和 Riot.js（Piirainen 本人也是 Riot 的原作者）。Nue 工具——一套完整的前端开发工具集。在完成之后，Nue 将能够取代 Vite、Next.js 和Astro 等系统，这也是本项目的最终发展目标。</p><p>&nbsp;</p><p>Piirajinen&nbsp;计划在 2024 年 3 月之前完成所有工具的准备工作，但具体时间取决于问题数量、开源维护工作量，以及他自己的判断水平。目前，Nue 已在 GitHub 上开源，并遵循 MIT 许可证。</p><p>&nbsp;</p><p>GitHub 链接：</p><p><a href=\"https://github.com/nuejs/nuejs\">https://github.com/nuejs/nuejs</a>\"</p><p></p><h2>为什么创建 Nue？</h2><p></p><p>&nbsp;</p><p>Piirajinen 表示，他创建 Nue 的主要原因是他对于当前 Web 开发态势并不满意，主要问题包括相关工具太复杂、代码难以理解、编译时间长、网站过于臃肿等等。</p><p>&nbsp;</p><p>此前，Piirajinen 在 Flowplayer、Muut 和 Volument 担任首席产品官（CPO）时，就有一些不太愉快的前端开发经历。虽然项目最初进展顺利，但很快就变得难以维护。经过几个月的开发，工作节奏开始明显放缓，原本乐观的未来计划也越来越难以落地。</p><p>&nbsp;</p><p>Piirajinen 认为，不只是他自己有这种感觉，整个前端开发行业都面临危机。Piirajinen 提到，他读过不少相关文章，开发者们纷纷表示前端令他们身心俱疲。因此，Piirajinen 想要做点什么，改变这令人恼火的现实。</p><p>&nbsp;</p><p>Piirajinen 计划以极简化方式从零开始构建一切，并用到了不少“旧有”创新成果，例如渐进式增强、关注点分离和语义网页设计。而 Nue 是 Piirajinen 改变现状的一次雄心勃勃的尝试，希望能为 JS 和 UX 开发者们提供极简化工具。它强调恢复 Web 标准模型的荣光，并引入现代创新的力量。Nue 想要让 Web 开发再次变得有趣。</p><p>&nbsp;</p><p>Piirainen 表示，Nue 的灵感主要来自 Jarred Sumner 开发的 Bun。这是一款新的 JS 运行时、捆绑器、测试运行器外加 NPM 兼容型包管理器。Piirainen 认为，Bun 希望让 JavaScript 变得更快，而 Nue 希望让前端开发变得更快。Nue+Bun 将成为面向前端开发者的完美组合。值得一提的是，Jarred Sumner 和 Piirainen 一样，也是一个单兵作战的开发者。</p><p>&nbsp;</p><p>Nue 的其他灵感来源还包括：</p><p>&nbsp;</p><p></p><blockquote>Salvatore Sanfilippo 的推文：“纵观如今的Web，我发现开发实践仍然没能遵循最基本的导航和可用性规则。尽管硬件发展一刻不停，但Web呈现速度仍然很慢。我只能认为，现代前端开发已经走进了死胡同。”</blockquote><p></p><p>&nbsp;</p><p></p><blockquote>乔布斯的名言：“一切应该以客户体验为起点，再据此倒推技术实现。”</blockquote><p></p><p>&nbsp;</p><p></p><blockquote>Dieter Rams 的名言：“少，即是多。”</blockquote><p></p><p>&nbsp;</p><p>基于以上几点，Piirainen 给 Nue 项目定下了三条指导原则：</p><p>&nbsp;</p><p>关注点分离：让人们各自专注自己的专业领域，由此加快交付速度；内容创作者专注于内容，UX 开发者专注于交互设计，JS 开发者负责前端中的后端部分。&nbsp;“只用最普通的 Web 元素”：Nue 将努力发掘标准 HTML、CSS 和 JavaScript 当中蕴藏的力量。极简主义：小型代码库更易于维护和扩展，发生错误的几率也会更低。</p><p></p><h2>代码量减少 90%，Nue 主张极简主义</h2><p></p><p>&nbsp;</p><p>据了解，Nue 的最大优势就是帮助开发者以更少的代码达成相同的效果。在一个项目中，同样的功能实现之间存在 2 到 10 倍的代码量差异并不罕见。以用 Nue 编写的自定义列表框组件为例：React 版本需要使用 2500 行 JS 代码，Nue 版本则能够在保持 50% 到 80% 功能的前提下，把代码量控制在十分之一。</p><p></p><h4>“这就是 HTML”</h4><p></p><p>&nbsp;</p><p>Nue 使用的是基于 HTML 的模板语法：</p><p>&nbsp;</p><p><code lang=\"null\"></code></p><div><code lang=\"null\">\n  <img src=\"https://www.infoq.cn/article/%7B%20img%20%7D\" />\n  <aside>\n    <h3>{ title }</h3>\n    <p>{ desc }</p>\n    \n  </aside>\n</code></div><p></p><p>&nbsp;</p><p>类似于 React 宣称其“就是 JavaScript”，Nue 也可被认为“就是 HTML”。而这样的特性，对于专注于交互设计、可访问性和用户体验的 UX 开发者来说堪称完美。</p><p>&nbsp;</p><p>开发者可以点击此处（<a href=\"https://nuejs.org/compare/component.html\">https://nuejs.org/compare/component.html</a>\"）查看 Nue 编码风格与React、Vue、Svelte、Tailwind 和 Astro 之间的异同。</p><p></p><h4>为扩展而生</h4><p></p><p>&nbsp;</p><p>据介绍，Nue 之所以能够为前端开发带来新的可扩展水平，主要归功于以下三大因素：</p><p>关注点分离，易于阅读的代码比“一团乱麻”的代码更易于扩展。极简主义，100 行代码肯定比 1000 行代码更易于扩展。人员分离。保证 UX 开发者只须关注前端，JS/TS 开发者只须关注前端的后端，这样团队技能就会达到最佳平衡。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b7/b7216477583676cb56c9ba101c9c08fb.png\" /></p><p></p><p>UX 开发者与 JavaScript 开发者能够并行工作、互不干扰，最佳结果也自然会由此产生。</p><p></p><h4>对样式解耦</h4><p></p><p>&nbsp;</p><p>Nue 并不主张使用域 CSS、Tailwind 或者其他紧密耦合的 CSS-in-JS 框架。相反，它认为最好将样式跟布局和结构区分开来，主要是因为：</p><p>有助于增加可复用代码：因为样式不会被硬编码进组件，所以同一组件可以根本页面或上下文而呈现出不同效果。不会弄乱代码：纯HTML或纯CSS代码，其理解难度显然大大低于乱七八糟的组合代码。更快的页面加载速度：通过对样式解耦，开发者可以轻松从次CSS中提取主CSS，并将HTML页面保持在关键的14 kb限制以内。</p><p></p><h4>四种组件类型</h4><p></p><p>&nbsp;</p><p>Nue 拥有丰富的组件模型，允许开发者使用不同类型的组件构建起各类应用：</p><p>&nbsp;</p><p>服务器组件：在服务器端渲染，可以帮助我们构建起以内容为中心的网站，无需JavaScript 即可提升加载速度，并可接受搜索引擎的抓取。响应式组件：在客户端渲染，可帮助开发者构建动态岛或单页应用程序。混合组件：一部分在服务器端渲染、一部分在客户端渲染。这类组件能帮助开发者构建响应式、SEO 友好的组件，例如视频标签或图片库。通用组件：既可使用在服务器端，又可使用在客户端，且效果相同。</p><p></p><h4>UI 库文件</h4><p></p><p>&nbsp;</p><p>Nue 允许大家在单个文件上定义多个组件，这无疑是种能把相关组件整理起来并简化依赖项管理的绝佳方法。</p><p>&nbsp;</p><p><code lang=\"null\"><!-- shared variables and methods -->\n\n \n<!-- first component -->\n</code></p><article><code lang=\"null\">\n  ...\n</code></article><code lang=\"null\">\n \n<!-- second component -->\n<div>\n  ...\n</div>\n \n<!-- third component -->\n<time>\n  ...\n</time></code><p></p><p>&nbsp;</p><p>使用库文件能让我们的文件系统结构看起来更加整洁，用于粘合不同部分的样板代码也会更少，更有助于把各种库打包起来以供其他开发者使用。</p><p></p><h4>工具组合更简单</h4><p></p><p>&nbsp;</p><p>Nue JS 提供用于服务器端渲染的简单 render 函数和用于为浏览器生成组件的 compile 函数。而且无需像 Webpack 或 Vite 那类大型捆绑器那样控制你的开发环境，可以直接将 Nue 导入到项目当中。</p><p>&nbsp;</p><p>当然，如果开发者需要打理几百上千个 NPM 依赖项，那么在业务模型层上使用捆绑器确实有其现实意义。Bun 和 esbuild 都是性能出色的理想方案选项。</p><p></p><h4>相关用例</h4><p></p><p>&nbsp;</p><p>Nue JS 是一款多功能工具，支持服务器端与客户端渲染，可帮助开发者构建起以内容为中心的网站和响应式单页应用程序。</p><p>UI 库开发：能够为响应式前端或服务器生成的内容创建可复用组件。渐进式增强 Nue JS：这是一套堪称完美的微型库，可通过动态组件或“岛”增强以内容为中心的网站。静态网站生成器：只需将其导入项目即可准备渲染，无需借助捆绑器。单页应用程序：可配合即将推出的 Nue MVC 构建起更简单、更具可扩展性的应用程序。Templating&nbsp;Nue：一款用于生成网站和 HTML 电子邮件的通用工具。</p><p></p><h2>开发者：Nue 很棒，但取代 Vue 或 React 还为时尚早</h2><p></p><p>&nbsp;</p><p>对于这样一个创新项目，不少社区网友给予肯定。网友 aziis98 大赞 Nue 是一个“很棒的项目”，即使是像他这样一个 Vite 和 Astro 的忠实粉丝，也感到“耳目一新”。</p><p>&nbsp;</p><p>网友 ilrwbwrkhv 评论称：</p><p>&nbsp;</p><p></p><blockquote>真的很棒。尽管 Web 一直在不断变化，但层出不穷的“新框架”还是无法让人们满意，而且全部主流框架也都惊人地相似。我们确实有必要从头开始考量需求，并拿出一套更小、内存效率更高的解决方案。这里也希望有更多的前端开发者停止人云亦云，尝试独立思考，想想过去的老前辈是怎么努力减少内存占用量的。我每次看到如今的 Slack 等应用程序，都有种悲伤和绝望的感觉。像 Nue 这样的项目至少发现了正确的问题，也摆出了严谨的态度。支持！</blockquote><p></p><p>&nbsp;</p><p>也有不少网友直接指出 Nue 当前存在的问题，并给出了比较中肯的建议。</p><p></p><p>网友 niutech 指出，Nue 更像是 Petite-Vue 或者 Riot.js 的替代品，还很难说可以取代非常成熟的 Vue 或者 React。所以拿它跟 headlessui-react/vue 做比较，就像拿苹果跟橙子或者香蕉比较一样有点错位：无头 UI 列表框的复杂度要高得多。其实在 Vue 中也可以用 Nue 那个级别的代码量构建起列表框，这事并不太难。</p><p>&nbsp;</p><p>此外，作者并没有在入门介绍(https://nuejs.org/docs/nuejs/getting-started.html)中提到如何在无需构建步骤的情况下使用 Nue，从而逐步增强现有 HTML 网站（例如 Petite Vue）：`还是 Alpine.js: ``。</p><p></p><p>用户 bartq 认为，单从网站构建库的角度来看，Nue 已经做得很成功了，但身为开发者，他还期待看到其他成果：</p><p>&nbsp;</p><p></p><blockquote>1. 用该库创建的示例项目，包括过程中的挑战、解决方案、难题和成果。2. 用视频演示如何用 Nue 库创建简单的应用程序。在已经非常拥挤的 JS 生态系统当中，光靠枯燥的说明文档已经很难吸引到支持者。比如想在视频中看到：&nbsp;&nbsp; - 工具如何起效；&nbsp; - 调试如何起效；&nbsp; - 构建过程如何起效；&nbsp; - 还有其他哪些强大功能等。</blockquote><p></p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://nuejs.org/\">https://nuejs.org/</a>\"</p><p><a href=\"https://nuejs.org/compare/component.html\">https://nuejs.org/compare/component.html</a>\"</p><p><a href=\"https://news.ycombinator.com/item?id=37507419\">https://news.ycombinator.com/item?id=37507419</a>\"</p><p><a href=\"https://thenewstack.io/dev-news-a-nue-frontend-dev-tool-panda-and-bun-updates/\">https://thenewstack.io/dev-news-a-nue-frontend-dev-tool-panda-and-bun-updates/</a>\"</p>",
    "publish_time": "2023-09-22 16:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Chrome 117 Beta发布：15岁生日庆祝与新功能一览",
    "url": "https://www.infoq.cn/article/3zKJ9DKhOHB0Pr0kMFIX",
    "summary": "<p>Google Chrome是网络浏览器领域的领军者之一，而最新发布的Chrome 117 Beta版本为其15岁生日庆祝活动带来了一份特别的礼物。这个版本引入了一系列令人兴奋的功能和改进，让用户在浏览网页时能够获得更好的体验。</p><p>&nbsp;</p><p></p><blockquote>除非另有说明，以下变更适用于Android、ChromeOS、Linux、macOS和Windows的最新Chrome beta渠道发行版。您可通过文中提供的链接或ChromeStatus.com上的功能列表了解更多细节信息。Chrome 117自2023年8月16日起发布beta版本，您可在桌面版Google.com或Android版Google Play商店处下载此最新版本。</blockquote><p></p><p>&nbsp;</p><p></p><h2>Chrome 117 beta</h2><p></p><p>&nbsp;</p><p></p><h3>CSS</h3><p></p><p></p><p>此版本添加了6项新的CSS功能，前3项是Chrome离散属性转换机制的一部分，用于启用进入和退出动画。</p><p>&nbsp;</p><p></p><h4>@starting-style规则</h4><p></p><p></p><p>这项@规则允许在首次样式更新时执行CSS转换。</p><p>&nbsp;</p><p>CSS转换不会在元素的首次样式更新时、或当显示类型从none变更为其他类型时被触发。这样设计是为了避免初始样式发生意外转换。要从首次样式更新时即开始转换，您现在可以使用@starting-style规则以应用新样式。例如，以下CSS将在div的首次样式更新时，启动从绿色到淡黄绿色的背景颜色转换：</p><p>&nbsp;</p><p><code lang=\"null\">div { \n  transition: background-color 0.5s; \n  background-color: lime; \n} \n \n@starting-style {\n  div { \n    background-color: green; \n  } \n}</code></p><p></p><h4>Overlay属性</h4><p></p><p></p><p>overlay&nbsp;属性允许开发人员在退出转换时继续保留顶层元素。添加overlay属性以指示元素是否位于顶层，具体取值分为两种：none或auto。</p><p>&nbsp;</p><p></p><h4>CSS transition-behavior属性</h4><p></p><p></p><p>transition-behavior&nbsp;CSS属性为transition转换属性的简写，允许在转换中使用离散属性。通过为transition-behavior指定allow-discrete值，离散属性现在可以启动动画并从初始值过渡为最终值的50%。对于初始值或最终值为display: none或content-visibility: hide二者之一的转换，可见值将在整个转换持续时间内生效。</p><p>&nbsp;</p><p></p><h4>CSS网格的subgrid值</h4><p></p><p></p><p>grid-template-columns 和 grid-template-rows的subgrid子网格值现已在Chrome中实现。开发人员可以使用该值让嵌套网格使用其父网格上定义的轨迹，而不再需要为行、列创建新的轨迹定义。</p><p>&nbsp;</p><p></p><h4>CSS text-wrap: pretty值</h4><p></p><p></p><p>CSS text-wrap属性中的pretty值用于优化最佳布局，相当于以速度换取美观度。此值用于正文，因此需要多行。通过使用pretty值，开发人员可以显式选择可能比wrap更慢的布局方法，借此优化视觉效果。Chrome的当前实现会针对orphans进行优化，以防止在文本段落的末尾显示单个单词。</p><p>&nbsp;</p><p>在Chrome 117中参考此text-wrap:pretty演示，观察该值如何改变文本呈现效果：</p><p><a href=\"https://codepen.io/argyleink/pen/dyQxmYK\">https://codepen.io/argyleink/pen/dyQxmYK</a>\"</p><p>&nbsp;</p><p></p><h3>contain-intrinsic-size: auto none支持</h3><p></p><p></p><p>此功能扩展了现有contain-intrinsic-size语法，能够支持auto &amp;&amp;&nbsp;none。</p><p>&nbsp;</p><p></p><h3>Web APIs</h3><p></p><p>&nbsp;</p><p></p><h4>数组分组</h4><p></p><p></p><p>数组分组属于一类常见操作，典型例子就是SQL的GROUP BY子句与MapReduce编程（特别是map-group-reduce）。将数据整合为组的功能，使开发人员能够计算更高阶的数据集，例如群组中的平均年龄或网页的每日LCP（最大可见图片或者文本块的渲染时间）值。为达成此效果，数组分组功能会添加Object.groupBy和Map.groupBy静态方法。</p><p>&nbsp;</p><p>Object方法会返回一个普通对象，其中的属性键为组。Map方法则返回一个Map，其中的键可以为任意值。</p><p>&nbsp;</p><p></p><h4>通过Clear-Site-Data头清除客户端提示</h4><p></p><p></p><p>网站现在可以使用Clear-Site-Data:“clientHints”清除客户端提示缓存。当“cookies”、“cache”或“*”被同一标头定位时，客户端提示现在也将被清除。这是因为如果用户清除UI中的cookie，客户端提示也已经被清除；而客户端提示缓存仅作为缓存，且二者须分别与通配符目标保持一致。</p><p>&nbsp;</p><p></p><h4>Clear-Site-Data头通配符语法</h4><p></p><p></p><p>网站现在可以发送&nbsp;Clear-Site-Data: \"*\"来清除所有存储目标（包括“cookie”、“cache”和“storage”）。请注意，Chrome目前不支持清除\"executionContexts\"，但如果后续添加这项功能，则任何指向“*”的标头也会将其一并清除。</p><p>&nbsp;</p><p></p><h4>customElements.getName</h4><p></p><p></p><p>customElements.getName()会返回给定自定义元素的标签名称。</p><p>&nbsp;</p><p></p><h4>迭代器帮助器</h4><p></p><p></p><p>迭代器帮助器属于新的迭代器原型设计方法，用于支持迭代器的常规使用与消费。</p><p>&nbsp;</p><p></p><h4>由EventTarget interface派生的CaptureController</h4><p></p><p></p><p>CaptureController接口现可进一步操作屏幕捕捉会话。未来，预计与捕捉会话相关的事件也将在该控制器上进行分派。为了管理此类事件的侦听器，Chrome还在CaptureController上提供EventTarget方法。</p><p>&nbsp;</p><p></p><h4>PerformanceResourceTiming新增deliveryType属性</h4><p></p><p></p><p>PerformanceResourceTiming的deliveryType属性会返回关于如何交付资源的信息，具体包括从缓存传递来的资源（之前通过transferSize公开）和由上一页预取的导航信息。</p><p>&nbsp;</p><p></p><h4>在URL设置器中检查端口溢出</h4><p></p><p></p><p>设置url.port时会检查端口值。所有超出16位数字限制的值将直接无效化。例如，以下脚本的行为在更新之后将有所变化：</p><p>&nbsp;</p><p><code lang=\"null\">u = new URL(\"http://test.com\"); \nu.port = 65536; \nconsole.log(u.port); </code></p><p>&nbsp;</p><p>在上版本中其输出为65535，但更新后的输出为80。</p><p>&nbsp;</p><p></p><h4>私有状态令牌API</h4><p></p><p></p><p>这个新的API用于跨站点传播受限的私有依赖，而不再依赖于第三方cookie等跨站点持久标识。由于不再依赖第三方cookie，因此围绕cookie设计的反欺诈方法也将不再起作用。私有状态令牌（Private State Token）API不会生成或定义反欺诈信号，这些由相应的第一方和令牌发送方决定。相反，API会对信号中传输的信息施加限制，借此保护隐私。</p><p>&nbsp;</p><p>此API基于Privacy Pass协议的变体，IETF正在对该协议做标准化改造。大家可以将其理解成Privacy Pass协议的Web公开形式。API规范将针对新版本和令牌类型进行更新，并将与Privacy Pass工作组提出的规范保持同步。预计更新后的变化将主要体现在底层加密协议和令牌发送代码当中：我们初步判断，开发人员在Fetch API发送和赎回操作不会受到影响。私有状态令牌API之前也被称为信任令牌API，此次重新命名为了更准确地反映底层语义、并强调对用户隐私的保护作用。</p><p>&nbsp;</p><p></p><h4>向IPv6主机解析器嵌入兼容URL标准的IPv4</h4><p></p><p>&nbsp;</p><p>向IPv6主机解析器嵌入兼容URL标准的IPv4，为了更严格地遵循Web URL标准。对IPv6地址的引入限制为：</p><p>嵌入的IPv4地址应始终由4个部分组成。少于4个部分的地址（例如<a href=\"http://[::1.2]\">http://[::1.2]</a>\"）将不再有效。此功能属于URL interop 2023的一部分。</p><p>&nbsp;</p><p></p><h4>URL: 允许在URL路径中使用\"%00\"</h4><p></p><p></p><p>在之前的版本中，若URL路径部分包含不符合URL标准的“%00”（或null）部分，则Chrome会将该URL认定为无效。例如，以下测试会在Chrome中失败，因为&nbsp;new URL(...)将抛出Invalid URL异常。</p><p>&nbsp;</p><p><code lang=\"null\">assertEquals(new URL(\"http://example.com/%00\").pathname, \"/%00\"); </code></p><p>&nbsp;</p><p>根据URL标准，URL路径中的任何字符或字节序列不应致使URL无效，因此本次Chrome更新将遵循这一标准要求。</p><p>&nbsp;</p><p></p><h4>WebRTC RTP头扩展控制</h4><p></p><p></p><p>扩展了WebRTC&nbsp;RTCRtpTransceiver&nbsp;API，用以对经过协商的RTP标头扩展进行控制。</p><p>&nbsp;</p><p></p><h4>VideoEncoder中的逐帧量化器</h4><p></p><p></p><p>向VideoEncoder中添加“量化器”（quantizer）VideoEncoderBitrateMode，因此可以为AV1、VP9和AVC视频编解码器的每个帧指定quantizer参数。</p><p>&nbsp;</p><p></p><h4>在&nbsp;requestDevice()中提供WebUSB&nbsp;exclusionFilters选项。</h4><p></p><p></p><p>navigator.usb.requestDevice()中的exclusionFilters选项允许Web开发者从浏览器选择器中排除某些设备，借此排除能与过滤器本身匹配、但实际上无法支持的设备。</p><p>&nbsp;</p><p></p><h3>继续开发origin trials</h3><p></p><p></p><p>在Chrome 117中，您可以选择体验以下新的origin trials选项。</p><p>&nbsp;</p><p></p><h4>通过共享Brotli传输压缩字典</h4><p></p><p></p><p>此功能现可支持使用已指定的先前响应，并将其作为Brotli压缩HTTP响应时的外部字典。</p><p>&nbsp;</p><p>CompressionDictionaryTransport origin trial注册链接：</p><p><a href=\"https://developer.chrome.com/origintrials/#/register_trial/2583940286203822081\">https://developer.chrome.com/origintrials/#/register_trial/2583940286203822081</a>\"。</p><p>&nbsp;</p><p></p><h4>WebSQL弃用trial</h4><p></p><p></p><p>Chrome正着手移除WebSQL，我们鼓励仍在依赖WebSQL的站点通过Wasm迁移至SQLite。</p><p>&nbsp;</p><p>本次弃用trail允许开发人员继续使用WeblSQL，截止日期至Chrome 123发布之时（2024年3月），在此期间您可逐步规划迁移工作。</p><p>&nbsp;</p><p>WebSQL弃用trail注册链接：/origintrials/#/register_trial/494270059103911937。</p><p>&nbsp;</p><p></p><h4>选项卡式Web应用</h4><p></p><p></p><p>允许Web应用程序在容器中显示选项卡栏，用户可以借此体验更多功能，例如在同一应用之内编辑多个文档。这项功能将添加新的显示模式“选项卡式”和新的清单字段，允许开发者对选项卡栏做自定义设置。</p><p>&nbsp;</p><p>选项卡式Web应用origin trail注册链接：</p><p><a href=\"https://developer.chrome.com/origintrials/#/register_trial/3547710606461108225\">https://developer.chrome.com/origintrials/#/register_trial/3547710606461108225</a>\"。</p><p>&nbsp;</p><p></p><h3>弃用与移除</h3><p></p><p></p><p>新的Chrome版本将弃用和移除以下内容。具体请访问ChromeStatus.com网站以了解计划弃用、当前弃用和此前移除项目的详尽列表。</p><p>&nbsp;</p><p>此版本Chrome弃用了以下两项功能。</p><p>&nbsp;</p><p></p><h4>弃用unload事件</h4><p></p><p></p><p>从Chrome 117起开始弃用unload事件处理程序。如果您的网站正在使用此程序，我们强烈建议您阅读关于unload的弃用说明帖，以了解更多详细信息。</p><p><a href=\"https://developer.chrome.com/blog/deprecating-unload/\">https://developer.chrome.com/blog/deprecating-unload/</a>\"</p><p>&nbsp;</p><p></p><h4>弃用TLS SHA-1服务器签名</h4><p></p><p></p><p>Chrome将移除在TLS握手期间使用SHA-1进行服务器签名的算法支持。此举不会影响到服务器证书（已被移除）或客户端证书（仍受支持）中对SHA-1的支持。</p><p>&nbsp;</p><p>此版本Chrome移除了以下四项功能。</p><p>&nbsp;</p><p></p><h4>[WebRTC]取消基于回调的遗留getStats()</h4><p></p><p></p><p>RTCPeerConnection拥有两个&nbsp;getStats()版本：其一符合规范，通过解析Promise返回报告；其二不符合标准，通过回调作为首项参数返回完全不同的报告内容。现在，基于回调的&nbsp;getStats()已被移除。</p><p>&nbsp;</p><p>关于迁移操作的具体信息，包括如何暂缓移除带来的影响，请参阅遗留&nbsp;getStats()迁移指南：</p><p><a href=\"https://developer.chrome.com/blog/getstats-migration/\">https://developer.chrome.com/blog/getstats-migration/</a>\"</p><p>&nbsp;</p><p></p><h4>移除WebRTC getStats&nbsp;datachannelIdentifier的-1值</h4><p></p><p></p><p>WebRTC getStats API会公开dataChannelIdentifier属性。如果在建立数据通道连接之前查询统计信息，现在它不再显示“-1”值。相反，新版本中该字典条目将被直接略去。</p><p>&nbsp;</p><p></p><h4>移除WebRTC getStats&nbsp;encoderImplementation与decoderImplementation \"unknown\"</h4><p></p><p></p><p>WebRTC getStats API会公开出站与入站视频的编码器与解码器实现名称。如果在视频帧编码或解码之前查询统计信息，新版本中该API不再显示“unknown”值。相反，该字典条目将被直接略去。</p><p>&nbsp;</p><p></p><h4>移除CSS属性-webkit-highlight</h4><p></p><p></p><p>移除CSS属性-webkit-highlight，此属性用于高亮显示文本、但一直未被纳入标准。该属性在Chromium中没有明显效果（会被解析，但从未被实际用于渲染内容）。该属性于2014年从WebKit中被移除，已在MDN上被标记为弃用，最近还被CSS&nbsp;Highlight伪规范正式取代。</p><p>&nbsp;</p><p>Chrome 117 Beta的发布标志着Google Chrome浏览器的不断演进和改进，以适应用户和开发人员的不断变化的需求。同时，正如Chrome 副总裁 Parisa Tabriz在<a href=\"https://blog.google/products/chrome/Google-chrome-new-features-redesign-2023/\">Chrome 15岁生日庆祝活动</a>\"中所提到的，为了庆祝这个生日，Chrome桌面版迎来了全新外观，同时推出一系列新的升级，帮助大家在Chrome继续享受轻松、快速、安全的浏览体验。</p><p>&nbsp;</p><p></p><h2>Chrome迎来15岁生日</h2><p></p><p></p><p>尽管这15年来发生了很多变化，但Chrome的使命依旧不变——打造一款快速、可靠、安全且易于使用的浏览器。这一目标推动着Chrome不断做出一项项改进，并以远超其他浏览器的速度向数十亿用户发布更多功能与更新。此外，Chrome还与开发人员合作，帮助他们提升网站性能。</p><p>&nbsp;</p><p>今年，Chrome在基准测试中的加载速度环节中拔得头筹。而为了增强安全性，Chrome还协助将Web默认转向HTTPS，同时让人们轻松管理并保护其密码。Chrome也不忘携手机器学习，带来更易于访问且个性化的浏览体验。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/31/310c150b487a6c63de85def7565a1106.png\" /></p><p></p><p></p><h3>用Material You实现浏览器个性化</h3><p></p><p></p><p>在接下来的几周内，Chrome桌面版将焕然一新。基于Material You设计语言，Chrome的图标也已更新，重点关注易读性；此外还有新的调色板，用以填充用户的选项卡和工具栏。这些新主题和独特颜色将帮助用户一目了然地区分具体设置，例如工作账户和个人账户。Chrome还将更好地与操作系统相集成，确保您的Chrome首先项可以轻松适应操作系统层面的设置，例如明亮与夜间两种显示模式。</p><p>&nbsp;</p><p>此外还有其他一些改进，同样让Chrome的易用性得到增强，例如更全面的菜单、更快速的Chrome扩展程序访问、Google翻译、Google密码管理等。（要访问菜单，请单击浏览器右上角的三个点。）</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6c/6c5b51f666e901a40b0791c41ba289ed.png\" /></p><p></p><p>&nbsp;</p><p></p><h3>在全新Chrome Web Store中寻找更多扩展</h3><p></p><p></p><p>Chrome还用同样的Material You风格重新设计了Chrome Web Store，帮助用户轻松发现自己需要的扩展。除了新鲜、现代的界面之外，该商店还提供新的扩展类别（例如AI驱动型扩展和编辑精选）以及更多个性化推荐。目前，新版Chrome Web Store已经开放预览版本：</p><p><a href=\"https://chromewebstore.google.com/\">https://chromewebstore.google.com/</a>\"</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/dd/ddc33b6174edc2cb0b1b2901d3a9fbca.png\" /></p><p></p><p>&nbsp;</p><p>在安全方面，Chrome已经将安全检查引入扩展程序，确保识别商店中最近被下架、违反谷歌政策或存在潜在恶意的扩展程序。借助CRXcavator和Spin.AI风险评估等第三方工具，Chrome还能帮助企业在广泛部署之前评估扩展风险。各评估选项均在Chrome浏览器云管理中列出，可帮助安全团队做出明智决策。</p><p>&nbsp;</p><p></p><h3>用新的搜索功能轻松浏览网页</h3><p></p><p></p><p>Chrome还在进一步降低搜索操作门槛。最近，Chrome推出的新功能就允许用户在浏览时快速访问信息与搜索工具。在大家访问网页时，可在“三点”菜单中选择“使用Google搜索此页面”选项。点击后即可开启Google搜索侧面板，用户将在这里查找相关搜索、了解关于页面来源的更多信息或启动另外一个新搜索。我们甚至可以将Google搜索侧面板永久固定在工具栏上。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/7d/7d3f9a70d5148d849f968e94f4210665.png\" /></p><p></p><p>&nbsp;</p><p>上个月，Chrome还将生成式AI搜索功能扩展到了桌面版Chrome当中，用以丰富网页浏览体验。美国用户可以在Search Labs中选择“浏览时使用SGE”以参与测试。此实验可帮助大家更好地浏览网络信息，快速找到自己希望通过网页查找的内容。例如，在符合条件的网站上，我们可以点击查看AI生成的关键点列表，包括可直接访问页面信息的链接。与此同时，“探索页面”功能则可向您显示文章所回答的问题，还提供可直接跳转至页面上相应位置的链接。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/62/621ce43650c53a2951fe8a2e2452827c.png\" /></p><p></p><p>&nbsp;</p><p></p><h3>升级安全浏览以保障安全</h3><p></p><p></p><p>Chrome中的Google安全浏览（Safe Browsing）功能可以标记出危险网站与文件，借此为用户提供自动保护。之前，它的工作原理是根据本地存储的已知不良网站清单对每次网站访问执行检查，且列表内容每30到60分钟更新一次。但如今，网络上的钓鱼域名正变得愈发复杂，其中60%的存在时间甚至不足10分钟，因此极易成为漏网之鱼。</p><p>&nbsp;</p><p>为了在启动这些危险网站时加以阻止，Chrome升级了安全浏览的标准保护模式，现在它会实时检查各个已知不良网站，且无需与谷歌共享您的浏览历史记录。通过缩短从识别威胁到阻断威胁之间的间隔，预计Chrome的恶意软件与网络钓鱼威胁防护能力将提高25%。此更新将在未来几周内正式登陆Chrome浏览器。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/00/00717b0da88e20375f969b50fa29d0a8.png\" /></p><p></p><p>&nbsp;</p><p>如果用户需要更多保护，可以随时打开安全浏览中的增强保护模式。该模式将进一步运用AI技术阻止新的攻击、提供对文件的深度扫描，并针对恶意软件提供额外保护。</p><p>&nbsp;</p><p>&nbsp;</p><p></p><h5>参考链接：</h5><p></p><p></p><p><a href=\"https://blog.google/products/chrome/Google-chrome-new-features-redesign-2023/\">https://blog.google/products/chrome/Google-chrome-new-features-redesign-2023/</a>\"</p><p><a href=\"https://developer.chrome.com/blog/chrome-117-beta/\">https://developer.chrome.com/blog/chrome-117-beta/</a>\"</p><p></p><h5>相关阅读:</h5><p></p><p></p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247500185&amp;idx=2&amp;sn=85ba12dce4536fc8b05cbf8c5f31b673&amp;chksm=f95274dace25fdcc0fb539a142fb877a554de8c5c026897784d5e8b8a7a1650ad07892598491&amp;scene=27#wechat_redirect\">Chrome开发工具插件推荐</a>\"</p><p><a href=\"https://www.infoq.cn/article/XTw4I4heyyHZSWHNoh7E\">因此我放弃了&nbsp;Chrome</a>\"</p><p><a href=\"https://www.infoq.cn/article/Mra7XfhPGIuuLVOTTawJ\">谷歌正式发布 Android 11&nbsp;Beta&nbsp;版，带来多项重磅更新！</a>\"</p><p><a href=\"https://www.infoq.cn/article/lOCkY3lV2ADRvXcsZEb2\">Kotlin Multiplatform Mobile 进入&nbsp;Beta&nbsp;测试</a>\"</p>",
    "publish_time": "2023-09-22 16:06:07",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Bun 1.0 JavaScript运行时发布，附带Windows“实验”版",
    "url": "https://www.infoq.cn/article/OM4ZAlXZV1cIhGLrpBVa",
    "summary": "<p>Bun团队已经为其JavaScript/TypeScript运行时公布了1.0稳定版，正式版在速度、集成度和兼容性等方面均做出了强有力的承诺。</p><p>&nbsp;</p><p>项目缔造者Jarred Sumner在视频演示中解释道，“Bun是一款完整的工具包，用于构建、测试和调试各类JavaScript与TypeScript应用场景，小到袖珍脚本、大到全栈服务器端渲染应用皆可支持。”Bun在设计上还与Node.js相兼容。虽然目前还存在一些限制，导致不少开发者对其“替代品”的宣传定位仍旧存疑，但相当一部分命令和API已经确实有效。而且与Node.js不同，Bun使用苹果JavaScriptCore引擎并由Zig构建而成。</p><p>&nbsp;</p><p>Bun能够运行TypeScript与JavaScript，而又无需进行类型检查——这明显违背了开发者选择TypeScript的基本初衷。不过，开发人员也可使用TypeScript编译器tsc来配合Bun。</p><p>&nbsp;</p><p>Bun的特色之一，在于它能支持ES（EcmaScript）模块（浏览器直接支持）与CommonJS（较早的模块系统）。开发团队认为，CommonJS在JavaScript生态系统中已经根深蒂固，不可贸然放弃对它的支持。Sumner表示，“无论再过多久，总会有一部分软件包尚未使用ES模块。”</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3f/3fc8d39c6f80f2ab8dd7598335f1c32c.png\" /></p><p></p><p>项目缔造者Jarred Sumner在视频中展示Bun</p><p>&nbsp;</p><p>Bun开发团队在速度方面做出了大胆承诺。他们发布的帖子提到，bun软件包的安装速度是npm（Node包管理器）的29倍；在JavaScript测试中速度为Jest的13倍；打包速度则是esbuild的1.75倍。</p><p>&nbsp;</p><p>Bun在此番发布中还推出“高度实验性的”Windows版本。在此之前，Bun还仅能支持Mac、Linux和Windows Linux子系统（WSL）。开发团队介绍称，所谓“高度实验性”，是指这套Windows版“仅支持JavaScript运行时；其他包管理器、测试运行器和捆绑器均被禁用，待后续稳定时方可开放。”</p><p>&nbsp;</p><p>Bun目前能够支持的框架为Next.js、Astor和Nest.js。其他可与Bun配合使用的框架则包括Nuxt、SvelteKit和Vite。</p><p>&nbsp;</p><p>Bun还加入了Deno，希望构建起比现有Node.js更出色的运行时。基于Node的开发环境往往涉及不同工具集合，也因此变得难以管理。Bun与Deno简化了这一点，与Deno相比，Bun更倾向于兼容Node.js和CommonJS，这对不少开发者都具有一定的吸引力。一位开发者指出，“我们有一支全栈TypeScript团队，管理着约50个内部库和约50万行TypeScript代码。上个月，我们尝试用Deno加Bun作为替代运行时。简单来讲：只要复杂度不是特别高的代码库，Bun几乎都能直接兼容，而Deno则几乎全都无法兼容。”</p><p>&nbsp;</p><p>但对于有些人来说，虽然Bun已经迎来1.0版本，但这款相对较新的工具还略显青涩、难堪生产工作负载的大任。而且不少人发现虽然Bun表现不错，但实际性能其实达不到当初承诺的水平。不过总体而言，Bun的首个正式版本还是获得了不错的评价。</p><p>&nbsp;</p><p></p><h5>相关链接：</h5><p></p><p></p><p><a href=\"https://devclass.com/2023/09/11/bun-1-0-javascript-runtime-released-complete-with-experimental-windows-version/\">https://devclass.com/2023/09/11/bun-1-0-javascript-runtime-released-complete-with-experimental-windows-version/</a>\"</p><p>&nbsp;</p><p><a href=\"https://www.youtube.com/watch?v=BsnCpESUEqM\">https://www.youtube.com/watch?v=BsnCpESUEqM</a>\"</p><p>&nbsp;</p><p><a href=\"https://www.infoq.cn/article/Uj6bY5VyC6IDheuilHOC\">https://www.infoq.cn/article/Uj6bY5VyC6IDheuilHOC</a>\"</p><p></p><p></p><h5>相关阅读：</h5><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247516386&amp;idx=1&amp;sn=94bed4b16790a46359e19cf8c759949c&amp;chksm=f95235a1ce25bcb7531410a4fa25f0ab3e6de659d6189fb765a4de40eb2faa009a438824edbb&amp;scene=27#wechat_redirect\">Bun&nbsp;会是&nbsp;Webpack&nbsp;之后的下一件大事吗？</a>\"</p><p><a href=\"https://www.infoq.cn/article/m48tvaz8w2BbblIQKZZF\">比 Node.js 快三倍，新 JavaScript 运行时&nbsp;Bun&nbsp;火了</a>\"</p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247516765&amp;idx=1&amp;sn=b899b050ea9125222ed283bbe76acc85&amp;chksm=f952371ece25be08bcf259c6cd8a1a9fbd6fe5b5f75e9c9512f1f75799adacbc046aebdeb741&amp;scene=27#wechat_redirect\">亲身试用新&nbsp;JS&nbsp;运行时&nbsp;Bun&nbsp;后，我觉得未来可期</a>\"</p><p><a href=\"https://xie.infoq.cn/article/c03cd143a6604ee58b0d8cce4\">疑为针对最近大火的“Bun”</a>\"</p>",
    "publish_time": "2023-09-22 16:09:12",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "2023中国云原生成熟度模型报告",
    "url": "https://www.infoq.cn/article/q2Rhj103VtuMcdPlFGGS",
    "summary": "<h3><strong>研究背景</strong></h3>\n<p>今年年初，InfoQ 研究中心发布了《中国软件技术发展洞察和趋势预测报告 2023》<a href=\"http://www.infoq.cn/minibook/UGhD7MTY5Z43JG5YmWP3\"></a>，在报告中将各个领域的关键技术按照不同成熟度阶段进行了划分，总结并生成了中国技术成熟度评估曲线。报告发布之后也获得了众多企业和开发者的关注和讨论。</p>\n<p>作为年度趋势报告的延续，InfoQ 研究中心基于 2023 年云原生领域的种种变化与发展，更新《2023 中国云原生领域技术成熟度模型报告》，为技术的应用决策和未来投资参考提供研究分析工具。</p>\n<p>未来，InfoQ 研究中心还将继续推出更多细分领域（大数据等）的成熟度报告，并定期更新，欢迎大家持续关注。</p>\n<h3>中国云原生技术成熟度曲线</h3>\n<p><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/43/13/4348bb95bbca2bdd9b24ba7ea461ff13.png\" /></p>\n<h5>备注说明</h5>\n<ul>\n<li>模型涵盖 20+云原生相关技术点，立足三大核心指标（技术专利数量、技术发展时间、技术舆论指数），参考市场规模、融资事件等公开资料，并结合了云原生领域业内专家观点。</li>\n<li>技术专利相关数据来自国家知识产权局旗下专利检索及分析系统，检索时间为 2023 年 9 月 10 日。</li>\n<li>技术发展时间使用知网论文库等学术平台进行相关技术领域论文最早收录年份统计计算。</li>\n<li>技术舆论指数数据来源为各家技术媒体和开发者社区，包括 InfoQ 中文站和 CSDN 社区。</li>\n</ul>\n<h3>中国云原生技术企业生态图谱</h3>\n<p><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/00/1a/00ef9c972fe2275a1da1027207689f1a.png\" /></p>\n<h3><strong>目录</strong></h3>\n<ul>\n<li>云原生技术发展历程</li>\n<li>中国云原生技术成熟度模型</li>\n<li>中国云原生技术企业生态图谱</li>\n</ul>",
    "publish_time": "2023-09-22 16:10:02",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "美的集团：关于工业数字化转型的最新思考和实践",
    "url": "https://www.infoq.cn/article/pQu2eI7W4G1QRlqzrZYT",
    "summary": "<p>美的，早已不是广大消费者认知里的“家电制造厂商”。过去十多年，美的集团经历了三个<a href=\"https://www.infoq.cn/article/2OegFK0qg30qGrbbkDsN\">数字化</a>\"阶段，目前正处于数字化 3.0 阶段。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/be/e8/be62cd0e6677507ffc86eebb0b51cae8.png\" /></p><p></p><p>伴随数字化转型的不断推进，美的集团当下形成了“1+3+N”业务结构，1&nbsp;<a href=\"https://www.infoq.cn/video/r2Nqtvu8XXDeC9tJ3ues\">指智能家居</a>\"，3&nbsp;指的是ToB相关的工业技术、楼宇科技、机器人与自动化板块，N&nbsp;是指创新型业务。</p><p></p><p>据了解，美的集团近十年在企业数字化方面的累计投入约100多亿元，而今年将投入接近30亿元。</p><p></p><p>追加投入是基于业务效果的观察和评估的结果。数字化创新常伴随着风险，因此在数字化转型过程中，许多企业都会遇到一些挑战和阻力。美的集团也不例外，它也面临着投入与产出之间的平衡问题。</p><p></p><p>美的集团CIO张小懿在接受InfoQ采访时分享了他的看法，“最大的产出是数字化与我们的业务紧密融合，从而提高了效率、品质，更好地满足了客户和用户的需求。”他指出，一旦业务开始见效，压力自然减轻，反而业务部门会催促数字化部门更快地行动，投入和产出是相辅相成的。</p><p></p><h2>沉淀智慧工业的经验</h2><p></p><p></p><p>实际上美的内部也会制定一些具体的量化指标去评估投入产出比，比如通过数字化、<a href=\"https://www.infoq.cn/article/ZSDiSbhB4lXTC6h33PIZ\">智能化</a>\"或智能制造的转型，工厂的制造效率有没有显著提高。张小懿举例道，通常情况下，公司能够在三年内收回投资成本，而一些出色的工厂甚至可以在两年内实现显著的业绩提升。</p><p></p><p>截至今天，美的已建设了15家国家级绿色工厂（其中14家位于国内，1家位于海外），3家零碳工厂（位于顺德、荆州、重庆），以及5家世界级灯塔工厂。</p><p></p><p>而基于近十年来自零碳工厂和灯塔工厂的数字化实践和技术积累，美的集团于2023中国国际工业博览会（9月19日至23日）期间，重磅发布了“智慧工业”系列解决方案。</p><p></p><p>据张小懿分享，美的智慧工业解决方案涵盖绿色能源、智慧楼宇、智能制造和智慧物流四个板块，是一个灵活组合的、数字化、智能化和绿色化的工业方案，其整体包含三层架构，由上至下分别为解决方案、产品和底座。</p><p><img src=\"https://static001.infoq.cn/resource/image/d4/3b/d4a1aa33yyc78d76ccc8f09188bc3f3b.png\" /></p><p></p><p>基于相关方案，工业企业和园区将实现业务流程数字化和高效运营管理；人机料法环将数据互通，助力智能决策；多种能源将协同供给和配置，实现绿色可持续发展。</p><p></p><p>产品涵盖软件平台，以及IoT硬件产品两大部分。其中，平台分别包括能源管理平台、美擎工业互联网、物流云平台和iBUILDING。各平台联同所属的模块化软件和IoT硬件产品，集成形成四大模块相应的解决方案。</p><p></p><p>底座是构建产品、一体化解决方案以及提供服务的基础支持系统。美的在多年的管理积累中，发展了一套统一的数字化底座和一系列核心技术。</p><p></p><p>创新组织则是形成统一底座、迭代优化软硬件产品和平台以及解决方案的核心资源能力。</p><p></p><p></p><h4>统一数字化底座</h4><p></p><p></p><p>自2022年以来，美的自主开发了统一数字化底座，其中包括容器云、分布式存储、DevOps、中间件平台、低代码平台和IoT平台等关键组成部分。这一数字化底座基于DTC（用户直达）数字化平台、AIoT设备互联和工业人机互联等方向构建了互联生态。</p><p></p><p>整体来看，美的数字化底座包括两个主要部分：数据基础设施和数据中台。数据基础设施涵盖了数据中心、云衍生操作系统、运维保障设施、IoT平台以及研发效能系统、数据平台、中间件系统和信息安全系统等关键组成部分。（注：根据《数字美的智慧工业白皮书》，所谓云衍生，是将集团的数据系统架构在云端，可以根据各个业务模块的实际动态需求，来提供支持，避免了各个业务单元重复建设的弊端。）</p><p></p><p>数据中台涵盖了数据资产、数据产品、数据应用和商业数据分析四个层面，更加接近业务前端，将底层数据产品化，并应用于业务中。</p><p></p><p>目前，这一底座已经连接了超过400万台工业设备和能源设施。基于统一底座，可以高效开展共性技术研发和跨界技术沿用，实现四大模块解决方案互联互通。</p><p></p><p></p><h2>智能制造驱动多板块融合</h2><p></p><p></p><p>那么，为什么“智慧工业”是由绿色能源、智慧楼宇、智能制造和智慧物流这四个板块结合而来？</p><p></p><p>张小懿表示，以“智能制造”为例，美的工厂在改造的过程中，首先会着手对工厂进行智能制造的改造和升级，将所有设备相互连接。这一举措不仅在制造效率、产品品质和工艺方面取得显著效果，还实现了能源消耗的降低。</p><p></p><p>尝到了甜头后，基于这一成功经验，美的进一步考虑将这种智能化扩展到整个楼宇、厂房和园区，引入绿色能源，包括太阳能等，将它们有机整合在一起形成了一个综合解决方案。更进一步地，美的还将物流管理进行数字化改造，逐步发现数字化、智能化和绿色化的结合产生了非常出色的效果。</p><p></p><p>而除了自身的改造，美的近年逐渐将其智能制造的转型经验分享给其他行业。这一转型经验主要以灯塔|数字工厂和黑灯车间为代表的两大场景展现。</p><p></p><p>据 InfoQ 了解，灯塔|数字工厂和黑灯工厂在侧重的领域上存在差异。灯塔|数字工厂侧重于生产和供应链的协同，着眼于上下游的衔接和协作场景。而黑灯工厂侧重于生产制造环节，比较聚焦的是品质、成本、绿色化、无人化等。</p><p></p><p>具体而言，灯塔|数字工厂解决方案通过全场景覆盖的解决方案、高效协同的精益供应链以及数字孪生技术，协助企业提升品质、降低交付成本、提高生产效率、缩短交期和减少能耗，目前该方案协助客户建立了100多家数字工厂、150多家数字车间。</p><p></p><p>黑灯车间则通过其子公司美云智数和库卡等业务单元构建，专注于物料配送、智能柔性设备和高精密运动控制领域。在物料配送自动化方面，美的利用柔性机器人实现了20%的空间利用率提升，同时将运行能耗降低至传统方案的两到三成。</p><p></p><p>美云智数是美的集团旗下的工业软件企业，美云智数总经理金江进一步表示，对于客户而言，在选择使用数字工厂或黑灯工厂时，首先需要考虑的是自身需求，确定客户希望在哪个领域取得突破。其次，需要考虑具体的场景，灯塔|数字工厂更适用于柔性度较高、标准化程度较低的场景，比如总装车间，黑灯工厂则更适用于标准化程度较高的场景。</p><p></p><p></p><h2>写在最后</h2><p></p><p></p><p>“智慧工业”系列解决方案推出背后的牵引力，是美的于2022年发布的“数字美的2025”战略。该战略主要包括五个方面的内容：</p><p></p><p>业务数据化：建设DTC数字平台，实现全价值链、全域端到端100%数字化运营数据业务化：基于用户视角和数据驱动，实现智慧化运营赶上高科技行业标准数字技术：建立并不断加强核心技术能力，保持数字技术行业领先优势，物联网中台达到10亿级连接能力智能家居：成为全球智能家居行业首选数字创新：数字技术融入产品和服务，数字化支撑商业模式创新，发展数字创新业务，孵化1-2家上市公司</p><p></p><p>在这一战略的指导下，美的不同业务单元在各自领域积累并沉淀了数字转型解决方案。这些解决方案为各个行业的软件平台、硬件产品开发提供了基础。面向未来，美的希望能将其数字化创新和经验注入更多领域，助力更多企业实现“智慧工业”。</p>",
    "publish_time": "2023-09-22 17:44:38",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "美的集团：关于工业数字化的最新思考和实践",
    "url": "https://www.infoq.cn/article/pQu2eI7W4G1QRlqzrZYT",
    "summary": "<p>美的，早已不是广大消费者认知里的“家电制造厂商”。过去十多年，美的集团经历了三个<a href=\"https://www.infoq.cn/article/2OegFK0qg30qGrbbkDsN\">数字化</a>\"阶段，目前正处于数字化 3.0 阶段。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/be/e8/be62cd0e6677507ffc86eebb0b51cae8.png\" /></p><p></p><p>伴随数字化转型的不断推进，美的集团当下形成了“1+3+N”业务结构，1&nbsp;<a href=\"https://www.infoq.cn/video/r2Nqtvu8XXDeC9tJ3ues\">指智能家居</a>\"，3&nbsp;指的是ToB相关的工业技术、楼宇科技、机器人与自动化板块，N&nbsp;是指创新型业务。</p><p></p><p>据了解，美的集团近十年在企业数字化方面的累计投入约100多亿元，而今年将投入接近30亿元。</p><p></p><p>追加投入是基于业务效果的观察和评估的结果。数字化创新常伴随着风险，因此在数字化转型过程中，许多企业都会遇到一些挑战和阻力。美的集团也不例外，它也面临着投入与产出之间的平衡问题。</p><p></p><p>美的集团CIO张小懿在接受InfoQ采访时分享了他的看法，“最大的产出是数字化与我们的业务紧密融合，从而提高了效率、品质，更好地满足了客户和用户的需求。”他指出，一旦业务开始见效，压力自然减轻，反而业务部门会催促数字化部门更快地行动，投入和产出是相辅相成的。</p><p></p><h2>沉淀智慧工业的经验</h2><p></p><p></p><p>实际上美的内部也会制定一些具体的量化指标去评估投入产出比，比如通过数字化、<a href=\"https://www.infoq.cn/article/ZSDiSbhB4lXTC6h33PIZ\">智能化</a>\"或智能制造的转型，工厂的制造效率有没有显著提高。张小懿举例道，通常情况下，公司能够在三年内收回投资成本，而一些出色的工厂甚至可以在两年内实现显著的业绩提升。</p><p></p><p>截至今天，美的已建设了15家国家级绿色工厂（其中14家位于国内，1家位于海外），3家零碳工厂（位于顺德、荆州、重庆），以及5家世界级灯塔工厂。</p><p></p><p>而基于近十年来自零碳工厂和灯塔工厂的数字化实践和技术积累，美的集团于2023中国国际工业博览会（9月19日至23日）期间，重磅发布了“智慧工业”系列解决方案。</p><p></p><p>据张小懿分享，美的智慧工业解决方案涵盖绿色能源、智慧楼宇、智能制造和智慧物流四个板块，是一个灵活组合的、数字化、智能化和绿色化的工业方案，其整体包含三层架构，由上至下分别为解决方案、产品和底座。</p><p><img src=\"https://static001.infoq.cn/resource/image/d4/3b/d4a1aa33yyc78d76ccc8f09188bc3f3b.png\" /></p><p></p><p>基于相关方案，工业企业和园区将实现业务流程数字化和高效运营管理；人机料法环将数据互通，助力智能决策；多种能源将协同供给和配置，实现绿色可持续发展。</p><p></p><p>产品涵盖软件平台，以及IoT硬件产品两大部分。其中，平台分别包括能源管理平台、美擎工业互联网、物流云平台和iBUILDING。各平台联同所属的模块化软件和IoT硬件产品，集成形成四大模块相应的解决方案。</p><p></p><p>底座是构建产品、一体化解决方案以及提供服务的基础支持系统。美的在多年的管理积累中，发展了一套统一的数字化底座和一系列核心技术。</p><p></p><p>创新组织则是形成统一底座、迭代优化软硬件产品和平台以及解决方案的核心资源能力。</p><p></p><p></p><h4>统一数字化底座</h4><p></p><p></p><p>自2022年以来，美的自主开发了统一数字化底座，其中包括容器云、分布式存储、DevOps、中间件平台、低代码平台和IoT平台等关键组成部分。这一数字化底座基于DTC（用户直达）数字化平台、AIoT设备互联和工业人机互联等方向构建了互联生态。</p><p></p><p>整体来看，美的数字化底座包括两个主要部分：数据基础设施和数据中台。数据基础设施涵盖了数据中心、云衍生操作系统、运维保障设施、IoT平台以及研发效能系统、数据平台、中间件系统和信息安全系统等关键组成部分。（注：根据《数字美的智慧工业白皮书》，所谓云衍生，是将集团的数据系统架构在云端，可以根据各个业务模块的实际动态需求，来提供支持，避免了各个业务单元重复建设的弊端。）</p><p></p><p>数据中台涵盖了数据资产、数据产品、数据应用和商业数据分析四个层面，更加接近业务前端，将底层数据产品化，并应用于业务中。</p><p></p><p>目前，这一底座已经连接了超过400万台工业设备和能源设施。基于统一底座，可以高效开展共性技术研发和跨界技术沿用，实现四大模块解决方案互联互通。</p><p></p><p></p><h2>智能制造驱动多板块融合</h2><p></p><p></p><p>那么，为什么“智慧工业”是由绿色能源、智慧楼宇、智能制造和智慧物流这四个板块结合而来？</p><p></p><p>张小懿表示，以“智能制造”为例，美的工厂在改造的过程中，首先会着手对工厂进行智能制造的改造和升级，将所有设备相互连接。这一举措不仅在制造效率、产品品质和工艺方面取得显著效果，还实现了能源消耗的降低。</p><p></p><p>尝到了甜头后，基于这一成功经验，美的进一步考虑将这种智能化扩展到整个楼宇、厂房和园区，引入绿色能源，包括太阳能等，将它们有机整合在一起形成了一个综合解决方案。更进一步地，美的还将物流管理进行数字化改造，逐步发现数字化、智能化和绿色化的结合产生了非常出色的效果。</p><p></p><p>而除了自身的改造，美的近年逐渐将其智能制造的转型经验分享给其他行业。这一转型经验主要以灯塔|数字工厂和黑灯车间为代表的两大场景展现。</p><p></p><p>据 InfoQ 了解，灯塔|数字工厂和黑灯工厂在侧重的领域上存在差异。灯塔|数字工厂侧重于生产和供应链的协同，着眼于上下游的衔接和协作场景。而黑灯工厂侧重于生产制造环节，比较聚焦的是品质、成本、绿色化、无人化等。</p><p></p><p>具体而言，灯塔|数字工厂解决方案通过全场景覆盖的解决方案、高效协同的精益供应链以及数字孪生技术，协助企业提升品质、降低交付成本、提高生产效率、缩短交期和减少能耗，目前该方案协助客户建立了100多家数字工厂、150多家数字车间。</p><p></p><p>黑灯车间则通过其子公司美云智数和库卡等业务单元构建，专注于物料配送、智能柔性设备和高精密运动控制领域。在物料配送自动化方面，美的利用柔性机器人实现了20%的空间利用率提升，同时将运行能耗降低至传统方案的两到三成。</p><p></p><p>美云智数是美的集团旗下的工业软件企业，美云智数总经理金江进一步表示，对于客户而言，在选择使用数字工厂或黑灯工厂时，首先需要考虑的是自身需求，确定客户希望在哪个领域取得突破。其次，需要考虑具体的场景，灯塔|数字工厂更适用于柔性度较高、标准化程度较低的场景，比如总装车间，黑灯工厂则更适用于标准化程度较高的场景。</p><p></p><p></p><h2>写在最后</h2><p></p><p></p><p>“智慧工业”系列解决方案推出背后的牵引力，是美的于2022年发布的“数字美的2025”战略。该战略主要包括五个方面的内容：</p><p></p><p>业务数据化：建设DTC数字平台，实现全价值链、全域端到端100%数字化运营数据业务化：基于用户视角和数据驱动，实现智慧化运营赶上高科技行业标准数字技术：建立并不断加强核心技术能力，保持数字技术行业领先优势，物联网中台达到10亿级连接能力智能家居：成为全球智能家居行业首选数字创新：数字技术融入产品和服务，数字化支撑商业模式创新，发展数字创新业务，孵化1-2家上市公司</p><p></p><p>在这一战略的指导下，美的不同业务单元在各自领域积累并沉淀了数字转型解决方案。这些解决方案为各个行业的软件平台、硬件产品开发提供了基础。面向未来，美的希望能将其数字化创新和经验注入更多领域，助力更多企业实现“智慧工业”。</p>",
    "publish_time": "2023-09-22 17:44:38",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "华为云开源低代码引擎TinyEngine正式发布",
    "url": "https://www.infoq.cn/article/QeyzMm95MK87f12WAhXh",
    "summary": "<p>随着企业对于低代码开发平台的需求日益增长，急需一个通用的解决方案来满足各种低代码平台的开发需求。正是在这种情况下，低代码引擎应运而生。它是一种通用的开发框架，通过对低代码平台系统常用的功能进行解构，将其划分为多个功能模块，并为每个模块定义了相应的协议和开发范式，使得开发者可以根据自身的业务需求，轻松定制开发出自己的低代码开发平台。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/81/8142e793267ee1330d1c96881f576727.png\" /></p><p></p><p>TinyEngine 提供了低代码底层能力，并集成了人工智能，从而使用户能够高效开发。TinyEngine 具有强大的拖拽功能，无论是图元还是复杂组件，都能在画布上带来流畅的体验。它适用于多场景的低代码平台开发，包括资源编排、流程编排、服务端渲染、模型驱动、移动端、大屏端以及页面编排等低代码平台。</p><p></p><h3>架构</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/31/31eaf8c42393c33f96f2883bbdff6353.png\" /></p><p></p><p></p><h3>核心亮点</h3><p></p><p>•&nbsp;可以定制开发低码平台。</p><p></p><p>TinyEngine 采用灵活的系统架构，其出色的整体架构提供了高度的自定义自由度，使用户能够像搭建积木一样选择不同的模块来构建自己的专属设计器。此外，插件化的架构使得用户可以方便地扩展与业务相关的功能。在 TinyEngine 中，插件根据位置大致分为三类：toolbars/plugins/settings，分别对应顶部区域、左侧区域和右侧区域。toolbars 插件主要偏向于无需 UI 或者 UI 较为简单的工具插件，plugins 是业务功能插件，显示在左侧(或下方)抽屉页面，可以通过点击进行展开收起或切换。这些功能都像是独立的积木块，用户可以选择性地保留或删除。同时，用户也可以开发自己的插件或工具，并将其安装到对应的位置。TinyEngine 的灵活性极强，用户可以自由地决定他们想要开发什么样的低代码平台。</p><p></p><p>TinyEngine 提供了一套完善的插件体系，涵盖了插件开发所需的基础 UI 库、工具库、插件面板的显示控制、生命周期管理、公共 API 注册与共享等。这一体系使得开发者只需遵循简单的规范，即可快速开发出业务所需的插件，从而极大地提高了开发效率和灵活性。通过使用 TinyEngine 提供的插件体系，开发者可以更加轻松地管理和维护复杂的插件生态系统，同时降低维护成本。总之，TinyEngine 的插件体系为开发者提供了一个全面、高效、灵活的开发平台，使得快速开发出高质量的插件成为可能。</p><p></p><p>插件开发需要遵循一定的开发规范，主要是文件规范与导出规范：</p><p></p><p>•&nbsp;文件规范，必须包含下面几个文件</p><p></p><p><code lang=\"null\">pluginProject\n&nbsp;-&nbsp;src&nbsp;插件源码\n&nbsp;-&nbsp;index.js&nbsp;注册插件入口，需要导出约定的数据结构\n&nbsp;-&nbsp;package.json</code></p><p></p><p>•&nbsp;导出规范， index.js 文件需要导出一个对象来声明基础信息</p><p></p><p><code lang=\"null\">import&nbsp;component,&nbsp;{&nbsp;api&nbsp;}&nbsp;from&nbsp;'./src/Main.vue'\n\nexport&nbsp;default&nbsp;{\n&nbsp;&nbsp;id:&nbsp;'pluginId',&nbsp;//&nbsp;插件id\n&nbsp;&nbsp;title:&nbsp;'pluginName',&nbsp;//&nbsp;插件名\n&nbsp;&nbsp;icon:&nbsp;'js',&nbsp;//&nbsp;插件&nbsp;icon\n&nbsp;&nbsp;align:&nbsp;'top',&nbsp;//&nbsp;插件位置，左侧插件可选值：'top'&nbsp;|&nbsp;'bottom'&nbsp;&nbsp;工具栏可选值：'right'&nbsp;|&nbsp;'center'&nbsp;|&nbsp;'left'\n&nbsp;&nbsp;component,&nbsp;//&nbsp;插件面板打开时渲染的组件\n&nbsp;&nbsp;api,&nbsp;//&nbsp;插件暴露的&nbsp;api，可以提供给其他插件调用\n}</code></p><p></p><p>在此基础上就可以按照业务需要自由开发相关逻辑代码。最后在 addons.js 插件配置文件中引入，就完成一个完整的插件开发了。</p><p></p><p><code lang=\"null\">import&nbsp;Materials&nbsp;from&nbsp;'@xxxx/lowcode-plugin-materials'\n\nexport&nbsp;default&nbsp;{\n&nbsp;&nbsp;plugins:&nbsp;[\n&nbsp;&nbsp;&nbsp;&nbsp;Materials,\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...\n&nbsp;&nbsp;],\n&nbsp;&nbsp;toolbars:&nbsp;[\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...\n&nbsp;&nbsp;],\n&nbsp;&nbsp;settings:&nbsp;[\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...\n&nbsp;&nbsp;],\n}</code></p><p>（ps:我们呼吁用户把开发的插件包开源，共建 TinyEngine 的生态。）</p><p></p><p>•&nbsp;TinyEngine 有开放的物料协议和扩展接口。&nbsp;</p><p></p><p>TinyEngine 低代码引擎默认的物料来源于华为云开源组件库&nbsp;TinyVue&nbsp;，该组件库拥有丰富的组件和强大的功能。并且实现了跨端垮技术栈，同时支持 vue2 和 vue3。即使业务系统使用其他组件库，也无需切换，得益于 TinyEngine 强大的开放物料设计，可直接导入第三方组件库，例如 elementUI 和 AntDesign 等。引擎底层技术架构采用 webcomponent 技术，因此支持 Vue、React 和 Angular 等不同技术栈的组件或区块。用户可以自由选择所需的组件库并导入使用。导入第三方组件库，找到 runner.js 物料文件。然后参照默认物料 @opentiny/vue 即可，主要修改以下地方：</p><p></p><p><code lang=\"null\">//&nbsp;全量导入UI组件库\nimport&nbsp;UI&nbsp;from&nbsp;'@xxxx/UI'\n\nObject.entries(UI).forEach(([key,&nbsp;component])&nbsp;=&gt;&nbsp;{\n&nbsp;&nbsp;const&nbsp;{&nbsp;name&nbsp;}&nbsp;=&nbsp;component\n&nbsp;&nbsp;if&nbsp;(name)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;window.TinyLowcodeComponent[name]&nbsp;=&nbsp;component\n&nbsp;&nbsp;}\n})\n\n//&nbsp;导入某个组件库里面的单个组件\nimport&nbsp;{&nbsp;button&nbsp;}&nbsp;from&nbsp;'@xxxx/UI'\n\nwindow.TinyLowcodeComponent[name]&nbsp;=&nbsp;button</code></p><p></p><p>通过导入第三方组件库，用户可以在低代码平台中使用这些组件库来开发应用程序。除了导入组件外，用户还需要通过 bundle.json 文件来描述导入的组件所暴露出来的事件和属性。这样，用户可以在应用程序中使用这些组件，并通过 bundle.json 文件来了解和使用组件的事件和属性。这是一个非常方便和灵活的功能，使得用户可以自由地使用和定制他们所需的组件，从而快速开发出高质量的应用程序。</p><p></p><p><code lang=\"null\">//&nbsp;以下JSON为节选按钮暴露的属性\n{\n&nbsp;&nbsp;\"schema\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;\"type\":&nbsp;\"object\",\n&nbsp;&nbsp;&nbsp;&nbsp;\"properties\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"size\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\":&nbsp;\"定义按钮尺寸\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"type\":&nbsp;\"string\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enum\":&nbsp;[\"large\",&nbsp;\"medium\",&nbsp;\"small\",&nbsp;\"mini\"],\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"enumNames\":&nbsp;[\"较大尺寸\",&nbsp;\"中等尺寸\",&nbsp;\"较小尺寸\",&nbsp;\"迷你尺寸\"],\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"default\":&nbsp;\"\"\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"text\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"title\":&nbsp;\"设置按钮显示的文本\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"type\":&nbsp;\"string\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"default\":&nbsp;\"\"\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;\"events\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"onClick\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"label\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"zh_CN\":&nbsp;\"鼠标单击时触发\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"en_US\":&nbsp;\"Triggered on mouse click\"\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"description\":&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"zh_CN\":&nbsp;\"鼠标单击时触发的回调函数\"\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"type\":&nbsp;\"event\",\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"defaultValue\":&nbsp;\"\"\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}\n}</code></p><p></p><p>•&nbsp;TinyEngine 支持自定义 DSL 生成定制的源代码。</p><p></p><p>相对于在运行时由平台提供渲染引擎的方式，这种方式能够为用户提供更多的自主权和安全性。用户可以自由地定义自己的 DSL，并根据需要生成定制化的源代码，从而更加灵活地控制应用程序的行为和性能。</p><p><img src=\"https://static001.geekbang.org/infoq/a8/a85aef9b468e93516765fbadddd530f8.png\" /></p><p></p><p>TinyEngine 默认生成 Vue 的源代码。当页面编排完成后，会生成一个包含页面信息的 schema。DSL 通过便利递归等方法，从中生成源代码。如果技术栈是 Angular 或 React，用户可以完全开发一个 Angular 或 React 的 DSL，从而生成一个新的源代码工程。用户可以根据自己的需求定制生成源代码的方式，这是一个非常灵活和强大的功能，使得 TinyEngine 可以适应不同的技术栈和需求，从而更加广泛地应用于各种应用程序的开发。如果你想开发其他技术栈的 DSL，那么一定要对页面协议比较熟悉。</p><p></p><p><code lang=\"null\">interface&nbsp;IPageSchema&nbsp;{&nbsp;//&nbsp;页面&nbsp;或&nbsp;区块&nbsp;schema\n&nbsp;&nbsp;fileName?:&nbsp;string;&nbsp;//&nbsp;页面名称，schema&nbsp;是页面时使用\n&nbsp;&nbsp;componentName?:&nbsp;string;&nbsp;//&nbsp;组件名，schema&nbsp;是页面时值为&nbsp;\"Page\"\n&nbsp;&nbsp;blockName?:&nbsp;string;&nbsp;//&nbsp;区块名，schema&nbsp;是区块时使用\n&nbsp;&nbsp;id:&nbsp;string;\n&nbsp;&nbsp;css?:&nbsp;string;&nbsp;//&nbsp;页面全局样式\n&nbsp;&nbsp;props?:&nbsp;{&nbsp;//&nbsp;组件绑定的属性\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[prop:string]?:&nbsp;any;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style?:&nbsp;string;&nbsp;//&nbsp;行内样式\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className?:&nbsp;string;&nbsp;//&nbsp;绑定的样式类名\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lifeCycles?:&nbsp;{&nbsp;//&nbsp;生命周期\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[prop:string]?:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;'js';&nbsp;//&nbsp;固定值\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source:&nbsp;string;&nbsp;//&nbsp;函数字符串\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};\n&nbsp;&nbsp;children?:&nbsp;Array&lt;&nbsp;IComponentSchema&nbsp;&gt;&nbsp;|&nbsp;string;&nbsp;//&nbsp;子组件列表&nbsp;或&nbsp;文本字符串\n&nbsp;&nbsp;dataSource?:&nbsp;{&nbsp;//&nbsp;数据源\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list:&nbsp;Array&lt;&nbsp;IDateSource&nbsp;&gt;&nbsp;//&nbsp;数据源列表\n&nbsp;&nbsp;};\n&nbsp;&nbsp;actions?:&nbsp;{&nbsp;//&nbsp;页面&nbsp;JS\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;module:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source:&nbsp;string;&nbsp;//&nbsp;页面定义的&nbsp;JS&nbsp;源码字符串\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;\"FUNCTION\";&nbsp;//&nbsp;固定值\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list:&nbsp;Array&lt;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:&nbsp;string;&nbsp;//&nbsp;页面所定义的函数名\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title:&nbsp;string;&nbsp;//&nbsp;配置时显示名称&nbsp;与&nbsp;id&nbsp;一致\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;\n&nbsp;&nbsp;};\n&nbsp;&nbsp;bridge?:&nbsp;{&nbsp;//&nbsp;桥接\n&nbsp;&nbsp;imports?:&nbsp;Array&lt;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;配置时显示名称\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;\"package\"&nbsp;|&nbsp;\"local\";&nbsp;//&nbsp;package:&nbsp;npm&nbsp;包;&nbsp;local:&nbsp;本地文件\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;string;&nbsp;//&nbsp;导入的路径(包名或者本地路径)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item:&nbsp;string;&nbsp;//&nbsp;导入的项目\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;useDefault?:&nbsp;boolean;&nbsp;//&nbsp;是否默认导出\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance?:&nbsp;string;&nbsp;//&nbsp;实例名，需要注入service时需要添加该字段，typescript&nbsp;模式下使用\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;\n&nbsp;&nbsp;};\n&nbsp;&nbsp;inputs:&nbsp;Array&lt;{&nbsp;//&nbsp;页面接口：输入类型\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;输入属性名称\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;string;&nbsp;//&nbsp;数据类型声明\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultValue?:&nbsp;any;&nbsp;//&nbsp;默认值\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;;\n&nbsp;&nbsp;outputs:&nbsp;Array&lt;{&nbsp;//&nbsp;页面接口：事件输出\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;typescript类型声明\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;string;&nbsp;//&nbsp;数据类型声明\n&nbsp;&nbsp;}&gt;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;schema?:&nbsp;IComponentMetaSchema&nbsp;//&nbsp;区块时使用，区块需要暴露的组件属性元数据\n&nbsp;&nbsp;}</code></p><p></p><p>对于需要被搜索引擎爬虫 SEO 的用户，也可以用服务端 SSR 的解决方式。这种方案也可以用来快速查看自己编辑的页面。</p><p></p><p><code lang=\"null\">//&nbsp;伪代码\nimport&nbsp;{&nbsp;createSSRApp,&nbsp;h&nbsp;}&nbsp;from&nbsp;'vue'\n\nreturn&nbsp;createSSRApp(render(schema))\n\nfunction&nbsp;render(_schema)&nbsp;{\n&nbsp;&nbsp;let&nbsp;_arr&nbsp;=&nbsp;[]\n&nbsp;&nbsp;_schema.forEach((item)&nbsp;=&gt;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;componentName&nbsp;=&nbsp;item.componentName\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(item.children&nbsp;&amp;&amp;&nbsp;item.children.length)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_arr.push(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h(componentName,&nbsp;item.props,&nbsp;[\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item?.props?.text,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;render(item.children),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]),\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;text&nbsp;=&nbsp;item?.props?.text&nbsp;||&nbsp;''\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_arr.push(h(componentName,&nbsp;item.props,&nbsp;text))\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;})\n\n&nbsp;&nbsp;return&nbsp;_arr\n}</code></p><p></p><p>•&nbsp;TinyEngine 支持高低代码混合开发。</p><p></p><p>高低代码混合开发可以更好地满足业务需求。在企业的应用开发中，往往需要面对快速变化的业务需求，此时，如果全部采用低代码方式进行开发，则可能会因为代码的复杂性而无法快速适应变化。而如果采用高低代码混合的方式，则可以通过低代码进行常规业务的快速开发，对于特殊的业务逻辑，则由专业开发人员通过高代码进行实现，这样就可以更好地满足业务需求的变化。TinyEngine 在构建应用程序的过程中，提供了下载源代码的功能，使得用户可以在线下进行复杂业务逻辑的调试。这一特点极大地便利了开发者的操作，减少了在线调试和测试的时间和资源消耗，同时也提高了代码的质量和可靠性。通过下载源代码进行调试，用户可以更加灵活地控制应用程序的行为和性能，从而更好地满足业务需求。总之，TinyEngine 的这一特点为用户提供了更多的自主权和灵活性，使得他们可以更加高效地控制应用程序的行为和性能。</p><p></p><p>•&nbsp;TinyEngine 支持 AI 辅助开发。</p><p></p><p>低代码平台与 AI 的结合具有巨大的发展潜力。这种结合可以在很大程度上提高非专业开发者的开发效率和应用智能化水平。随着 AI 技术的不断发展和低代码平台的不断成熟，二者的结合将会在更多领域内实现更高效、更智能的业务流程和管理模式，带来更大的商业价值。低代码平台通过提供易于使用的开发工具和预先构建的模块，简化了应用程序的开发过程。AI 技术则可以帮助应用程序具备更智能、更自适应的特性。通过低代码平台和 AI 的结合，开发者可以更快速、更高效地构建应用程序，并实现更智能化的应用特性。</p><p></p><h2>企业关于低代码的需求</h2><p></p><p></p><h3>PDM 元数据电子审批流</h3><p></p><p></p><p>审批流业务场景是现代企业运营中不可或缺的一环。业务流程从某个特定点开始，然后经过一系列的审批节点，完成流程的审批。这些节点通常由不同级别的人员担任，例如主管、经理、财务、法务和总经理等，每个人都扮演着特定的角色和职责。</p><p></p><p>假设场景如下：流程发起人 A 启动了一个电子审批流程。这个流程首先会被传递到主管进行审批。在审批过程中，主管会仔细检查初始业务流程信息和其他相关数据，然后决定是否进一步推进流程，或退回给 A 进行修订。如果主管批准了这个流程，那么它将被移交给下一级审批人，也就是经理。在经理的审批环节，他/她也会详查相关数据和信息，并基于这些以及自己的独立判断来做出决策。值得注意的是，尽管经理可以查看到主管填写的一些技术信息，但这些信息并不对财务和法务公开。也就是说，只有经理和总经理可以看到这些技术信息，财务和法务无法获知。经理会根据这些保密信息以及自己的专业判断来决定是否继续推进流程。如果经理也批准了该流程，那么它将被送至财务节点进行审批。在审批过程中，财务主要关注经济相关的问题，例如价格、付款方式等等。一旦财务审批通过，流程会被移交给法务进行审批。</p><p></p><p>与财务审批类似，法务审批主要关注法律风险和合规性问题。在审批时，法务会仔细检查相关的合同、协议等法律文件，并评估是否存在任何法律风险或合规性问题。一旦法务批准了流程，流程将被移交给总经理进行最后的审批，以完成整个审批流程。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3f/3f9bc7010954abd1a61d3352ffd197b5.png\" /></p><p></p><p>需要注意的是，这种审批流业务场景并不是只有一个，而是有很多个。例如，除了上述的采购流程，还有其他业务流程需要进行审批，比如：数据入库流程、报价流程等等。每个流程都有自己的特点和审批节点数量不一。有些流程可能只需要两三个节点就可以完成审批，有些则可能需要十几个节点才能完成。但是，所有类型的审批流大致相似。如：页面上常见的元素包括表单、表格以及常用的审批组件等。</p><p></p><p>技术分析：若采用传统的开发方式，每当新增一种流程时，前端开发人员都需要开发所有审批节点的审批页面，并重新进行发布流程。同样地，服务端开发人员也需要重新建立一个审批流，通过特定页面录入各节点审批人，并编写相应的审批流规则。显然，这对于前端和服务端开发人员来说都是十分繁琐的工作。</p><p></p><p>解决方案：&nbsp;基于 TinyEngine 低代码引擎，开发出一个专为电子审批流设计的低代码平台。然后，将所有与流程相关的组件，如模板、评审记录和流程指引等导入到平台的物料区域。最后，将这个专注于开发审批流的低代码平台集成到 PDM 元数据电子流业务模块中。在低代码平台上，想要开发任意一个流程的审批页面，只需要将流程模板拖入，并在模板中嵌入本流程的表单或表格，即可轻松完成该节点的审批页面，极大地提高了开发效率和便利性！服务端也将采用另一种特定于 flow 类型的低代码平台（将在后续内容中详细介绍），以实现对审批流程人员编排。这样，前后端之间的连接就实现了完美的贯通。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b0/b07d35ebf31bbef578cc0b8271e458c1.png\" /></p><p></p><p></p><h3>flow 类型设计器</h3><p></p><p></p><p>图形编排在众多场景中扮演着重要角色，例如流程图、审批流、部署流水线和架构图等。资源编排只是编排的主体变成了云服务资源。</p><p></p><p>资源编排遵循基础设施即代码（Infrastructure as Code, IaC）的设计理念，资源编排与以往单独管理每种云服务资源的方式有所不同。通过资源编排设计器，用户无需手动创建多个资源，只需在平台上使用设计器进行拖拽和配置，即可生成模板，并一键部署多个资源。这样，用户可以更加高效地管理和编排云服务资源，提高资源的利用率和部署速度。</p><p></p><p>因此，针对资源编排服务场景，我们需要定制一个专用的低代码平台来满足用户的需求。该平台将具备图形化界面，允许用户通过简单的拖拽和配置来创建、修改和删除资源编排模板，而无需编写大量的代码。此外，该平台还将支持一键部署功能，以快速部署多个资源，提高资源编排的效率和速度。</p><p></p><p>考虑到需要支持大量的云服务资源，且每个云服务资源需要配置的属性各不相同，因此采用传统开发方式为每种云服务资源开发专门的属性设置页面是不可行的。因此，我们需要一个能够自定义渲染的属性配置方案。通过自定义渲染，用户可以根据不同的云服务资源类型和属性，自由地定义和控制属性页面的交互效果，从而提高属性配置的灵活性和可扩展性。</p><p></p><p>同时模板是极为重要的一环，它直接关系到最终资源的部署。因此，模板需要符合特定的标准格式，这就要求画布和属性面板的输入必须能够准确反映到最终的模板中。</p><p></p><p>整理出主要的述求：</p><p>•&nbsp;整个页面应至少包含以下几部分：资源列表、画布和属性设置面板</p><p>•&nbsp;画布应具备核心的拖拽和连线绘图功能，以支持用户直观地进行资源编排</p><p>•&nbsp;属性设置面板需要支持自定义配置渲染，以满足不同云服务资源类型和属性的配置需求</p><p>•&nbsp;该平台应具备可拓展性，以支持开发出其他能力，满足未来可能出现的新的编排需求</p><p></p><p>在分析了上述需求后，我们可以清楚地看到，使用传统开发方式将面临巨大的工作量和现实的实现困难。同时，经过对比发现，资源编排设计器和低代码设计器之间有许多相似之处，例如它们都涉及基础资源、拖拽操作和配置功能，只是在画布区域存在差异。</p><p></p><p>解决方案：TinyEngine 作为一个出色的低代码引擎，通过优秀的整体架构提供了高度自由的定制能力。它允许我们像搭积木一样选择不同的积木来搭建一个专属的设计器。同时，属性面板全部通过 JSON 配置文件进行渲染，无需编写任何代码，灵活而强大。这种开发方式可以大大降低开发成本，提高效率。该设计器的布局类似于 VS Code，核心模板与功能区域划分清晰明了，易于上手。插件化的架构也使得自由拓展业务相关功能变得轻而易举。综上所述，我们最终决定使用 TinyEngine 来开发图元编排设计器，以满足资源编排的需求。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d7/d7cf46bef87a0d03ef66bedeb7517931.png\" /></p><p></p><p></p><h3>其他业务类型的低码平台诉求</h3><p></p><p>1、跨境电商的低代码平台，旨在方便商家快速装修店铺。商家只需要从平台提供的模板中选择一套适合自己的商品模板，并进行文字和图片的修改，即可快速建立自己的电商网站。此外，该平台还需要具备方便搜索引擎优化（SEO）的功能，让商家的电商网站更容易被潜在客户发现。</p><p>2、随着移动互联网的迅速普及，各种应用程序推送消息的需求日益增长。在这个背景下，APP 厂商只需要使用推送消息平台提供的模板，并简单配置一下推送内容和样式，即可轻松实现消息推送。</p><p>3、运维管理平台是针对企业运营过程中涉及的各种数据和页面进行管理的工具。随着企业运营数据的不断增加，页面变得越来越复杂。其实不同的岗位对于关心的信息也不尽相同。低代码平台的应用可以让不同岗位的员工通过简单的拖拽操作，轻松获取自己需要的数据和信息。这种方式不仅可以提高工作效率，而且还可以降低操作难度，使得更多人可以轻松上手使用。</p><p></p><h2>未来展望</h2><p></p><p>TinyEngine 专注于为用户提供低代码的基础能力，目前正致力于跟生成式 AI 相结合，与用户共同打造面向未来的应用。</p>",
    "publish_time": "2023-09-22 19:39:51",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]