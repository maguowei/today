[
  {
    "title": "Java近期新闻：JDK 22进入Rampdown Phase One、JDK 23专家组、Spring Cloud 2023.0、TornadoVM 1.0",
    "url": "https://www.infoq.cn/article/ui5TlI1RgzgfJXcv5VFR",
    "summary": "<p></p><h4>OpenJDK</h4><p></p><p></p><p>经过评审，JEP 464（<a href=\"https://openjdk.org/jeps/464?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">作用域值（第二次预览）</a>\"）已从 Proposed to Target进入到Targeted（JDK 22）状态。该 JEP 此前叫作扩展本地变量 (孵化器)，提议在 JDK 22 中重新预览 API（API没有变化），以便获取来自上一轮预览 JEP 446（<a href=\"https://openjdk.org/jeps/446?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">作用域值（预览版）</a>\"，在 JDK 21 中发布）和 JEP 429（<a href=\"https://openjdk.org/jeps/429?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">作用域值（孵化器）</a>\"，在 JDK 20 中发布）以来的反馈。该特性可在线程内部和跨线程共享不可变数据，这比线程局部变量更好，特别是在使用大量虚拟线程时。</p><p></p><p></p><h4>JDK 22</h4><p></p><p></p><p>JDK 22 <a href=\"https://jdk.java.net/22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">早期访问版本</a>\" 的 <a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-22%2B27?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Build 27</a>\" 已发布，此版本相比 Build 26 进行了<a href=\"https://github.com/openjdk/jdk/compare/jdk-22%2B26...jdk-22%2B27?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">更新</a>\"，修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2022%20and%20%22resolved%20in%20build%22%20%3D%20b27%20order%20by%20component%2C%20subcomponent&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">问题</a>\"。有关此版本的更多详细信息，请参阅<a href=\"https://jdk.java.net/22/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p>根据 JDK 22 的<a href=\"https://openjdk.org/projects/jdk/22/#Schedule?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布时间表</a>\"，Oracle Java 平台组首席架构师 <a href=\"https://www.linkedin.com/in/markreinhold?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Mark Reinhold</a>\" 正式<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2023-December/008535.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">宣布</a>\" JDK 22 已进入Rampdown Phase One。这意味着主线源代码库已分叉到 JDK <a href=\"https://github.com/openjdk/jdk22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">稳定库</a>\"，不会再为<a href=\"https://openjdk.java.net/projects/jdk/22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">JDK 22</a>\"添加其他 JEP。因此，2024 年 3 月 GA 版本的最终 12 项特性包括：</p><p></p><p>JEP 423：<a href=\"https://openjdk.org/jeps/423?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">G1 区域固定</a>\"JEP 447：<a href=\"https://openjdk.org/jeps/447?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">super() 前导语句（预览）</a>\"JEP 454：<a href=\"https://openjdk.org/jeps/454?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">外部函数和内存 API</a>\"JEP 456：<a href=\"https://openjdk.org/jeps/456?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">未命名变量和模式</a>\"JEP 457：<a href=\"https://openjdk.org/jeps/457?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">类文件 API（预览）</a>\"JEP 458：<a href=\"https://openjdk.org/jeps/458?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">启动多文件源码程序</a>\"JEP 459：<a href=\"https://openjdk.org/jeps/459?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">字符串模板（第二次预览）</a>\"JEP 460：<a href=\"https://openjdk.org/jeps/460?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">向量 API（第七次孵化）</a>\"JEP 461：<a href=\"https://openjdk.org/jeps/461?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">流聚合器（预览）</a>\"JEP 462：<a href=\"https://openjdk.org/jeps/462?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">结构化并发（第二次预览）</a>\"JEP 463：<a href=\"https://openjdk.org/jeps/463?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">隐式声明的类和实例主方法（第二次预览）</a>\"JEP 464：<a href=\"https://openjdk.org/jeps/464?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">作用域值（第二次预览）</a>\"</p><p></p><p>对于<a href=\"https://openjdk.org/projects/jdk/22/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">JDK 22</a>\"，开发者可以通过<a href=\"https://bugreport.java.com/bugreport/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Java Bug Database</a>\"报告错误。</p><p></p><p></p><h4>JDK 23</h4><p></p><p></p><p>JSR 398（<a href=\"https://jcp.org/en/jsr/detail?id=398&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Java SE 23</a>\"）已提交，正式宣布 JDK 22 的六名专家组成员，分别是 <a href=\"https://www.linkedin.com/in/siritter/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Simon Ritter</a>\"（Azul Systems）、<a href=\"https://www.linkedin.com/in/manojnp/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Manoj Palat</a>\"（Eclipse Foundation）、<a href=\"https://www.linkedin.com/in/andrew-haley-3546112/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Andrew Haley</a>\"（Red Hat）、<a href=\"https://www.linkedin.com/in/christoph-langer-764280208/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Christoph Langer</a>\"（SAP SE）、<a href=\"https://www.linkedin.com/in/iris-clark-49159b13b/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Iris Clark</a>\"（Oracle）和 <a href=\"https://www.linkedin.com/in/briangoetz/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Brian Goetz</a>\"（Oracle）。Clark 和 Goetz 将担任规范负责人。其他<a href=\"https://openjdk.org/projects/jdk/23/spec/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">重要日期</a>\" 包括从 2024 年 6 月到 8 月的公共评审和 2024 年 9 月的 GA 发布。</p><p></p><p>JDK 23 <a href=\"https://jdk.java.net/23/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">早期访问版本</a>\" 的 <a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-23%2B0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Build 0</a>\" 和 <a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-23%2B1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Build 1</a>\" 也已发布，解决了一些<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2023%20and%20%22resolved%20in%20build%22%20%3D%20b01%20order%20by%20component%2C%20subcomponent&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">问题</a>\"。有关此版本的更多详细信息，请参阅<a href=\"https://jdk.java.net/23/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>GlassFish</h4><p></p><p></p><p>Eclipse <a href=\"https://glassfish.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">GlassFish</a>\" <a href=\"https://twitter.com/OmniFishEE/status/1731695318649942156?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">第十一个维护版本</a>\"7.0.11带来了问题修复、依赖项升级，解决了Web套接字在默认上下文根下不能工作的问题，修复了AdminGUI 中的缺陷。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/eclipse-ee4j/glassfish/releases/tag/7.0.11?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>TornadoVM</h4><p></p><p></p><p><a href=\"https://www.tornadovm.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">TornadoVM</a>\" 1.0 发布，带来了问题修复和重要改进，例如：使用 <a href=\"https://github.com/openjdk/panama-foreign/blob/foreign-memaccess%2Babi/doc/panama_memaccess.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Panama Memory Segment API</a>\" 分配堆外对象和数组集合；改进了 TornadoVM 的内部字节码处理，避免主机到设备的只写复制；根据最大线程大小改进了默认设备排序。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/beehive-lab/TornadoVM/releases/tag/v1.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"，InfoQ 将跟进并发布更详细的新闻报道。</p><p></p><p>曼彻斯特大学高级处理器技术研究小组研究助理 <a href=\"https://jjfumero.github.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Juan Fumero</a>\" <a href=\"https://www.infoq.com/presentations/tornadovm-java-gpu-fpga/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">在 2020 年 3 月的 QCon 伦敦</a>\" 大会上介绍了 TornadoVM，最近还发表了这篇更为详细的<a href=\"https://www.infoq.com/articles/java-performance-tornadovm/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">文章</a>\"。</p><p></p><p></p><h4>Spring Framework</h4><p></p><p></p><p><a href=\"https://spring.io/projects/spring-cloud?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Spring Cloud</a>\" 2023.0.0（代号 Leyton）已<a href=\"https://spring.io/blog/2023/12/06/spring-cloud-2023-0-0-aka-leyton-is-now-available?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布</a>\"，其中包括错误修复和对子项目的升级，如：Spring Cloud Commons 4.1.0、Spring Cloud Starter Build 2023.0.0、Spring Cloud Kubernetes 3.1.0 和 Spring Cloud Netflix 4.1.0。此版本基于 Spring Boot 3.2.0。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2023.0-Release-Notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p><a href=\"https://spring.io/tools?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Spring Tools</a>\" 4.21.0 <a href=\"https://spring.io/blog/2023/12/06/spring-tools-4-21-0-released?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布</a>\"，增强了类方法级别的请求映射体验，通过 OpenRewrite 集成升级到 Spring Boot 3.2，Eclipse 升级到 2023-12。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/spring-projects/sts4/releases/tag/4.21.0.RELEASE?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>Micronaut</h4><p></p><p></p><p>Micronaut Foundation发布 <a href=\"https://micronaut.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Micronaut Framework</a>\" 4.2.1，包含 <a href=\"https://github.com/micronaut-projects/micronaut-core/releases/tag/v4.2.1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Micronaut Core 4.2.1</a>\" 和模块更新：<a href=\"https://micronaut-projects.github.io/micronaut-grpc/latest/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Micronaut gRPC</a>\"、<a href=\"https://micronaut-projects.github.io/micronaut-test/latest/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Micronaut Test</a>\" 和 <a href=\"https://micronaut-projects.github.io/micronaut-logging/latest/guide/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Micronaut Logging</a>\"。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/micronaut-projects/micronaut-platform/releases/tag/v4.2.1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>Quarkus</h4><p></p><p></p><p>Quarkus 3.6.1，<a href=\"https://quarkus.io/blog/quarkus-3-6-1-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">第一个维护版本</a>\"，带来了错误修复、文档改进和显著的变更，如：确保 GraalVM 23.1 中的 Truffle 在 Quarkus 的所有模式下正常工作；在运行时禁用 <a href=\"https://github.com/quarkusio/quarkus/blob/main/extensions/oidc-client/runtime/src/main/java/io/quarkus/oidc/client/filter/OidcClientFilter.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">@OidcClientFilter</a>\" 注解以改善应用程序测试；从 <a href=\"https://quay.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Quay.io</a>\" 下载构建镜像时的可靠性改进。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.6.1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">变更日志</a>\"。</p><p></p><p></p><h4>WildFly</h4><p></p><p></p><p>WildFly 30.0.1，<a href=\"https://www.wildfly.org/news/2023/12/05/WildFly3001-Released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">第一个维护版本</a>\"，包含了组件升级和重要的问题修复，如：在 WildFly 中最简单的 Jakarta RESTful Web Services 应用程序失败；包含会话数据的集群文件永远不会被消减或删除；由于目前仅支持 byte[] 实例，导致 Infinispan 缓存写入异常。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/wildfly/wildfly/releases/tag/30.0.1.Final?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>Hibernate</h4><p></p><p></p><p><a href=\"https://hibernate.org/search/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Hibernate Search</a>\" 7.0.0.Final 已<a href=\"https://in.relation.to/2023/12/05/hibernate-search-7-0-0-Final/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布</a>\"，包括：将 JDK 11 作为基线；与 JDK 11、JDK 17、JDK 21、Jakarta EE、Hibernate ORM <a href=\"https://docs.jboss.org/hibernate/orm/6.3/userguide/html_single/Hibernate_User_Guide.html#multitenacy-hibernate-TenantId?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">基于鉴别器的多租户</a>\"、Elasticsearch 8.11 和 OpenSearch 2.10、2.11 兼容；依赖升级到 Hibernate ORM 6.4.0.Final 和 Apache Lucene 9.8。</p><p></p><p></p><h4>IBM Semeru Runtime</h4><p></p><p></p><p>IBM发布 <a href=\"https://developer.ibm.com/languages/java/semeru-runtimes/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">IBM Semeru Runtime</a>\" <a href=\"https://developer.ibm.com/languages/java/semeru-runtimes/downloads/?license=IBM&amp;version=17&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">17.0.9.0</a>\" 和 <a href=\"https://developer.ibm.com/languages/java/semeru-runtimes/downloads/?license=IBM&amp;version=11&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">11.0.21.0</a>\"。该版本基于 Eclipse <a href=\"https://eclipse.dev/openj9/docs/version0.41/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">OpenJ9 0.41</a>\" 和 OpenJDK <a href=\"https://www.oracle.com/java/technologies/javase/11-0-21-relnotes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">jdk-11.0.21+9</a>\" 和 <a href=\"https://www.oracle.com/java/technologies/javase/17-0-9-relnotes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">jdk-17.0.9+9</a>\"，包含了来自 OpenJDK <a href=\"https://blogs.oracle.com/java/post/jdk-2101-1709-11021-and-8u391-have-been-released?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">2023 年 10 月</a>\"的最新 CPU 和安全性修复。有关此版本的更多详细信息，请参阅<a href=\"https://www.ibm.com/support/pages/semeru-runtimes-release-notes/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>Apache软件基金会</h4><p></p><p></p><p><a href=\"https://quarkus.io/guides/camel?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Camel Quarkus</a>\" 3.2.3 <a href=\"https://camel.apache.org/blog/2023/12/camel-quarkus-release-3.2.3/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布</a>\"，与 <a href=\"https://camel.apache.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Apache Camel</a>\" 4.0.3 和 Quarkus 3.2.9.Final 对齐。有关此版本的更多详细信息，请参阅<a href=\"https://camel.apache.org/releases/q-3.2.3/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>JHipster</h4><p></p><p></p><p><a href=\"https://www.jhipster.tech/jhipster-lite/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">JHipster Lite</a>\" <a href=\"https://twitter.com/pascalgrimaud/status/1732813320623645153?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">1.1.0</a>\" 和 <a href=\"https://twitter.com/pascalgrimaud/status/1730978212023325090?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">1.0.0</a>\" 发布：支持 JDK 21、Spring Boot 3.2.0 和 Spring Cloud 2023.0.0；默认使用 YAML 而不是 properties 进行配置；新增了 <a href=\"https://www.thymeleaf.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Thymeleaf</a>\" 和 <a href=\"https://htmx.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">htmx</a>\" webjars 模块；众多库升级；不再支持 JDK 17。有关这些版本的更多详细信息，请参阅 <a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v1.1.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">1.1.0</a>\" 和 <a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v1.0.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">1.0.0</a>\" 的发布说明。</p><p></p><p></p><h4>JBang</h4><p></p><p></p><p><a href=\"https://jbang.dev/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">JBang</a>\" 0.114.0 采用了 <a href=\"https://github.com/maveniverse/mima/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">MIni MAven</a>\" (MIMA) 进行 Maven 解析，MIMA 是一个使用了 <a href=\"https://maven.apache.org/resolver/index.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Maven Artifact Resolver</a>\"的“一站式可重用 Java 8 库”。Red Hat 杰出工程师、JBang 作者 <a href=\"https://github.com/maxandersen?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Max Andersen</a>\" 指出，其下载速度提高了 20%。有关此版本的更多详细信息，请参阅<a href=\"https://github.com/jbangdev/jbang/releases/tag/v0.114.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">发布说明</a>\"。</p><p></p><p></p><h4>JakartaOne Livestream 2023</h4><p></p><p></p><p>第五届年度 <a href=\"https://jakartaone.org/2023/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">JakartaOne Livestream 2023</a>\" 大会由 <a href=\"https://www.linkedin.com/in/shabnam-mayel/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Shabnam Mayel</a>\"、<a href=\"https://www.linkedin.com/in/tanja-obradovic-095604/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Tanja Obradovic</a>\" 和 <a href=\"https://www.linkedin.com/in/ivargrimstad/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Ivar Grimstad</a>\" 主持，大会内容包括 45 分钟会议、15 分钟 Jakarta EE Studio 会议以及行业主题演讲。来自 Java 社区的演讲者包括：<a href=\"https://www.linkedin.com/in/david-mat%C4%9Bj%C4%8Dek/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">David Matějček</a>\"、<a href=\"https://www.linkedin.com/in/arjan-tijms-1214aa1b1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Arjan Tijms</a>\"、Igor De Souza、<a href=\"https://www.linkedin.com/in/madsopheim/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Mads Opheim</a>\"、<a href=\"https://www.linkedin.com/in/thomas-watson-62832a1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Thomas Watson</a>\"、<a href=\"https://www.linkedin.com/in/jos%C3%A9-paumard-2458ba5/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">José Paumard</a>\"、<a href=\"https://www.linkedin.com/in/mihalyiondrej/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Ondro Mihályi</a>\"、<a href=\"https://www.linkedin.com/in/otaviojava/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Otávio Santana</a>\"、Nathan Rauh、<a href=\"https://www.linkedin.com/in/ghgeek/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Luqman Saeed</a>\"、<a href=\"https://www.linkedin.com/in/emilyfhjiang/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Emily Jiang</a>\" 和 <a href=\"https://www.linkedin.com/in/javareza/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MDM0NzQ4MTYsImZpbGVHVUlEIjoiTkprYm5lUnhON2lLRGprUiIsImlhdCI6MTcwMzQ3NDUxNiwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.iiuOi2KMh_t-L7PFcCWdzh3Q9ovjTMHbD91nePANwh0\">Reza Rahman</a>\"。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2023/12/java-news-roundup-dec04-2023/\">https://www.infoq.com/news/2023/12/java-news-roundup-dec04-2023/</a>\"</p>",
    "publish_time": "2023-12-26 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "夸克App升级健康搜索 推出健康大模型应用“夸克健康助手”",
    "url": "https://www.infoq.cn/article/DJzgu2OoJgOoqPHf3gos",
    "summary": "<p>大模型时代，夸克率先迈出了革新搜索的第一步。12月25日，夸克App宣布全面升级健康搜索，推出健康大模型应用“夸克健康助手”，并在部分搜索结果和功能板块中上线全新的内容交互方式。升级后，用户在夸克中搜索健康信息的正确率超过行业平均水平，多样化的信息呈现方式和优质搜索内容将更加便捷和实用。</p><p><img src=\"https://static001.geekbang.org/infoq/ee/ee93998e69cb31e1d5475b147eb8b940.png\" /></p><p></p><h2>革新搜索迈出第一步，夸克打造健康搜索新体验&nbsp;</h2><p></p><p></p><p>自互联网出现以来，通过搜索平台查询健康信息成为用户的高频需求之一。但是从实际体验来看，传统搜索框存在问题表述不清、信息理解困难等顽疾。随着AI时代来临，大模型应用即将改变这一现状。为了给用户提供更好的信息服务，夸克通过升级健康搜索产品和内容，率先开启变革搜索的第一步。</p><p>&nbsp;</p><p>据悉，在产品层面，夸克推出大模型健康应用“夸克健康助手”，融合医学知识图谱和生成式对话能力，用户可以在部分搜索结果中，看到由夸克健康助手回答的AIGC内容。与传统搜索结果相比，提供了更加全面和准确的健康信息。</p><p><img src=\"https://static001.geekbang.org/infoq/ec/ecadfb69f5e5cba548c951b8e65ae299.png\" /></p><p></p><p>同时，夸克健康助手也有独立的功能页面，支持用户针对健康问题进行多轮提问和对话。这种问答式的交互方式能呈现出更多维度的内容建议，让每一个人都能拥有一个可以随时交流的AI健康助手。</p><p>&nbsp;</p><p>此外，为了更好地创新产品体验，夸克还给智能筛查功能加入了大模型能力。用户可以通过勾选补充症状信息，就能找到与自身情况匹配的健康搜索结果，同时还能筛选出常见病症问题，实现精准地快速查找。</p><p>&nbsp;</p><p>面对复杂的用户需求，通过颠覆式的产品创新，夸克让健康搜索告别了搜索框的限制，用户能更加自由地表达和查询病症信息。同时，让健康内容的搜索结果以AIGC的方式出现，进一步提升用户使用效率。</p><p></p><h2>建设健康专业内容生态，大模型让搜索体验更便捷、更实用</h2><p></p><p>&nbsp;</p><p>在产品升级的同时，夸克也持续加大在健康内容层面的投入。升级后的夸克健康搜索会给用户提供更加准确的信息服务。基于夸克大模型和全网权威观点汇总，用户在夸克App中搜索健康内容的正确率超过行业平均水平。为了给用户提供更加精准的专业知识，经过精调和知识增强的夸克大模型，以486分的高分通过临床执业医师资格考试。同时在健康内容上的幻觉率已经降低至5%以内，成为国产大模型中的“学霸”。</p><p>&nbsp;</p><p>清华大学新闻学院教授、博士生导师沈阳表示，大模型要减少错误率，一个重要的措施就是要跟搜索引擎进行协同。在教育、健康等垂直领域中，夸克在对话、解题上的能力取得了新的突破，是国产自研大模型的优秀代表之一。</p><p>&nbsp;</p><p>针对AIGC等全新搜索内容形态，夸克还成立了夸克健康专家团，与全国顶级公立三甲医院的专家共建大模型内容生态，确保内容层面的专业性、正确性和科学性。此外，夸克还会招募健康大模型精调师，持续地结合用户需求和热门病症，提供最新的健康知识。</p><p><img src=\"https://static001.geekbang.org/infoq/52/529e1e7f8e195a2ad1ee193b003d87e9.png\" /></p><p>目前，夸克已经与200多位权威医学专家、60多家全国知名公立三甲医院和40多家医学机构合作。在健康搜索的结果页中，以专题页、百科、图文、音视频、问答等方式，提供病症原因、用药建议、就医指南等实用易懂的健康内容，不同的信息呈现方式进一步满足用户的个性化需求。</p><p>&nbsp;</p><p>今年11月，阿里巴巴智能信息事业群发布全栈自研、千亿级参数的夸克大模型。夸克负责人表示，坚持自研大模型是持续推动夸克App在产品体验创新和迈向新一代搜索的技术底座。</p><p>&nbsp;</p><p>随着夸克全面升级健康搜索，也掀开了革新搜索的序章。在行业已经多年没有变化的环境下，夸克将率先通过新一代搜索产品和智能工具，解决用户生活中面临的实际问题，加速成为年轻人工作、学习和生活上的智能助手。</p><p>&nbsp;</p>",
    "publish_time": "2023-12-26 14:03:33",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "亿级 DAU 多媒体处理框架 BMF 的实践之路",
    "url": "https://www.infoq.cn/article/VtD4r0FBSvCOs5qhjwyC",
    "summary": "<p>本期课程《亿级DAU多媒体处理框架BMF的实践之路》，火山引擎多媒体处理架构师王少飞将为大家介绍基于抖音集团大规模实践自主研发的通用多媒体处理框架BMF。</p>",
    "publish_time": "2023-12-26 14:46:09",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "谷歌或将再裁3万人，不是员工雇不起，只因AI更有性价比？",
    "url": "https://www.infoq.cn/article/aN6GWsMEBpg7Scs0vztO",
    "summary": "<p>The Information 援引一位知情人士的话报道，Alphabet 旗下的谷歌计划对其广告销售部门的大部分进行重组，涉及3万名员工。</p><p>&nbsp;</p><p>据报道，负责美洲大客户广告销售的肖恩·唐尼（Sean Downey）上周在一次全部门会议上表示，谷歌计划重组其广告销售团队，但没有具体说明此举是否包括裁员。</p><p>&nbsp;</p><p>谷歌没有立即回应路透社的置评请求。</p><p>&nbsp;</p><p>今年 1 月，Alphabet宣布计划在全球裁员 12,000 人，相当于其全球员工总数的 6%。6 月初，谷歌又解雇了地图应用 Waze 的员工，因为该应用的广告系统与 Google Ads 技术合并。</p><p>&nbsp;</p><p>谷歌正致力于转型为一家生成式AI企业。针对ChatGPT的“红色代码”让谷歌员工们争先恐后提出种种AI功能与思路，可一旦这项工作有所成就、尘埃落定，谷歌又开始掉转枪口，尝试用AI新方案进行自我“优化”。更直白地讲，随着人工智能登上舞台，谷歌到底还需要多少“天然智能”？</p><p>&nbsp;</p><p></p><h2>AI可能抢走了谷歌员工的饭碗</h2><p></p><p>&nbsp;</p><p>The Information最近报道称，AI可能正在砸掉谷歌员工的饭碗。这篇报道援引了知情人士的说明，提到谷歌打算“精简人力，包括通过潜在的裁员重新分配其大型客户销售部门中，负责监督与主要广告商间合作关系的员工。”报道指出，在谷歌新型AI工具强大的自动化生产力的冲击之下，不少岗位正在被彻底取代。就在上周，谷歌广告部门组织的集体会议已经公布了下阶段重组计划。</p><p>&nbsp;</p><p>谷歌曾在今年5月宣称“AI广告的新时代”即将来临，其特点就是“谷歌广告将引入自然语言对话体验，旨在加快广告宣传落地速度并简化搜索体验”。谷歌表示，新的AI方案能够扫描客户网站并“生成关联性强且效果显著的关键词、标题、描述、图像及其他资产”，也就是说Google Ads聊天机器人将同时扮演设计师与销售专家这双重角色。</p><p>&nbsp;</p><p>谷歌旗下广告工具Performance Max（简称PMax）在今年5月的发布中获得了生成式AI技术的加持，现在可以“创建自定义资产并通过几次点击轻松实现扩展”。</p><p>&nbsp;</p><p>首先，PMax能够帮助广告商决定是否要在YouTube、谷歌搜索、Discover、Gmail、谷歌地图或者第三方网站的banner位置上投放广告。此外，PMax还能够依托于生成式AI技术制作广告内容，自主扫描客户网站以获取素材（但目前内容审核仍有广告商员工的参与）。这种全新流程号称可以“效率最大化”，广告内容将由机器负责设计，并根据点击率的实时变化和反馈不断重新调整。谷歌的官方描述称“资产将自动混合与匹配，以根据广告发布的Google Ads渠道选择宣传效果最好的组合。”</p><p>&nbsp;</p><p>以往，人类员工根本不可能根据即时点击验证和A/B测试来动态调整广告内容，也没人愿意花钱做这么精细的设计整合，因此由AI技术监控并接手似乎确实是个明智的思路。报道还提出让AI完成这项工作的另一大优势：“由于此类工具不需要人类员工的过多介入，所以实现成本相对更低，将让广告宣传获得更高的利润回报。”</p><p>&nbsp;</p><p>The Information指出，“自发布以来，越来越多的广告商开始采用PMax，从而消除了部分专为特定谷歌服务（例如谷歌搜索）销售广告的人力需求，逐步实现了大客户广告设计工作的AI化转型。”</p><p>&nbsp;</p><p>根据报道所言，截至一年之前，谷歌还有约1.35万名员工专门从事此类销售工作，占广告部门3万人力中的很大一部分。当然，这1.35万员工不一定都会受到影响，且即使受到影响也不一定会被解雇，而可能被重新调配到谷歌其他部门。我们很快就会知晓Google Ads这轮大规模重组究竟会波及多少员工，报道称“部分内部人士预计调整方案将于下个月正式公布”。</p><p>&nbsp;</p><p></p><h2>席卷科技公司的裁员潮仍在持续</h2><p></p><p>&nbsp;</p><p>与此同时，科技巨头英特尔今年将进行第五轮裁员，这揭示了美国大公司在经济衰退担忧缓解的情况下裁员的更广泛趋势。据媒体报道，英特尔正准备在福尔瑟姆（萨克拉门托县）研发工厂裁员约 235 名员工。裁员计划于 12 月 31 日开始，持续两周时间。</p><p>&nbsp;</p><p>英特尔的成本削减计划旨在到 2025 年实现 100 亿美元的削减，涉及多种策略，包括裁员、减少工作时间和潜在的部门销售。公司发言人阿迪·伯尔（Addy Burr）强调，英特尔正在积极努力加速其战略目标，同时降低成本，预计未来一年可能会进一步削减成本。</p><p>&nbsp;</p><p>随着科技行业经历变革，谷歌和英特尔的这些重组努力凸显了该行业主要参与者不断变化的动态和面临的挑战。</p><p>&nbsp;</p><p>去年 11 月份，Facebook 母公司 Meta 进行了首次大规模裁员，解雇了 13%的员工。然而扎克伯格并不满足，在今年 2 月举行的财报电话会议上，他说自己仍然觉得公司发展太慢，而且过于臃肿。他将 2023 年称为“效率年”，并明确要削减中层管理人员数量和表现不佳的项目，要求许多经理和董事要么转换到能体现个人产出的基础岗工作（individual contributor jobs），要么就离开公司。</p><p>&nbsp;</p><p>据 Business Insider 报道，今年宣布裁员18000人的 Amazon 也一直在研究其“控制范围（span of control）”，这是一个行业术语，指的是每位经理手下的直接下属人数。</p><p>&nbsp;</p><p></p><p>参考链接：</p><p><a href=\"https://arstechnica.com/gadgets/2023/12/report-google-ads-restructure-could-replace-some-sales-jobs-with-ai/\">https://arstechnica.com/gadgets/2023/12/report-google-ads-restructure-could-replace-some-sales-jobs-with-ai/</a>\"</p><p><a href=\"https://www.hindustantimes.com/business/google-to-restructure-ad-sales-unit-staffers-concerned-about-potential-job-cuts-report-101703317757290.html\">https://www.hindustantimes.com/business/google-to-restructure-ad-sales-unit-staffers-concerned-about-potential-job-cuts-report-101703317757290.html</a>\"</p>",
    "publish_time": "2023-12-26 15:10:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "《云上新视界》第六期：亿级 DAU 多媒体处理框架 BMF 的实践之路",
    "url": "https://www.infoq.cn/article/VtD4r0FBSvCOs5qhjwyC",
    "summary": "<p>本期课程《亿级DAU多媒体处理框架BMF的实践之路》，火山引擎多媒体处理架构师王少飞将为大家介绍基于抖音集团大规模实践自主研发的通用多媒体处理框架BMF。</p>",
    "publish_time": "2023-12-26 14:46:09",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "对标微软，国内操作系统在AI上发力：统信发布UOS AI新版本，正式开放API",
    "url": "https://www.infoq.cn/article/RCcKDzb3xJw13Fc56RDb",
    "summary": "<p>12月20日，统信软件正式发布统信UOS AI V1.1版本，全新升级的桌面智能助手正式亮相。</p><p>&nbsp;</p><p>“AI和操作系统的结合是必然趋势。微软明年发布的win12， 最大特点就是加上了AI能力，这个工作我们也同步在做了，在我们明年的产品中就会看到一些能力，基本上在跟微软对标，不可能落后的。”统信软件总经理刘闻欢说道。</p><p>&nbsp;</p><p>刘闻欢表示，“AI+OS”中的AI主要是指通过AI为原本由本地操作系统处理的通用场景个性化赋能；让系统应用有接入AI的能力，比如接入AI的画图；通过AI的使用来提高开发、管理和维护的效率；通过个人智能助理，提高使用终端的生产力。</p><p>&nbsp;</p><p>OS指的是操作系统给AI赋能，比如为个人数据在本地运算推理提供可靠的环境、为AI框架提供快速部署的能力、建设智算中心和私有化平台、为AI应用提供性能优化，同时为AI整机、AIPC提供一体化的交付等。</p><p>&nbsp;</p><p>根据上述理解，此次统信软件发布了桌面智能AI助手，支持自然语言交互操作，覆盖打开应用、设置系统功能、创建日程等四十多个场景，支持知识问答、内容创作等。同时，UOS AI V1.1支持云侧和端侧模型接入，在线接入90%的国内外主流大模型，包括百度千帆、讯飞星火、智谱、360智脑等；端侧接入文生图、语音、自然语言搜索、图片处理、图片分类等本地模型。</p><p>&nbsp;</p><p>在应用接入方面，目前已有10+应用接入UOS AI。通过本地模型和在线模型，UOS AI向各应用提供AI能力支持。例如，面向全新的编程环境，自主研发、面向信创生态的集成开发环境deepin-IDE除了包含IDE常用功能，还支持AI编程助手、多种兼容协议、多种开发语言、代码版本管理集成等。</p><p>&nbsp;</p><p>此外，为了更好的赋能生态伙伴进行应用开发，UOS AI API 1.0正式开放，这是国内第一个系统级AI应用开发框架，为AI应用开发提供系统级的AI接口。通过UOS AI统一接口，应用免配置即可获得热门模型的AI能力，包括文本聊天、图形处理、语音识别与合成等。</p><p>&nbsp;</p><p>“以前我们有时看到了很多很好的趋势，但是没有资源和市场去支撑发展，但现在有这个能力了。”刘闻欢说道。</p><p>&nbsp;</p><p></p><h4>国内操作系统未来五年的三个关键词</h4><p></p><p>&nbsp;</p><p>根据2023中国操作系统产业大会暨统信UOS生态大会披露的最新数据，中国操作系统生态软硬件适配数已突破500万，较去年同期增长400%，国产操作系统生态已步入爆发成长期。</p><p>&nbsp;</p><p>一方面，目前市场规模不断扩大，中国系统已经成为软件和集成商业务开发的基石，很多企业已经在开发原生应用。另一方面，国产操作系统用户的增多，用户的需求越来越明确，开发者希望得到的支持越来越多。</p><p>&nbsp;</p><p>为满足开发者需求，统信构建了一个线上UOS开发平台，为开发者提供全面的技术文档、工具支持、培训服务和社区交流平台，同时发布了第一版《统信UOS开发者应用指南》。</p><p>&nbsp;</p><p>据统信应用商店披露数据，截至目前，基于统信UOS的原生应用同比增长300%，达到6000余款，而个人操作系统通常拥有3000个以上的常用软件。这意味着，基于国产操作系统开发的原生应用已经基本满足个人日常使用。</p><p>&nbsp;</p><p>会上，第三方权威机构还发布最新市场数据：统信UOS桌面端发货量超600万，市占率持续第一；统信UOS服务器端新增市场增速第一，中国70%党政、80%央国企、65%部委、90%金融、90%教育的核心与一般业务系统都运行在统信UOS之上。</p><p>&nbsp;</p><p>对于国内操作系统未来五年的发展，刘闻欢表示关键词有三个：多端、云和智能。</p><p>&nbsp;</p><p>多端是指多端协同，刘闻欢表示要真正把多端协同做成功，不是靠一个厂商，也不是一年两年就能做起来。未来5年在多端上面还有很多工作，包括统一技术架构、生态统一、实现相应数据配置与用户能力的同步等。</p><p>&nbsp;</p><p>在云能力方面，刘闻欢坦言统信其实是在补课，因为国外厂商在服务器、桌面等方面已经做完了，但国内操作系统在云能力方面还做得还不够好。未来，统信需要补上数据同步、数据中心的云能力支撑、操作系统公有云的支撑、云化应用解决方案等系列工作。</p><p>&nbsp;</p><p>智能化毋庸置疑是国际操作系统目前主要探索的方向。“以前我们所有的工作都在追赶，追了好几年，追到还剩三五年的差距了，突然AI来了。如果追平以后再做，我们可能到时候会被国外优秀的产品拉出5到10年的差距。所以我们要一边补课，一边紧跟国际主要技术进行研发。”刘闻欢说道。</p><p>&nbsp;</p>",
    "publish_time": "2023-12-26 16:36:42",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "揭秘面向 AI 的编程语言 ｜InfoQ《极客有约》",
    "url": "https://www.infoq.cn/article/3sNKiB0pB2y5JBCGT3iD",
    "summary": "<p>随着 AI 技术的快速发展，大模型成为了行业的新趋势。这为自然语言编程提供了新的机会和挑战，面向 AI 的编程语言正逐渐成为开发者的新宠。它们不仅为机器学习和深度学习提供了强大的支持，还为大数据处理、模型训练和部署等领域带来了革命性的变革。</p>\n<p>自大语言模型爆火后，这项技术整条链路上的各个环节都受到诸多关注，编程语言也是如此，许多面向大模型的编程语言如雨后春笋般涌现，那么，面向 AI 的编程语言与传统的编程语言有何不同？它需要具备哪些特征？</p>\n<p>嘉宾简介：</p>\n<p>张炜昕，香港大学博士，布里斯托大学 Senior Research Associate，长期从事编程语言研究。现为网易杭州研究院编程语言实验室负责人，主导 CodeWave 智能开发平台编程语言 NASL 的设计。以第一作者身份在 TOPLAS，ECOOP 等编程语言期刊和会议上发表论文多篇，并获 ECOOP“杰出软件制品奖”和 Programming 期刊“编委会选择奖”。曾任 Scala 研讨会主席，IFL 程序委员，PLDI、OOPSLA 软件制品审查委员，以及多个编程语言会议的审稿人。</p>",
    "publish_time": "2023-12-26 17:10:26",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "国产编程语言新拐点：聊聊从 Mojo 到 MoonBit 的思考 | 年度技术盘点与展望",
    "url": "https://www.infoq.cn/article/1X5jJEzrsIa5M1HR3RRz",
    "summary": "<p></p><p><img src=\"https://static001.geekbang.org/infoq/cb/cb999af17df70cd30d1724d9b1ea4107.jpeg\" /></p><p></p><p>作者 |&nbsp;MoonBit 团队（主笔：张宏波、陈昱蓉、吴静纯）</p><p>策划 | 蔡芳芳</p><p></p><p>2023 年是生成式人工智能引领技术革命的一年。随着 AI 大语言模型（LLM）不断突破和开源社区活跃程度达到前所未有的高度，以 OpenAI 的 GPT-4、Meta-LLaMA 等为代表的重量级产品和服务相继发布，AI 技术的蓬勃发展给编程语言带来了新的挑战和机遇。编程语言作为时代演进的关键引擎，始终紧密契合着当下的技术发展与需求，从而随着时代的演变而不断适应变化。从大型机时代的 Fortran，到个人计算机时代的 C 语言，再到互联网时代的 Java 和 Python，每种语言都因适应当时的技术趋势而受到推崇。</p><p></p><p>2023 年作为进入人工智能时代拐点的一年&nbsp;，如何更好地开发 AI 模型和 AI 原生应用是当下开发者工具平台面临的重要机遇和挑战，基于此，今年也诞生了两门值得关注的新编程语言：Mojo 和 MoonBit。前者为 LLVM 之父 Chris Lattner 主导打造，结合了 Python 的可用性与 C 的性能，能够释放 AI 可编程性和可扩展性，更有利于在 AI 时代高效地开发模型。后者是前 OCaml 核心团队开发成员、ReScript 作者张宏波带领团队自研的工业级编程语言，专注为 AI 原生应用开发。</p><p></p><p>本文将结合 MoonBit 团队对大模型时代编程语言、开发平台发展趋势的思考，剖析 MoonBit 的设计目标、设计思路，盘点 MoonBit 在 2023 年取得的进展以及未来生态发展规划，希望能对关注编程语言动态的读者有所帮助。本文是 “2023 InfoQ 年度技术盘点与展望” 系列文章之一，由 InfoQ 编辑部、MoonBit 团队共同制作呈现。</p><p></p><h2>未来已来：大模型正在改变开发者</h2><p></p><p></p><p>AI 在编程领域的崛起，如 ChatGPT 和 Github Copilot，正在改变开发者获取信息和编写代码的方式。AI 技术也预示了行业赛道和市场未来的转变。当 ChatGPT 面世之后，Stackoverflow 这一备受欢迎的开发者社区遭受了冲击，网站流量明显下降，导致社区不得不宣布裁员近三分之一，这一现象反映了 AI 正在尝试替代传统开发工具的地位。原因在于，在代码生成方面，GPT-4、Copilot 等底层技术已经日趋成熟，即便是与 GPT-4 训练数据无直接相关的新领域，经过微调后所生成的代码质量已经非常出色，可以解决各种实际问题。</p><p></p><p>同时，已有的编码工具优化迭代正潜移默化改变了组织与个人开发者的工作模式，海量用户的涌入促使工具需要不断更新以满足用户需求；Github CEO Thomas Dohmke 在今年 6 月发布的博客 [1]&nbsp;《The economic impact of the AI-powered developer lifecycle and lessons from GitHub Copilot》提到：“Copilot 已被超过一百万开发者启用，并被超过 20,000 家组织采用。它已生成超过三十亿行被接受的代码，成为全球使用最广泛的 AI 开发者工具。”</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/47/47341db1e780a1e87e43b36f0d91d883.png\" /></p><p>资料图片来源：Github</p><p></p><p></p><blockquote>AI的开发者生产力优势可能会使全球 GDP 增加超过 1.5 万亿美元。利用 30% 的生产力提升，预计到 2030 年全球将有 4500 万专业开发者，生成式 AI 开发工具到 2030 年可以为全球容量额外增加 1500 万“有效开发者”的生产力收益。</blockquote><p></p><p></p><h3>大模型给已有的开发工作“降本增效”</h3><p></p><p></p><p>在 Andrej Karpathy 的博客 [2]《Software 2.0》中，他探讨了人工智能如何改变软件开发方式：“Software 2.0 代表着我们可以用大量的数据和算力来解决以前需要大量人力和成本来解决的复杂问题。” AI 编码助手则是上述的具体实现。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9e/9e8cad2f1f73baebdb38f23c68fe6fb4.png\" /></p><p>资料图片来源：Github</p><p></p><p></p><blockquote>调查数据显示，AI 编码工具不仅提高了整体生产力，还带来了技能提升的机会。75% 的开发者表示在使用 GitHub Copilot 时感到更加充实，在具体的生产数据方面，Copilot 能够完成高达 46% 的代码，帮助开发人员将编程速度提高了 55%。</blockquote><p></p><p></p><p>未来的编码工作流程将呈现全新的面貌：AI 编码工具将可以大量生成短期的软件和测试解决方案，不再追求长期的可重复利用性，由于生产过程的高效自动化，未来的推理成本、推理延迟性都将大幅降低。另一方面，工程发展好坏并非在理论上有挑战，而是在工程实践中的持续优化和迭代，这主要体现在未来代码大模型将被提炼成中小型模型，从而实现在边缘设备运行的可能性。</p><p></p><p></p><blockquote>在代码训练推理领域，实际上并不需要前后的历史知识和上下需要索引人文典故，可以预见的将来大模型会逐渐蒸馏成一个中小型模型，可能是 70 个亿的参数、10 个亿参数或者 100 亿参数，这种规模就已经非常有效果了。</blockquote><p></p><p></p><p>相对较小的模型让在边缘设备、个人电脑上的大模型运行成为可能。此外，硬件架构的升级让消费级硬件能够运行更大规模的模型，目前强大的 Mac Pro 等已经可以承载数百亿参数的模型。随着这种参数量化的发展，更多模型将能在边缘设备上运行，这是功能上的进步，并不涉及理论上的难点。这种发展在未来几年内将变得更加普遍。</p><p></p><p>同时随着生成式 AI 的发展，编程语言之间的差异变得不再那么明显。随之带来的是编程语言的学习门槛降低。目前学习一门新的编程语言，关键点之一在于掌握其生态系统，包括语法和库的使用。举个例子，区分成熟的 Java 工程师和专业的 Java 工程师的主要因素之一是对各种库的熟悉程度和使用直觉。</p><p></p><p>未来，生成式 AI 的存在可能极大地简化这一过程。例如，当需要进行 JSON 解析时，生成式 AI 可以自动推荐合适的库。这就像有一个助手在一旁，不仅帮助选择合适的工具，还可以解释不熟悉的代码片段。因此，学习新语言将变得更加直观和简单。</p><p></p><p>这种变化预示着未来的编程重点可能会从工具本身转移到端到端的体验上。在开发一个应用时，开发者可能只需阐述他们的想法，AI 接着就会生成相应的代码。例如，在开发一个天气预报应用时，开发者可以立即看到初步的 UI，并根据实时渲染的反馈进行调整，以优化应用的表现和功能。</p><p></p><p>在这样的工作流程中，编程工具本身变成了一个中介，而不是最终用户直接关注的焦点。这并不意味着工具的重要性降低了，而是其角色发生了转变。用户可能不再那么关注工具的具体细节，但理解这些工具的原理仍然至关重要，这对于高效使用 AI Agents、解决复杂问题以及进行创新来说都是不可或缺的。</p><p></p><h3>大模型与程序员：协同合作大于替代</h3><p></p><p></p><p>在目前基于 Transformer 框架的大型模型下，人工智能完全取代人类的可能性较低。如果把当下人工智能分类为人类认知系统中的系统 1（thinking fast）和系统 2（thinking slow），“系统 1”智能即条件反射式的智能，能够瞬间回答问题。与“系统 2”逻辑分析系统需要深度思考的智能相比，现在的 AI 更接近前者。这表现在无论问题的难度，每个 token 生成答案的速度都相似。另外，基于 Transformer 架构，随着上下文窗口增长，复杂度呈 n²上升，窗口无法做到很大，即使有可能实现 100 万 token 大小的模型，但其所能容纳的代码规模仍相对较小。因此，目前的 AI 不太可能完全取代人类，更可能是“L2 或 L3 级别”的辅助驾驶，而非完全自主的 L4 级别自动驾驶。</p><p></p><p>AI 编程工具的长远目标在于使 LLM 具备系统 2 的能力，构建框架进行深度思考和分析，做出更复杂、可靠的决策。一个典型例子是“chain of thoughts”系列研究，通过提示和 Python 代码模拟人类复杂推理，激发 LLM 的智能。</p><p></p><h2>编程语言与开发平台的未来走向</h2><p></p><p></p><h3>大模型在大型开发项目上的主要难点</h3><p></p><p></p><h4>大型项目的挑战</h4><p></p><p></p><p>伴随着大模型参数和数据的提升，AI 大模型也应该充分考虑到大型项目所面临的各项挑战和实际诉求。对于大模型“世界”来说，算法是“生产关系”，是处理数据信息的规则与方式；算力是“生产力”，能够提高数据处理、算法训练的速度与规模；数据是“生产资料”，高质量的数据是驱动算法持续迭代的养分。在这之中，算力是让大模型转动的前提。而庞大的计算需求和数据集的不断扩大都将成为大型项目需要克服的主要问题。</p><p></p><p>大模型正对算力提出史无前例的要求，据英伟达的数据显示，使用基于 Transformer 模型的大型模型之前，算力需求每两年增长大约 8 倍。然而，自从采用了基于 Transformer 的架构后，算力需求大致是每两年提升约 275 倍。基于此，拥有 530 亿参数的 Megatron-Turing NLG 模型可能需要超过 10 亿 FLOPS 的算力来运行。这种算力需求的巨大增长意味着只有更大规模的算力平台才能训练如此庞大的模型。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/cf/cfcade5cebe1a56725c59f9af8b97f5a.png\" /></p><p>图源 / NVIDIA Hopper Architecture In-Depth</p><p></p><h4>上下文理解</h4><p></p><p></p><p>随着开源环境的不断发展，技术应用的真正门槛可能不在于模型本身。欧洲和国内一些公司最近开源的模型已经足够实用，而真正挑战在于将技术应用于商业场景，需要更好地结合领域知识和实际应用。纯粹的大型模型本身可能不是主要障碍。大型模型用于编码领域时，主要挑战在于上下文理解能力的限制。即使模型具有百万 token 的能力，其上下文理解能力仍然相对有限。因此，面临的挑战之一是如何让大型模型更好地理解上下文通过代码分析来提取理论知识。</p><p></p><p>一种方式是使用“RAG”（Retrieval Augmented Generation）方法，可以仅提取函数签名等摘要信息，将大量代码压缩成更简短的形式。还有一种较极端方法是选择性地提取函数签名，仅保留关键函数的摘要，甚至可根据历史提交记录进行筛选，使摘要更加精简。此外，通过对编码历史的分析，可以根据领域知识缩短上下文。第二种方法是“Decoder correction”，即涉及模型的解码器部分，利用传统 IDE 的代码补全功能与大型模型相结合，以确保生成代码的可靠性。第三种方法是“back track”，即通过解释器快速生成解释结果，然后进行评价，若不准确则后退重新学习和生成新代码。这种方法模拟了人类思维模式，不断进行代码训练，但效率相对较低。</p><p></p><h4>全新的 UI 交互</h4><p></p><p></p><p>用户交互（UI/UX） ：Github Copilot 凭借 VSCode 所提供的专属 UI API 在触达用户上有一定优势，但目前 LLM 的功能发掘仍在早期，留给初创公司进行创新的空间还很大。在未来，大型模型在开发平台上的应用将着重于用户体验和界面交互的优化。虽然类似于 Copilot 的工具在代码生成方面提供帮助，但当前仍需要将生成的代码从一个窗口复制粘贴到另一个窗口。理想情况下，用户能够在同一界面中创建、编辑、测试和展示代码，而无需频繁切换窗口。这种优化将极大地提高开发流程的效率和使用体验。比如 Cursor 提供的 copy to chat 允许用户快速导入代码段到 Chat 中以及复制 In-editor Chat 的体验：类似于 Notion 和飞书等文档协作工具中的关联文档功能。通过 @符号，开发者能够快递找到需要引用的相关文件。</p><p></p><h4>AI 原生开发平台呼之欲出</h4><p></p><p></p><p>当下主要占据市场的 AI 工具如 GitHub 的新产品 Copilot X 使用了 GPT-4 技术，得益于微软支持获得了 OpenAI 最新模型的内测权限。虽然最新的 CodeX 模型更新提升了代码接受率和减少了延迟，但在性能上并未领先。竞争对手的评估显示其产品能力与 Copilot 相近。同时，开源小型模型正在挑战 GPT-3.5 的性能，这对 GitHub 构建竞争优势形成挑战，市场竞争日渐加剧，当下 AI 工具对开源模型的部分依赖导致了模型更新滞后和生成效果问题。掌握自主研发 AI 原生平台才能为用户带来带来极致体验和增量永恒。</p><p></p><p>同时，未来企业对代码完成工具的私有定制需求不断增长，尤其关注 Fine-tune 功能，利用内部数据进行模型优化。比如 Google 内部工具或性能优化代码，能够显著提升模型性能。此外，专有数据可减少模型参数、降低推理成本和延迟、确保在严格监管环境下对隐私和内容准则的遵守，模型的权限管理和私有化部署显得日益重要，但目前头部产品如 Github Copilot 还未涵盖这些功能，如何精准聚焦和满足客户对工具的定制化需求才是未来抢占市场的致胜之道。</p><p></p><p>随着人工智能模型的不断发展与普及，未来的编程环境可能会迎来根本性的变革，IDE（集成开发环境）可能会重构，以更好地与 AI 交互。例如，Copilot 已经展示了 AI 与 IDE 交互的早期 UI 元素，尽管目前仍处于相对早期阶段，但预示了未来这一领域可能会有更多的创新瞄准 LLM IDE First 这一赛道：传统 IDE 智能与 AI 智能的融合有望成为下一个商业风口。</p><p></p><p>传统的 IDE 是软件开发的起点，也是通往 DevOps 流程的门户。在这个环境中，开发者编写、测试和调试代码，然后将其整合到 DevOps 工具链中。传统测试通常需要在 IDE 中编写多种测试代码和环境设置，而现在一些 DevOps 公司像 AtomicJar 这样的，已经简化了这个过程，甚至能自动生成测试图表和报告。截至 2022 年，全球 DevOps 软件工具市场的规模约在 183 亿美元左右，且以每年 15 至 20％的速度持续增长，然而，相较于 DevOps，IDE 这个超级入口目前仅有 VS Code 依靠免费开源政策来赢得市场高占有率，相对 deveOps 仍是前景较大的蓝海市场。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f1/f16ff839fc541bf5beb16ec3ab19382f.png\" /></p><p>资料来源：IDC、共研产业咨询（共研网）</p><p></p><p>在这样的背景下，IDE、DevOps 及大模型的深度集成，将为软件开发过程带来新的变革。通过结合传统的 IDE 中的智能代码分析技术，程序员能够有效减少运维（Ops）阶段的负担和潜在错误。其次，大模型为开发者提供了更多自由，使他们能够根据自己的需求定制 DevOps 流水线。这种灵活性对于适应不断变化的项目需求至关重要。IDE、DevOps 和大模型的深度集成增强了 IDE 作为 DevOps 入口的作用，在软件开发的整个生命周期中扮演更重要的角色。这不仅提高了开发效率，也为企业创造了更大的商业价值。通过这种深度集成，IDE 成为一个更加强大和中心化的工具，有助于推动软件开发向更高效、更智能的方向发展。</p><p></p><h2>MoonBit：为 AI 原生应用打造的编程语言</h2><p></p><p></p><p>传统的编程语言（如 Python）大多是为了和人更好地交互，大模型时代下大部分代码则将由 AI 生成，如何为大模型构建更好的上下文、在生成的代码过程中 RAG、对生成的代码进行验证测试、大模型下 IDE 新的用户交互方式等这些都给编程语言的发展带了机遇和挑战。MoonBit 编程语言的立项刚好和 ChatGPT 的发布处于同一时间，这使得我们有机会思考如何为 AI 设计一门新的编程语言，来取得极致的体验。</p><p></p><p>与前文提及的同样诞生于今年的新编程语言 Mojo 相比，MoonBit 在定位上有所不同。</p><p></p><p>2023 年 5 月，号称【a new programming language for all AI developers】的 Mojo 诞生，其作者是 LLVM 发起人 Chris Lattner。Chris 在创办「Modular AI」时意识到 AI 基础设施生态的碎片化、技术栈的部署复杂限制了 AI 的发展，因此认为需要一门全新的语言弥补研究和生产之间的差距。基于此，Mojo 选择了在 AI 具有主导地位的 Python 生态，通过接口 Python 语法的超集、直接调用 Python 库、广泛吸收许多现代的程序语言特性的方式逐渐地在 AI 界立足。</p><p></p><p>Mojo 通过重用 Python，优先支持调用 Python 库，让开发者能够充分利用庞大而完善的 Python 生态系统而无需从头开始构建，在与 Python 的速度对比上，Mojo 也实现了 35000 倍的性能提速。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/19/1919d916ad40b69ef4f0f59a7e518de7.png\" /></p><p></p><p>Mojo 作者 Chris 曾提出：“提升人工智能的应用系统不能仅依赖于一种与特定处理器配合的加速器语言，我们需要一门能够全面应对并可以为 AI 模型加速的编程语言。”在更好地开发 AI 模型这个方向上，Mojo 可以作为一个典型的代表作品。</p><p></p><p>但随着算力的需求激增、软硬件以及训练成本的高昂、开发 AI 模型最终还是会依赖于拥有充足研究经费和旺盛科研需求的机构。落地到实际工业场景，我们需要的是利用 AI 大模型辅助开发人员生成更可靠准确的代码，融合传统 IDE 智能与 AI 智能，打造一门全新的编程语言，这是目前具有潜力的赛道和新的蓝海市场。</p><p></p><h3>为 AI 设计的编程语言与工具链</h3><p></p><p></p><p>MoonBit 作为一个 AI 时代下全新的开发平台，从一开始的顶层设计就考虑如何将传统 IDE 智能和大模型智能融合在一起。利用传统 IDE 智能修正大模型智能，MoonBit 通过局部重采样和全局重采样实现了智能代码生成的调整和修正。</p><p></p><h4>平坦化设计，适配 Transformer 架构</h4><p></p><p></p><p>MoonBit 特别强调在顶层（toplevel）和局部（local）定义之间的清晰区分，并且要求在顶层定义时强制性标明类型签名。MoonBit 还采用了结构化接口实现（structural interface implementation），在这种方式中，一个类型通过实现其方法来实现一个接口，因此消除了额外嵌套代码块的必要性。现有的大模型基本都基于自回归的 Transformer 架构。这意味着随着上下文窗口增长，生成单个 token 的复杂度呈 n² 上升。也就是说，大模型的推理会越来越慢。一个没有嵌套的编程语言有着较好的可读性，同时也能够在各个层级（RAG，decoder correction，backtrack）做到 KV 缓存友好，实现更高的推理速度。</p><p></p><p>举个例子：在图 1a 中所示的例子中，一名程序员正在为类型 Llama 实现特性 Agent 中的方法 think。他们发现类型 Llama 缺少在特性 LLM 中定义的 generation 方法。由于他们处于一个嵌套代码块中，需要回到顶层来为类型 Llama 实现特性 LLM。然而，在大型语言模型（LLMs）的上下文中，修改几个函数之前的提示会导致相关 KV 缓存段的无效，这在图中以红色突出显示。经过这样的修改，所有这些函数都要重新评估，这不仅浪费了计算资源，更关键的是，延长了输出的延迟时间。</p><p></p><p>相比之下，如图 1b 所示，MoonBit 允许程序员和大型语言模型（LLMs）线性地开发他们的程序，无需频繁地来回跳转。通过结构化接口，实现接口的函数不限于特定的代码块。这允许几乎线性地生成接口及其各自的实现，从而有效地最小化 KV 缓存失误。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/5e/5eec0e2273577dc452c71ccb36942582.png\" /></p><p>图一</p><p></p><h4>快速实时的语义补全</h4><p></p><p></p><p>局部重采样利用 AI 生成的代码进行实时调整，确保代码符合语法规范，而全局重采样进一步验证代码的语义正确性。这种方法基于深度领域知识，为开发者提供了更可靠、更准确的代码生成体验，减少了后续调试和错误修复的需要。MoonBit 团队还特意开发了基于 token 的实时语义分析工具，确保大模型输出更为准确。</p><p></p><p>与传统方法不同，MoonBit 的采样器同时收集和利用本地和全局上下文中的信息，并与解析器和静态分析器紧密合作。当大型语言模型（LLM）生成新的 token 时，它会利用来自解析器和静态分析器的实时反馈，从而确保每个生成的 token 不仅在语法上正确，而且没有明显的类型错误。传统方法缺乏这种合作，直接输出解码的 tokens，通常会导致生成错误的程序。</p><p></p><p>实验结果表明，MoonBit 采样器在编译率上取得了显著提升，性能损失仅约为 3%。对于涉及提示增强的任务，我们观察到平均每次提示增强延迟约 0.86 秒。然而，通常观察到，每种不同类型的提示增强通常只触发一次。这是因为模型通常在增强后从上下文中适应并学习。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/0a/0a3fd6607b529834006b2bb32f950085.png\" /></p><p></p><h4>融合传统的 IDE 智能和大模型智能</h4><p></p><p></p><p>融合传统 IDE 智能与大模型智能的 MoonBit，在语言设计上也考虑到和大模型的智能融合。MoonBit 的设计理念强调清晰与简洁。这样的设计不仅降低了大模型对 MoonBit 的理解难度，也简化了在语言学习、提示工程以及微调训练过程中的工作量。MoonBit 的这一特性有利于构建有效的训练数据集，从而提高大模型的学习效率和最终性能。</p><p></p><p>此外，MoonBit 通过结构化接口和类型系统的明确性，允许大模型更加准确地识别代码的模式和结构，进而生成更加准确和高效的代码。这种明确性不仅有助于提升代码生成的质量，也为后续代码的维护和扩展提供了便利。</p><p></p><p>在 MoonBit 中，传统 IDE 的嵌入提示和代码自动补全将会得到增强，它们可以与大模型的预测能力相结合，为开发者提供即时的代码生成建议。这种智能融合充分发挥了传统 IDE 的强大功能，同时引入了 AI 的动态学习和自适应能力，创建了一个双向互补的开发环境。</p><p></p><p>随着时间的推移，我们可以预见，MoonBit 在语言设计的清晰性和简洁性将进一步推动 AI 在编程领域的应用，尤其是在自动化编码、代码审核和程序维护等方面。MoonBit 团队对大模型智能融合的持续创新，预示着未来编程工具将不断进化，以更好地适应人工智能时代的需求。</p><p></p><h3>更好的静态分析、测试验证</h3><p></p><p></p><p>在代码编写的过程中，静态分析扮演着至关重要的角色。它能在代码运行前发现潜在的错误和问题，从而提高代码的质量和可维护性。MoonBit 提供实时全局静态分析技术，生成类型正确且可编译的代码，显著提升了代码的可靠性。</p><p></p><p>以一个具体的例子来说明：假设在编写代码时，我们遇到一个变量 p，并希望补全其属性。当大型模型被用于代码补全时，它可能会提供几个选项，比如 x，y，co。尽管每个选项都可能是语法上正确的，但并非所有的补全都是在当前上下文中类型正确的。MoonBit 通过实时的静态分析技术，可以准确识别出 p 是 point 类型，并且知道 point 类型中有一个属性名为 cordx。因此，MoonBit 能够智能地推断出，基于 co 开头的代码补全是正确的选择。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/02/0239cbcfeab349e1eb5dbff41642d1cc.png\" /></p><p></p><p>这种全局的重采样技术使得 MoonBit 不仅能生成语法上正确的代码，而且还能确保类型的准确性，生成可以编译且更为可靠的代码。这一点相较于 Copilot 直接提供的补全选项，MoonBit 所提供的代码可靠性要高得多。通过这样的技术，MoonBit 不仅提升了开发效率，也增加了代码在实际编译和运行中的成功率。</p><p></p><h3>端到端平台：AI 智能体的理想开发环境</h3><p></p><p></p><p>AI Agent（AI 智能体）是一种能够感知环境、进行决策和执行动作的智能实体。在大型语言模型（LLM）的推动下，AI 智能体的能力得以拓展，使其能够自动化处理各种通用问题。不同于传统的 AI，AI 智能体的独特之处在于其具备通过独立思考、调用工具去逐步完成给定目标的能力。然而，开发 AI 智能体中的过程中面临着挑战：调取各种资源的过程需要很多处理交互逻辑的胶水代码。</p><p></p><p>MoonBit 月兔语言，作为一种超级胶水语言，提供了一个理想的环境来开发 AI 智能体。不同于传统的编程语言，MoonBit 月兔语言从一开始就提供全套开发、调试、部署一站式解决方案。MoonBit 不仅提供了通用程序语言设计，还涵盖了编译器、构建系统、集成开发环境（IDE）、调试器，部署工具等各个方面。这个全面的设计使得月兔（MoonBit）能够实现高度垂直整合，而且可以同时在云端和边缘端执行，更好地与各种资源进行交互，从而为用户提供极致的开发体验和性能。这使得 MoonBit 非常适合用来开发能够与各种资源进行高效交互的 AI 智能体。</p><p></p><p>更为重要的是，由于 MoonBit 支持实时可视化开发，同时编译速度极快，使开发者能够实时看到代码更改对应用（游戏）的实时影响。这里通过视频展示，你可以实时更改代码来实时定制你的马里奥游戏。在实时编程环境中，你可以灵活调整马里奥游戏的跳跃高度、实时创建多个马里奥角色或调整游戏结束的逻辑，从而实现高度自定义的游戏体验。</p><p></p><h2>MoonBit 的 2023 总结和 2024 展望</h2><p></p><p></p><h3>核心功能进展</h3><p></p><p></p><p>在过去一年里，MoonBit 编程语言在核心功能方面取得了不小的进展，具体体现在以下几个方面：</p><p></p><h4>1. 语言方面</h4><p></p><p></p><p>语言方面从 0 到 1 几乎实现了现代语言的大部分特性，包括比较复杂的泛型、模式匹配、代数数据类型和高阶函数的支持，允许用户自定义 trait 等。</p><p></p><p>支持泛型与高阶函数</p><p></p><p>MoonBit 增加对泛型与高阶函数的支持，完整的例子可以参考 playground 的 012_avl_tree.mbt。</p><p></p><p>语法上，通过类型构造器的 [] 来定义泛型，比如定义一个 AVL 树:</p><p></p><p><code lang=\"rust\">enum T[U] {\n  Empty\n  Node (T[U], U, T[U], Int)\n}\n</code></p><p></p><p>那么对这个泛型类型做操作的函数也需要加上对应 [] 到函数名字后面，比如:</p><p></p><p><code lang=\"rust\">fn height[U](self: T[U]) -&gt; Int {\n  match self {\n    Empty =&gt; 0\n    Node(_, _, _, h) =&gt; h\n  }\n}\n</code></p><p></p><p>我们可以使用高阶函数，如：</p><p></p><p><code lang=\"rust\">fn add(self: T[U], x: U, compare: (U, U) -&gt; Int) -&gt; T[U] {\n  match self {\n    Empty =&gt; Node(Empty, x, Empty, 1)\n    Node(l, v, r, _) as t =&gt; {\n      let c = compare(x, v)\n      if c == 0 {\n        t\n      } else if c &lt; 0 {\n        bal(l.add(x), v, r)\n      } else {\n        bal(l, v, r.add(x))\n      }\n    }\n  }\n}\n</code></p><p></p><p>如果需要用到泛型类型的 trait，比如高阶函数 Compare，则需要把冒号以及具体的接口名放到泛型后面，比如我们要用到类型的 Compare，可以这样写：</p><p></p><p><code lang=\"rust\">fn add[U: Compare](self: T[U], x: U) -&gt; T[U] {\n  match self {\n    Node(l, v, r, _) as t =&gt; {\n      let c = x.compare(v)\n      ..\n}\n</code></p><p></p><p>如果函数需要用到超过 1 个 trait，也可以用加号链接起来，比如下面例子的 [U:Compare+Debug]:</p><p></p><p><code lang=\"rust\">fn remove[U:Compare+Debug](self: T[U], x: U) -&gt; T[U] {\n  ..\n}\n</code></p><p></p><p>允许用户自定义 trait</p><p></p><p>MoonBit 允许用户自定义 trait，通过 trait 关键词来定义自定义接口，比如：</p><p></p><p><code lang=\"rust\">trait Number {\n  op_add(Self, Self) -&gt; Self\n  op_sub(Self, Self) -&gt; Self\n  op_mul(Self, Self) -&gt; Self\n  op_div(Self, Self) -&gt; Self\n  op_neg(Self) -&gt; Self\n}\n\nfn f[X: Number](x: X, y: X) -&gt; X {\n  x * x + (- y / x - y)\n}\n\nfn init {\n  debug(f(1, 2))\n  debug(f(1.0, 2.0))\n}\n</code></p><p></p><p>上面的代码片段定义了一个叫作 Number 的 trait，它可以用来表示实现了算术操作的类型。对于任何类型 X ，只要 X 实现了 Number 指定的五个算术操作，函数 f 就能在 X 上工作。用户可以对整数、浮点数，以及其他自定义的支持算术的类型，例如向量和矩阵，调用 f 。</p><p></p><p>支持模式匹配</p><p></p><p>MoonBit 支持功能强大的模式匹配，包括对数组的带通配符的模式匹配等：</p><p></p><p><code lang=\"rust\">fn init {\n  let a : Array[Int] = [1, 2, 3, 4]\n  match a {\n    [ hd, .. ] =&gt; debug(hd) // 1\n    [  ] =&gt; println(\"empty\")\n  }\n  \n  match a {\n    [ .., tail ] =&gt; debug(tail) // 4\n    [  ] =&gt; println(\"empty\")\n  }\n  \n  let b: Option[Array[Option[Int]]] = Some([ Some(7), None ])\n  \n  match b {\n    Some([ Some(x), .. ] as arr) =&gt; {\n      debug(x) // 7\n      debug(arr[1]) // None\n    }\n    _ =&gt; println(\"otherwise\")\n}\n</code></p><p></p><p>支持代数数据类型</p><p></p><p><code lang=\"rust\">enum Result[T, E] {\n  Ok(T)\n  Err(E)\n}\n\nfn get_ok[T, E](self: Result[T, E]) -&gt; T {\n  match self {\n    Ok(x) =&gt; x\n    Err(_) =&gt; abort(\"unhandled Err\")\n  }\n}\n</code></p><p></p><h4>2. 工具方面</h4><p></p><p></p><p>构建系统：moon check、moon build 执行加速</p><p></p><p>MoonBit 在语言设计之初就充分考虑 IDE、构建系统、语言设计的协同，实现类型检查和推断的高度并行化和增量化。</p><p></p><p>当进行多个包的编译时，MoonBit 的构建系统采用了高效的调度方法。它首先对各个编译任务进行分析和排序，确定编译的依赖关系。然后系统会并行地执行编译任务，充分利用多核处理器和并行计算的优势，让多个包同时进行编译。</p><p></p><p>在这个过程中，MoonBit 的构建系统还会应用增量编译的技术，它会检测代码变更，只重新编译发生变化的部分，而不是对整个包进行重新编译。这种增量编译的策略可以大幅减少不必要的重复工作，提高编译效率。</p><p></p><p>从编译速度上也可以看到，MoonBit 编译 626 个包（package）只需要 1.06s，比起 Go 语言快了 2 倍，比起 Rust 快了接近 9 倍。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/ec/ec1e57629708213b3943dbea5c94cc92.png\" /></p><p></p><p>调试系统的支持：MoonBit Debugger(调试器）</p><p></p><p>MoonBit 在今年已推出了调试器（Debugger）功能，这是相对于其他语言通常在成熟阶段才拥有的功能。目前，该功能已支持源码映射、基于源码设置断点、输出 sourcemap 等，在浏览器中进行源码调试。这项功能的推出不仅减轻了开发者在代码调试方面的负担，还显著提升了开发和调试的流畅性。</p><p></p><p>工具链多平台灵活切换支持：</p><p></p><p>MoonBit 目前已支持多个工具链平台的无缝交互，今年，我们实现了对 Intel 芯片的 Mac 工具链下载，包括支持 Apple Silicon MacOS、Intel MacOS、x86 Ubuntu 20.04 以及 Windows 平台。这意味着 MoonBit 具备跨多个操作系统和硬件架构的兼容性和可移植性。MoonBit 能够适应各种不同的操作系统和处理器类型，为用户提供多平台的编程环境。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/01/0159a0eaef69be7b6c76b618bd8c8ccb.png\" /></p><p></p><p>链接地址：<a href=\"https://www.moonbitlang.cn/download/\">https://www.moonbitlang.cn/download/</a>\"</p><p></p><p>包管理</p><p></p><p>MoonBit 作为一门从 0 到 1 的编程语言，对于其生态建设尤为重视。关键之一在于构建一个高效且功能丰富的包管理系统。在此基础上，我们已经初步搭建了一个平台，提升包的获取速度和编译效率，从而为开发者提供一个高效的工作环境。</p><p></p><p>此外，我们注重文档的管理和维护。为了让文档更加易于理解和使用，我们提供一系列的工具和指导，以帮助开发者创造高质量的文档。这些工具和指导不仅涵盖了文档的编写规范，还包括了如何有效地组织和展示信息，以确保每个包的文档都是清晰且易于导航的。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/06/060949d05476748b9893703abe4eb9d3.png\" /></p><p></p><h4>3. 提供对 IDE 支持</h4><p></p><p></p><p>MoonBit 提供对 IDE 的支持不仅包含了现代 IDE 的所有功能，并且具有一个创新的特点：它可以在云端 / 边缘端完整运行，这在现今大多数语言的 CloudIDE 中可能是首次。与其他 CloudIDE 不同，MoonBit 无需依赖容器。</p><p></p><p>现今大多数编程语言的 IDE 是为桌面操作系统设计的，未能很好地适应云原生环境和边缘端的需求。MoonBit 则通过采用高度并行化的架构和对分离编译的原生支持，突破这一限制，使得 CloudIDE 可以直接在边缘端运行。它的快速语义分析技术可处理大量的代码库，并且在更大规模的代码库中也能在百毫秒级别完成 IDE 响应。</p><p></p><p>MoonBit 平台的一个显著特点是高度重视 IDE 的发展。这一点我们从之前开发的 ReScript 上获得了经验教训。许多编程语言在很长一段时间后才会有社区人员帮助开发相应的 IDE，这导致 IDE 与语言设计的不匹配，带来了许多不必要的工作。为了避免这种情况，MoonBit 平台将语言和 IDE 的设计、构建系统进行了整合，确保 IDE 的高效性。</p><p></p><h3>社区生态进展</h3><p></p><p></p><p>在即将过去的 2023 年，MoonBit 月兔语言在国内外社区获得了积极的反馈。在国内，刘汝佳（前国际信息学奥林匹克竞赛国家队教练）对 MoonBit 进行了高度评价，他评价道：“MoonBit 是我见过的第一个从一开始就严肃的统筹和平衡诸多元素的语言：语法优美性、实用性、编译速度、代码体积、后端生态和与 AI 的交互等。再加上宏波本人在 PL 方面的造诣、经历和极大的热情，我对 MoonBit 抱有很大的期待。”同时，他还花了几周的时间用 MoonBit 实现了任天堂模拟器，可以玩几十款游戏。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/56/56c28132522206823667d4cdef02d9a7.gif\" /></p><p></p><p>MoonBit 团队于 2023 年 8.18 日在 Twitter 进行海外首发之后就引起了国际技术社区的关注，迅速登上了 HackerNews 的头条（HackerNews：硅谷最具影响力的科技社区之一）。全球各大技术爱好者纷纷在社区留言和评价，部分开发者在试用后对其编译速度之快感到难以置信。MoonBit 通过自动内存管理使编程更加简便，从而与 Rust 区分开来。“我已经可以想象下一个‘100 秒’视频了” ，“以这个速度，可能只需要 500 毫秒（就可以完成编译）”。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/84/8402f432e7028a2694e05fbaefba8ff3.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/59/593fe19eeb6c194525c6c57abba6352e.png\" /></p><p></p><p>国际知名的 Scala 和函数式编程专家 John A De Goes 在试用 MoonBit 后表示：MoonBit 看起来非常适合在 @GolemCloud（WasmCon 2023 的金牌赞助商、领先的 WebAssembly Paas 平台）上构建应用，并表示有兴趣尝试一下。Rob Palmer（JavaScript 标准委员会联席主席）也在 Twitter 上高度评价 MoonBit。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/8d/8d32f05c4f0648231e396fdf0acae4b3.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/af/affc363fa6179f234493f847e2d661e8.png\" /></p><p></p><p>此外，MoonBit 在社区建设中进行了积极的探索。MoonBit 在官网搭建了论坛，这个论坛为 MoonBit 用户提供了一个分享经验、提出反馈和解决问题的空间。截至目前，论坛的页面浏览量已达到 70000+ 次。</p><p></p><p>同时 MoonBit 还开发了一门课程[3]《现代编程思想》，这门课程主要讲授程序设计与实际应用。课程介绍多种编程范式，包括函数式编程、命令式编程与面向对象编程等。这门课程适合广泛的受众，从编程初学者到有经验的开发者。这门课程目前已累计有1.5万人次观看。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/94/94e9a897e32de5a038736d3cd914e8ba.png\" /></p><p></p><h3>未来规划和展望</h3><p></p><p></p><p>2024 年，MoonBit 在编程语言方面将保持相对稳定，并将更多关注于提升用户体验，语言本身的变动则可能相对较少。MoonBit 将主要集中精力在包管理、AI 技术微调等方面的改进，而其主要作用则在 AI、云计算以及社区发展的整合上。</p><p></p><p>MoonBit 的目标是改善编程语言的可用性。具体来说，MoonBit 未来的发展主要集中在以下三个方向：</p><p></p><p>社区生态与包管理：在高校推动 MoonBit 的应用，并努力构建完善的社区生态和包管理体系。云计算部署与开发工具完善：注重实时开发、编译、调试，期望实现即时部署至云端的完整工具和产品。AI 的优化和边缘端应用：专注于微调和优化 AI 效果，期望在客户端边缘端实现更佳的应用效果。同时，致力于构建服务器，让用户能够开发 AI Agent 应用。</p><p></p><p>在人工智能的新纪元中，MoonBit 希望更好地结合当下的趋势。传统编程语言都是在 Pre-AI 的年代发展，当时的 AI 没有那么的完善与成熟。而 MoonBit 诞生于 AI 崛起的时代，MoonBit 可以充分利用开源大模型，通过特定领域的 LLM 来辅助用户生成高效的代码。</p><p></p><p>AI 方面的发力点主要集中在两个领域：</p><p></p><p>AI 代码生成：基于项目相关的代码，推动 AI 更精准、更高效地生成代码，跨越代码层面的能力提升。AI 应用开发便捷性：提供端到端的开发支持，深入探索直接部署 AI 智能应用的可能性。</p><p></p><p>MoonBit 的愿景远不止于成为另一门程序设计语言；它旨在构建一个全方位的开发生态系统。我们认为：MoonBit 不仅是一个语言，也是一个端到端的解决方案，我们要利用好当下最新的 AI 技术，为用户提供全面的服务。</p><p></p><p>可以预见，在不久的将来，MoonBit 将与 AI 技术深度融合，进一步拓宽其在云计算和边缘计算领域的应用。MoonBit 将能够利用大模型的预测和自学习能力，为编程工作流程带来革命性的变革。让我们一同期待这场变革的到来！</p><p></p><p>参考链接：</p><p></p><p>【1】<a href=\"https://github.blog/2023-06-27-the-economic-impact-of-the-ai-powered-developer-lifecycle-and-lessons-from-github-copilot/\">https://github.blog/2023-06-27-the-economic-impact-of-the-ai-powered-developer-lifecycle-and-lessons-from-github-copilot/</a>\"</p><p></p><p>【2】<a href=\"https://karpathy.medium.com/software-2-0-a64152b37c35\">https://karpathy.medium.com/software-2-0-a64152b37c35</a>\"</p><p></p><p>【3】<a href=\"https://space.bilibili.com/1453436642?spm_id_from=333.1007.0.0\">https://space.bilibili.com/1453436642?spm_id_from=333.1007.0.0</a>\"</p><p></p><p>如果你觉得本文对你有帮助，或者你对编程语言在大模型时代的发展有自己的思考，欢迎在文末留言告诉我们！</p><p></p><p></p><blockquote>InfoQ 2023 年度技术盘点与展望专题重磅上线！与 50+ 头部专家深度对话，探明 AIGC 创新浪潮下，重点领域技术演进脉络和行业落地思路，<a href=\"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MjM5MDE0Mjc4MA==&amp;action=getalbum&amp;album_id=2717978015128879106&amp;scene=173&amp;subscene=227&amp;sessionid=1703592228&amp;enterid=1703592233&amp;from_msgid=2651191467&amp;from_itemidx=1&amp;count=3&amp;nolastread=1#wechat_redirect\">点击订阅内容专题</a>\"，更多精彩文章持续更新 ing~另，InfoQ 年度展望系列直播将于 2024 年 1 月 2 日首场开播，持续输出精彩内容，关注 InfoQ 视频号，与行业技术大牛连麦~</blockquote><p></p>",
    "publish_time": "2023-12-26 20:17:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]