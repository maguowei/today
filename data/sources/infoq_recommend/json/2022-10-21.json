[
  {
    "title": "Kotlin Multiplatform Mobile进入Beta测试",
    "url": "https://www.infoq.cn/article/lOCkY3lV2ADRvXcsZEb2",
    "summary": "<p><a href=\"https://www.infoq.cn/topic/kotlin\">Kotlin</a>\" Multiplatform Mobile由JetBrains创建，支持使用Kotlin从单个代码库创建具有原生UI的iOS和Android应用。Kotlin Multiplatform Mobile已经退出<a href=\"https://www.infoq.com/articles/kotlin-multiplatform-ios-developers/\">实验阶段</a>\"，<a href=\"https://blog.jetbrains.com/kotlin/2022/10/kmm-beta/\">进入Beta测试</a>\"。</p><p></p><p></p><blockquote>Kotlin Multiplatform Mobile是一个用于iOS和Android应用开发的SDK，它让你可以将网络、数据存储和分析以及Android和iOS应用的其他逻辑保存在一个共享代码库中。</blockquote><p></p><p>&nbsp;</p><p>在实验阶段，JetBrains尝试了多种内存管理、库和项目配置方法，进一步平衡了跨平台特性，包括网络、数据存储和分析，以及对原生SDK的访问。</p><p>&nbsp;</p><p>具体来说，Kotlin Multiplatform Mobile Beta版实现了一个原生的自动内存管理器，旨在通过提供无锁并发编程原语简化线程之间的对象共享。</p><p>&nbsp;</p><p>按照JetBrains的说法，Beta版本已经足够稳定，开发人员提可以开始采用Kotlin Multiplatform Mobile了。作为采用就绪的信号，JetBrains特别强调了其不断增长的多平台库生态系统、社区支持，尤其是一些<a href=\"https://kotlinlang.org/lp/mobile/case-studies/\">早期采用者的案例研究</a>\"，包括Autodesk、VMware、Netflix等。</p><p>&nbsp;</p><p>此外，许多流行的库已经采用了Kotlin Multiplatform，包括异步事件处理框架<a href=\"https://ktor.io/\">Ktor</a>\"、类型安全的SQL API生成器<a href=\"https://cashapp.github.io/sqldelight/\">SQLDelight</a>\"、GraphQL客户端<a href=\"https://www.apollographql.com/docs/kotlin/\">Apollo</a>\"和依赖注入框架<a href=\"https://insert-koin.io/docs/quickstart/kotlin/\">Koin</a>\"。</p><p>&nbsp;</p><p>Kotlin Multiplatform已集成到Android Studio中，Android开发者可以利用他们所熟悉的工具和生态系统，而iOS开发者的学习曲线肯定就不那么平缓了。虽然Android Studio是Kotlin Multiplatform开发的主要IDE，但构建iOS应用并提交到应用商店时仍然需要Xcode。</p><p>&nbsp;</p><p>在本文写作的时候，<a href=\"https://kotlinlang.org/docs/multiplatform-mobile-plugin-releases.html\">Kotlin Multiplatform Mobile插件</a>\"还处于<a href=\"https://kotlinlang.org/docs/components-stability.html#current-stability-of-kotlin-components\">Alpha阶段</a>\"。它提供了<a href=\"https://kotlinlang.org/docs/multiplatform-dsl-reference.html#top-level-blocks\">一组在Gradle文件中使用的指令</a>\"，包括新的targets （支持iOS、watchOS和tvOS平台）、sourceSet、compilation 等。</p><p>&nbsp;</p><p>如果你喜欢不同的方法，也可以使用Kotlin Multiplatform<a href=\"https://kotlinlang.org/docs/multiplatform-library.html\">创建跨平台库</a>\"，然后在独立的iOS和Android项目中使用这些库。</p><p>&nbsp;</p><p><a href=\"https://kotlinlang.org/docs/multiplatform-mobile-samples.html\">这里</a>\"有一个精心整理的Kotlin Multiplatform Mobile样例的列表，感兴趣的读者可以看一下。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/10/kotlin-multiplatform-mobile-beta/\">https://www.infoq.com/news/2022/10/kotlin-multiplatform-mobile-beta/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/xmsdwMtlJIDd3u5RG6z8\">Kotlin 异步框架 Ktor 2.0 发布，提供新的插件特性</a>\"</p>",
    "publish_time": "2022-10-21 09:42:03",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]