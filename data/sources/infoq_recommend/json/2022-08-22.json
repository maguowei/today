[
  {
    "title": "从HBase到TiDB：我们如何实现零停机在线数据迁移",
    "url": "https://www.infoq.cn/article/2qQNTBGeLLbyQFt9cm7H",
    "summary": "<p></p><blockquote>本文最初发布于<a href=\"https://medium.com/@Pinterest_Engineering?source=post_page-----43f0fb474b84--------------------------------\">Pinterest Engineering</a>\"技术博客，InfoQ经翻译授权发布。</blockquote><p></p><p></p><h2>迁移背景与动机</h2><p></p><p>在Pinterest，Hbase一直是我们最关键的存储后端之一，持续为众多线上存储服务提供支持，涵盖Zen（图数据库）、UMS（宽列数据存储）和Ixia（近实时二级索引服务）。HBase生态系统具备一系列突出优势，例如在大容量请求中保障行级强一致性、灵活的模式选项、低延迟数据访问、<a href=\"https://www.infoq.cn/topic/Hadoop-ten-years\">Hadoop</a>\"集成等，但也由于运营成本高、过于复杂和缺少二级索引/事务支持等问题，而明显无法满足未来三到五年内的客户实际需求。</p><p></p><p>在评估了十余种不同的存储后端选项，向三种入围方案导入影子流量（将生产流量异步复制至非生产环境）并开展深入性能评估之后，我们最终决定将TiDB选为这场统一存储服务角逐的胜出者。</p><p></p><p>如何将统一存储服务的支持职责顺利移交给<a href=\"https://www.infoq.cn/profile/E47A66A843E94F/publish\">TiDB</a>\"，无疑是一项需要数个季度才能完成的艰难挑战。我们需要将数据从HBase迁移至TiDB，重新设计并实现统一存储服务，将Ixia/Zen/UMS的API迁移至统一存储服务，再把各类离线作业由HBase/Hadoop生态系统迁移至TiSpark生态系统——而且整个过程中，现有业务的可用性和延迟SLA均不能受到影响。</p><p></p><p>在本篇博文中，我们将首先探讨不同数据迁移方法及其各自利弊。之后，我们再深入探究如何将数据从HBase迁移至TiDB，这也是Pinterest第一次以零停机方式迁移一个每秒14000次读取查询、400次写入查询的4&nbsp;TB大表。最后，我们将共同验证这套新方案能否实现99.999%的数据一致性，并了解如何衡量两个表之间的数据一致性。</p><p></p><h1>数据迁移策略</h1><p></p><p>一般来讲，零停机时间数据迁移的实施策略可以概括为以下几点：</p><p>假定已有数据库A，需要将数据迁移至数据库B，则首先开始对数据库A和B进行双重写入。将数据库A的转储数据导入至数据库B，并解决与实时写入间的冲突。对两套数据集进行验证。停止向数据库A写入。</p><p></p><p>当然，具体用例肯定各有不同，所以实际项目中往往会包含一些独特的挑战。</p><p></p><p>我们综合考量了各种数据迁移方法，并通过以下权衡筛选最适合我们需求的选项：</p><p>从服务向两个表（HBase和TiDB）执行双重写入（以同步/异步方式写入2个数据源），并在Lightning中使用TiDB后端模式进行数据摄取。</p><p></p><p>这种方式最简单也最易行。但TiDB后端模式提供的传输速率仅为每小时50 GB，因此只适合对较小的表进行数据迁移。</p><p></p><p>获取HBase表的快照转储，并将来自HBase&nbsp;cdc（变更数据捕捉）的数据流实时写入至kafka主题，而后使用lightning工具中的本地模式对该转储执行数据摄取。接下来，即可从服务层执行双重写入，并应用来自kafka主题的全部更新。</p><p></p><p>应用cdc更新时往往会引发复杂冲突，因此这种方法的实施难度较高。另外，我们此前负责捕捉HBase cdc的自制工具只能存储键，所以还需要额外的开发工作才能满足需求。</p><p></p><p>另一种替代方案，就是直接从cdc中读取键，并将存储在另一数据存储内。接下来，在面向两个表的双重写入启动后，我们从数据源（HBase）读取各键的最新值并写入TiDB。这种方法实施难度很低，不过一旦通过cdc存储各键的异步路径发生可用性故障，则可能引发更新丢失风险。</p><p></p><p>在评估了各项策略的利弊优劣之后，我们决定采取下面这种更加稳妥可靠的方法。</p><p></p><h2>迁移工作流</h2><p></p><p></p><h3>术语定义：</h3><p></p><p>客户端：与thrift服务对话的下游服务/库</p><p>服务：用于支持在线流量的thrift服务；在本次迁移用例中，服务指的是Ixia</p><p>MR Job：在map reduce框架上运行的应用程序</p><p>异步写入：服务向客户端返回OK响应，无需等待数据库响应</p><p>同步写入：仅在收到数据库响应后，服务才向客户端返回响应</p><p>双重写入：服务以同步或异步方式同时写入两个基础表</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ad/adc11aa8d11574d2509cf01a5d7cbb10.png\" /></p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ff/ff7aade57742bdafb323bd28594b09c7.png\" /></p><p></p><h3>实施细节</h3><p></p><p>由于HBase为无模式（schemaless），而TiDB使用严格模式，因此在着手迁移之前，需要先设计一个包含正确数据类型和索引的schema。对于我们这个4&nbsp;TB大小的表，HBase和TiDB&nbsp;schema之间为1：1映射，也就是说TiDB架构会通过map reduce作业来分析HBase行中的所有列和最大列大小，之后再分析查询以创建正确的索引。下面来看具体步骤：</p><p>我们使用hbasesnapshotmanager获取HBase快照，并将其以csv格式存储在S3内。各CSV行使用Base64编码，以解决特殊字符受限的问题。接下来，我们在本地模式下使用TiDB&nbsp;lightning对这一csv转储执行摄取，而后进行base64解码，并将行存储至TiDB内。摄取完成且TiDB表上线后，即可启动对TiDB的异步双写。异步双写能够既保障TiDB的SLA，又不影响服务SLA。虽然我们也为TiDB设置了监控和分页，但此时TiDB仍然以影子模式运行。使用map reduce作业对HBase和TiDB表执行快照保存。各行会首先被转换为一个通用对象，再以SequenceFiles的形式存储在S3内。我们使用MR Connector开发了一款自定义TiDB快照管理器，并在HBase中使用hbasesnapshotmanager。使用map reduce作业读取各sequencefiles，再将不匹配的行写回至S3。从S3中读取这些不匹配的行，从服务中读取其最新值（来自HBase），再将这些值写入至辅数据库（TiDB）。启用双重同步写入，同时向HBase和TiDB执行写入。运行步骤3、4、5中的协调作业，每天比较TiDB与HBase内的数据奇偶性，借此获取TiDB与HBase间数据不匹配的统计信息并进行协调。双重同步写入机制不具备回滚功能，无法解决对某一数据库的写入失败。因此必须定期运行协调作业，确保两个表间数据一致。继续保持对TiDB同步写入，同时对HBase启用异步写入。启用对TiDB的读取，此阶段中的服务SLA将完全取决于TiDB的可用性。我们将继续保持对HBase的异步写入，尽可能继续保持双方的数据一致性，以备发生回滚需求。彻底停止写入HBase，弃用HBase表。</p><p></p><h2>如何处理不一致问题</h2><p></p><p>由后端不可用导致的不一致</p><p>在Ixia服务层构建的双写框架无法回滚写入操作，这是为了防止因任一数据库不可用而导致局部故障。在这种情况下，就需要定期运行协调作业以保持HBase与TiDB双表同步。在修复此类不一致时，主数据库HBase为数据源，因此一旦出现HBase表写入失败、但TiDB表写入成功的情况，则协调过程会将这部分数据从TiDB中删除。</p><p></p><p>双重写入和协调过程中，因竞态条件引发的不一致</p><p>如果事件按以下顺序发生，则可能导致将旧数据写入TiDB：（1）协调作业从HBase表读取；（2）实时写入将数据同步写入至HBase，异步写入至TiDB；（3）协调作业将之前读取的值写入TiDB。</p><p>此类问题可以通过多次运行协调作业来解决，每次协调都能显著减少此类不一致数量。在实践中，对于支持每秒400次写入查询的4&nbsp;TB表，只需要运行一次协调作业即可在HBase与TiDB之间达成99.999%的一致性。这项一致性指标的验证源自对HBase和TiDB表转储值的二次比较。在逐行比较之后，我们发现两表的一致性为99.999%。</p><p></p><h2>成效</h2><p></p><p>我们看到，第99百分位处的读取延迟降低至三分之一到五分之一。在本用例中，第99百分位的查询延迟从500毫秒下降至60毫秒。实现了写后读取一致性，这也是我们希望通过替换Ixia达成的重要目标之一。迁移完成后，整个架构更简单、涉及的组件数量更少。这将极大改善对生产问题的调试流程。</p><p></p><h2>挑战与心得</h2><p></p><p></p><h3>内部TiDB部署</h3><p></p><p>由于我们没有使用TiUP（TiDB的一站式部署工具），所以Pinterest基础设施中的整个TiDB部署流程成了我们一次宝贵的学习经历。之所以没有选择TiUP，是因为它有很多功能都跟Pinterest内部系统相互重叠（例如部署系统、运营工具自动化服务、量化管道、TLS证书管理等），而综合二者间差异的成本会超出使用收益。</p><p></p><p>因此，我们决定继续维护自己的TiDB版本代码仓库和构建、发布与部署管道。集群的安全管理绝非易事、涉及大量细节，如果我们自己不努力探索，就只能把这些工作一股脑交给TiUP。</p><p></p><p>现在我们拥有了自己的TiDB平台，构建在Pinterest的AWS基础设施之上。我们可以在其中实现版本升级、实例类型升级和集群扩展等操作，且不会引发任何停机。</p><p></p><h3>数据摄取</h3><p></p><p>在数据摄取和协调过程中，我们也遇到了不少现实问题。感谢Pingcap在各个环节中提供的全力支持。我们也为TiDB代码库贡献了一些补丁，这些成果已经由上游社区完成了合并。</p><p></p><p>TiDB lightning 5.3.0版本不支持自动刷新TLS证书，而且由于缺少相关日志而难以调试。Pinterest的内部证书管理服务则每12小时刷新一次证书，所以期间总会发生一些失败的摄取操作，只能依靠pingcap来解决。好在证书自动刷新功能现已在TiDB 5.4.0版本中正式发布。Lightning的本地模式会在数据摄取阶段消耗大量资源，并影响到同一集群上运行的其他表的在线流量。为此，Pingcap与我们开展合作，对Placement Rules做出了短期和长期修复，因此支持在线流量的副本已经不会受到本地模式的影响。TiDB MR Connector需要进行可扩展性修复，才能把4&nbsp;TB表的快照保存时间控制在合理范围。此外，MR Connector的TLS也有改进空间，目前这些改进贡献已经完成了提交及合并。</p><p></p><p>在调优和修复之后，我们已经能够在约八小时之内摄取4&nbsp;TB数据，且每轮协调和验证运行只需要七小时左右。</p><p></p><h3>Ixia</h3><p></p><p>在本轮迁移中，我们的表由ixia负责支持。期间，我们在异步/同步双重写入和查询模式变更中遇到了几个可靠性问题。由于ixia本身的分布式系统架构非常复杂，导致thrift服务（ixia）极难进行调试。感兴趣的朋友请参阅我们的<a href=\"https://medium.com/pinterest-engineering/building-scalable-near-real-time-indexing-on-hbase-7b5eeb411888\">其他博文</a>\"以了解更多细节。</p><p></p><h2>鸣谢</h2><p></p><p>这里，我们要感谢Pinterest存储和缓存团队的各位前成员和现同事，谢谢大家在这场将最新NewSQL技术引入Pinterest存储堆栈的攻坚战中做出的卓越贡献。</p><p></p><p>我们还要感谢<a href=\"https://www.infoq.cn/profile/864AB02AC11ACA/publish\">Pingcap团队</a>\"为种种复杂问题提供的持续支持、联合调查和根本原因分析（RCA）。</p><p></p><p>最后，我们要感谢各位客户在此次大规模表迁移过程中表现出的耐心和支持。谢谢您的理解与配合！</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://medium.com/pinterest-engineering/online-data-migration-from-hbase-to-tidb-with-zero-downtime-43f0fb474b84\">https://medium.com/pinterest-engineering/online-data-migration-from-hbase-to-tidb-with-zero-downtime-43f0fb474b84</a>\"</p>",
    "publish_time": "2022-08-22 00:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "进入数字经济时代，产品经理需要具备什么思维和技能？",
    "url": "https://www.infoq.cn/article/2Zc5zKlXjzSbYa4ZaS0O",
    "summary": "<p></p><blockquote>8 月 18 日，由极客邦科技旗下 InfoQ 技术大会举办——首届 PCon 全球产品创新大会在北京富力万丽酒店拉开序幕，极客邦科技创始人兼 CEO 霍太稳作为开场嘉宾，带来了主题为《数字经济时代的产品经理》的内容分享，以下为演讲整理。</blockquote><p></p><p><img src=\"https://static001.infoq.cn/resource/image/ba/e6/ba20f2f7ba296d2f906624a1cdbb70e6.png\" /></p><p></p><h3>极客邦科技举办的首届产品经理大会</h3><p></p><p>大家好，我是霍太稳，极客邦科技创始人兼 CEO。很高兴今天来做本场大会的开场分享：数字经济时代的产品经理。在进入主题之前，我先简单地做个自我介绍：</p><p>2007 年，我从国外引进全球领先的技术社区 InfoQ 。</p><p>2009 年，从国外引进软件开发者大会 QCon，一直秉承一个理念即为中国的技术开发者提供最先进的技术理念和最优质的技术内容。</p><p>2015 年，我创立了 TGO 鲲鹏会，为科技领导者提供同侪学习与成长的社区服务。</p><p>2017 年，我们上线了 IT 技术学习平台——极客时间个人版，将公司在过去十多年技术社区积累下来的优质专家资源和技术实践的干货内容形成专业的课程，汇聚在学习平台上，为开发者们提供职业发展需要的新知识、新技能、新方法。</p><p>2019 年，应众多企业客户的要求，我们上线了极客时间企业版，为企业提供一站式数字技术学习 SaaS 平台服务，助力企业搭建数字人才团队，快速提升员工的数字技能，为企业数字化战略的成功落地实施提供人才保障。</p><p>通过这样一条时间线，基本上把极客邦科技公司有哪些业务给大家做了完整的展示。也能从中看出我们服务的人群之前更多强调技术的重要性，而现在进入数字化时代，随着我和团队服务的个人和企业数量的增多，愈发感受到每个人的综合能力，或者叫复合型能力开始受到前所未有的重视，咱们在座的产品经理就是其中集大成者。</p><p>因此，极客邦科技的 InfoQ 技术大会团队希望为产品经理们办一个专场的大会，即 PCon 全球产品创新大会。今年是首届推出，面向产品经理、增长运营等角色。会议的设计理念传承了团队在过去十几年举办大会的智慧和经验，内容包含国内外知名产品设计理念解读，以及有趣的产品经理成长历程分享。</p><p></p><h3>“以产品当笔，与世界对话”</h3><p></p><p>“以产品当笔，与世界对话”这句话来自《俞军产品方法论》。从世界上第一个产品经理——宝洁公司的一名员工提出“一人负责一个品牌”的理念，其实更接近是品牌经理，他的主要职责是负责这个品牌的市场定位、营销推广、渠道建设等等。到后来随着时代的变迁和演进，软件为王时代、互联网、移动互联网、到新消费时代，现在我们处在数字经济时代，以及大家都在谈的后疫情时代，我们会发现，产品经理这个角色也不断进化。</p><p>需要从宏观经济和微观场景去深刻理解用户的真实需求，还要求产品经理脑子里的用户概念，不仅仅是自然人，而是一个个具体需求的集合，等等。所以，借用俞军的这句颇具情怀的话，既表达了我们对产品经理的致敬，也同时表达了我们对产品经理寄予了厚望。</p><p>这次在策划 PCon 会议的时候，我们也找业界的专家做了调研，听听行业的人有什么感受，同时也给我们的会议专题策划带来了一些思路。</p><p>1.&nbsp;产品创新不是口号，我想在座的各位平时在公司里也会经常听到老板说：“我们要创新！” 他们的想法是，在已有的业务量上做增量，更多地去找新的业务方向。但实际上，在产品工作中，现在更多的是做微创新，因为也很难做到颠覆式的创新；</p><p>2. 我们自己也能感受到，现在人口红利在消褪，当然，这是针对 ToC 的产品。但利弊是共存的，尤其是做 ToB 业务的产品经理，可以结合目前国家提的数字化转型方针，和 SaaS 化趋势，可以多关注产品的创新，突破固有的思维模式，突破舒适圈，在 ToB 领域有更多的新成果；</p><p>3.&nbsp;目前国内产品的嗨点已经走向了互联网的深洞，前几年基本上是有商业元素在推动，但是现在需要回归本质，回归价值，回归原始，追求舒适，追求解决用户最基本的需求，要慢下来；</p><p>4.产品经理也要关注大的趋势，不能闭门造车，创新要紧跟国家战略，看经济形势，这样可能会走得更远；其实看看用友、金蝶等企业的 ToB 产品发展历程，就能理解；</p><p>5.这是我今天希望跟大家重点介绍的一点，我们都知道国家在十四五规划当中有一整个篇章专门讲数字经济，也出台了若干政策持续多方面地推动产业的数字化转型。那么对于产品经理来说，抓住数字转型这波浪潮，保持自我学习与成长，会有更广阔的发展空间。</p><p></p><h3>PMF 是产品经理的必修课</h3><p></p><p><img src=\"https://static001.infoq.cn/resource/image/db/45/dbb1c34d1a43b5f132fa63de73c34845.png\" /></p><p></p><p>我注意到今年2022年，全球领先的云和 SaaS 投资机构 Bessemer 在最新的报告中，首次提出 Centaur 半人马兽的概念。以 1 亿美元 ARR（年度订阅性费用）为基准线定义了 Centaur 半人马兽的标准，这是卓越 SaaS 初创公司成功的真正标志。</p><p>此前的独角兽（估值超过 10 亿美元的一级市场公司），已经不足以成为衡量企业成功的标准，只能证明公司有融资能力。该报告指出 2022 年是半人马兽之年，将会有更多的半人马兽公司诞生。</p><p>Centaur 半人马兽企业的 1 亿美元 ARR 说明了2件事：</p><p>1.公司实现了&nbsp;&nbsp;Product-Market-&nbsp;Fit</p><p>2.企业拥有可扩展的&nbsp;GTM&nbsp;策略和不断增长的客户群</p><p>PMF 是产品经理的必修课，也代表了越来越重要的复合型能力。在过去移动互联网飞速发展的十几年间，以中国市场需求引领的大量创新产品此起彼伏，也培养了大量的产品经理。但是 PMF 这一个词的背后其实意味着好几套知识体系和能力，这也是今天我希望和大家重点分享的。</p><p></p><h3>进入数字经济时代，产品经理需要具备什么思维和技能？</h3><p></p><p><img src=\"https://static001.infoq.cn/resource/image/44/51/44ded24375faeaa4aef6139af7170a51.png\" /></p><p></p><p>根据极客邦科技双数研究院今年发布的数字人才粮仓模型，产品经理在企业架构当中属于数字思维业务人才，需要具备数据思维、数字工具的应用能力，以及高效的网络协同能力。这是比较宏观的维度。</p><p>具体从微观层面展开来看。这是我们公司极客时间教研团队在服务和调研了大量企业之后，萃取出来的产品经理技能图谱。大家可以看到几个大类的技能领域包括：市场调研、产品规划、产品管理、专业工具。</p><p><img src=\"https://static001.infoq.cn/resource/image/3b/ae/3b205e1efbb0ebf4230365b81fdab7ae.png\" /></p><p></p><p>为了方便大家能看清这棵技能图谱树，我把每个局部放大，可以看到每个大的技能领域的具体技能点。比如在市场调研方面，需要有很多维度的视角和分析能力；在产品规划方面，也需要有从宏观概念定义到具体指标制定的思维能力和实践能力。</p><p>运营增长自不必多说，这是近年最受关注的能力；当然还有专业工具的应用能力，会用数字化工具才能高效地分析数据，用数据做决策，更好地与同事、产业链合作伙伴协同，这些都是数字经济时代产品经理需要掌握的技能。</p><p><img src=\"https://static001.infoq.cn/resource/image/5b/4f/5bc0815c043e0f3ce861b45f88166f4f.png\" /></p><p></p><p>从企业对产品经理岗位的定位角度，就会参考技能图谱，再根据员工从事工作的经验、在企业人才梯队的位置等进行分层，对应到不同层级的对应的岗位职责。</p><p>相应的，对不同层级的产品经理的知识技能等方面的任职资格也不尽相同。级别越高的产品经理，从软技能、硬技能、知识储备、方法论，以及思维等各个方面都要求得更多。</p><p>从这两张详细的产品经理任职资格表我们其实基本上也能描绘出产品经理进阶的学习路径。这也是极客时间教研团队的专业能力。很多企业，尤其是在做数字化升级或转型的企业越来越重视产品经理的培养。</p><p><img src=\"https://static001.infoq.cn/resource/image/6e/02/6edce412f2abe0ccab5b90a441355302.png\" /></p><p></p><p>我们在过去 3 年里服务了超过 3000 家企业的数字人才培养服务，这里摘取了部分企业客户的产品经理培训主题给大家参考。</p><p>明显地能够看到，产品经理已经不仅仅是互联网公司的“香饽饽”，也开始受到传统行业企业的重视和青睐。这些行业包括：银行、金融、通信、制造、汽车等等。很多人说互联网进入下半场，开始唱衰产品经理。我希望大家从我的分享之中看到更多积极的信号。</p><p>给大家看一个具体的产品经理培训的项目案例。从项目背景来看，这是一家典型的国企。他们为产品经理定制了一套完整的体系化培训，赋能产品经理技能提升同时打造产品竞争力，实现员工和企业共同成长的目标。通过三个月的线上自主学习+线下集中研学+实战演练的体系化学习，产品经理们从用户画像和产品创意，到产出 MVP 产品方案，策划运营增长方案，到最终形成可落地的商业计划。</p><p>从这个培训项目大家能够看到什么？产品经理的角色和产品经理的能力正在成为大量企业提升自己产品在数字经济时代竞争力的关键岗位和关键能力！</p><p><img src=\"https://static001.infoq.cn/resource/image/ba/0e/baab2aa3d6bc3e5b3656f64a97413b0e.png\" /></p><p></p><p>很荣幸极客时间个人版目前已经服务了 25 万人学习产品经理相关的课程；极客时间企业版已经服务了上千家企业的近 18 万员工学习产品经理相关课程。非常期待在座的各位将来都能成为我们服务的用户和客户，我们一同学习提升数字化技能，成为新时代的高价值人才。</p><p><img src=\"https://static001.infoq.cn/resource/image/25/83/25a5a354c6cbe40738b7bef085474f83.png\" /></p><p></p><p>因为数字经济时代发展需要的数字人才有非常大的缺口，各行各业的发展都需要具备数字思维和数字技能的人才，产品经理也是其中重要的组成部分。我们有充分的理由相信，只有保持学习数字技能，产品经理是数字经济时代最炙手可热的人才。</p><p></p><h3>极客邦科技- 以 KaaS 模式推动数字人才全面发展</h3><p></p><p><img src=\"https://static001.infoq.cn/resource/image/aa/f9/aaf352dd6f3d1e92e36634c896a4fef9.png\" /></p><p></p><p>最后给大家简单介绍一下我们公司，极客邦科技。今年我们公司升级了使命为“推动数字人才全面发展”，同时把极客邦科技旗下的所有资源通过产品和服务的形式提供给客户。&nbsp;KaaS 模式让知识可以像服务一样被生产、被发现。在服务者（包括企业和讲师）与消费者之间有效地运转起来，形成各方都能享受到优质服务、高质量的数字技术知识和技能的良性闭环。</p><p><img src=\"https://static001.infoq.cn/resource/image/49/c1/498150878472df847c725fdac71831c1.png\" /></p><p></p><p></p><p>从解决方案的角度大家能更好地理解。这是我们面向企业提供的“数字化领先”一体化解决方案。为企业提供数字转型战略及业务架构轻咨询服务，到以“研测学考评”一体化平台服务为核心的数字人才培养，再到通过媒体和技术生态服务助力企业打造技术品牌影响力，以及从长期发展视角为企业提供业务增长等各方面的咨询服务。这一切仍然是围绕推动数字人才全面发展这一核心展开，目标是推动企业数字化转型成功，助力数字中国早日实现。</p><p>说在最后，预祝本次大会圆满成功，也祝大家都能通过本次产品创新大会收获满满！</p>",
    "publish_time": "2022-08-22 10:43:36",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "石油公司是如何“玩转”AIoT的？",
    "url": "https://www.infoq.cn/article/7vTfCLYoKzuIZTjdLGk0",
    "summary": "<p>我国最深的油井，是位于塔里木油田的“满深10井”，具体钻井深度达到9186米——比从珠穆朗玛峰峰顶打到山脚的深度还要多出300多米。可以想见，在这样钻探风险和施工难度极大的超深地层勘探油气储藏，是“全球少有、国内独有”的钻完井工程难题，需要在技术创新上不断实现新的突破，才能推动我国超深层油气勘探开发水平跻身世界前列。</p><p></p><p>而正是因为石油作业环境的这种特殊性，从钻井、开采再到运输、加工，石油工业场景中很多高危或者不适合人工完成的工作，逐步都实现了机器换人。这使得石油行业的整体<a href=\"https://www.infoq.cn/article/UlxmUYElHHjTsU55rFUP\">工业自动化</a>\"程度相对其它传统制造业要更为完善，也是目前<a href=\"https://xie.infoq.cn/article/0d03d3d6af148de471cf242ea\">AIoT（人工智能物联网）</a>\"在石油行业应用比较普遍的原因。</p><p></p><p>举例来说，通过“物联网+大数据+人工智能”，可以对地下数千米的智能钻机进行远程控制、实时监测，对散点分布的作业区设备进行智能巡检、安全预警，对油气生产过程进行资源调配、故障诊断，对深不可测的地下勘探进行更精准的预测和定位.....</p><p></p><p>AIoT的落地，正在加速以上这些智慧油田基本场景的实现——尤其是在全球环境变幻莫测的当下，对于我国这样一个石油资源并不算丰富的国家来说，这意义重大。</p><p></p><p>某能源领域技术专家（以下使用化名“孙杰”）告诉InfoQ，我国的石油资源相对紧缺，加上区域分散、地质复杂，使得石油的生产成本居高难下。“比如中东国家的石油80%集中在浅层和中深层，在地下2000多米就能开采到石油，在国内，每口井至少得挖3500米以上才能采到油，这意味着要花更多的钱、用更多的成本。所以，我们必须不断使用新技术来提高石油的产量，降低人工和成本的投入。其中，AIoT所强调的智能化运营恰恰能很好满足目前石油行业在降本增效等等这些方面的需求。”</p><p></p><h1>AIoT可以解决哪些石油生产难题</h1><p></p><p></p><p>据孙杰介绍，AIoT主要可以解决石油生产过程中的几个核心问题：第一，监控实时化；第二，管理高效化；第三，分析智能化。</p><p></p><p>首先，基于AIoT的相关技术，可以在各个关键环节放置数据采集的装备，经过数据传输和分析，从而对设备进行实时监控，实现安全预警。“比如在加油站油品输送的过程中，跑冒滴漏会引发事故。但人一般不可能实时地去盯着管道阀门看，这时候，通过传感器监测管道的压力并实时传输到后台，如果发现压力数值异常，就可以及时采取应对措施，而不用等到管道出现问题再处理，同时还能减少人工操作的纰漏。”</p><p></p><p>除了利用传感器等装备进行数据传输和监测，防止气体泄露的另一个措施是使用<a href=\"https://xie.infoq.cn/article/de7e472c35d3607b776f8009d\">无人机</a>\"进行智能巡检。据孙杰介绍，在管线运行过程中，如果出现密封环松动或者破损，会造成大量气体泄漏，严重的甚至会导致爆炸等安全事故，对安全运输产生危害。</p><p></p><p>而无人机可以预先航线规划，在管线正上空50m~80m进行仿地飞行，通过交替飞行方式，持续对管线地表进行甲烷浓度监测。具体来说，由于配备了三轴增稳云台，可以使监测激光光束持续稳定指向被测区域，最低能检测的浓度达到5ppm.m。并且，无人机是实时监测被测区域，以坡形图显示，搭配H20t可见光，可以形成红外热成像。在巡检任务结束后，无人机还能自动生成巡检报告——包含报警点位置、报警浓度及现场照片等等。“总的来说，通过无人机巡检不仅精确度比人眼更好，巡检效率也更高，通常一天下来可以巡检几个来回。”孙杰强调。</p><p></p><p>其次，石油生产的第二个特点，是要求设备不中断运行。孙杰向InfoQ举例，假设钻机在地下钻探的过程中停止运行，不仅会影响钻井施工的正常进行，而且还会造成巨大的经济损失。这意味着，对设备的检测、维修维护工作一定要前置，不能等事故发生再亡羊补牢。过去，这个工作主要由有经验的老师傅完成，如果钻头出现异响，无论是轴承磨损还是卡钻、损坏，都要依赖他们的经验去判断具体问题，决定是否要更换钻头。</p><p></p><p>不过，这样的问题处理对人的经验和能力培养周期非常长，时间成本也很高。“现在有了AIoT这些技术，我们已经可以把老师傅们的经验转变成<a href=\"https://www.infoq.cn/article/dbLYT47GWIIccobhQap5\">算法模型</a>\"，让机器去识别判断设备问题，进行预测性检修，通过对钻井环境、设备等数据的实时采集、实时传输、实时分析，辅助管理者做判断，从而缩短决策的响应时间，提高管理效率。”</p><p></p><p>值得强调的是，其中的数据从采集、汇总到分析，同样都不是靠人工去完成，而是按照固定的数据标准自动进行的。孙杰强调，这就是AIoT的第三个应用价值——实现分析的智能化。</p><p></p><p>“过去通过人工去做汇总和分析，平均时长需要两到三个小时，甚至有时候一天之后才能得到分析的结果。但基于智能化的预测和分析，所有工作都是实时、自动进行的。”孙杰举例，“比如领导想要知道单井或者是某个作业区的产量，只需要根据预先设置的参数，把相关参数输入到对应模型中，去让机器自动分析再输出结果——通常，这在几分钟或者几十秒内就能输出所需要的分析报表，非常方便管理者及时决策。”</p><p></p><h1>落地AIoT需要构建什么样的基础设施</h1><p></p><p></p><p>但是，解决这些生产问题的背后，并不仅仅是AI、IoT和数据的简单叠加。虽然石油行业的自动化程度整体高于其它传统制造，在落地AIoT的过程中，也同样有很多的旧困难和新挑战要应对，需要全新的基础设施作为依托。</p><p></p><p>首当其冲的挑战，来自于数据收集。石油野外作业条件恶劣，对于设备和人来说是一样的。这意味着，架设在设备和环境中收集数据的<a href=\"https://www.infoq.cn/article/4MD03KvNOx2Ebt7UUL8j\">传感器</a>\"要能扛住这些潜在的“威胁”——比如，放置在管线中的传感器就要耐腐蚀，放置在海上钻井中的传感器就要防水，如果是在温度比较高的地区还要耐高湿。“除了使用特殊的材料，我们通常还会做一些保护盖或者插入式的设计。另外，如果是在海里，传感器还要符合环境保护标准并且定期维修更换，避免污染海域环境。”孙杰解释道。</p><p></p><p>与此同时，在数据采集过程中，关键还要打通不同设备之间的数据壁垒，从而实现数据的可视化。孙杰表示，和大多数传统制造行业一样，石油行业所使用的设备往往也来自不同品牌、不同型号，也就是说，它们的数据协议和格式并不相同。对此，解决办法就是使用数据转化的盒子——类似于不同品牌手机充电器的转接头——可以在数据采集的过程中，对不同的数据协议进行解析，然后按照统一标准自动进行汇总和呈现。</p><p></p><p>第二个挑战，来自于数据传输。通常来说，制造企业的厂区分布一般比较集中，但石油生产受限于地理条件，作业区不仅位置非常分散、流动性强，而且通常都在比较偏僻的区域，至少距离城市中心数几十公里。如果把所有数据传输到统一的数据中心，非但成本高，而且效率还低。“以前，我们只能通过一些采集器和专用网线去传输这些数据，其实速度非常慢。另外因为是在野外，网线要拉很长，而且都暴露在外面，网线的老化速度非常快，这也会造成网络传输的不稳定。”孙杰表示。</p><p></p><p>随着<a href=\"https://xie.infoq.cn/article/d405746948670885e22137d11\">边缘计算</a>\"技术的日趋成熟，这个问题正在得到解决。“比如，通过在不同井区布置微型数据中心，我们可以把作业现场的数据分别传输到里面做处理，速度上基本可以做到实时。”孙杰进一步解释，“但是，微型数据中心对数据的承载量又是有限的。所以，当数据量超过一定规模，还需要把数据先传输到就近的中心，再采用专线的形式汇总到总部的数据中心。”</p><p></p><p>第三个挑战，来自于数据计算。随着智能化运营的有序开展和迭代演进，石油井区能够收集以及需要收集的数据规模将越来越大，数据类型也会越来越多。比如，AI可以用来提高石油勘探的准确性，但是，勘探的位置都在未经挖掘的地下，还需要结合<a href=\"https://xie.infoq.cn/article/ee5ba1da546aed28cb3688ce2\">数字孪生</a>\"进行三维建模——而这个数据量非常之大。举例来说，构建一个数十平方公里的高精度三维数字模型，数据量可能就会可达到TB甚至PB级。</p><p></p><p>孙杰表示，对这么大的数据量级进行处理分析，需要使用高性能计算才能真正提高计算的精确度。同时存储这些大量的数据，也需要耗费相当的成本——所以，考虑经济性和高效性，通常可以对数据进行分类分级管理。</p><p></p><p>“针对不同类型的数据，我们会进行存算分离。”孙杰举例，“比如说，跟生产相关、需要进行实时计算、追踪的数据，就可以传输到高性能计算设备进行实时处理，而像前期做地质勘探测绘用的数据，就可以直接存储起来，不用做实时计算。”</p><p></p><h1>新技术的引进和使用会有哪些“坑”</h1><p></p><p></p><p>当然，技术本身的发展有它的周期，技术与人的磨合也需要一定的时间，这是客观规律。从农耕时期人类使用工具满足衣食需求，到工业时代机械帮助人类实现大规模生产，再到信息时代计算机成为人类智力创造的重要辅助——每一个技术在最初出现的时候，都会先经历一个“混沌期”。</p><p></p><p>以AI、IoT、大数据等技术为核心的智能时代同样如此。两个极端表现是，要么盲目“迷信”新技术，要么抵触抗拒新技术。孙杰表示，这两个“坑”他们都踩过。</p><p></p><p>“作为传统行业，我们一开始会觉得很多科技公司的技术很强，认为他们一定可以帮助我们利用AI这样的技术提高生产效率和经营水平。但后来我们慢慢发现，只依靠先进技术是不行的，他们的技术如果脱离实际应用场景是没法发挥价值的。就相当于你拥有了一把很厉害的锤子，但没有要砸的钉子，这个锤子就没有价值。”孙杰强调，技术一定要与具体的业务场景融合，要解决问题而不能停留在炫技的层面。</p><p></p><p>所以，技术引进之前的业务需求调研非常重要。“在项目前期，我们的技术人员通常会深入到油田作业现场，在那里用一到两个月左右的时间做深度调研，然后把一线的反馈整理成需求文档；据此进行初步的原型技术开发，并提供给一线人员进行试用；试用的过程如果发现问题，再不断地去完善。”孙杰表示。</p><p></p><p>在这个过程中，核心的一个难点在于，如何把业务需求转换成技术语言——比如，放在AIoT的场景下，就是如何把专家的经验转换成计算机的算法模型，来优化提高钻井效率。</p><p></p><p>以石油钻井为例：数据来源于钻井过程的各个环节，种类繁多、数量巨大；并且，钻井过程中的钻井参数以及地下环境等信息具有复杂性、多样性以及不确定性（如：地下环境、地质参数等），这使得钻井决策更多地依赖于专家经验，而不是科学的决策。</p><p></p><p>“为了提高决策的科学性，我们的钻井专家人员和技术人员对钻井过程做了很多优化工作，提出了很多的优化模型和改进方法。”孙杰指出，“尤其是随着钻井行业数据量的不断增长，传统的数据处理模型对于非结构化数据的处理具有一定的局限性，因此如何利用更先进的技术和管理手段，收集、整合、优化石油钻井各类数据，把人的经验变成更优化的计算模型，对于提高钻井效率具有重要意义。”</p><p></p><p>在孙杰看来，在这个过程中，<a href=\"https://gtlc.infoq.cn/2022/beijing\">技术与业务</a>\"沟通协作是非常重要。如果缺少一线工人的经验输入，靠技术自己去给应用数据做标注、打标签那可能就会漏洞百出。但是，另一个难点在于，技术与业务之间的话语体系存在鸿沟，可能会让这个协作的过程并不那么“丝滑”。</p><p></p><p>“比如石油工人跟你说钻机、三向分离器、油品、录井、测井等等这些很专业的业务术语，技术人员就可能一窍不通；而技术人员跟他们讲云计算、虚拟化、<a href=\"https://xie.infoq.cn/article/547275996f5d919af4daa32b9\">容器</a>\"，他们也可能听不懂。”孙杰表示，“这时候，就需要双方坐下来彼此倾听，业务告诉技术他们的工作流程是怎么样的，技术告诉业务这个技术是怎么解决问题的。有时候，甚至可以用一些通俗易懂的比喻，比如，我们给工人解释公有云和私有云的区别时，就会告诉他们，如果是自己买材料在家做饭就相当于私有云，如果是直接到饭馆吃就相当于公有云。通过一些形象的例子，他们就会更容易理解。”</p><p></p><p>但是，孙杰也坦言，即便是如此，仍然无法避免会有个别一些人抵触和抗拒新技术。“这种时候，我们的办法是让他们去直接体验新技术的好处。就像智能手机出现的时候，也有人拒绝，但是当他看到周围的人不只能用手机打电话、发短信，还能买机票、发视频、看电影、打车、订外卖，就会慢慢改变。”</p><p></p><p>除了潜移默化的影响，企业层面的文化重塑、制度规范和技能培养也很重要。“比如，我们会在内部定期组织相关的技术沙龙，也有网上的视频学习课程，这些都是为了让工人更好地了解新技术；另外，也会通过绩效对工人进行考核，比如使用新技术或者更先进的解决方案，最终实现了成本降低、效率提升，就可以获得一定的创新奖金等等；并且，从<a href=\"https://time.geekbang.org/\">技能培养</a>\"上我们还会定期组织一些技术创新大赛，通过树立榜样和典型，不断影响更多的人。”</p><p></p><p>“总的来说，AIoT给石油行业带来的好处是实实在在的，除了生产运营上的降本增效，也能通过智能化运营平衡供需，提高能源的利用效率。科技发展日新月异，我们相信AIoT将为油气企业数字化转型升级装上加速器。”孙杰总结道，“当然，在产业依托技术不断演进的过程中，我们仍然要坚持的是业技融合协同创新，既要仰望星空也要脚踏实地，要让技术走进实际的业务场景，才能把数字化转型落到实处。”</p>",
    "publish_time": "2022-08-22 10:55:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "为什么永远不会有语言取代 C/C++？",
    "url": "https://www.infoq.cn/article/KNsCGfKUTrJroLql0bzg",
    "summary": "<p></p><blockquote>数以百计的 <a href=\"https://www.infoq.cn/article/vJVZMZWbipYjHUT0B74G\">C/C++ 替代品</a>\"将会出现，但 C/C++ 将永远与我们同在！</blockquote><p></p><p></p><p>每个 CPU 都带有一种称为 ISA（指令集架构）汇编的电路语言。ISA 程序集是一种硬件语言，由基本数据操作、数学计算和结构化编程（即jmp）的操作组成。但是，为每个计算需求编写汇编代码无疑是耗时的，因此过去的程序员发明了对人类友好的语言和编译器。</p><p>&nbsp;</p><p>计算机科学家先驱Dennis Ritchie为Unix操作系统的研发需求实现了<a href=\"https://xie.infoq.cn/article/d206562cbbf03dcbd2b237e2a\">C语言</a>\"。在这段时期，整个计算机技术领域都在进行基础的最初建设，所以几乎所有的程序员都使用C语言来构建早期的计算程序，比如编译器、操作系统、数据库软件和网络程序。后来，<a href=\"https://xie.infoq.cn/article/220339b579319e726cc440271\">C++</a>\"扩展了C语言，保留了C语言的性能特点，一门具有更多开发人员特性的新的编程语言诞生了。</p><p>&nbsp;</p><p>在20世纪20年代，程序员实现了C/ C++的备选品，如Go、D、Rust和<a href=\"https://www.infoq.cn/article/4CwkLd4gWsXdRtWNKOgx\">Carbon</a>\"，它们具有C/ C++从未提供的各种特性。但这些语言仍然只是C/ C++的备选品，而不是替代品，原因如下：</p><p>&nbsp;</p><p></p><h1>C和C++是基础语言</h1><p></p><p></p><p>如果我们追根溯源当今活跃在我们生命中的每一款计算机程序，总会发现它们诞生自C或C++。想想你现在在做什么，你可能在谷歌Chrome上读到这篇文章，Chrome开源浏览器(Blink渲染引擎、V8和浏览器应用程序)是用C++写的。假如你在GNU/Linux上运行Chrome，Linux内核是用C写的。MySQL，最流行的关系数据库管理系统，是用C/ C++写的。所有流行的操作系统都为内核函数提供了核心C或C++ API。</p><p>&nbsp;</p><p>即使存在稳定的C/ C++替代方案，许多程序员仍然喜欢用C或C++进行系统编程。在大多数情况下，程序员选择C++是因为它是与操作系统级API通信的最佳语言。例如，谷歌用C++编写了<a href=\"https://github.com/flutter/engine\">Flutter引擎</a>\"：</p><p>&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/69/98/690e461f6532fa00d868056efb546498.png\" /></p><p></p><p>Flutter 引擎使用C/ C++应用GTK库函数，截图由作者提供</p><p>&nbsp;</p><p>数十年来，计算领域的大多数核心组件都使用C/ C++作为实现语言，C/ C++语言也长期维持着语言语法的标准。打造C/ C++的替代品就像在所有的建筑工程完工之后改变房子的地基。</p><p>&nbsp;</p><p></p><h1>C和C++完全控制我们所写的内容</h1><p></p><p>&nbsp;</p><p>在编写源代码时，C/ C++可以自由地处理程序资源。例如，C/ C++允许你直接分配/释放用于存储数据元素的物理内存。C/ C++提供了一种使用本机操作系统级线程的方法，而不是像Go那样管理单独的并发运行时。C/ C++没有提供自动内存管理(垃圾回收)特性，因此程序员应该谨慎有效地防止内存泄漏。看看Meta的Folly库源代码是如何实现手动内存管理策略的：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/ec/56/ecaa81540f7f8007bcd52da52b8c0a56.png\" /></p><p></p><p>Meta的<a href=\"https://github.com/facebook/folly/blob/b72a70a35ada45ac286eb60028c0ecf5f6725665/folly/test/SynchronizedPtrTest.cpp#L53\">Folly库</a>\"使用了手动内存管理功能</p><p>&nbsp;</p><p>自动内存管理和内存处理的限制无疑是使语言变得现代、高效和更抽象的好方法，但是这些特性会在语言运行时产生性能开销，并降低程序员的自由度。</p><p>&nbsp;</p><p>C和C++不限制内存访问，提供手动的内存管理操作，让程序员按照自己的意愿控制程序，从而把自由给了程序员。当你用C/ C++编写程序时，你的源代码将有效地执行你指示的操作，就是这样。</p><p></p><p></p><h1>C和C++确实又快又高效</h1><p></p><p>&nbsp;</p><p>一个特定程序的效率取决于两个主要因素：程序员使用的算法的<a href=\"https://levelup.gitconnected.com/5-things-to-know-before-you-write-optimized-code-3ca424110db1\">时间复杂度</a>\"和二进制程序的效率。毫无疑问，我们可以控制算法的复杂性，因为我们可以通过更新源代码来改变它们。另一方面，二进制文件是编译器生成的，因此我们无法轻易从这方面提高效率。</p><p>&nbsp;</p><p>但是，我们可以选择一个能够生成快速有效的二进制文件的编译器。GNU 编译器生成特定于平台的二进制文件，而不嵌入专用的运行时环境。C编程执行模型使用<a href=\"https://en.wikipedia.org/wiki/Crt0\">crt0</a>\"汇编指令段中定义的最小启动代码。看看下面的例子，Linux上的crt0部分：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/a7/3b/a7b980c2c211b557121c4d91dff2cf3b.png\" /></p><p></p><p>在C语言中main函数之前执行的启动代码</p><p>&nbsp;</p><p>C++无疑是一门复杂的语言，但它不像<a href=\"https://xie.infoq.cn/article/3e85bd462d66670ca2115b90c\">Python</a>\"和<a href=\"https://xie.infoq.cn/article/eb877c2dfcca509e799b41d5b\">Golang</a>\"那样提供更高的抽象。此外，它还为你提供了一种使用首选标准语言版本(即C++ 14)进行编译的方法。因此，自现代C++特性使C++开发复杂化以来，你可以只使用C++中最小的特性。C++已经有30多年的历史了，并且从早期计算时代开始就对其性能进行了优化。</p><p>&nbsp;</p><p></p><h1>C和C++是学术友好型语言</h1><p></p><p></p><p>程序员编程通常始于职业生涯的不同阶段。一些程序员在他们上学的时候就使用第一台计算机设备学习编程。然而，大多数程序员都是在大学期间提高他们的编程技能的。幸运的是，几乎所有的大学都是为了让学生有机会学习计算机程序如何与硬件组件一起工作而开始教授了C语言编程。我写了以下文章来进一步解释计算机程序是如何与硬件连接的：</p><p>&nbsp;</p><p><a href=\"https://levelup.gitconnected.com/5-things-to-know-before-you-write-optimized-code-3ca424110db1\">编写优化代码前需要知道的5件事</a>\"</p><p><a href=\"https://levelup.gitconnected.com/5-things-to-know-before-you-write-optimized-code-3ca424110db1\">这些事实有助于您以优化的性能给硬件和程序员留下深刻印象</a>\"</p><p></p><p>后来，大多数大学教授C++的数据结构和算法基础知识，而不使用C++的复杂部分。大学生通常在学习了与算法相关的课程后，就会进入竞争激烈的编程领域。大多数有竞争力的程序员都喜欢C++，因为它速度快，内置的最优数据结构可用性高，语法少。</p><p>&nbsp;</p><p>Rust无疑是一种很好的语言，具有内存安全、高性能和内置特性，但是Rust语法对于第一次编写代码的开发人员并不友好。对于工业用途来说，如果你的团队希望获得类似C语言的最小的高效代码和类似python的开发环境，Go是一种很好的语言。但是，对于学术用途来说，Go的抽象太过简单，并且不能与传统的伪代码保持一致，所以学术讲师永远不会用Go来替代C/ C++。</p><p>&nbsp;</p><p>下面的文章解释了为什么每个程序员都应该用C语言开始编程：</p><p></p><p><a href=\"https://shalithasuranga.medium.com/why-every-developer-should-start-programming-with-c-39b3a87392bf\">为什么每个开发人员都应该使用C语言开始编程</a>\"</p><p><a href=\"https://shalithasuranga.medium.com/why-every-developer-should-start-programming-with-c-39b3a87392bf\">你可以从任何一种语言开始编程——但是从C开始有更多的好处！</a>\"</p><p></p><p></p><h1>现代替代方案仍然需要C，它们专注于不同的目标</h1><p></p><p></p><p>如前所述，所有POSIX操作系统和非POSIX操作系统(即Windows)都提供了一个C库来处理内核操作，因此从C/ C++调用内核特性很容易，因为我们不需要编写特定于语言的绑定或第三方包装器。一些操作系统甚至预先包含GNU C/ C++编译器和调试器来促进C/ C++的开发。如果我们使用Rust和Go，需要特定于语言的第三方绑定来与操作系统API通信。现代替代语言仍然提供了调用C代码的方法。例如，Go提供<a href=\"https://go.dev/blog/cgo\">Cgo</a>\"特性来调用C代码。</p><p>&nbsp;</p><p>几乎所有的C/ C++替代方案都力求用与C++截然不同的语言语法来提供缺少的C++特性。</p><p>如果程序员在寻找C/ C++的替代方案，他们通常会期望一个平稳且耗时较少的迁移过程。</p><p>此外，他们也不期望学习一门新语言来为他们不喜欢的C/ C++特性找到解决方案。</p><p>&nbsp;</p><p>程序员们针对低层次编程用例设计和改进了C语言，没有一种现代语言是完全针对C语言的目标而创建的。C++使C语言更具有未来感，并自低级编程阶段进行了提升。Rust、Go、D和Carbon都是C/ C++的备选品——而不是替代品，这些备选品都有自己的未来目标。</p><p>&nbsp;</p><p>下面的文章解释了为什么每个程序员在他们的职业生涯中都需要学习C++语言：</p><p></p><p><a href=\"https://levelup.gitconnected.com/why-every-programmer-should-learn-c-during-their-careers-959e1bc2ea68\">为什么每个程序员都应该在他们的职业生涯中学习C++</a>\"</p><p><a href=\"https://levelup.gitconnected.com/why-every-programmer-should-learn-c-during-their-careers-959e1bc2ea68\">掌握C++并不是一件容易的事，但是一旦你做到了，你将获得无价收益</a>\"</p><p>&nbsp;</p><p></p><h1>结语</h1><p></p><p></p><p>以前的程序员在C/ C++进化时期书写了我们的计算机历史。他们用C和C++构建操作系统内核、编程语言、数据库系统、移动操作系统和网络软件。多亏了C/ C++，现在几乎所有的现代Web服务都能工作。例如，最流行的Web服务器软件，如Apache HTTP和Nginx，就是使用C/ C++作为实现语言。以前的程序员几乎用C/ C++编写了所有流行的内部网络浏览器和网络软件组件。Web开发人员喜欢选择Java和Node.js用于Web服务，但Java和Node.js都是因C/ C++而来的。</p><p>&nbsp;</p><p>一些程序员认为像Rust、Go、D和Carbon这样的流行语言可以替代C/ C++。同时，一些程序员考虑使用这些语言作为C/ C++的备选品，认为它们在未来可能取代C/ C++。这些现代语言是为特定的目的和需求而设计的——而不是取代C/ C++。</p><p>&nbsp;</p><p>微软创建了<a href=\"https://www.infoq.cn/article/ds994KySqo868U3e8s4N\">TypeScript</a>\"，但我们仍然使用JavaScript。Jetbrains创造了Kotlin，但我们仍然使用Java。数以百计的C/ C++备选品出现了，但程序员仍将使用C/ C++，因为重写面向C/ C++的计算机历史是不现实的。这并不意味着C和C++是最好的语言——在某些方面(例如复杂性、内存安全性等)，备选语言可能比C/ C++更好，但它们无法进入C/ C++的领域，因为以前的程序员用C和C++编写了整个现代计算机历史。</p><p>&nbsp;</p><p>感谢你的阅读。</p><p>&nbsp;</p><p>原文链接：</p><p></p><p><a href=\"https://levelup.gitconnected.com/why-modern-alternative-languages-never-replace-c-c-cbf0afc5f1dc\">https://levelup.gitconnected.com/why-modern-alternative-languages-never-replace-c-c-cbf0afc5f1dc</a>\"</p><p>&nbsp;</p><p>译者介绍：冬雨，小小技术宅一枚，现从事研发过程改进及质量改进方面的工作，关注研发、测试、软件工程、敏捷、DevOps、云计算、人工智能等领域，非常乐意将国外新鲜的IT资讯和深度技术文章翻译分享给大家，已翻译出版《深入敏捷测试》、《持续交付实战》。</p>",
    "publish_time": "2022-08-22 15:20:43",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "算力规模突破千万核，腾讯云大数据产品全景图长啥样？",
    "url": "https://www.infoq.cn/article/zsW4jswPgwwzpYfqbpfv",
    "summary": "<p>腾讯云大数据技术已经从第一代的离线计算，第二代的实时计算，第三代的<a href=\"https://baike.baidu.com/item/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/217599?fr=aladdin\">机器学习</a>\"，发展到如今以隐私计算、数智融合以及云原生为代表的第四代。</p><p></p><p>腾讯云今天在首届大数据峰会上公布，其大数据平台算力规模已经突破千万核，日实时计算量达百万亿级、日运行容器数超亿级，日计算数据量数百 PB，服务的企业客户数超 2 万家，开源社区代码贡献量超 800 万行，进一步呈现了自身在大数据领域的顶级实力。</p><p></p><p>腾讯云副总裁黄世飞表示，基于全新的技术架构、数据治理理念以及产品能力，从底层的大数据基础引擎、中层的一站式大数据开发治理平台, 再到上层的智能推荐、隐私计算和 BI 应用，腾讯云已经构筑了国内领先的大数据产品矩阵。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7f/7f089763a46cd07f97f2ecc0d6aa3b10.png\" /></p><p>腾讯云大数据产品矩阵</p><p></p><h2>深化云原生能力，大数据基础产品开箱即用</h2><p></p><p></p><p>大数据与云原生技术的结合成为解决目前大数据技术门槛高、运维部署难度大等问题的最优解，企业在利用大数据过程中真正需要的是一套开箱即用的云原生产品服务。腾讯云大数据基于开源开放理念，以及内部单集群超万节点的大规模技术实践，沉淀了国内领先的企业级云原生大数据技术架构的构建能力。</p><p></p><p>弹性 MapReduce (EMR)、Elasticsearch Service (ES)、云数据仓库 CDW、数据湖计算 DLC、流计算 Oceanus、数据集成 DateInLong 等构成了腾讯云大数据基础产品的核心引擎。以 EMR 来说，基于云原生技术的安全、低成本、高可靠开源大数据计算框架，帮助客户构建可弹性扩展的企业级大数据技术架构，轻松应对 PB 级海量数据的价值挖掘挑战。数据湖计算 DLC 基于存算分离的产品架构，可以实现数据资产统一建设，帮助用户敏捷、低成本地管理和分析海量数据。</p><p></p><h2>基于全新治理理念，WeData 全面升级</h2><p></p><p></p><p>全新升级的一站式大数据开发治理平台 <a href=\"https://cloud.tencent.com/product/wedata\">WeData</a>\"，基于业内独创的 DataOps 数据开发模式, 通过协同、效率、一体三大核心优势, 实现了数据集成、数据资产、数据开发、数据服务等全方位的数据治理能力。凭借其基于开源、简单易用、安全稳定、降本增效的优势，腾讯云 WeData 能帮助企业大幅提升数据管理效率和数据质量, 为业务创造价值, 目前已经在企业级数据仓库构建、数据资产治理等场景中被广泛应用。</p><p></p><h2>大数据和 AI 融合，实现数据与业务闭环</h2><p></p><p></p><p>大数据和 AI 技术的融合不仅让大数据的运维、部署更加智能，还可以打通数据和业务智能化之间的阻隔，实现价值闭环。腾讯云大数据正在加速推进和自主研发的人工智能平台 <a href=\"https://cloud.tencent.com/product/tione\">Ti-One</a>\" 的紧密结合，让经过腾讯内部海量业务训练过的智能化真能融入大数据业务中。新一代智能推荐平台采用业界领先的 AI 技术和推荐算法，能够为信息流分类页推荐、短视频个性化推荐、信息流猜你喜欢等场景提供强大技术支撑。</p><p></p><p>为打破数据孤岛实现数据协同，全自研 Angel PowerFL 隐私计算框架和首创的基于 Spark + MQ 的隐私计算模式，为政务、金融、广告营销等众多行业提供了数据安全保障。凭借该技术，腾讯云大数据团队连续两年获得 iDash 世界隐私计算大赛冠军，安全性能领冠全球。</p><p></p><p>同时，腾讯云大数据 BI 产品，支持腾讯云上各类数据源、数据处理平台快速接入，拖拽式敏捷分析方式，让非技术人员可快速构建报表满足复杂业务分析需求。</p><p></p><p>值得一提的是，这些公有云上的大数据基础引擎、数据开发治理平台、智能推荐、隐私计算、BI 等能力，也可以通过腾讯云大数据处理套件 TBDS 在私有云或非云化环境等比例获取。</p><p></p><p>腾讯云副总裁刘煜宏表示：“未来，腾讯云大数据还将在自适应计算架构、流批一体的实时湖仓、大数据‘自动驾驶平台’、云原生大数据等方向上进一步发力，携手合作伙伴，为客户提供更智能、更安全的大数据产品服务。在更加基础底层的编译器领域，我们将深入打造自主可控的数据科学编译器引擎，为上层的大数据产品发展提供强大的技术保障。”</p><p></p><p>本次峰会上，腾讯云大数据还首次对外宣布“智理无数，心中有数”的品牌理念。同时，为推动云原生大数据技术发展，共建云原生大数据生态，腾讯云联合英伟达、Elastic、StarRocks、Apache Alluxio、SelectDB 等多家软硬件技术厂商与开源社区，共同发起成立云原生大数据技术生态联盟。</p><p></p>",
    "publish_time": "2022-08-22 15:33:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "微软员工看不上公司加薪；华为30岁以下员工仅占28％；百度网盘否认人工审核用户照片；甲骨文开始就安全问题审计 TikTok 算法；王者荣耀成手游吸金王 | 架构周报",
    "url": "https://www.infoq.cn/article/94KaLtcoaQzzivXrxcWU",
    "summary": "<p>本周架构视点：谣言！百度网盘否认人工审核用户照片；微软员工看不上公司加薪，称还赶不上通胀速度，打算跳槽；因发布 TikTok 视频，苹果威胁解雇员工；国内游戏7月收入208亿：《王者荣耀》成手游吸金王；华为30岁以下员工仅占28％；微软员工意外将Azure内部凭据泄露到GitHub上；Gartner ：2022 年需要了解的 25 种新兴技术；甲骨文开始就安全问题审计 TikTok 算法；Android 13 正式版发布；微软为 VS Code 推出 Markdown 语言服务器。</p><p>&nbsp;</p><p></p><h2>万万没想到</h2><p></p><p>&nbsp;</p><p></p><h4>谣言！百度网盘否认人工审核用户照片</h4><p></p><p>&nbsp;</p><p>8 月 18 日，网络作家 @边想 发帖称：“一直以为百度网盘是机器审核的，没想到是真人审核？？审核人员还能随随便便把用户的照片截下来保存发到网上？？即便打了码”。并且据网传聊天记录显示，百度网盘招聘线上审核员，200 元 / 天。</p><p>&nbsp;</p><p>对此，@百度网盘 官方回应称“百度网盘不存在所谓的照片人工审核，网络上关于百度网盘照片真人审核的内容系谣言”。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/80/95/805bf52a991e610f984709dd00269895.png\" /></p><p></p><h4>微软员工看不上公司加薪，称还赶不上通胀速度，打算跳槽</h4><p></p><p>&nbsp;</p><p>据报道，微软内部员工认为公司今年的加薪幅度并未达到既定承诺，也赶不上美国通胀速度，不少员工打算 9 月份发放绩效后跳槽到其他公司。</p><p>&nbsp;</p><p>今年早些时候，为防止公司员工跳槽至亚马逊等竞争对手，微软承诺将大幅加薪。随后，公司员工们普遍开始关注自己的薪酬将增加多少。但据微软的一些员工们说，加薪幅度根本不足以让他们留在微软。这些员工说，今年 9 月 15 日将是微软按新工资标准向员工发放薪酬和奖金的日子，届时可能会有不少员工离职。</p><p>&nbsp;</p><p>“微软有一条潜规则，如果你想得到你应得的报酬，你就必须跳槽，然后再回来，这条潜规则加剧了微软员工的离职率，”这名微软员工透露，他们计划 9 月 15 日发放奖金之前留在微软，然后再根据其他公司开出的薪酬水平跳槽。</p><p>&nbsp;</p><p>对此，微软没有对此发表评论。</p><p>&nbsp;</p><p></p><h4>因发布 TikTok 视频，苹果威胁解雇员工</h4><p></p><p>&nbsp;</p><p>苹果正威胁解雇一名发布了 TikTok 热门视频的员工，该视频包含了基本的&nbsp;iPhone&nbsp;安全提示。据名叫帕丽斯・坎贝尔 (Paris Campbell) 的员工反映，她被告知，自己以苹果员工身份发布了与苹果相关的话题，违反了公司政策。</p><p>&nbsp;</p><p>根据苹果的社交媒体政策，该公司警告员工不要发布有关客户、同事或机密信息的内容，但它没有明确和彻底禁止员工发布其技术信息。苹果的一份内部文件写道：“我们希望你们做自己，但你们也应该在帖子、推文和其他在线交流中表现出尊重。”</p><p>&nbsp;</p><p></p><h4>国内游戏7月收入208亿：《王者荣耀》成手游吸金王</h4><p></p><p>&nbsp;</p><p>本周，伽马数据发布《2022年7月游戏产业报告》，报告指出，今年7月中国游戏市场实际销售收入为208.08亿元，环比下降7.14%、同比下降15.12%。而中国移动游戏市场实际销售收入146.34亿元，环比下降11.25%、同比下降19.60%。</p><p>&nbsp;</p><p>造成下降的因素有很多，其中包括多款头部产品流水下滑明显、表现较好的新品上线时间较短，流水增量未得以发挥，不足以抵消减量等。</p><p>&nbsp;</p><p>在7月流水测算榜TOP10中， 腾讯人气MOBA类手游《王者荣耀》位列第一，《和平精英》第二， 而《原神》排名第5未进流水前三，网易新游《暗黑破坏神：不朽》进入榜单第十。</p><p>&nbsp;</p><p></p><h4>华为30岁以下员工仅占28％</h4><p></p><p>&nbsp;</p><p>近日，华为在《2021年可持续发展报告》中，披露了员工年龄比例、性别比例、学历构成等数据。 关于性别比例，2021年华为男性员工占比79.5%，女性员工占比20.5%。 学历构成上，华为员工硕士学历占比最高，达到46%，本科学历占比41%，博士及以上占比4%，其他占比9%。</p><p>&nbsp;</p><p>年龄比例上，2021年华为全球员工30-50岁占比70％，50岁以上占比2％，30岁以下员工占比28％。</p><p>&nbsp;</p><p>华为曾因“<a href=\"https://www.infoq.cn/article/MPUp5K6w6rtYzUmqOEIK\">清理34岁以上员工</a>\"”话题陷入争议。早在2017年，有传言称华为正清理34岁以上员工。“华为中国区开始集中清理34岁以上的交付工程维护人员，而研发则是开始集中清退40岁以上的老员工，主要针对程序员。”当时华为官方表示该消息纯属谣言。</p><p>&nbsp;</p><p></p><h2>IT 科技资讯</h2><p></p><p>&nbsp;</p><p></p><h4>微软员工意外将Azure内部凭据泄露到GitHub上</h4><p></p><p>&nbsp;</p><p>8 月 18 日消息，微软的员工已暴露了公司在线基础设施的敏感登录凭据。据 Vice 报道，该漏洞首先由网络安全研究公司 spiderSilk 报告，随后由微软证实。文章称，暴露的数据来自 <a href=\"https://github.com/\">GitHub</a>\" 上的员工。根据 Vice 说法，当被多次询问时，微软拒绝详细说明凭据正在保护哪些系统。此次泄漏并未访问任何敏感数据，该公司已采取更安全措施来防止凭证共享。</p><p>&nbsp;</p><p>发现该问题的网络安全公司 SpiderSilk 首席安全官 MossabHussein 表示，源代码和凭证泄露导致的事故变得越来越多，提前识别越来越困难。他说：“我们继续观察到意外的源代码和凭证泄露是公司攻击面的一部分，并且越来越难以及时准确地识别出来。这对当今大多数公司来说都是非常具有挑战性的问题。”</p><p>&nbsp;</p><p></p><h4>Gartner ：2022 年需要了解的 25 种新兴技术</h4><p></p><p>&nbsp;</p><p>近日，著名咨询公司 Gartner 发布了《2022 年新兴技术成熟度曲线》。 今年，Gartner 又整了哪些“新花样”？</p><p>&nbsp;</p><p>2022 年的新兴技术趋势确定了&nbsp;25 种需要了解的新兴技术，主要包含三个主题：</p><p>&nbsp;</p><p>1、沉浸式体验的演进</p><p>2、加速人工智能自动化</p><p>3、优化技术人才交付</p><p>&nbsp;</p><p>Gartner 副总裁分析师 Melissa Davis 表示： “这些技术都处于早期阶段，其中有些处于萌芽阶段，未来将如何发展仍存在着很大的不确定性。 ”</p><p>&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/34/74/34f2d90c3c7ae2abe6aea1c900ab4a74.png\" /></p><p></p><p></p><h4>甲骨文开始就安全问题审计 TikTok 算法</h4><p></p><p>&nbsp;</p><p>根据 Axios 于 8 月 16 日早上发布的一份新报告，甲骨文已经开始审计<a href=\"https://www.infoq.cn/article/38dKguZxeyz2vx2dAR4S\"> TikTok 的算法</a>\"和内容审核模型。新安排旨在让甲骨文能够监控 TikTok 的系统，以帮助该公司努力向美国立法者保证用户使用安全，解决有关美国境外员工访问美国用户数据的担忧。</p><p>&nbsp;</p><p></p><h4>Android 13 正式版发布</h4><p></p><p>&nbsp;</p><p>近日，Android 13 首个稳定版正式推送，率先登陆 Pixel 设备（Pixel 4、4a、5、5a 和 6 系列等）。谷歌承诺，第三方厂商包括三星、小米、iQOO、摩托、一加、OPPO、Realme、vivo、传音、华硕、夏普、诺基亚、索尼等，也会在今年晚些时候为旗下设备带来升级更新。Android 13 带来了安全改进、UI/ 主题完善、生产力提升、OpenJDK 11 LTS 更新、ART 优化、垃圾收集改进以及其他各种进化和变化。</p><p>&nbsp;</p><p>关于是否升级，Pixel 6/Pixel6 Pro 和 Pixel 6a 这次要特别注意的一点是，由于其搭载自研 Tensor 处理器，正式版 Android 13 会连同 Bootloader 一块更新，带来的结果就是，后续不能降级回 Android 12。不过，正参与 Android Beta 项目也就是使用 Android 13 测试版的 Pixel 6 不影响，只要退出 Beta，就能回归 Android 12。</p><p>&nbsp;</p><p></p><h4>微软为 VS Code 推出 Markdown 语言服务器</h4><p></p><p>&nbsp;</p><p><a href=\"https://www.microsoft.com/zh-cn/\">微软</a>\"近日发布官方博客表示，他们经过半年时间的努力为 VS Code 带来了 Markdown 语言服务器（Markdown Language Server），团队认为 Markdown 语言服务器是可以推动 VS Code 中的 Markdown 工具进一步发展的项目，有了这个语言服务器，微软将把 VS Code 内置的大部分 Markdown 语言工具（如：文档大纲、智能折叠、路径补全等）提供给其他编辑器和工具。目标是推动 Markdown 工具的发展，并使其具有一些与其他编程语言工具类似的智能功能。</p><p>&nbsp;</p><p>Markdown 语言服务器的工作将由以下两个新的开源库负责（两个库名字十分接近）：</p><p>&nbsp;</p><p>Markdown 语言服务（<a href=\"https://github.com/microsoft/vscode-markdown-languageservice\">Markdown Language Service</a>\"）：一个 TypeScript 库，提供处理 Markdown 的工具；Markdown 语言服务器（<a href=\"https://github.com/microsoft/vscode/tree/main/extensions/markdown-language-features/server\">Markdown Language Server</a>\"）：一个使用语言服务构建的 Markdown 语言服务器。</p>",
    "publish_time": "2022-08-22 15:53:30",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "深度参与社区建设是熟练掌握一门技术的捷径",
    "url": "https://www.infoq.cn/article/ZiJudrSjEwuKp81qPVjB",
    "summary": "<p>作者 | 贾亚宁</p><p>嘉宾 | 胡夕</p><p></p><p>Apache Kafka 是一个分布式消息发布订阅系统。它最初由 LinkedIn 公司基于独特的设计实现为一个分布式的提交日志系统，之后成为 Apache 项目的一部分。Kafka 系统快速、可扩展并且可持久化。它的分区、可复制和可容错等特性都是非常出色的。</p><p></p><p>Kafka 社区在 0.10.0.0 版本正式推出了流处理组件 Kafka Streams，使 Kafka 一跃变为分布式的流处理平台，而不仅仅是消息引擎系统了。可以说目前的 Kafka 是和 Storm、Spark、Flink 同等级的实时流处理平台。</p><p><img src=\"https://static001.geekbang.org/wechat/images/b2/b2c9ff9c8c0b8b363c2723335cf24154.jpeg\" /></p><p>出于对 Kafka 技术和其发展路径的好奇，我们找到了胡夕老师。胡夕老师是 Kafka 的技术专家，曾经在极客时间上开设了<a href=\"https://time.geekbang.org/column/intro/100029201?tab=catalog\">《Kafka 核心技术与实战》</a>\"和<a href=\"https://time.geekbang.org/column/intro/100050101?tab=catalog\">《Kafka 核心源码解读》</a>\"两个专栏，对 Kafka 的研究很是深入，也是社区里面非常活跃的 Committer。他不仅对 Kafka 及其它开源流处理框架与技术有深刻理解，对于如何阅读源码更是有着长期的探索和实践。他曾主导过多个十亿级 / 天的消息引擎业务系统的设计与搭建，具有丰富的线上环境定位和诊断调优经验，曾给多家大型公司提供企业级的 Kafka 培训。</p><p></p><p>同时他也是本月上线的 <a href=\"https://time.geekbang.org/qconplus/home\">QCon+ 案例研习社</a>\"中<a href=\"https://time.geekbang.org/qconplus/album/74\">「Kafka 业界最佳实践」</a>\"专题的出品人，带队来分享 Kafka 的最佳技术实践。因此我们针对 Kafka 技术对胡夕老师进行了采访，让我们一起来看看老师的思考吧。</p><p></p><p></p><h5>InfoQ：你最近在负责什么样的工作呢？</h5><p></p><p></p><p>胡夕：目前我手头的工作主要由三个部分组成：</p><p></p><p>第一部分是和团队一起负责公司的数据平台建设，包括完善公司内的数据湖平台，整合上下游离线 / 实时数据，同时进一步构建我们自研的实时用户画像系统，为公司更多的核心业务以及国际化展业提供数据支撑；第二部分的工作是负责公司活动营销的研发，包括营销活动的研发上线以及辅助营销增长的各类内部支撑系统的开发；最后一部分是负责公司的社区产品研发。互联网券商的社区是一个高度垂直类的 C 端社区产品，它需要将券商领域内的业务特点与互联网社区的形态相结合。我们就负责这个社区产品的开发工作。</p><p></p><h5>InfoQ：你在使用 Kafka 的日常工作中，有遇到过什么困难吗？可以具体分享一下吗？</h5><p></p><p></p><p>胡夕：在我过往的 Kafka 使用经验中，我认为有两大问题是比较突出的，这也是和很多业界同仁们交流之后得到的一致性结论：一个是 Kafka 消费的问题；另一个就是 Kafka 运维，特别是版本升级的问题。</p><p></p><p>我们先说第一个，其实我认为大家都同意 Kafka 这个框架的上手成本是比较低的，学习曲线也很平坦。工程师一般自行阅读文档或者查阅网上的资料，不需要几天就能把 Kafka 跑起来。我没有怎么碰到过消息生产，也就是 Producer 端的问题，但消息的消费却很容易出现各种各样的线上问题，最常遇到的应该就是消息堆积。</p><p></p><p>造成消息堆积的原因可能有很多，大致可以概括为以下两种：</p><p>1. 消息处理速度太慢了，至少落后于生产的速度</p><p>2. 消息处理出错碰到异常了</p><p></p><p>在这两个原因中又以第一个最为常见。</p><p></p><p>我们自己的系统里面消费消息的逻辑很重，通常涉及很重的 I/O 操作，所以消费速度的问题是比较常见的。这一点我相信业界同行们应该也有类似的体会。解决这个问题的方法有很多，比如调参、使用多线程甚至是生产者降速等等。具体用哪种还要结合自身的业务特点来决定。</p><p></p><p>在我们的环境中，我们更倾向于优先调整消费者端的参数，之后才会考虑一些更加复杂的手段。在这个事情上，我也思考过一些有意思的事情。比如我见过很多 Kafka 资料和书籍里面都写：如果消费堆积，需要考虑优化消费处理逻辑，降低消息处理时间；我自己写的书里好像也是这么说的。但是在实际环境中，你会发现优化处理逻辑这件事情其实并不容易。后端或下游的消费逻辑哪里是那么容易就被简化的，不给你增加逻辑就谢天谢地了。这是典型的书本理论与现实之间的差异。</p><p></p><p>我们继续来说 Kafka 运维的问题。我必须承认目前的状况已经比前几年好太多太多了。国内大厂自研并开源出来的运维框架有很多，不管是帮助做日常集群管理，集群监控的还是协助做扩缩容的。总体上而言，运维成本是被极大地降低了。</p><p></p><p>不过这依然是一个令很多中小型公司运维工程师们头疼的问题。比如如何做集群节点的维护，怎么能不宕机升级版本，如何实现跨机房之间的数据同步等等。实际上我们公司就碰到了以上提到的所有问题。</p><p></p><p>我们是有多个机房，还有云，那么应该如何设计并建设公司级的消息队列服务呢？是部署多套 Kafka 集群还是构建单体型的大一统集群？这些其实在 Kafka 社区并没有清晰明确的最佳实践，我们也只能是摸着石头过河。要知道中小型公司的运维团队不会太多太大，不可能像大厂那样固定“养”几个人就专门研究 Kafka，这在中小型互联网公司是不太可能的，因为成本太高了。</p><p></p><p>实际上在我的团队，如果有人天天研究这些技术，不做业务，我也是持反对意见的。很简单，我“养不起你”。所以这个运维的过程中必然存在着很多磕磕绊绊的事情。就部署集群来说，最终我们公司用的是多套集群加集群间数据同步的方案。不能说是完美无缺，但至少满足了业务的需求。</p><p></p><h5>InfoQ：你对 Kafka 研究的比较深入，你认为 Kafka 相较于其他的消息引擎系统有哪些显著的优势呢？</h5><p></p><p></p><p>胡夕：我对 Kafka 确实还算比较熟悉，但对其他的消息引擎还真是不太熟悉，因此也不敢妄言。在我看来，Kafka 推出的时机非常好，这是它的一个显著优势。它起家于 LinkedIn 公司，骨子里就带有互联网的基因。什么基因呢？大数据量、低延时、分布式等。所有在 Kafka 成名之前的消息引擎框架好像并没有同时展现出这些基因。应该说，Kafka 在其出现之时是将这些优势结合的最好的一个。至于系统级的架构优势或设计优势，我个人倒是觉得每家都各有所长，它们并不是令 Kafka 如今这么受欢迎的最重要因素。</p><p></p><p>来到 2020 年之后，消息队列往云原生架构演进的方向算是更加清晰明朗了。云上的类似于多租户、按量计费、动态扩缩容等特性也越来越成为各家产品的标配。我个人觉得，在这些方面 Kafka 现今反而是有些落后了。不过欣喜的是，社区早就意识到了这一点。为了适配云上多种异质存储，Kafka 提供了分层存储的功能，算是往云原生又迈进了一步。</p><p></p><h5>InfoQ：你认为 Kafka Streams 的出现对于 Kafka 的意义是什么？今天的 Kafka 和 Storm、Spark、Flink 可以说是同等级的实时流处理平台吗？</h5><p></p><p></p><p>胡夕：其实关于这个问题，我还真有一些自己的看法。当初，社区同时推出了 Kafka Connect 和 Kafka Streams 两个组件。从研发配比和宣传力度上，我们可以看到无论是社区，还是商业化公司 Confluent 都重点强调 Kafka Streams，对 Kafka Connect 组件并不是很重视。这一点我们可以从社区版就能看出来。社区版的 Kafka Connect 真是有点“惨不忍睹”，仅仅支持一个 File Connector。很多与主流框架集成的 Connector 都放入了商业版。</p><p></p><p>当然，这里面的商业化考量我们不去评判。我只想说，相比于当时普天遍地的 Kafka Streams 的宣传，Kafka Connect 明显要弱势得多。我相信即使到现在，听说过 Kafka Connect 的人应该也不是很多，这会导致一个什么问题呢？</p><p></p><p>Kafka 作为一个消息队列，它承载的是数据上下游的流转。从功能角度上看，它的场景很单一，无法像 Hadoop 那样自成一个生态。如果要对外开疆拓土，数据计算和连接算是一个很好的破局之路。但若要计算，必先连接。靠什么呢？靠的就是 Kafka Connect。</p><p></p><p>从战略的角度，我倒是觉得应该首先重点开发和建设 Kafka Connect，统一上下游框架的数据接入与流出，特别是应该在社区版推出开发难度小且易上手的 Connector 框架。只把这些 Connector 放入商业版而忽略广大的社区用户未免有些短视。</p><p></p><p>现实的情况是，由于投入重点在 Kafka Streams，所以其一经推出便迅速引起波澜，激起了人们对于它和当时主流计算框架的比较，诸如 Flink VS Kafka Streams 这样的文章比比皆是。几年之后，人们发现 Kafka Streams 的处境有些尴尬，随着 Flink 渐渐一统江湖，Kafka Streams 的使用者终是小众，没有掀起太大的浪花出来。</p><p></p><p>我个人认为，从技术实力、系统架构方面看，Kafka Streams 相较于 Flink 并没有太大的劣势，甚至有些方面还有胜出，毕竟它与 Kafka 是天然集成在一起的。除此之外，Kafka Streams 的核心开发者之一 Matthias J. Sax 同时也是 Flink、Kafka Streams 和 Storm 的 PMC Committer。你说有这么一个猛人在团队里面写代码，Kafka Streams 的技术能差吗？可为什么好像还是不如 Flink 呢？我依然觉得这是一个战略上的错误，即轻视了 Kafka Connect 的发展。大家如果有兴趣可以自行翻开 Flink 的源代码，找到里面的 flink-connectors 目录，里面 Connector 的丰富程度不用我说，大家自己体会下就能知道了。</p><p></p><p>不过俗话说失之东隅，收之桑榆，Kafka Streams 虽然没有取得巨大成功，但在内部倒成了 Confluent 公司下一代 Steaming SQL 产品的基石。从目前的宣传态势上看，Confluent 公司正在推 ksqlDB 这个东西，它的底层就是用 Kafka Streams 做的。这种实时的流式数据 SQL 查询引擎目前还属于比较新的东西，未来有可能直接用它来构建实时数仓或做实时 ETL 引擎。从这个角度来说，Kafka Streams 也许能在日后的竞争格局中抢得先机。</p><p></p><h5>InfoQ：你认为 Apache Kafka 接下来的版本会有哪些方向的优化？</h5><p></p><p></p><p>胡夕：社区最近移出对 ZooKeeper 的依赖显示了其对简化集群对外部系统依赖性和降低运维成本方面的考虑。这种瘦身我认为未来可能会继续下去，也就是说相比于做加法，我觉得未来可能更多地是做减法，去除一些无用的或者有助于减轻系统开销的功能组件。同时，我认为社区会继续往云原生方向演进：动态扩缩容、按量计费、多租户等这些标配的功能陆续还是需要相应的功能组件来支撑，目前来说，至少对于社区版的 Kafka，做到这些很难。也许只会有那些有能力的大厂自己来定制化开发，提供各自云上的 Kafka 服务了。</p><p></p><p>另外，在国内，由于很多传统行业有着强烈的数字化转型需求，需要重新整理、集中和处理企业中海量的历史业务数据，因此必然存在着千奇百怪的数据连接和数据 ETL 场景。实际上正是由于社区版在这方面的欠缺，这里面存在着巨大的商业机会。未来在国内可能会诞生多个以咨询公司或解决方案实施公司为主体的企业来帮助传统企业、科研院所完成数字化转型。我期待社区也能在这个方面有所响应，特别是国内的代码贡献者也能参与其中。毕竟我们每个人都要紧跟国家的时代发展需要来顺势而为。</p><p></p><h5>InfoQ：你对阅读源码有着长期的实践和深入的理解，可以分享一下阅读源码能带来哪些收获吗？如何才能高效地阅读源码呢？</h5><p></p><p></p><p>胡夕：我不知道大家的感受如何，就我个人而言，读源码是个特别痛苦的过程。读着读着就想要放弃，这应该是最自然朴素的感受了。第一次读源码我甚至都不知道这些代码写出来是做什么的。但是感觉好像也没有特别高效的方法，也许把时间花够了，自然有量变产生质变的效果。</p><p></p><p>至于比较高效的方法，我推荐结合单元测试用例来阅读。在阅读每个部分的源码时，实际跑一下对应的测试用例，加上单步调试能够快速地帮你理解源码是做什么事情的。另外，我也推荐先从服务器端的源码开始读，毕竟弄明白底层的消息以及处理逻辑，会更容易理解客户端的代码。</p><p></p><h5>InfoQ：你是如何看待软件开源的呢？你又是如何参与到社区内的呢？</h5><p></p><p></p><p>胡夕：前些年软件开源还仅仅是有兴趣的技术人员的乐土而已。不过最近几年，我发现软件开源和之后的商业化已经慢慢地变成了一个成熟的商业模式。由于我自己本身在券商公司，因此对这个赛道的玩家也多多少少有所了解。不管是之前上市的 MongoDB，还是最近的 Confluent、GitLab 和 HashiCorp 等，都是依托开源社区抓住用户和开发者，不断迭代产品来满足用户需求。之后再转型商业化，把控好开源的占比实现收入。这似乎越来越被验证是一条可行的路。我曾经听说有投资人笑称，凡是 GitHub 社区 Star 超过 1000 的一律投。足见这两年资本对软件开源是多么地看好。</p><p></p><p>另外，我始终觉得商业的本质还是要盈利。自 2022 年开始，美股的科技股就一直被杀估值。很多在美股上市的开源商业化公司目前还是不赚钱的，也就是市盈率是负的，资本市场会狠狠地碾压这类公司的估值。比如，国外大名鼎鼎的云数仓公司 Snowflake 自去年 11 月起就已经跌去了将近 30% 的市值。</p><p></p><p>因此我觉得未来的软件开源趋势一定是越来越火爆，但商业化的道路可能也不会很顺利，每个 CEO 或社区领导者都要思考对用户的价值需要如何变现以及如何保护自身知识产权不受侵犯，否则像 Log4j2 维护者诉苦自己没工资拿还要被全网 diss 的场景还会再次发生。</p><p></p><h5>InfoQ：最后，作为一名常年在 Kafka 领域深耕的技术人，你想对使用 Kafka 的用户们说些什么呢？什么是学习 Kafka 的最有效路径呢？</h5><p></p><p></p><p>胡夕：面对这个问题我真是没有特别好的答案。套用巴菲特老人家的风格：学习 Kafka 需要记住两条：1. 坚持学习；2. 参考第一条。</p><p></p><p></p><h4>嘉宾简介</h4><p></p><p></p><p>胡夕  Apache Kafka Committer , 老虎证券技术总监</p><p></p><p>著有<a href=\"https://book.douban.com/subject/30221096/\">《Apache Kafka 实战》</a>\"一书，曾任职于 IBM、搜狗和新浪微博等公司，也是极客时间<a href=\"https://time.geekbang.org/column/intro/100029201?tab=catalog\">《Kafka 核心技术与实战》</a>\"和<a href=\"https://time.geekbang.org/column/intro/100050101?tab=catalog\">《Kafka 核心源码解读》</a>\"专栏的作者。胡夕对 Kafka 及其它开源流处理框架与技术有深刻理解，他精通 Kafka 原理，主导过多个十亿级 / 天的消息引擎业务系统的设计与搭建，具有丰富的线上环境定位和诊断调优经验，曾给多家大型公司提供企业级 Kafka 培训。</p>",
    "publish_time": "2022-08-22 17:11:03",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]