[
  {
    "title": "利用已有的数据库构建安全的分布式数据库集群",
    "url": "https://www.infoq.cn/article/R9rwgUwLQGmcsXx7GG2l",
    "summary": "<p></p><h2>背景</h2><p></p><p>数据流量增长到我们在十多年前从未想到的水平，而且没有放缓的迹象。数据流量的指数级增长引领我们进入了大数据时代，数据从四面八方汹涌而出——移动应用程序、社交网络、客户数据库或物联网设备。</p><p>&nbsp;</p><p>大数据的出现意味着对新技术、新挑战和新技能的关注，以跟上数据库新技术的发展步伐。</p><p>&nbsp;</p><p>与此同时，现在我们称之为“传统数据库”的东西正在输给创新的数据库解决方案。作为大数据首选存储解决方案的数据湖，它的出现意味着建立在关系型数据库（传统数据库）之上、只能存储结构化数据的传统数据仓库正陷入挣扎的泥潭。相比之下，数据湖通常建立在Hadoop集群或NoSQL数据库之上。</p><p>&nbsp;</p><p>本文从介绍自互联网成为主流以来出现的挑战开始，然后展示一些想法和解决其中一些问题（特别是数据分布和安全）的实践指南。</p><p>&nbsp;</p><p>因为这两个问题与大数据的不同领域相关，所以你可能会想到很多可用的数据库。为了让事情简单明了，本文只考虑如何用分布式和安全特性来升级传统的数据库，如MySQL、PostgreSQL或SQLServer。这种解决方案将你的数据库集群转换成分片的分布式系统，并加入数据加密和流量管理等有用的特性。这些优势可不是小打小闹，除此之外还有更多——如果你关注成本效益，你会看到升级和迁移数据库集群将为你带来净效益。</p><p></p><h2>大数据带来的数据库挑战</h2><p></p><p>在深入实际的层面之前，我们先来看看大数据的5V特征及其挑战。</p><p>&nbsp;</p><p>容量（Volume）——数据量太大，无法进行有效的管理和使用。多样性（Variety）——数据类型非常广泛，如结构化数据、非结构化数据和混合数据。速度（Velocity）——蓬勃发展的互联网流量导致数据的生成速度不断增长。准确性（Veracity）——数据的准确性决定了高管们对商业决策和前景的信心。价值（Value）——数据积累和分析为企业发现新的潜在市场/产品创造了新的机会，并帮助他们作出更明智的决策。</p><p>&nbsp;</p><p>因为“准确性”和“价值”与数据分析更为相关，所以不是本文的讨论重点。至于容量、多样性和速度，很多行业的企业正在为以下这些问题寻找解决方案。</p><p>&nbsp;</p><p>如何有效存储和管理空前数量的数据？如何按需灵活伸缩数据库实例？在某些情况下，我们从多个数据源收集数据，然后组合成一个结果，那么如何同时管理结构化和非结构化的数据？如何在最小化重构数量的情况下保护在线系统用户的隐私？</p><p>&nbsp;</p><p>这些问题有多种可能的解决方案，例如寻找新的数据库供应商，或者开发中间件或插件。</p><p>&nbsp;</p><p>但是，如果你正在使用或考虑使用开源的传统DBMS，那么你可以参考本文后面的部分，并将其作为一种建议来改进或构建一种以传统DBMS为基础的安全分布式数据库系统。你可以选择PostgreSQL、MySQL或RDS，下面的这些步骤都可以应用到你的系统中。</p><p></p><h2>架构介绍</h2><p></p><p></p><h4>Apache ShardingSphere</h4><p></p><p><a href=\"https://shardingsphere.apache.org/\">Apache ShardingSphere</a>\"是一个开源生态系统，它可以将任意数据库转换成分布式数据库系统，并加入分片、弹性伸缩、加密等特性。</p><p>&nbsp;</p><p>关于这个项目的介绍已经在告诉我们——它可以帮助我们将现有的数据库转换成分布式数据库系统，并通过有用的特性来改进新系统。</p><p>&nbsp;</p><p>这个过程相当简单。为了实现这个效果，你所要做的就是将项目导入到数据库系统中（也就是创建了一个分片数据库系统），然后按需进行伸缩，还可以对数据进行加密。下图是这种架构的概览。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0f/0f21436ca7a224997d0e23e347d7a523.png\" /></p><p></p><p>如上图所示，分布式数据库系统由ShardingSphere（本例为ShardingSphere-Proxy）和各种数据库（MySQL、PostgreSQL、Aurora或其他SQL92数据库）组成，ShardingSphere位于应用程序和数据库之间。</p><p>&nbsp;</p><p>在这个系统中，ShardingSphere作为接收用户请求的计算节点，数据库作为保存数据和进行一些本地计算的存储节点。应用程序将查询发送到ShardingSphere，就像它们将查询发送到DBMS一样。</p><p>&nbsp;</p><p>传统的SQL用于查询数据库。然而，因为在分布式数据库系统中添加了多个新特性（比如自动伸缩、加密、SQL审计），所以我们需要一种类似SQL的语言来操作这些新特性。</p><p>&nbsp;</p><p>为了满足这一需求，并且不给用户造成新的障碍或学习曲线，ShardingSphere使用了分布式SQL （DistSQL）来实现无缝的转换。这意味着你可以登录到ShardingSphere，然后输入SQL和DistSQL来创建分片表、加密表，或者启动伸缩作业。在下面的小节中，我将展示它的魔力和多功能性。</p><p>&nbsp;</p><p>在继续其他内容之前，我们先来进一步分析前面的那张架构图。架构图对包括ShardingSphere在内的部署架构进行了概览，下面将对其进行“放大”，让你更深入地了解它。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/73/737b749318cb49999285012b8781a38b.png\" /></p><p></p><p>&nbsp;</p><p>从图中可以看出，ShardingSphere不仅是分布式数据库系统的计算节点，还提供了很多有用的特性。其中ShardingSphere-Proxy和ShardingSphere-JDBC是两个客户端。</p><p></p><h4>Database Plus</h4><p></p><p>Database Plus是ShardingSphere项目遵循的指导性开发概念。它是分布式数据库系统的一个概念，超越了简单的数据分片。</p><p>&nbsp;</p><p>最初的设想是在现有的碎片化数据库之上建立一个标准化的层和生态系统，提供统一的SQL操作服务，最大限度地减少数据库差异。应用程序可以直接与标准化服务通信，不需要费劲匹配每一个不同的数据库。ShardingSphere利用了传统DBMS和NoSQL数据库（在规划中），并成为最终用户的标准数据库服务器。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/71/71abeb29d1c7448c7ece7c3c41193542.png\" /></p><p></p><p></p><h4>功能插件</h4><p></p><p>Database Plus术语中的“功能插件”是指所有这些特性既可以独立运行，也可以同时运行。</p><p>&nbsp;</p><p>这意味着基于Database Plus的数据库系统是可调节和“可插拔”的，为最终用户简化了组合多种功能插件的复杂性。ShardingSphere目前支持分片、读写分离、数据库网关、数据加密、分布式权限、影子数据库等功能。</p><p></p><h4>客户端</h4><p></p><p>生态系统中包含了两个客户端，可以单独或同时部署。</p><p>&nbsp;</p><p>ShardingSphere-Proxy是透明的数据库代理，也作为数据库服务器。因此，它应该独立部署在服务器上。目前，PostgreSQL和MySQL与ShardingSphere配合得很顺畅。</p><p>&nbsp;</p><p>ShardingSphere-JDBC是一个扩展了Java JDBC层的轻量级Java框架，可以集成到JDBC应用程序中。</p><p>&nbsp;</p><p>我们可以同时部署这两个客户端，ShardingSphere-JDBC作为高性能的驱动程序，ShardingSphere-Proxy作为管理客户端。</p><p>&nbsp;</p><p>利用DBMS创建安全的分布式数据库集群</p><p>&nbsp;</p><p>在了解了架构之后，现在让我们来一步一步地创建分片和安全的Aurora数据库系统（步骤指南在后面）。我们将使用ShardingSphere的分片插件、数据加密插件以及ShardingSphereProxy来构建一个分布式数据库系统，如下图所示。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/62/62c425099fe0351099f7697680976f9a.png\" /></p><p></p><p>完成指南中的步骤后，你将得到的最终解决方案将如下图所示。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/da/daf487a4cb4f7b52422143f6d46fa9e5.png\" /></p><p></p><p>应用程序将ShardingSphere + PostgreSQL实例看成是一个分布式数据库，并像对待PostgreSQL那样对待ShardingSphere。从用户的角度来看只有一个逻辑表t_user。但实际上，这个逻辑表是由四个实际表组成的，从t_user_0到t_user_3，它们位于两个不同的PostgreSQL实例中。</p><p>&nbsp;</p><p>逻辑表t_user有一个tel列，用于存储用户的电话号码。由于电话号码是敏感数据，所以在存储到数据库中时必须进行加密。为此，在实际表中创建了tel_cipher和tel_plain两个列，用于保存相应的密文和明文（可选，这里仅为演示目的）。</p><p>&nbsp;</p><p>生态系统的用户友好性体现在最终用户不需要关心实际表中的列，也不需要关心如何将逻辑列映射到实际列。他们只需使用逻辑列和明文数据构造SQL语句，ShardingSphere会完成数据分片的整个过程，并自动对数据进行加密和解密。</p><p>&nbsp;</p><p>ShardingSphere-Proxy在后台处理这些过程，大大简化了用户的工作，用户只需要处理逻辑表t_user的逻辑列tel。但是，在运行SQL查询之前，用户需要告诉ShardingSphere如何分片和加密数据。</p><p></p><h2>步骤指南</h2><p></p><p>&nbsp;</p><p>下面的演示是在AWS上进行的，将Aurora数据库作为存储节点，运行在EC2上的ShardingSphere作为计算节点。</p><p>&nbsp;</p><p>1. 创建ShardingSphere-Proxy EC2实例</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/18/18e4415c3fbb2cc58e53c2568e5e1284.png\" /></p><p></p><p>&nbsp;</p><p>2. 创建Aurora数据库</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/db/db8299ce69dab9bf4628adfb10750a6d.png\" /></p><p></p><p>&nbsp;</p><p>3. 部署ShardingSphere-Proxy</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0d/0d848662db35fb4107fe17e2aee08bbe.png\" /></p><p></p><p>&nbsp;</p><p>4. 登录ShardingSphere-Proxy</p><p><img src=\"https://static001.geekbang.org/infoq/6b/6b200da6d793fd9fc7621c91df6d0a09.png\" /></p><p></p><p>5. 初始化Aurora数据库</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0a/0a14be4de7e2ba2d2eccc75895a36a98.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/57/57d49a807a06d566ae66ee49db525ef3.png\" /></p><p></p><p>6. 通过SQL和分布式SQL使用加密规则和分片规则初始化ShardingSphere</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/09/0987a3f0e13eabd73aaa8d0c482a3688.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/15/153fb41daaa1d12ab8e110b419470c2c.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/60/605330c21e54b3af642d03e53738692b.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/30/30fdd2c7d4b8b452ff2bedb41e37fc00.png\" /></p><p></p><p>7. 在ShardingSphere-Proxy上插入测试数据行</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/9c/9c9f62b8861115eb55dd58b11abbbbae.png\" /></p><p></p><p>8. 运行查询SQL</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/8b/8bd73a687e6d2f98cdb7661782c4c7a1.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/de/de860947c011a56e23fda37d969594d0.png\" /></p><p>&nbsp;</p><p>9. 检查Aurora数据库中的数据</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/dc/dc5bd464c859be2d03caf2444b6cba91.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/95/95d2bef3357047ac8cd0db19446bca2b.png\" /></p><p></p><p></p><h2>总结</h2><p></p><p>这篇文章的重点是介绍如何使用ShardingSphere在Aurora上创建安全的分布式数据库，同时也提供了添加新特性的可能性。</p><p>&nbsp;</p><p>本文提供的指南也可用于将其他各种受支持的数据库作为这种分布式数据库的存储节点。由于开源的强大力量，可能也有许多其他的解决方案可以解决类似的问题，我希望本文的读者能够找到最适合他们的解决方案。</p><p>&nbsp;</p><p>作者简介：</p><p>&nbsp;</p><p>Trista Pan是SphereEx联合创始人兼CTO、Apache成员和孵化器导师、Apache ShardingSphere PMC、AWS Data Hero、腾讯云TVP。曾负责京东数科智能数据库平台的设计与开发。</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/secure-distributed-database-cluster/\">Creating a Secure Distributed Database Cluster Leveraging Your Existing Database Management System</a>\"</p>",
    "publish_time": "2022-08-28 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "马斯克的官司导致推特大量员工离职；上海数据交易所全国率先设立数字资产板块；公安部第一研究所将基于“长安链”建立分布式数字身份架构 ｜ 区块链周报",
    "url": "https://www.infoq.cn/article/740UuRsSXzlkc0pi9RNQ",
    "summary": "<p></p><p></p><h2>企业动态</h2><p></p><p></p><h4>上海数据交易所发布数字资产“回力DESIGN-元年”</h4><p></p><p>8月24日消息，上海数据交易所在全国率先设立数字资产板块，重构数字资产体系，打造数字资产与实体经济深度融合的新样板。同日，上海数据交易所联合华谊集团旗下国有老字号“回力”和数字资产首批发行平台“哔哩哔哩”首发数字资产“回力DESIGN-元年”。</p><p></p><p>据介绍，“回力DESIGN元年”数字资产于8月25日12点在哔哩哔哩平台正式发售，整体采取免费发行形式，一个系列6款形象共计2022份，其中210位用户可获得回力限量鞋款实体首发的购买资格。本次联合发布中，回力作为数字资产创作者和发行方，哔哩哔哩作为发行平台，上海数据交易所作为板块组织方负责数字资产板块的制度建设、资产登记、信息公告、保障发行等工作。</p><p></p><p>上海数交所对于数字资产作了“四不五可六类”的定义。“四不”即底层商品为金融资产的不上市、无明确经济价值的不上市、数字资产产权不清晰的不上市、不符合国家法律法规的不上市；“五可”即可穿透、可确权、可定价、可流通、可溯源；“六类”即现阶段可交易数字资产主要包括文博衍生、数字文创、消费场景、品牌营销、产业应用、数据知识产权等六种类型。</p><p></p><h4>推特证实与马斯克的官司导致大量员工离职：离职率为18.3%</h4><p></p><p>08月25日，推特表示，由于公司正面临一系列挑战，包括与特斯拉CEO埃隆·马斯克的诉讼官司，以及“吹哨人”Peiter Zatko的爆料，越来越多的员工开始离职。当地时间周三，推特高管在一次公司全员会议上告诉员工，Twitter目前的员工流失率为18.3%。相比之下，在马斯克提出以440亿美元收购推特之前，推特的员工流失率徘徊在14%至16%之间，这与竞争对手的员工流失率基本一致。</p><p></p><p>据悉，Twitter前安全负责人Peiter Zatko已向美国联邦贸易委员会、美国证券交易委员会和美国司法部提交了举报人投诉并在长达84页的投诉文件中提到这家社交媒体巨头在安全实践中存在重大漏洞，而且在安全、隐私和内容审核方面存在“极端、严重的缺陷”。</p><p></p><p>不仅如此，Peiter Zatko特别指出Twitter和伊隆·马斯克的收购交易中“谎报机器人问题”，Twitter声称其平台只有5%的账户是“机器人”是不对的。Peiter Zatko表示：“马斯克是对的，Twitter高管几乎没有个人动机来准确检测或衡量垃圾邮件机器人的问题程度。”</p><p></p><h4>扎克伯格：Meta 将于 10 月推出新款 VR 头显</h4><p></p><p>Facebook 母公司 Meta 首席执行官马克·扎克伯格透露，Meta 将在 10 月份推出新款虚拟现实头显。以往，Meta 会于 10 月份举行 Connect VR 大会。尽管扎克伯格没有提到这款虚拟现实头显的名字，但他所说的很可能是目前代号为 Project Cambria 的产品。这款头显的价格至为 800 美元，远高于当前 Meta 的旗舰产品 Quest 2，后者不同型号的价格为 399 至 499 美元不等。</p><p></p><h4>英伟达的加密挖矿芯片收入继续下降</h4><p></p><p>芯片巨头英伟达（Nvidia）表示，截至7月31日的2023财年第二季度，其加密货币挖矿处理器（CMP）的销售额“很少”，低于一年前的2.66亿美元。英伟达曾用同样的术语来描述上一季度的CMP销售额，它当时指出CMP拖累其“OEM和其他”业务部门的收入。</p><p></p><p>英伟达首席财务官称，“OEM和其他”业务部门第二季度的整体收入比去年同期下降66%，至1.4亿美元，主要是受笔记本OEM销售下降的影响。“OEM和其他”业务部门只贡献了第二季度总收入的约2%。</p><p></p><p>根据FactSet的数据，Nvidia第二季度总收入为67亿美元，符合市场平均预期。8月初，Nvidia称其预计收入为67亿美元，远低于之前81亿美元的预期，主要原因是游戏收入减少。</p><p></p><h4>腾讯申请可发布寻人启事的区块链专利</h4><p></p><p>8 月 22 日，据天眼查 App 显示，腾讯科技（深圳）有限公司申请的“寻人启事发布方法、装置、设备和计算机可读存储介质”专利获授权。摘要显示，本申请所述方法包括：当获取到用户终端的寻人启事发布请求时，生成寻人启事；广播寻人启事至区块链网络，以针对寻人启事进行共识验证；当在区块链网络中对所述寻人启事达成共识后，将寻人启事所对应的共识区块储存至区块链中，以使区块链节点对所述寻人启事进行发布。本申请提供的方案可以提高寻人启事的发布效率。</p><p></p><h2>产业动向</h2><p></p><p></p><h4>公安部第一研究所将基于“长安链”建立分布式数字身份架构</h4><p></p><p>近日，由公安部第一研究所牵头的“基于法定证件的数字身份区块链技术研究与应用”正式启动并进入实施阶段，该项目将基于“长安链”建立分布式数字身份架构，物联网设备、公共服务、电子支付等典型场景将率先试点应用。</p><p></p><p>物联网领域，市民以可验证数字身份凭证代替原有的入园卡、门禁卡等通行证；公共服务领域，市民使用自己的数字身份凭证代替原有的各种证明，可实现数十项政务服务“一证通办”；电子支付方面，支持市民利用分布式数字身份关联多个银行账户，实现“一次认证，多方办理”。</p><p></p><h4>「北京城市副中心元宇宙创新发展行动计划（2022-2024年）」发布</h4><p></p><p>北京市通州区近日与市科委、中关村管委会，市经信局联合印发了《北京城市副中心元宇宙创新发展行动计划（2022-2024年）》力争通过3年的努力，将城市副中心打造成为以文旅内容为特色的元宇宙应用示范区，实现元宇宙技术创新应用能力明显提升，培育、引进100家以上元宇宙生态链企业，落地建成30项以上“元宇宙+”典型应用场景项目，推动制定一批元宇宙相关标准，“1+N”产业空间体系初步形成，基本形成示范带动、技术引领、文旅特色、企业集聚的元宇宙产业生态。</p><p></p><h4>Cardano创始人声援被捕Tornado Cash开发者：编写代码只是表达方式，就像写书</h4><p></p><p>Cardano 创始人 Charles Hoskinson 发声以支持最近在荷兰被捕的 Tornado Cash 开发人员。他表示，开发人员可以使用开源代码来编写代码，但却无法控制人们在代码发布后如何使用代码。在大多数情况下，代码就只是文字，并不是由编写者告诉人们去做某件事。</p><p></p><p>Charles Hoskinson 补充道，作为开发人员，当我们编写代码时，它只是一种表达方式。只要我们不参与代码的运行和使用，我们就只是在编写它；这就像是写一本书。Tornado Cash 开发者只是编写了在技术上可以以某种方式使用的代码。</p>",
    "publish_time": "2022-08-28 17:38:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "利用零信任原则保障Kubernetes环境访问安全",
    "url": "https://www.infoq.cn/article/ZjHZmjMXuUwSDubtjEa0",
    "summary": "<p></p><p></p><blockquote>随着Kubernetes 集群和容器化应用程序越来越多，组织将日益暴露在运营一两个集群时并不明显的安全风险之下。因此，平台团队需要为整个Kubernetes基础设施的集群和应用实现集中式的企业级安全与控制。</blockquote><p></p><p></p><p>本文最初发布于The New Stack博客。</p><p></p><p>现代IT环境变得越来越动态。举例来说，<a href=\"https://www.infoq.cn/article/jtKJpfeGvX1hMpC83KvF\">Kubernetes</a>\"拓展了许多组织的可能性边界。开源技术在容器化应用程序自动部署、扩展性和管理方面有诸多好处。特别地，IT团队可以利用其强大的功能、有效性和灵活性快速开发现代应用程序并大规模交付。</p><p></p><p>然而，为Kubernetes 环境安全强化实践提供保障的流程面临着越来越大的挑战。随着分布在本地数据中心、多公有云提供商和边缘位置的Kubernetes开发和生产集群数量越来越多，这种相对较新的动态操作模型给访问控制带来了很大的复杂性。</p><p></p><p>由于大部分团队都有多个集群在多个位置运行——通常使用不同的发行版，有不同的管理界面——企业IT部门需要考虑到，开发、运营、承包商和合作伙伴团队需要不同级别的访问权限。</p><p></p><p>考虑到Kubernetes的分布式和可扩展特性，IT部门必须尽一切可能确保访问安全性，避免<a href=\"https://techgenix.com/5-kubernetes-security-incidents/?utm_source=thenewstack&amp;utm_medium=website&amp;utm_campaign=platform\">正在发生的错误</a>\"。下面我们将介绍如何应用Kubernetes零信任原则来保护整个环境，为容器提供零信任安全。</p><p></p><h3>Kubernetes集群零信任访问</h3><p></p><p>零信任是一个安全模型，它会自动假设所有在网络中或网络间进行操作的人、系统和服务都是不可信任的。零信任正成为预防恶意攻击的最佳技术。以身份验证、授权和加密技术为基础，零信任的目的是持续验证安全配置和态势，确保整个环境值得信任。</p><p></p><p>以下是对Kubernetes 基本工作原理的一个简单说明：</p><p></p><p>对于每个集群，Kubernetes 控制平面的核心是Kubernetes API 服务器。可以调用API来查询和操作所有Kubernetes 对象的状态。Kubernetes对象包括命名空间、pod、配置信息等。API访问控制是管理Kubernetes 访问、实现零信任的关键功能。保障Kubernetes 集群访问安全的第一步是通过传输层安全（TLS）来保护流入/流出API服务器的流量。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/bd/bd777a11af8d3dead81aee51e845dedb.png\" /></p><p></p><p>图片来源：kubernetes.io</p><p></p><p>API服务器实现零信任的最佳实践：</p><p></p><p>启用所有地方的TLS。使用API 服务器的私有端点。API服务器使用第三方身份验证。关闭API服务器的防火墙入站规则，确保它是隐形的，不能直接从Internet访问。在确保传输层安全后，Kubernetes 还要包含必要的钩子，用于实现零信任，并控制对每个Kubernetes集群的API服务器的访问。这些钩子代表了Kubernetes坚固安全态势的4个关键领域：身份验证授权准入控制日志和审计</p><p></p><h3>Kubernetes身份验证</h3><p></p><p>在零信任原则下，所有与Kubernetes 集群关联的用户账号和服务账号在执行API调用之前都要进行身份验证。有许多安全模块和插件可以保证Kubernetes 平台在团队首选的身份验证系统下有效运行：</p><p></p><p>HTTP Basic Auth身份验证代理（为支持LDAP、SAML、Kerberos等）客户端证书无记名令牌（Bearer tokens）OpenID Connect令牌Webhook Token身份验证常见的身份验证最佳实践至少会启用两种身份验证方法（多因素身份验证或MFA）并定期轮换客户端证书。</p><p></p><h3>Kubernetes授权</h3><p></p><p>任何用户账号或服务账号一旦通过身份验证就可以访问Kubernetes 集群并执行任何可能的操作，这种情况一定要减少。零信任的思想是，只有当通过身份验证的用户有必要的权限完成所请求的动作时，才会对请求授权。对于发起的每一个请求，该模型都要求指明用户名、动作和受影响的Kubernetes集群对象。</p><p></p><p>Kubernetes支持的授权方法有很多种，包括：</p><p></p><p>基于属性的访问控制（ABAC）根据用户、环境和资源属性的组合动态进行访问授权。基于角色的访问控制（RBAC）根据用户在组织中的角色（如开发人员、管理员、安全员等）进行访问授权。组织最常用的方式是RBAC，因为它很实用，管控也比较简单，而且提供了大多数情况所需的粒度。在行业中，常见的做法是启用最小权限的RBAC。</p><p></p><p>ABAC 提供了额外的粒度，但也需要额外的时间和资源来定义并做适当的配置。然而，ABAC 方法的问题排查更具挑战性。因此，常见的做法是启用最小权限的RBAC。</p><p></p><h3>Kubernetes准入控制</h3><p></p><p>准入控制器提供了一种实现业务逻辑的方法，用于改进Kubernetes的零信任方法。它的用途是使系统可以自动响应创建、修改、删除或连接Kubernetes 对象的请求。有时候，可能需要启用多个准入控制器才能满足组织的需求，如果一个特定的请求被其中任何一个拒绝，则系统也会自动拒绝。</p><p></p><p>目前，Kubernetes内置的各种准入控制器为团队执行策略及实现各种操作提供了大量的选项。动态控制器可以快速修改请求，以满足既定规则集的要求。例如，ResourceQuota准入控制器可以监视入站请求，确保它们不会违反ResourceQuota对象中列出的命名空间约束。要了解更多信息，可查阅文档“<a href=\"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/?utm_source=thenewstack&amp;utm_medium=website&amp;utm_campaign=platform\">准入控制器的用法</a>\"”。</p><p></p><h3>Kubernetes日志和审计</h3><p></p><p>审计功能对于Kubernetes安全态势至关重要，可以提供集群内已执行操作的跟踪记录。这些功能可以跟踪任何用户、应用程序以及控制平面本身的任何操作。</p><p></p><p>审计等级有4种类型：</p><p></p><p>None —— 不记录这个事件Metadata —— 记录请求元数据Request —— 记录事件元数据和请求RequestResponse —— 记录事件元数据、请求和响应除了指定审计等级，团队还可以控制被审计事件的存储位置。日志后端会将事件写入集群的本地文件系统，然后由Webhook后端将审计事件发送到一个外部日志系统。</p><p></p><h3>扩展零信任架构</h3><p></p><p>虽然上面介绍的方法和实践可以提供创建零信任环境的能力，但当要管理的Kubernetes 集群很多时，恰当地配置和调整所有这些元素将变得更具挑战性。当涉及多工作负载和Kubernetes发行版时，情况会变得尤其复杂。这不是一项新挑战，是如今许多公司都面临的问题。</p><p></p><p>例如，让我们考虑这样一个情况。公司管理着100个Kubernetes集群——从开发到QA，再到过渡，然后生产——而且，这些集群要在地理上靠近其全球客户群，以便他们的应用程序可以处理实时的视频和音频数据流。</p><p></p><p>要确保Kubernetes 集群用户访问安全，公司需要解决以下三个问题：</p><p></p><p>假如该公司有几百名开发人员和几十名IT运维人员，每个集群添加或删除用户都需要手动完成，那么这项艰苦的工作所解决的问题会比所导致的问题还多。如果发生意外事件，则修复时间至关重要。如果访问方法要耗掉问题排查人员几分钟的时间才允许他登录到受影响的集群，那么问题可能会加重。由于日志分散在100个集群里，所以不大可能提供审计和合规性报告的全局视图。</p><p></p><h3>平台团队注意事项</h3><p></p><p>在企业平台团队的众多目标中，其中一个是使全球的分布式IT团队能够集中管理用户对其所有集群的访问。目的是，既有效地保护和管理对Kubernetes基础设施的访问，又大幅简化审计日志和合规性报告。</p><p></p><p>平台团队应考虑实现Kubernetes零信任访问，确保之前介绍的最佳实践得以应用和执行，从而保证整个Kubernetes 环境的安全。避免手动在每个集群上应用最佳实践，那样可以大幅减低IT组织在大规模操作Kubernetes 时的风险。</p><p></p><p>平台团队在设计Kubernetes零信任访问时应考虑以下三个方面的收益：</p><p></p><p>使RBAC超级灵活：如果一名团队成员的角色变了，那么访问权限应该自动更新，这样，任何人的权限都不会超出或少于他的角色。使访问快速简单：通过安全单点登录让授权用户可以无缝访问，消除访问任何集群的延迟。即时场景凭证：授权用户的服务账号应该在用户访问时在远程集群上即时创建，并在用户登出后自动删除，从而避免出现证书过期的情况。随着Kubernetes 集群和容器化应用程序越来越多，组织将日益暴露在运营一两个集群时并不明显的安全风险之下。因此，平台团队需要为整个Kubernetes基础设施的集群和应用实现集中式的企业级安全与控制。</p><p></p><p>原文链接：</p><p><a href=\"https://thenewstack.io/securing-access-to-kubernetes-environments-with-zero-trust/\">Securing Access to Kubernetes Environments with Zero Trust</a>\"</p>",
    "publish_time": "2022-08-28 17:51:31",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]