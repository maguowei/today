[
  {
    "title": "将GPT推到企业级应用，我们趟过哪些坑｜对话惟客数据",
    "url": "https://www.infoq.cn/article/w5aYzMhX6z30TQxvSZXG",
    "summary": "<p></p><p>采访嘉宾 ｜ 李翔</p><p>编辑 ｜ Tina</p><p></p><p>自去年年底 ChatGPT 掀起一轮 AIGC 热潮以来，国内外科技企业扎堆发布大模型，大佬也纷纷为自家大模型站台，甚至不惜掀起“口水战”。我们不可否认大模型优化了人类与机器交互方式，是效率的革命，然而作为开发者，我们更关心的是如何让大模型深入落地，在更多场景中把大模型的能力真正用起来。</p><p></p><p>现阶段这种实践经验尤为宝贵，但好在如何落地也是<a href=\"https://mp.weixin.qq.com/s?__biz=MzUyOTg5Nzk5MA==&amp;mid=2247498991&amp;idx=1&amp;sn=78fb4cdac29e30c8416dcb6226333692&amp;scene=21#wechat_redirect\">惟客数据</a>\"的关注焦点，自 ChatGPT 出现后，惟客数据就开始了探索，并将之应用到了内部开发人员使用的场景，以及给已有产品赋能的场景中。应用新技术有哪些门道，我们为此采访了惟客数据 AI 算法专家李翔博士，他从模型选择、应用搭建、提示工程、实践效果等多方面进行了解答。</p><p></p><p>InfoQ：在大数据领域，目前 LLM 大语言模型能做哪些工作？LLM 和 GPT 之间的区别是什么？它们跟以前的 NLP 有哪些不同？</p><p></p><p>李翔：LLM 是大规模语言模型的统称，<a href=\"https://mp.weixin.qq.com/s/i0ewF-6lhcvKbLPHIicbBw\">GPT</a>\" 是其中的一种，两个都属于 NLP 领域，可以简单理解成为 NLP 包含 LLM、LLM 包含 GPT，当然 ChatGPT 这种又不是传统的 NLP，已经有一点 AGI 的雏形了，它涌现的能力主要体现在两块儿：一个是理解能力；一个是逻辑推理能力。比如通过理解人通过自然语言描述的需求，结合上下文信息去做合适的逻辑推理，生成人想要的内容，包括文案、代码等。</p><p></p><p>InfoQ：您们是什么时候开始决定将 GPT 这样的大模型融入业务？您们是如何选择模型的，基于什么原因，当前模型跟 ChatGPT 的区别主要是什么？</p><p></p><p>李翔：从去年 ChatGPT 一上线就开始关注了，当时的直接感觉就是“惊艳”，觉得所有的交互方式都可以也值得被重写，无论是提高软件的使用效率，还是降低人对软件产品的学习成本，可以在各种场景大幅度提高效率。</p><p></p><p>之前的大模型，无论是 OpenAI 的 GPT3，还是其他大厂的大模型，比如 Google 的 Palm（5400 亿参数），还有国内盘古或者悟道，都达不到 ChatGPT 的理解和推理能力，所以在那个时间点并没有其他的选择。之后有了 Google 的 Bard，百度的文心一言，还有 OpenAI 前团队的 Claude 这些跟随者。另外，还有一条开源的路线，比如基于 Meta 无意“泄露”的 LLaMA，衍生出了一系列的开源平替 Alpaca、BELLE 等。这些都会做为底层模型能力，接入到我们的 WakeMind 平台中来，我们还联合业界领先的千亿参数多模态预训练大模型厂商，通过知识蒸馏和动态量化，压缩出 100 亿参数量的 WakeMind 模型。不同的模型有各自的优劣，需要结合场景去挑选最合适的，比如在数据隐私极其敏感的场景，例如销售和客户的会话数据，就需要私有化部署的模型去提供对应的服务。</p><p></p><p>InfoQ：在这些场景中，该模型存在什么优势？是否存在对准确性和可靠性的担忧？</p><p></p><p>李翔：如上面所说，我们不会局限于某个单独的模型，而是通过 WakeMind 把这些模型都接入管理起来，作为底层的服务，提供给不同的场景和业务去用。</p><p></p><p>通常来说，一个新的技术出现时并不可靠，时灵时不灵，要将这样的技术转化成产品，需要足够的耐心和智慧，克服一个又一个困难，走完从 1 到 N 的漫长路程。</p><p></p><p>准确性决定了其服务的可靠性，和模型打交道也是一种学问，所以才会有 prompt engineer 这个说法，好的 prompt 可以回答的明显很准确，除此之外，还有其他的方式，比如大模型就有一个重要的参数“温度”，可以通过设置这个值去限定模型回答问题的发散程度，再比如 langChain 里的 prompt 模板里也明确了“必须基于给定的上下文去做理解和推理”，有很多的方法可以用来大幅度降低其回答跑偏的概率，这些都需要尝试，用实际落地的经验将这个准确率提高，为了把prompt和langChain管理起来，我们打造了WakeMind，去把这些经验沉淀到我们的母舰平台上去。</p><p></p><p>InfoQ：您们是如何在工作环境中使用大模型的？在落地过程中，您们遇到的最大挑战是什么？</p><p></p><p>李翔：我们的应用分两个场景，一个是内部开发人员使用的场景，一个是给已有产品赋能的场景。最大的挑战就是，每次碰到一个新的场景，都需要不同的人去把模型的接入和 prompt 的调试的过程趟一遍，大量的重复劳动以及经验没法传承的浪费，所以我们就想把这些重复性的过程通过一个平台管理起来。基于 WakeMind 平台去使用，针对某个具体的应用场景，会建立一个新的项目进行管理，并在这个项目中新增对应的 prompt。新增的同时，可以在平台提供的 playground 中对 prompt 进行调试后保存。如果上下文的长度超过了模型对 token 数量的限制，就通过新增 langChain 的方式对提供的超长材料进行 embedding 映射，并建立对应向量检索的预处理。最后通过接口发布的方式把这个场景的服务开放出来，给到不同场景的人去用。</p><p></p><p>InfoQ：用于数据分析和商业智能的 AIGC，针对不同场景是否需要不同训练数据（以及使用数据进行模型微调的步骤）？怎么保证效果更好？</p><p></p><p>李翔：有些场景是需要结合具体情况去做微调的，但不是所有的场景都需要，因为像 ChatGPT 这类大模型，最强的就是其通用的理解和推理能力，对于垂类场景的问题，可以通过 langChain 的方式把相关的上下文内容和问题一起包装成一个合适的 prompt，就已经可以达到一个不错的效果，解决很多场景的问题了。但对于有些场景来说，如果对准确率有更高的要求，那就需要结合数据进行进一步的微调，但这个对微调的要求很高，因为让大模型收敛是一件非常有难度的事情，如果过程没有控制好，甚至会起到不增反降的效果。</p><p></p><p>InfoQ：该模型在客户支持、潜在客户生成和数据分析等方面的效果如何？</p><p></p><p>李翔：客户支持方面，直接的应用就是智能客服，可以大幅度降低生成智能客服的成本，不需要像传统方式对垂直场景进行训练建模调优的流程。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/45/45bf2d2c15c983ae6738485335f18be2.gif\" /></p><p></p><p>潜在客户分析和运营方面，也可以提高运营对人群的理解，从而提高运营投放的效率以及效果。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/37/379d6c9251e25467477858b68ab18827.gif\" /></p><p></p><p>数据分析的价值点主要在两个，一个是可以提供一些新的分析角度和建议，毕竟人的想象力是有限的；另外一个就是提高分析过程的效率，比如通过 textToSQL 以及 SQL 优化等方式。</p><p></p><p>InfoQ：是否可以估算下使用 “GPT”模型的相关成本？对比成本，您们如何看待它的价值？</p><p></p><p>李翔：ChatGPT 刚出来时，还是比较贵的，但今年 2 月份通过他们的优化已经大幅度降低了使用成本，而且按 token 数量进行收费的方式也是比较合理的，这个价格是公开的。从目前各个场景对 token 数量的消耗来看，这个成本完全是可以商用的。另外，最近还有一些新的技术比如 GPTCache，通过重复使用的方式去降低这个消耗。</p><p></p><p>InfoQ：使用“GPT”模型能写出比数据分析师更好的 SQL 吗？</p><p></p><p>李翔：使用大模型能够生成高质量的 SQL 查询语句，但是否比分析师的 SQL 更好，这取决于具体情况。</p><p></p><p>大模型生成的 SQL 查询语句通常是准确的、高效的，并且可以处理大量的数据，因为大模型已经学习了大规模的数据，并从中发现了一些数据之间的关系和特征。而人类分析师则需要花费更多的时间和精力在 SQL 查询语句的编写上，同时也需要具备一定的 SQL 编程技能和经验；大模型也可能存在一些误差和偏差，需要进行监督和调整才能达到最佳的效果。而人类分析师则具有更好的判断力和经验，能够处理一些特殊情况和异常情况，并且能够从数据中发现一些潜在的规律和趋势；大模型在理解模糊或不清晰的需求方面可能存在困难。人类数据分析师可以通过与其他人沟通来澄清需求。</p><p></p><p>在实际应用中，我们可以结合二者的优势，发挥它们的作用，来实现更高效、更准确的数据分析。</p><p></p><p>InfoQ：您认为会对哪些岗位造成影响？AIGC 会让数据分析师失业吗？为什么？</p><p></p><p>李翔：从现在的应用效果来看，代码编写者、包括 ETL 这类型的工程师，也包括数据分析师，都可以通过大模型提高自己的工作效率，这些是已经可见的现象。而且随着使用的熟练度以及大模型本身的进化，这个效率会提高的越来越多，如果一个人就可以做以前要十个人才能做的事情，同时市场上又没有出现更多的需求，那之后大概率市场上对这些岗位的需求会逐渐下降。</p><p></p><p>InfoQ：有人认为 AIGC 对数据库 / 大数据产品的改进可能只占其所有功能 / 亮点的 1%，还有剩下的很多考量因素对于客户来说更加关键，您怎么看？</p><p></p><p>李翔：保持中立。像上面说的，大模型改变的是和产品的交互方式，提高了使用软件的效率。同时我们一直举例说现在是“iPhone 时刻”，iPhone 对手机操作体验的改变就是质变，其他产品会不会是质变呢？举个例子，假设所有的业务人员，都可以直接通过问询的方式和大数据产品进行直接沟通，通过简单交互就可以快速获得自己想看的数据，同时还能提供很多基于数据的推理和建议，让人对自己的业务有更深层次的、不同的理解，那会不会让业务做得更好呢？这种是不是也算一种质变呢？需要让时间来回答和证明。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f0/f0ed617810f18d77daf2f8ef30f8c386.gif\" /></p><p></p><p>InfoQ：在辅助写代码方面，目前大家有两种看法，一个是认为写出来的不好用，另一个是觉得效果很好，那在您们内部使用过程中，是个什么情况？</p><p></p><p>李翔：在我们使用过程中，发现大模型非常擅长处理单个具体的场景，简单说就是不需要或没有太多的上下文信息，这种场景都能通过约束好 prompt 来完整地生成出来。但如果编码过程中包含了很长的上下文，比如有对负责需求的理解，以及和其他部门的沟通和协同，模块之间有很强的依赖关系之类的场景，从现在的体验来看，就处理的不是很好。</p><p></p><p>我们使用的核心逻辑是把需求文档转换成架构设计图，可视化的架构设计图转换成为 DSL，再通过 DSL 转换成为模板代码，开发人员在编码过程中通过大模型的辅助嵌入到已有的过程中：比如在开发过程中，做规则类代码生成、单元测试代码生成、开发代码优化、代码解释自动生成文档等，使编码效率与编码质量都得到了提升。</p><p></p><p>InfoQ：提示工程是否非常重要？您们积累了哪些经验或心得？</p><p></p><p>李翔：提示工程是非常重要的，prompt 描述的是否详细和贴切，决定了生成结果的质量。</p><p></p><p>在使用提示工程之前，应该了解大模型的限制和能力，以便于更好地指导大模型生成所需的结果；还可以尝试不同的提示和参数组合，从而获得更好的结果。例如，可以尝试不同的主题、关键字或参数来调整生成的文本；除此之外，还要学习和不同的模型打交道的方式，虽然各家大模型都有理解和逻辑推理的能力，但是由于训练数据和方式的不同，涌现的能力也会有较大差别，所以打交道的方式也会有很大的不同，需要摸索合适的方式，我们通过 WakeMind 的 prompt 管理平台，把这些经验都沉淀到了平台中，可见、可管理、可分享。</p><p></p><p>InfoQ：贵公司在辅助软件开发的方面还有哪些应用？效果如何？</p><p></p><p>李翔：在公司内部已发起自我生产力革命，从设计师、产品到程序员，全面运用大模型的工具，初步运用已实现人效达到 20% 的提升。更准确地讲，是开发过程的人效提升了 20%，也就是说，一个人有 20% 代码量是机器帮他完成的。在辅助软件开发方面，基于和大模型的结合提供了可视化的架构设计：包括构建数据模型，构建 SQL，构建领域模型图，构建流程图，识别并补充统一语言，通过需求文档总结需求并输出初步的架构设计等。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/75/75c9030f71c35d66a4ebc78e7cdf0c60.gif\" /></p><p></p><p>InfoQ：从行业发展角度来看，您认为“GPT”和生成式人工智能会催生出一波新的人工智能公司吗？</p><p></p><p>李翔：会，但不会很多。</p><p></p><p>对于前几次工业革命的技术爆发来说，不会让产业发生本质的变化，新的技术是用来做产业升级的，当前围绕各个产业的升级已经有了足够多的公司，新的技术会成为这些公司新的利器，做事情的细节会产生一些变化，但是做产业升级的大方向不会发生太多的变化，而且也不会再有很多新兴的公司去做应用和产业升级。从目前来看，新的公司更多是偏向底层做大模型的研发，这个门槛很高，所以不会很多。</p><p></p><p>采访嘉宾简介：</p><p></p><p>李翔，惟客数据 AI 算法专家。中山大学人工智能方向博士，珠海市产业青年优秀人才，师从中山大学印鉴教授，在人工智能领域有 11 年的研究与落地经验；熟悉资讯流推荐、画像预测标签、NLP、CV、语音识别等多个 AI 方向，并将对应落地成果发表在国际一流期刊以及申请多项发明技术专利。</p><p></p><p>今日好文推荐</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651167008&amp;idx=1&amp;sn=8be3659a384e9577731a53e3fa5e527b&amp;chksm=bdb861738acfe8651a9687c467c237e9f9aacc28e073986359e9dece5e4710a3ee9ec85a7ca9&amp;scene=21#wechat_redirect\">ChatGPT写21个程序，16个有漏洞：离取代程序员还远着呢！</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651166864&amp;idx=1&amp;sn=17995df98d2184e3d94ebebb348692fa&amp;chksm=bdb860c38acfe9d5b0f17d48a51c98afa0ff68e3be6e0639321a622bf9ab84b9c97c6d5a2887&amp;scene=21#wechat_redirect\">华为投入数千人实现自主可控ERP；SpaceX星舰爆炸了，马斯克：祝贺！谷歌合并两大人工智能部门，加速力战ChatGPT｜Q资讯</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651166553&amp;idx=1&amp;sn=8763313c90e99ccb8ac1ba521f7418de&amp;chksm=bdb86f0a8acfe61c25d70b1f3352e4e6a8e2407a0f7e156725da665a0e67515a0d0e4ddccb47&amp;scene=21#wechat_redirect\">马斯克将起诉微软，称其使用 Twitter 数据“非法”训练GPT，吃瓜网友：事情变得更有趣了！</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651166462&amp;idx=1&amp;sn=c7b63839eb5988697f9a3bd799554be8&amp;chksm=bdb86ead8acfe7bbb7a667f902a6baa58cb963e72902523d199ab70fc79b7b41d87d6bdafaee&amp;scene=21#wechat_redirect\">谷歌或被抛弃！ChatGPT 引爆手机市场新一轮洗牌：Android 手机销冠三星30亿美元大单欲改投 Bing</a>\"</p><p></p><p></p><p></p>",
    "publish_time": "2023-04-28 08:55:53",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "平台工程和ChatGPT会让运维们失业吗？",
    "url": "https://www.infoq.cn/article/GSaj2JqRiJ9el4NERIcA",
    "summary": "<p>嘉宾  |  李倩 &amp; 杨振涛&nbsp;&nbsp;</p><p>编辑 ｜ Tina</p><p></p><p>如今，在 Kubernetes 上构建应用程序的开发人员，不仅要写代码还要负责交付和运维等。而 CNCF 云原生的 Landscape 已经有 1000+ 张卡片，覆盖应用定义与开发、编排与管理、运行时、配置、平台、可观测性与分析等，开发人员“认知负担”越来越重，所以企业需要从 2023 年开始更关注开发者体验，去聚焦开发者平台的相关建设，提供好用的工具集合或平台工程。</p><p></p><p>于是，InfoQ 发起了一场《极客有约》特别栏目《云原生趋势下的平台工程》。在 4 月 3 日的节目中，我们邀请了 vivo 互联网研发总监杨振涛和 KodeRover 创始人兼 CEO 李倩一起探讨“平台工程”现状和未来。以下为本次直播的精华内容，经编辑：</p><p></p><p>直播讨论的要点：</p><p></p><p>1. 企业发展与工程师生存的矛盾</p><p>2. 企业大力投入开发者体验的意义</p><p>3. 提升开发者体验的典型工具和产品</p><p>4. 从自动化到 DevOps 实践，到 Xops 泛化</p><p>5. 平台工程的现实商业意义预测</p><p>6. 平台工程是否是造轮子，昙花一现？</p><p>7. 以 ChatGPT 为代表的 AI 技术是否会替代工程师？</p><p></p><p></p><h2>企业发展与工程师现状是否存在矛盾？</h2><p></p><p></p><p>观点一：软件工程发展现状与企业现状存在严重的不一致。双方的矛盾和痛点非常的明确、明显且痛苦，是企业当下迫切需要面对和解决的问题。</p><p></p><p>观点二：企业与开发者体感不太好的方面主要集中在研发人员的工作压力和企业对软件开发的理解不足，这也是平台工程的发展背景。</p><p></p><p>杨振涛：软件工程已有 50 多年的发展了，您认为行业在工程化方面的现状与企业实际需求之间是否存在不一致或不匹配的情况？对于软件企业，包括开发人员双方，分别存在哪些矛盾或痛点问题？</p><p></p><p>Landy：这是一个很好的话题，虽然软件工程经历了 50 多年的发展，但国内却很少提及。更多集中在软件技术和应用方面，这让工程这个词显得好像并不是那么性感。</p><p></p><p>我认为在整个软件工程化方面，与企业现状存在着严重的不一致。在国内，过去一段时间，大多数企业都是在冲业务，处在一个业务为王的时代，如果跑得慢，就会被淘汰。短期内先证明自己的商业模式，中期再去维修技术栈，很多公司基本上很少有工程化，他们的代码可能有十年二十年之久，这导致了历史负担和后期维护困难的问题。在这个过程中，中国也发展了大量的软件形态的公司。</p><p></p><p>软件工程最早的成熟期是在国外，那个时候工程是一件确定性很强的事情，软件工程有很严格的质量管控和大量的管理过程，包括一些 SQA 的流程来保障软件工程的稳定运行，像 IBM、微软等公司都有很多这方面的实践。软件工程化早已经出现，但是随着云技术等变革，其实现方式发生了变化。</p><p></p><p>现今，软件工程化在行业内和企业需求之间存在哪些不一致呢？企业需要更快地发布软件，以满足客户需求并保持竞争力，这给软件开发人员带来了巨大的压力，要求他们在短时间内交付高质量的代码。然而，相当一部分企业试图通过增加人力和研发投入的时间来解决业务问题，这并不一定是最好的解决方案，而且还存在安全问题和人才短缺问题。但从企业的角度来看，他们并不一定意识到这是工程化问题。</p><p></p><p>具体来说，企业和软件开发人员之间存在许多矛盾。例如，工程师的工作强度很大，经常需要加班 996，而且他们也面临着 35 岁的职场焦虑和职业寿命较短的问题。然而，由于企业存在大量的会议和对齐等工作，工程师很难有时间专注于编写代码，可能只有 20% 的时间用于编写代码。这些矛盾和问题使得企业很难理解研发人员在做什么，同时也影响到了软件工程化的实施。事实上，研发人员的工作更多地涉及到问题的定义，例如需要解决什么问题，遇到了哪些问题，以及为什么这些问题难以轻易解决等。作为业内人士，我们了解现实世界需要被抽象化，同时我们也需要面对许多实际问题，需要进行大量的沟通、协作、需求分析和架构问题的解决。因此，从这个矛盾和痛点的角度来看，我认为现在企业的发展和软件开发领域已经到了可以解决且迫切需要解决这些问题的阶段。在我看来，这个矛盾和痛点非常明确、明显、痛苦，对企业和研发人员来说都是如此。</p><p></p><p>综上所述，双方体感不太好的方面主要集中在研发人员的工作压力和企业对软件开发的理解不足。即企业方面，对研发的感知是不确定他们在做什么，经常要证明自己的价值，研发团队在国内的存在感和地位普遍都很低。工程师方面长期负荷过重，参加大量会议，投入较少在编码和技术上，工作体验也较差。</p><p></p><p></p><h2>企业是否应大力投入开发者体验？</h2><p></p><p></p><p>观点：</p><p></p><p>1.未来所有的企业都将以数字驱动存在，提升研发部门的体验是改善数字经济和走向市场的重要方式之一。</p><p></p><p>金句：</p><p></p><p>2.软件公司如果不能让工程师在日常开发工作中感到愉悦，那么这家公司的效率一定不高。</p><p></p><p>杨振涛：好的，现在让我们更深入地探讨企业和开发人员这两个角度。在我们日常的编码交付和上线运行的循环过程中，对于软件企业来说，它在开发体验方面的投入，特别是在软件开发方法、工具和平台方面，有什么价值呢？</p><p></p><p>Landy：关于第一个问题，在软件企业中，流程、方法和工具对于提升开发者体验的价值是非常大的，尽管很多企业并没有真正解决这个问题。我认为一个软件公司如果不能让工程师在日常开发工作中感到愉悦，那么这家公司的效率一定不高。存活下来的公司员工体验都是很好的，对于软件公司来说，工程师是主导力量，他们的体验对于公司的成功与否有着重大的影响。因此，提供无缝的流程、工具和平台，可以帮助工程师更好地创新、提高速度和效率，并最大化公司的价值。这对于任何一家企业客户来说都是一样的，因为未来所有的企业都将以数字驱动，而提升研发部门的体验是改善数字经济和走向市场的重要方式之一。</p><p></p><p>举个例子，比如做汽车企业智能座舱软件的研发，如果软件更新速度慢或更新质量差，就会直接影响终端消费者的体验。那么这里更新的关键点是什么？更新的关键就在于内部的软件工程师能否更快、更高质量地进行软件迭代。这是一个企业内外循环的过程，只有通过内部循环打通，企业才能为外部提供更好的商业价值，例如更快的上市时间、更好的客户服务、更多的创新等。因此，在这方面，企业应该投入更大的力量改善研发体验，那些没有意识到这一点的公司很容易失败，因为他们无法用技术武器武装自己。</p><p></p><p></p><h2>有哪些典型工具或产品正在提升开发者体验？</h2><p></p><p></p><p>观点：</p><p></p><p>Xops 是 DevOps 的泛化和扩展，本质是降低团队之间的认知负荷，达成共同的目标。平台工程不是要求开发同学使用统一标准，而是让适合的技术得到应用和发挥，成熟的技术得到沉淀。投资开发体验非常重要，只有工程师体验好了，通过软件实现数字经济创新，企业才能在市场中赢得份额。</p><p></p><p>杨振涛：目前业界有哪些典型的工具或产品可以通过减少开发人员的重复性工作和认知负荷来提高他们的开发体验呢？我们都知道，新技术每天都在不断更新，但业务开发人员不可能每天都去追这些新技术。因此，对于开发人员来说，减少重复工作或新技术带来的认知负荷，是开发体验中非常重要的一个组成部分。</p><p></p><p>Landy：在我看来，近年来的趋势在软件工程和开发人员方面有了很大的改善。现在有很多工具或产品可以帮助减少重复性劳动，比如集成开发环境、代码高亮、自动完成和调试工具等。例如我们现在全员使用的 Copilot，它作为一个好的助手，可以大大提高日常编写代码的效率。另外还有一些专注于不同语言的编辑器，例如 Golang 可以使用 GoLand 或者 VS Code，Java 可以使用 JetBrains 全家桶等。当然还有一些专注于机器学习等领域的 IDE，这些工具都与代码终端最相关的开发工具有关。</p><p></p><p>在 CI/CD 工具部分，解决的问题是如何让重复的流程更加自动化，包括整个 pipeline 或 workflow 的管理。这个过程的自动化是开发中的公共基础设施的一部分，让自动化成为现实，避免每个人都去找某个环节的负责人。通过 webhook 和其他方法，可以快速地将代码从 code 到 ship 全链路地自动化。我们开源 Zadig 也在这个领域开展了工作。</p><p></p><p>此外还有一些低代码平台，它们有一些领域建模的能力，让业务人员在不需要开发人员参与的情况下，通过组装可用的构建块来创建业务应用程序。这些平台可以减少重复性的开发工作，避免实施外包。通过让业务人员自己创建和维护他们的应用程序，这些低代码平台能够使组织更加敏捷和创新。</p><p></p><p>当然，还有像 DevOps 平台这样的工具，虽然 DevOps 这个词在近两年才逐渐流行起来，但它的演进过程非常丰富。从最初的一个方法论，到后来逐渐衍生出各种 DevOps 平台，它的本质是希望降低团队之间的认知负荷，达成共同的目标。现在，它统称为 Xops，还在不断地扩展和泛化，万物皆可 Ops，就比如我们经常提到的 FinOps、TestOps、MLOps、DataOps 等。最终，它要达到的目标是让团队可以更加高效地运作，释放更多的价值。所以，这个领域也非常重要，可以减轻开发人员的认知负荷。</p><p></p><p>关于典型的减少开发重复工作和认知负荷的工具或产品，我认为技术人员追求技术或体验新技术是正确的，平台工程并不是要求开发同学使用标准的技术，这是一个错误的论断。相反，平台工程应该让适合的技术得到应用和发挥，让成熟的技术得到沉淀。这是平台工程的解决方向，但平台并不能解决所有问题。这是我抛出的一个简单论点。</p><p></p><p>因此，我认为在开发中，投资开发体验是非常重要的，需要加大投入。只有工程师体验好了，企业通过软件实现创新，才能在市场中赢得份额。此外，开发人员日常使用各种类型的工具，包括自动化工具、IDE 工具、DevOps 平台和低代码平台等，以降低重复性工作和认知负荷，并提高开发体验。这些方面的投资可以大大提高开发效率，使团队能够更快地交付高质量的软件产品。</p><p></p><p></p><h2>是否做好自动化就算 DevOps 实施成功？</h2><p></p><p></p><p>观点：</p><p></p><p>工具化和自动化说明团队具备了一定的改进意识，但成功实施 DevOps 是从文化实践到工程落地的系统性工程。强大的 DevOps 平台需要创建一套相对标准化的工程流程，并能够非常灵活的适应各种场景。金句：“DevOps” 本身就是一种博弈，代表了开发和运维之间的零和博弈DevOps 能否实践成功的关键在于能否将开发运维的零和博弈转化为多边博弈，实现从需求到研发的整个价值链高效协同。</p><p></p><p>杨振涛：好的，我们之前已经聊到了 DevOps，现在让我们继续深入这个话题。DevOps 作为业内高度共识的一种优秀实践，您认为目前工具化与自动化的程度是否可以作为 DevOps 实施成功的一个标志？大规模 DevOps 实践的关键挑战是什么？</p><p></p><p>Landy：这个问题很好，它涉及到几个关键要素。工具化和自动化是 DevOps 中非常重要的组成部分或指导思想之一。一些公司将大量工具整合成一个平台，以解决一些重复的问题，包括 pipeline 和自动化引擎。但是，要真正实现 DevOps，除了工具化和自动化之外，还需要其他要素，比如文化转变、持续改进和团队协作沟通等。这些因素更加难以实现。</p><p></p><p>很多人可能会误解 DevOps，认为“我们不需要 DevOps，因为我们不需要那么快上线”。因此，了解 DevOps 的本质非常重要。成功实施 DevOps 的标志是从文化实践到工程落地的一个系统性工程，而不是仅仅实现工具化或自动化。因此，一个强大的 DevOps 平台应该能够创建一套相对标准化的工具流程，并能够非常灵活地适应各种场景。此外，它还应该包括一些基础设施的自动化，以及持续交付和持续集成等好的实践。</p><p></p><p>尽管工具化和自动化并不能准确地表达 DevOps 的标志，但它们是推动 DevOps 实践的关键因素之一。当人们提到 DevOps 或自动化时，这意味着他们已经认识到了自动化和工具化的重要性，并且正在朝着这个方向努力。因此，工具化和自动化的意识比很多其他的做法要好得多，它们是推动 DevOps 实践的关键因素之一。</p><p></p><p>大规模 DevOps 实践成功的关键挑战在于是否理解了问题的本质。实际上，这个词提出的背景就表达了一种冲突，“DevOps” 本身就是一种博弈，代表了开发和运维之间的零和博弈。为什么需要 DevOps？因为开发团队希望快速交付产品，而运维团队希望确保应用程序的稳定性和安全性。这种博弈不仅存在于 DevOps，还涉及到其他角色，例如开发、测试、运维、安全、IT、财务等。任何一个环节的问题都会对整个价值链产生影响，因此需要从博弈论的角度来解决这个问题。DevOps 需要解决的核心问题是如何将零和博弈转化为多边博弈。我们需要思考如何在开发、测试、部署和运维等环节中建立多方合作的机制，以实现整个价值链上的协同效应。这不仅需要技术工具的支持，更需要从文化和组织架构上的变革，以及人员间的协同和沟通等方面的不断探索和实践。因此，只有当我们真正理解了 DevOps 问题的本质，才能够在实践中获得成功。</p><p></p><p></p><h2>平台工程是否为软件研发带来一剂良药？</h2><p></p><p></p><p>观点：</p><p></p><p>平台工程是 Xops 概念的具体延伸和实现，可以理解为软件工程的实例化，让软件研发距离商业世界更进一步。</p><p></p><p>杨振涛：因为 DevOps 本身与实施规模直接相关。新兴的平台工程趋势能否为我们带来一些新的启示和解决方案呢？</p><p></p><p>Landy：平台工程这一概念是 DevOps 概念的具体延伸和实现，它可以被视为软件工程的实例化。让我们来用字面意思拆解一下“平台工程”这个词：其中，“平台”这个词很好地涵盖了整个价值链，只有能够上链的环节才能提供价值。这个价值链的两端分别是各种职能工程师和生产运行服务（软件）。所有在链上的人都有双向关系，通过平台化能力，可以建立共识。然而，由于涉及配置、基础设施等多种因素，这个过程也会存在链下的部分，需要解决系统性问题，包括人、流程、系统和组织等多种因素。另一个词“工程”很好地涵盖了这个部分。因此，平台工程提供了一种可能性，让我们能够更系统地解决软件开发这个复杂的问题，并提供了一个很好的思路。</p><p></p><p>在过去，DevOps（Xops） 可能被视为一个概念，而现在平台工程将其可以被实现并具有实际的商业意义。平台工程需要高度抽象，灵活自由，扩展性强，并且与业务密切相关，可以被看作是基础设施的一层，业务系统的支撑层，通过提高软件交付的质量和速度，为企业带来更多的商业价值。</p><p></p><p></p><h2>平台工程、DevOps、SRE 的概念差异与内涵？</h2><p></p><p></p><p>观点：</p><p></p><p>工程师岗位职责上可以划分为面向业务和公共服务两类，平台工程提供了一种可能性，让研发更好地与商业联系起来，通过产品或平台向业务展示价值。平台工程提供了通向商业价值的路径，为 CTO/VP 们提供了一个澄清业务价值的通道。帮助团队提升软件开发生产力的同时，更好地实现商业价值。在未来的企业内部，软件将成为一种商品存在，平台工程将通过工程化、服务化、数字化和 AI 智能化的发展，从而证明技术和研发的价值。</p><p></p><p>杨振涛：我们提到平台工程，总有些不可避免的话题。您认为平台工程和 DevOps，包括 SRE 之间是一个什么样的关系？从团队职责到概念的内涵外延等方面有何异同？</p><p></p><p>Landy：实际上目前许多公司在运维职责划分方面存在混乱。有些称之为 DevOps、SRE 等，还有其他各种称谓，如业务运维、系统运维、基础运维等。职责划分经常调整，公司的组织结构也在变化，总是不断合并和分裂，进行组织重构。</p><p></p><p>这个混乱的原因在于需要有一个能够承担所有权的人来解决问题，因此出现了许多不同的平台组或其他组织形式。因此，不强调 DevOps 和 SRE 之间或平台工程之间的区别，因为它们都是解决问题时产生的不同视角。它们的核心视角可以分层，具体实现方式取决于团队或公司的不同方式运作，以及如何将业务流程呈现给用户。在不同公司中，这些职位的名称也不尽相同，如 SRE、运维、云原生工程师等等。</p><p></p><p>无论是 DevOps 工程师、SRE 工程师还是平台工程师，他们都可能在做类似的工作。从这个角度来看，他们之间的区别可能不明显。但从企业或研发组织需要什么样的工程师来看，越来越需要为开发者、公共平台层建立研发团队来解决共性问题。</p><p></p><p>因此，从面向业务和面向公共两个角度来看，无论是 DevOps 工程师还是 SRE 工程师，还是其他类似的职位，更多的要看他们是面向业务还是面向公共的。如果是面向业务的，像 SRE 这样的定位可能更为合适；如果是面向公共的，那么 DevOps 可能更加明确一些。在更垂直的领域中，可能还需要加上领域专家的属性。相对来说，DevOps 这个概念比较混沌，因为它解决的问题很广泛，很多公司都将其视为一种上帝角色。因此，本质来讲更多的是根据自己是面向业务还是非面向业务来区分职责。</p><p></p><p>在更广泛的职责范围内，平台工程师将技术研发与业务价值联系起来，使得研发价值可以更好地理解和传达。以前，研发被认为是一个黑盒子，不能清晰地解释技术与业务的关系，但好像出了任何问题又与我们有关。老板不理解软件的复杂性，很多公司的 CTO 也很尴尬，因为大多是技术出身，没有太多商业意识。作为花钱的部门，也不知道可以创造多少商业价值。但是平台工程提供了一种可能性，让研发更好地与商业联系起来，通过产品或平台向业务展示价值。这种服务能力可以被标价，研发可以通过效率、质量和成本等指标来证明对业务的贡献。因此，平台工程提供了通向商业价值的路径，为 CTO 或 VP 们提供了一个澄清业务价值的通道。</p><p></p><p>外延方面我举个例子，FinOps 是一种元年技术趋势，它主要是通过工程、财务和产品团队协作，优化资源的使用，平衡投入产出比。平台工程提供了这种可能性，让我们能够更好地度量细粒度的成本、效率和质量，并优化资源的使用。如果没有平台工程的支持，这将是非常困难的。因此，从工程化和服务化的角度来看，平台工程将是软件工程走向成熟的基石，可以帮助团队更好地实现商业价值，并且可以提高软件开发生产力，是一个非常好的发展趋势。</p><p></p><p>在未来的企业内部，软件将成为一种商品存在。为了评估软件产品的价值，需要商业化并计算开发成本、资源成本和业务调用的资源成本。但如果没有基于平台工程的工程化基础，这些细节很难被度量。因此，工程化是软件工程朝着服务化、数字化和 AI 智能化发展的基础。这对于商业、团队价值呈现以及软件研发本身的发展阶段都非常重要。工程化能够将软件工程转化为一种商品化存在，使其走向更成熟的发展阶段。通过服务化和商业化标价，我们能够更好地理解软件产品在效率、成本和质量等方面的表现。此外，工程化还提供了从资源视角来看待问题的可能性，以便更好地理解软件产品的投入成本和产出价值。</p><p></p><p>总之，软件工程正在逐步走向数字化阶段的成熟发展轨迹。对于整个生产链条中的生产力（例如工程师）来说，这也是一个非常好的发展趋势。通过工程化、服务化、数字化和 AI 智能化的发展，软件工程转化为成熟商品一样存在，从而证明技术和研发的价值。</p><p></p><p></p><h2>平台工程怎么确保是个有用的轮子？</h2><p></p><p></p><p>观点：</p><p></p><p>很多团队做平台被理解为造轮子，很大程度是思考不够深入的盲目造实体轮子，而真正的价值却没做透。平台工程不是为了制造工具或系统而制造，而是为了解决问题。发明轮子只是实现解决方案的手段之一，更重要的是使用可规模化和可复制的模式以及新兴技术来解决这个问题。</p><p></p><p>杨振涛：今天有不少的问题，我们先来选几个回答一下。有观众问说。平台工程如何确保不是在重新发明轮子？</p><p></p><p>Landy：我的理解是，发明轮子是工程师的天性。我认为发明轮子并不是坏事情，因为它是创新的根源。有了不断产生的轮子，一些轮子被留下，一些被淘汰。这是很正常的。当然，制造轮子是必要的。平台工程是一个非常好的例子，因为工程这个词本身就代表了复杂性。因此，平台很可能需要制造轮子。在软件开发和国内工程效能、效率工程、平台等领域，团队往往被认为正在发明轮子。我们需要反向思考为什么会有这种观点。</p><p></p><p>在国内存在一种普遍现象，即人们通常采用相对实体成果的方法来解决问题。例如，敏捷组织如果没有开发出一个平台，就很难证明其价值。由于脑力劳动难以通过物理化表达，很多人采用一种手法，即先开发几个工具，然后将它们连成一串以展示给老板。这样就能达到季度的 OKR 和 KPI，最终获得奖励。但半年后，人们会发现一个问题，即不知道如何证明这个平台的价值，也不知道如何向老板讲述这个故事。这是很多平台开发者都会面临的问题。因此，每当有一个想法或问题出现时，人们倾向于制造一个轮子来直观地向老板展示其价值。老板认为实际存在的东西更为重要，这就导致人们的认知、知识和方法可能变得不那么重要。这种表现实际上是思考不够深入的结果。</p><p></p><p>在平台工程领域，制造轮子并不是目的，而是手段。平台工程需要处理的复杂度很高，不能随随便便就能造出来。如果随便搭建一个平台，将其各个部分串联起来，可能会遇到一些问题，如 Zadig 与客户打交道时常常遇到其他类别的内部平台或者外部系统，它拥有比 Zadig 系统多的多的功能点，但是仍然带不了协同效率的提升，研发同学体感仍然是很差的。其实平台工程需要通过规模化、可复制的模式来解决这些问题，用新的模式创新或者新的技术创新来解决这个问题，而不是只是简单的堆砌。这才是平台工程和传统开发的本质差异。</p><p></p><p>举例来说，NASA VS SpaceX 的研发速度差异，与马斯克的工程思维密切相关。马斯克善于将重复的工作流程化和自动化，甚至将一些自动化的步骤进一步简化和抽象化，从而提高工艺效率和质量。</p><p></p><p>因此，在平台工程和工程领域中，我们需要摒弃“发明轮子”的思维方式，要从根本上去思考问题，并用新的模式和技术去解决问题。</p><p></p><p></p><h2>以 ChatGPT 为代表的 AI 技术是否会替代工程师？</h2><p></p><p></p><p>观点：</p><p></p><p>ChatGPT 新技术的出现会为工程师带来更多的扩展性和延展性、多元化，无论是否使用 AI 技术，每个人都应该深入思考自己的工作是否真正带来了价值。同学们不需要过多的焦虑和压力，只需去积极尝试并感受这些技术，具体能够解决哪些实际问题。这比听别人讲多少或者造成多少焦虑声音都更有意义。SRE 和 DevOps 工程师需求仍存在很大的缺口，业务开发人员则需要更多地沟通、协作，关注全局视角和大局观。软件实现工程化还需要相当的一段时间，AI 技术不但不会替代，反而可以更好推动软件研发的创新发展进程。</p><p></p><p>杨振涛：我们把这个问题再深入一下。在云原生持续发展的今天，看起来是一切都在自动化。自动化做得越来越好是不是意味着一些技术岗位有可能被人工智能所取代？大家现在都很关注 ChatGPT 是否会让一些人失业，从实践表现中看，它确实有一些这方面的潜力。它擅长一些规律性强，执行层面的工作，很擅长从人类去学习，能够快速去提取这些信息，能够处理重复的模式化的工作。那这个问题李老师是怎么看的？</p><p></p><p>Landy：最近大家都有不同程度的 ChatGPT 焦虑症，正好我们 Zadig 团队前段时间邀请了来自 Google 的知识图谱专家、数据专家以及技术专家一起讨论了这个话题。我相信在 ChatGPT 时代已来，每个行业都会重新思考他们的工作和是否有可能被替代的可能性，这不仅仅是工程师，而是所有人都可能会面临的问题。</p><p></p><p>不过我个人认为技术岗位在不断迭代，新技术的出现会为这个职业带来更多的扩展性和延展性。这就像过去没有计算机，但随着计算机的出现，工程师才得以诞生。未来，技术岗位也会随着技术的发展而不断变化。因此，我认为大概率在短期或一段时间内，技术岗位不会被取代掉。</p><p></p><p>另外一个点就是，很多人认为软件开发工程师只是在写代码，但这种认知并不准确。作为工程师，我们知道实际上有相当一部分时间是用来思考问题的，而不是在写代码。我们需要思考如何定义问题，如何将现实世界抽象成计算机可以理解的形式，而这些都是机器代替不了的。机器不可能替代人类，思考一个连需求都讲不清楚的问题。因此，我们的能力更多的是在于思考、定义抽象问题，而不仅仅是写代码。当然，写代码是我们工作中非常重要的一部分，而现在有很多优秀的工具和技术可以帮助我们更高效地完成这项工作，这使得我们能够将更多的时间用在思考和解决问题上，将码农变成工程师。</p><p></p><p>总之，新技术的到来必将带来各行各业的变化。虽然一些具有规律性强或执行性高的工作可能被自动化取代，但很多需要人类特质的工作，如创造力、决策力、情感和沟通协调等，是难以被替代的。因此，新技术更应该被视为我们共同的工具，工程师应该积极接触并将其与工作相结合，以更好地提高工作效率和创造力。</p><p></p><p>我的日常工作已经离不开各种相关工具了。比如，写代码时使用的 Copilot 或微软基于 GPT4 推出的 的 office 组件。这些工具可以提供一些建议，帮助我更高效地撰写文档和描述问题。使用这些工具确实提高了我的效率，因此，我建议工程师们快速开始使用这些工具，结合自己的工作实践去尝试这些新技术。不需要过多的焦虑和压力，只需去尝试并感受这些技术能够解决哪些问题，这比听别人讲多少或者造成多少焦虑声音都更有意义。</p><p></p><p>随着新的 AI 技术的到来，将会带来许多新的机会和需求。我的个人预测是，基于 AI 技术的应用会更加大规模，软件研发的体量和应用（服务）也会增加。因此，软件研发工程师的角色可能会更加多元化。但每个工程师都应该深入思考自己的工作是否真正带来了价值。无论是否使用 AI 技术，都应该思考核心价值。当然，我们今天讨论的平台工程不仅仅是业务开发，而是提供核心价值的好方法之一。因此，构建平台也是一个很好的思路。</p><p></p><p>杨振涛：其实我们也可以从另一个角度来看待这个问题。虽然我们担心被替代，但如果我们看看目前我们正在做的事情，例如 SRE 和 DevOps 相关的平台，AI 目前还无法完成这些任务。这至少说明了，在短期内，这些同学不必担心失业的问题。</p><p></p><p>Landy：我认为，SRE 和 DevOps 工程师仍然属于相对年轻的领域。通常工作范围非常广，需要依据他们的技能和经验来做出许多决策和操作。虽然未来自动化 AI 等技术的发展将越来越发挥作用，但目前短期内 DevOps 和 SRE 的工作仍有很大缺口，因此这些工程师不必担心失业问题。相应的，业务开发人员可能需要更多地关注全局视角和大局观，并提高抽象和写作能力。而对于 SRE 和 DevOps 工程师来说，他们应先掌握基本技能，例如搭建工程、构建良好的平台和基础设施，为研发团队提供更好的支持，并解决实际生产中的问题。由于软件工程本身尚未完全被理解和掌握，使用更高模式级别的技术仍需要一段时间。</p><p></p><p>我认为，人工智能技术的基础是对现实世界描述和信息的理解。然而，软件研发、DevOps 和 SRE 工程师所面对的现实世界是非常混沌的。由于很多公司的软件研发现状是孤立、分散、抽象和碎片化的过程，实现工程化还需要一段时间。这种情况下，人工智能技术的应用可能需要很长时间。我们不能低估人的复杂性，它总是比系统和技术的复杂性更高。因此，在这个过程中，我们需要不断思考、改进和创新，以更好地利用人工智能技术推动软件研发的发展。</p><p></p><p>杨振涛：好的，因为时间关系，我们今天的访谈不得不提前结束了，后续我们会再次安排一个时间，为大家呈现一个完整、精彩的访谈。感谢今天观看本次访谈的所有观众，也感谢提问的观众们。最后，非常感谢李倩老师的分享和讨论，谢谢大家！</p><p></p><p>嘉宾简介：</p><p></p><p>李倩，KodeRover 创始人兼CEO，开源持续交付产品Zadig 作者，前七牛云工程效率部研发总监。</p><p></p><p>杨振涛，vivo 互联网研发总监，目前关注开源治理、技术社区与工程文化建设。具有 15 年多个领域的软件研发经验，此前先后从事生物信息与基因测序领域的科研工作、电商与 IM 架构以及搜索引擎研发。开源技术与技术传播爱好者，先后参与和负责 Circos、Redis、Jenkins、Elasticsearch 等社区的本土化，也是 TED Translator &amp; Reviewer。为了更加系统地收集并记录平台工程主题的技术趋势及发展历程，我整理并创建了一个 awesome list 供大家参考，欢迎各位参与贡献和维护。Github 地址：<a href=\"https://github.com/toptechevangelist/awesome-platform-engineering%E3%80%82\">https://github.com/toptechevangelist/awesome-platform-engineering。</a>\"</p><p></p><p>今日好文推荐</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651165743&amp;idx=1&amp;sn=55a173a203a143f92bf418d659b07c5c&amp;chksm=bdb86c7c8acfe56a600933744fb7f04efd94f0a2a13b3b96098b1902d5f1ee8bdb4a8154cc03&amp;scene=21#wechat_redirect\">用C++写出比MySQL快800倍的数据库，ClickHouse创始人：融合数据库该“卷”的还是性能和速度</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651165655&amp;idx=1&amp;sn=e7e61e615c75f73682d69cbb2764fe82&amp;chksm=bdb86b848acfe292393feb02c3723732878bc8d69d81c77a420508b87379a2e54bd62a0bbe78&amp;scene=21#wechat_redirect\">国产替代潮来了，这与京东云已“养成”的混合多云有什么关系？</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651165383&amp;idx=1&amp;sn=2872edcdee35f1d71756daf6bfaffbdb&amp;chksm=bdb86a948acfe38293a01c1c096a1b0865952c24e56d68ec0a6849e17fc084f608010d17b2cb&amp;scene=21#wechat_redirect\">裁员潮过去、削减中层管理潮又来了：升管理保饭碗，不灵了</a>\"</p><p></p><p><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651165296&amp;idx=1&amp;sn=0b9e9ee6f1ca283c355faff6e814330a&amp;chksm=bdb86a238acfe3358ed2a5bd739645e22be4634c688941a1ca1f37bf1924e05875edc4455c54&amp;scene=21#wechat_redirect\">如何防止架构师PM化</a>\"</p><p></p><p></p><p></p>",
    "publish_time": "2023-04-28 09:04:27",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "被吹爆的 ChatGPT 真如传说中那么“强悍”吗？ | InfoQ 测评室",
    "url": "https://www.infoq.cn/article/BFb0AxXaUUIZToGuEsjR",
    "summary": "<p>从去年底至今，大规模语言模型 ChatGPT 引发了几乎所有科技领域从业者的高度关注。ChatGPT 凭借其更接近人的思考方式被广泛称为“最强 AI”。为便于各方全面多维了解 ChatGPT 能力，lnfoQ 测评室参考中国信息通信研究院联合中国人工智能产业发展联盟相关标准中的指标要求和评估方法，从功能、性能、用户体验等方面对 ChatGPT 进行了评估，我们一起来看看这款应用是不是真如传说中那么强悍吧！</p>",
    "publish_time": "2023-04-28 12:11:27",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "局部超越 ChatGPT？百度文心一言测评来了！ | InfoQ 测评室",
    "url": "https://www.infoq.cn/article/jLsGCgZpCfvGF5a5pE5M",
    "summary": "<p>“种花家独苗”文心一言一经问世便引发广泛关注！InfoQ 测评室有幸收到内测邀请码，我们一起来看看那些 ChatGPT 搞砸过的问题，文心一言能搞定吗？从技术视角设计评测，文心一言到底表现如何？</p>",
    "publish_time": "2023-04-28 12:18:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "进入中国第23年，InterSystems宣布新战略：互联互通构筑医疗数字化转型的新范式",
    "url": "https://www.infoq.cn/article/eGbLfql5FdfxIbIiJchp",
    "summary": "<p></p><p>近日，数据技术提供商InterSystems亚太区总经理卢侠亮（Luciano Brustia）自疫情后首次返回中国，与InfoQ等少数媒体沟通交流。卢侠亮介绍了InterSystems在国内的发展情况、在产品和服务上的持续投入，以及持续创新的产品与解决方案。</p><p></p><p>InterSystems创立于1978年，是为医疗、金融、制造、供应链等行业提供企业级数字化转型下解决方案的供应商。</p><p></p><h2>进军中国市场23年</h2><p></p><p></p><p>卢侠亮表示：“作为一家扎根中国市场超过20年的企业，InterSystems致力于为中国这一关键市场提供先进的技术、创新的解决方案与卓越的服务。&nbsp;三年来，我们不断增强在中国的业务，研发了针对中国用户的InterSystems&nbsp;IRIS医疗版互联互通套件等产品，接下来，将继续与中国医疗机构紧密合作，期待为中国的医疗数字化转型带来更大价值。”</p><p></p><p>据悉，InterSystems的产品矩阵已落地北京协和医院、四川大学华西医院、武汉同济医院、和睦家医疗集团、美中宜和妇儿医院等国内500余家医疗机构，其中三级医院占比超过70%。</p><p></p><p>据卢侠亮介绍，InterSystems针对中国市场推出的产品矩阵包括：</p><p></p><p>InterSystems IRIS医疗版互联互通套件2020年，新版《国家医疗健康信息医院信息互联互通标准化成熟度测评方案（2020年版）》发布，在“以评促建”的标准引领下，InterSystems剖析评测标准，凭借多年来在医疗信息化领域的经验和医疗数据平台积累，于2021年推出了专为中国医疗机构打造的InterSystems IRIS医疗版互联互通套件，满足医院快速落地互联互通标准化成熟度测评涉及到的标准化改造需求。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/96/96e8ab2dd97a0194d968d813a170e6eb.png\" /></p><p></p><p>2023年，InterSystems&nbsp;IRIS医疗版互联互通套件已升级至3.0版，打通了国内互联互通生态与FHIR生态，以更好的互操作性服务能力提升数据利用价值，提供了更为丰富的校验和实施工具以及多样化的最佳实践用例库，进一步提升了互联互通建设中的用户体验和价值实现。</p><p></p><p>卢侠亮强调，InterSystems IRIS医疗版的技术和开发都是基于FHIR标准的，互联互通套件的开发也是基于FHIR标准。</p><p></p><p>目前，中国一些大医院已经有较强的互联互通意识，且已经具备了互联互通的功能要求。“我们现在来到了一个特殊的时代，未来对于互联互通的要求会更高”。</p><p></p><p>现在医疗数据的质量和标注一直是一个比较难的问题，在提高数据质量方面，卢侠亮向InfoQ表示，首先会进行数据清洗，确保进来的数据是好的。在这个过程中，实际上最难的并不是技术问题，只要建立了一系列的制度和过程，数据清理就可以完成。即使有了强大的平台，还是需要相关的政策来进行数据清理。因此，InterSystems IRIS提供了一系列的工具。“我们不仅仅是数据库，我们还是一个平台。IRIS的平台可以存储数据，它也有互联互通的功能，另外它还有FHIR的引擎作为它底层的架构和驱动。所以如果这时引入了不好的数据，它会被存储到平台的数据库，当要进行数据调取来分析时，拿到的数据就是清洗过的数据”。</p><p></p><p>截至目前，InterSystems技术已成功助力150余家医院顺利通过医院互联互通标准化成熟度评测，其中五级乙等近30家。</p><p></p><p>InterSystems&nbsp;TrakCare统一的医疗信息系统 。</p><p></p><p>这是一个灵活而强大的医疗信息系统，用于医疗服务的提供、管理和改革。TrakCare定位为中国高端私立医疗机构数字化变革提供支持。最新应用数据显示，在中国，TrakCare目前服务于和睦家、美中宜和、曜影医疗等国内高端私立医疗机构，为14个城市的50多个院区/诊所提供信息化支撑，服务患者数量已超2000万。</p><p></p><p>InterSystems开发者社区中文版开发者和技术用户的培养与成长是InterSystems关注的方向。2021年，<a href=\"https://cn.community.intersystems.com/\">InterSystems开发者社区中文版</a>\"于正式上线。该社区为使用InterSystems技术的开发者们提供了一个分享技术心得、实践交流的平台，目前已有注册用户近800人，社区定期举办开发者编程大赛与征文大赛，提升开发者的实战能力。</p><p></p><p>2023年4月，为中国用户定制的“InterSystems中国技术培训认证”上线，确保用户可从快速发展的InterSystems技术中获益，以更好地服务于医疗行业数字化转型与发展。</p>",
    "publish_time": "2023-04-28 12:38:08",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "金融服务场景化背后的业务创新与技术升级",
    "url": "https://www.infoq.cn/article/rOARbiN1flkQTADUpBdc",
    "summary": "<p><img alt=\"unpreview\" src=\"https://static001.infoq.cn/resource/image/db/82/db1f10c6c20691ff4bffdfb3ffbec482.jpg\" /></p>",
    "publish_time": "2023-04-28 12:45:16",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]