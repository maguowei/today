[
  {
    "title": "AWS Lambda现可支持Node.js 18运行时",
    "url": "https://www.infoq.cn/article/IjopWm7HUlP8qftzbOB3",
    "summary": "<p>近期，亚马逊云科技宣布<a href=\"https://nodejs.org/de/blog/announcements/v18-release-announce/\">Node.js版本18</a>\"支持其函数即服务（FaaS）<a href=\"https://aws.amazon.com/lambda/\">AWS Lambda</a>\"，并处于<a href=\"https://github.com/nodejs/release#release-schedule\">活跃LTS状态</a>\"（可供一般使用）。</p><p></p><p>开发者目前可使用Node.js 18中的新<a href=\"https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V18.md\">语言功能</a>\"编写AWS Lambda函数，比如类字段和私有类方法的性能优化、JSON导入断言，以及包括Fetch API、<a href=\"https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V18.md#test-runner-module-experimental\">Test Runner模块</a>\"、<a href=\"https://github.com/nodejs/node/blob/main/doc/changelogs/CHANGELOG_V18.md#web-streams-api-experimental\">Web Streams API</a>\"在内的实验性功能。</p><p></p><p>全局Fetch API在Node.js 18中默认可用，这一实验性功能中的fetch函数取代了fetch polyfills及其他三方HTTP:</p><p><code lang=\"javascript\">// index.mjs \n\nexport const handler = async(event) =&gt; {\n    \n    const res = await fetch('https://nodejs.org/api/documentation.json');\n    if (res.ok) {\n      const data = await res.json();\n      console.log(data);\n    }\n\n    const response = {\n        statusCode: 200,\n        body: JSON.stringify('Hello from Lambda!'),\n    };\n    return response;\n};\n</code></p><p></p><p>所有实验性功能都可通过NODE_OPTIONS环境变量启用或禁用。</p><p></p><p>AWS Lambda支持目前Node.js的长期支持版本（LTS），意味着使用新版本的开发者在创建或更新函数时需要指定nodejs 18.x的运行时参数值，或者使用有运行时管理的<a href=\"https://docs.aws.amazon.com/lambda/latest/dg/nodejs-image.html\">基础镜像</a>\"。</p><p></p><p>除此之外，运行在<a href=\"https://aws.amazon.com/blogs/compute/migrating-aws-lambda-functions-to-arm-based-aws-graviton2-processors/\">基于Arm AWS Graviton2</a>\"或基于x86的处理器的函数均支持Node.js 18的运行时。</p><p></p><p>AWS Lambda所支持的<a href=\"https://www.infoq.com/news/2022/05/aws-lambda-nodejs-16-support/\">上一版本Node.js 16</a>\"自2022年十月中旬起便一直处于维护LTS状态，并将在一年后迎来生命周期的终结。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d6/d66da7325c1882faeead9081ea920d10.png\" /></p><p></p><p>来源：<a href=\"https://github.com/nodejs/release#release-schedule\">https://github.com/nodejs/release#release-schedule</a>\"</p><p></p><p>Lambda的Node.js运行时在Node.js 16及之前版本中，使用的都是JavaScript 版本2的AWS SDK，目前后者已随着对Node.js 18的升级更新至JavaScript 版本3的AWS SDK。因此，公司推荐已升级至Node.js 18的开发者将函数代码同步更新至使用SDK v3，或者也可以通过部署SDK v2及其功能代码，以在不更新现有代码的情况下使用Node.js 18的运行时。</p><p></p><p>AppDev的云计算顾问Suraj Tripathi在一篇AWS计算的<a href=\"https://aws.amazon.com/blogs/compute/node-js-18-x-runtime-now-available-in-aws-lambda/\">博文</a>\"中解释道：</p><p></p><p></p><blockquote>与第二版相比，第三版的SDK为JavaScript带来了不少优势。更重要的是，它是模块化的，也就是说代码只需加载需要的模块。如果你选择将SDK与函数代码一同部署，而非是使用Lambda运行时的内置版本，那么模块化还将缩减你的函数大小。</blockquote><p></p><p></p><p>此外，bootstrapped募捐会的CTO，<a href=\"https://twitter.com/StevenDSanders\">Steve Sanders</a>\"<a href=\"https://twitter.com/StevenDSanders/status/1593721337285074947\">发推</a>\"表示：</p><p></p><p></p><blockquote>AWS Lambda先已支持Node 18！其中包括AWS JavaScript SDK的v3版本，如果你有用到它的话那这可是个大好消息，部署中少了一样需要捆绑的东西。</blockquote><p></p><p></p><p>开发者在使用v3 的SDK时，可以只导入需要的模块，如ListBucketsCommand或是S3Client这种服务客户端：</p><p></p><p><code lang=\"javascript\">import { S3Client, ListBucketsCommand } from \"@aws-sdk/client-s3\";\n</code></p><p></p><p>Node.js运行时中零一变动是，通过NODE_PATH环境变量增加了对ES模块解析的支持。Lambda的运行时会在加载ES模块时，搜索所有NODE_PATH目录下的文件夹，让AWS SDK作为ES模块，或从Lambda层加载ES模块更加方便。</p><p></p><p>社区和开发者们纷纷欢迎AWS Lambda支持Node.js 18的运行时。Allianz贸易公司的首席软件工程师<a href=\"https://twitter.com/shepsheplu\">Jean Burellier</a>\"<a href=\"https://twitter.com/shepsheplu/status/1594044121244639234\">发推</a>\"表示：</p><p></p><p></p><blockquote>恭喜@AWS lambda团队推出#NodeJS 18，比其他版本都要快。我还以为得再等上几个月。</blockquote><p></p><p></p><p>同样，红迪评论串中也有人写道：</p><p></p><p></p><blockquote>点赞！推出速度比Node 16要快！</blockquote><p></p><p></p><p>不过也有声音希望Lambda能支持较新版本的Python。AWS英雄<a href=\"https://twitter.com/TServerless\">Efi Merdler-Kravitz</a>\"<a href=\"https://twitter.com/TServerless/status/1593680665299619843\">发推</a>\"表示：</p><p></p><p></p><blockquote>@jbesw 什么时候才能看到对Python 11 的支持？Node似乎抢了所有风头。</blockquote><p></p><p></p><p>最后，AWS Lambda<a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-nodejs.html\">文档</a>\"中的Node.js的编程模型提供了更多关于如何在Node.js 18中编写函数的细节。此外，开发者还可以在审查代码<a href=\"https://nodejs.org/de/blog/announcements/v18-release-announce/\">兼容性问题</a>\"后，通过修改运行时配置至nodejs16.x，将其现有的Node.js函数迁移到新的运行时。</p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/11/aws-lambda-nodejs-18-support/\">AWS Lambda Now Has Support for Node.js 18 Runtime</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/theme/164\">2022 re:Invent InfoQ 特别报道</a>\"</p><p><a href=\"https://www.infoq.cn/article/MwBXrRq4fprblHP43hpR\">AWS数据库迁移服务：将Oracle数据库迁移到MySQL</a>\"</p>",
    "publish_time": "2022-12-25 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]