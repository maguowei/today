[
  {
    "title": "分布式数据库 TiDB 在携程的实践",
    "url": "https://www.infoq.cn/article/cxrXBkI6Ox48BGdVx23X",
    "summary": "<p>随着新冠病毒疫情的缓解和控制，全球旅游业逐渐开始重新复苏。尤其在一些度假胜地，游客数量已经恢复到疫情前的水平。</p><p>&nbsp;</p><p>携程作为全球领先的一站式旅行平台，旗下拥有携程旅行网、去哪儿网、Skyscanner 等品牌。携程旅行网向超过 9000 万会员提供酒店预订、酒店点评及特价酒店查询、机票预订、飞机票查询、时刻表、票价查询、航班查询等服务。</p><p>&nbsp;</p><p>随着业务量迅速增长，携程需要更敏捷的技术架构来满足不断激增的并发与数据量，一个稳定、可靠，可以随业务增长不断扩展的数据库对于携程来说显得尤其重要。作为海内外在线旅游行业的翘楚，携程也曾面临着数据库带来的技术挑战。</p><p>&nbsp;</p><p>携程创立于 1999 年，最初选择使用 SQL Server 数据库，在整体数据库技术栈中占比达到 99%。 2012 年初，携程开始逐步关注开源技术，尤其是 MySQL，不过该阶段 MySQL 使用占比仍然很低，只有 10% 左右。从 2014 至 2019 年，携程开始加深 MySQL 的应用，并因为业务形态发生了变化，携程开始从 SQL Server 转型到 MySQL，对 MySQL 进行了深入研究，包括内核补丁、全自动故障诊断等。</p><p></p><h2>原 MySQL 架构痛点与挑战</h2><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/62/62697da89d1a409edbcb2b1fa038d660.png\" /></p><p></p><p></p><p>携程的应用部署在两个或多个 IDC 中，数据库也对等部署在每个 IDC 中。MySQL 部署方式采用 HA节点，即主备节点，在同一机房部署，另一节点在不同 IDC 部署，这种方式保证了 HA 切换速度和数据的容灾。比如遇到单机房故障或者整个机房宕机，可以迅速把第二节点启动起来。携程在主备切换和第二切换时做了很多自动化工作，但这种架构也有明显缺点，由于应用的无状态化，数据库的切换会造成业务的短暂中断，因为数据库只有一个主节点。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4d/4d29ac22b355c384779aea1dce475847.png\" /></p><p></p><p>在扩展方式方面，携程没有采用中间件的方式，而是采用客户端实现分片规则。客户端在上线时会确定分片规则，比如 64。再根据 ID 使用取模运算定位到某个分片，这样可以更方便地进行扩展。当业务增加时实例数量从 1 变成 N ，当负载下降时也可以缩回来。</p><p>但是这种扩展方式对 DBA 运维来说还有一些挑战，随着 DBA 越来越多，聚合会比较困难，业务代码也变得复杂。</p><p></p><p></p><h2>分布式数据库选型</h2><p></p><p></p><p>2018 年，随着携程业务的快速发展，底层架构需要支持弹性扩展，特别是在季节性高峰期（例如春运火车票抢票等）。分布式数据库由于具有 DB 级弹性、快速扩展和混合负载（HTAP）等优势，更适合业务的发展，携程开始考虑引入分布式数据库，并进行调研选型。携程主要从以下几个维度考量分布式数据库：</p><p>性能：平衡性能和成本，选择通用机型，不使用高端存储或机器，并要求响应稳定；运维与社区：学习成本适中，运维复杂度低，产品需开源且社区活跃；成本：一方面，业务研发需要学习使用 SQL，特别是 MySQL 协议；另一方面，运维团队希望产品不要过于复杂，易于维护；扩展性：分布式数据库需要具有快速的扩展能力，扩缩容对业务影响小。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f6/f65446f593f105a7380f5d3cd4beb16c.png\" /></p><p></p><p>2018 年，携程开始正式引入 TiDB。考虑到 TiDB 的架构和携程的 IDC 环境，携程将 TiDB 分别部署在三个 IDC 机房（IDC1、IDC2、IDC3）中，遵循同时部署的标准。TiKV、TiDB 和 PD 均匀分布在三个 IDC 机房中，业务流量可以本地感知到每个机房的 TiDB Server ，在单机房故障时可以自动重启到其它机房。因为客户端对 TiDB 进行了探活与感知，单个 TiDB 服务器故障时客户端可以重新定向。</p><p></p><p></p><h2>TiDB 在酒店和度假结算场景的应用</h2><p></p><p>&nbsp;</p><p>在酒店和度假结算场景应用中，携程原 MySQL 架构主要采用分片（sharding）的扩展方式，对于酒店和度假结算这类业务来说，分片会变得非常困难。最初的方案是把 SQL Server 上的数据原封不动导入到 MySQL 中，但测试后发现性能不佳，扩展性也受限。如果采用分片方式部署，不论从酒店的维度、供应商的维度或者是用户维度，都很难选择合适的分片键（ sharding key），这种方式也对业务代码侵入性比较大。因此，携程最终选择了 TiDB，将酒店和度假结算业务从 SQL server 迁移到 TiDB 上，总数据量规模达到 8TB，并受到了开发人员的一致好评，满足了性能和扩展性的诸多要求。</p><p>&nbsp;</p><p></p><h2>TiDB 在海量数据场景中的应用</h2><p></p><p>&nbsp;</p><p>携程的海量数据场景涉及到大量数据存储。原架构中由于单机存储限制，扩展必须通过 sharding 方式实现。但该解决方案对于一些业务而言过于复杂，例如在 IBU 海外业务部数据，单表数据已经超过 300 亿。应用 TiDB 可以大幅提高查询性能，实现大量数据的高效存储。TiDB 的行列混存架构（ TiFlash 和 MPP 技术），使得携程部分查询性能有了20倍提升；在信息安全源数据标记数据时，单表数据也超过了 60 亿行，读写的响应时间都达到毫秒级，单天聚合查询秒级返回。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f5/f57f46dbeed5642619c995a515ccd95e.png\" /></p><p></p><p>除了使用 TiDB ，携程还在使用其存储层 TiKV。引入 TiKV 是因为携程现在的业务有一些简单的 KV 存储需求，携程在使用的产品有 Redis 和 Hbase，但是 Hbase 的性能相比于 Redis 比较差，而 Redis 则存在数据不一致的风险，比如网络抖动、中断等。携程有一些业务有强一致 KV 需求，例如近期引入的酒店取消政策项目，Redis 虽然能满足业务需求，但没有强一致性能。综合考量之后，携程选择了 TiKV 解决上述挑战。TiKV 的部署与 TiDB 类似，也是在三个机房分布部署，应用可以感知到每个机房的 PD，并且 PD 也在三个机房分别部署。该架构可以确保如果出现机房级故障，或是单 PD 故障，运维团队都可以做到平滑切换。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d3/d35147a452aafb239413ad3817e5694a.png\" /></p><p></p><p></p><h2>TiDB 在携程的全球化运用</h2><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4a/4acc4e1dec9a9e3423313c20d640a565.png\" /></p><p></p><p></p><p>随着携程近年来开始走向海外，海外业务呈现迅猛增长趋势。携程也将国内成熟的数据库技术直接用于海外。目前，TiDB 在携程的国内和海外业务是分开部署的，海外应用复用了国内的 schema 和代码，监控告警方式也与国内保持一致，部署方式也是相同的。</p><p>&nbsp;</p><p>携程引入 TiDB 并完成了一系列内部生态整合，包括发布系统（如表结构发布、索引发布）、数据修改和查询等。由于 TiDB 和 MySQL 采用了相同的协议，整合过程相对简单平滑：</p><p>TiDB 原生支持 Prometheus + Grafana，提供了丰富的诊断数据，可以根据 TiDB 故障诊断手册快速定位问题。由于 Grafana 的数据在每个集群上单独分布，携程通过prometheus 源生remote write转发性能数据到携程统一监控平台，以便在监控平台上进行性能告警和大盘监控。</p><p>&nbsp;</p><p>目前，携程已经顺利完成从 SQL server 到 TiDB 的迁移，稳定应用于携程的国内、海外各业务场景中，借助 TiDB HTAP 能力，携程大幅提高了查询性能，实现海量数据的高效存储。</p><p>&nbsp;</p>",
    "publish_time": "2023-04-12 10:10:04",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "如何解决云服务海量数据挑战？ | 技术出海案例故事之vivo x TiDB",
    "url": "https://www.infoq.cn/article/zy2eQoRFqg01d8seZj48",
    "summary": "<p>vivo 是一家全球性的移动互联网智能终端公司，品牌产品包括智能手机、平板电脑、智能手表等&nbsp; ，截至 2022 年 8 月，已进驻 60 多个国家和地区，全球用户覆盖 4 亿多人。</p><p>&nbsp;</p><p>vivo 为用户提供了在手机上备份联系人、短信、便签、书签等数据的能力，底层存储采用 MySQL 数据库进行数据存储。随着 vivo 业务发展，用户量增长迅速，存储在云端的数据量越来越大，海量数据给后端存储和数据库带来了巨大的挑战。云服务业务最大的痛点，就是如何解决用户海量数据的存储问题。</p><p></p><h2>vivo 数据库与存储体系</h2><p></p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/3f/3fb3cb035893997e4e083f10c6c847c4.png\" /></p><p>vivo 数据库与存储体系产品矩阵</p><p>&nbsp;</p><p>在整个 vivo 云服务体系中，数据库与存储处于核心位置，从体系上可以分为两层，最上面一层是工具产品层，包含数据库存储统一管控平台、数据传输服务（支持数据同步、数据订阅、数据迁移等）、运维白屏化工具等。下面一层是数据库产品层，这一层又分为三个部分：一部分是 MySQL、 TiDB 等关系型数据库；一部分是 Redis、ElasticSearch、MongoDB、磁盘 KV 等非关系型数据库；还有一部分是对象存储、文件存储、块存储等存储服务。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/dd/dd04ef84d283e9677c3f42450d9715bf.png\" /></p><p>vivo 数据库与存储运营管理</p><p>&nbsp;</p><p>为了管理这些众多的数据库与存储产品，vivo 打造了一个数据库与存储运营管理平台，主要分为三层架构：</p><p>最底层是支撑、管理所有数据库的工具产品，包含数据存储服务、关系型数据库、NoSQL 数据库，以及生态工具； 中间是功能层，包括基础存储服务、数据管理服务，以及存储自治服务；最上面是运营层，包括权限账单、用户管理、工单服务等基础服务。同时还有一些安全相关服务，如数据脱敏、数据加密、权限管控、命令通道、数据审计等一系列功能。</p><p>&nbsp;</p><p></p><h2>TiDB 在 vivo 的落地实践</h2><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f1/f1d7bb44cc112919fb0e445485819fba.png\" /></p><p></p><p>此前，vivo 已经用了很多年关系型数据库 MySQL。基于原生的 MySQL 数据库，vivo 结合集群高可用的管理与数据库代理的一体化架构，通过域名服务、名字服务进行接入，提供通用的关系型数据库服务。它主要具有三大核心能力：</p><p>第一，兼容 MySQL 协议与 SQL 语法；第二， 增强 MySQL 集群管控能力。vivo 引入 MySQL 的时间很早，在 MySQL 的一些集群管控能力上都有自研的能力；第三，安全增强能力，包括密码管理、数据脱敏、数据加密等能力。</p><p>&nbsp;</p><p>本质上 MySQL 架构还是一个主从架构，并没有分布式技术引入。针对数据量较大、流量较大的场景，或者分析场景，给业务带来了巨大挑战。基于以上原因，vivo 在对比了主流分布式数据后后考虑引入分布式关系型数据库TiDB，作为关系型数据库产品矩阵的一环，补充整个关系型数据库的能力。</p><p>&nbsp;</p><p>引入TiDB 帮助 vivo 解决了一些在 MySQL 生态中无法解决的问题：</p><p>TiDB 可以解决数据量过大、流量过大的问题，以及海量数据分析的场景；TiDB 兼容MySQL语法，业务迁移比较平滑；TiDB 支持水平扩展，相比传统的 MySQL 复杂的分库分表方式，TiDB 的扩展能力大大降低了运维压力；TiDB 具备数据强一致性、高可用性，可以提供金融级数据安全性。</p><p>&nbsp;</p><p>vivo 研发团队具有较强的自研能力，他们将内部所有数据库统一实现了平台化管理，这是一种提供高度自助、高度智能化、高可用、低成本的数据存储使用与管理平台，包含从数据库服务的申请、部署、维护、变更、优化，以及数据恢复、服务下线等一系列数据库全生命周期的管理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/91/91a9bdcb428373c359a6ca166509c7a8.png\" /></p><p></p><p>在应用 TiDB 后，vivo 研发团队同样也将 TiDB 集成到该平台中，实现诸如 TiDB 的自动化部署、服务维护、数据变更、数据恢复，包括一些还在持续建设中的能力，如服务优化、服务变更。这些能力与 vivo 的全球化业务场景息息相关。全球化业务场景要求更好满足于本地客户服务，以及符合本地数据安全相关的一些管理规范。所以 vivo 的服务都是本地化部署，平台化的管理方式可以帮助运维、研发更好地支撑业务研发或者业务变更的效率。</p><p>&nbsp;</p><p>该平台一方面提升了 vivo 整个数据服务的安全性，如账号密码管控、敏感数据加密脱敏、集成的研发效能等。在业务开发团队需要一个 TiDB 服务的时候，几分钟内就能得到一款分布式数据库进行代码开发，降低了运维管理成本；运维（DBA）再也不需要登陆服务器执行各种涉钥命令；最后，平台也大大提升了数据的可用性。vivo 数据库团队将一些 TiDB 的备份恢复工具及数据库的可用性也集成在平台里。</p><p>&nbsp;</p><p></p><h2>应用场景</h2><p></p><p></p><h3>推送业务基于 TiDB 的海量数实时 OLAP 方案</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/09/093e8a21194166cd6d0f845be5d98928.png\" /></p><p></p><p>vivo 的推送业务基于 TiDB 实现了一套实时 OLAP 方案。该场景中具有千亿级别的数据指标，vivo 希望数据在数据指标写入时可以实现秒级入库。同时，该场景还要求以月度为范围秒级出报表。原方案中使用了其他 OLAP 数据库方案或 MySQL 方案，在出报表时总会给数据库集群服务造成很大压力，指标的计算性、时效性也很差。尤其当面临海量数据时，查询与指标变更成本会变得很高。引入 TiDB 后，vivo 可以从实时链路里直接把数据秒级写入，再通过 DM 工具，把关系型数据库里面维度的数据，以及其他相关联的数据都同步过来，最终在 TiDB 中进行多表关联，为最终用户提供数据服务，如 BI 报表等。在该场景中，TiDB 的高性能、低延时等特性解决了 vivo 数据量大、时效性高等难题。</p><p>&nbsp;</p><p></p><h3>云服务业务基于 TiDB 的海量元数据管理方案</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f6/f67c2c083bd798e8d4c362a3166e51d3.png\" /></p><p></p><p>vivo 云服务是 vivo 为用户提供的在手机上进行数据备份、数据恢复同步的一款服务。这款服务用到了对象存储与文件存储，同时有大量的元数据需要存储。原方案使用了 MySQL 分库分表的方式，但 MySQL 实际上还是一个单集群方案，分库分表的业务逻辑需要在业务层实现，这就需要解决复杂的业务逻辑问题。同时，分库分表造成运维十分困难，扩容成本高、扩容耗时间长。基于以上原因，vivo 基于 TiDB 实现了一套海量元数据管理方案，支撑了 vivo 百亿级别的元数据表和日志数据表存储，核心业务时延小于 50ms。</p><p>&nbsp;</p><p></p><h3>基于 TiKV 自研的 NoSQL 数据库实践</h3><p></p><p>&nbsp;</p><p>由于 TiDB 整个产品都采用开源的模式，vivo 并没有满足于只作为 TiDB 的使用者，还基于 TiDB 的底层存储引擎 TiKV 自研了一款 NoSQL 数据库，希望能够实现一个高性能的、高稳定的多数据模型的分布式数据库，用以服务内部大数据量存储场景，降低整体数据库的运营成本，同时还针对一些 AI 特殊业务场景的应用进行定制优化。</p><p>&nbsp;</p><p>在此之前，vivo 的 NoSQL 数据库产品矩阵中 KV 产品实际上只有 Redis，但 Redis 是基于内存的存储，性能虽然很好，但存在数据无法持久化及成本高等问题。基于此，vivo 基于 TiKV 研发了自己的 NoSQL 数据库。它兼容 Redis 协议，能够以很低的成本进行迁移，可以持久化大规模存储 TB 级别，甚至 PB 级别数据，还具备高性能、水平扩展、高效故障切换、数据安全保证一致性等特点。之所以能做到这些，很大程度上是因为 TiKV 原本就具备了很好的能力，如存储引擎水平扩展能力、高效故障切换能力、数据安全保证能力等。目前，这款 NoSQL 数据库已经在 vivo 内部的推荐平台、内部管理平台、应用中心中应用。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d2/d2301b30b11438b566592b7421734fcd.png\" /></p><p></p><p>通过引入 TiDB ，vivo 解决了原 MySQL 架构无法应对数据量大、流量大等挑战，优秀的水平扩展能力及高可用特性支撑了 vivo 百亿级别的元数据表和日志数据表存储，核心业务时延不到 50ms 。同时，TiDB 的实时 HTAP 能力还帮助 vivo 解决了报表时效性问题。未来，vivo 还将持续在内部混合云中云化 TiDB 产品，将 TiDB 全生命周期的各个能力，在 vivo 内部云上实现出来，支持更多的业务场景。</p>",
    "publish_time": "2023-04-12 10:10:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "如何降低架构复杂性，保障全球900万用户安全可靠投资？ | 案例故事之老虎国际 x TiDB",
    "url": "https://www.infoq.cn/article/32Tldt5xzGylfBULalaF",
    "summary": "<p>券商是一个古老的行业，发展至今已经历了三个时代：第一代券商为传统券商，在线下交易大厅进行买卖；第二代券商开始了电子化进程，从线下到线上进行了浅层服务的转移，改善了用户体验，提高了金融服务的效率；第三代券商更多强调“科技赋能”，在功能业务上更创新、更多样，且存在完整的互联网基因，业务依靠线上平台，拥有底层自研能力，如交易、风控等系统。</p><p>&nbsp;</p><p>老虎国际作为第三代券商的代表，是一家全球知名的国际化券商，在新加坡、美国、中国香港、澳大利亚等地持有 59 张牌照或资质，在全球多地展业。投资者在老虎国际可通过一个账户交易美股、港股、A 股（沪港通/深港通）、星股（新加坡股）、澳股（澳大利亚股）、期货、基金等全球主要市场的金融产品，享受一流的投资体验。</p><p>&nbsp;</p><p>老虎国际自主研发的交易平台 TigerTrade，累计交易规模在三年内突破 10000 亿人民币，创下互联网券商冲击万亿交易规模最短用时。2019 年 3 月，老虎国际在美国纳斯达克挂牌上市，目前拥有全球近 900 万用户，年交易规模超 2000 亿美元。</p><p></p><h2>业务挑战</h2><p></p><p></p><p>作为一家全球化的券商，每个国家证券行业发展情况不同，数据合规要求也存在差异，比如新加坡有 PDPA，欧盟有 GDPR，美国有 CCPA 等，甚至不同国家业务特点也大为迥异。在每个国家/地区都本地部署业务系统显然并不现实，老虎国际采用跨地区的混合云架构为全球用户提供支撑，解决在数据架构、数据安全、数据合规等方面所面临的的全球挑战。</p><p>&nbsp;</p><p>同时，老虎国际的数据架构复杂度非常高，底层系统包含 Java、Python、Go 等不同的语言，中间件、数据库、大数据等都是异构场景，导致维护成本和研发效能都大打折扣。</p><p>&nbsp;</p><p>此外，在老虎国际证券业务发展过程中，业务波动性是常态，这也使得其核心业务--后台账本系统，经常面临数据库的性能挑战。后台账本是用户在老虎国际参与证券交易时，如产品购买、出入金、IPO 打新、公司行动、被收费等各个业务版块，针对用户行为明细数据记录的系统。账本每天需要记录大量的用户流水，并根据用户行为生成用户每日账单。如果账本出现问题，直接关系到用户体验和投资收入。</p><p>&nbsp;</p><p>2020 年 3 月，美股遭遇了前所未有的震荡，开盘即暴跌，触发一级熔断机制，暂停交易 15 分钟。老虎国际的数据库也经历了前所未有的数据查询量，查询数量曲线呈指数级增长，原有的 MySQL 遇到了极大瓶颈。证券交易还要求数据库具有金融级数据强一致性，并具备灾备能力，一旦某个机房宕机，另一个机房可以立刻启用。</p><p>&nbsp;</p><p>数据安全性、数据可用性和数据架构复杂度成为老虎国际国际化业务的三大挑战。出于对开源技术的信任和认同，老虎国际很早就在数据中台业务中应用了 TiDB 3.0 版本，此后一路升级到 TiDB 5.0，解决了业务挑战与数据安全挑战。</p><p>&nbsp;</p><p></p><h2>后台账本数据库迁移</h2><p></p><p>&nbsp;</p><p>老虎国际的后台账本底层数据架构由多套集群组成，单集群数据量接近 2TB，MySQL 数据库虽然具有较好的稳定性和负载能力，但为了应对不断增长的数据量只能采取分库分表方案，难以保证跨分片的事务一致性，跨库的 Join 关联查询性能较差，数据库多次扩展难度和维护量极大。2021 年，老虎国际的运维与研发团队对主流的冷热数据分离、分库分表、分布式数据库等方案进行选型与性能压测。在压测中，TiDB 在 P95 延迟、TPS 事务指标、QPS 等方面整体性能都强于 MySQL，并且 TiDB 的性能可以随着节点水平扩展线性提升，解决性能和单机资源瓶颈问题。压测增强了老虎国际技术团队的信心，最终决定将后台账本的 MySQL 集群也迁移到分布式数据库 TiDB 上。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/79/79c5b1460297704d6f5c4a4fffa3c210.png\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/24/24d83157d79fc1497994a85a03b30252.png\" /></p><p></p><p>由于 TiDB 拥有非常丰富的生态组件，整个迁移过程十分顺利。为了保障业务稳定，老虎国际采用了新旧数据库同时写入的方式，通过 DM 将 MySQL 数据同步至 TiDB 集群，逐渐切换一部分读流量到 TiDB，整个迁移历经近 3 个月，最终全部切换到 TiDB。同时，老虎国际也制定了“逃生方案”，通过 TiCDC 将数据同步到下游的一个 MySQL 集群，一旦发现 TiDB 有问题可以随时切换。在经过半年多业务的考验后，最终技术团队将该 MySQL 集群关闭。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a9/a9e97af3efd41aa8a3410cf82e726542.png\" /></p><p></p><p></p><p>由于不同国家对于监管、数据可用性，以及 SLA（服务级别协议）要求非常高。在同城，老虎国际还利用 TiDB 的灾备架构，通过 TiCDC 在灾备机房部署了一个 TiDB 集群作为灾备方案，当主机房发生故障时，服务器负载均衡自动切换到备用机房，保证数据服务高可用，整体延迟达到分钟级甚至更低。</p><p>&nbsp;</p><p></p><h2>为什么选择 TiDB？</h2><p></p><p>&nbsp;</p><p>对于券商而言，数据处理速度与成本是紧密相关的。MySQL 的分库分表维护成本较高，对业务的限制也比较多。而 TiDB 的分布式架构无需分库分表，大大简化技术栈，降低了运维难度，通过在线水平扩展有效解决底层数据存储扩容难题；TiDB 的金融级高可用特性，可靠的灾备、数据恢复方案保障了老虎国际证券业务稳定运行；同时，TiDB 高度兼容 MySQL，有着成熟的 MySQL 迁移方案，研发侧大部分代码无需改动，即可顺利完成整个迁移工作，大大降低迁移成本。</p><p>&nbsp;</p><p></p><h2>业务收益</h2><p></p><p>&nbsp;</p><p>现在，老虎国际的数据架构整体可以分为三部分：第一，将分布在各业务系统甚至 APP 内的数据进行收集；第二，进行数据处理；第三，将数据持久化存储。非敏感数据通过 DM 和 CDC 快速同步到 TiDB，敏感数据通过 Flink 进行脱敏后输入 TiDB，利用 TiDB HTAP 的能力构建数据中台和实时数仓，既保证 OLAP 查询时系统的稳定性，又保证 OLTP 的快速分析，两者同时存在又保证隔离，兼顾安全和稳定。最后，老虎国际还将 TiDB 作为类似数据湖的概念提供数据源给下游的 HDFS 使用，对外提供更多数据服务。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/37/37c2651e509529dc6a73eb41bcf5ff52.png\" /></p><p></p><p>从前，老虎国际的数仓只能满足 T+1 的数据分析，通过 TiDB ，老虎国际实现了实时同步、实时分析，将延迟降低到了 5 秒钟；同时，TiDB 的性能实现了比较快的数据接入，之前 Hbase 中只有 4,000+ 表，TiDB 目前已经达到 80,000+ 表；此外，使用 TiDB 后，老虎国际将数据的全量同步变成增量同步，极大减少了网络带宽压力。 TiDB 统一了两个大数据分析场景，提升了易用性，并节省了 40% 的资源，实现了降本增效。</p>",
    "publish_time": "2023-04-12 10:11:53",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "成长、转型与创业，探讨技术人成长的秘诀 | ArchSummit",
    "url": "https://www.infoq.cn/article/xW8ovkePNf9U1uqqUYy2",
    "summary": "<p>好多技术同学都会有同样的困惑，特别是在中国这个环境下，技术人的发展路径有没有统一的模式，在技术上该如何提升，在管理上该如何转变？在<a href=\"https://archsummit.infoq.cn/202304/shanghai/schedule\">ArchSummit全球架构师峰会（上海站）</a>\"上，我们策划了【技术人成长】专题，本专题就围绕个人发展的技能图谱，找到属于自己的路。</p><p>&nbsp;</p><p>为了保证专题的分享质量，我们邀请了携程大住宿研发部研发总监<a href=\"https://archsummit.infoq.cn/202304/shanghai/track/1504\">顾佳璐</a>\"，担任专题出品人。在此专题下，一共有四个分享，具体如下：</p><p>&nbsp;</p><p>邹娟，阿里巴巴资深技术专家，分享主题为“在变化中抽象不变：技术变局下的架构师升级之想”。她将会分享技术变革对架构师工作的影响，抽象思维的重要性，建立思考体系，不断学习和实践等内容。听众将会了解如何建立思考体系，提升工作成绩。顾钧，EMQ开源社区运营总监，分享主题为“开发者社区运营，工程师修炼的另一条路径”。他将会分享软件业务模式变革带来的挑战与机遇，工程师如何适应软件业务模式变革带来的挑战等内容。听众将会了解进一步提升自己的可能路径。郝峻晟，晟云磐盾信息技术（上海）有限公司总裁，分享主题为“技术人如何走上创业之路，实现人生价值”。他将会分享优秀的架构师VS优秀的创业者或管理者、用云原生的架构来设计敏捷的现代组织、架构师如何成为创业者或企业管理者等内容。听众将会了解云原生的架构设计、现代化敏捷的组织。李军，千鸟集团CTO，分享主题为“技术成长的底层逻辑和N个坑”。他将会分享程序员到架构师、再到技术总监和CTO所需要掌握的技能和能力、技术人成长中容易遇到的误区等内容。听众将会了解学些架构师思维和认知方法论、了解如何把握每个阶段的技术成长机遇、思维认知与提升、快速适应晋升后的角色转变等。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c1/c171fbf3d56650bbb88c56388a7631cc.png\" /></p><p></p><p>活动推荐：</p><p>在4月21-22日，InfoQ即将在上海举办一场ArchSummit，内容涵盖人工智能前沿技术、<a href=\"https://archsummit.infoq.cn/202304/shanghai/track/1503\">AIGC应用探索</a>\"、金融业数字化转型探索、架构标准化和质量评估、大数据+架构、DataOps落地实践、ToB软件质量保障、制造业数字化转型架构创新、架构师成长、以及企业架构演进、数字化转型下的应用现代化、架构稳定性保障等专题。可扫码下方海报了解更多...</p><p><img src=\"https://static001.infoq.cn/resource/image/0e/e3/0ec0e6b9480f72d35f1495fe39ed74e3.jpg\" /></p><p></p><p></p>",
    "publish_time": "2023-04-12 12:01:18",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "“心机boy”马斯克：明面上呼吁暂停先进AI研发，背地里悄悄买1万块GPU推进大模型项目",
    "url": "https://www.infoq.cn/article/oajLcUpF45Vk3L68KDTZ",
    "summary": "<p></p><blockquote>现在来看，彼时的集体呼吁更像是一场“暗渡陈仓”的缓兵之计。</blockquote><p></p><p></p><h2>为了研发自家AIGC，马斯克狂买GPU并四处挖人</h2><p></p><p>&nbsp;</p><p>当地时间4月11日，据多家外媒报道，尽管高调建议在整个行业范围内停止AI训练，但伊隆·<a href=\"https://www.infoq.cn/article/Sktl2hsqUBygTlDGRzOI\">马斯克</a>\"本人倒是在Twitter内启动了新的重大AI项目。</p><p>&nbsp;</p><p>据Business Insider报道，Twitter公司已经采购约1万块GPU，并从DeepMind处招募到AI人才，打算开发自己的大语言模型（LLM）项目。</p><p>&nbsp;</p><p>一位知情人士表示，<a href=\"https://www.infoq.cn/article/5LYIHLWuPVU8btDrfBut\">马斯克的AI项目</a>\"仍处于初始阶段。但根据另一位消息人士的说法，采购大量算力表明他正努力推动项目发展。不过目前还不清楚Twitter这个生成式AI模型的确切用途，潜在方向可能包括改进搜索功能，或者生成针对性广告内容。</p><p>&nbsp;</p><p>Twitter具体采购了哪些硬件仍是个谜。但根据报道，尽管最近一段时间财务问题缠身，Twitter还是豪掷数千万美元购买GPU设备。这些GPU预计将被部署在Twitter剩余的两处数据中心之一内，其中亚特兰大数据中心的可能性更高。有趣的是，马斯克于去年12月下旬刚刚关闭了Twitter位于萨克拉门托的主数据中心，这显然压缩了公司掌握的算力资源。</p><p>&nbsp;</p><p>除了为生成式AI项目采购GPU硬件之外，<a href=\"https://www.infoq.cn/article/1vAhujTNDw65Wp6AOtV0\">Twitter</a>\"还在招聘更多工程师。</p><p>&nbsp;</p><p>今年早些时候，Twitter公司从Alphabet的子公司DeepMind处招募了工程师Igor Babuschkin和Manuel Kroiss。至少从2月开始，马斯克一直在积极物色AI领域的人才，希望与OpenAI的ChatGPT展开竞争。</p><p>&nbsp;</p><p>OpenAI使用英伟达的A100 GPU来训练其ChatGPT聊天机器人，并支撑其后续运行和推理。如今，英伟达已经推出了A100的后继产品，其H100 GPU能够在大致相同的功率下将性能提升几倍。Twitter在其AI项目中使用的可能正是英伟达Hopper H100或者类似硬件，但目前还没有明确证据。考虑到该公司尚未确定新AI项目的实际用途，所以也很难估计他们到底需要多少块Hopper GPU。</p><p>&nbsp;</p><p>像<a href=\"https://www.infoq.cn/article/3OOPEivwhT0gLcKP0Nwl\">Twitter</a>\"这样的巨头级企业采购硬件时，由于需求规模庞大，所以单位价格也将比较优惠。另外，如果单独从CDW等零售商处购买，目前英伟达H100的单价很可能超过1万美元。粗略估算，就能看出Twitter确实打算为自家AI项目砸下重金。</p><p></p><h2>带头呼吁暂停先进AI研发，可能只是缓兵之计</h2><p></p><p>&nbsp;</p><p>虽然马斯克购买了大量GPU试图偷偷训练自家先进AI，但在此之前，他却带头公开<a href=\"https://www.infoq.cn/article/sJSY1kx480W0StNrQHDH\">呼吁暂停研发先进AI</a>\"技术长达6个月。他和一众反对继续研发AI的业内大佬们给出的理由是：我们已经有了 GPT-4，现在应该先缓一缓，别急着搞出比它更强大的新型 AI 系统。</p><p>&nbsp;</p><p>当时，马斯克此举备受关注。因为一直以来，无论是钻研自动驾驶还是脑机接口，马斯克留给外界的印象是一位总能走在科技最前沿“钢铁侠”。公然反对更先进的 AI 的研发，不符合他的一贯作风。</p><p>&nbsp;</p><p>有媒体报道，实际上，马斯克反对的不是 AI，而是 OpenAI 和 GPT。</p><p>&nbsp;</p><p>马斯克不仅是生命未来研究所的最初发起人，也是 OpenAI 公司的联合创始人之一。但他在 2018 年离开了 OpenAI 的董事会，并撤销了一大笔赞助款。</p><p>&nbsp;</p><p>美国《财富》杂志当时报道称，离开的原因是因为马斯克虽然支持人工智能，但特斯拉智能驾驶技术与 OpenAI 之间有“潜在利益冲突”。</p><p>&nbsp;</p><p>还有报道称，马斯克在离开前提出过由他本人执掌 <a href=\"https://www.infoq.cn/article/g9tuoTODP20N1lTzjsjw\">OpenAI </a>\"运营的建议，但遭到了拒绝。这就不难理解，为什么离开 OpenAI 后，马斯克就一直将矛头对准 OpenAI 以及和它有关的一切。</p><p>&nbsp;</p><p>除了在公开场合发表言论攻击 OpenAI 外，马斯克还将手深入了 OpenAI 内部挖走他们的员工。2022 年离职的特斯拉自动驾驶主管 Andrej Kapathy 就是 OpenAI 最优秀的人才之一。</p><p>&nbsp;</p><p>有网友认为，上述举动表明，马斯克并不是真的反对更先进的 AI 技术，而是痛恨这项技术先入了别人之手，而自己只能成为旁观者。</p><p>&nbsp;</p><p>对于这次千人署名事件， 金沙江创投管理合伙人朱啸虎在朋友圈发表了自己的看法，“其实是为竞争对手争取时间，OpenAI 的迭代速度太快了。Google 的搜索比对手好 20% 就占据了 90% 的搜索市场份额。OpenAI 的影响会更广泛，所有的上层应用都希望使用优更强大 AI 赋能的云服务。更不用说微软本来就具有强大优势的前端 Office 应用。只能寄希望于 OpenAI 会像自动驾驶那样发展到某个阶段会遇到难以克服的瓶颈”。</p><p>&nbsp;</p><p>现在来看，彼时的集体呼吁更像是一场“暗渡陈仓”的闹剧，也是马斯克以及一众被OpenAI生态伙伴们甩在身后的科技巨头们的缓兵之计，毕竟签名者中就有正亲自参与 AI 模型研究和部署的人士，比如 <a href=\"https://www.infoq.cn/article/V24vD7kvHyuT3byVVObJ\">Stability AI</a>\" 的 CEO Emad Mostaque。该公司去年发布了文本到图像模型 Stable Diffusion。</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p>&nbsp;</p><p><a href=\"https://www.tomshardware.com/news/elon-musk-buys-tens-of-thousands-of-gpus-for-twitter-ai-project\">https://www.tomshardware.com/news/elon-musk-buys-tens-of-thousands-of-gpus-for-twitter-ai-project</a>\"</p><p><a href=\"https://futureoflife.org/open-letter/pause-giant-ai-experiments/\">https://futureoflife.org/open-letter/pause-giant-ai-experiments/</a>\"</p><p><a href=\"https://www.reuters.com/technology/musk-experts-urge-pause-training-ai-systems-that-can-outperform-gpt-4-2023-03-29/\">https://www.reuters.com/technology/musk-experts-urge-pause-training-ai-systems-that-can-outperform-gpt-4-2023-03-29/</a>\"</p>",
    "publish_time": "2023-04-12 13:31:10",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]