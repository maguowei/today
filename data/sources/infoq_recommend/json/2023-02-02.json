[
  {
    "title": "近80%的雇主提高工资，50%的员工“悄悄”离职，科技企业如何提高员工的留存率和绩效？",
    "url": "https://www.infoq.cn/article/fpr3EKR19VyTCEEk5w8q",
    "summary": "<p></p><h2>尽管经济存在不确定性，但劳动力市场竞争仍然激烈</h2><p></p><p>&nbsp;</p><p>这些数字是前所未有的。尽管美联储努力抑制通胀，但劳动力市场的竞争仍然异常激烈。截至2022年9月，仅在美国，<a href=\"https://www.uschamber.com/workforce/america-works-data-center\">每100个职位就有66名劳工的空缺</a>\"，美国的<a href=\"https://www.nytimes.com/live/2022/10/07/business/jobs-report-september-economy\">就业增长可能已经放缓</a>\"，失业率也有所下降，劳动力市场依然强劲。</p><p>&nbsp;</p><p>到目前为止，即使是经济的不确定性也未能让市场放松下来。尽管有一些<a href=\"https://www.businessinsider.com/layoffs-sweeping-the-us-these-are-the-companies-making-cuts-2022-5\">行业裁员</a>\"的消息，但预计明年美国劳动力市场整体上仍将持续吃紧。</p><p>&nbsp;</p><p>而且，员工们也并不害怕跳槽到能满足他们职业和生活目标的公司。根据Gartner的数据，人员流动率预计将比以往<a href=\"https://hbr.org/2022/07/its-time-to-reimagine-employee-retention\">高出50%到75%</a>\"。虽然这对员工来说看似不错，但这意味着留住员工必须是重中之重。即使你的公司计划裁员，也必须要留住你所需要的员工，以确保连续性，提高绩效，并做好经济恢复到稳定增长阶段后的增长准备。</p><p>&nbsp;</p><p></p><h2>未来的工作意味着企业必须降低离职率</h2><p></p><p>&nbsp;</p><p>离职率高的公司（尤其是顶尖人才离职率高的公司）的本能反应是加薪、增加福利，或两者兼而有之。 让我们来分解一下。</p><p>&nbsp;</p><p></p><h3>单靠提高基本工资并不能解决问题</h3><p></p><p>&nbsp;</p><p><a href=\"https://www.bls.gov/opub/ted/2022/consumer-prices-up-9-1-percent-over-the-year-ended-june-2022-largest-increase-in-40-years.htm#:~:text=Consumer%20prices%20up%209.1%20percent,U.S.%20Bureau%20of%20Labor%20Statistics\">随着通货膨胀率达到40年来的最高水平</a>\"，员工们的家庭预算受到了冲击。因此，企业自然会把提高基本工资作为首要任务。</p><p>&nbsp;</p><p>这次冲击有两个问题。首先，在不确定的经济时期，削减预算可能意味着没有钱加薪。通常，工资率是预算中第一个要削减的，因为每一笔支出都必须要有同等的价值。</p><p>&nbsp;</p><p>其次，仅2022年的大幅加薪对遏制离职率几乎没有作用。根据加Gallagher关于职业幸福的“2022年劳动力趋势报告”，近80%的雇主提高了基本工资，但<a href=\"https://www.bls.gov/news.release/jolts.t04.htm\">离职率</a>\"几乎没有变化。</p><p>&nbsp;</p><p></p><h3>疫情前的津贴不再有效。幸福和抑制通胀的福利已经成为组织的必备条件。</h3><p></p><p>&nbsp;</p><p>很明显，在2021年，疫情前的津贴，如桶装啤酒和乒乓球桌等，对求职者来说不再感兴趣。越来越多的组织转而寻求新的幸福和抑制通胀的福利。最近对708家公司进行的<a href=\"https://hrexecutive.com/among-the-top-2023-benefits-trends-affordability-and-family-support/\">一项调查发现</a>\"，超过三分之二的美国雇主希望在2023年提高福利待遇。金融服务集团<a href=\"https://www.limra.com/en/\">LIMRA</a>\"的数据显示，60%的雇主正在考虑在未来两年内增加新的保险福利。</p><p>&nbsp;</p><p>在可能的情况下，雇主正在努力遏制员工分摊成本的增加，并引入新的方法来确保使用健康福利。</p><p>&nbsp;</p><p></p><h3>其他潜在原因</h3><p></p><p>&nbsp;</p><p>即使是新的福利计划也不一定能改变离职率。<a href=\"https://www.pewresearch.org/fact-tank/2022/03/09/majority-of-workers-who-quit-a-job-in-2021-cite-low-pay-no-opportunities-for-advancement-feeling-disrespected/\">2022年3月皮尤研究中心的一项研究表明</a>\"，单靠福利不足以阻止离职。</p><p>&nbsp;</p><p>在离职的员工中，63%的人表示他们看不到晋升机会，57%的人表示在工作中感到不受尊重。在那些家中有18岁以下孩子的人中，48%的人表示育儿问题是问题所在。同样，45%的人表示，他们的离开是因为工作时间缺乏灵活性，43%的人离开是因为没有带薪休假时间。</p><p>&nbsp;</p><p>微软的“<a href=\"https://www.microsoft.com/en-us/worklab/work-trend-index/great-expectations-making-hybrid-work-work\">2022年工作趋势指数</a>\"”也凸显出了对领导缺乏信心，以及对个人幸福感的担忧。</p><p>&nbsp;</p><p></p><h3>原地离职</h3><p></p><p>&nbsp;</p><p>由于对未来的不确定性，一些员工对就业市场采取观望态度。这意味着他们虽仍在工作岗位上，但会降低绩效和生产力。根据Gallup的说法，这种“悄悄离职”可能会影响到50%的员工。这意味着一旦经济趋于平衡，生产力将面临风险，离职率可能会继续上升。</p><p>&nbsp;</p><p></p><h2>招聘时，留住新人才可能会很困难</h2><p></p><p>&nbsp;</p><p>伴随“大洗牌”而来的是“大遗憾”。<a href=\"https://www.cnbc.com/2022/03/02/72percent-of-young-workers-say-theyve-regretted-a-new-job-after-starting.html\">The Muse</a>\"最近对2500多名千禧一代和Z世代求职者进行的一项调查显示，<a href=\"https://www.themuse.com/advice/shift-shock-muse-survey-2022\">72%的跳槽者</a>\"感到惊讶或后悔。为什么呢？他们觉得被骗了。</p><p>&nbsp;</p><p>在进入一个新的岗位后，他们发现这份工作或公司与他们在招聘过程中所认识到的大不相同。</p><p>&nbsp;</p><p>当远程工作、预期工作时间、文化困难和管理风格等情况与描述不符时，20%的年轻员工表示，如果情况没有好转，他们会在一个月内离职，另有41%的人会在四到六个月内离职。</p><p>&nbsp;</p><p>招聘、培养、面试和入职的所有辛勤工作都会付诸东流，这个过程必须重新开始，这既浪费了雇主的时间和金钱，又降低了生产力。</p><p>&nbsp;</p><p></p><h2>有人说，解决方案是将员工与目标联系起来</h2><p></p><p>&nbsp;</p><p>最近的头条新闻都在大声疾呼，工人们要求与目标挂钩。<a href=\"https://www.mckinsey.com/business-functions/people-and-organizational-performance/our-insights/the-great-attrition-is-making-hiring-harder-are-you-searching-the-right-talent-pools?stcr=BA9E07F88B58440CA852479B68C7D145&amp;cid=other-eml-alt-mip-mck&amp;hlkid=6dc9c39157a549738fe86850eb72bd36&amp;hctky=13315742&amp;hdpid=a20583c7-6cd9-4f76-aa3c-adbed6fc7a04\">麦肯锡</a>\"的数据也支持这一点。调查显示，31%的人离职是因为缺乏有意义的工作。这使得各组织争相更新他们的使命宣言，制定更广泛的组织目标战略，并就组织目标进行培训。</p><p>&nbsp;</p><p>但是，仅仅重新设计你的使命和愿景宣言就足以提供有意义的工作吗？</p><p>&nbsp;</p><p>答案是否定的。</p><p>&nbsp;</p><p>让我们从定义“有意义的工作”开始。斯坦福大学的一份<a href=\"https://www.gsb.stanford.edu/faculty-research/publications/job-crafting-meaningful-work\">研究出版物</a>\"将有意义的工作定义为“员工认为重要的工作，因为它服务于一个重要的目标”。要想获得成功并从一开始就推动员工留存率，组织必须能够个性化并将意义与要完成的工作联系起来。这从招聘过程的开始时就开始了。组织必须将每个职位和每个求职者赋予个性化的意义和使命。</p><p>&nbsp;</p><p></p><h2>留住员工可以更具策略性，并从招聘的透明度开始</h2><p></p><p>&nbsp;</p><p>当疫情结束，就业市场重新开放时，根本没有足够的劳工来填补空缺的工作岗位。招聘人员和招聘经理面临着巨大的压力，需要快速填补职位空缺。</p><p>&nbsp;</p><p>Muse的首席执行官兼创始人<a href=\"https://www.cnbc.com/2022/03/02/72percent-of-young-workers-say-theyve-regretted-a-new-job-after-starting.html\">Kathryn Minshew</a>\"是这样解释的：随着公司迫切需要招聘，人力资源专业人员捉襟见肘，招聘人员可能会变得不择手段，夸大事实来填补职位空缺。或者，他们可能会说一些他们认为是真实的情况，但他们并不了解工作场所的全貌。</p><p>&nbsp;</p><p>她建议公司要诚实地讲述在那里工作的感觉，包括成功之处和需要改进的地方。面试应该是双向的，你必须要给求职者足够的时间来询问有关公司文化方面的问题。</p><p>&nbsp;</p><p>Minshew说：“当人们觉得自己已经睁大眼睛选择了一种情况时，他们更有可能接受它的好和坏，并表现出敬业、高效、满意的员工形象。”。</p><p>&nbsp;</p><p></p><h3>创建清晰准确的职位描述</h3><p></p><p>&nbsp;</p><p>比起空洞的使命宣言，如果从求职者第一次接触到你的雇主品牌，你就能够公开透明地将候选人与他们的个人目标联系起来，会怎样呢？</p><p>&nbsp;</p><p>要做到这一点，你必须清楚地了解你的职位描述和每个求职者的接触点。而不是列出一系列崇高的甚至是无法定义的术语，比如：</p><p>&nbsp;</p><p></p><blockquote>“招聘：具有5-7年SaaS经验的摇滚明星软件工程师，从事尖端产品开发工作，其使命是为不同的员工创造一个更美好的世界。我们寻找具有灵活技能的求职者，他们希望发展自己的职业生涯，并帮助客户拥有他们的未来。”</blockquote><p></p><p>&nbsp;</p><p>试试这个：</p><p>&nbsp;</p><p></p><blockquote>“我们的产品营销团队需要一名具有五到七年经验的软件工程师，以便快速加入并帮助完成前60天、90天和120天的产品更新。一旦这些项目完成，你就会完全融入团队，我们希望你能够创造性地推动团队，并将你的经验持续带入到未来的项目计划中。我们的团队充分协作，我们希望你能够以一种深思熟虑、以团队为中心的方式提供见解。这是一个展示你的经验和创造力的机会，并能帮助我们的产品变得更好。\"</blockquote><p></p><p>&nbsp;</p><p>通过将职位描述与实际工作的目标联系起来——完成产品更新并在未来的项目中协作——你可以更好地将求职者的期望与你需要他们完成的工作使命和目标联系起来。</p><p>&nbsp;</p><p></p><h3>提供明确的职业发展路径</h3><p></p><p>&nbsp;</p><p>寻求顶尖人才并希望留住人才的雇主需要提供明确的晋升途径。不幸的是，这个简单的修复方法经常被忽视。多年来，许多组织都秉承员工无论如何都会离职的理念，因此只提供工作，而不提供职业生涯，隐含的理解是，员工会一直工作，直到他们从一个职位上学会了他们所能学会的一切，厌倦了，或两者兼而有之，然后离开继续他们的职业生涯。</p><p>&nbsp;</p><p>但当你考虑到人员流动、技能损失和组织知识损失的成本时，很容易看出公司必须提供更多的东西。相反，对待职业要采取有组织的、基于技能的方法，并提供成长机会。要做到这一点，你必须要了解你的组织现在需要什么技能，未来又可能需要哪些技能。并且你必须要清楚地了解新员工如何从这里到那里，并为组织和求职者提供长期价值。</p><p>&nbsp;</p><p>一旦你了解了所需的技能集，现代招聘平台就可以帮助招聘人员根据特定的技能搜索求职者，甚至可以过滤掉与工作不太相关的标准，如性别、种族或学历。一些公司允许招聘团队通过使用布尔逻辑字符串来进行关键字搜索，以锁定特定的求职者技能集。</p><p>&nbsp;</p><p>使用电子邮件模板和编程序列等正确的技术可以帮助招聘人员在不牺牲数量的情况下采用个性化的方法。这一点至关重要，因为根据hireEZ的“2022年境外招聘状况”报告，五分之一的企业组织招聘人员表示，他们一次会同时管理多达50份或更多的求职申请。一些软件甚至提供分析，帮助招聘人员衡量敬业度，以更好地了解能哪些信息与求职者产生共鸣，从而让他们能够创建一个更能与求职者建立更深层次联系的对话。</p><p>&nbsp;</p><p>这样做的最终目的是为了促进与更高质量的求职者进行更好的对话。为了支持这种方法，招聘人员应该问这样的问题：在接下来的两年里，你想要获得什么技能？你想从事什么类型的工作？你是否有想要争取的头衔或角色？</p><p>&nbsp;</p><p>然后将这些答案与组织的需求联系起来，并对能将他们带到哪里的个人成长，以及可以预期的附加值（比如薪酬、自主权或地位的提高）建立明确的预期。</p><p>&nbsp;</p><p></p><h2>将求职者与相关的、个性化的任务联系起来，从一开始就可以提高留存率</h2><p></p><p></p><p>无论经济前景如何，留住员工都是组织健康的关键。这在劳动力市场上变得更加重要，因为劳动力市场的劳工更少，对突出技能的需求也更高。这就是招聘的关键所在。</p><p>&nbsp;</p><p>招聘人员从一开始就在培养敬业度和留住员工方面发挥着关键作用。通过用清晰透明的信息吸引合适的求职者，通过与目标的个性化联系来大规模培养求职者，并提供基于技能的对话来解释求职者的未来之路，你可以为长期的组织健康建立一条完美的路径，并在紧张的劳动力市场中赢得短期的胜利。</p><p></p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/employee-retention-recruiting/\">https://www.infoq.com/articles/employee-retention-recruiting/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://xie.infoq.cn/article/50a6188f339d482398b1b304f\">如何应对核心员工提离职？</a>\"</p><p><a href=\"https://xie.infoq.cn/article/45b8cebdb4d7c42347d1a7a34\">离职交接，心态要好</a>\"</p><p></p>",
    "publish_time": "2023-02-02 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "“杀猪盘”APP成功潜入苹果和谷歌应用商店",
    "url": "https://www.infoq.cn/article/q48yZJQL8JhVZ4YCwKf5",
    "summary": "<p>&nbsp;</p><p>当地时间2月1日，安全公司 <a href=\"https://news.sophos.com/en-us/2023/02/01/fraudulent-cryptorom-trading-apps-sneak-into-apple-and-google-app-stores/\">Sophos 的研究人员</a>\"表示，他们<a href=\"https://www.infoq.cn/article/e5JQptqbfFE8hOmzgNXi\">在苹果和谷歌的应用商店</a>\"中发现了“杀猪盘”App。这些“杀猪盘”App经过精心设计，欺骗人们将大笔资金投入虚假投资骗局。</p><p>&nbsp;</p><p>Sophos以诈骗团伙 CryptoRom 为例介绍了诈骗过程。欺诈者在与受害者通过约会应用程序（Facebook 和 Tinder）接触并培养“感情”，然后他们被要求转移到 WhatsApp。建立了比较融洽的关系后，诈骗者称自己的亲戚在某个金融分析公司工作，并邀请受害者一起进行加密货币交易。此时，诈骗者会向受害者发送一个指向 Apple 应用商店的假冒应用程序链接，并指导受害者如何开始使用该应用程序进行“投资”：诈骗者让受害人将资金转移到 Binance 交易所，然后从 Binance 转移到假应用程序。</p><p>&nbsp;</p><p>最初，受害者能够提取少量加密货币。但当受害者之后想要提取更多金额时，账户就被锁定了，并通过应用程序中的“客户支持”聊天被告知需要支付 20% 的费用才能继续访问。</p><p>&nbsp;</p><p>Sophos 表示，此前，诈骗者为了诱导受害人安装App需要说服他们安装配置文件以启用应用程序安装。但最近诈骗者使用的应用程序已成功放入 <a href=\"https://xie.infoq.cn/article/f75bb963c5414edde2ea901fe\">Apple App Store</a>\"，大大减少了将应用程序安装到受害者设备上的步骤。</p><p>&nbsp;</p><p>Sophos 检查出的第一个“杀猪盘”App与加密货币无关，而是一款名为“Ace Pro”的应用，其在应用商店中的描述为“二维码检查应用”。这类应用程序都成功通过了苹果 App Store 的审核流程。</p><p>&nbsp;</p><p>据悉，所有通过 App Store 安装的应用程序都必须由开发人员使用 Apple 提供的证书进行签名，并且必须经过严格的审查程序以验证它们是否遵循 App Store指南。如果犯罪分子能够通过这些检查，他们就有可能侵入数百万台设备。</p><p>&nbsp;</p><p>那它们是如何绕过审核的呢？Sophos 发现，它们都使用远程内容来提供其恶意功能——这些内容可能在 App Store 审查完成之前一直被隐藏起来。</p><p>&nbsp;</p><p>在 Ace Pro 应用程序案例中，恶意开发人员在应用程序中插入了与 QR 检查相关的代码和其他 iOS 应用程序库代码，以便让审核者误认为其是合法的。但是当应用程序启动时，它会向亚洲注册域 (rest[.]apizza[.]net) 发送请求，该域会使用来自另一个主机 (acedealex[.]xyz/wap) 的内容进行响应。正是这种响应机制提供了虚假的 CryptoRom 交易界面。犯罪分子很可能在应用程序审查时使用了看起来合法的网站进行响应，然后切换到 CryptoRom URL。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/65/65fc6c5a0f2f88bb20ad85b92e75c15b.png\" /></p><p></p><p>&nbsp;目前，苹果和谷歌都已经删除了Sophos 报告的“杀猪盘”应用程序。</p>",
    "publish_time": "2023-02-02 10:46:18",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "更高性能表现，一文解读高精度计算数据类型 DecimalV3",
    "url": "https://www.infoq.cn/article/RlLFaVQcjSMah4MuBZcX",
    "summary": "<p>数值运算是数据库中十分常见的需求，例如计算数量、重量、价格等，为了适应多样化运算场景，数据库系统通常支持精准的数字类型和近似的数字类型，当我们需要精确地表示小数并计算小数时，通常会考虑使用 Decimal 数据类型。区别于浮点小数，Decimal 作为定点小数类型，可以支持高精度的小数运算，因此适用于各种高精度计算的场景，常见的应用场景有以下几种：</p><p></p><p>金融行业：在金融交易中经常涉及到小数，比如利息、金额的计算，金融场景对数字准确的要求极高，因此精确的小数运算是必要的。财务软件：财务软件通常需要进行复杂的财务计算，Decimal 类型可以提供精确的小数计算，避免计算过程中产生的舍入误差。科学计算、工程计算等其他场景。</p><p></p><h3>DecimalV3 功能介绍</h3><p></p><p></p><p>在 <a href=\"https://github.com/apache/doris\">Apache Doris</a>\" 1.2.1 之前的版本中，我们已对 Decimal(precision, scale)(precision&lt;=27) 数据类型进行了支持，随着 Apache Doris 用户的持续增长，银行、证券、基金等金融领域的用户也随之快速增长，对高精度的小数计算场景也提出了更高的要求，旧的 Decimal 数据类型已无法满足。因此，我们在 Apache Doris 1.2.1 推出了精度更高、速度更快的 DecimalV3(precision, scale)(precision&lt;=38)，实现了真正意义上的高精度定点数，相比于老版本中的 Decimal ，DecimalV3 有以下核心优势：</p><p></p><p>可表示范围更大。DECIMALV3 对 Precision 和 Scale 的取值范围进行扩充。内存占用更低，性能更高。老版本的 Decimal 需要占用 16 Bytes 的内存，而 DecimalV3 对内存可进行自适应调整，如下所示。</p><p></p><p><code lang=\"text\">+----------------------+-------------------+\n|     precision        | 占用空间（内存/磁盘）|\n+----------------------+-------------------+\n| 0 &lt; precision &lt;= 8   |      4 bytes      |\n+----------------------+-------------------+\n| 8 &lt; precision &lt;= 18  |      8 bytes      |\n+----------------------+-------------------+\n| 18 &lt; precision &lt;= 38 |     16 bytes      |\n+----------------------+-------------------+</code></p><p></p><p>更完备的精度推演。</p><p></p><h3>精度推演规则</h3><p></p><p></p><p>DECIMALV3 有一套很复杂的类型推演规则，针对不同的表达式，会应用不同规则进行精度推演，下面来介绍一下推演规则：</p><p></p><p>四则运算</p><p></p><p>加法 / 减法：DECIMALV3(a, b) + DECIMALV3(x, y) -&gt; DECIMALV3(max(a - b, x - y) + max(b, y), max(b, y))，即整数部分和小数部分都分别使用两个操作数中较大的值。乘法：DECIMALV3(a, b) * DECIMALV3(x, y) -&gt; DECIMALV3(a + x, b + y)除法：DECIMALV3(a, b) / DECIMALV3(x, y) -&gt; DECIMALV3(a + y, b)</p><p></p><p>聚合运算</p><p></p><p>SUM / MULTI_DISTINCT_SUM：SUM(DECIMALV3(a, b)) -&gt; DECIMALV3(38, b)。AVG：AVG(DECIMALV3(a, b)) -&gt; DECIMALV3(38, max(b, 4))（鉴于每个系统 AVG 的精度不同，且不同用户对精度的需求也不一样，经调研，决定选择与 SQLServer 相同的策略，因此选择“4”既能保证较好的性能，也不会有较大的精度损失。）</p><p></p><p>默认规则</p><p></p><p>除上述提到的函数外，其余表达式都使用默认规则进行精度推演。即对于表达式 expr(DECIMALV3(a, b))，结果类型同样也是 DECIMALV3(a, b)。</p><p></p><h3>结果精度调整</h3><p></p><p></p><p>上述几种规则为当前 Doris 的默认行为，而不同场景对 DECIMALV3 的精度要求各不相同，远超出以上几种规则。当用户有不同的精度需求，可以通过以下方式进行精度调整：</p><p></p><p>当期望的结果精度大于默认精度时，可通过调整入参精度来调整结果精度。例如用户期望计算AVG(col)得到DECIMALV3(x, y)作为结果，其中col的类型为 DECIMALV3(a, b)，则可以改写表达式为AVG(CAST(col as DECIMALV3(x, y)))。当期望的结果精度小于默认精度时，可通过对输出结果求近似得到想要的精度。例如用户期望计算AVG(col)得到DECIMALV3(x, y)作为结果，其中col的类型为DECIMALV3(a, b)，则可以改写表达式为ROUND(AVG(col), y)。</p><p></p><h3>使用演示</h3><p></p><p></p><p>这里我们采用 <a href=\"https://www.kaggle.com/datasets/prasoonkottarathil/btcinusd\">Bitcoin 的数据集</a>\"对 DecimalV3 进行演示。</p><p></p><p>Bitcoin 的数据集部分示例如下：</p><p></p><p>Unix - 时间戳Date - 时间Symbol - 时间序列数据所指代的交易品种Open - 该时间段的开盘价High - 该时间段的最高价Low - 该时间段的最低价Close - 该时间段的收盘价Volume BTC - BTC 金额Volume USD - USD 金额</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7e/7e3393bedc2bc45e4d732b94c866c2fd.png\" /></p><p></p><p>以下是在 Doris 中的建表存储数据，其中小数的列分别用 DecimalV3 进行存储：</p><p></p><p><code lang=\"sql\">CREATE TABLE `btc` (\n  `unix` bigint(20) NOT NULL,\n  `date` datetime NULL,\n  `symbol` varchar(30) NULL,\n  `open` decimalv3(8, 2) NULL,\n  `high` decimalv3(8, 2) NULL,\n  `low` decimalv3(8, 2) NULL,\n  `close` decimalv3(7, 2) NULL,\n  `Volume_BTC` decimalv3(10, 8) NULL,\n  `Volume_USD` decimalv3(38, 30) NULL\n) ENGINE=OLAP\nDUPLICATE KEY(`unix`)\nCOMMENT 'OLAP'\nDISTRIBUTED BY HASH(`unix`) BUCKETS 4\nPROPERTIES (\n\"replication_allocation\" = \"tag.location.default: 1\"\n);</code></p><p></p><p>我们来计算一下 2022 年 1 月 1 日这一天的平均 Volume_BTC/Volume_USD 以及总的 Volume_BTC/Volume_USD：</p><p></p><p><code lang=\"sql\">mysql&gt; select avg(Volume_BTC),avg(Volume_USD),sum(Volume_BTC),sum(Volume_USD) from btc where to_date(date)='2022-01-01';\n+-------------------+--------------------------------------+-------------------+-----------------------------------------+\n| avg(`Volume_BTC`) | avg(`Volume_USD`)                    | sum(`Volume_BTC`) | sum(`Volume_USD`)                       |\n+-------------------+--------------------------------------+-------------------+-----------------------------------------+\n|        0.51494486 | 24236.665942788256243957638888888888 |      741.52060313 | 34900798.957615088991299000000000000000 |\n+-------------------+--------------------------------------+-------------------+-----------------------------------------+</code></p><p></p><p>通过 SQL 的执行结果可以看到，通过 DecimalV3，在 Volume_USD 这一列的平均结果和总和上，实现了保留 30 位的小数。而旧的 Decimal 类型在这个例子中只能实现保留不超过 20 位。</p><p></p><h3>性能对比</h3><p></p><p></p><p>我们采用 <a href=\"https://doris.apache.org/zh-CN/docs/dev/benchmark/tpch\">TPC-H Benchmark 100G</a>\" 来对比 DecimalV3 与老版本 Decimal 的执行速度、存储占用、内存占用等性能。</p><p></p><p>我们在两个库分别对新版 DecimalV3 和老版本 Decimal 进行<a href=\"https://github.com/apache/doris/blob/master/tools/tpch-tools/ddl/create-tpch-tables.sql\">建表</a>\"。建表完成如下：</p><p></p><p>tpch1库为DecimalV3</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/2f/2f982231758ea17aff4be5dc5d49733b.png\" /></p><p></p><p>tpch2库为老版本Decimal</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ac/acb25cf99da98afb20b1e4111f6dc99a.png\" /></p><p></p><h4>执行速度</h4><p></p><p>采用 TPC-H Benchmark 对执行速度进行测试：</p><p></p><p><a href=\"https://github.com/apache/doris/blob/master/tools/tpch-tools/queries/q1.sql\">SQL Q1</a>\"</p><p></p><p><code lang=\"sql\">select /*+SET_VAR(exec_mem_limit=8589934592, parallel_fragment_exec_instance_num=16, enable_vectorized_engine=true, batch_size=4096, disable_join_reorder=false, enable_cost_based_join_reorder=false, enable_projection=false) */\n    l_returnflag,\n    l_linestatus,\n    sum(l_quantity) as sum_qty,\n    sum(l_extendedprice) as sum_base_price,\n    sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,\n    sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,\n    avg(l_quantity) as avg_qty,\n    avg(l_extendedprice) as avg_price,\n    avg(l_discount) as avg_disc,\n    count(*) as count_order\nfrom\n    lineitem\nwhere\n    l_shipdate &lt;= date '1998-12-01' - interval '90' day\ngroup by\n    l_returnflag,\n    l_linestatus\norder by\n    l_returnflag,\n    l_linestatus;</code></p><p></p><p>tpch1库（DecimalV3）的 SQL 执行结果为 6.38s</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d7/d7ea91b824437329c5eb2b3d0a1269c8.png\" /></p><p></p><p>tpch2 库（老版本 Decimal）的 SQL 执行结果为 8.13s</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6d/6d10007613de4e3afc0f02e161c8097d.png\" /></p><p></p><p>SQL Q1 所查询的表是上述展示字段的表 Lineitem，我们可以看到在 DecimalV3 的情况下，查询 速度较老版本有 27.4% 的提升。</p><p></p><h4>存储占用</h4><p></p><p></p><p>tpch1库（DecimalV3）的 Lineitem 表的存储占用为 18.475GB</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8a/8a115a23d7053dd6e323098d78b0468a.png\" /></p><p></p><p>tpch2 库（老版本 Decimal）的 Lineitem 表的存储占用为 20.893GB</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/19/1964efae996ea3f17cb5de025f654b0b.png\" /></p><p></p><p>可以看到在有四个字段由 Decimal 改为 DecimalV3 的情况下，存储占用有 13.1%的降低。</p><p></p><h4>内存占用</h4><p></p><p></p><p>内存占用测试我们同样使用 Lineitem 表，采用自己改写的一条 SQL</p><p></p><p><code lang=\"sql\">select count(*) \nfrom \n(   select l_quantity,l_extendedprice,l_discount,l_tax \n    from lineitem \n    where l_shipdate &lt; '1995-01-01' \n    group by l_quantity,l_extendedprice,l_discount,l_tax\n)tmp;</code></p><p></p><p>下图的 Grafana 监控中可以看到执行测试前的 Doris 内存稳定为 12.2GB</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ee/ee716e5c0ae99daecbe0ddd8f18dacc8.png\" /></p><p></p><p>分别在两个库执行上述 SQL</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3d/3d72b49c743fb1b09811a7a4423bb953.png\" /></p><p></p><p>在 tpch1库（DecimalV3）下执行，内存占用峰值为 26.6GB</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d6/d6ed987b454386560ddeee04384ed4c7.png\" /></p><p></p><p>内存回落正常后，在 tpch2 库（老版本 Decimal）下执行，内存占用峰值为 30.8GB</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7d/7de152c09ad6b8d0e0cf5251a1aa5b67.png\" /></p><p></p><p>从上方三张图中可以看到，这条 SQL 在 DecimalV3 的情况下不仅内存占用降低了 15.8%，执行时间也缩短了10s。</p><p></p><h3>总结</h3><p></p><p></p><p>Apache Doris 1.2.1 版本推出的 DecimalV3 实现了更高的精度，更高的性能，更完备的精度推演，使得 Doris 更加适用于金融财务、科学计算等有精确计算需求的应用场景，结合 Apache Doris 强大的分析计算性能，给相关用户及行业提供了更准确、完善的数据服务。</p><p></p><p>接下来，社区还将实现 JDBC 外表对 DecimalV3 类型的支持，JDBC Catalog 可以通过标准 JDBC 协议，连接其他数据源，连接后 Doris 会自动同步数据源下的 Database 和 Table 的元数据，以便快速访问这些外部数据。基于 JDBC 的通用性，结合 Apache Doris 的 高性能分析能力，实现对各类数据库数据联邦查询的高精度计算。</p><p></p><p>作者介绍：</p><p></p><p>钟永康，SelectDB 生态研发工程师</p><p>李文强，SelectDB 数据库内核研发工程师，Apache Doris Committer</p>",
    "publish_time": "2023-02-02 10:49:30",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]