[
  {
    "title": "在优化设计过程中为什么DesignOps很重要",
    "url": "https://www.infoq.cn/article/QUbPttfgyPAucmpHxBri",
    "summary": "<p>在设计团队规模不断扩大，项目的不断发展由最新的用户界面（UI）和用户体验（UX）所主导的大环境下，它们的成功不仅取决于技能，还取决于关键的操作和用户体验指标。</p><p>&nbsp;</p><p>当设计过程有时比它们所需要的还要更复杂、分散和混乱时，必须将DesignOps作为一项战略职能。</p><p>&nbsp;</p><p>但是，DesignOps的概念已经发生了显著的变化，现在它的实际应用已经远远超出了优化自己的设计工作流的范围。当今的设计运维需要共同的文化转变和不同的思维方式：</p><p>&nbsp;</p><p>培养跨职能，包括设计师和开发人员在内，通过项目经理（PM）、利益相关方和营销人员，更好地传递想法和结果，提高最终产品的质量，并增加团队共同产生的影响。欢迎围绕已经建立的用户界面（UI）和用户体验（UX）实践使用工具、系统和服务来完善路线图，消除孤岛，减少重复性任务，帮助建立单一的事实源，并提高数字产品设计和研发的速度和质量。理解数据是一座金矿，设计过程中的每一个决策和步骤都必须基于从调查、用户、可用性测试以及用户评估中收集到的可衡量的统计数据。</p><p>&nbsp;</p><p>使用这三个概念——跨职能团队、工具和数据的使用，你可以构建更好的工作设计操作，并将其作为战略职能使用，从而产生更好的产品、更快的上市时间，甚至增加收入。</p><p>&nbsp;</p><p>尽管使用设计运维并不是一种新的实践，但直到最近才有很多公司了解它的价值。Airbnb是首批创建并确立将DesignOps战略作为其现代产品开发周期一部分的全球化公司之一。他们的目标是“通过能提高执行速度和质量的集中式工具、系统和服务来为整个产品组织提供敏捷性。”</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f3/f3d8022eaf8602a22814c8bad0c7180f.png\" /></p><p></p><p>为了建立更有效的流程，Airbnb将其DesignOps扩展到5个不同的部分，每个部分都专注于其数字产品设计和开发的特定方面。他们的设计流量增长总监<a href=\"https://airbnb.design/designops-airbnb/\">Adrian Cleave</a>\"解释说：“我们的职能包括设计项目管理、设计工具、本地化、制作设计和团队协调人员。我们与营销、产品、设计和工程部门密切合作，尽可能地创造最佳的用户体验。”</p><p></p><h2>整合的重要性和挑战</h2><p></p><p>&nbsp;</p><p>最初，Airbnb的案例听起来像是他们只需要将团队和任务结合在一起，但要将类似的战略职能应用到成功的DesignOps中，首先需要解决以下的挑战：</p><p>&nbsp;</p><p>用户体验创建者使用的特殊工具和流程会导致设计-开发的不一致性和运维功能障碍，这些问题会影响到整个数字产品链。有一种误解，即认为存在一种适用于一切流程的解决方案，而实际上每个项目都需要在微观层面上进行探索，根据其具体情况，需要对设计运维进行调整和更改。缺乏深入的沟通和定期的多学科会议，在这些会议上用户体验（UX）和用户界面（UI）设计、开发、产品管理团队和营销团队可以共同行动，清晰地交流设计理念、原型、愿景、目标和细节等。忽视了数字产品设计和开发工具的重要性，这些工具是操作事实的单一源。没有探索和测试新的想法、新的设计方法，因此落后于用户界面（UI）和用户体验（UX）设计的新趋势，这对于非常精通新时代技术的数字消费者来说是一种排斥。</p><p></p><h2>理解DesignOps的4Ps</h2><p></p><p>&nbsp;</p><p>当谈到DesignOps时，会涉及到四个关键部分或构建模块。 我称它们为4Ps：产品（Product）、流程（Process）、人员（People）和程序（Program）。 每个环节都能为设计师和数字产品开发团队带来了各自的好处。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/50/50609962ec1c2ed7406a135fc91c5032.png\" /></p><p></p><p>&nbsp;</p><p>DesignOps中以产品为中心（Product-focused）的部分由组织思想引导。它致力于：</p><p>&nbsp;</p><p>发现并消除瓶颈。阐明数字产品的目的，了解客户的需求，并设想它将为最终用户带来的价值。执行用户和可用性测试以获得更好的用户体验（UX）。创建一个重点突出的路线图，以交付从启动到测试再到交付的高级别设计项目。概述给定产品的工作分解结构，以便团队成员知道从哪里开始和结束。定义<a href=\"https://www.infragistics.com/community/blogs/b/jason_beres/posts/build-great-user-experiences-with-user-centered-design\">以用户为中心设计</a>\"的优劣通用标准和原则，特别是针对你正在开发的产品。定义、选择并调整设计质量指标，这些指标可以在团队中任何参与给定项目的人之间共享。构建情境和项目意识，使任何参与的相关人员都能保持一致，这样更容易跟踪项目进展。</p><p>&nbsp;</p><p>&nbsp;</p><p>流程（Process）的“P”围绕着这样的一个前提展开，即DesignOps关注的是组织的优先级和运作。这将业务和具体的设计项目结合在了一起，并专注于：</p><p>&nbsp;</p><p>在跨职能团队之间制定更好的工作流程。通过与来自不同部门（项目经理、开发人员等）的团队成员的定期会议来跟踪所有正在进行的事情。保留有关战略业务目标、工作范围和文档的信息作为指导。这样，你就可以更容易地跟上品牌要求和业务目标。确定最后期限，组织任务，并确定项目的优先顺序（如果有多个项目的话）。比如，这将会帮助你规划某些功能并确定它的优先级。</p><p>&nbsp;</p><p>人员（People）的“P”强调社交化，而不仅仅是分享更新。此处设计运维的重点是为沟通需求、技能、目的和设计团队能力提供更好的方法。主要的优先事项包括：</p><p>&nbsp;</p><p>消除沟通障碍和隔阂。明确用户界面/用户体验（UI/UX）设计部门中每个人的角色。确定设计师的具体需求，并尽可能确定技能差距。传达共同的愿景和共同的目标，以构建成功的产品和/或服务。参与设计冲刺，以改进你和你的团队如何看待和理解给定设计项目的范围、特性、目标和方向，避免设计偏差。了解设计团队的能力和工作量，以避免工作倦怠。</p><p>&nbsp;</p><p>DesignOps的第四个部分则专注于程序（Program），它致力于标准化的自动化DesignOps工具和技术。它需要：</p><p>&nbsp;</p><p>依靠相同的DesignOps工具、数字资产管理程序（DAMS）或其他数字产品开发平台来简化和支持数字产品设计工作流。开发用户研究数据库存储，使产品设计和开发过程中的每个人都能轻松访问。通过全方位的设计和沟通工具，在团队成员和部门之间建立跨职能协作。从参与设计项目的任何人那里获得设计构思、评估和建设性反馈。克服沟通不畅的障碍，并解决简单的日常运作问题，例如，开发人员不知道由哪个设计师负责创建某个特性。</p><p></p><h2>结合4Ps，改进设计工作流程和操作的技巧</h2><p></p><p>&nbsp;</p><p>采用单一的操作事实源。</p><p>&nbsp;</p><p>这将帮助你和整个数字产品团队（包括市场营销人员、项目经理和开发人员）管理估计、规划和跟踪孤岛，跟踪任务和进度，并清晰地理解设计和开发规范。Gartner建议在此过程中使用通用的企业敏捷规划（EAP）工具和敏捷实践来提供帮助。</p><p>&nbsp;</p><p>在他们的“<a href=\"https://www.gartner.com/doc/reprints?id=1-28D1TLEQ&amp;ct=211208&amp;st=sb\">DesignOps：快速组织、协作和创新产品用户体验</a>\"”一文中，作者指出：</p><p>&nbsp;</p><p>“DesignOps的一个基本方面是采用敏捷工作分解结构 (WBS) 来组织用户体验工作，从与大的战略目标保持一致，到单一EAP工具中的屏幕级细节。虽然这对大多数用户体验实践者来说一开始感觉很陌生，但敏捷WBS能很好地映射到用户体验工作中。这种方法的业务和运营效益是深远的，包括更准确的计划、估计、跟踪和报告。”</p><p>&nbsp;</p><p>作为DesignOps战略的一部分，通过为管理人员、设计师、开发人员甚至利益相关方提供一个单一的工作环境，每个人都可以轻松地调整他们的工作和任务，实时测试和评论原型，消除设计切换，减少成本高昂的迭代，跟踪进度并识别瓶颈。更重要的是，整个数字产品团队将受益于对最终用户、项目时间表、设计细节、特性和功能的即时情境感知。</p><p>&nbsp;</p><p>但是由于公司和用于EAP的自动化DesignOps工具的不同，结构可能会有所不同。</p><p>&nbsp;</p><p>培养跨职能团队之间的深度沟通，并使利益相关方参与其中。</p><p>&nbsp;</p><p>你可能会问“为什么是利益相关方？”当一个原型被丢弃，一切都必须从头开始时，这会导致时间、精力、金钱的浪费并会延长流程。为了避免这种情况的发生并构建出更高效的DesignOps，请确保参与的每个人（包括利益相关方）都能参与到协作创造力中。这有助于简化设计过程，并能极大地缩短设计开发时间。</p><p>&nbsp;</p><p>通常情况下，团队可以在流程的早期进行包括设计师和利益相关方在内的冲刺工作，以探索并测试不同的想法。通过这种方式，设计师可以直接洞察设计元素如何转化为网页、移动或桌面应用程序，而开发人员可以根据设计与代码沟通潜在的问题，利益相关方可以充当代理，测试产品的可用性，以提供新鲜且独立的视角。</p><p></p><p>了解有关公司、当前设计流程、项目管理和最终用户的所有信息。</p><p></p><p>这将帮助你和你的团队评估产生投资回报（ROI）的优势领域，消除最大的挫折，解决设计过程中的痛点，并从那里开始优化。召开公司和团队会议可以为你提供这些有价值的信息。</p><p>&nbsp;</p><p>必须要有专门的DesignOps人员。</p><p></p><p>不存在一个能够处理所有流程和任务的设计师，因为到最后，他们只能做实际的设计工作。数字产品设计是一项多层次的工作，需要在特定领域中有不同经验的单位。正如需要将用户体验（UX）和用户界面（UI）设计分离并由两个不同的专家分别处理一样，也需要一个专门的DesignOps人员。</p><p>&nbsp;</p><p>他或她的职责是：</p><p>预测并管理工作和资源帮助招聘具有合适技能的设计师沟通设计标准分配适当的DesignOps工具制定敏捷的工作分解结构，以优化设计师的日常工作流程识别既定流程和改进策略之间的关键差距帮助建立更具生产力的设计文化</p><p>&nbsp;</p><p>DesignOps专家的角色取决于特定公司的需求、优劣势，以及团队当前正在开发的数字产品/服务。</p><p>&nbsp;</p><p>使用并掌握数据来衡量设计标准，区分优劣实践和设计，并建立与最终用户的最佳共鸣。</p><p></p><p>没有什么比利用可操作的数据来构思和设计下一个数字产品有更大的价值优化和质量提升了。从这个意义上说，将数据分析作为DesignOps的一部分可以激发更好的设计和更好的用户体验，甚至可以帮助你紧跟当前的设计趋势，比如数据可视化和数据故事讲述等。</p><p>&nbsp;</p><p>总而言之，DesignOps是一种实践和思维方式的结合，可以构建繁荣的文化、改进设计工作流程、促进多部门流程（如设计师与开发人员的交接）、改进产品和服务的制作方式，并使项目能够以更快的速度发展。但要实现所以这一切并建立运作良好的DesignOps，你必须通过数据进行创新和设计，促进深度沟通和创造性协作，通过采用DesignOps工具适应数字化转型，了解你的公司及其业务实践，研究并探索最终用户，并与专门的DesignOps人员合作。</p><p>&nbsp;</p><p>作者介绍：&nbsp;</p><p>创新专家Jason Beres是全球领先的企业软件制造商Infragistics的开发工具高级副总裁。Jason曾为多家酒店撰写技术文章，在全国性会议上发表演讲，并撰写/合著了10本关于软件/开发的书籍。他在开发方面的专长进一步延伸，以确保数据和分析在现代网络和移动平台上能以创新和客户驱动的方式展示。Jason是软件测试过程、数据驱动团队、客户对产品设计、开源以及过去30年数据分析和商业智能变化等技术问题方面的专家。</p><p>&nbsp;</p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/designops-improve-process/\">https://www.infoq.com/articles/designops-improve-process/</a>\"</p>",
    "publish_time": "2022-08-11 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "快手发布B端业务品牌StreamLake，专注视频化升级全链路解决方案",
    "url": "https://www.infoq.cn/article/ZHcVAsKIRY3yrjk8Z86j",
    "summary": "<p>8月10日，短视频与直播平台快手在北京召开发布会，发布视频云品牌StreamLake，正式进军B端业务领域。</p><p></p><p>快手首席技术官陈定佳，快手高级副总裁、StreamLake业务负责人于冰，快手技术副总裁、AI技术及主站技术负责人王仲远出席发布会，知乎合伙人兼CTO李大海、联通在线信息科技有限公司副总经理秦吉波、NVIDIA英伟达亚太区开发与技术总经理李曦鹏等合作伙伴代表和专家分享了视频化浪潮的趋势与需求。</p><p></p><p>当前，视频化升级正在席卷众多行业，激发出庞大的视频云需求。快手StreamLake专注于成为视频化升级助推器，将沉淀多年的音视频和AI等关键技术能力以产品化的形式对外开放，提供一站式音视频+AI解决方案。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/60/53/603138cab083979163b499b54154f653.jpg\" /></p><p>图：StreamLake品牌发布会启动仪式</p><p></p><p></p><h2>Streamlake要把“重工业”变成“轻工业”</h2><p></p><p></p><p>视频正在成为各行业连接客户最广泛的载体。来自Ericsson Mobility最新报告显示，未来六年移动数据流量增长4.38倍，其中视频流量占比将达到79%。</p><p></p><p>快手首席技术官陈定佳表示，对于下一代互联网的形态，目前还存在比较大的不确定性，但无论承载介质是什么，底层都离不开音视频和AI技术。</p><p></p><p>“我们经常思考，快手过去得到的经验，打磨过的技术，沉淀出的解决方案，能否为更多企业所用？最终，我们以内容汇聚与分发方面的大规模实践经验，将多年积累的技术能力，沉淀为一套可复用的产品体系与服务。”陈定佳表示。</p><p></p><p>在快手高级副总裁、StreamLake负责人于冰眼中，随着5G广泛部署，未来几年视频将像空气和水一样无处不在，但视频化升级面临体验痛点多，带宽成本高，创新和规模化效率低等难题，是名副其实的“重工业”。</p><p></p><p>“StreamLake要把‘重工业’变成‘轻工业’，把快手服务大规模用户所积累的基础设施、AI、音视频、算法等核心能力，通过模块化、标准化方式开放给其他企业，形成全链路服务。”</p><p></p><p>快手技术副总裁、AI技术及主站技术负责人王仲远表示，StreamLake将帮助客户加速业务创新，提升用户体验，支撑业务增长，同时降低运营成本。</p><p></p><h2>StreamLake：视频化转型操作系统</h2><p></p><p></p><p>随着网络和屏幕的迭代，用户对视频清晰度需求持续升级。卡顿率的上升、机型适配的难度增加、成本的大幅提升等成为普遍挑战。</p><p></p><p>于冰表示，解决这些挑战要从音视频的第一性原理出发思考，即更清晰、更流畅和更低成本，这三个问题相互影响，相互制约，但快手经过多年的实践，总结出一套成熟的方法论。</p><p></p><p>首先，视频压缩和增强技术能够同时兼顾三个方向，可做到同等清晰度下把视频文件压缩到更小，从而实现流畅播放，带宽占用更低，又实现在同等带宽用量条件下，显著提升视频清晰度。快手自研的KVC编解码标准，相比最新一代国际视频编码标准H.266/VVC功耗高、难以普及的困境，能将解码功耗优化到与上一代H.265/HEVC标准基本一致，同时比行业平均水平节约40%～50%带宽。</p><p></p><p>其次，为了平衡清晰和流畅的矛盾，快手提出基于大数据的QoE（Quality of Experience）优化方案，通过大规模AB实验来验证每个优化手段的效果。其中最有效手段之一是多码率自适应算法，可在网络速度和清晰度之间做最优平衡，上线后用户卡顿率大幅下降49%。这些能力都会包含在StreamLake产品中，为行业客户提供最佳实践。</p><p></p><p>最后，成本优化方面，快手提出了基于ROI（投资回报比）的视频生命周期管理方案，运用精准视频热度预测模型来提前触发视频压缩任务，从而最大化节约成本。</p><p></p><p>于冰表示，基于快手深厚的底层技术积累和沉淀，StreamLake形成了编解码算法、传输算法、AI特效、知识图谱等丰富的原子能力，以及行业领先的下一代产品矩阵，点播云、直播云、媒体处理与存储、虚拟人、内容审核、特效美化、内容理解、互动与创作、快手云剪、快手极目、音视频SDK、SoundMatrix智能会议音箱、6DoF自由视角视频等产品，辅以专业技术咨询服务，为行业客户提供场景化的解决方案。</p><p></p><p>“把所有技术细节封装成一个用于全行业视频化转型的操作系统，给用户提供交互简洁、容易接入的交付界面，又能够灵活的针对各行各业做到深度定制和优化，解决各行各业特定领域的问题。”于冰表示，StreamLake在商业模式设计上希望与合作伙伴保持同向，优化视频体验，同时让成本可控，实现业务可持续发展与客户共赢。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/fd/d5/fd4f6cfb0fab150b6a9ac506f03fedd5.png\" /></p><p>图：StreamLake OS全景图</p><p>&nbsp;</p><p></p><h2>视频AI，为业务赋能</h2><p></p><p></p><p>StreamLake的技术能力与模块中，视频AI是重要组成部分。快手技术副总裁、AI技术及主站技术负责人王仲远分享了智能视频创作、智能视频理解、数字人及XR等技术给客户带来的价值。</p><p></p><p>王仲远介绍，快手上每天有海量的视频内容诞生，每个视频在平台上需要经历内容创作、理解、分发三个环节，在帮助创作者更加便捷、智能化地进行视频内容创作，以及结构化管理海量视频内容上AI发挥着不可替代的作用，快手日均AI服务调用达到了4500亿次，总共涵盖了全球超过10万种的机型。</p><p></p><p>基于快手海量视频汇聚及分发过程沉淀的AI技术能力，面向行业合作伙伴，王仲远正式发布了视频AI的三大类解决方案：智能视频创作，智能视频理解，数字人及XR，以助力各行各业客户实现视频化、智能化升级。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/e8/73/e843e1459dc45da19088157de47ce873.png\" /></p><p>图：StreamLake视频AI全景图</p><p></p><p>在智能视频创作解决方案中，包含了内容创作环节的人像美化、智能特效、图集成片、文案成片等能力，大幅降低视频创作的门槛，提升视频创作的品质；智能视频理解解决方案，依托快手多年沉淀的多模态技术，实现海量视频的结构化管理，像管理图书一样管理短视频，应用于内容生态分析、基于兴趣的个性化推荐、智能审核、原创保护等方向。</p><p></p><p>发布会现场，王仲远首次发布了“数字人及XR解决方案”，包括传播型数字人、服务型数字人、虚拟化身数字人，快手在三个方向均有布局和成功案例。目前，快手也已与联通在线达成战略合作，双方将共同研发数字人能力开放平台。</p><p></p><h2>坚持技术开放，专注视频云和解决方案</h2><p></p><p></p><p>据了解，快手StreamLake业务2020年开始酝酿，2021年起步探索，并在今年成为独立业务，StreamLake品牌发布成为快手技术toB业务的全新起点。</p><p></p><p>基于自身大规模C端业务的锤炼和极致优化经验，以及合作伙伴的成功合作验证，快手首席技术官陈定佳对StreamLake技术toB业务充满信心。“技术toB是长期坚定的方向，我们愿意和合作伙伴一起携手，赋能用视频技术探索商业世界的每一步，实现共生双赢。”</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/b2/8d/b293fe546532a0591bff3faaa8840f8d.png\" /></p><p>图：快手音视频核心技术积累</p><p></p><p>据介绍，过去一年，快手已携手知乎、中国联通、央视频、小米等众多合作伙伴，在视频化、智能化领域展开探索。</p><p></p><p>陈定佳表示，视频化正在赋能千行百业，StreamLake将在创新、体验、规模、成本四个方面为客户提供价值，快手自身发展中所经历的快上线、提品质、扛规模、控成本四个阶段所积累的底层基础设施和技术团队将提供有力支撑。</p><p></p><p>此外，NVIDIA将与StreamLake共建生态，携手致力向客户和伙伴分享最新的硬件和生态发展，向更多的开发者、初创公司和合作伙伴提供服务与支持。</p>",
    "publish_time": "2022-08-11 10:02:41",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "将 50 万个文件放在一个Git存储库中，我们做了这些",
    "url": "https://www.infoq.cn/article/toMhTgpmuY4oqHpVf0w1",
    "summary": "<p></p><p>本文最初发布于Canva工程博客。</p><p>&nbsp;</p><p>在Canva，我们有意采用了monorepo模式，它有好处也有坏处。自2012年第一次提交以来，库的规模和流量都与产品一起迅速增长。在过去的10年里，代码库已经从几千行增长到2022年的将近6000万行。数百名工程师在50万个文件中工作，每周会产生近百万行的修改（包括生成的文件），数万个提交，数千个拉动请求的合并。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/bc/bcc4cdbb7d1bcd11b8c558fc3bc9c117.png\" /></p><p></p><p>从2012年到2022年10年间代码量的增长</p><p>&nbsp;</p><p>这种增长显著降低了本地Git的性能，因为像git status这样的命令运行时间越来越长。在新克隆的一个monorepo上，git status平均需要10秒，而git fetch可能需要15秒到1分钟，这取决于工程师合并了多少变更。由于Git在工程师的工作流程中非常重要，每天多次运行这些命令会缩短工程师每天的总生产时间。而且，时间太长的话，工程师可能会进行上下文切换，这进一步降低了他们的生产率。</p><p></p><h1>现有解决方案</h1><p></p><p></p><p>所幸，并不是只有我们在使用monorepo时遇到了这个问题。<a href=\"https://monorepo-book.github.io/\">Github</a>\"、<a href=\"https://dropbox.tech/application/speeding-up-a-git-monorepo-at-dropbox-with--200-lines-of-code\">Dropbox</a>\"之前的工作以及Git近期的改进提供了大量可以用来提高Git性能的资源。多年来，多位工程师发表了数篇关于如何“让Git更快”的内部博文。这些工作最终形成了一个自动化脚本，建议工程师们将这个脚本作为入职培训流程的一部分。</p><p>&nbsp;</p><p>首先，为了减少Git查找变更的开销，我们在Watchman中使用了<a href=\"https://git-scm.com/docs/git-update-index#_file_system_monitor\">fsmonitor</a>\"钩子，这样就能在变更发生时捕获它们，而不是在每次运行命令时扫描存储库中的所有文件。我们还启用了<a href=\"https://git-scm.com/docs/git-config#Documentation/git-config.txt-featuremanyFiles\">feature.manyFiles</a>\"，而它在后台启用了<a href=\"https://git-scm.com/docs/git-update-index#_untracked_cache\">untracked cache</a>\"，可以跳过没有变化的目录和文件。</p><p>&nbsp;</p><p>Git还内置了一个命令（<a href=\"https://git-scm.com/docs/git-maintenance\">maintenance</a>\"），用来优化存储库的数据，加速其他命令的执行并减少磁盘占用。它默认是不启用的，所以我们将它注册为每日调度和每小时调度。</p><p>&nbsp;</p><p></p><h1>我们的monorepo有什么独特之处？</h1><p></p><p>&nbsp;</p><p>深入研究monorepo中的文件类型，我们发现.xlf文件几乎占文件总数的70%。这些<a href=\"https://canvatechblog.com/how-to-design-in-every-language-at-once-f2dd66a2780f#bdd4\">.xlf文件</a>\"包含针对每种语言环境翻译好的字符串。即使它们位于一个monorepo中，工程师也从来不会手工编辑，因为它们是在字符串翻译时自动生成的。也就是说，Git在花费资源跟踪工程师永远不会修改的文件。然而，我们不能直接删除或忽略这些文件，因为翻译系统有它们才能顺利运行。次优解决方案是告诉Git不要使用稀疏签出（<a href=\"https://git-scm.com/docs/git-sparse-checkout\">sparse checkout</a>\"）在工作树中填充它们，局部性地忽略它们，同时仍然通过monorepo的其他源头跟踪它们的变化。实际上，为了使构建系统的其他部分可以正常工作，我们必须包含用于en-AU语言环境的字符串，但这点差异可以忽略不计。尽管忽略了这些翻译，但我们的本地环境仍然默认使用<a href=\"https://canvatechblog.com/how-to-design-in-every-language-at-once-f2dd66a2780f#a626\">en-psaccent</a>\"伪本地化语言环境运行，因此，工程师仍然要注意本地化需求。</p><p>&nbsp;</p><p>我们用一个单独克隆的monorepo做了以下实验，使用Git的默认设置，没做前面提到的优化。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/70/708282b4f69c9f05efdb6b4339b31544.png\" /></p><p></p><p>对于稀疏签出功能的使用，我们可以更进一步。通常，我们的工程师团队都是小团队，只会用到monorepo的一个更小的子集。例如，处理编辑器的前端工程师不太可能修改与搜索或计费服务相关的代码。如果一名工程师能告诉我们他们通常在做什么，我们就可以设计一个包含所有必需依赖项的签出模式，让他们可以在本地运行和测试代码，同时保持签出尽可能小。</p><p>&nbsp;</p><p>Canva的monorepo使用<a href=\"https://bazel.build/\">Bazel</a>\"作为构建系统，我们在其中定义构建目标（主页、搜索服务器、导出按钮等）和它们的依赖项。也就是说，给Bazel定一个目标，我们就可以准确地确定哪些文件需要构建、运行和测试，并通过查询Bazel依赖关系图排除其他文件。在实践中，这需要更多的启发式逻辑，因为不是所有的东西都连接到了Bazel构建图中，需要解析符号链接，但这都是些可以解决的边缘情况。下表展示了一些示例配置以及它们对签出的影响。</p><p><img src=\"https://static001.geekbang.org/infoq/f6/f6c2f8e6388c50690f889d5c8d2ad8fc.png\" /></p><p></p><p>后端服务往往模块化程度更高，可以独立运行，前端页面则不那么独立。原因有很多，如TypeScript配置，代码分析工具的设置方式，以及在编写工具和网页时没有考虑稀疏签出，而是假设所有文件任何时候都存在。这些针对翻译文件的配置提供了每名工程师都可以使用的增量改进。</p><p>&nbsp;</p><p>稀疏签出也有缺点。首先，现在有跟踪文件没有物理地填充到磁盘上，所以不能搜索或交互。意外变更或错误的合并冲突可能会使这些文件处于错误的状态（例如，如果两个pull请求修改了同一个要翻译的字符串并产生冲突，现在就必须手动解决）。工程师在工作过程中必须注意这种情况。</p><p>&nbsp;</p><p>每个Git签出命令都有开销用于检查是否应该填充或忽略更新的文件。虽然对于忽略.xlf文件这样的简单模式来说，这种开销很小，但对于更复杂的模式，这种开销就变得非常明显了。</p><p></p><h1>小结</h1><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/55/55b1ccbe2af305af09d17998912bbe4a.png\" /></p><p></p><p>该脚本根据推荐的Git配置设置Canva monorepo。</p><p>&nbsp;</p><p>结合现有的monorepo Git配置最佳实践，我们通过缓存将git status的时间缩短到3到2秒。虽然对于工程师来说，这比什么都不做要好得多，但随着monorepo越来越大，工程师越来越多，为了缩小这一数值，我们仍然有很长的路要走。</p><p>&nbsp;</p><p></p><h1>进行中的工作</h1><p></p><p>&nbsp;</p><p>这些优化为配置大型存储库设定了一条基线。但是，为了量化Git性能对工程师生产力的影响，并进一步分析问题和优化，我们需要能够收集Git操作的遥测数据。</p><p>&nbsp;</p><p>Git通过<a href=\"https://git-scm.com/docs/api-trace2/\">trace2</a>\"格式输出跟踪信息，我们可以捕获这些信息并将其发送到中央存储进行分析。为此，我们团队一直在开发一个名为Olly的内部工具，用于捕获操作时间、失败及其原因，跟踪新分支的创建，等等。这有助于我们在整个组织中监控Git的性能，将来可以在Git配置发生变化时通知我们，这是量化工程师开发周期的第一步。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/24/24f5fb59c022c09df505155c114b4f8b.png\" /></p><p></p><p>常见Git操作的平均时长</p><p>&nbsp;</p><p>有了这些遥测信息，我们现在可以具体地量化Git性能对工程师的影响，关注痛点（上图中的git fetch），并进一步深入分析每个操作。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7e/7e73390ddb57a0c307d3d7bc0a25d683.png\" /></p><p></p><p>git fetch跟踪信息</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ad/ad2261f7d9dc2b3a9d9d4a4c7d796777.png\" /></p><p></p><p>深入研究index-pack操作，我们可以得到正在传输的包、对象和字节的数量。</p><p>&nbsp;</p><p>此外，鉴于Git<a href=\"https://github.blog/2022-04-12-git-security-vulnerability-announced/\">最近暴出的漏洞</a>\"，我们正致力于向所有工程师提供一个明确的Git版本，默认提供正确的配置，确保每个人都能获得最新的安全补丁和性能改进。</p><p></p><p></p><p>原文链接：</p><p><a href=\"https://canvatechblog.com/we-put-half-a-million-files-in-one-git-repository-heres-what-we-learned-ec734a764181\">We Put Half a Million files in One git Repository, Here’s What We Learned</a>\"</p>",
    "publish_time": "2022-08-11 11:49:38",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Apache DolphinScheduler 正式发布3.0.0 版本",
    "url": "https://www.infoq.cn/article/GzIesGahvDH2WFSfbgeA",
    "summary": "<p>2022 年 8 月 10 日，在经过 3.0.0 alpha、3.0.0-beta-1、3.0.0-beta-2 不断验证之后，Apache DolphinScheduler 终于正式发布第三个大版本。3.0.0 正式版本发生了自发版以来的最大幅度变动，新增了众多全新功能和特性。</p><p></p><p>经过迭代的 3.0.0 正式版与此前 3.0.0 alpha 版本更新文中所描述的主要功能和特性更新、优化项和 Bug 修复大致一致，包括“更快、更强、更现代化、更易维护”这四个关键词总结。</p><p></p><p>更快：重构了 UI 界面，新 UI 不仅用户响应速度提高数十倍，开发者构建速度提高数百倍；更强：带来了许多振奋人心的新功能，如数据质量保证、自定义时区、新增多个任务支持和多个告警插件；更现代化：新 UI 除了更快外，大到页面布局，细到图标样式都更加现代化；更易维护：后端服务拆分更加符合容器化和微服务化的发展趋势，还能明确各个服务的职责，让维护更加简单。</p><p></p><p></p><h3>新功能和新特性包括：</h3><p></p><p></p><h4>全新UI</h4><p></p><p></p><p>3.0.0  最大的变化是引入了新的 UI，切换语言页面无需重新加载，并且新增了深色主题。新 UI 使用了 Vue3，TSX，Vite 相关技术栈。对比旧版 UI，新 UI 不仅更加现代化，操作也更加人性化，前端的鲁棒性也更强，使用户在编译时一旦发现代码中的问题，可以对接口参数进行校验，从而使前端代码更加健壮。</p><p></p><p>此外，新架构和新技术栈不仅能让用户在操作 Apache DolphinScheduler 时响应速度有数十倍的提升，同时开发者本地编译和启动 UI 的速度有了数百倍的提升，这将大大缩短开发者调试和打包代码所需的时间。</p><p></p><p></p><h4>AWS支持</h4><p></p><p></p><p>随着 Apache DolphinScheduler 用户群体越来越丰富，吸引了很多海外用户。但在海外业务场景下，用户在调研过程中发现有两个影响用户便捷体验 Apache DolphinScheduler 的点，一个是时区问题，另一个则是对海外云厂商，尤其是对 AWS 的支持不足。此版本中，我们决定对 AWS 较为重要的组件进行支持，目前已经涵盖 Amazon EMR 和 Amazon Redshift 两个 AWS 的任务类型，以及实现了资源中心支持 Amazon S3 存储。</p><p></p><p>针对 Amazon EMR，Apache DolphinScheduler 创建了一个新的任务类型，并提供了其 Run Job Flow 的功能，允许用户向 Amazon EMR 提交多个 steps 作业，并指定使用的资源数量。详情可见：https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/task/emr.html</p><p></p><p>对于 Amazon Redshift，Apache DolphinScheduler 目前在 SQL 任务类型中扩展了对 Amazon Redshift 数据源的支持，现在用户可以在 SQL 任务中选择 Redshift 数据源来运行 Amazon Redshift 任务。</p><p></p><p>对于 Amazon S3，Apache DolphinScheduler 扩展了 Apache DolphinScheduler 的资源中心，使其不仅能支持本地资源、HDFS 资源存储，同时支持 Amazon S3 作为资源中心的储存。详情可见：https://dolphinscheduler.apache.org/zh-cn/docs/latest/user_doc/guide/resource.html 中的 `resource.storage.type`</p><p></p><h4>服务拆分</h4><p></p><p>全新的 UI 是 3.0.0 &nbsp;前端的最大变化，而后端最大的变化就是对服务进行拆分。考虑到容器和微服务的概念越来越火热，Apache DolphinScheduler 开发者做出了重大决定：对后端服务进行拆分。按照职能，Apache DolphinScheduler 将服务拆分成了以下几部分：</p><p>master-server: master服务worker-server: worker服务api-server: API服务alert-server: 告警服务standalone-server: standalone用于快速体验 dolphinscheduler 功能ui: UI资源bin: 快速启动脚本，主要是启动各个服务的脚本tools: 工具相关脚本，主要包含数据库创建，更新脚本</p><p></p><p>所有的服务都可以通过</p><p></p><p><code lang=\"null\"> `bin/dolphinscheduler-daemon.sh` </code></p><p>的方式进行启动或者停止。</p><p></p><p></p><h4>数据质量保证</h4><p></p><p></p><p>此版本中，用户们从 2.0.0 开始就期待已久的数据质量保证应用功能上线，解决了从源头同步的数据条数准确性，单表或多表周均、月均波动超过阈值告警等数据质量问题。Apache DolphinScheduler 此前版本解决了将任务以特定顺序和时间运行的问题，但数据运行完之后对数据的质量一直没有较为通用的衡量标准，用户需要付出额外的开发成本。</p><p></p><p>现在，3.0.0 &nbsp;已经实现了数据质量原生支持，用户可以直接通过配置的方式，轻松实现数据质量监控，在保证工作流运行的前提下，保证运行结果的准确性。</p><p></p><p></p><h4>任务组</h4><p></p><p></p><p>任务组主要用于控制任务实例并发并明确组内优先级。用户在新建任务定义时，可配置当前任务对应的任务组，并配置任务在任务组内运行的优先级。当任务配置了任务组后，任务的执行除了要满足上游任务全部成功外，还需要满足当前任务组正在运行的任务小于资源池的大小。当大于或者等于资源池大小时，任务会进入等待状态等待下一次检查。当任务组中多个任务同时进到待运行队列中时，会先运行优先级高的任务。</p><p></p><p>详见 链接：https://dolphinscheduler.apache.org/zh-cn/docs/3.0.0/user_doc/guide/resource.html</p><p></p><p></p><h4>自定义时区</h4><p></p><p></p><p>在 3.0.0 之前版本，Apache DolphinScheduler 默认的时间是 UTC+8 时区，但随着用户群体扩大，海外用户和在海外开展跨时区业务的用户在使用中经常被时区所困扰。3.0.0 &nbsp;支持时区切换后，失去问题迎刃而解，满足海外用户和出海业务伙伴的需求。例如，如当企业业务涉及的时区包含东八区和西五区，想要使用同一个 DolphinScheduler 集群时，可以分别创建多个用户，每个用户使用自己当地时区，对应 DolphinScheduler 对象显示的时间均会切换为对应时区的当地时间，更加符合当地开发者的使用习惯。</p><p></p><p>详见 链接：https://dolphinscheduler.apache.org/zh-cn/docs/3.0.0/user_doc/guide/howto/general-setting.html</p><p></p><p></p><h4>任务定义列表</h4><p></p><p></p><p>使用 Apache DolphinScheduler 3.0.0 &nbsp;此前版本，用户如果想要操作任务，需要先找到对应的工作流，并在工作流中定位到任务的位置之后才能编辑。然而，当工作流数量变多或单个工作流有较多的任务时，找到对应任务的过程将会变得非常痛苦，这不是 Apache DolphinScheduler 所追求的 easy to use 理念。所以，Apache DolphinScheduler 在 3.0.0 &nbsp;中增加了任务定义页面，让用户可以通过任务名称快速定位到任务，并对任务进行操作，轻松实现批量任务变更。</p><p></p><p>详见 链接：https://dolphinscheduler.apache.org/zh-cn/docs/3.0.0/user_doc/guide/project/task-instance.html</p><p></p><p></p><h4>新告警类型支持</h4><p></p><p></p><p>在 3.0.0 &nbsp;中，告警类型也进行了扩展，增加了对 Telegram、Webexteams 告警类型的支持。</p><p></p><p></p><h4>Python API&nbsp;新功能</h4><p></p><p></p><p>3.0.0 中，Python API 最大的变化是将对应的 PythonGatewayServer 集成到了 API-Server 服务, 并将其重命名 PythonGatewayService, 现在用户在启动 api-server 时会默认启动 PythonGatewayService；如果不想要启动 PythonGatewayService，可以将 application.yaml 中的 python-gateway.enabled 设置成 false。</p><p></p><p>此外, Python API 还增加了 CLI 和 configuration 模块。Configuration 模块允许用户修改 Python API 默认的配置, 如修改工作流默认的用户名、worker 分组等内容, 可以通过环境变量、直接修改文件、Python 动态修改来改变值。</p><p></p><p>目前 CLI 只有 version 和 config 两个子命令, 用于确认当前版本以及增删配置文件。后续，将引入更加多功能，方便用户通过命令行操作 DolphinScheduler。值得注意的是，Python API 还支持新增和上传资源中心文件功能，方便资源管理；支持同一个 project 不同 workflow 写入不同名称；增加集成测试，让测试更加便捷。&nbsp;</p><p></p><p></p><h3>此前版本未公布的功能和特性更新</h3><p></p><p></p><p></p><h4>支持 Flink 任务类型</h4><p></p><p></p><p>在该版本中，Apache DolphinScheduler扩展了 Flink 任务类型，使其支持运行 Flink SQL 任务，其使用 sql-client.sh 提交任务。在此前的版本中, 我们仅支持通过 flink cli 的方式提交任务, 这种方式需要结合资源中心, 将资源文件提交到资源中心, 然后在任务定义页面引用改资源, 对于版本化和用户透明都不是十分友好. 随着 flink sql 逐渐成为 flink 使用者的主流, 加之直接在编辑页面写 sql 更加用户透明, 我们采纳了向社区贡献的 flink sql 功能. 3.0.0 以后的版本用户可以更加方便的使用 flink 任务了。</p><p></p><p>更多详情查看：<a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/dev/table/sqlclient/\">flink sql client</a>\"</p><p></p><p>对应 PR：https://github.com/apache/dolphinscheduler/pull/9840</p><p></p><p></p><h4>新增 Zepplin 任务类型</h4><p></p><p></p><p>在该版本中，增加了 Zeppelin 任务类型，用于创建并执行 Zeppelin 类型任务。Worker 执行该任务时，会通过 Zeppelin Cient API 触发 Zeppelin Notebook 段落。</p><p></p><p>对应PR：https://github.com/apache/dolphinscheduler/pull/9810</p><p></p><p></p><h4>Bash 传参功能</h4><p></p><p></p><p>新版本还新增了通过 bash 传参的功能，如果你想在下游任务中使用 bash 变量而不是常量值 export 参数，你可以在通过 setValue 和 Bash 变量实现，它更加灵活，可以让你动态地获取现有的本地或 HTTP 资源获取设定变量。</p><p></p><p>可以使用类似的语法</p><p><code lang=\"null\">lines_num=$(wget https://raw.githubusercontent.com/apache/dolphinscheduler/dev/README.md -q -O - | wc -l | xargs)echo \"#{setValue(set_val_var=${lines_num})}\"</code></p><p></p><p></p><h4>允许用户上传没有后缀的文件</h4><p></p><p></p><p>之前资源中心只能上传有后缀的文件，3.0.0&nbsp;版本支持用户上传没有后缀的文件。</p><p></p><p></p><h4>其他功能增强</h4><p></p><p></p><p>除了上述功能新增外，3.0.0 版本还进行了很多细节功能增强，如重构任务插件、数据源插件模块，让扩展更简单；恢复了对 Spark SQL 的支持；E2E 测试已经完美兼容新 UI 等。</p><p></p><p></p><h3>主要优化项</h3><p></p><p>任务后端插件优化，新插件只需要修改插件自带的模块在工作流下提交/创建 cron 时验证结束时间和开始时间Dependent 添加依赖时可以选择全局项目AlertSender 优化及关闭优化，如 MasterServer增加 slot 条件查询数据库, 减少返回数据记录通过将 python gatewar 迁移到 apiserver 来精简 dist 包[python] 将 pythonGatewayServer 迁移到 api 服务器[python] 添加缺失的配置和连接远程服务器文档[Master/Worker] 将任务 ack 更改为运行回调[Master] 添加任务事件线程池</p><p></p><p></p><h3>Release note</h3><p></p><p></p><p>GitHub: https://github.com/apache/dolphinscheduler/releases/tag/3.0.0</p><p></p><p>下载：https://dolphinscheduler.apache.org/en-us/download/download.html</p>",
    "publish_time": "2022-08-11 12:10:14",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "微软进一步削减消费研发部门",
    "url": "https://www.infoq.cn/article/iR3te8f1Jl35SGKO6NVY",
    "summary": "<p></p><p>根据<a href=\"https://techcrunch.com/2022/08/09/microsoft-makes-further-cuts-focused-on-consumer-rd-group/\">外媒</a>\"消息，在 7 月份取消Office 和 Windows 部门的空缺职位并<a href=\"https://techcrunch.com/2022/07/12/microsoft-lays-off-a-portion-of-its-workforce-as-part-of-a-realignment/\">解雇</a>\"了部分员工后，微软本周进一步裁员。这一轮裁员集中在其现代生活体验 (MLX) 集团，该集团是该公司负责以客户为中心的项目研发集团之一。</p><p>&nbsp;</p><p>据悉，该部门员工需要在60天内在公司内部找到其他职位，否则将被解雇。有员工爆料称，公司将为这些员工提供遣散费。具体标准为，工作时间每满6个月就可以获得相当于一周薪资的遣散费，并且这些员工还将在9月获得年度奖金。这名员工估计，该团队的规模大约为200人。根据 LinkedIn 上的帖子，最近的裁员也影响了包括芝加哥在内的多个地点的合同招聘人员。</p><p>&nbsp;</p><p>微软发言人拒绝提供细节，但没有否认裁员已经发生。</p><p>&nbsp;</p><p>微软的 MLX 集团遍布温哥华和旧金山等城市。MLX团队最初作为初创企业Mobile Data Labs而存在，开发了备受好评的里程跟踪工具MileIQ。微软在2015年将该公司收购，该团队首先以MileIQ的名义重新命名，然后被赋予新的名称 Modern Life Experiences。该团队的职责范围也逐步扩大，与微软的家庭安全小组合作，为 iOS 和 Android构建了<a href=\"https://www.microsoft.com/en-us/microsoft-365/family-safety\">家庭安全应用程序的第一个版本</a>\"，还开发了个人财务工具Money in Excel。</p><p>&nbsp;</p><p>在2020年2月的一次高管洗牌中，Windows产品和教育部门首席副总裁埃兰·米吉多(Eran Megiddo)同时担任了MLX和微软教育部门的负责人。前移动数据实验室CTO Max Wheeler在收购后加入微软，现在仍然是工程总监。</p><p>&nbsp;</p><p>2020 年 6 月，MLX 集团推出了个人财务工具Money in Excel，该工具可以自动将银行、信用卡、投资和贷款账户自动连接到 Excel 上，并对这些数据进行分析。根据<a href=\"https://www.howtogeek.com/808679/microsoft-is-shutting-down-money-in-excel-and-more/\">外媒报道</a>\"，Money in Excel 计划于 2023 年 6 月 30 日关闭。此外，该团队还负责为 Windows、Xbox、移动设备和网络上的家庭孵化“创新的新客户体验”。</p><p>&nbsp;</p><p>在7月份，微软就被爆裁撤 180,000 名中不到 1% 比例的员工，该行为是为了适应业务调整需要。不过，微软表示，将继续投资业务，并在未来一年增加员工总数。</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p>&nbsp;</p><p><a href=\"https://techcrunch.com/2022/08/09/microsoft-makes-further-cuts-focused-on-consumer-rd-group/\">https://techcrunch.com/2022/08/09/microsoft-makes-further-cuts-focused-on-consumer-rd-group/</a>\"</p>",
    "publish_time": "2022-08-11 12:26:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]