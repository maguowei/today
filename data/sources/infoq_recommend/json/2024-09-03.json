[
  {
    "title": "阿迪达斯平台团队是如何减少运行Kubernetes集群的成本的",
    "url": "https://www.infoq.cn/article/yyZYEJjo2CD3aKZR2Uud",
    "summary": "<p>在最近的一篇 Medium 博客文章中，平台工程师 Iya Lang 介绍了阿迪达斯如何将在 AWS 上运行的 Kubernetes 集群的成本最多降低 50% 的。</p><p></p><p>阿迪达斯团队采取的多管齐下方式对许多组织的平台工程团队都会很有助益，因为 CNCF 最近的一份报告指出，49% 的受访者由于引入 Kubernetes 带来了云成本的增加。</p><p></p><p>该团队引入的第一项措施主要关注降低 EC2 实例的成本。为了实现这一点，他们实施了 Karpenter，这是一个由 AWS 开发的集群自动扩缩器（autoscaler），它会根据应用程序的需求调整节点的数量。Karpenter 的特性包括：</p><p></p><p>根据实时的 Pod 调度需求，动态供应计算资源（EC2 实例）。这确保了集群能够在正确的时间拥有正确的节点数量，以处理应用程序的负载；通过以下方式优化集群的资源使用率：仅启动必须的实例类型以满足 Pod 的需求；寻找机会以移除利用率不足的节点；在可能的情况下，利用更具成本效益的方案替代昂贵的实例。识别出成本最低且中断风险最小的应用，让它们使用 spot 实例（以较低成本提供的未使用的 AWS 计算能力）;将工作负载整合到更高效的计算资源上。与现有的 Kubernetes 工作流进行无缝集成。你可以对其行为的各个方面进行配置，包括：用于供应的 EC2 实例的类型；节点所配置的启动模版规范；扩展策略，根据特定的需求调整资源分配。</p><p></p><p>Karpenter 目前仅支持 AWS，但是该项目有计划将其他云供应商也纳入进来。</p><p></p><p>阿迪达斯团队采取的第二项措施是自动创建垂直 Pod 自动扩缩器（Vertical Pod Autoscaler，VPA），以提高资源的利用率。具体来说，平台团队为开发和 staging 集群中的所有工作负载自动创建了垂直 Pod 自动扩缩器。阿迪达斯选择了通常用于应用程序安全的策略工具 Kyverno 来生成默认的 VPA。</p><p></p><p>Kyverno 是一个策略引擎，在 Kubernetes 集群中作为动态准入控制器来运行。它负责校验和变更来自 Kubernetes API 服务器的准入 webhook HTT 回调，应用相关的策略来执行或拒绝准入请求。Kyverno 策略可根据各种条件（包括资源种类、名称、标签选择器等）来选定资源。变更策略可以通过 overlays（类似于 Kustomize）或 JSON Patch 来声明。校验策略使用 overlay 语法，支持模式匹配和条件（if-then-else）逻辑。策略执行的结果会记录为 Kubernetes 事件。对于已允许的请求或执行 Kyverno 策略之前的请求，Kyverno 会生成策略报告。这些报告提供了与策略相匹配的资源运行列表、资源的状态和其他详细信息。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/86/860642db1f03260c21cd38e8af9aab12.png\" /></p><p></p><p>Kyverno 架构</p><p></p><p>阿迪达斯团队将 Kyverno 策略按照如下方式进行配置：</p><p></p><p>检查资源是否具有水平自动扩缩器（Horizontal Pod Autoscaler，HPA）或 VPA；校验是否允许为资源及其命名空间创建 VPA。</p><p></p><p>团队引入的第三项措施是设置 VPA 的默认值。在事先不了解应用程序的情况下设置 VPA 是一项很具挑战性的事情。阿迪达斯团队决定只控制资源请求，以防止在使用高峰期出现应用程序的中断。他们将允许的最小值设置为非常低的水平（例如，CPU 为 10 millicore，内存为 32M），并根据原始请求或限制来设置最大值，以确保稳定性。对于有多个容器的应用程序，团队避免使用maxAllowed以防止出现潜在的问题。</p><p></p><p>在实施默认 VPA 后，开发和 staging 集群的 CPU 和内存使用率降低了 30%。不过，这里也存在一些限制：</p><p></p><p>VPA 无法与使用资源度量指标的 HPA 协同工作；由于堆大小固定，比较老的 Java 应用程序可能无法从中获益；某些应用程序需要不间断运行，因此必须为它们提供不参与其中的方案。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/01/015a428913912fa844b0b39ca3c3b751.jpg\" /></p><p></p><p></p><p>阿迪达斯团队还希望通过在非办公时间缩减资源以减少二氧化碳的排放量并节省开支。他们使用了kube-downscaler。该工具可根据预定义的时间表调整副本数量，并允许针对特定应用进行定制。</p><p></p><p>在实施了这些措施后，团队面临着节点利用率不足的问题。为了解决这个问题，他们实现了一些 Kyverno 策略，以防止有问题的 Pod Disruption Budget（PDB）配置阻碍节点的移除。他们还制定了一项清理策略，定期清除无效的 PDB。</p><p></p><p>阿迪达斯团队针对非生产集群实施了上述成本优化措施，并在所有环境中采用了 PDB 策略。这一措施使开发和 staging 集群的每月成本降低了 50%。他们对生产集群采用了选择性（opt-in）模式，允许应用团队选择自己的工具和配置。</p><p></p><p>阿迪达斯团队分享了成功优化成本的一些关键考量因素：</p><p></p><p>确保有足够的节点容量来处理 Pod 的增加；设置适当的 VPA 配置，以平衡成本的节约和应用的性能；通知用户关于变更的信息，防止与事故相关的中断；保持全面监控，以衡量相关的影响。</p><p></p><p>该团队认为，成本优化是一个需要不断调整的持续过程。</p><p></p><p>在 Reddit 上可以找到更多企业尝试降低云成本的例子，例如“将 Kubernetes Dev Envs 的云成本降低 95% 以上”以及“如何降低 AWS 的成本？”。</p><p></p><p>应用的优化也可以降低云成本，提高可持续性。Erik Peterson 在 QCon SF 上介绍了相关的指导方案，并为 InfoQ 撰写了一篇相关的文章，即“一行代码价值百万美元：从工程技术角度看云成本优化”。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2024/07/adidas-kubernetes-cost-reduction/\">https://www.infoq.com/news/2024/07/adidas-kubernetes-cost-reduction</a>\"</p>",
    "publish_time": "2024-09-03 10:37:53",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Java近期新闻：Spring 6.2-M7、Project Loom、Payara Platform、Gradle 8.10、Helidon 4.1",
    "url": "https://www.infoq.cn/article/BTcFAgtDNK3IAeR7MqPp",
    "summary": "<p></p><h4>JDK 23</h4><p></p><p><a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-23%2B36?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Build 36</a>\" 是 JDK 23 <a href=\"https://jdk.java.net/23/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">早期访问构建</a>\"版本的当前版本。此版本的更多细节可以在<a href=\"https://jdk.java.net/23/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\"中找到，关于 JDK 23 新特性的详细信息可以在 InfoQ 的<a href=\"https://www.infoq.com/news/2024/07/jep-472-restrict-jni-jdk-24/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">报道</a>\"中找到。</p><p></p><p></p><h4>JDK 24</h4><p></p><p>JDK 24 <a href=\"https://jdk.java.net/24/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">早期访问构建</a>\"版本的 <a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-24%2B11?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Build 11</a>\" 也已发布，包含了自 Build 10 以来的<a href=\"https://github.com/openjdk/jdk/compare/jdk-24%2B10...jdk-24%2B11?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">更新</a>\"，修复了各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2024%20and%20%22resolved%20in%20build%22%20%3D%20b11%20order%20by%20component%2C%20subcomponent&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">问题</a>\"。此版本的更多细节可以在<a href=\"https://jdk.java.net/24/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\"中找到。</p><p></p><p>对于<a href=\"https://openjdk.org/projects/jdk/23/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">JDK 23</a>\" 和 <a href=\"https://openjdk.org/projects/jdk/24/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">JDK 24</a>\"，开发者可以通过<a href=\"https://bugreport.java.com/bugreport/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Java Bug 数据库</a>\" 报告错误。</p><p></p><p></p><h4>Project Loom</h4><p></p><p>基于 JDK 24 早期访问构建版本 <a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-24%2B11?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Build 11</a>\" 的 Project Loom <a href=\"https://jdk.java.net/loom/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Build 24-loom+4-42</a>\" 也对 Java 社区可用。此构建改进了 Java 监视器（同步方法）的实现，以增强与虚拟线程的互操作性。</p><p></p><p></p><h4>Spring Framework</h4><p></p><p><a href=\"https://spring.io/projects/spring-framework?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Spring Framework</a>\" 6.2.0 的<a href=\"https://spring.io/blog/2024/08/14/spring-framework-6-2-0-m7-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">第七个里程碑版本</a>\"带来了错误修复、文档改进、依赖项升级和新特性，例如：框架核心的改进，包括<a href=\"https://github.com/spring-projects/spring-framework/issues/21590?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">缓存抽象层的错误处理</a>\"；由于<a href=\"https://docs.spring.io/spring-framework/docs/6.2.0-M7/javadoc-api/org/springframework/context/ApplicationContext.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">ApplicationContext</a>\" 接口的限制，提供在进行提前编译时忽略 bean 注册的选项；现在<a href=\"https://docs.spring.io/spring-framework/docs/6.2.0-M7/javadoc-api/org/springframework/web/method/annotation/HandlerMethodValidator.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">HandlerMethodValidator</a>\" 类支持跨参数约束。此版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.2.0-M7?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\"中找到。</p><p></p><p>同样，Spring Framework 的 6.1.12、6.0.23、5.3.39 和 5.3.38 版本也已<a href=\"https://spring.io/blog/2024/08/14/spring-framework-6-1-12-6-0-23-and-5-3-39-available-now?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布</a>\"，这些版本包含了错误修复、文档改进、依赖项升级，并提供了更有效处理条件 HTTP 请求的新特性。这些版本还提供了针对 <a href=\"https://spring.io/security/cve-2024-38809?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">CVE-2024-38809</a>\" （解析 “If-Match” 或 “If-None-Match” 请求头中的 ETags 的应用程序容易遭到DoS攻击）和 <a href=\"https://spring.io/security/cve-2024-38808?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">CVE-2024-38808</a>\" （攻击者通过提供一个特别设计的 Spring 语言表达式来发起 DoS 攻击）的<a href=\"https://spring.io/blog/2024/08/14/spring-framework-releases-fixes-for-cve-2024-38808-and-cve-2024-38809?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">解决方案</a>\"。这些版本的更多细节可以分别在<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.1.12?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">6.1.12</a>\"、<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v6.0.23?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">6.0.23</a>\"、<a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.39?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">5.3.39</a>\" 和 <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.38?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">5.3.38</a>\" 的发布说明中找到。</p><p></p><p></p><h4>Payara</h4><p></p><p>Payara 已<a href=\"https://blog.payara.fish/whats-new-in-the-august-2024-payara-platform-release?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布</a>\" <a href=\"https://www.payara.fish/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Payara Platform</a>\" 的2024 年 8 月份版本，包括社区版 6.2024.8 和企业版 6.17.0 以及企业版 5.66.0。这些版本解决了与 REST 端点和域重启相关的问题，包括：“/clear-cache” 端点中的错别字；方法类型和参数修复；以及在域重启期间部署到非预期实例的应用程序。这些版本的更多细节可以在<a href=\"https://docs.payara.fish/community/docs/Release%20Notes/Release%20Notes%206.2024.8.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">社区版 6.2024.8</a>\"、<a href=\"https://docs.payara.fish/enterprise/docs/Release%20Notes/Release%20Notes%206.17.0.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">企业版 6.17.0</a>\" 和 <a href=\"https://docs.payara.fish/enterprise/docs/5.66.0/Release%20Notes/Release%20Notes%205.66.0.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">企业版 5.66.0</a>\" 的发布说明中找到。</p><p></p><p></p><h4>Open Liberty</h4><p></p><p>IBM <a href=\"https://openliberty.io/blog/2024/08/13/24.0.0.8.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布</a>\" <a href=\"https://openliberty.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Open Liberty</a>\" 24.0.0.8，该版本引入了：无版本特性，简化选择 MicroProfile、Jakarta EE 和 Java EE 平台兼容特性的过程；<a href=\"https://openliberty.io/docs/latest/reference/feature/audit-2.0.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Audit 2.0</a>\"，为不使用 REST Handler 应用程序的用户而设计，但不生成与 Audit 1.0 相同的 REST Handler 应用程序记录；以及新的 <a href=\"https://microprofile.io/specifications/microprofile-config/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">MicroProfile Config</a>\" 规范使用<a href=\"https://openliberty.io/blog/2024/08/13/24.0.0.8.html#guides?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">指南</a>\"，针对外部化 CI/CD 的环境特定微服务配置。</p><p></p><p></p><h4>Helidon</h4><p></p><p><a href=\"https://helidon.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Helidon</a>\" 4.1.0 发布，特性包括对 JDK 22 和 JDK 23 的支持、MicroProfile 6.1 以及 gRPC 的 Helidon MP 实现。其他值得注意的变化包括：由于 Java <a href=\"https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/util/concurrent/ConcurrentHashMap.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">ConcurrentHashMap</a>\" 类不提供对 Java <a href=\"https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/util/concurrent/locks/ReentrantReadWriteLock.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">ReentrantReadWriteLock</a>\" 类的服务加载，因此改为使用 Java <a href=\"https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/util/HashMap.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">HashMap</a>\" 类；改进了 HTTP 前言和头部的解析。此版本的更多细节可以在 <a href=\"https://github.com/helidon-io/helidon/blob/4.1.0/CHANGELOG.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\" 中找到。</p><p></p><p></p><h4>Quarkus</h4><p></p><p><a href=\"https://quarkus.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Quarkus</a>\" 3.13.2 是 3.13 版本系列的 <a href=\"https://quarkus.io/blog/quarkus-3-13-2-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">第二个维护版本</a>\"，包含了依赖项升级和一些值得注意的变化，例如：在 <a href=\"https://quarkus.io/extensions/io.quarkus/quarkus-websockets-next/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">WebSockets Next</a>\" 扩展中，使用赋给 quarkus.http.root-path 属性的值，不使用 <a href=\"https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/HttpRootPathBuildItem.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">HttpRootPathBuildItem</a>\" 类的实例与 <a href=\"https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/RouteBuildItem.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">RouteBuildItem</a>\" 类中定义的 build() 方法；确保所有实现了 Java <a href=\"https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/AutoCloseable.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">AutoCloseable</a>\" 接口的绑定器都会被关闭。此版本的更多细节可以在<a href=\"https://github.com/quarkusio/quarkus/releases/tag/3.13.2?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">更新日志</a>\" 中找到。</p><p></p><p></p><h4>Micrometer</h4><p></p><p><a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Micrometer Metrics</a>\" 1.14.0 的第二个里程碑版本包含了依赖升级和一些新特性，例如：在 <a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-observation-test/src/main/java/io/micrometer/observation/tck/ObservationValidator.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">ObservationValidator</a>\" 类中添加了历史跟踪；一个新的 <a href=\"https://github.com/micrometer-metrics/micrometer/blob/main/micrometer-core/src/main/java/io/micrometer/core/instrument/binder/jvm/JvmThreadDeadlockMetrics.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">JvmThreadDeadlockMetrics</a>\" 类，作为收集 JVM 死锁线程的新指标。此版本的更多细节可以在<a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.14.0-M2?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\" 中找到。</p><p></p><p>类似地，Micrometer Metrics 的 1.13.3 和 1.12.9 版本带来了文档改进、依赖项升级，解决了一些显著的问题，例如：通过添加新的 factoryType 标签解决 Prometheus 标签冲突问题；以及通过禁用 kotlinSourcesJar 文件夹解决了它与 sourcesJar 文件夹的冲突问题。这些版本的更多细节可以在 <a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.13.3?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">1.13.3</a>\" 和 <a href=\"https://github.com/micrometer-metrics/micrometer/releases/tag/v1.12.9?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">1.12.9</a>\" 的发布说明中找到。</p><p></p><p><a href=\"https://github.com/micrometer-metrics/tracing/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Micrometer Tracing</a>\" 1.4.0 的第二个里程碑版本包含了依赖升级，最值得注意的是 Micrometer Metrics 1.14.0-M2。由于这是一个预发布版本，<a href=\"https://github.com/micrometer-metrics/tracing?tab=readme-ov-file#milestone-releases&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">仅用于测试</a>\"，因此没有新特性。此版本的更多细节可以在<a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.4.0-M2?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\" 中找到。</p><p></p><p>类似地，Micrometer Tracing 的 1.3.3 和 1.2.9 版本也包含了依赖项升级，最值得注意的是 Micrometer Metrics 1.13.3 和 1.12.9。这些版本的更多细节可以在 <a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.3.3?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">1.3.3</a>\" 和 <a href=\"https://github.com/micrometer-metrics/tracing/releases/tag/v1.2.9?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">1.2.9</a>\" 的发布说明中找到。</p><p></p><p></p><h4>Eclipse JKube</h4><p></p><p>Eclipse <a href=\"https://eclipse.dev/jkube/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">JKube</a>\" 1.17.0 <a href=\"https://blog.marcnuri.com/eclipse-jkube-1-17?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布</a>\"，带来了一些新特性：使用 <a href=\"https://cloud.google.com/java/getting-started/jib?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Jib</a>\" 构建多平台容器镜像；在 Kubernetes 的包管理器 <a href=\"https://helm.sh/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Helm</a>\" 中为 Maven 和 Gradle 插件新增的能力，允许开发者安装 JKube 生成的 Helm 图表并更新依赖项。此版本的更多细节可以在<a href=\"https://github.com/eclipse-jkube/jkube/releases/tag/v1.17.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\" 和这个 YouTube <a href=\"https://www.youtube.com/watch?v=z098YZu94gc&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">视频</a>\"中找到。</p><p></p><p></p><h4>Project Reactor</h4><p></p><p><a href=\"https://github.com/reactor/reactor/blob/main/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Project Reactor</a>\" 2024.0.0 的<a href=\"https://github.com/reactor/reactor/releases/tag/2024.0.0-M5?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">第五个里程碑版本</a>\"进行了依赖项升级： reactor-core 3.7.0-M5、reactor-netty 1.2.0-M5、reactor-pool 1.1.0-M4、reactor-addons 3.6.0-M2 和 reactor-kotlin-extensions 1.3.0-M2。同时，为与版本 2024.0.0-M5 保持一致，reactor-kafka 1.4.0-M1 保持不变。此版本的更多细节可以在<a href=\"https://github.com/reactor/reactor/compare/2024.0.0-M4...2024.0.0-M5?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">更新日志</a>\"中找到。</p><p></p><p>Project Reactor 2023.0.9，即<a href=\"https://github.com/reactor/reactor/releases/tag/2023.0.9?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">第九个维护版本</a>\"，进行了依赖项升级：reactor-core 3.6.9、reactor-netty 1.1.22、reactor-pool 1.0.8、reactor-addons 3.5.2 和 reactor-kotlin-extensions 1.2.3。同时，为与版本 2023.0.9 保持一致，reactor-kafka 1.3.23 保持不变。此版本的更多细节可以在<a href=\"https://github.com/reactor/reactor/compare/2023.0.8...2023.0.9?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">更新日志</a>\"中找到。</p><p></p><p>Project Reactor 2022.0.22，即<a href=\"https://github.com/reactor/reactor/releases/tag/2022.0.22?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">第二十二个维护版本</a>\"，进行了依赖项升级：reactor-core 3.5.20、reactor-netty 1.1.22、reactor-pool 1.0.8、reactor-addons 3.5.2 和 reactor-kotlin-extensions 1.2.3。同时，为与版本 2022.0.22 保持一致，reactor-kafka 1.3.23 保持不变。此版本的更多细节可以在<a href=\"https://github.com/reactor/reactor/compare/2022.0.21...2022.0.22?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">更新日志</a>\"中找到。</p><p></p><p>最后，<a href=\"https://github.com/reactor/reactor/releases/tag/2020.0.47?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Project Reactor 2020.0.47</a>\"，代号 Europium-SR47，进行了依赖项升级：reactor-core 3.4.41、reactor-netty 1.0.48、reactor-pool 0.2.13、reactor-addons 3.4.11 和 reactor-kotlin-extensions 1.1.11。同时，为与版本 2020.0.47 保持一致，reactor-kafka 1.3.23 和 reactor-rabbitmq 1.5.6 保持不变。此版本的更多细节可以在<a href=\"https://github.com/reactor/reactor/compare/2020.0.46...2020.0.47?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">更新日志</a>\"中找到。这个版本也是 2020.0 版本系列的最后一个，<a href=\"https://github.com/reactor/.github/blob/main/SUPPORT.adoc#support-timeline?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">开源支持</a>\"计划在 2024 年 8 月 31 日结束。</p><p></p><p></p><h4>Piranha Cloud</h4><p></p><p><a href=\"https://piranha.cloud/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Piranha</a>\" 24.8.0 <a href=\"https://github.com/piranhacloud/piranha/releases/tag/v24.8.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布</a>\"，带来了一些显著的变化，例如：移除了 SingleServlet 类；代码重构，增加了 <a href=\"https://github.com/piranhacloud/piranha/blob/current/single/src/main/java/cloud/piranha/single/SingleMain.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">SingleMain</a>\" 类作为 <a href=\"https://piranha.cloud/core-profile/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Piranha Core Profile</a>\" 的基类；新增了 <a href=\"https://github.com/piranhacloud/piranha/blob/current/multi/src/main/java/cloud/piranha/multi/MultiPiranha.java?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">MultiPiranha</a>\" 类，用于托管多个 Web 应用程序。此版本的更多细节可以在其<a href=\"https://javadoc.io/doc/cloud.piranha/project/latest/index.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">文档</a>\"和<a href=\"https://github.com/piranhacloud/piranha/issues?q=is%3Aissue+-label%3Awontfix+milestone%3A24.8.0+is%3Aclosed&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">问题跟踪器</a>\"中找到。</p><p></p><p></p><h4>JHipster</h4><p></p><p><a href=\"https://www.jhipster.tech/jhipster-lite/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">JHipster Lite</a>\" 1.15.0 <a href=\"https://x.com/pascalgrimaud/status/1823085947858178512?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布</a>\"，包含了错误修复、文档改进、依赖项升级和一个新特性，该特性可以在横屏模式下显示预设选项。此版本的更多细节可以在<a href=\"https://github.com/jhipster/jhipster-lite/releases/tag/v1.15.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\"中找到。</p><p></p><p></p><h4>Gradle</h4><p></p><p><a href=\"https://gradle.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">Gradle</a>\" 8.10 <a href=\"https://github.com/gradle/gradle/releases/tag/v8.10.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布</a>\"，解决了许多问题，并带来了显著的变化：支持 JDK 23；改进<a href=\"https://docs.gradle.org/8.10-rc-1/userguide/configuration_cache.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">配置缓存</a>\"，显著降低了缓存文件的体积并加快了加载速度；改进 <a href=\"https://docs.gradle.org/current/javadoc/org/gradle/api/invocation/GradleLifecycle.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">GradleLifecycle</a>\" API的行为和回调执行机制。此版本的更多细节可以在<a href=\"https://docs.gradle.org/8.10-rc-1/release-notes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">发布说明</a>\"中找到。</p><p></p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2024/08/java-news-roundup-aug12-2024/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE3MjUzMzE4ODMsImZpbGVHVUlEIjoiV2xBcmR2bndNeWZqcHJxMiIsImlhdCI6MTcyNTMzMTU4MywiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo1MDA3OTA2fQ.GQq6VqQyZnJMGbdgdMge0FnIAriTeGNNQee55bVLpGI\">https://www.infoq.com/news/2024/08/java-news-roundup-aug12-2024/</a>\"</p>",
    "publish_time": "2024-09-03 10:48:42",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "累计融资10 亿元，这家清华系AI创企致力于成为大模型时代首选“算力运营商”",
    "url": "https://www.infoq.cn/article/NBiP3Sw3Fkxx2MqqEt4z",
    "summary": "<p>2024&nbsp;年&nbsp;9&nbsp;月&nbsp;2&nbsp;日，无问芯穹（Infinigence&nbsp;AI）宣布完成近&nbsp;5&nbsp;亿元&nbsp;A&nbsp;轮融资，至此，在成立短短&nbsp;1&nbsp;年&nbsp;4&nbsp;个月内，无问芯穹累计已完成近&nbsp;10&nbsp;亿元融资。无问芯穹本轮融资联合领投方为社保基金中关村自主创新专项基金（君联资本担任管理人）、启明创投和洪泰基金，跟投方包括联想创投、小米、软通高科等战略投资方，国开科创、上海人工智能产业投资基金（临港科创投担任管理人）、徐汇科创投等国资基金，以及顺为资本、达晨财智、德同资本、尚势资本、森若玉坤、申万宏源、正景资本等财务机构。无问芯穹的过往投资方还包括百度、智谱、同歌创投等战略股东，以及红杉中国、砺思资本、徐汇资本、北极光创投、真格基金、惠隆创投、经纬创投、无限基金&nbsp;SEE&nbsp;Fund、金沙江创投、星连资本、绿洲资本、南山资本、光源资本、七熹投资等众多知名投资机构。</p><p>&nbsp;</p><p>无问芯穹本次融资募集的资金将用于加强技术人才吸纳与技术研发，深耕软硬协同、多元异构技术领域；深入推动产品商业化发展，保持Infini-AI异构云平台产品与市场间的紧密嵌合；强化生态合作，激活异构集群算力资源，构建支撑“M种模型”和“N种芯片”的AI算力底座，做AI模型算力的“超级放大器”，致力于成为大模型时代首选的“算力运营商”。</p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/d0/d0ec2da2eb735be00fb7752cdca67aaa.jpeg\" /></p><p></p><p>无问芯穹联合创始人、CEO夏立雪表示：“感谢多方资本对无问芯穹的青睐，让我们在‘天时、地利、人和’的创业征途上多了一份不负厚望的笃定。AI&nbsp;2.0浪潮带来的新‘二八定律’，Transformer&nbsp;架构统一了新的技术范式，意味着只需解决20%的关键技术问题即可支撑80%的垂直场景泛化，给软硬件联合优化技术的标准化和规模化提供了难得的机遇；中国算力生态正面临的供需矛盾以及资源分布不均的现状，为我们拉动上下游协力实现多元异构算力的高效整合创造了时代机遇；而我们源于清华电子系的深厚底蕴、十余年的技术积累和丰富的产业经验所形成的产研结合的‘复合型’团队，更成为AI领域的人才‘引力井’，构成了无问芯穹独特的人才竞争力。”</p><p></p><h2>做AI模型算力的“超级放大器”</h2><p></p><p>&nbsp;</p><p>大模型能够支撑的实际产业规模，取决于AI模型的实际可用算力，是一个壁垒更高、玩家更稀缺、价值量更高的领域。基于对AI行业的深刻理解和长期实践，无问芯穹超前判断大模型的实际可用算力不仅取决于芯片的理论算力，还可通过优化系数放大算力利用效率，通过集群规模放大整体算力规模，由此，无问芯穹提出“芯片算力×优化系数（软硬协同）×集群规模（多元异构）=AI模型算力”公式。遵循这一公式，无问芯穹将通过软硬件联合优化技术，持续提升芯片算力在大模型任务中的利用率，并通过多元异构算力适配技术，提升集群算力利用率，扩大行业整体算力供给。</p><p>&nbsp;</p>",
    "publish_time": "2024-09-03 12:00:49",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "C 语言老将从中作梗，Rust for Linux 项目内讧升级！核心维护者愤然离职：不受尊重、热情被消耗光",
    "url": "https://www.infoq.cn/article/HmS9mg9eK7YvA2b36ghj",
    "summary": "<p></p><h2>Rust for&nbsp;<a href=\"https://m.cnbeta.com.tw/view/1443886.htm#\">&nbsp;</a>\"Linux 内核维护者之一因“非技术原因”退出团队</h2><p></p><p></p><p>近日，InfoQ获悉，Rust for&nbsp;<a href=\"https://m.cnbeta.com.tw/view/1443886.htm#\">&nbsp;</a>\"Linux 内核维护者之一、微软工程师Wedson Almeida Filho 在<a href=\"https://lore.kernel.org/lkml/20240828211117.9422-1-wedsonaf@gmail.com/\">Linux 内核邮件列表</a>\"上写道：</p><p>&nbsp;</p><p></p><blockquote>我本人将退出Rust for Linux项目的维护者团队。&nbsp;之所以决定退出项目，是因为在过去四年的工作当中，我发现自己的精力和热情已经被严重消磨，越来越抗拒回应那些跟技术无关的废话。所以这份任务，最好是留给那些仍然抱有这份热情的成员。&nbsp;致Rust for Linux团队：感谢大家，你们最棒。很高兴能跟各位一起工作，我们共同讨论技术问题、寻找解决健全性漏洞的方法等等产，这些都是我宝贵的回忆和人生经历。很幸运能够与这样一个才华横溢、友好和善的团队携手并进。&nbsp;祝愿这个项目一切顺利。&nbsp;我坚信内核开发的未来在于内存安全语言。我不是那种很有前瞻性的人，但如果Linux没法把这项优势内化己用，我担心其他内核终将像取代Unix那样冲击Linux。</blockquote><p></p><p>&nbsp;</p><p>Wedson Almeida Filho 是一位微软工程师，在过去几年中为 Rust for the Linux 内核代码做出了大量贡献。Wedson 开发了许多 Rust Linux 内核功能，甚至还主持将EXT2 文件系统驱动程序移植到了 Rust。但他已经受够了，现在正退出 Rust for Linux 的工作。</p><p>&nbsp;</p><p>值得注意的是，该电子邮件还包含一个<a href=\"https://youtu.be/WiPp9YEBV0Q?t=1529\">YouTube 视频链接</a>\"，该视频是 Filho 在 2024 年 Linux 内核峰会上发表的演讲，在演讲中，他因在内核中使用 Rust 而遭到一些观众的强烈反对。</p><p>&nbsp;</p><p>观众中的批评者认为，Rust 的集成将给C语言开发者带来过度负担，他们将被迫学习一门新语言并保持与 Rust 绑定的兼容性。</p><p>&nbsp;</p><p>此外，一些开发人员还对 Rust 绑定的稳定性以及对 C 代码进行更改时可能出现的故障表示担忧。然而，Wedson和其他支持将 Rust 纳入内核的人认为，这些担忧被夸大了，Rust 可以与 C 共存，而不会损害内核的稳定性。他们认为，Rust 的好处（尤其是其内存安全功能）超过了集成带来的挑战。</p><p>&nbsp;</p><p>关于将 Rust 纳入 Linux 内核的争论凸显了开源社区在维护稳定的代码库和拥抱创新之间的更广泛的矛盾。</p><p>&nbsp;</p><p>虽然一些开发人员看重 C 的熟悉度和可靠性，但其他开发人员认为采用 Rust 等更新、更安全的语言对于 Linux 内核的长期健康和安全至关重要。这场辩论的结果可能会对 Linux 和更广泛的开源生态系统的未来产生重大影响。</p><p></p><h2>Linux 社区的反应</h2><p></p><p></p><p>Linux 社区中就是否将 Rust 纳入 Linux 内核展开了很多激烈的争论。在国外知名技术社区平台<a href=\"https://www.reddit.com/r/linux/comments/1f3q0l8/one_of_the_rust_linux_kernel_maintainers_steps/\">Reddit</a>\"上，用户关于这个问题的讨论十分激烈。以下是支持和反对在 Linux 内核中使用 Rust 的论据。</p><p></p><h3>支持将Rust 纳入 Linux 内核的论据：</h3><p></p><p>提高内存安全性：Rust 的内存安全功能可以帮助防止 C 和 C++ 代码中出现的大量错误和安全漏洞。这在像 Linux 内核这样庞大而复杂的代码库中尤为重要，因为即使是技术娴熟的程序员也难免会犯错。此外，<a href=\"https://security.googleblog.com/2022/12/memory-safe-languages-in-android-13.html\">谷歌的数据</a>\"表明，在现有代码库中使用 Rust 代替 C 和 C++ 可以减少高严重漏洞的数量。</p><p>&nbsp;</p><p>吸引新的开发者：将 Rust 纳入内核有助于吸引那些更熟悉现代语言的新开发人员，他们可能会因为使用 C 语言的难度和复杂性而放弃使用。这也是Linux 创建者Linus Torvalds批准将 Rust 纳入内核的主要原因之一。</p><p></p><h3>反对将 Rust 纳入 Linux 内核的论据：</h3><p></p><p>内核开发人员对变更的抵制：许多长期从事内核开发的人员不愿意学习一门新语言，尤其是当他们没有明显需要学习新语言时。他们认为，他们宁愿花时间学习更多关于内核的知识，也不愿学习一种新的方式来完成他们已经知道如何做的工作。这种抵制表现为对于那些在内核中提倡使用 Rust 的人的敌对和不专业的行为，例如对 Wedson Almeida Filho 的态度。</p><p>&nbsp;</p><p>维护 C 和 Rust 代码之间兼容性的难度：确保对 C 代码的更改不会破坏 Rust 代码，反之亦然，是一项重大挑战。在内核中缺乏全面的自动化测试的情况下，这尤其成问题。</p><p>&nbsp;</p><p>对 Rust 成熟度的担忧：一些内核开发人员担心Rust 还不够成熟，无法用于像 Linux 内核这样重要的项目。他们担心该语言及其工具仍在快速发展，依赖它们可能会导致不稳定和不可预见的问题。</p><p>&nbsp;</p><p>一位观看了Wedson 和 Kent 在会议上的演讲完整视频和这次会议的其他一些视频的Reddit用户认为，Linux 内核开发人员看起来非常糟糕。</p><p>&nbsp;</p><p></p><blockquote>“看起来他们正在现场对演讲者进行嘲讽，完全不关心他们是如何进行 30 分钟的演讲的，那场会议看上去让人很不舒服。他们对待Wedson显然是不尊重的，而且是当面直说的，所以我认为不应该责备Wedson辞职。我读了一些关于 Rust for Linux 的评论，Linux 内核似乎是一个特别有毒的工作环境，里面充满了那种自己没什么成熟经验，但却仍然自以为是的工程师们。”</blockquote><p></p><p></p><h2>为什么 Linux 内核要反抗 Rust？</h2><p></p><p></p><p>从上述 Reddit 讨论帖和 Wedson Almeida Filho 的辞职邮件中可以似乎看出，现在还有很多人反对将 Rust 纳入 Linux 内核。</p><p>&nbsp;</p><p>这种抵制并不一定源于对语言本身的厌恶，而是由多种因素共同导致的，其中许多因素反映了软件开发中更广泛的问题。其中一些是技术问题，但更多的则是非技术上的问题。</p><p>&nbsp;</p><p>从技术角度而言，反对将 Rust纳入Linux内核的原因集中在两点上：第一是维护负担和API稳定性，第二是复杂性和“不安全”难题。</p><p>&nbsp;</p><p>人们反复担心的是保持 C 和 Rust 之间兼容性的实用性。内核开发人员（其中许多人都是资深的 C 专家）表示，他们担心需要承担额外的责任，以确保他们的 C 代码更改不会无意中破坏 Rust 组件。鉴于内核中的自动测试有限，这一点尤其重要。</p><p>&nbsp;</p><p>此外，一些开发人员认为，为了弥合 Rust 严格的安全规则与内核级编程固有复杂性之间的差距，可能需要在 Rust 中过度使用“unsafe”关键字。这被视为可能会破坏 Rust 旨在带来的安全优势。</p><p>&nbsp;</p><p>非技术原因是更深层次的开发者之间的文化冲突。在Reddit和Hacker News上，都有用户提到Wedson的退出是一个非常典型的“旧团队”与“新团队”之间的分歧。这种声音强调：</p><p>&nbsp;</p><p></p><blockquote>“一个新团队认为他们将重写一切并让世界变得更美好。而老团队多年来则是一直埋头苦干，他们对代码了如指掌，并经过艰苦的调试，才让系统进入目前的状态（在这种情况下，这是一个非常成功的状态，因为 Linux 文件系统几乎将所有数据存储在云中），他们更加脚踏实地。新团队思考问题的方式可能过于简单，让老团队感到不被尊重。（这种明显的不尊重可能是你听到这种咄咄逼人的语气的原因。）这是一种非常典型的文化冲突。”</blockquote><p></p><p>&nbsp;</p><p>此外，想将Rust纳入到Linux也面临着一些变革阻力和学习曲线难题。许多长期的内核维护者表示不愿意花时间和精力学习一门新语言，尤其是如果他们已经成功使用 C 多年，这种抵触情绪随着 Rust 的责任落在他们身上而加剧。</p><p>&nbsp;</p><p>更糟糕的是，一些内核开发人员和 Rust 拥护者似乎在开发理念上存在根本分歧。内核社区重视稳定性、成熟的方法论以及对复杂代码库的深入理解，他们可能会认为 Rust 的严格规则和对内存安全的重视是一种额外的限制，而不是一种好处。</p><p>&nbsp;</p><p>Reddit 讨论中的一些评论暗示，人们认为 Rust 支持者是“精英主义者”，或者对 C 开发人员的专业知识不屑一顾。再加上长期使用 C 语言的开发人员和那些更熟悉新语言的开发人员之间可能存在的代沟，这进一步加剧了 Rust 融入具有完善规范和等级制度的社区的难度。</p><p>&nbsp;</p><p>然而，不得不提的是，并非所有 Linux 内核开发人员都反对 Rust。许多人看到了它的潜在优势并支持将其纳入。但是，上述观点凸显了技术、社会和哲学因素的复杂相互作用，这些因素导致了 Rust 在 Linux 内核团队内部面临的抵制。</p><p></p><h2>Rust在Linux内核中的未来</h2><p></p><p></p><p>在抵制和支持两种声音兼而有之的情况下，Rust在Linux内核中的未来将何去何从？在近日Verizon开源官Dirk Hohndel与Linux Torvalds的一次关于Linux的现状以及未来发展方向的公开对话中或许能窥见些端倪。</p><p>&nbsp;</p><p>在这次公开对话中，Hohndel与Torvalds谈到了如何将Rust语言引入Linux。Torvalds对Rust的应用速度未能如预期般加快感到失望。“我原本指望着更新速度会更多，但问题在于不少老一代内核开发人员更习惯于使用C语言，而不太熟悉Rust。他们不太愿意学习一种在某些方面与老办法截然不同的新语言。因此，Rust的普及受到了一些阻力。”</p><p>&nbsp;</p><p>除此之外，Torvalds还评论道，“另一个原因在于，Rust自身的基础也并不是十分牢靠。”</p><p>&nbsp;</p><p>最后，Torvalds表示自己并不关心云和Kubernetes这类新技术。“内核才是唯一需要关注的重点。”</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://lore.kernel.org/lkml/20240828211117.9422-1-wedsonaf@gmail.com/\">https://lore.kernel.org/lkml/20240828211117.9422-1-wedsonaf@gmail.com/</a>\"</p><p><a href=\"https://ostechnix.com/rust-maintainer-for-linux-kernel-resigns/\">https://ostechnix.com/rust-maintainer-for-linux-kernel-resigns/</a>\"</p>",
    "publish_time": "2024-09-03 15:24:39",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]