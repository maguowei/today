[
  {
    "title": "Atlassian使用边车和高容错设计将可用性提升到6个9以上",
    "url": "https://www.infoq.cn/article/2k0iiPOYOP8ZDMioZoUR",
    "summary": "<p>Atlassian工程播客最近分享了其租户上下文服务（Tenant Context Service，TCS）如何让<a href=\"https://www.atlassian.com/engineering/atlassian-critical-services-above-six-nines-of-availability?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjYwNTU5OTQsImZpbGVHVUlEIjoiQUNPWTlXeGRUM2tyRzVhSSIsImlhdCI6MTY2NjA1NTY5NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.zaQPE8xFZcs_6ju_Wd07sFSjxW1VqOH_SIOa6OP54Gg\">可用性超过了99.9999%</a>\"。Atlassian通过实现高度自治的客户端边车实现了这种高可用性，能够主动保护自己免受AWS区域故障的影响。边车通过并发地查询多个TCS服务并确保请求在内部是完全隔离的来实现这一目标。</p><p></p><p>TCS是Atlassian的一项关键基础设施服务，在大多数Atlassian云产品的每个Web请求路径中都会被多次调用。它提供了“租户元数据”的高可用性、读优化的视图。2022年7月，TCS每天处理320亿次请求，峰值请求率为每秒586308次。总体可用性超过了99.999%，最高吞吐量的客户端在高峰期的平均响应时间约为11μs。</p><p></p><p>为了实现这些指标，Atlassian的工程师采用<a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/modernization-data-persistence/cqrs-pattern.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjYwNTU5OTQsImZpbGVHVUlEIjoiQUNPWTlXeGRUM2tyRzVhSSIsImlhdCI6MTY2NjA1NTY5NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.zaQPE8xFZcs_6ju_Wd07sFSjxW1VqOH_SIOa6OP54Gg\">CQRS模式</a>\"设计了TCS。当“租户元数据”目录发生变化时，TCS将“租户元数据”的转换视图导入<a href=\"https://xie.infoq.cn/article/9ea2076da592ff48b660f8f34\">AWS DynamoDB</a>\"。此外，TCS广泛使用L1内存缓存，以及基于SNS的缓存失效广播系统。与客户端应用程序一起部署的边车作为Web服务器缓存的远程扩展，并通过与多个TCS部署通信来提高可用性。下图描绘了TCS的架构。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/news/2022/09/atlassian-high-availability/en/resources/1Atlassian-TCS-Architecture-1664329199285.png\" /></p><p></p><p>来源：<a href=\"https://www.atlassian.com/engineering/atlassian-critical-services-above-six-nines-of-availability?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjYwNTU5OTQsImZpbGVHVUlEIjoiQUNPWTlXeGRUM2tyRzVhSSIsImlhdCI6MTY2NjA1NTY5NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.zaQPE8xFZcs_6ju_Wd07sFSjxW1VqOH_SIOa6OP54Gg\">https://www.atlassian.com/engineering/atlassian-critical-services-above-six-nines-of-availability</a>\"</p><p></p><p>由于边车的缓存命中率通常超过99.5%，无法命中的情况相对较少。因此，TCS边车会在缓存未命中时抢先发送重复的请求——一个发送给选定的“主”父TCS，一个发送给随机的辅助TCS。这种方法的一个好处是，边车将无缝地处理父节点或网络故障。它不需要检测失败的请求，因为“后备”请求已经在进行中。</p><p></p><p>Atlassian的主要开发者David Connard解释了这种方法的细节。</p><p></p><p></p><blockquote>虽然这种逻辑可以很好地应对快速失败的场景，但还需要为缓慢失败的场景做好计划，这通常是系统要处理的最成问题的故障模式，此时关键要进行一些适当的隔离。对于我们来说，适当的隔离意味着任何单亲TCS、AWS服务或整个AWS区域的故障都不能影响我们的边车在不同区域运行的能力。</blockquote><p></p><p></p><p>为了实现这种高水平的隔离，Atlassian工程师使用独立的任务队列和线程池来处理请求，对于每个父TCS来说是完全隔离的（甚至连HTTP连接池实例都是如此）。他们通过减少请求负载（有选择地丢弃请求）和动态调整线程池（限制延迟较低的TCS部署的线程池的大小）来防止因任务排队并消耗额外的资源导致的慢故障场景。</p><p></p><p>在服务器端，失效广播系统进行跨区域调用，发布失效消息。由于跨区域延迟明显较高，可能会影响失效广播。Connard解释了工程师如何保护TCS免受这个问题的影响。</p><p></p><p></p><blockquote>不能让跨区域停机（例如某个目标区域中的<a href=\"https://www.infoq.cn/topic/AWS\">AWS</a>\" SNS故障）延迟或阻止从该TCS服务器向其他区域发送失效广播。为了实现这种隔离，TCS服务器失效广播系统将所有失效广播数据和处理线程复制到单独的特定于区域的队列中。然后，隔离的工作线程仅从其中一个队列发布到每个目标区域。向一个目标区域发送广播的速度减慢或完全失败只会减缓该区域的处理速度，不会影响向其他目标区域发布消息。</blockquote><p></p><p></p><p>除了提高系统的可用性外，Atlassian的工程师还采用了多种方法来伸缩系统，包括使用<a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-common-scenarios.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjYwNTU5OTQsImZpbGVHVUlEIjoiQUNPWTlXeGRUM2tyRzVhSSIsImlhdCI6MTY2NjA1NTY5NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.zaQPE8xFZcs_6ju_Wd07sFSjxW1VqOH_SIOa6OP54Gg\">SNS扇出模式</a>\"、包含边车网络监控功能的自定义请求负载平衡策略，以及采用gRPC作为HTTP API的低延迟替代方案。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/09/atlassian-high-availability/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2NjYwNTU5OTQsImZpbGVHVUlEIjoiQUNPWTlXeGRUM2tyRzVhSSIsImlhdCI6MTY2NjA1NTY5NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.zaQPE8xFZcs_6ju_Wd07sFSjxW1VqOH_SIOa6OP54Gg\">Atlassian Exceeds 99.9999% of Availability Using Sidecars and Highly Fault-Tolerant Design</a>\"</p>",
    "publish_time": "2022-10-18 09:21:46",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "vivo AI计算平台的轩辕文件存储实践",
    "url": "https://www.infoq.cn/article/3oFSOWfYGsX5h7xzsIe6",
    "summary": "<p></p><h1>背景</h1><p></p><p><a href=\"https://www.infoq.cn/theme/93\">vivo AI计算平台</a>\"是在2018年底开始着手建设的，致力于解决统一高性能训练环境、大规模分布式训练、计算资源的高效利用调度等痛点。经过将近四年的持续迭代，平台建设和落地取得了很大进展，由当初服务深度学习为主，到现在演进成包含VTraining、VServing、VContainer三大模块，对外提供模型训练、模型推理和容器化等能力，成为&nbsp;<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651119125&amp;idx=2&amp;sn=709deb53cf5b6f951cfae257356ad264&amp;chksm=bdb926468aceaf50e635e45a1e35fb372bacfc29419572226a4b6ba68706fb524dbd59531b35&amp;scene=27#wechat_redirect\">vivo</a>\" AI领域的核心基础平台。VTraining是一站式的通用训练平台，基于Kubernetes集群搭建，支持多种框架的大规模分布式训练，并配备&nbsp;PB级别规模的分布式存储。现在VTraining的用户已经超过700人，覆盖了推荐，语音，视觉，NLP，影像等方向核心业务。本文将分享VTraining的轩辕文件存储实践心得。</p><p></p><h1>VTraining对存储系统的需求</h1><p></p><p>当前VTraining对存储系统的需求主要体现在以下方面。</p><p></p><p>共享：为了避免数据在节点之间来回拷贝,所以需要一个共享的存储空间来收集和存储数据。业界一般采取计算和存储分离的分案，使用远程分布式存储来存储训练数据。</p><p></p><p>高性能：深度学习任务需要大量的数据来训练模型，因此存储系统要提供高带宽来确保数据的流动足够快，来满足需求。特别是随着GPU的计算能力越突出，往往会造成存储系统更大的性能瓶颈。</p><p></p><p>易管理：数据管理简单，存储集群易维护，容量扩缩容方便。</p><p></p><h1>VTraining存储系统的前期痛点</h1><p></p><p>VTraining建设初期，存储方面的建设并不是一帆风顺的。从开始到现在，存储设计也踩过一些坑，底层数据存储系统也经历过由glusterfs到轩辕文件的迁移。在前期使用glusterfs作为底层存储系统时，遇到过以下问题：&nbsp;</p><p></p><h2>痛点1：性能满足不了训练需求</h2><p></p><p>理论和实践上分析，GlusterFS目前主要适用大文件存储场景，VTraining训练场景比较复杂，在多个场景下性能存储瓶颈影响训练任务，常见的如下：</p><p></p><p>遍历包含海量文件的目录效率低下</p><p></p><p>GlusterFS使用弹性哈希算法（<a href=\"https://blog.csdn.net/liuaigui/article/details/70219377\">https://blog.csdn.net/liuaigui/article/details/70219377</a>\"）代替传统分布式文件系统中的集中或分布式元数据服务，这种访问方式的特点就是当知道文件名，查找和定位会非常快，但是，如果事先不知道文件名，要列出文件目录(ls或ls -l)，性能就会大幅下降。VTraining很多训任务需要大量的文件进行训练，比如图片。这样会造成有海量文件目录场景很常见，在训练加载数据时，是必须先遍历目录，十分影响训练任务效率，极端情况下会卡死训练任务。</p><p></p><p>小文件访问性能低</p><p></p><p>其实海量小文件的性能问题一直是工业界和学术界公认的难题，一般在针对这个问题的优化上会从元数据管理、缓存机制、合并小文件等方面展开。glusterfs本身没有对小文件作额外的优化措施，这样在碰到海量小文件的情况下glusterfs显得很被动，但是海量小文件在深度学习训练中是很常见，如果不做额外的优化，训练效率会极低。</p><p></p><p>大规模训练时存储性能问题</p><p></p><p>随着VTraining的用户越来越多，相对应的任务数量也在变多，这使得远端分布式存储集群的IO压力与日俱增。一方面多个客户端同时访问会形成流量竞争，glusterfs客户端没有很好的限流策略会造成部分训练任务的IO处于饥饿状态，训练任务长时间效率低下；一方面大量的客户端直接访问分布式存储服务器，会使存储服务器负载过高，IO时延过高，不仅会造成客户端访问过慢，严重的时候可能会压垮存储集群，造成存储不可用。一般针对这种情况，很多设计会在客户端和存储集群之间来加缓存来缓解存储服务器压力，glusterfs客户端也有缓存设计，但是缓存的存储介质是基于内存，对训练数据总量达到PB级别计算平台来说，明显是不适用的。</p><p></p><h2>痛点2：容量负载均衡问题</h2><p></p><p></p><p>glusterfs的扩容比较简单，但是glustefs的容量负载均衡也没有很好考虑执行的自动化、智能化和并行化。扩容之后，需要手工执行负载均衡，也没有考虑当前系统的负载情况，可能影响正常的业务访问。容量均衡过程中由于采用了Hash算法进行数据分布，节点一变会动全身，增加和删除节点增加了大量数据迁移工作，严重影响整个集群性能。但如果不进行容量负载均衡，会使老的节点负载过重，存在局部节点性能问题。所以Vtraining为了尽量减少扩容之后数据均衡带来的影响，采用增加集群的方案，但这无疑带了更大管理成本。</p><p></p><h1>轩辕文件存储系统</h1><p></p><p></p><p>轩辕文件存储是vivo互联网基础平台存储团队和juicefs团队共同合作开发给内部使用的存储系统，是一款面向云原生设计的高性能文件系统。它采用了”数据“与”元数据“分离的存储架构，从而实现文件系统的分布式设计。主要的核心架构如下：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/yy/d0/yy15c0ffabe6b0f786ba0c15c028ded0.png\" /></p><p>轩辕文件存储架构图</p><p></p><p>主要包括三个特性组件：</p><p></p><p>客户端JuiceFS</p><p></p><p>客户端<a href=\"https://s.geekbang.org/search/c=0/k=juicefs/t=\">JuiceFS提</a>\"供了丰富的API，兼容了当前大多数主流应用平台，可以在最上层无缝对接大数据，机器学习，人工智能等平台，为其提供海量、弹性、低价的高性能存储。在数据存储和元数据引擎上采用了可插拔架构，能对接各种各样的对象存储，用户可以根据自己需求选择合适的底层存储。另外juicefs的缓存策略也十分灵活，很大程度上能解决存储性能不足的问题，juicefs具体介绍请参考<a href=\"https://www.juicefs.com/docs/zh/community/introduction/\">https://www.juicefs.com/docs/zh/community/introduction/</a>\"</p><p></p><p>元数据引擎</p><p></p><p>由于JuiceFS元数据引擎可插拔特性，可以使用户会选择性能较好的元数据引擎来加速元数据访问，比如redis，Tikv等高性能数据库。轩辕文件存储的元数据引擎是vivo公司自研的一款具备高性能，高稳定性，多数据模型等特性的分布式磁盘KV数据库，虽然达不到redis那么高的性能，但是会大大减少成本压力，并针对AI特征业务做更多的应用场景适配。</p><p></p><p>数据存储引擎</p><p></p><p>数据存储引擎使用的是vivo公司自研的轩辕对象存储。轩辕对象存储提供了海量，安全，低成本，高性能，高可靠的存储服务解决方案。目前提供了多种语言SDK，能使开发者快速接入存储集群，也能更好对接JuiceFS客户端。</p><p></p><h1>轩辕文件存储如何解决VTraining痛点</h1><p></p><p></p><h2>对象存储作为数据持久层</h2><p></p><p>在存储系统选型中，对象存储是能够承载百亿规模文件的，但由于缺少原生目录支持，缺少POSIX语句支持，元数据性能弱等方面问题，传统的对象存储并不适合计算平台深度学习特别是海量小文件训练场景。客户端JuiceFS可以用任意对象存储作为数据持久层，保存数据内容的同时，JuiceFS客户端100%兼容POSIX，HDFS，S3三大主流访问协议，能支持所有的机器学习、深度学习框架。这样只要解决元数据性能问题，轩辕文件存储使用对象存储的作为计算平台数据持久层是非常适合的。</p><p></p><h2>高性能分布式元数据服务</h2><p></p><p>相对于glusterfs的弹性hash算法，轩辕文件存储采用元数据和数据分离存储的架构，用高性能的分布式元数据服务来管理元数据，访问效率大大增加。另外为了进一步提高元数据存储的性能，我们采用了高性能磁盘nvme来作为存储介质。</p><p></p><h2>合理的配置缓存</h2><p></p><p>客户端JuiceFS提供了多种缓存能力，客户端访问过的数据，可以缓存在指定的存储介质中。通过合理的使用JuiceFS缓存机制，不仅可以减少远程网络访问的开销，加速数据读取速度，大幅度提升了训练效率，还能显著减少客户端对远端存储集群的API调用，缓解了存储服务器IO压力，减少服务器负载，使存储集群更健康。同样，元数据也会自动缓存客户端内存中来提高元数据的访问性能。</p><p></p><h2>灵活的限流策略</h2><p></p><p>JuiceFS客户端支持读写限速，多用户访问的场景下，可以很好解决客户端IO竞争问题，减少饥饿现象。</p><p></p><h2>合理的容量负载均衡机制</h2><p></p><p>轩辕文件存储对元数据和数据都是通过统一的中心架构进行数据分布的，相比采用Hash算法的glusterfs在容量负载均衡具有天然优势。轩辕文件存储容量负载均衡很好的考虑执行的自动化、智能化和并行化，最大化的减少对当前业务的影响。</p><p></p><h2>结论</h2><p></p><p>实践证明，VTraining在使用轩辕文件存储系统后，原先的痛点都得到了极大的改善或解决。</p><p></p><h1>轩辕文件存储在VTraining平台应用</h1><p></p><p></p><h2>juicefs CSI与Flexvolume对比</h2><p></p><p></p><p>VTraining基于Kubernetes集群搭建，JuiceFS提供&nbsp;CSI(<a href=\"https://www.juicefs.com/docs/zh/csi/introduction/\">https://www.juicefs.com/docs/zh/csi/introduction/</a>\")和&nbsp;flexvolume两种插件支持，通过Kubernetes原生的存储方案来访问数据，对Kubernetes生态友好。当前VTraining采用的是flexvolume,结构如下：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/a2/34/a2373077ac0669eee5d0c84058b3ef34.png\" /></p><p>flexvolume访问</p><p></p><p>当前K8s接入存储的主流方式CSI，为什么VTraining会选择flexvolume，主要由以下几点原因：</p><p></p><p>1.&nbsp;监控方面，JuiceFS客户端是支持各项运行指标监控的。训练任务如果通过flexvolume访问存储，它对JuiceFS客户端是独占的；训练任务如果通过CSI访问存储，它对JuiceFS客户端是共享的（同一节点，如下图所示）。所以在采用&nbsp;CSI的情况下，是监控不到一个任务的存储运行的指标情况，因为这个客户端的监控反映的是多个任务融在一起的情况。单个任务在存储运行方面的无法监控，这是我们不希望看到的。</p><p></p><p>2.&nbsp;&nbsp;性能方面，JuiceFS CSI和&nbsp;flexvolume虽然使用的方式不一样，但是最终都是通过JuiceFS客户端挂载对应的存储卷到训练节点供训练任务访问存储，性能只跟JuiceFS客户端有关，CSI和&nbsp;flexvolume只是启动JuiceFS客户端程序的方式不一样，所以CSI在这方面并不占优势，在资源充足的情况下CSI性能可能会低，因为CSI多个任务共享一个客户端（如下图所示），单进程资源利用不充分。</p><p></p><p>3.&nbsp;故障影响方面，因为JuiceFS CSI启用的客户端是共享的（如下图所示），所以客户端异常之后，当前节点上共享该客户端的任务都会受到影响。而独占客户端flevolume，只会影响独占客户端的任务。另外JuiceFS CSI把存储访问集成到了k8s集群中，需要与K8s的主要组件进行交互，如果设计不合理，有可能会影响到整个K8s集群。&nbsp;</p><p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/5a/9c/5a0942a78001a32b5ff6f33fde29ca9c.png\" /></p><p></p><p>4.&nbsp;管理方面，JuiceFS CSI把对JuiceFS存储的访问集成到K8s集群中，所以通过CSI访问存储时，得符合K8s得一些规范，必须要生成对应的PV和PVC资源，这需要额外的策略去管理这些资源。而flexvolume的直接调用juicefs客户端程序进行挂载给任务pod使用，简单明了，管理成本少。</p><p></p><p>5.&nbsp;缓存方面，JuiceFS CSI驱动&nbsp;v0.10.0及以上版本不支持在&nbsp;--cache-dir&nbsp;挂载选项中使用通配符，但通配符其实在VTraining平台是很有用的，因为VTraining平台集群中的节点有多种类型的机型，不同机型的缓存磁盘资源是不同的，一个磁盘对应一个缓存目录，所以不同机型的节点的缓存目录个数不一样，(如下图所示)。如果参数--cache-dir不支持使用通配符，那么这个参数是无法设置的。因为你不知道训练任务会调度到哪个节点，这个节点上存在哪些缓存目录。而flexvolume是支持在挂载参数中使用通配符。这样你只需要让磁盘的挂载目录放在同一个父目录下，再根据目录名来使用对应的通配符就能适用所有的机型，比如下面的的V100和T4机型挂载参数--cache-dir我只要设置/var/lib/kubelet/juicefs_cache/*cache就能让juicefs客户端找到对应的缓存目录而不用去关心任务运行在哪个节点。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/a8/ff/a8c0b3f19d8432da761807289f2f4cff.png\" /></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/02/8c/0261e122eb6950b15a10ae609fffca8c.png\" /></p><p>                                           上图：V100机器的缓存目录&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>                                            下图：T4机器的缓存目录&nbsp;&nbsp;</p><p></p><p>综上所述，VTraining当前没有把轩辕文件存储访问方式从flexvolume切换到CSI。但是这并不是说JuiceFS CSI不如flexvolme，只是JuiceFS&nbsp; flexvolume更适合当前VTraining。JuiceFS的CSI和flexvolume的具体使用方式请参考juicefs官网<a href=\"https://www.juicefs.com/docs/zh/\">https://www.juicefs.com/docs/zh/</a>\"</p><p></p><h2>轩辕文件存储的缓存应用</h2><p></p><p>为了提高性能，轩辕文件存储的客户端JuiceFS实现了多种缓存机制来降低访问的时延和提高吞吐量，包括元数据缓存，数据缓存，以及多个客户端之间的缓存共享。正是因为轩辕文件存储强大的缓存机制大幅度的提升了VTraining平台的训练效率。</p><p></p><h3>元数据缓存设置</h3><p></p><p>JuiceFS支持在内核和客户端内存中缓存元数据以提升元数据的访问性能。</p><p>内核中可以缓存属性，文件项，目录项三种元数据，以提高lookup和getattr的性能。相对应的三个参数控制缓存时间如下</p><p><img src=\"https://static001.infoq.cn/resource/image/62/16/620ed65624cf5f373d8c08eff92dde16.jpg\" /></p><p>为了减少客户端和元数据服务之间频繁的列表和查询操作，客户端可以把经常访问的目录完整地缓存在客户端内存中，通过设置如下参数</p><p><img src=\"https://static001.infoq.cn/resource/image/fd/57/fd1ca6c3c672f308258de0e914d17657.jpg\" /></p><p></p><h3>数据缓存设置</h3><p></p><p>客户端JuiceFS的数据缓存策略很灵活，缓存的介质可以是内存和磁盘。对于数据量达到PB级别的计算平台来说，内存做缓存肯定不现实，VTraining平台上的训练任务选择的缓存介质是SSD磁盘，完全不用担心缓存io性能。当前VTraining会根据不同业务使用不同的缓存策略，主要可以分为两种：本地缓存和独立缓存集群</p><p></p><h4>本地缓存</h4><p></p><p>本地缓存就是训练任务和它的缓存数据都在同一节点如下图所示：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/32/8a/32236b0e3cd66aee72ef4ec857f3748a.png\" /></p><p></p><p></p><p>本地缓存</p><p>这种模式的好处就是能节省远端访问带来的网络开销，最大化提升训练任务IO性能，在缓存命中率有保证的情况下训练效率是最高的。在缓存策略全面上线之后，各个业务的用户都反馈良好，训练效率都有显著的提升，下图展示了图像训练任务缓存使用前后效率的对比：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/a5/52/a5d5f722f6fe274f07d3f5461832b952.png\" /></p><p>图像训练任务缓存使用前后效率对比</p><p></p><p>缓存组和独立缓存集群</p><p></p><p>本地缓存虽然效率提升明显，但是在某些场景下也存在一些问题，特别是大数据集训练，主要有以下几点：</p><p></p><p>1.&nbsp;各节点缓存磁盘容量有限，存储的缓存数据是有限的，当节点上的训练任务所需的数据多于缓存磁盘容量，是必然会出现缓存miss的，极端情况下会造成节点缓存失效。</p><p></p><p>2.&nbsp;相同的训练数据可能会被不同的训练任务共享，这些任务很有可能被调度到不同节点上，这样会造成多个节点的缓存里面有同一份缓存数据，对于集群来说缓存资源利用率不高，缓存的有效数据变少，也会加剧缓存失效。</p><p></p><p>3.&nbsp;很多时候需要通过数据集提前预热，以提升第一次访问数据时的性能。本地缓存这种方式就对预热不是很友好。首先你不知道训练任务调度会调度到哪个节点（如果没有指定节点调度），你就不知道该在哪个节点上预热；其次，任务下次训练换了节点，又得再一次预热。</p><p></p><p>可以使用JuiceFS缓存组和独立缓存集群的特性来解决上述问题。</p><p></p><p>利用JuiceFS的”缓存数据共享“特性，可以让不同的训练节点JuiceFS客户端可以组成一个缓存组。在这个缓存组中的JuiceFS客户端都可以共享缓存数据（所以训练任务要想共享缓存组的数据，它的juicefs客户端必须加入缓存集群）。也就是说当训练任务所处的节点没有命中缓存时，能够通过同一缓存组中的其他节点来获取数据，而不用去请求远端的对象存储。但是训练任务不是一个静态资源，一旦运行结束对应的juicefs客户端也会结束，会导致缓存组的成员频繁更新。虽然缓存组通过一致性哈希确保集群成员发生变化时，需要迁移的数据尽量少，但是依靠任务的Juicefs客户端存组成的缓存组成员变化太快了，这个在实际中无法使用的，除非你的任务永不结束。</p><p></p><p>那有什么办法解决该问题呢，这就需要JuiceFS独有的”独立缓存集群“特性。在同一个缓存组可以分角色，有两种角色，一种不参与缓存组的数据缓存，只从缓存组中读取数据，一种是参与缓存组的数据缓存。我们用后者组成一个缓存集群，供前者使用，这个缓存集群就是JuiceFS的独立缓存集群。如图所示：</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/e6/40/e694fa2ef1b54fee45ededefcb3f7440.png\" /></p><p>独立缓存集群</p><p></p><p>我们可以把训练集群中和独立缓存集群中的JuiceFS客户端使用相同的挂载参数--cache-group={cache-group-name}来构建一个缓存组，然后训练集群的JuiceFS客户端挂载需要加上--no-sharing表明不参与数据缓存。这样的话训练任务的客户端由于不参与数据缓存，也就不会影响到缓存组的缓存集群，同时也能共享独立缓存集群中的缓存数据来加速任务训练。这种模式相对于本地缓存的性能虽然低一点，但是却完美的解决本地缓存的问题：</p><p></p><p>1.&nbsp;独立缓存集群相当于把集群中节点的磁盘组成一块巨大的磁盘，并且同样的数据在集群中只要缓存一份，就能给不同节点的任务使用，完美解决了缓存磁盘不足和有效数据低的问题。</p><p></p><p>2.&nbsp;对于预热数据加速来说也非常友好，只要在独立缓存集群任意节点进行预热，就能把数据预热到集群中，并且任务无论调度到哪个节点都无需第二次预热</p><p>&nbsp;</p><p>当然JuiceFS也可以本地缓存和独立缓存集群结合同时来使用，使性能最大化，这里不做描述，读者可以自行了解。</p><p></p><h2>致谢</h2><p></p><p>感谢杭州果汁数据科技JuiceFS团队的苏锐、davies、朱唯唯等和vivo互联网基础平台存储团队的肖博、龚兵、于相洋、韩姜、储敏等对轩辕文件存储在Vtraining平台设计和落地过程中的大力支持</p><p>&nbsp;</p><p>作者介绍:</p><p>彭毅格，vivo AI研究院计算平台组的资深工程师，曾就职于华为、深信服等公司；关注&nbsp;K8s、容器、存储等领域。</p><p>&nbsp;</p><p>专题推荐：</p><p></p><p><a href=\"https://www.infoq.cn/theme/93\">《vivo AI计算平台搭建实战》</a>\"</p>",
    "publish_time": "2022-10-18 09:53:52",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "刚刚！国产大数据基础软件第一股星环科技成功上市，开盘大涨超52%",
    "url": "https://www.infoq.cn/article/TjgeNdDP6eij3TxXbN9e",
    "summary": "<p>10月18日，“国产大数据基础软件第一股”星环信息科技（上海）股份有限公司（简称“星环科技”）正式登陆科创板，股票代号为星环科技（688031），发售价为每股47.34元，开盘后报每股72元，大涨52%。</p><p>&nbsp;</p><p><a href=\"https://www.infoq.cn/article/DvJqm8MTpyHbpXJOsaHW\">星环科技创始人兼 CEO孙元浩</a>\"在上市仪式致辞中表示：“自成立以来，星环科技积极把握基础软件国产替代带来的发展机遇，以‘打造世界领先的大数据基础软件’为使命，积极参与信息产业国产化进程，在大数据与分布式数据库软件栈上实现技术领先，并构建了自主研发的国产大数据平台，助力客户实现数字化转型，目前已经成为大数据基础软件国产化的重要推动者之一”。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9b/9b3e470952c3a484f5e2d323516172e7.jpeg\" /></p><p></p><h2>星环科技成功上市</h2><p></p><p>&nbsp;</p><p><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651027914&amp;idx=1&amp;sn=6d92adb92dbe9d96f3e8b48b59e9b4a1&amp;chksm=bdbe81998ac9088f706fc681c636260361eba2aa9454fedd834509a33587c994ff57ab91a53e&amp;scene=27#wechat_redirect\">星环科技</a>\"成立于2013年， 是一家企业级大数据基础软件开发商，围绕数据的集成、存储、治理、建模、分析、挖掘和流通等数据全生命周期提供基础软件及服务。</p><p>&nbsp;</p><p>今年6月8日，上交所科创板上市委员会2022年第47次审议会议上审议了星环科技上市请求，结果显示，星环科技首发符合发行条件、上市条件和信息披露要求，批准上市。</p><p>&nbsp;</p><p>据天眼查显示，成立近十年间，星环科技完成了10轮融资，融资总金额近20亿，投资方不乏中金资本、启明创投、腾讯投资等知名投资机构和企业。</p><p>&nbsp;</p><p>据孙元浩称：“星环的英文名字则源自《星际迷航》电影，Transwarp 是《星际迷航》电影中的一种超高速引擎技术，它是所有科幻小说和科幻电影中最快的。取这个名字，寓意是想让大数据软件和分布式计算引擎能够像光速一样或者超越光速，能够达到最快的速度，对数据处理的效率能够最高。公司的中文名字取自《三体》里面的星环集团，寓意公司未来能聚集众多优秀的科学家们，探索属于未来的技术。”</p><p>&nbsp;</p><p>一直以来，孙元浩都坚信终将有一款中国自己的产品。虽然截至目前，国内大部分企业的<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651143219&amp;idx=2&amp;sn=d9a713b36bec94f8f8bb241a18a10675&amp;chksm=bdb8c4608acf4d76fb53786f0a4c7aa22fcfd86b82feebecd0b98f554ac0fc121ce68316940b&amp;scene=27#wechat_redirect\">核心数据库系统</a>\"还大都是来自国外公司的产品，但鉴于中国企业的应用场景非常复杂，很少有国外产品能够不经修改就可以顺畅运行。</p><p>&nbsp;</p><p>而且在国内，由于用户数量庞大，国内企业的数据量普遍要高于国外企业一个数量级。国外公司在进行产品设计时，是根据国外仿真的用户数来构架的，遇到国内如此庞大的用户数量时，系统出现问题的几率就会大大增加。</p><p>&nbsp;</p><p>在我国电信运营商、银行、交通等领域，数据量和复杂程度要远超国外同类企业，因此，市场上急需新一代数据处理技术来解围，而目前国外公司的产品还不能很好地满足国内用户的需求。</p><p>&nbsp;</p><p>毫无疑问，孙元浩把握住了<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651132325&amp;idx=1&amp;sn=54e0138891150ac714a98439267951c8&amp;chksm=bdb8e9f68acf60e0f6cdc272df85b513cfe0bba662f20963765e811d34a0731d1049ffc6b3da&amp;scene=27#wechat_redirect\">大数据</a>\"市场爆发的机会。</p><p></p><h2>最近三年研发投入高达3亿多，累计亏损超4亿</h2><p></p><p>&nbsp;</p><p>随着现在传感器网络、物联网的发展，数据产生的速度越来越快，使得实时大数据技术得到越来越多的关注。海量数据爆炸式增长，使得<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651101785&amp;idx=1&amp;sn=092da5075d9863af01fe2c7d4ac3ce6b&amp;chksm=bdb9620a8aceeb1cc5c49e36ddd3266ef2e23077a5459328c6bd2e7e5762b77f38db1a80fa45&amp;scene=27#wechat_redirect\">传统数据库</a>\"很难满足企业级客户存储和处理数据的需求，这就使集中式计算向分布式计算的演进成为必然趋势。在看清并掌握了这样的主流技术趋势后，孙元浩带领星环科技用了不到十年的时间走在了行业前端。据星环科技透露，星环每年的市场增长率都超过100%。</p><p>&nbsp;</p><p>但打造优质的大数据和人工智能基础软件并不是件容易事，培养高端的技术人才也需要投入大量的资本。</p><p>&nbsp;</p><p>截至2021年12月31日，星环科技的累计未弥补亏损为4.16亿元，主要原因是公司正处于快速成长期，在研发、销售及管理等方面持续投入较大。在未来的一段时间内，星环科技预计未弥补亏损将继续扩大。</p><p>&nbsp;</p><p>值得注意的是，星环科技2019年、2020年和2021年的研发费用分别为1.09亿元、1.09亿元和1.40亿元，研发费用占营业收入的比例分别为62.66%、42.11%和42.46%，研发费用规模占比较高，同样地，星环科技拥有硕士及以上学历的研发人员占到了研发人员总数的51.39%。</p><p>&nbsp;</p><p>据星环科技招股书透露，财务方面，2019年、2020年和2021年，星环科技分别实现营业收入1.74亿元、2.60亿元和3.31亿元；净利润分别为-2.11亿元、-1.84亿元和-2.45亿元，扣非后净利润分别为-2.31亿元、-2.22亿元和-2.82亿元。</p><p>&nbsp;</p><p>同期，星环科技的销售费用分别为1.49亿元、1.55亿元和2.03亿元，销售费用占营业收入的比例分别为85.59%、59.75%及61.42%。报告期内，星环科技的销售费用金额逐年增加但占比整体呈下降趋势。</p><p></p><h2>数字化浪潮下，国产大数据商迎新机</h2><p></p><p>&nbsp;</p><p>2013年前后，国产大数据赛道还没有挤满玩家。<a href=\"https://mp.weixin.qq.com/s?__biz=MzA4NTU2MTg3MQ==&amp;mid=2655172784&amp;idx=4&amp;sn=a5d6b67c91c66a89279c5d3f238c3c27&amp;chksm=84601fd0b31796c645480e6058ca76fac117c4147dcf7acacebf98c6932171fd77df7f094ac0&amp;scene=27#wechat_redirect\">星环科技联合创始人、TGO 鲲鹏会会员刘汪根</a>\"称，“选择数据库赛道本身的原因是因为我们团队的出发点始终是要立足于帮助用户解决问题。2013年后，随着互联网的兴起，海量数据对政企行业带来了巨大冲击，但当时的技术不足以满足数据增长的需求。因此星环科技就希望通过一项技术——也就是后来的<a href=\"https://qcon.infoq.cn/2022/beijing/track/1306\">分布式技术</a>\"来解决那时计算与业务需求之间的关系”。</p><p>&nbsp;</p><p>到了2016至2017年间，在有了四年的<a href=\"https://qcon.infoq.cn/2022/beijing/track/1306\">分布式大数据平台</a>\"技术积累后，2017 年星环科技提出大数据 3.0 概念，区分于运用离散工具的数据平台，大数据 3.0 时代的最显著特征为一站式数据平台，同时可以覆盖数据全生命周期的处理。</p><p>&nbsp;</p><p>到了2018 年，星环科技提出数据云的概念，在这个阶段<a href=\"https://qcon.infoq.cn/2022/beijing/track/1315\">大数据技术</a>\"和云、AI 技术融合，具备统一的资源管理技术，利用容器化技术，对外弹性提供数据库作为服务，数据为应用而生，数据更重，应用较轻，星环科技数据云产品领先业界一代。</p><p>&nbsp;</p><p>2020 年，星环科技提出多模型数据平台，利用统一语言、计算、存储、资源重构大数据软件栈，并提出联邦数据云：资源、数据、计算、机器学习联邦化。部署结构也从早年间的星型结构，发展为雪花型。</p><p>&nbsp;</p><p>进入 2022 年，星环科技来到了融合数据云的时代。融合数据云是指在按数据域组织的分布式数据云的技术架构基础上进行统筹管理、协同运营、服务融合以形成可协同一致，自由组合，灵活部署的一种新型数据分析模式。</p><p>&nbsp;</p><p>对于融合数据云而言，数据将被存储于多模型的数据库中，并且以网络结构的方式部署和流动。数据域可独立或两两组合成融合数据域，具备部署、模型、分析、智能等多维属性，通过互联管控实现协同工作，数据流动。</p><p>&nbsp;</p><p>近年来，随着信息技术的飞速发展和国家大数据战略深入实施，我国大数据产业发展步入快车道，国内大数据技术企业迎来发展良机。工信部部长在2022中国国际大数据产业博览会上表示，2021年产业规模突破1.3万亿元，大数据产业链初步形成，一批龙头企业快速崛起。</p><p>&nbsp;</p><p>对于未来发展，孙元浩表示，“上市是新征程的开始，未来，公司将继续专注大数据及相关基础软件的研发，围绕大数据、数据库、云计算、智能数据分析领域，坚持核心技术自主研发，为企业客户提供覆盖数据全生命周期的产品与服务，成为大数据基础软件行业的引领者，助力中国社会的数字化转型。”</p>",
    "publish_time": "2022-10-18 10:06:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Gartner发布2023年十大战略技术趋势",
    "url": "https://www.infoq.cn/article/RPeJFB2plzMHEvWQkpmS",
    "summary": "<p>10月18日，InfoQ获悉，Gartner发布了企业机构在2023年需要探索的十大战略技术趋势。</p><p></p><p>Gartner杰出研究副总裁Frances Karamouzis表示：“为了在经济动荡时期增加企业机构的盈利，首席信息官和IT高管必须在继续加快数字化转型的同时，将目光从节约成本转向新的卓越运营方式。Gartner 2023年战略技术趋势围绕优化、扩展和开拓这三大主题，这些技术能够帮助企业机构优化韧性、运营或可信度、扩展垂直解决方案和产品交付并利用新的互动形式、更加快速的响应或机会进行开拓。”</p><p></p><p>Gartner杰出研究副总裁David Groombridge表示：“但在2023年，仅仅提供技术还不够。这些主题受到环境、社会和治理（ESG）期望与法规的影响，而这会转换成使用可持续技术的共同责任。为了我们的子孙后代，企业机构每进行一项技术投资，就需要抵消它所产生的环境影响，并且需要使用可持续技术来实现‘默认可持续性’这一目标。”</p><p></p><p>2023年重要战略技术趋势包括：</p><p></p><p>可持续性（Sustainability）</p><p></p><p>可持续性贯穿2023年的所有战略技术趋势。在Gartner最近的一项调查中，首席执行官们表示环境和社会变化已成为投资者的三大优先事项之一，仅次于利润和收入。这意味着为了实现可持续性目标，高管必须加大对满足ESG需求的创新解决方案的投资力度。为此，企业机构需要新的可持续技术框架来提高IT服务的能源和材料效率，通过可追溯性、分析、可再生能源和人工智能（AI）等技术实现企业的可持续发展，同时还要部署帮助客户实现其可持续性目标的IT解决方案。</p><p></p><h2>开 拓</h2><p></p><p></p><h3>元宇宙（Metaverse）</h3><p></p><p>Gartner将元宇宙定义为一个由通过虚拟技术增强的物理和数字现实融合而成的集体虚拟共享空间。这个空间具有持久性，能够提供增强沉浸式体验。Gartner预计完整的元宇宙将独立于设备并且不属于任何一家厂商。它将产生一个由数字货币和非同质化通证（NFT）推动的虚拟经济体系。Gartner预测，到2027年，全球超过40%的大型企业机构将在基于元宇宙的项目中使用Web3、增强现实（AR）云和数字孪生的组合来增加收入。</p><p></p><h3>超级应用（Superapps）</h3><p></p><p>超级应用是一个集应用、平台和生态系统功能于一身的应用程序。它不仅有自己的一套功能，而且还为第三方提供了一个开发和发布他们自己的微应用的平台。Gartner预测，到2027年，全球50%以上的人口将成为多个超级应用的日活跃用户。</p><p></p><p>Karamouzis表示：“虽然大多数超级应用是移动应用，但这个概念也可以应用于Microsoft Teams、Slack等桌面客户端应用，关键在于超级应用必须能够整合并取代客户或员工使用的多个应用。”</p><p></p><h3>自适应AI（Adaptive AI）</h3><p></p><p>自适应AI系统通过不断反复训练模型并在运行和开发环境中使用新的数据进行学习来迅速适应在最初开发过程中无法预见或获得的现实世界情况变化。这些系统根据实时反馈动态调整它们的学习和目标，因此适合外部环境快速变化的运营或者因为企业目标不断变化而需要优化响应速度的运营。</p><p></p><h2>优 化</h2><p></p><p></p><h3>数字免疫系统（Digital Immune System）</h3><p></p><p>76%负责数字产品的团队现在还需要对营收负责，因此首席信息官正在寻找新的实践和方法，使其团队能够在实现高商业价值的同时，降低风险和提高客户满意度。数字免疫系统为他们提供了满足这一要求的路线图。</p><p></p><p>数字免疫系统通过结合数据驱动的运营洞察、自动化和极限测试、自动化事件解决、IT运营中的软件工程以及应用供应链中的安全性来提高系统的弹性和稳定性。Gartner预测，到2025年，投资建设数字免疫系统的企业机构将能够减少多达80%的系统宕机时间，所减少的损失将直接转化为更高的收入。</p><p></p><h3>应用可观测性（Applied Observability&nbsp;）</h3><p></p><p>在任何相关方采取任何类型的行动时，都会产生包含了数字化特征的可观测数据，如日志、痕迹、API调用、停留时间、下载和文件传输等。应用可观测性以一种高度统筹和整合的方式将这些可观测的特征数据进行反馈，创造出一个决策循环，从而提高组织决策的有效性。</p><p></p><p>Karamouzis表示：“可观测行应用使企业机构能够利用他们的数据特征来获得竞争优势。它能够在正确的时间提高正确数据的战略重要性，以便根据确认的相关方行动而不是意图采取快速行动，因此是一种强大的工具。如果能够在战略中予以规划并成功执行，可观测性应用将成为数据驱动型决策的最强大来源。”</p><p></p><h3>AI信任、风险和安全管理（Trust, Risk and Security Management）</h3><p></p><p>许多企业机构未做好管理AI风险的充分准备。Gartner在美国、英国和德国开展的一项调查显示，41%的企业机构曾经历过AI隐私泄露或安全事件。但该调查也发现积极管理AI风险、隐私和安全的企业机构在AI项目中取得了更好的成果。与未积极管理这些功能的企业机构的AI项目相比，在这些企业机构中有更多的AI项目能够从概念验证阶段进入到生产阶段并实现更大的业务价值。</p><p></p><p>企业机构必须使用新的功能来保证模型的可靠性、可信度、安全性和数据保护。AI信任、风险和安全管理（TRiSM）需要来自不同业务部门的参与者共同实施新的措施。</p><p></p><h2>扩 展</h2><p></p><p></p><h3>行业云平台（Industry Cloud Platforms）</h3><p></p><p>行业云平台通过组合SaaS、平台即服务（PaaS）和基础设施即服务（IaaS）提供支持行业应用场景的行业模块化能力。企业可以将行业云平台的打包功能作为基础模块，组合成独特、差异化的数字业务项目，在提高敏捷性、推动创新和缩短产品上市时间的同时避免单一厂商锁定。</p><p></p><p>Gartner预测，到2027年，超过50%的企业将使用行业云平台来加速他们的业务项目。</p><p></p><h3>平台工程（Platform Engineering）</h3><p></p><p>平台工程是一套用来构建和运营支持软件交付和生命周期管理的自助式内部开发者平台的机制和架构。平台工程的目标是优化开发者体验并加快产品团队为客户创造价值的速度。</p><p></p><p>Gartner预测，到2026年，80%的软件工程组织将建立平台团队，其中75%将包含开发者自助服务门户。</p><p></p><h3>无线价值实现（Wireless Value Realization）</h3><p></p><p>由于没有一项技术能够占据主导地位，企业将使用一系列无线解决方案来满足办公室Wi-Fi、移动设备服务、低功耗服务以及无线电连接等所有场景的需求。Gartner预测，到2025年，60%的企业将同时使用五种以上的无线技术。</p><p></p><p>网络的功能将不再仅限于纯粹的连接，它们将使用内置的分析功能提供洞察，而其低功耗系统将直接从网络中获取能量。这意味着网络将直接产生商业价值。</p>",
    "publish_time": "2022-10-18 10:23:34",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]