[
  {
    "title": "Vitalik Buterin：以太坊只完成了 40%，开发人员将经历五个阶段",
    "url": "https://www.infoq.cn/article/WKvcMUAoqdYF4ie7hxxf",
    "summary": "<p>7 月 21 日，Vitalik Buterin 参加在巴黎召开的以太坊社区会议（ETHCC），并针对以太坊合并进度以及以太坊未来路线图发表演讲。</p><p>&nbsp;</p><p>Vitalik Buterin表示，比特币的拥护者认为比特币已经完成了 80%，但以太坊的支持者认为以太坊只完成了 40%。以太坊的开发人员将会经历五个长期阶段：The Merge、The Surge、The Verge、The Purge和The Splurge，以太坊在完成 5 个关键阶段后可实现 10 万 TPS。</p><p>&nbsp;</p><p>Merge 是指从 PoW 转移到 PoS，即将以太坊主网与信标链合并。Vitalik表示，Merge只是以太坊发展之路上的一小步，后面四个阶段是以太坊扩展、清理和演变的关键部分。&nbsp;</p><p>&nbsp;</p><p>据悉，The Merge目前已完成90%，只需要在Ropsten上进行测试。一旦“合并”成功发生，验证者就能提取他们锁定在ETH 2.0存款合约中的ETH。预计今年 9 月完成合并之后，以太坊仍将仅完成大约 55%。</p><p>&nbsp;</p><p>Surge是关于以太坊引入分片的，完成后，以太坊网络将更快地处理交易。Verge是关于引入Verkle 树的，旨在优化以太坊上的存储并帮助减小节点大小，最终提升网络的可扩展性。Purge旨在减少减少验证器所需的硬盘空间，消除历史数据和坏账，从而简化存储，减少网络拥塞。Splurge是一系列杂项，包含「较小」的升级，确保网络在前 4 个阶段之后平稳运行。</p><p>&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/c0/4b/c055209255c63b9c6af7ec9318b1964b.png\" /></p><p></p><p>此外，Vitalik 表示，我们正处于一个通过协议快速变化从而提升以太坊能力的阶段。但最终我们将停止对协议进行快速更改，并利用 L2 等系统为以太坊生态系统添加更多功能。其中，L1 用于安全性和可靠性，L2 用于快速迭代操作。</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
    "publish_time": "2022-07-25 10:06:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "研发体系支撑价值驱动的业务创新 | GTLC 南京",
    "url": "https://www.infoq.cn/article/DtABEMxU7zypMHg2zG9r",
    "summary": "<p>2022 年 7 月 16 日，由 TGO 鲲鹏会主办的 GTLC 全球技术领导力峰会·南京站成功召开，吸引全球 200 余位 CTO、技术 VP、CEO 等科技领导者参与。</p><p></p><p>会上，有赞技术 VP、顾问，TGO 鲲鹏会 (杭州) 负责人沈淦（怀民），发表《研发体系支撑价值驱动的业务创新实践》的主题演讲，分享从宏观经济到细节落地，包括业务如何转型，技术团队怎么配合业务等内容。我们将演讲内容整理如下，以飨读者。</p><p><img src=\"https://static001.geekbang.org/infoq/06/068593acecdc0a1f33f5cfdaa73111ea.jpeg\" /></p><p></p><p>我们技术同学内心特别认同价值感，相信很多事情是用愿景和梦想支撑的。但技术同学要追求梦想，就一定要了解你服务的那些人是怎么生活、工作、思考问题的，所以我去做混沌的领教，为了接触更多创业者，了解大多数没有技术背景的人如何看待问题。我认为技术同学要相信代码的力量是巨大的，特别是在数字化时代。所以我分享的内容会从宏观到细节落地，包括业务如何转型，我们怎么配合业务。</p><p></p><h3>旧经济 vs 新经济</h3><p></p><p>首先看经济。我默认大多数同学现在的企业都面临像我服务企业一样，正在经历生死考验，我们是亲身经历者。但前几年，大家的思维方式和现在大不相同，都在考虑我怎样做一件伟大的事。这两张图片大家都很熟悉，这两个看上去很像的场景，一个是诺曼底登陆，表示规模化，活得好；第二个是敦刻尔克，考虑的是有序撤退，这是很有意思的对比。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c6/c66a74051dd13e0b0b1ab3a50da6a2fe.jpeg\" /></p><p></p><p>怎样活得好？疫情对我们影响太大了，其中有两个关键时间点：一个是刚开始 2020 年武汉，第二个是 2022 年上海，这两个时间和地点对中国经济产生了非常深远的影响，不光影响到整个 GDP，还影响了很多企业家的心态。国家统计局 Q2 的数据已经发布，从数据上观察，消费没有太大变化。另外一个数据是失业率，现阶段失业率基本和 2020 年持平。这些数据客观上变化不大，但对信心的影响是巨大的。还有一个很关键的数据是国家财政投入。经济增长包括投资和财政两方面。财政投入一般会在半年后起效，所以 2021 年 8-11 月国家财政都是超前投入，可以预判到 2022 年底国家经济形式一定是向好的。所以少上网，多看国家统计局财报，这才是国家经济的走向。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ac/ac3a4fe4308ea7ffd0cec9133dde13d5.jpeg\" /></p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8b/8be38b629e888bf4b2fc9c6f56a95faa.jpeg\" /></p><p></p><p>中国经济的底层范式发生了很大变化，以前是绝对经济优先的模式，当整体投入达到一定量级，就会发现第三产业或某些细分领域过于集中，所以开始强调可持续公平化、数据安全。这带来一个变化，就是我们以前活得特别好的行业被明显压制，另外一些新兴企业被扶持，但目前正处在过渡期，所以我认为这几年是中国出现一线企业的又一个黄金时期。</p><p></p><p>那么新经济和旧经济模式的主要差别是什么？旧经济指通过模式创新占领新市场或扩大市场规模，产生规模效应，占据行业领导地位，进而获利的业务模式。有很强的先发优势。新经济的特点是围绕业务场景，以核心能力 + 场景的模式构建产品服务矩阵。</p><p></p><p>旧经济发展到一定的阶段就会内卷。当产品无休止地迭代，我们就会学习对手，但总会发现有速度更快的对手，而且客户往往不买单。这个情况下对技术团队的要求就是速度要快，打造技术团队超 (无限) 高的交付效率，跟着业务一起卷。卷的时代只是历史时代的产物，并且带来了巨大的势能，给中国奠定了广泛的数字化环境和数字生活习惯。但现在发现卷不动了，我们还没有练就数字化真正的内功，但是环境有了，习惯有了，内功自然会有，只是过程我们还在探索。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/03/03e3a4c2dc7fbdbbb51f615b994e63bd.jpeg\" /></p><p></p><p>再看中国新经济下企业的特点，就是内核 + 强势产业链的模式。中国的制造环节在全球是绝对领先地位，产业链完整，效率非常高。短视频我理解也是产业链，因为中国的内容制造很强大，包括生活家电代工做出海势头强劲，不仅价格便宜，而且功能强大、迭代速度快，所以在海外市场巨大。因为产业链能力特别强，我们称它为科技外溢。例如将在电动车行业应用广泛的无极电刷和健身融合起来，避免运动中对身体的伤害；以及在医疗产业链上应用很广的冻干技术，现在可以用来制作咖啡；这样的例子还有很多。旧经济强调规模，新经济强调价值创造；旧经济强调狼性，新经济强调柔性；旧经济强调单极最大化，新经济强调端到端闭环。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8a/8ac2100c88188b0fbd372f2d1b1107cb.jpeg\" /></p><p></p><p></p><h3>价值驱动的业务模式对研发体系的要求</h3><p></p><p>我们技术和业务的结合分为几个阶段，第一阶段是神秘主义，技术和商业中似乎有一道护城河，中国现在已经跨过了这个阶段；第二阶段是协作，其实就是卷王时代的特点，技术按需求工作，协同执行业务目标；第三阶段是技术引领的差异化，技术和业务边界模糊，强调的是技术怎样使业务快速试错。因为技术内核已经确定，在哪个场景能把内核的价值放大，是需要快速试错的；第四阶段是技术同学的梦想，就是代码主宰一切，可能是将来元宇宙带来的时代。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fa/fa340540ff961a2f67ad69ffa8281fc1.jpeg\" /></p><p></p><p>价值驱动的业务模式是很简单的模型，它核心点是要把一个业务价值形成端到端的流动。无论是战略、策略、价值评估体系、交付体系、成本，最后关键是要围绕试错，让它流动起来。流动就是端到端的价值创造，从客户需求出发到客户价值交付，形成闭环。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9b/9ba7a9cc8ff821d593bddcd13fe88255.jpeg\" /></p><p></p><p></p><h4>找价值</h4><p></p><p>端到端实践分为四个步骤：找价值、设指标、拆流程、建团队。这四个步骤的关键是顺序，因为一旦把团队放在前面，肯定会围绕团队定流程、设指标，就会很麻烦。首先是定义价值，通过用户故事，实现端到端的快速交付。会设定两个关键指标，有时候我们也会纠结定义外部指标还是内部指标为主，后面我们发现，“小孩子才做选择，成年人都要。”——外部指标和内部指标各定一个。外部指标定义的是交付效率和准确度，围绕价值部分，即能够为客户带来什么；内部指标关注闲置时间和成本，主要围绕流动的部分，因为一件事只有流动起来，才能从本质上提高效率。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/8b/8b9d80deeb02616a2ccf2fde34a55695.jpeg\" /></p><p></p><p></p><h4>定指标</h4><p></p><p>指标体系的定义方式它包含 OE 和 KOL。我们把指标拆成两步，一部分是结果性指标，就是刚才讲的内部指标和外部指标。第二部分是过程指标，一定要围绕结果指标拆解过程指标。过程指标是一个复杂体系，我自己带团队的一个最有效的拆过程指标的方式，也是一个四步法。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a4/a49bb372164b2c8767f3ccda237efea9.jpeg\" /></p><p></p><p></p><h4>拆流程</h4><p></p><p>到底是定义流程还是拆解流程，我们也纠结过很久。拆解过程第一步是真实还原现阶段的工作，从流程管控到需求管理，要做的是拆，而不是定义。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/16/163d211293076e8e950c7baf1a20cd2c.jpeg\" /></p><p></p><p></p><h4>建团队</h4><p></p><p>到最后建团队就很容易了，因为前面一系列流程完成后，就看现在的团队中人员是否匹配，建团队实际上是调整团队的过程，包括调整团队的结构和成员分工等。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c2/c2a915071f3b498f9521c7ff5bd32069.jpeg\" /></p><p></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b6/b6575c3eafe1796d1880c56eef688b1a.jpeg\" /></p><p></p><p></p><h4>实践过程</h4><p></p><p>首先，使用用户故事工具，来提高需求匹配的程度，把讲故事作为整个团队工作的核心。只有跟客户一起讲故事，才能围绕价值创造推进项目。用户故事最有价值的地方是建立一公里宽，还能做到一公里深。我们以前的需求是全，能做到一公里宽，但只有一厘米深。用户故事很简单，难的是端到端都相信用故事来驱动工作。我们说服研发团队围绕用户故事做构建，按照用户故事的颗粒度来定义 Future，我们把它定义一个新的概念叫用户故事集，这是对团队心智的挑战。最难的挑战是围绕用户故事做交付。我们一个项目两个月做交付，会两周做一次客户业务部门参与的 Demo 日，真正落实的程度非常高。全流程端到端做用户故事是最重要的实践价值。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/25/258e508dc8b6c501980d0957e718da70.jpeg\" /></p><p></p><p>第二，价值理论很重要，但手感更重要，一定要循序渐进。刚开始我们的流程非常细致、特别复杂，结果没人配合，不起作用。于是我们精简流程，围绕用户故事和主线，遵循少就是多的定义，允许任何一个团队对数据看板上的节点各自调整、灵活定义，自动化流程。以前看板给大家的感觉是管理工具，现在是能够有真实帮助的工具，效果会好很多。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/35/357b0bef3473190385a72418d135c85c.jpeg\" /></p><p></p><p>第三，在工具上服务 Demo 日。让大家真正有体感的东西才有价值，我们后面又做了一次迭代，真正关注价值流动，在看板上很明显地展示出价值流动的特征，让大家一目了然。做迭代不能拍脑袋，一定要建立自己的度量体系，以数据为本。数据采集是一个非常艰苦的工作，所以我们的看板全部采取自动化流程，真正把工作详细拆解后，很多同学才发现究竟在哪些地方有卡点。</p><p></p><h3>端到端 XasCode，把美好愿景变成日常</h3><p></p><p>托马斯库恩在《科学革命的结构》里讲得最重要的观点，大部分的科学研究并非从零开始发现世界的过程，而是对原有的范式承诺内的问题进行回答。回到刚才说的工作中，会发现在在价值流动过程中，在价值创造上投入的精力，远远低于适应环境和配合的环节。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/f3/f3e502a7cd6da6de6fb0b01a7e0af136.jpeg\" /></p><p></p><p>研发实践中，存在大量的人与人的沟通，最耗费精力的是知识传播。如何把知识传播从人与人变成另外一种模式？就要用到 XasCode。所有的交互分两部分，流程可以把更多人与人的交互变成人与机器的交互。XasCode 的价值就是大幅度提升人与机器的交互能力。</p><p></p><p>人与机器的交互有两个主要动作，一个是业务需求的知识传播，就是客户的价值导向；另一个是数字资产的知识传播，在以前的系统上构建新的价值。我在业务需求的知识传播中，主要的动作是测试工程化到需求工程化；在数字资产的知识传播中，主要是能力实现、能力使用、能力学习三部分。测试工程化主要是功能测试，很多同学会在测试平台上面一点点记录，我觉得这个不是工程化。工程化需要有工程结构，所有的知识管理都在上面，跟交付项目一起走，包括接口测试。测试的内容是代码，所有的测试动作和结果都是代码的一部分，也就是 XasCode，测试工程化。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/25/257647c8429b6dc2286e133114c22de2.jpeg\" /></p><p></p><p>第二部分是能力中心，也就是数字资产工程化。我们通过产品化的方式——能力中心，使整体结构化。第一部分是偏架构师的部分，叫做能力领域化，能力一定要被产品化、工程化，而不是仅仅停留在大图上，否则就会非常难推进。第二部分是能力实现，从价值推动的角度看，会发现实现是最容易，却最没有价值的事情，价值的使用才有价值。能力的使用和学习才是能力中心中最重要的。例如我们的商品查询有 20 几个，到底用哪个好？从文档是看不出来的，如果找到个人可以得到结果，但知识的传播成本很高。所以需要制定能力的使用规范，也叫作 API 标准化。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a5/a516ec70fc7adf100849834d4dc76081.jpeg\" /></p><p></p><p>真正用的过程要能够传播速度快，称为业务可视化。例如需要在某个板块添加一个功能，我们会直接通过流量回放看到业务视角，看到线上真实的流动状况。这其中有一个坑，在微服务下的动作，一定要把所有设计思路代码化，坚决不要搞大平台式。我们曾经做过微服务统一发放的配置中心，结果上线后发现它的配置发放要逐个排队，这是血的教训。</p><p></p><h3>总结</h3><p></p><p>数字化时代研发体系要打造价值驱动，其中最主要的是端到端流程的闭环。拆解开主要是两大目标，一是围绕价值的工作，二是要让工作流动起来。最后一定要相信代码的力量，特别是代码驱动数字化世界。XasCode 是我自己追求的大方向，但目前还是碎片化的，期待有更多同学一起打造一个端到端闭环的 XasCode，谢谢大家！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3d/3d39108fde363930f97a88046bf047d8.jpeg\" /></p><p></p><p></p><h4>关于 TGO 鲲鹏会</h4><p></p><p>TGO 鲲鹏会是极客邦旗下科技领导者聚集和交流的组织，学员由 CTO、架构师、技术 VP、具有技术背景的 CEO 等组成，目前已经在北京、上海、深圳、广州、杭州、成都、硅谷、南京、台北、厦门、武汉、苏州等 12 个城市定期举办学习活动。</p><p></p><p>TGO 鲲鹏会采用了“学员共建”的组织形式，希望通过“共建、自治”的方式维护各城市的健康发展，为学员提供必要的服务，帮助学员个人更好地学习和成长，助力学员企业之间更好地合作与交流。加入 TGO 鲲鹏会，全方位提升自身价值，成为卓越科技领导者！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/70/703f15f0a59ea2978ea29a98f21be028.png\" /></p><p></p>",
    "publish_time": "2022-07-25 10:35:02",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "有度量才有真管理 研发效能的度量体系建设实践 | GTLC 南京",
    "url": "https://www.infoq.cn/article/5LMB6Mtp7NIW7OawVLZT",
    "summary": "<p>2022 年 7 月 16 日，由 TGO 鲲鹏会主办的 GTLC 全球技术领导力峰会·南京站成功召开，吸引全球 200 余位 CTO、技术 VP、CEO 等科技领导者参与。会上，数禾科技 CTO、TGO 鲲鹏会（上海）学员陈东，为与会嘉宾带来《研发效能的度量体系建设实践》的主题分享。我们将演讲内容整理如下，以飨读者。</p><p></p><p>近两年，互联网行业的增速明显下降，无论公司规模大小都有一个共同的诉求，就是如何降低研发团队的成本并增加效能。</p><p></p><p>今天我会围绕《研发效能的度量体系建设实践》这一话题，将自己带领不同规模研发团队所积累、沉淀下来的思考和实践，从度量体系对于研发效能的意义、度量体系的建立原则、度量体系的架构设计与案例、度量体系的系统运营，共四方面为大家进行分享。</p><p></p><h3>第一，度量体系对于研发效能的意义</h3><p></p><p>提高研发效能的方法非常多，比如引入先进工具、优化工作流程和调整组织结构等。不过无论用什么方法，最终都要回答一个问题：研发效能提升了吗？提升了多少？如果回答不出这个问题，前面许多的工作是无法证明它的价值。因此，研发效能的度量很重要。</p><p></p><p>管理大师彼得·德鲁克讲过，“没有度量就没有管理。”管理者的一项重要职责，就是思考如何做好度量，以及基于度量做决策。</p><p></p><p>然而度量并不好做，为什么？因为没有理解度量体系建设的本质——研发管理思维的数字化转型。很多研发团队的管理者主要凭借主观感觉来对团队成员进行度量，对研发团队的能力，缺乏量化、数字化的判断标准。大多研发团队都是在帮公司做各种业务的数字化转型，但其自身工作方式却是“拍脑袋”决策，从这个角度来讲，不做度量体系管理的研发团队，就是公司数字化转型的最后一块短板。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b8/b858358915dc15b9402be7739966da9b.jpeg\" /></p><p></p><p></p><h3>第二，度量体系的建立原则</h3><p></p><p>度量体系建设的目的是在帮助公司进行数字化转型的同时，实现研发团队的数字化转型；研发团队不能只知道埋头苦干，还要学会“抬头看天”——团队开工前定下度量体系的原则指引，以免团队之后的工作变形。</p><p></p><p>原则一，以客户价值为导向，不追求完美，但要能体现当前痛点。从客户和产品的角度思考，明确客户是谁，他们关注的痛点是什么，以及度量体系是否反映出客户当前的痛点。在开始实践时，不要追求建立完美的度量体系，因为所花费的人力成本很高；建立一个符合公司现状、满足业务痛点的度量体系更为可行。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fd/fde0c2acec708fd53f25b5c1a18804be.jpeg\" /></p><p></p><p>原则二，以团队主要工作流程为线索，建立研发流程的度量。度量体系指标选取选取逻辑是以团队的主流程为线索，从主流程选指标来搭建研发效能的度量体系。除主流体系的之外的其他指标都不是重点指标。</p><p><img src=\"https://static001.geekbang.org/infoq/53/53498e65a25b1a74d2759bf697c7ca06.jpeg\" /></p><p>原则三，度量体系需要有层次，不同的人关注不同的指标。整个度量体系指标需要有层次，不是简单的指标罗列，因为不同的人关注不同的指标，所以要对指标进行分层。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/35/35d73355b8f1ab55671d3d4457a5ba2d.jpeg\" /></p><p></p><p>原则四，度量体系需要不断迭代。这与原则一相关，度量体系的指标要反映客户的痛点，若痛点解决了，这个指标就没有必要考核了。接下来，还需要去思考当前的痛点是什么，指标权重和考核方式是否要做修改，整个指标体系处于不断地迭代状态。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b2/b24c6baaf68f8f8ce5f45d2c1b84a51c.jpeg\" /></p><p></p><p></p><h3>第三，度量体系的架构设计与案例</h3><p></p><p>有了上述四点原则做支撑，如何进行下一步实施呢？具体分三点：第一，度量体系的指标选取；第二，度量体系的分层架构；第三，度量指标的几个讨论案例。</p><p></p><p>度量指标的选取维度。比如，如何判断一个团队好不好呢？答案是“多快好省”，这四个字基本上可以覆盖大部分对研发团队研发效能的要求。进一步来看，“多”对应“产能”，“快”对应“响应力”，“好”对应“质量”，“省”对应“成本”，因此产能、响应力、质量、成本就是对研发团队进行度量的四个维度。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0d/0d782dba9a1f7d444ea38c59e875bfeb.jpeg\" /></p><p></p><p>但是四个思维没有必要全做，可以排优先级的。根据第一个原则：要以客户的价值为导向。研发团队的客户是谁？是业务团队 。业务团队关心研发团队的“响应力”、“质量”和“产能”，对这三个维度再排优先级，则是质量第一，响应力第二，产能第三。</p><p></p><p>为什么质量是第一？可以反过来思考，如果质量不好，响应力越快，产能就越高，线上的 Bug 就越多。当 Bug 增多时，线上系统就会呈现崩溃的状态。这说明，没有质量保障的产能是无效的；而从另一个角度来看，若产品质量做得好，会间接促进响应力和产能的增长，因为工程师从线上紧急问题响应环节节省的时间，可以投入至原来规划的研发工作，更好保证了响应力和产能的提升。</p><p></p><p>但是只选质量这个维度是不够的，因为它太片面了，也不是客户唯一需要的。研发团队要将质量和响应力两个维度同时做起来并做得足够好，才能最小化的满足客户痛点。</p><p></p><p>如何具体设计指标。设计指标需要分层的思考，因为不同的人关心不同的指标。比如对外进行交付，业务团队关心的指标比较简单，我们列出了两个大类、四个指标。在响应力维度，关注需求的按时完成率和需求交付时长；在质量维度，关注故障的数量和故障时长。对外交付的研发项目指标不需要太复杂，掌握四个核心指标就可以。</p><p></p><p>真正复杂的是对内面向过程管理的指标设计，如何拆解上述四个指标、指标落地路径如何实现，才是研发效能度量体系建设最重要的环节。因为上述四个指标不是可以轻松达成的，并且四个指标中至少有存在两个明显问题。</p><p></p><p>问题一，在需求交付时长上存在度量是否精准的问题。需求从提出到上线之间经历的环节众多，有非常多的角色和岗位都在参与，甚至有来回拉锯的情况，因此如何定义需求的交付时长存在问题；此外，不同需求的颗粒度也是不同的，有的需求可能要花一个月交付，有的需求花一天就可以，因此需求的力度如何度量准确也存在问题。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fd/fd67b558950dcab459d9d6098b7a08e7.jpeg\" /></p><p></p><p>问题二，在故障数量上存在指标稀疏和指标滞后的问题。根据经验，每一个研发部门，每季度的故障数一般是 0 到 1，表现差一点会到 2；如果一个部门的故障数量按季度统计的话，可能就是 0、1、0、1，这样的数据是没有统计意义的；还有，如果一个季度中的前 2 个月一直没出事故，但这时就能保证质量真的好吗？不一定。如果只是简单看“零事故”这个指标，而不做任何的管理动作，是存在隐患的。当事故真正发生时，再做任何的事情这个指标也已经改不回来了。滞后性的指标，没有办法进行日常的优化。因此，如果做不好内部的管理拆解，就很难向业务团队保障最终的响应力和质量的交付。</p><p></p><p>对内的度量体系指标的设计方面，可以先将需求、设计、开发、测试、发布、运维主流程拉出来，在主流程中看每个环节的响应力和质量，这是选取指标的核心的逻辑，像是考勤、满意度考评这些指标都不需在考察范围内。</p><p></p><p>研发流程支撑指标众多，也不一定都有效。首先，从需求角度来看。理想的度量区间，是从业务开始提需求到最终发布。但是现实往往只能度量和管理设计和开发这两个环节。前面的需求环节，因为有大量的与业务团队来回拉锯讨论的时间，所以只能观测不能考核。后面测试的环节需要在测试环境里去进行验收，只要没有验收通过，是不会往下发布的。所以，为了让整个的研发效能的流程和度量的区间变得更加合理，我们做了以下改变。</p><p></p><p>第一，提供了一个预发环境，将业务验收环节从测试环境中剥离。测试环境完全回归到研发团队里，把可控的度量空间延长，从设计、开发、测试延长到了预发部。对于头尾两部分，业务的验收和前面需求的沟通是作为观测指标进行观察，虽不考核研发团队但会进行分析，以及与业务团队沟通，使整体效能有更大的提升；第二，对于“需求颗粒度”不一致的问题。我们把需求拆解成不同的 Story，通过考核 Story 的交付时长，相对统一了考核口径，使得交付时长的统计数据也变得有意义。</p><p></p><p>接下来是工程师开发。工程师开发中有一个经典指标叫“缺陷密度”，公式为：加权的缺陷数 / 代码行数 = 工程师的缺陷密度，意思是代码写得越多，缺陷数可能会越多。但是如果按这个指标的设定，会存在有效的代码行数定义不清楚，以及工程师没有动力优化代码，对团队带来负面导向。</p><p></p><p>业界还有一个更成熟的理论，即不考量代码行数，转而考量“功能点数”，公式为：加权的缺陷数 / 功能点数 = 工程师的缺陷密度。但是这个考量方式需要人工预估功能点数，若没有专业的人员去做功能预估，是会耗团队工作量，在实际操作中不一定对所有的公司都适合。</p><p></p><p>因此我们最终采用的是第三个方案，我们用“工作量”来代替，公式为：加权的缺陷数 / 工作量 = 工程师的缺陷密度，工作量指工程师登记的工作时长。其优点在于它相对比较简单，工程师可以自主提交工作时长。当然也可能存在填写时长过长的问题，不过这一弊端有制衡的因素，如果把工作量填得很大，那响应和交付时长就会变长，从而影响产能，这一制衡因素可以避免做假和偏移的情况出现。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/15/1503ad27cea1d17753fd660c2dce7156.jpeg\" /></p><p></p><p>下一个环节是测试。测试有一个经典指标，叫缺陷逃逸率。公式为：缺陷逃逸率 = 生产缺陷数 / （测试缺陷数 + 生产缺陷数）），但是这个公式会把刚才提到的预发环境和放 10-20% 的流量的灰度环境跳过了，只能看到生产环境的缺陷。而前两个环节，发现问题概率是最大的。</p><p></p><p>因此我们重新定义了一个发布缺陷数的概念：发布缺陷数 = 验收缺陷数 + 灰度缺陷数 + 生产缺陷数，只有把所有客户感知到的环节记录下来作为分母，才能更好的反映我们的客户价值。因此缺陷逃逸率公式变成，缺陷逃逸率 = 发布缺陷数 /（测试缺陷数 + 发布缺陷数）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/df/df81313c2a0cd8c2daf60948851ba812.jpeg\" /></p><p></p><p>最后，故障数量的改进。对于内部团队而言，考核的是事件处理，而不是事故本身。团队每周都会接到告警、业务反馈的线上问题，这些告警和线上问题不一定是事故，但的确是反映了当前系统的问题。对于每周都会发生的事情，我们会进行相关的响应力和质量进行考核，每周也都会对上一周的事件进行复盘，把对事故的管理转变成对事件的管理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/59/59ec0214828dd5a808722f27f17de447.jpeg\" /></p><p></p><p>总结一下，度量指标需要客观反映现状，避免主观打分；度量指标尽可能在前后环节、响应力和质量之间有制衡；度量指标需要尽可能覆盖全流程，避免只关注拒不缓解；度量指标需要可频繁观测，指导日常工作。</p><p></p><p>再次强调一下度量的重要性。提升研发效能方法非常多，比如培养团队的研发能力、流程优化等，这些事情都可以做，但是很漫长。最简单、快速、有效的方法，就是把度量指标定义和调整好。只要大家能看得到正确的度量指标，团队自然有动力和方向去优化自己的研发效能。</p><p></p><p></p><h3>第四，度量体系的系统运营</h3><p></p><p>上述所讲都是度量体系如何建立，它只是一个模型，真正运行还需要系统支持，所以要做系统化、做自动化、做可视化。</p><p></p><p>我们打造的这套系统，拥有底层的基础系统层、中间的逻辑层以及最上面的展示层，通过这套系统，可以更便捷地使用和管理数据。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6b/6b3645435fb438a3aee247790c86a8dd.png\" /></p><p></p><p>这套系统能够实现一定程度的自动化数据采集、数据分析以及自动化运营。如果没有做好数据自动化采集，整个体系是建立不起来的。必须基于底层研发工具，自动抓取工程师在这个上面工作的时间和状态，实现自动化采集数据。对于自动化运营的思路是，当指标发生偏离的时，主动去告警和推送。</p><p></p><p>在整个体系的日常运营管理上。要明确责任主体，即谁为研发效能指标负责。我们定义的主体是研发部门，让部门承担这个指标，不考核个人。如果考核个人，个人就有可能对这些指标动手脚，因为所有的数据都是由工程师在工作中产生的，如果知道这个指标会直接考核到他的绩效，就会基于数据本身做优化，而不是基于事件优化，所以我们不考核个人。</p><p></p><p>另外，日常运营中要周期性跟进。每周把数据贴出来让大家看，然后进行考评，自然而然整个团队就会投入更多关注，会做得越来越好。</p><p></p><p>最后，指标是要迭代的，只有不停的更新迭代，才能不断的进步。如果不去迭代、更新这些指标，最后很可能是每个季度的考核都是一百分，失去了度量地意义。所以，度量指标一定要调整，并聚焦在做得不好的地方。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ce/cee82fb7fdf169088fdaca4d4bbfff6f.jpeg\" /></p><p></p><p>最后我想用一句话来结束今天的演讲：度量是为了改进。要以客户价值为导向，体现当前痛点，才能找到正确的前进方向。感谢大家的聆听！</p><p></p><h4>关于 TGO 鲲鹏会</h4><p></p><p>TGO 鲲鹏会是极客邦旗下科技领导者聚集和交流的组织，学员由 CTO、架构师、技术 VP、具有技术背景的 CEO 等组成，目前已经在北京、上海、深圳、广州、杭州、成都、硅谷、南京、台北、厦门、武汉、苏州等 12 个城市定期举办学习活动。</p><p></p><p>TGO 鲲鹏会采用了“学员共建”的组织形式，希望通过“共建、自治”的方式维护各城市的健康发展，为学员提供必要的服务，帮助学员个人更好地学习和成长，助力学员企业之间更好地合作与交流。加入 TGO 鲲鹏会，全方位提升自身价值，成为卓越科技领导者！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4c/4c5129d041d7023b2c328ccaa1b96277.png\" /></p><p></p>",
    "publish_time": "2022-07-25 10:39:10",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "精进式创业：以无所不学 对抗无所不知 | GTLC 南京",
    "url": "https://www.infoq.cn/article/tDcG0Cwqta3LKgN8X742",
    "summary": "<p>2022 年 7 月 16 日，由 TGO 鲲鹏会主办的 GTLC 全球技术领导力峰会·南京站成功召开，吸引全球 200 余位 CTO、技术 VP、CEO 等科技领导者参与。会上，极客邦科技创始人兼 CEO &amp; TGO 鲲鹏会发起人、校长霍太稳，发表《以无所不学 对抗无所不知》的主题演讲，分享自己在 15 年创业路上所总结的重要经验以及踩过的坑与感悟，为想创业或正在创业的伙伴提供参考。我们将演讲内容整理如下，以飨读者。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/98/98b9d23bef47969b2ce4c70e464ca105.jpeg\" /></p><p>四年前，我在 GTLC 全球技术领导力峰会·北京站做开场致词时，与大家分享了关于 CTO 下一步发展方向的话题。当时我抛出的一个问题是，CEO 如果要从 CTO、COO、CMO 中选出替代自己的人选，那么他最应该选的是谁？</p><p></p><p>如果这个问题放在十年前，我觉得 CEO 会毫无疑问的选择 COO 或 CMO，因为这两个职位在当时是能给公司带来最大营收的；</p><p></p><p>不过，四年前我抛出上述问题时，情况已经发生了非常大的变化。很多公司都变得更具科技属性了，他们已经在关注黑客增长，用科技手段获取更多流量和发展机会等。</p><p></p><p>在这四年的时间里，我看到很多 CTO 在努力地“向上走”，在此过程中，不仅需要技术领域的技能提高，还需要管理、财务、投资、沟通等知识的大幅提升。而 TGO 鲲鹏会也把上述有助于学员实现“向上走”的核心内容，贯穿到所有的课程、线上分享、GTLC 峰会等活动中，为学员们的职业发展助力。</p><p></p><p>回到今天的话题——\"以无所不学，对抗无所不知\"，其实就是想和大家分享自己创业历程中的总结与反思，包括疫情期间自己的一些感悟。</p><p></p><p>“无所不学”中应该学什么？第一，是学习常识；第二，学习沟通；第三，学习技术与业务的结合。下面我介绍的无论是“经验”还是“坑与感悟”，都与这三点非常相关。</p><p></p><p>很多人说创业是九死一生，我觉得这个表达有点乐观，特别是疫情期间，大批公司都倒下了。希望我今天分享“创业的 5 个经验”和“创业的 5 个坑与感悟”，能够给大家带来一些小小的帮助。先从经验开始：</p><p></p><p>第一个经验，也是创业最重要的三件事：找人找钱找方向，谈梦谈情谈共赢。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5e/5e25881a28aaa7a868469cc995de4161.jpeg\" /></p><p></p><p>总结出这一理念与 TGO 鲲鹏会的一位学员也是分不开的。这位学员是一家公司的联合创始人，在一次交流时，我问他现在的主要工作是什么，他就讲了上述内容，原话中还有一个“分赃愉快”的横批。这些大白话的背后，其实是对事物本质的深刻理解。</p><p></p><p>一个有发展前途的公司，要具备技术、产品基因。2017 年是极客邦科技发展的分水岭，公司建立了研发团队，开始有了上述基因。在 2017 年前，极客邦科技在与投资机构沟通时，其估值基本就是营业收入的一倍，比如，1 亿元营收对应的公司整体估值就是 1 亿元；但是有了研发团队后，公司的估值明显提高，比如有 2 亿元营收，而公司估值则能达到 10 亿元。</p><p></p><p>数字化会让整个公司的运转效率大幅提升，但更重要的是，随着数字化、科技含量增加，公司的市值、估值也随之提升。很多公司拥抱数字化的一个重要原因是，通过数字化进行市值管理。</p><p></p><p>当前，科技管理者、技术人员不仅在公司业务的发展过程中扮演着举足轻重的角色，而且对公司的估值也起到放大器的作用。大家要更有信心，今后再与公司 CEO 交流时，可以有更多的沟通维度去体现自身价值。</p><p></p><p>不同发展阶段的公司，需要外部资本的类型也不一样。过去四年，极客邦科技每年的融资都有非常明确的目的。第一轮融资来自于慧科教育，其创始人是一位极具融资经验的专家，我特别想和他学习相关经验，就邀请他加入到我们的团队，做天使投资人；</p><p></p><p>后来极客邦科技希望切入知识付费领域，因此 Pre-A 轮接受了得到的投资，并很快借鉴得到在内容、团队方面的成熟经验，公司业务重心也在 2017、2018 年出现了非常大的转变，从原来的媒体社区转变到知识服务；极客邦科技的 B 轮融资，拿到阳光保险 7000 万的资金，用于研发、内容方面的投入，并跑通新的业务模式；</p><p></p><p>今年 3-4 月份，极客邦科技拿到 1 亿元的 B+ 轮融资，领投方为东方富海，跟投方为赛伯乐。这两家投资机构过去围绕 To B 领域进行了大量投资，在与其他被投企业交流后发现，大家有很多可以互相合作的机会，对推动企业间的业务发展有很大助力；未来，极客邦科技融资的目标大概率是引入更加一线的资本，为上市做准备。</p><p></p><p>我上述分享的目的是，希望在座的科技领导者在与 CEO 交流融资时，能够从公司所处阶段，分析、判断适合的投资机构，这对公司未来发展非常重要，一旦选择错误可能会产生致命的后果。</p><p></p><p>很多时候，选择比努力更加重要。极客邦科技 Web 的流量阵地是 InfoQ，App 的流量阵地是极客时间，但继续在自己的 App、Web 上大幅增加流量也很困难。如果到 B 站、抖音、微信视频号去做 InfoQ、极客时间的账号，会发现增粉非常迅速，这说明用户就在这些平台上。用户在哪里，我们就应该去哪里。如果只知道在媒体上花大量时间和金钱，去增加网站和 App 的流量，其实是适得其反的。</p><p></p><p>我看到很多公司非常努力的在自己的一亩三分地上耕耘，但是如果他们能够抬头看看外面的世界，选择更好的发展方向，可以实现事半功倍的效果。因此，无论大家的位置是 CTO 还是 CEO，都该多花时间思考一下未来的方向，这可能要比在公司里解决一个 Bug，解决一个实际的问题更加重要。</p><p></p><p>第二个经验，不要怕啰嗦。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b1/b1fd3094349dd7a1f02cee2b75066efb.jpeg\" /></p><p></p><p>\"Talk is cheap，Show me the code\"是流行在工程师、技术人员中的一句话，但这样的心态在职场里存在很大的问题。</p><p></p><p>我前几天在深圳拜访了一位朋友，他在技术领域的专业能力很强，顺利解决一家接近 4000 人公司的重大业务问题；有一天，他的老板说要再交给他一件更重要的事情，原因是他不仅有强大的解决问题的能力，还具有极强的沟通、领导能力，在公司内部营造出热烈的团队氛围，所有人都愿意在他的领导下工作。</p><p></p><p>苏世民在其所著的《苏世民：我的经验与教训》一书中表示，“任何企业家领导团队的首要任务，就是围绕自己的愿景进行造势动员，营造出一种必然成功的浓厚氛围。”我认为也可以把上述内容中的“企业家”换成 CTO、经理人或管理者等。仅靠自己做事情的效率要远低于鼓励团队成员一起做事情，因此管理者要想办法让整个团队发挥出最大价值。</p><p></p><p>第三个经验，不要在恐惧的时候做决定。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/fe/fe57efaf7e6bfb54290f16d999f8fe9a.jpeg\" /></p><p></p><p>今年年初，公司有两位重要成员离开，让我感到有些焦虑。事情发生后，我希望通过做一些事情，对冲这个负面的影响，然后就邀请几位很厉害的人加入公司。最后发现这是一个错误的决定，引入的新人现在基本也已经离开公司。</p><p></p><p>“引援”失败的重要原因是，在恐惧、焦虑时，对候选人了解、沟通不够充分；而且当初引入这些新人的目的是对冲，而不是引入一位经验丰富，能够带领团队快速向前发展的人。</p><p></p><p>由此可见，无论有什么负面情况发生，大家都一定要冷静、冷静再冷静，回到本质、回到常识中，分析问题、处理问题。</p><p></p><p>如果现在让我重新做这件事，一定会把流程梳理的更加详细，对候选人做更仔细的调查并且进行更加深入的沟通，而且还要让公司其他核心高管也与其进行充分沟通。</p><p></p><p>第四个经验，公司治理也是有章法的。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0c/0c3718c864ea7fd01e5041e208317e33.jpeg\" /></p><p></p><p>基于数据、流程做决策，对公司治理是非常有益的。如果我们做决定的时候能去想一想，有没有数据做支撑？有没有流程做依靠？然后再去做出决策，那么正确的概率会高很多。一家公司做流程、做数据分析，最主要的原因是限制高管“拍脑袋”，当然高管也包括 CTO。特别是在 200 人以上的公司中\"拍脑袋\"做决定，错误的概率会很大。</p><p></p><p>《掌控力》这本书对我的帮助很大，书中有三大关键点：每个季度都要有优先级事情、有可量化的数据支撑、有节奏的会议。</p><p></p><p>优先级大家都理解，OKR、KPI 都算优先级；有节奏的会议，相信大家都有日例会、周例会等；但可量化的数据支撑方面，很多公司做得不是特别理想，包括极客邦科技在这方面也有欠缺。今年我的目标之一是，没有数据、流程做支撑是绝不会做决定的，宁可不做决定也不能“拍脑袋”定事情。</p><p></p><p>第五个经验，保持身心健康。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/32/3282b78fba58343a96488ef95f7e613c.jpeg\" /></p><p></p><p>全球超过 3.5 亿人患有抑郁症，近 10 年来患者增速约 18%，疫情也在加重这一趋势。而锻炼、健身就是摆脱抑郁的解药。</p><p></p><p>《锻炼》这本书中的一句话让人印象深刻，做轻度和中度的锻炼对身体非常有益，锻炼时间超过 30-40 分钟时，则属于重度锻炼，对身体的改变就不再明显。我们应该让每天运动 30-40 分钟成为一种习惯，就像每天都要洗漱后去上班一样，这会对职业生涯产生非常大的帮助。我们要有努力工作的习惯，也要有努力锻炼身体的习惯。</p><p></p><p>下面讲创业的 5 个坑与感悟。</p><p></p><p>第一个坑与感悟，越早和政府打交道越好。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/71/7167ed5ff9f84ebd9b6c12540e6e328a.jpeg\" /></p><p></p><p>近两年政府在财政、业务等方面，对专精特新企业的支持力度非常大。其实很多企业如果主动了解政策、主动与政府打交道，是完全符合专精特新标准的，但大量企业因为不了解而没有参与申报。</p><p></p><p>我们在 2020 年 8 月 23 日成立了极客邦控股党支部。在成立党支部的第一年，就拿到了北京市非公有制经济党建模范单位。企业创始人是党员，企业本身是专精特新的企业，政府也十分愿意给出更多的扶持。</p><p></p><p>第二个坑与感悟，银行的钱是最便宜的，能拿的时候就多拿。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/aa/aafd1b0b859f9184be08d119595b808b.jpeg\" /></p><p></p><p>拿银行的钱看起来不像拿投资人的钱那么光鲜，拿投资人的钱可以做很多宣传，拿银行的钱大家都会觉得是借债。不过，计算一下就会发现，从银行拿到资金的成本远低于股权融资的成本。</p><p></p><p>由于极客邦科技的信誉良好，此前银行可以用不到两周的时间，就将公司所需的 1000 万元打到账户中；但是如果是与投资人沟通，没有 3-5 个月这些资金肯定是不会到账的。</p><p></p><p>第三个坑与感悟，如果这个事情重要，就一定要亲自下场去做。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/cc/cc56d248f95e597ac35c3ebc01e9d6fe.jpeg\" /></p><p></p><p>即使做到经理人、CTO、技术总监这样的级别，如果碰到一件足够重要的事情，建议一定还是要亲自下场试试。我认为视频号将是公司未来第三个流量主战场，所以亲自参与视频号运营，霍太稳视频号有机会成为 Web、App 之外，公司未来 3-5 年的另一个发展支撑点。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/99/99f00e05d919a1b258dd70ed1274c0b1.png\" /></p><p></p><p>第四个坑与感悟，KPI 很重要，但是不要忽视了关系。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/53/53ae197a4b496db1611e85d0f73e6c49.jpeg\" /></p><p></p><p>公司管理层在给团队设定目标后，如果没有和团队一起把目标的实现路径找出来，也没有花很多精力把要实现目标的氛围营造出来，结果很可能就是大家身心俱疲，但目标仍没有完成，团队也慢慢散掉了。</p><p>第五个坑与感悟，如果让我今天只分享一个经验，那就是：重业务，轻管理。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/24/24b8df4a4096538c22fc464557671659.jpeg\" /></p><p></p><p>以无所不学，对抗无所不知，就是要学常识、沟通，学技术和业务的融合。CTO 们在做技术决策时，一定要想清楚这件事能给业务带来哪些价值。</p><p></p><p>举个例子，前几日在 InfoQ 举办的深圳架构师峰会现场，TGO 鲲鹏会（上海）的一位学员和我交流时表示，团队在对 App 搜索功能进行优化后，转化率提升了 20%，每年至少能给公司带来 1 亿元营收。比如，这位学员所在公司的 App 一年应收是 100 亿元，仅搜索一项的改进就为公司提升 1% 的全年营收，技术价值的体现还是很明显的。</p><p></p><p>如何实现重业务、轻管理？就是以客户为中心，成就用户。比如上述 App 搜索的改进，在帮助公司营收扩大的同时，还改善了用户体验，这是体现以客户为中心，成就用户的一个很好的案例。</p><p></p><p>今天分享的标题来自于萨提亚·纳德拉，他在演讲和《刷新》这本书中均提到，不以\"无所不知\"自居，而始终保持\"无所不学\"的态度，这是微软文化的一大关键要素。今天，我结合自己创业的 5 个经验以及 5 个坑与感悟，将这句话分享给大家，谢谢！</p><p></p><h4>关于 TGO 鲲鹏会</h4><p></p><p>TGO 鲲鹏会是极客邦旗下科技领导者聚集和交流的组织，学员由 CTO、架构师、技术 VP、具有技术背景的 CEO 等组成，目前已经在北京、上海、深圳、广州、杭州、成都、硅谷、南京、台北、厦门、武汉、苏州等 12 个城市定期举办学习活动。</p><p></p><p>TGO 鲲鹏会采用了“学员共建”的组织形式，希望通过“共建、自治”的方式维护各城市的健康发展，为学员提供必要的服务，帮助学员个人更好地学习和成长，助力学员企业之间更好地合作与交流。加入 TGO 鲲鹏会，全方位提升自身价值，成为卓越科技领导者！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/4c/4c5129d041d7023b2c328ccaa1b96277.png\" /></p><p></p>",
    "publish_time": "2022-07-25 10:39:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "打开软件研发的黑盒子：一文读懂研发效能洞察的五大流动指标",
    "url": "https://www.infoq.cn/article/1rk7PMXjmuo1qCqgu6e7",
    "summary": "<p></p><h2>数字化时代，软件研发本身也要数字化</h2><p></p><p></p><p>你是否已经感受到，我们已经身处数字化时代的关键节点上。</p><p></p><p>这里首先抛出一个有趣的问题：一辆普通的小轿车里面的代码规模，与桌面操作系统的代码规模，哪个更大？</p><p></p><p>也许你已经猜到了答案。</p><p></p><p>多年以前，一辆小轿车里面大概只有 100 万行的代码，用于基础驱动功能（如牵引力控制）；随后不久就增长到了 1000 万行代码，以满足越来越多的数字化、电子控制单元的增长，以及电动汽车所带来额外控制软件的复杂性；随着汽车互联和信息娱乐的发展，在几年前，一辆宝马汽车中已经达到 1 亿行代码；随着自动驾驶技术的普及，也许很快将会有 10 亿行代码。相比之下，我们的桌面电脑上安装的操作系统有多少代码呢？有资料显示，微软 Windows 操作系统大概有 6000 万行左右的代码。</p><p></p><p>所以，汽车已经变成了轮子上的计算机。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9d/9d499a631369688ce56e233843deb182.png\" /></p><p></p><p>图 1：现代化的汽车已经成为轮子上的计算机</p><p></p><p>这还只是一个小例子，我想说的是，我们真的，已经身处在数字化时代的关键节点上。</p><p></p><p>但有点讽刺的是，在数字化的时代，作为 IT 从业者，我们的研发管理方式，有时还处于相对落后的状态。</p><p></p><p>很多企业还在使用上次技术革命所使用的方法，延续了旧的行为和过时的思维方式。比如使用近百年之前衡量体力工作者的方法，过度关注工作的时长、人力资源饱和度，过度要求工作活动的标准化和整齐划一；过度关注工作产出的代理指标（开发人员写了多少行代码、测试人员测出来多少 Bug），而不是最大化业务结果；过度关注局部优化（某个研发环节的自动化程度、使用了哪些 DevOps 工具），而不是全局优化（端到端的交付效率和质量）…</p><p></p><p>以至于到了现在，软件研发过程在很多情况下还是一个黑盒，缺乏端到端的可见性，哪里有拥堵、哪里有浪费、哪里有风险，管理者可能并不清楚，产品、开发、测试、运维各自的真实痛点，也容易被埋没在无穷无尽的需求和工作当中，更可怕的是，时间一久大家也就习以为常了。</p><p></p><p>但是，我们还是有追求的，我们要想办法，让软件研发本身也实现数字化。而数字化就是从物理世界中，开采出数据，粗炼出信息，精炼出知识，聚合出智慧，最终提高生产力。</p><p></p><p>按照这个逻辑，研发的数字化，我们可以从建设有效的研发效能洞察体系开始。</p><p></p><p>研发效能洞察体系的话题很大，涉及到研发的基础设施的建设、度量指标体系的设计、洞察分析模型的构建、洞察工具产品的实现、基于数据驱动和实验思维的运营等等。限于篇幅，本文只展开其中的一小部分，即重点聚焦于通过软件交付价值流管理方法中的五大流动指标，对研发过程进行有效洞察，并分析其中潜在的问题和瓶颈。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a8/a896a2bfaf134a41d31680abd9a70fa5.jpeg\" /></p><p></p><p>图 2：研发效能洞察体系</p><p></p><h2>流框架及五大流动指标</h2><p></p><p></p><p>在 2018 年底有一本名为《Project to Product: How to Survive and Thrive in the Age of Digital Disruption with the Flow Framework》著作出版，书中指出业务与 IT 之间的脱节是数字化转型失败的根本原因之一，并进一步提炼出了一个称为“流框架”的全新模型，用来建立业务驱动的数字化转型与支撑它们的技术转型之间所缺失的那一层连接。</p><p></p><p>记得当时是何勉老师向我推荐了这本书，我看到后真的有一种相见恨晚的感觉，我认为书中的内容对于整个行业有很强的指导意义和很高参考价值，随即我决定要与朋友们一起将它翻译成中文版本（即将出版，敬请期待）。</p><p></p><p>本文我们就先聚焦于流框架中的五大流动指标。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/78/78746f91359641d6dd42bd3febdd7806.jpeg\" /></p><p>图 3：五大流动指标</p><p></p><p>大家可能要问，为什么要称为“流动”指标呢？</p><p></p><p>这是因为，精益思想是流框架及其相关流动指标设计的底层逻辑，正如精益思想的五大原则所强调的，我们要应该按照具体产品精确地定义价值、为每款产品定义价值流、使价值不间断地流动、让客户从生产商拉动价值，以及追求尽善尽美。</p><p></p><p>所以，基于精益思想，流动指标度量的就是价值的流动，它们共同指征了一个组织交付价值过程中的效率水平和健康程度。流动指标共有五个，分别是流动速率、流动时间、流动负载、流动效率和流动分布。综合利用好这五个指标，我们就可以讲述一个关于软件研发价值流完整的故事，回答关于研发交付效率如何的本质问题。</p><p></p><h3>1. 流动速率</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/52/52476017c635e375395f7f933d513f30.png\" /></p><p>图 4：流动速率</p><p></p><p>指标定义：</p><p></p><p>在给定时间内完成的流动项（如需求、缺陷或其他各种类型的工作）的数量，流动速率可用于衡量生产力。</p><p></p><p>如何使用：</p><p></p><p>跟踪流动速率，以有效评估并预测团队可以交付多少工作。当流动速率过低时，需要及时调查原因，可能会存在资源紧缺、架构或基础设施等问题，也有可能存在大量等待导致的流动停滞。</p><p></p><p>指标解读</p><p></p><p>数值升高：</p><p></p><p>一般表明价值交付正在加速</p><p></p><p>数值降低，且流动时间很长：</p><p></p><p>一般表明交付存在阻塞、依赖，或在制品过多导致的工作切换浪费</p><p></p><p>常见问题</p><p></p><p>流动速率与敏捷的速率概念有什么区别？</p><p></p><p>流动速率从敏捷的速率概念改编而来，后者表明了团队在一个时间段内（例如，两周的迭代）交付了多少个工作单元（例如，故事点数）。但流动速率计算的是在给定时间内完成的流动项的数量，假如一个版本完成了 10 个需求和 5 个缺陷，则该版本的流动速率为 15。所以，这里的关键区别是，流动速率更简单，它不依赖于对工作量大小、范围或每个流动项优先级的估算。</p><p></p><p>流动速率为什么按需求个数来算，而不是按故事点来算？</p><p></p><p>诚然，流动项的大小可能会大相径庭，这会让人们倾向于用“故事点”或“T 恤”进行估算。</p><p></p><p>但是，使用故事点的估算会容易引发规模冲动（人为的多估算一些），反而可能会更不准确，也经常因此出现业务 / 产品与研发团队之间对数字的博弈。</p><p></p><p>所以，流动速率更倾向于用流动项的数量（而非故事点）来进行估算，根据大数定律（如果有足够的试验或实例，事件发生的可能性就是均等的），如果有足够多的流动项，那么在一个时间段内所有流动项都很大，而另一个时间段内的所有流动项都很小的情况，应该很少出现。</p><p></p><p>另外，对于工作项的合理拆分（如把需求分解为业务需求 - 产品需求 - 技术任务），一定程度上也会降低需求颗粒度的差异对指标准确性带来的影响。如果实在不放心，我们在度量流动速率指标的同时，也可以将需求规模（如开发 + 测试的工作量）作为辅助参考指标一起进行观测。</p><p></p><p>还需要注意的是，流动速率的度量更适合于跟踪一个价值流内的生产力和交付趋势，而非跨价值流进行比较。</p><p></p><h3>2. 流动时间</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/7b/7b9c50c42c5090bb93de4c24e196e7cd.png\" /></p><p></p><p>图 5：流动时间</p><p></p><p>指标定义：</p><p></p><p>从流动项被接受并进入价值流，一直到其完成所花费的时间，包括了工作处于活跃状态的时间和等待状态的时间。</p><p></p><p>如何使用：</p><p></p><p>跟踪流动时间，通过概率思维让交付时间变得更可预测，并相对准确地回答一个核心问题：“工作到底什么时候可以完成?”。根据研究，交付周期类指标一般符合韦伯分布（Weibull Distribution），所以建议使用 85% 分位数（而非平均值）来对流动时间进行度量和预测。</p><p></p><p>指标解读</p><p></p><p>数值很低：</p><p></p><p>我们当然希望流动时间不断缩短。但是看到这个数值很低的时候，也别高兴的太早了，要多看看工作有没有被准确跟踪。比如我们在实际工作中，经常出现“后补”需求的情况，比如开发完成到了要上线的时候，因为上线单要关联一个需求单，这个时候再到看板中补上一个需求，然后从第一个阶段直接拖动到最后一个阶段。类似的情况会导致指标的失真，而指标的准确性是度量的根基，我们需要额外关注。在实践过程中，我们经常在观测主指标（如流动时间）的同时，增加一个关于数据健康度的辅助参考指标（如异常数据的比例），以确保主指标的置信度。</p><p></p><p>数值很高，且流动速率很低：</p><p></p><p>有可能是因为在制品过多导致的工作切换，或者工作被阻塞，产生了大量的等待时间，让流动时间被拖长。我们可以结合下面的流动负载和流动效率一起进行更细化的分析。</p><p></p><p>常见问题</p><p></p><p>前置时间、周期时间、流动时间有什么区别？</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d8/d8a7bba648af6ceed13c0a3d78b1d77b.png\" /></p><p></p><p>图 6：流动时间 vs 前置时间</p><p></p><p>在精益生产中，有两个关键指标用于流程改进，分别是“前置时间”和“周期时间”。前置时间侧重于度量整个流程的时间（工作从“新建”状态开始到“完成”状态之间的时间差），而周期时间则侧重于完成过程中某个步骤所花费的时间（如“开发”阶段的周期时间）。前置时间可以告诉我们端到端流程运行所花费的时间，周期时间可以帮助识别瓶颈（周期时间最长的步骤通常就是瓶颈所在）。</p><p></p><p>但为了避免混淆，流框架使用了名为“流动时间”的新指标。流动时间始于工作被显式接受（例如新需求评审通过并进入排期）或隐式接受（例如自动升级的事件）的时刻，这与前置时间从工作被提出就开始计时完全不同。流动时间可以作为对产品研发团队交付效率的观测指标，即从确定要做某项工作到完成所需的时间；而前置时间更多是从需求方视角进行观测，即从需求提出到完成所需的时间。</p><p></p><p>为什么没有采用 DevOps 社区中常用的变更前置时间？</p><p></p><p>每年的 DevOps 全球调查报告和 DevOps 社区中，经常使用名为“变更前置时间”的度量指标，英文是 Lead time for changes，即代码提交到部署的前置时间。虽然我们也经常采用这个指标进行效能度量和分析，但它并没有被流框架所采纳。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/7d/7d807eb6e6a45e66d4cb979f2e0822ec.jpeg\" /></p><p></p><p>图 7：变更前置时间变更</p><p></p><p>前置时间更多的是以开发人员为中心的视角，而不是以客户为中心或以价值流为中心的视角进行设计的，所以它并不足以封装业务价值，虽然是团队工程能力的重要指示器之一，但本质上是更偏局部、更偏过程性的指标。而流动时间的视野更广，观测的是工作项在软件交付管道中端到端的流动，是更偏全局、更偏结果性的指标。</p><p></p><p>流动时间是按自然日来算还是工作日来算？</p><p></p><p>上文已经讲到，流动时间是一个以客户为中心设计的指标，因此它是以“自然”时间而非“工作日”来进行计算和度量的。</p><p></p><h3>3. 流动负载</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e9/e9258b13b70aed622703e47fa0b730cc.png\" /></p><p>图 8：流动负载</p><p></p><p>指标定义：</p><p></p><p>价值流中在制品的数量（已开始、未完成，即正在进行中的工作），包含了状态为活跃或等待的流动项的数量。</p><p></p><p>如何使用：</p><p></p><p>流动负载是一个先导性指标，可以用来发现在制品过多对速度类指标和团队满意度的影响。我们可以通过不断调整和实验，找到产品价值流最优的流动负载，此时流动速率较高，并且流动时间较短。流动负载可以让产研团队与业务需求方更好地进行协作，在需求与产能之间寻求平衡。</p><p></p><p>指标解读</p><p></p><p>数值较低：</p><p></p><p>可能只有少量的工作正在完成，可能出现了闲置的情况。</p><p></p><p>数值较高：</p><p></p><p>过多的流动负载（在制品）很可能会导致交付延迟、成本增加、质量下降、员工抱怨，长期超过团队产能安排工作将导致职业倦怠。还可以进一步分解为以下两种情况。</p><p></p><p>数值较高，并且流动时间很短：</p><p></p><p>可能有很多的工作被忽略或搁置了，即存在很多“僵尸需求”，一直停留在交付管道中却又因为优先级一直没有时间处理。这时需要清理在制品，评估真正需要完成的工作。如果真的重要就让工作继续及时推进，如果不重要就干脆把工作移出交付管道。</p><p></p><p>数值较高，并且流动时间很长：</p><p></p><p>在制品过多导致的工作切换可能是罪魁祸首，过高的流动负载直接影响了交付效率。这时可以采用精益实践，限制在制品并采用拉动模型（如采用精益看板的方法）。可能还要为资源不足的角色 / 岗位增加容量，或提升自动化的水平。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/3d/3d409dd937a964cd8247c88c52421cd2.png\" /></p><p>图 9：基于利特尔法则的流动时间预测</p><p></p><p>特别需要注意的是，根据利特尔法则，流动时间 = 流动负载 / 流动速率，当流动负载的当前值已经高于（流动速率 * 流动时间）的预测值，则预示未来会有工作无法如期完成。这时就已经发现了未来交付计划及周期的风险，需要对流动时间的预测进行修正，进而实现更准确的承诺 / 决策，这正是先导性指标的价值所在。</p><p></p><p>常见问题</p><p></p><p>流动负载应该从何处开始计算？尚未开始的工作要计算么？</p><p></p><p>如果将价值流想象为一条管道，其中所有尚未开始或已经完成的流动项都在管道的两端，而流动负载就是管道内正在进行的工作单元数，包括所有部分完成的流动项。当流动负载过大，由于队列时间过长，价值流的过度利用会极大地影响交付速度。</p><p></p><p>流动负载有没有绝对数字来说明好坏？</p><p></p><p>业界很难有一个绝对的数字来说明流动负载应该是多少，不同业务类型、处于不同发展阶段的团队，对流动负载的承受能力都有很大差别。所以，建议采用实验思维，关注流动负载的高低，导致了流动速率和流动时间怎样的变化，从而找到一个适当的平衡点。追求过高的资源饱和度对产品开发而言并没有任何好处。百分之百资源利用率对于制造业和软件交付都存在同样问题，都会对流动速率和流动时间产生很大的负面影响。</p><p></p><p>流动负载如何进行有效下钻找到具体问题？</p><p></p><p>可以通过停滞项工作报告，展示在交付管道中有哪些未完成的工作，以及它们在当前阶段已经停滞了多久的时间。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/18/18dc6eb2086e91c5abaf2f32b476ebfe.png\" /></p><p>图 10：停滞项工作报告</p><p></p><p>通过查看系统中指定天数（如 10 天）没有进展的工作，可以发现系统中的问题和瓶颈，一方面找到并消灭较低价值的 “僵尸需求”，减少被搁置的工作；另一方面识别出被阻塞的工作，通过当前阶段及上下游的协同优化，促进它们尽快恢复流动。关于研发过程中的常见瓶颈，我会在下一小节中进行讨论。</p><p></p><h3>4. 流动效率</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/7b/7b342e3806cb090e06616aff8f9b7715.png\" /></p><p>图 11：流动效率</p><p></p><p>指标定义：</p><p></p><p>流动项处于活跃工作状态的时间占总消耗时间的比例。</p><p></p><p>如何使用：</p><p></p><p>度量流动效率，可以帮助团队从瓶颈中可视化等待时间，以便找出导致流动停滞的问题。流动效率越低，工作停滞在等待状态的时间就越长。此指标可以与其他流动指标结合使用，重点聚焦于减少等待时间。</p><p></p><p>指标解读</p><p></p><p>数值较高：</p><p></p><p>流动效率越高，一般表明交间，它涵盖了开发上下游的等待时间。如果开发团队在等待用户界面设计，而设计人员被分配到了其他工作，则流动效率会下降，因为相关需求处于等待状态，原因是这两个团队都没有处理它们。因此，可以通过追踪流动效率降低的原因来识别价值流的瓶颈。付过程越顺畅、越没有阻塞。但也要警惕指标过高的情况（例如超过 40%），这可能意味着状态映射错误或不准确，比如把实际上是等待的阶段映射成活跃状态了，这样就会导致这个指标虚高。</p><p></p><p>数值较低：</p><p></p><p>一般表明存在瓶颈、低效的流程、过多的依赖关系、资源匮乏等，这些问题会导致流动负载的增加，更长的队列，以及更长的流动时间。</p><p></p><p>常见问题</p><p></p><p>流动效率基于流动时间还是周期时间来计算？</p><p></p><p>流动效率是基于流动时间而不是周期流动效率是基于流动时间而不是周期时间，它涵盖了开发上下游的等待时间。如果开发团队在等待用户界面设计，而设计人员被分配到了其他工作，则流动效率会下降，因为相关需求处于等待状态，原因是这两个团队都没有处理它们。因此，可以通过追踪流动效率降低的原因来识别价值流的瓶颈。</p><p></p><p>流动效率的正常值应该多少合适？</p><p></p><p>我在行业中经常看到一些统计数据，很多企业的实际流动效率要比想象中低很多，有些采用传统研发模式、规模较大、流程较复杂的团队，流动效率甚至不到 10%。在能进行准确统计的情况下（指标没有虚高），对很多企业而言，如果流动效率达到 30-40%，就已经算是不错的水平了。</p><p></p><h3>5. 流动分布</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d1/d1aa8b9c94b2e4da10bc4535199f439f.png\" /></p><p>图 12：流动分布</p><p></p><p>指标定义：</p><p></p><p>通过显示在给定时间内完成的流动项（特性、缺陷、风险和债务）的比例，来衡量在不同价值创造类别中的实际投入。</p><p></p><p>如何使用：</p><p></p><p>利用流动分布来为价值流中不同类型的工作带来可见性，这样就可以从优先级的角度看到当前投入的重点在哪里。如果统计出来的流动分布（相当于资源的分配）与业务优先级不一致，则需要进行调整。流动分布通过使资源的分配可见，推动产研团队与业务需求方进行各类工作优先级的权衡，而这里的权衡是一种零和游戏。另外，流动分布随着时间的推移，根据产品所处的阶段，需要进行持续调整和演化。</p><p></p><p>指标解读</p><p></p><p>缺陷占比很高：</p><p></p><p>一般表明缺陷和未计划的工作降低了需求交付的能力，对于技术债务的投资可能需要加强。</p><p></p><p>缺少技术债务和风险的占比：</p><p></p><p>相关工作被忽视或延后，虽然短期看起来交付的需求多了，但未来可能会出现债务危机。</p><p></p><p>常见问题</p><p></p><p>每条价值流的流动分布应该如何设置？</p><p></p><p>流动分布会随着时间的推移，不断发生演化。新产品的价值流通常被调整为最大化需求交付的比例。一旦该产品上市并且有稳定用户，就有必要构建额外的能力来处理可能出现的支持工单和故障，并且还要安排一些工作来减少在随后发布周期中不断积累的技术债务。</p><p></p><p>以上分别展开介绍了五大流动指标的定义和解读方法，相信大家已经对如何使用它们有一些感觉了。但还有一点需要注意的是，这些指标还是停留在软件交付层面上的，我们还应该将研发工作映射到业务结果。将研发效能度量指标与业务结果关联在一起，可以使用真实的数据来确定相关性，并不断地学习和调整。</p><p></p><p>常见的业务结果指标包括价值（如收入、年度合同价值、业务活跃用户数等）、成本（如人力成本、运营和基础设施成本等）、满意度（如净推荐值、员工净推荐值）等，考虑到篇幅有限，关于如何将五大流动指标映射到业务指标的方法及案例，本文暂不展开，后面有机会再介绍。</p><p></p><h2>研发过程中的常见瓶颈及解决思路</h2><p></p><p></p><p>通过对五大流动指标，我们可以对软件交付过程进行有效的度量和分析，并透视出其中潜在的问题和瓶颈。下面，我们就简单讨论一下研发过程中的常见瓶颈及其解决思路。</p><p></p><h3>1. 稀缺的专家或资源，导致流动受阻</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9c/9c000a92944e42160bb13debb8035812.png\" /></p><p>图 13：瓶颈导致流动受阻</p><p></p><p>现象：</p><p></p><p>某个活跃状态阶段（如 “开发”）存在瓶颈，在此之前的等待状态阶段（如 “待开发”），出现大量堆积工作（在制品数高、周期长）。</p><p></p><p>解决思路：</p><p></p><p>在存在瓶颈的活跃状态阶段，增加有技能的资源（但临时加人可能会导致额外的负担，反而降低生产力）；对团队成员进行专业技能培训，或是跨专业的横向培训；通过自动化、自服务、流程优化或规范简化解决。</p><p></p><h3>2. 缺乏自动化或工程能力落后，导致效率低下</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/68/68434e3e9b884fcf0618c0df01f9db4a.png\" /></p><p>图 13：缺乏自动化导致的效率低下</p><p></p><p>现象：</p><p></p><p>人工流程或者主要由人工完成的交互，成为流动的瓶颈；比如代码需要在预发环境测试，但测试资源紧缺，且资源申请不是自服务的，有大量需求堆积在\"等待测试\"阶段。</p><p></p><p>解决思路：</p><p></p><p>实现自动化流程，引入自服务机制，提升工程能力；通过自动化手段提升吞吐量，不依赖于资源或专家就绪，从而提升效率；不依赖于某个中心化的团队按优先级完成工作，如发布审批、环境申请等。</p><p></p><h3>3. 繁琐的流程，导致等待和长耗时</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/97/97db067de16748c7a6bdd410b9b92c7e.png\" /></p><p>图 14：繁琐的流程导致等待</p><p></p><p>现象：</p><p></p><p>变更审批委员会（如两周举办一次审批会议，无论前面交付多快都要等待）、安全审批、资金审批等；工作处于等待状态，如“等待审批”，处于这些状态的制品数很多，在选定时间范围到达高水位线，而后周期性下降。</p><p></p><p>解决思路：</p><p></p><p>以高水位线（最大制品数量）为线索，找到瓶颈点问题所在，即使当前数值已经回落。自动化变更审批流程，识别出高风险变更的标准，哪些是必须要走审批，哪些是低风险变更可以自动化验证、直接部署。</p><p></p><h3>4. 过多的依赖，导致工作流动停</h3><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e3/e369fc3b07de5df5c03930e8fb0352d8.png\" /></p><p></p><p>图 15：过多的依赖导致流动停滞</p><p></p><p>现象：等待某事或者某人完成后，才能继续工作。</p><p></p><p>架构依赖（软件或硬件）：一个部分的变更造成另一个部分的功能被破坏（例如 DB 变更导致对方的功能调用无法工作）</p><p></p><p>专业知识或专家依赖：需要特定专业知识的专家（如业务专家、安全专家）的输入，才能继续完成既定工作</p><p></p><p>活动依赖或事件依赖：需要等待其他的活动完成，否则流程无法进行。如甘特图里的几个前置任务之间的依赖关系</p><p></p><p>解决思路：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/6e/6e74076cf43242347bb3f3d5311863a2.jpeg\" /></p><p>图16：三种依赖及其解决思路</p><p></p><p>对依赖建模（如使用依赖矩阵），与依赖方沟通，探索解决方案；长期方案：要花时间去除依赖，而不仅仅是管理它们。架构层面：找到系统的断裂面，进行架构解耦；组织层面：建立跨职能团队，进行组织解耦。活动层面：提升自服务和自主性，进行活动解耦。</p><p></p><p>最后要说的是，对于研发过程中的瓶颈，我们要通过系统思考，以流动指标为牵引观测整个价值流，以整体的方式思考约束。找到瓶颈并明确解决思路后，在实施改进时，要注意一次只解决一个问题，而不能贪多、追求大而全，这样才能独立观察每项措施带来的效果和影响。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/4e/4e76480001b384e0f84f499159a8d6c8.jpeg\" /></p><p>图 17：基于数据驱动和实验思维，一次只解决一个问题</p><p></p><h2>总结</h2><p></p><p></p><p>本文核心观点如下：</p><p></p><p>数字化时代，软件研发本身也要数字化。研发的数字化，可以从建设有效的研发效能洞察体系开始。基于精益思想，流动指标度量的就是价值的流动，指征了一个组织交付价值过程中的效率水平和健康程度。流动指标共有五个：流动速率、流动时间、流动负载、流动效率和流动分布。综合利用好这五个指标，我们就可以讲述一个关于软件研发价值流完整的故事，回答关于研发交付效率如何的本质问题。研发过程中的常见瓶颈包括稀缺的专家或资源、缺乏自动化或工程能力落后、繁琐的流程、过多的依赖等，这些瓶颈都会导致流动受阻、让工作陷入停滞，导致等待和长耗时。对于研发过程中的瓶颈，我们要通过系统思考，以流动指标为牵引观测整个价值流，以整体的方式思考约束。实施改进时，一次只解决一个问题，这样可以独立观察每项措施带来的效果和影响。</p><p></p><p></p><h4>作者介绍</h4><p></p><p></p><p>张乐</p><p></p><p>腾讯 技术工程事业群 DevOps 与研发效能资深技术专家，前百度工程效率专家、前京东 DevOps 平台产品总监与首席架构师，曾任埃森哲、惠普等全球五百强企业咨询顾问、资深技术专家。长期工作在拥有数万人研发规模的一线互联网公司，专注于研发效能提升、敏捷与 DevOps 实践落地、DevOps 工具平台设计、研发效能度量体系建设等方向，是 DevOpsDays 国际会议中国区核心组织者，国内多个 DevOps、工程生产力、研发效能领域技术大会的联席主席、DevOps/ 研发效能专题出品人，是《研发效能宣言》发起人及主要内容起草者，EXIN DevOps 全系列国际认证授权讲师、凤凰项目沙盘授权教练。著作：《软件研发效能提升实践》、译著：《独角兽项目：数字化转型时代的开发传奇》</p>",
    "publish_time": "2022-07-25 11:19:50",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "亚马逊云科技案例研究: 觅睿科技",
    "url": "https://www.infoq.cn/article/Emkrtfaw2G25mTJe5P6j",
    "summary": "<p>“ 稳定性和安全合规对我们来说至关重要，亚马逊云科技有力地保障了网络连接顺畅和服务的稳定安全，帮助我们赢得更多海外客户的信赖。”</p><p>祝友志 杭州觅睿科技股份有限公司 业务部门主管</p><p></p><p><a href=\"https://zh.meari.com/\">杭州觅睿科技股份有限公司</a>\"&nbsp;是全球卓越的智能家庭视频产品制造商。公司专注于视频、物联网、云平台、AI等先进技术，集研发、营销、供应链为一体，提供一站式智能家居视频解决方案。</p><p></p><h3>业务需求与挑战</h3><p></p><p></p><p>觅睿科技是一家聚焦于物联网视频智能终端开发制造的国家高新技术企业。公司集研发、设计、供应链、品牌营销为一体，专注为客户提供一站式智能家居视频解决方案。在民用视频领域，觅睿科技拥有齐全的产品线，并拥有低功耗、AI智能、基于 WebRTC 云平台的网络传输等核心技术。自 2017 年开始，觅睿科技用 2 年时间迅速占领了欧美市场，目前业务已覆盖德国、法国、英国、意大利、加拿大、美国、澳大利亚、日本、韩国等全球 150 多个国家和地区，同时觅睿科技的产品也已入驻各类大型电商平台与知名线下商超门店，服务全球数千万用户。</p><p></p><p>在拓展海外市场的初期，觅睿科技选择将业务部署在其他云服务提供商的海外区域上，以云服务器的方式运行业务工作负载。伴随着海外用户数量不断攀升，网络链路问题对业务和产品体验带来的影响逐渐显现出来。“我们的智能视频终端采用P2P的方式与用户终端或管理平台建立链接，海外市场的网络环境尤为复杂，例如端口通信异常导致无法及时查看智能视频终端的状态和视频等情况会直接影响产品评价和用户满意度。”觅睿科技业务部门主管祝友志谈到。智能家居领域的创新与竞争日益加剧，觅睿科技秉承“提供让客户惊喜的智能终端产品”的企业使命，也希望在 AIoT 领域能够通过技术创新不断地丰富产品能力，在海外市场保持自身的核心竞争力。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/76/d7/76fc2ce9115da0cf062b18969186ced7.jpg\" /></p><p></p><h3>为什么选择 Amazon Web Services&nbsp;</h3><p></p><p></p><p>为了解决海外业务拓展过程中所遇到的挑战，觅睿科技对多家云服务提供商进行了综合评估，最终选择将海外的物联网视频解决方案业务整体迁移至亚马逊云科技，通过亚马逊云科技全球化基础设施为智能视频终端业务提供支撑。</p><p></p><p></p><h4>保持中立满足安全与合规需求</h4><p></p><p></p><p>觅睿科技物联网视频解决方案所服务的智能视频终端与智能家居场景需要传输和存储大量影像信息，这些信息关系到客户隐私与安全，在选择云服务提供商时，觅睿科技必须要确保平台的安全性与合规性。亚马逊云科技在中立性和安全性优势是赢得觅睿科技认可的重要原因。亚马逊云科技一直将数据加密视为保证用户数据安全的重要机制，不断丰富安全与加密能力，同时也始终保持平台的中立与开放，丰富的合规性认证和数据安全机制可以保护存储在包括&nbsp;<a href=\"https://aws.amazon.com/cn/s3/\">Amazon Simple Storage Service</a>\"&nbsp;(Amazon S3)、<a href=\"https://aws.amazon.com/cn/rds/\">Amazon Relational Database Service</a>\"&nbsp;(Amazon RDS)等服务中的数据，觅睿科技能够通过增强安全能力为全球用户提供可信赖的物联网视频解决方案。</p><p></p><p></p><h4>高效连接大幅改善客户体验</h4><p></p><p></p><p>在完成迁移之后，觅睿科技依托于亚马逊云科技全球基础设施以及低延迟、低数据包丢失和较高的整体网络质量在智能视频终端服务场景中实现了更加可靠的数据传输与访问。用户终端与智能视频终端之间的 P2P 连接建立的成功率高达 99% 以上，P2P 传输延迟可以控制在 600 毫秒之内，用户在不到 1 秒的时间内即可获得第一次的图像预览，大幅缩短了用户图像请求等待时间，觅睿科技通过更加稳定的服务体验在市场上不断得到用户的认可。</p><p></p><p></p><h4>面向智能家居场景提供丰富解决方案</h4><p></p><p></p><p>亚马逊云科技提供了完备的数据库、物联网与人工智能服务，可以帮助觅睿科技构建面向未来的智能家居与 AIoT 应用的新体验。“从采用与 MongoDB 兼容的&nbsp;<a href=\"https://aws.amazon.com/cn/documentdb/\">Amazon DocumentDB</a>\"&nbsp;服务进行智能视频终端事件的存储和管理、实现自动复制和连续备份到慢查询的优化，亚马逊云科技专家团队帮助我们解决了许多问题，也帮助我们加强了服务的可用性和性能。“祝友志说，”在应用层通过&nbsp;<a href=\"https://aws.amazon.com/cn/lambda/\">Amazon Lambda</a>\"&nbsp;对接 Alexa 语音服务，我们也实现了让用户通过语音命令控制互联智能视频终端设备的能力，从而创造智能化、互联化的产品新体验。“此外，觅睿科技也计划在未来引入包括&nbsp;<a href=\"https://aws.amazon.com/cn/timestream/\">Amazon Timestream</a>\"&nbsp;在内的可扩展以及无服务器化时间序列数据库服务来为海量智能视频终端的索引提供支持。</p><p></p><p></p><h4>全球化平台为业务出海提供背书</h4><p></p><p></p><p>亚马逊云科技在全球的市场覆盖率和品牌知名度是觅睿科技选择亚马逊云科技的重要考量因素。“我们的客户包括 C 端和 B 端的客户，亚马逊云科技以及 Amazon 整个生态对我们品牌的背书非常重要，有效帮助我们快速开拓海外市场。”祝友志谈到。</p><p></p><p></p><h3>获得的成效</h3><p></p><p></p><p>在业务全球化的过程中通过将物联网视频解决方案整体迁移至亚马逊云科技，觅睿科技获得了多方面的成效：</p><p></p><h4>资源自动优化减少运维投入&nbsp;</h4><p></p><p></p><p>在亚马逊云科技架构师团队的建议下，觅睿科技通过引入&nbsp;<a href=\"https://aws.amazon.com/cn/cloudwatch/\">Amazon CloudWatch</a>\"&nbsp;提供的监控和可观测性服务，实现了从&nbsp;<a href=\"https://aws.amazon.com/cn/ec2/\">Amazon Elastic Compute Cloud</a>\"&nbsp;(Amazon EC2)&nbsp;、Amazon RDS 到 Amazon DocumentDB、<a href=\"https://aws.amazon.com/cn/elasticache/\">Amazon ElastiCache</a>\"&nbsp;等服务的全面管理，并根据监控指标和异常警报实现自动化的资源调整与问题排查。“Amazon CloudWatch 简化了我们在云基础设施上的运维工作，我们可以通过 API 将实时监控信息与企业内部即时通讯服务整合，更快速地发现问题并通过自动化的方式做出调整，这种方式也让我们的技术团队可以专注在业务的创新上。­­” 祝友志说。</p><p></p><h4>以用户为中心实现全球业务运营&nbsp;</h4><p></p><p></p><p>觅睿科技借助云上的安全性和合规性以及控制措施来满足不同国家和地区在监管领域的要求，无论是数据驻留、加密还是客户隐私保护，觅睿科技都可以依托亚马逊云科技提供的合规性计划实现。“觅睿科技始终以用户为中心，并高度重视保护用户隐私不被侵犯和泄露，努力为每一位用户提供安全、放心的视频智能终端产品，AIoT 与智能家居解决方案。觅睿科技与亚马逊云科技的成功合作经验让我们信心十足地加快海外市场的拓展步伐，并将安全与合规的经验应用于所有客户，推动品牌的快速增长。”祝友志谈到。</p><p></p><p>未来，觅睿科技会继续与亚马逊云科技保持密切的合作关系。觅睿科技的产品团队正计划采用具有 GPU 的 Amazon EC2 实例加速识别模型的训练，并将具备多语言支持能力的&nbsp;<a href=\"https://aws.amazon.com/cn/polly/\">Amazon Polly</a>\"&nbsp;服务应用到产品中为用户提供逼真的语音提示，不断丰富视频智能终端产品、AIoT 与 智能家居的服务场景，实现产品的优化升级，为用户创造更具价值的智能体验。</p><p></p>",
    "publish_time": "2022-07-25 11:32:30",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "谷歌和甲骨文服务器在英国“热崩了”，有人“掏山”、有人“沉海”，数据中心该如何应对高温挑战？",
    "url": "https://www.infoq.cn/article/oysNEyvmtF196XfKYtJW",
    "summary": "<p></p><p>&nbsp;随着夏季“三伏天”的到来，所有企业都会面临IT系统运转温度上升的问题，气温越高的地区，服务器所面临的因过热导致的宕机风险就越大。</p><p>&nbsp;</p><p>对于中小型企业服务器来说，过热可能是一个大问题，因为过热的服务器通常会消耗更多的能源，更频繁地发生故障并且更有可能崩溃。</p><p>&nbsp;</p><p>对于大多数公司而言，服务器崩溃可能意味着数小时或数天的停机时间、员工生产力低下、巨大的压力甚至是不可估量的经济损失。</p><p>&nbsp;</p><p></p><h2>因天气过热，全球宕机事件频发</h2><p></p><p>&nbsp;</p><p>7月19日，当英国东部的水银温度达到 40.3C (104.5F) 时，此地多处<a href=\"https://www.infoq.cn/article/MTeGm5ABOpmVtI6a7ZS4\">数据中心</a>\"无法承受如此高的温度而发生宕机。</p><p>&nbsp;</p><p>数据中心是大型高度安全的建筑群，拥有大量计算机，并且为许多在线服务提供动力源。但是集中的计算能力会散发出超级多的热量，所以数据中心的冷却系统是必不可少的。</p><p>&nbsp;</p><p>科技巨头<a href=\"https://www.infoq.cn/article/aIVqNVKl6VJuHLqqaAs1\">谷歌</a>\"和甲骨文因伦敦数据中心的冷却系统出现故障而发生宕机。</p><p>&nbsp;</p><p>多个<a href=\"https://www.infoq.cn/article/xgt4o5fNaLIh0ujI8Biw\">甲骨文</a>\"云基础设施资源处于离线状态，包括其位于英国南部的服务器提供的网络、存储和计算。根据甲骨文团队的状态更新，<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247568543&amp;idx=1&amp;sn=3d49fa8c726e34924b66b6ad355ce960&amp;chksm=fbeb7550cc9cfc46fa1f3c28c27a36827f181d112d532d2a06f579e8b96ac3609c1045363962&amp;scene=27#wechat_redirect\">数据中心</a>\"的两个冷却器单元在运行时因温度过高发生了故障，技术人员关闭设备以防止硬件烧毁。甲骨文团队表示：</p><p>&nbsp;</p><p></p><blockquote>“由于该地区的非季节性气温，英国南部（伦敦）数据中心内的一部分冷却基础设施遇到了问题。因此，一些客户可能无法访问或使用该地区托管的甲骨文云基础设施资源。”&nbsp;“相关服务团队已参与并正在努力将受影响的基础设施恢复到健康状态，但作为预防措施，我们正在确定可以安全关闭的服务基础设施，以防止出现额外的硬件故障。这些正在采取措施，旨在限制对客户造成任何长期影响的可能性。”</blockquote><p></p><p>&nbsp;</p><p>随后不到一天的时间里，甲骨文在官网发布更新称数据中心的温度“已经达到可工作的水平”，但仍在修复其冷却系统。</p><p>&nbsp;</p><p>随着英国的炙烤，过热问题也袭击了伦敦的谷歌云数据中心。</p><p>&nbsp;</p><p>谷歌云服务表示，其中一座建筑的故障与“冷却有关”，事故发生在英国夏令时周二下午6点13分，但该问题在周三英国夏令时 07:00 得到解决，谷歌云服务表示，“这导致了相关区域的部分容量故障，迫使虚拟机宕机，给一小部分客户造成了损失。”</p><p>&nbsp;</p><p>为了防止损坏机器和延长停机时间，该公司表示已关闭其中一些机器。</p><p>&nbsp;</p><p>谷歌云服务的客户非常看重该公司的<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247567021&amp;idx=2&amp;sn=3756b7c4299d0bf71d9b17fca0f33048&amp;chksm=fbeb7f62cc9cf67417efed9320b1034f7a18720ab65d8773d223688007704ceeadd7d7f0f3a1&amp;scene=27#wechat_redirect\">数据处理</a>\"能力，因此谷歌云服务团队为数据中心建立了许多备份，包括大量的冷却能力。</p><p>&nbsp;</p><p>英国的一些专家由于此次甲骨文以及谷歌此次<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651111670&amp;idx=5&amp;sn=80fcd122460c5dedb4372f7a5e722e0d&amp;chksm=bdb938a58aceb1b39a704c9435bc227d1fd9b6f53d8428902332c46f7b98f7bc45a6205b4928&amp;scene=27#wechat_redirect\">宕机事件</a>\"对现代数据中心的高可用产生了质疑，他们认为像谷歌这样资源充足的大型公司发生的宕机事件更应该让所有运营商对创纪录的高温保持警惕。</p><p>&nbsp;</p><p>在哈罗盖特、伦敦、雷丁和剑桥等地经营数据中心的 Redcentric 的 Paul Hone在接受BBC采访时表示，该公司已于周一采取了一些补救措施来修复那些因为气温过高受损的冷却系统和服务器。</p><p>&nbsp;</p><p>Hone 先生补充说，虽然数据中心在建立时就设置了抵御炎热天气的冷却系统，但如此高的温度还是超出了许多数据中心运营商的预期。</p><p>&nbsp;</p><p>目前还不清楚这两次宕机会影响到多少用户，但宕机可能会给使用Oracle和谷歌Cloud服务托管网站的用户带来问题。</p><p>&nbsp;</p><p></p><h2>气温过高，数据中心该如何应对？</h2><p></p><p>&nbsp;</p><p>夏天的到来意味着温度的急剧攀升和随之而来的能耗增加。额外的冷却意味着额外的电力消耗，这反过来又意味着碳排放量的增加。</p><p>&nbsp;</p><p>气候科学家警告说，炎热的日子将变得更加频繁，科技公司正在探索更环保的冷却解决方案和计算机系统，以减少电力消耗和产生的热量。</p><p>&nbsp;</p><p>2018年，<a href=\"https://www.infoq.cn/article/NXEyRIC6MjIbWQMi4KYd\">微软</a>\"做了一次疯狂的实验——将一所位于奥克尼海岸附近的数据中心沉没到深海中。两年后，微软将该数据中心从海底打捞出来，船上的800多台服务器中只有 8 台出现故障。之所以会进行这样一次实验，是因为微软认为，如果计算机处于水下，利用周围海水提供的自然冷却会大大降低计算机的冷却成本。但是，这个实验性任务并未使用实际的商业服务器，水下的容器内存储的是微软内部用于测试的数据。</p><p>&nbsp;</p><p>对于一个数据中心来说，800多台服务器的容量从专业角度来看，显然也是不够的。不过，微软相信，这个方法在未来是可扩展的。</p><p>&nbsp;</p><p>使用水来冷却服务器是具有一定可行性的，但在数据中心运作的许多干旱地区，水资源严重匮乏。为了使其在这些炎热和干燥的气候中的水足迹降至零，微软计划采用一种新的方式来冷却服务器，即将它们浸泡在基于碳氟化合物的液体中。当服务器工作时，它们产生的热量使液体在达到华氏122度（摄氏50度）时沸腾。沸腾的液体将热量从服务器上移开，然后变成上升的蒸气。蒸汽碰到冷却的水箱盖子，凝结，然后降回水箱中。这个过程被称为两相液体浸泡，创造了一个闭环冷却系统，减少了水和电的使用，同时得到了冷却效果。</p><p>&nbsp;</p><p>除了微软的”水冷“降温方式外，目前全球许多的<a href=\"https://www.infoq.cn/article/xBziAOWfmtUPcHcUSdpM\">科技公司</a>\"服务器都还在使用“风冷”技术降温。这种风冷技术就是利用自然环境的风能资源来实现空间散热法。</p><p>&nbsp;</p><p>比如美国的亚马逊公司、我国的<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651120183&amp;idx=1&amp;sn=e5a421c5f61bda87a5c02fe2e72102b2&amp;chksm=bdb91a648ace93728300bdb78b148b2e56d9fba604570b4baf2a323f07812daf56c82e2df408&amp;scene=27#wechat_redirect\">阿里云</a>\"等大型科技公司，都把数据中心建设在了我国西部地区宁夏境内，其目的就是充分利用宁夏的独特气候条件——风能，来达到自然风制冷效果。</p><p>&nbsp;</p><p>但是\"风冷\"也会存在一定限制，毕竟全年365天不可能每天大风不断。所以更多的企业会选择更加稳定和物理降温方式，比如选择一个地理环境和气候条件都可以是“天然空调房”的位置，因此，拥有很多喀斯特地貌所形成的天然溶洞、且夏季平均气温25摄氏度左右的贵州省安新区的大山中就成了华为、苹果、腾讯等科技巨头的理想选择。</p><p>&nbsp;</p><p>&nbsp;</p><p>参考链接：</p><p>&nbsp;</p><p><a href=\"https://www.theverge.com/2022/7/19/23270581/google-cloud-oracle-servers-outage-uk-cooling-failure\">https://www.theverge.com/2022/7/19/23270581/google-cloud-oracle-servers-outage-uk-cooling-failure</a>\"</p><p><a href=\"https://www.bbc.com/news/technology-62202125\">https://www.bbc.com/news/technology-62202125</a>\"</p><p><a href=\"https://ocistatus.oraclecloud.com/#/incidents/ocid1.oraclecloudincident.oc1.phx.amaaaaaavwew44aa7zoskanlspjh4ll6wxhwxrbkbed4d4cnupxexzqzvlyq\">https://ocistatus.oraclecloud.com/#/incidents/ocid1.oraclecloudincident.oc1.phx.amaaaaaavwew44aa7zoskanlspjh4ll6wxhwxrbkbed4d4cnupxexzqzvlyq</a>\"</p><p><a href=\"https://www.bbc.com/news/technology-54146718\">https://www.bbc.com/news/technology-54146718</a>\"</p><p><a href=\"https://new.qq.com/omn/20201201/20201201A0DAKF00.html\">https://new.qq.com/omn/20201201/20201201A0DAKF00.html</a>\"</p>",
    "publish_time": "2022-07-25 14:19:01",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "顺丰数据中台是怎样炼成的？专访顺丰科技大数据总监蔡适择",
    "url": "https://www.infoq.cn/article/LGQQuHSkZz8RbPKgcDNO",
    "summary": "<p>顺丰高速发展背后隐藏巨大阻力，各领域的数据问题成为顺丰精细化经营的最大困境，主要体现在核心业务线O线、M线、F线、H线跨领域数据共享困难、数据服务时效性不足、数据质量问题、分析口径不统一和缺乏对数据的深度分析和挖掘。</p><p>&nbsp;</p><p>而为了解决这样的问题，顺丰内部推动了数据中台项目，旨在打通内部数据的使用效率。数据中台作为集团最核心技术系统之一，如何构建其架构体系，如何在实际业务场景进行落地？本次采访了顺丰科技大数据总监蔡适择老师，来讲讲相关实战经验。</p><p>&nbsp;</p><p>2022年8月18-19日北京<a href=\"https://archsummit.infoq.cn/2021/beijing/schedule\">ArchSummit全球架构师峰会</a>\"上，也设置了大数据治理专题，感兴趣的可以查看会议日程，来自字节跳动、快手、美团、网易的嘉宾，将分享LakeHouse、流批一体等内容，欢迎关注。</p><p>&nbsp;</p><p>InfoQ：蔡老师，您目前负责顺丰大数据平台底盘建设及产品化工作，完成顺丰大数据平台从0至1的整个建设过程。数据平台建设之前，顺丰内部的数据是一种什么样的状况？有哪些阻力？</p><p>&nbsp;</p><p>蔡适择：在建设统一平台之前，数据是分散到各个独立的组织中，且各组织的数据想要共享比较困难，所以以前也有大数据，但它是一个个的数据孤岛，对业务的助力也仅仅是做一些报表，数据的需求则要由指定的人在指定的机器上编写指定的脚本来满足，交付效率低。</p><p>&nbsp;</p><p>建设统一的平台，最大的挑战在于如何在满足信息安全的同时，对全域数据进行拉通与融合，并以开放自助的方式来大幅提升交付效率，而顺丰的数据又是相对来说比较敏感的，所以信息安全的思维惯性反而在当时成为了最大的阻力。</p><p>&nbsp;</p><p>InfoQ：顺丰数据中台建设经过了哪几个阶段？建设之初，做了哪些架构层面的规划？</p><p>&nbsp;</p><p>蔡适择：大体来说，可以分为三个阶段吧，第一个阶段算是开荒期，重点是做统一平台、统一工具、统一数据湖，在数据安全、可扩展性、数据共享上做了较为细致的规划，基本奠定了整体的平台服务基础。</p><p>&nbsp;</p><p>第二阶段算是整合期，基于顺丰多元化战略的契机，在多租户模式下数据融合、数据协同开发、数据资产线上化上给予重点突破，让数据开发效率有大幅的提升，反映到业务中，就是数字指导经营基本深入到了业务各条线。</p><p>&nbsp;</p><p>第三阶段一直持续至今天，我们称之为治理期，经过多年的数据野蛮增长，平台沉淀了不少数据，但数据的质量、数据的复用性、数据口径的统一却常常未达预期，因此需要对其进行深度的治理，在此期间，重点推进数据标准与质量、数据开发规范、平台数据运营工作，并在底盘架构上进行云原生、多机房、实时化改造，让全集团的数据人员深度参与，让顺丰的数据中台在数据质量、数据共享、数据应用效率上有质的提升。</p><p>&nbsp;</p><p>InfoQ：数据中台建设之前，一直存在的“跨领域数据共享困难、数据服务时效性不足、数据质量问题、分析口径不统一和缺乏对数据的深度分析和挖掘”这些问题，在中台建设之后，已经完全解决了嘛？在业务上的效果如何？</p><p>&nbsp;</p><p>蔡适择：这些问题完全解决是不太可能的，但对比以前，算是有质的飞跃。</p><p>&nbsp;</p><p>比如跨领域数据共享，我们在保障数据安全合规的情况下，通过数据标准、研发标准，以及底盘逻辑化改造，基本解决掉曾经或潜在的共享障碍；在数据时效性上，我们通过自建的数据开发平台、实时数据湖能力、湖仓一体的能力，让数据时效提升变得轻松且低成本；在数据质量上，经过多年的数据标准沉淀及数据质量平台的建设，让数据质量问题得以及时发现、及时处理，有效地提升数据质量，并基于数据指标平台及建模工具，在数据标准、数出一孔方面得以大幅保障，基本改善了口径不统一的情况。</p><p>&nbsp;</p><p>从业务效果上来总结，让用户搜不到、找到不可用、查到不敢信等数据问题基本得到解决。</p><p>&nbsp;</p><p>InfoQ：数据中台在实际业务场景进行落地的时候，遇到了哪些技术上，或者内部推动上的困难？例如跨领域共享、指标时效、数据治理、团队协同及跨云计算等问题。又是如何解决的？</p><p>&nbsp;</p><p>蔡适择：能用技术解决的问题都不能算是大的问题，最大的困难还是在于内部推动上，数据共享、多人协同开发、数据标准化都是需要跨组织拉通，并推动对现有的内容进行改造的，对现有业务的影响如何避免、改造后的短期收益不明显都是明显的障碍，因此需要从上往下推行，需要在高层上就取得一致的共识与支持才能进行下去。所以顺丰的数据中台能够顺利推进，最大的因素还是因为管理层有坚定的决心，且取得了一致的共识。</p><p>&nbsp;</p><p>当然，在技术上还是有一定的挑战的，比如数据实时化，让研发写专业的代码肯定也是可以实现的，但这成本高、灵活性低。因此我们需要在实时数据湖、实时数据开发平台上做深度的低门槛化，才能让数据实时化得以大幅推进；再比如跨云计算，因为随着业务用数的人越来越多、用户自助分析的需求越来越大，且物流快递行业是具有明显的高峰低谷时期，算力需求的不稳定性是比较突出的，因此我们通过对大数据底盘架构做深度改造，在存算分离、精细化缓存、跨机房精细调度等方面进行深度研发，并与公有云打通，借助公有云的弹性能力，让计算按需弹性到公有云，在平衡成本的情况下，有效地保障了不稳定的算力需求。</p><p>&nbsp;</p><p>InfoQ：在您看来，顺丰数据治理体系的关键理念是什么？又是如何践行的？</p><p>&nbsp;</p><p>蔡适择：一套数据治理体系、一个数据中台、N个应用，要践行这样的理念，首先需要管理层有深刻的共识，让事情能推下去；其次，平台及工具要足够地简单与透明，让用户愿意配合；最后，要有配套的数据运营，即需要有一条鞭子，确保标准规范得以落地，并让数据的价值得以数字化显现。</p><p>&nbsp;</p><p>InfoQ：数据中台建设，及应用落地的经验，对快递行业发展有什么借鉴经验可以传播的？</p><p>&nbsp;</p><p>蔡适择：要有数据标准、要关注数据质量。快递行业是一个“人多、车多、货多、场多、环节多”的业务场景，如果全靠人管，没有全局的数据支撑，效率必将大打折扣，一个相对完备的数据中台，不仅仅能够让管理者及时发现业务问题、调整战略方向，还能让经营精细化、物流智能化得以推进，但这么多的环节对接、这么多的人工操作，数据质量问题是最容易出现且又最容易被忽视的，而一个有众多数据质量问题的数据中台，是没有可能成功的。</p><p></p><h4>讲师简介</h4><p></p><p>蔡适择，顺丰科技有限公司大数据总监。负责顺丰大数据平台底盘建设及产品化工作，完成顺丰大数据平台从0至1的整个建设过程，之前负责京东实时计算平台从0至1的整体建设。在大数据平台、物联网、边缘计算领域有丰富的实践经验，深耕大数据平台存算分离、实时数仓、融合计算等技术，致力于大幅降低数据开发及应用门槛，让大数据技术成为一项人人可用、可快速应用的技术。</p><p></p><h4>活动推荐</h4><p></p><p></p><p><a href=\"https://archsummit.infoq.cn/2021/beijing/schedule\">ArchSummit全球架构师峰会</a>\"（北京站）设置了企业数字化转型落地探索专题。来自来自字节跳动、快手、美团、网易的嘉宾，将分享LakeHouse、流批一体等内容，欢迎关注。</p>",
    "publish_time": "2022-07-25 18:17:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "大数据读性能 5 倍提升、写性能10倍提升，顺丰实时数据湖是如何做到的？",
    "url": "https://www.infoq.cn/article/Y5UQP6EH5tWhzD9OCRQw",
    "summary": "<p></p><blockquote>为满足前端业务决策分钟级需求响应，顺丰科技建立了实时数据湖，实现了整个数据体系的巨大提升。我们采访了顺丰科技大数据架构负责人林国强，请他就云原生实时数据湖实践进行了分享。本文为采访整理文~</blockquote><p></p><p>&nbsp;</p><p>InfoQ：顺丰科技科技为什么要建立实时数据湖？云原生实时数据湖有哪些优势？</p><p>&nbsp;</p><p>林国强：顺丰科技以前的数仓，是基于 Hive/Spark 架构，指标时效是T+1天，而前端的业务决策和业务运营给科技侧提出了更高的需求，希望指标时效能够做到分钟级，这是顺丰要建立实时数据湖的缘由。实时数据湖的优势非常简单，就是快，能够大大提高整个数仓体系的指标时效，为后续的业务提供更快的支撑。</p><p>&nbsp;</p><p>InfoQ：顺丰科技科技实时数据湖是基于哪项数据湖框架开发的？</p><p>&nbsp;</p><p>林国强：顺丰科技主要基于<a href=\"https://xie.infoq.cn/article/cd293ba63d5ddeae7353827de\"> Hudi </a>\"体系构建实时数据湖，同时修改了开源 Hudi 的一些内核，比如全增量混合状态的并行读，Parquet 块级别索引，读写的性能优化等。同时也修复了很多社区的bug，让它能在大规模生产环境运行。</p><p>&nbsp;</p><p>InfoQ：实时数据湖规模化落地过程中，遇到了哪些挑战？面对这些挑战，顺丰科技科技的解决方案是什么？</p><p>&nbsp;</p><p>林国强：实时数据湖落地过程中，一个是技术层面的挑战，一个是业务层面挑战；</p><p>&nbsp;</p><p>就技术方面而言，首先是写入性的问题。目前 Hudi 开源最新的版本乐观锁的优化，并没有解决读时混合状态的并发问题。比如，有一张 TestA 表，Hudi 先会读取此表的全量，再读此表的增量，如果这时候有一张TestB表进来，那么Hudi会先读 B 表的全量，然后才会去处理TessA 表的增量。也就是说，即便这个时候Test A的增量在处理中了，它也会停下来先去读 TestB 表的全量，然后再去处理这个增量。Hudi 需要所有的表状态都到增量这个环节，它才会去做增量的同步。这对于多端混合状态的并发影响比较大。</p><p>&nbsp;</p><p>其次是，Hudi 并没有搞定 Parquet 文件“块级别”的索引，我们使用 Hfile 去做。这样做的优势是，你在写的时候，可以直接定位到指定块进行更新，大家不需要对整个Parquet文件涉及到的块进行更新，这个时候，你的 I/O 的提高至少10倍以上；另外是 Hudi 本身对Parquet序列化与反序列化的问题。Hudi 会把某行所有列都序列化出来，然后再更新到对应的列之后，它全部都会反序回去。但实际上，我们可能只更新某行或者某列。我们做了一个优化，可以针对特定列进行更新，节省了许多 CPU 的计算性能。</p><p>&nbsp;</p><p>最后，我们自研了 SQL 引擎，引擎针对Hudi进行了一些下推与优化，包括做了很多一些逻辑减值的优化。相较开源版本而言，读性能提升3~5倍。</p><p>&nbsp;</p><p>就业务的挑战层面，主要是从传统数仓到实时数据湖迁移涉及的业务方较多，涉及的改造点集中在数据接入，这部分是需要找到愿意配合的业务方，逐步改造，形成示范效应后，再进行全面推广。Hudi 数据集成环节需要进行很多改造，比如，我们需要将原来 Insert overwrite 的语法，修改成 Merge into 语法，最后，我们从市场线开始合作，因为他们对于市场指标支撑的时效性要求比较高，最终完成了整个改造。</p><p>&nbsp;</p><p>InfoQ：通过数据湖来构建实时数仓，大致分为了哪几个过程？</p><p>&nbsp;</p><p>林国强：第一个阶段，顺丰最开始做数仓的时候，并非是用 Hudi 这种方式去做，我们使用用 Flink+Spark 这种架构去做数据仓库。本质上讲，实时计算方面，我们仍然在使用Flink，离线方面还是在用 Spark，只是我们在工具层开发了批流合一工具。这些工具可以使得我们使用统一的分析入口，既同时做实时，又同时做离线，整个方案相当于是工具层统一，引擎层仍然是混合结构，这种方式有两个较大的问题。</p><p>&nbsp;</p><p>一方面是指标一致性问题，顺丰每天约有 200TB 数据，通过实时和离线链路出来的指标，总会有一些细微的差别，哪一条链路的数据值得信赖是个较大的问题；另外一方面是计算资源的消耗问题，我们需要重复计算相关指标，算力消耗非常大。&nbsp;</p><p>&nbsp;</p><p>第二个过程，我们研究了整个行业大数据架构的发展，发现实时数仓、实时数据湖是一个比较好的方式。从业务角度来看，并非所有的指标都需要毫秒级别，99%的指标可能需要10分钟以内，可能只有1%的指标需要达到毫秒级，针对这部分需求，我们引入了实时数仓的技术，从对于指标时效性要求比较高的业务线来进行合作。将所有生产线的实时与离线指标放到了 Hudi 体系，这样做之后，指标完全一致，能耗也降了下来，并且整个的分析性能比原来还要快一倍，时效性也可以满足市场线进行商业驱动的需求。&nbsp;</p><p>&nbsp;</p><p>第三阶段，除了将之使用在市场线之外，我们会在运营线、人机线、财务线等都进行复制。我们希望未来整个集团的绝大部分指标，都能够放到实时数据湖体系里面。</p><p>&nbsp;</p><p>InfoQ：顺丰科技云原生实时数据湖发展的未来规划有哪些？</p><p>&nbsp;</p><p>林国强：主要是会从存算分离、<a href=\"https://xie.infoq.cn/article/4962814355452c1a4416e46e6\">实时数仓</a>\"、<a href=\"https://xie.infoq.cn/article/f319ac01bbfab3c2204b42383\">湖仓一体</a>\"三个方向进行深化。存算分离，是为了解决资源弹性伸缩问题，这个也是传统大数据遗留的问题，通过它可以实现大数据成本优化，按需伸缩；实时数仓，主要是提高数据从接入到应用的整体时效，希望未来能够达到 10 秒以内，这样，很多场景，很多架构会形成统一，不需要那么多异构集群；湖仓一体，主要是希望实时数据湖，未来在查询响应速度和并发能力这两部分能跟上现在的传统数仓，同时，在数据管理能力也能提上来，这样，一个湖就能覆盖一个企业的所有跟数据有关的场景，这是一个美好的未来。</p><p>&nbsp;</p><p>InfoQ：顺丰科技是否输出此项技术对外服务，以什么方式输出？</p><p></p><p>林国强：顺丰科技目前是有做大数据 ToB 市场的，我们是以私有化产品和公有云PaaS两种方式提供云原生实时数据湖能力，同时提供一些企业构建实时数据湖所需要的咨询和架构设计服务。</p><p>&nbsp;</p><p>嘉宾介绍：</p><p></p><p>林国强，顺丰科技科技大数据架构负责人，曾任职深信服及新华三大数据总监，中国最早一批大数据和人工智能玩家，拥有超过 10 项大数据发明专利，负责过 10 亿级超大规模大数据项目，全国实施超过 10000 个大数据节点，承载和分析超过 1000PB 以上数据。在云原生实时数据湖方面有深入研究和落地实践，致力于简单、易用、高效的大数据基础设施技术，推动大数据赋能全球产业数字化底盘。</p><p></p><p>活动推荐：</p><p><a href=\"https://archsummit.infoq.cn/2022/beijing/track\">ArchSummit全球架构师峰会（北京站）</a>\"即将在8月18-19日落地，我们设置了【云数据库架构设计】【微服务治理之基础架构】【微服务治理之业务架构】【数据库与存储技术】等专题，点击蓝色超链，可查看具体议题。</p>",
    "publish_time": "2022-07-25 18:36:48",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "搞不定移动端性能，全球爆火的Notion从Hybrid转向了Native",
    "url": "https://www.infoq.cn/article/kIifF9KOt0jTTLjPL93u",
    "summary": "<p>7月20日，Notion 笔记程序发布了版本更新，并表示更改了移动设备上的技术栈，将从webview逐步切换到本机应用程序，以获得更快更流畅的性能。</p><p>&nbsp;</p><p>该团队声称该应用程序现在在 iOS 上的启动速度提高了 2 倍，在 Android 上的启动速度提高了 3 倍。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a8/a8513df2fc101a1553ad50cf66642c9e.png\" /></p><p></p><p>&nbsp;</p><p>&nbsp;</p><p>Notion发布的这条Twitter也得到了广泛的关注，几天之内就有了上千条转发。由于前几年Notion的技术栈一直没有公开，开发者对此充满了各种猜测，很多人认为Notion使用的是React Native或Electron，因此这次Notion宣称切换为原生 iOS 和原生 Android，再一次引发了“框架之争”。</p><p>&nbsp;</p><p>其中有不少人发表了“贬低”跨平台开发的看法，对React Native等框架产生了质疑，毕竟现在向跨平台过渡是不可避免的，这些框架是对原生工具包的一个“威胁”，而Notion恰恰又切换到了“原生”开发模式。</p><p>&nbsp;</p><p>实际上，在2020年之前Notion使用的是 React Native，随后切换到了Hybrid 混合开发模式：使用 Kotlin/Swift + 运行网络应用程序的 Web 视图。但移动端的性能一直是一个问题，2年之后，Notion再次切换到了原生开发模式。</p><p>&nbsp;</p><p>有网友认为，像Notion这样重UI和交互的产品，如果不知道如何掌握Web技术，那么对他们的产出速度表示担忧。面对这种吵翻天的状况，Notion 的前端工程师也因此再度出面回应这次切换的原因和一些思考。</p><p>&nbsp;</p><p></p><h2>Notion的发展和理念</h2><p></p><p>&nbsp;</p><p>&nbsp;Notion 是一款将笔记、知识库和任务管理无缝衔接整合的多人协作平台。Notion 打破了传统的笔记软件对于内容的组合方式，将文档的内容分成一个个 Block，并且能够以乐高式的方式拖动组合这些 Block，让它使用起来十分灵活。</p><p>&nbsp;</p><p>Notion由Ivan Zhao、Simon Last于2013年在旧金山创立。去年底，Notion获得了2.75亿美元的C轮融资。截至2021年10月，Notion估值103亿美元，在全球拥有超2000万用户。Notion的创始人和 CEO Ivan Zhao是一位80后华人。他出生于中国新疆，曾就读于清华附中，中学时随家人移居加拿大，现在被很多人认为将成为硅谷的下一个袁征（Zoom的创始人）。Ivan在大学时期主修认知科学，学习的是人的大脑怎么运作，外加对计算机也很感兴趣。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/5a/5a28d685061c521c0feecabdc63e8344.png\" /></p><p></p><p>&nbsp;</p><p></p><blockquote>“我想分享一个Notion创始人的故事。2013年的时候，我在一家咖啡馆遇到了Ivan，他对我的钥匙复制服务感兴趣，但他很不喜欢这个服务的网站。于是他用一晚上的时间，用HTML和CSS重写了它......”。</blockquote><p></p><p>&nbsp;</p><p>Ivan也曾表示“我的很多朋友都是艺术家。我是他们中唯一会编码的人。我想开发一款软件，它不仅可以为人们提供文档或网页。” 因此，在 2012 年大学毕业后，在文档共享初创公司 Inkling 工作期间，他创办了 Notion。原本的目标是构建一个无代码应用构建工具，不过项目很快失败了。随后Ivan与Simon迁往了日本京都，待了一年左右，小而安静的地方能“让我们专注在写代码”，在相对无压力和与世隔绝的环境下，构思并设计出了现在的Notion原型。用Reddit论坛上的一条获得高赞的网友总结就是：一个Notion = Google docs + Evernote + Trello + Confluence + Github + Wiki +……</p><p>&nbsp;</p><p>“工具应该模仿人脑的工作方式。但由于每个人的思维和工作方式都不同，这意味着工具需要非常灵活。”Ivan解释道。而Notion创建的目的，就是将用户从一堆各式各样的生产力工具之中解放出来，给予一个干净清爽、简便易行的All in One工作平台。企业用户也可以在Notion 上基本实现公司的内部管理所需要涉及到的所有功能。包括公司知识库和资料库的创建与管理、项目进度管理、信息共享、工作日志、内部社交、协作办公等等。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3b/3bdddbe1d55937050bd83166ab4ea51e.png\" /></p><p></p><p>&nbsp;</p><p>&nbsp;</p><p>有人甚至说，Notion堪比办公软件届的苹果。在2016年发布1.0版本后，因其独特的设计、专注于将事情做得更好、对投资人的冷淡态度，外加疫情远程办公潮，多方面因素让Notion迅速火遍全球。作为一款 All in one 的概念型工具，Notion 一直被众多企业抄作业，但它目前几乎未逢敌手。</p><p>&nbsp;</p><p></p><h2>Notion为什么要两次更换技术栈？</h2><p></p><p>&nbsp;</p><p>Notion在2017年、2018年分别发布了iOS客户端和Android客户端。在发布2.0 版本之后，该公司于2019年以 8 亿美元的估值筹集了 1000 万美元的资金。但也许和创始人的发展理念相关，Notion的员工数量一直不多。</p><p>&nbsp;</p><p>2019年3月的时候，工程团队总共才4个人，当时Notion用React Native 来渲染 web 视图。Notion在 Twitter 上解释说，这是为了更快地部署新功能和进行一些其他修复。</p><p>&nbsp;</p><p>但如果这个系统适合开发者，那么它对用户来说远非最佳：许多人抱怨移动版本非常缓慢。“即使是新 iPhone 也非常慢 - 大约 6-7 秒后我才能开始输入笔记。到那时我都快忘记了我之前想写什么。它基本上是一个非常重的 web 应用程序视图。”“如果Notion不选择改变，那么它将迅速被其它同类产品取代。”......</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/41/41a7bc9681d2361921d5606dafe8739c.png\" /></p><p></p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1a/1a94182bba120461e9ab09808cfa3829.png\" /></p><p></p><p>&nbsp;</p><p>&nbsp;</p><p>2020年，Notion第一次因这个问题，更改了技术栈，放弃React Native，切换到了Hybrid 开发环境。</p><p>&nbsp;</p><p>Notion前端负责人Jake Teton‑Landis表示，“React Native 的优势在于允许 Web 开发人员构建手机应用程序。如果我们已经有了 webview，那么 React Native 不会增加价值。对我们来说，它让一切变得更加困难：性能、代码复杂性、招聘等等。用 React Native 快速完成任务的同时，也在跟复杂性战斗，这让我们感觉束手束脚。”</p><p>&nbsp;</p><p>虽然这次移动端的性能有了一些提升，但也没有根本解决问题，更新之后，Android端依然是一个相当大的痛点。</p><p>&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/0e/0ef1400e4dfa7e3f6dc4534fe6c8eee1.png\" /></p><p></p><p>Notion也曾在2019年的时候表示不会很快发布本机应用程序，但他们同时强调“原生开发也是一个选择”。</p><p>&nbsp;</p><p>7月20日，Notion 发布了版本更新，并表示将从主页选项卡开始，从webview逐步一个个地切换到本机应用程序。</p><p>&nbsp;</p><p>此时Notion工程团队也大约只有100人， 总共包含 3位 iOS 工程师、4位 android 工程师，除主页使用SwiftUI/Jetpack Compose 进行渲染，其他部分仍然是 webview进行绘制。</p><p>&nbsp;</p><p>“似乎这还是招聘不足产生的人员问题。”Jake解释说，“我们的策略是随着团队的壮大逐步本地化我们应用程序的更多部分。我们这个程序必须使用本机性能，如果它是原生的，则更容易达到这个性能要求。</p><p>&nbsp;</p><p>凭借我们拥有的经验，以及对问题的了解，我们因此选择了原生 iOS 和原生 Android开发。虽然出于复杂性的权衡，在可预见的未来，编辑器可能仍然是一个 webview，毕竟Google Docs、Quip、Dropbox Paper、Coda 都使用原生 shell、webview 编辑器。”</p><p>&nbsp;</p><p></p><h2>原生开发才是王道？！</h2><p></p><p>&nbsp;</p><p>虽然无论是原生开发还是Hybrid都可以完成工作，但原生应用程序是按照操作系统技术和用户体验准则开发的，因此具有更快的性能优势，并能轻松访问和利用用户设备的内置功能（例如，GPS、地址簿、相机等）。</p><p>&nbsp;</p><p>Hybrid开发方式，通常是在面对市场竞争需要尽快构建并发布应用程序时候的一种选择。如果期望的发布时间少于六个月，那么混合可能是一个更好的选择，因为可以构建一套源代码，跨平台发布，与原生开发相比，其开发时间和工作量要少得多，但这也意味着需要做出许多性能和功能上的妥协。</p><p>&nbsp;</p><p>如果有足够时间，那么原生方法最有意义，可以让应用程序具有最佳性能、最高安全性和最佳用户体验。毕竟，用户体验是应用程序成功的关键。互联网正在放缓，人们使用手机的时间越来越长，缓慢的应用程序意味着糟糕的业务。在这种情况下，对Notion来说，拥有一个快速应用程序比以往任何时候都更加重要。</p><p>&nbsp;</p><p>参考链接：</p><p><a href=\"https://www.notion.so/releases/2022-07-20\">https://www.notion.so/releases/2022-07-20</a>\"</p><p><a href=\"https://twitter.com/jitl/status/1530326516013342723?s=20&amp;t=xT0gfWhFvs0yNvc1GQ3sTQ\">https://twitter.com/jitl/status/1530326516013342723?s=20&amp;t=xT0gfWhFvs0yNvc1GQ3sTQ</a>\"</p>",
    "publish_time": "2022-07-25 19:44:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]