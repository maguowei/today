[
  {
    "title": "Java近期新闻：OpenJDK更新、JDK 20发布计划、GraalVM 22.3、JReleaser 1.3.0",
    "url": "https://www.infoq.cn/article/zjeqoqwH8q8BrAqB7fWJ",
    "summary": "<p></p><h1>OpenJDK</h1><p></p><p></p><p>JEP 434，即<a href=\"https://openjdk.org/jeps/434?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（第二次预览）</a>\"，在过去的一周从Draft 8293649<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-October/007110.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">进入</a>\"到Candidate状态。这个JEP在<a href=\"https://openjdk.java.net/projects/panama/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Panama项目</a>\"中从前到后的演化路径：JEP 424，即<a href=\"https://openjdk.org/jeps/424?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（预览）</a>\"，在JDK 19中交付；JEP 419，即<a href=\"https://openjdk.org/jeps/419?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（第二轮孵化器）</a>\"，在JDK 18中交付；JEP 412，即<a href=\"https://openjdk.org/jeps/412?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（孵化器）</a>\"，在JDK 17中交付。这个JEP提议结合基于反馈所做出的改进在JDK 20中进行第二次预览。更新包括：统一了<a href=\"https://docs.oracle.com/en/java/javase/14/docs/api/jdk.incubator.foreign/jdk/incubator/foreign/MemorySegment.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MemorySegment</a>\"和<a href=\"https://docs.oracle.com/en/java/javase/14/docs/api/jdk.incubator.foreign/jdk/incubator/foreign/MemoryAddress.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MemoryAddress</a>\"接口，也就是说，内存地址由零长度的内存段组成；<a href=\"https://docs.oracle.com/en/java/javase/14/docs/api/jdk.incubator.foreign/jdk/incubator/foreign/MemoryLayout.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MemoryLayout</a>\"封印接口得到增强，方便与JEP 427（<a href=\"https://openjdk.org/jeps/427?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">switch中的模式匹配（第三次预览）</a>\"）结合使用。</p><p></p><p>JEP Draft 8295817，即<a href=\"https://openjdk.org/jeps/8295817?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">虚拟线程（第二次预览）</a>\"，在过去的一周已经进入到Submitted状态。这个JEP属于<a href=\"https://wiki.openjdk.org/display/loom/Main?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Loom项目</a>\"，提议对JEP 425（在JDK 19中交付的<a href=\"https://openjdk.org/jeps/425?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">虚拟线程（预览）</a>\"）进行第二次预览，争取为这个特性的演进获得更多额外的反馈和经验。需要注意的是，除了一小部分来自JEP 425的API在JDK 19中成为永久API（因此不在第二次预览中提出）之外，本次预览没有其他的变更。</p><p></p><p>类似地，JEP Draft 8296037，即<a href=\"https://openjdk.org/jeps/8296037?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">结构化并发（第二轮孵化器）</a>\"，已经进入到Submitted状态。这个JEP也属于Loom项目，它提议对JEP 428（<a href=\"https://openjdk.org/jeps/428?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">结构化并发（孵化器）</a>\"，在JDK 19中交付）进行二次孵化，并在JDK 20中交付，争取为这个特性的演进获得更多额外的反馈和经验。唯一的变化是更新了<a href=\"https://download.java.net/java/early_access/jdk20/docs/api/jdk.incubator.concurrent/jdk/incubator/concurrent/StructuredTaskScope.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">StructuredTaskScope</a>\"类，用以支持在任务作用域中创建的线程继承作用域值。这简化了跨线程共享不可变数据的过程。</p><p></p><h1>JDK 20</h1><p></p><p></p><p>JDK 20<a href=\"https://jdk.java.net/20/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">早期访问版本</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B21?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Build 21</a>\"也在上周发布了，其中包括对各种问题的<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2020%20and%20%22resolved%20in%20build%22%20%3D%20b21%20order%20by%20component%2C%20subcomponent&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">修复</a>\"。关于这个版本的更多细节可以在<a href=\"https://jdk.java.net/20/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"中找到。</p><p></p><p>Oracle Java平台组首席架构师<a href=\"https://www.linkedin.com/in/markreinhold?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Mark Reinhold</a>\"正式<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-October/007108.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">宣布</a>\"JDK 20的发布计划如下：</p><p></p><p>Rampdown Phase One（从主线分叉）：2022年12月8日；Rampdown Phase Two：2023年1月19日；Initial Release Candidate：2023年2月9日；Final Release Candidate：2023年2月23日；General Availability：2023年3月21日。</p><p></p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/20/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JDK 20</a>\"，开发者可以向<a href=\"https://bugreport.java.com/bugreport/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Java Bug数据库</a>\"报告Bug。</p><p></p><h1>Loom项目</h1><p></p><p></p><p>Loom项目<a href=\"https://jdk.java.net/loom/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">早期访问版本</a>\"的Build 20-loom+20-34已经对Java社区可用，并且是基于JDK 20早期访问版本<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B20?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Build 20</a>\"构建的。</p><p></p><h1>Spring Framework</h1><p></p><p></p><p>在通往<a href=\"https://spring.io/projects/spring-integration?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Spring Integration</a>\" 6.0.0的道路上，<a href=\"https://spring.io/blog/2022/10/25/spring-integration-6-0-0-rc1-available?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">第一个候选版本</a>\"的特性包括：RabbitMQ Streams、Kotlin协程和GraalVM多语言JavaScript调用。这个版本还移除了<a href=\"https://spring.io/projects/spring-data-geode?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Spring Data for Apache Geode</a>\"。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-integration/releases/tag/v6.0.0-RC1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"中找到。</p><p></p><p>面向Eclipse、Visual Studio Code和Theia的Spring Tools 4.16.1已经<a href=\"https://spring.io/blog/2022/10/26/spring-tools-4-16-1-released?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，为Eclipse 2022-12里程碑版本提供了Spring Tools 4的早期访问版本。由于Eclipse 2022-09附带了m2e 2.0的一个主要更新，因此打算从Spring Tools 4.15.3开始升级的开发人员需要遵循这个<a href=\"https://github.com/spring-projects/sts4/wiki/Changelog#important-note-for-upgrading-from-a-previous-installation-on-eclipse?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">迁移指南</a>\"。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/sts4/wiki/Changelog#2022-10-26-4161-release-incl-language-servers-version-1400?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">版本说明</a>\"中找到。</p><p></p><h1>GraalVM</h1><p></p><p></p><p>Oracle Labs<a href=\"https://medium.com/graalvm/graalvm-22-3-is-here-jdk-19-builds-jlink-support-new-monitoring-features-and-more-f6e2b2eeff95?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"了GraalVM 22.3：支持JDK 19和jlink；原生镜像监控和开发者体验方面的更新。正如在JavaOne上宣布的那样，GraalVM CE Java代码将成为OpenJDK的一部分。这是2022年的最后一个特性版本。关于这个版本的更多细节可以在<a href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/vm-22.3.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"和这个YouTube<a href=\"https://youtu.be/BzsdYIOuNWQ?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">视频</a>\"中找到。InfoQ随后将提供更详细的新闻报道。</p><p></p><h1>Open Liberty</h1><p></p><p></p><p>IBM将Open Liberty 22.0.0.11从<a href=\"https://openliberty.io/blog/2022/09/29/22.0.0.11-beta.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Beta</a>\"版<a href=\"https://openliberty.io/blog/2022/10/25/22.0.0.11.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">提升</a>\"为交付版本：支持JDK 19和分布式安全缓存，多个Liberty服务器可以通过使用JCache提供程序来共享缓存。这个版本还解决了由<a href=\"https://rubygems.org/gems/nokogiri/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">nokogiri</a>\" （现已不存在的org.cyberneko.html的一个<a href=\"https://github.com/sparklemotion/nekohtml?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">分支</a>\"）引发的<a href=\"https://nvd.nist.gov/vuln/detail/cve-2022-24839?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">CVE-2022-24839</a>\"漏洞，在解析格式不正确的HTML标记时会抛出<a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/OutOfMemoryError.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">OutOfMemoryError</a>\"异常。</p><p></p><p>Open Liberty 22.0.0.12-beta版本也<a href=\"https://openliberty.io/blog/2022/10/27/22.0.0.12-beta.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"了，提供了对六个新的Jakarta EE 10规范的支持：<a href=\"https://jakarta.ee/specifications/batch/2.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Batch 2.1</a>\"、<a href=\"https://jakarta.ee/specifications/xml-web-services/4.0/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta XML Web Services 4.0</a>\"、<a href=\"https://jakarta.ee/specifications/pages/3.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Server Pages 3.1</a>\"、<a href=\"https://jakarta.ee/specifications/tags/3.0/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Standard Tag Library 3.0</a>\"、<a href=\"https://jakarta.ee/specifications/messaging/3.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Messaging 3.1</a>\"和<a href=\"https://jakarta.ee/specifications/websocket/2.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta WebSocket 2.1</a>\"。在即将发布的MicroProfile 6.0中还支持两个更新的规范：<a href=\"https://github.com/eclipse/microprofile-jwt-auth/blob/master/README.adoc?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JWT Propagation 2.1</a>\"和<a href=\"https://github.com/eclipse/microprofile-metrics/blob/master/README.adoc?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MicroProfile Metrics 5.0</a>\"。</p><p></p><h1>Eclipse Vert.x</h1><p></p><p></p><p>Eclipse Vert.x 3.9.14版本已经<a href=\"https://vertx.io/blog/eclipse-vert-x-3-9-14/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，包含了依赖项升级：<a href=\"https://www.graphql-java.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">GraphQL Java</a>\" 19.2、<a href=\"https://netty.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Netty</a>\" 4.1.84.Final、<a href=\"https://github.com/protocolbuffers/protobuf/blob/main/java/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Protocol Buffers Java</a>\" 3.21.7和<a href=\"https://github.com/FasterXML/jackson-databind#readme?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jackson Databind</a>\"（解决了<a href=\"https://access.redhat.com/security/cve/cve-2022-42003?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">CVE-2022-42003</a>\"漏洞，即Jackson Databind中的拒绝服务漏洞）。3.9版本系列的生命周期计划在2022年底结束，因此建议开发人员升级到Vert.x 4.x版本。关于这个版本的更多细节可以在<a href=\"https://github.com/vert-x3/wiki/wiki/3.9.14-Release-Notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">版本说明</a>\"中找到。</p><p></p><h1>Apache软件基金会</h1><p></p><p></p><p>Apache TomEE 8.0.13已经<a href=\"https://www.mail-archive.com/announce@apache.org/msg07671.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，特性包括：一个关于如何使用属性提供程序的示例；依赖升级——Jakarta Faces 2.3.18、MyFaces 2.3.10、Hibernate Integration 5.6.9.Final、BatchEE 1.0.2、Tomcat 9.0.68和SnakeYAML 1.33。关于这个版本的更多细节可以在<a href=\"https://tomee.apache.org/8.0.13/release-notes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"中找到。</p><p></p><h1>JReleaser</h1><p></p><p></p><p><a href=\"https://jreleaser.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JReleaser</a>\"是一个简化创建项目发布的Java辅助工具，它的1.3.0版本已经<a href=\"https://andresalmiray.com/jreleaser-1-3-0-has-been-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">可用</a>\"，特性包括：一个新的WorkflowListener扩展，可以对工作流事件做出反应；增加安装原生镜像组件的选项；支持将JAR和POM部署到Maven兼容的存储库中。关于这个版本的更多细节可以在<a href=\"https://github.com/jreleaser/jreleaser/releases/tag/v1.3.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">更新日志</a>\"中找到。</p><p></p><h1>Hibernate</h1><p></p><p></p><p>5.11.11.Final和5.10.13.Final版本的<a href=\"https://hibernate.org/search/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Hibernate Search</a>\"已经<a href=\"https://in.relation.to/2022/10/27/hibernate-search-5-11-11-and-5-10-13/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，包括依赖项升级：分别是<a href=\"https://hibernate.org/orm?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Hibernate ORM</a>\" 5.4.33.Final和5.3.28.Final。5.10.13版本还<a href=\"https://github.com/spring-projects/spring-framework/issues/26090?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">修复</a>\"了在Spring Boot 2.4.0+和Spring Framework 5.3+中用<a href=\"https://jakarta.ee/specifications/persistence/3.1/apidocs/jakarta.persistence/jakarta/persistence/entitymanager?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">EntityManager</a>\"接口创建<a href=\"https://docs.jboss.org/hibernate/search/5.11/api/org/hibernate/search/FullTextSession.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">FullTextSession</a>\"时抛出的<a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/ClassCastException.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">ClassCastException</a>\"。</p><p></p><h1>PrimeFaces</h1><p></p><p></p><p>开源UI组件库实现<a href=\"https://www.primefaces.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">PrimeFaces</a>\"已经<a href=\"https://www.primefaces.org/primefaces-7-0-30-8-0-22-10-0-17-11-0-9-and-12-0-1-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"了<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+is%3Aclosed+label%3A7.0.30&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">7.0.30</a>\"、<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+is%3Aclosed+label%3A8.0.22&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">8.0.22</a>\"、<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+is%3Aclosed+label%3A10.0.17&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">10.0.17</a>\"、<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+label%3A11.0.9+is%3Aclosed&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">11.0.9</a>\"和<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+label%3A12.0.1+is%3Aclosed&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">12.0.1</a>\"单点版本。新特性和增强包括：为<a href=\"https://www.javadoc.io/static/org.primefaces/primefaces/12.0.0-RC1/org/primefaces/model/JpaLazyDataModel.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JpaLazyDataModel</a>\"类实现一个IN匹配模式，即filterMatchMode=\"in\"；确保在使用<a href=\"https://www.javadoc.io/static/org.primefaces/primefaces/12.0.0-RC1/org/primefaces/component/selectcheckboxmenu/SelectCheckboxMenu.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">SelectCheckboxMenu</a>\"类时，emptyLabel属性不显示文本。</p><p></p><p>已<a href=\"https://www.primefaces.org/primevue-3-18-0-is-out-with-new-accessibility-features/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"的PrimeVue 3.18.0还提供了这些特性：对所有菜单组件的可访问性增强；<a href=\"https://www.primefaces.org/primevue/fileupload?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">FileUpload</a>\"的模板支持；响应式<a href=\"https://www.primefaces.org/primevue/paginator?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Paginator</a>\"。关于这个版本的更多细节可以在<a href=\"https://github.com/primefaces/primevue/blob/master/CHANGELOG.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">更新日志</a>\"中找到。</p><p></p><h1>JDKMon</h1><p></p><p></p><p><a href=\"https://github.com/HanSolo/JDKMon?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JDKMon</a>\"是一个监控和更新已安装JDK的工具，它的<a href=\"https://github.com/HanSolo/JDKMon/releases/tag/17.0.37?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">17.0.37</a>\"版本已经在上周对Java社区可用。这个工具由Azul首席工程师<a href=\"https://de.linkedin.com/in/gerritgrunwald?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Gerrit Grunwald</a>\"创建，新版本修复了一个检测GraalVM构建的问题。</p><p></p><h1>EclipseCon</h1><p></p><p></p><p><a href=\"https://www.eclipsecon.org/2022?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">EclipseCon 2022</a>\"于上周在德国路德维希堡的<a href=\"https://forum.ludwigsburg.de/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Schlosspark论坛</a>\"上举行，来自Java社区的<a href=\"https://www.eclipsecon.org/2022/speakers?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">演讲嘉宾</a>\"探讨了Java、开源方式、云原生技术以及质量和安全方面的话题。大会也包含了年度<a href=\"https://www.eclipsecon.org/2022/community-day?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">社区日</a>\"。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/10/java-news-roundup-oct24-2022/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">https://www.infoq.com/news/2022/10/java-news-roundup-oct24-2022/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/kzzbQg5zgissaCcJlfey\">Java 近期新闻：JEP 更新，GraalVM 贡献给 OpenJDK，JavaOne 重启</a>\"</p><p><a href=\"https://www.infoq.cn/article/LlrBgvdmYPGNsVDOZuCZ\">用现代 Java 调整经典设计模式</a>\"</p><p><a href=\"https://www.infoq.cn/article/lpOyO0ClfYLGmmakS3is\">Error Prone 通过检测常见错误帮助改善 Java 代码</a>\"</p>",
    "publish_time": "2022-11-10 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "CnosDB 2.0 云原生时序数据库",
    "url": "https://www.infoq.cn/article/IZAXB0CEKzErLPBayFIa",
    "summary": "<p>试用链接：<a href=\"https://docs.cnosdb.com/guide/quick_start.html\">https://docs.cnosdb.com/guide/quick_start.html</a></p>",
    "publish_time": "2022-11-10 11:19:07",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "当年云计算做出的承诺，Serverless要兑现了吗？",
    "url": "https://www.infoq.cn/article/VeWtua3dTWELlL09tGv4",
    "summary": "<p>嘉宾 | 蒋江伟、贾扬清、李飞飞等</p><p>采访 | 赵钰莹、王一鹏</p><p>编辑 | 赵钰莹、张俊宝</p><p></p><p></p><blockquote>上周，2022 云栖大会召开，阿里云智能总裁张建锋表示，以云为核心的新型计算体系正在形成，软件研发范式正在发生新的变革，Serverless 是其中最重要的趋势之一。Serverless 是一个十分值得探讨的话题，伯克利早在 2019 年就预言这会是云计算下一个十年的发展方向，但时至今日，我们看到的都浅尝 FaaS 及小程序的云开发层面，并未深刻体会到 Serverless 对软件研发范式带来的改变。本届云栖大会上，阿里云宣布全面推动核心产品 Serverless 化，并预测未来 80% 的应用都是由业务人员来开发。作为一种新型生产工具，云计算的应用门槛是否已经降到了一个足够低的临界值？是否已经催生了新技术的“奇点”？借此机会，InfoQ 与阿里云多个技术团队进行了深入交流，以了解其背后的实现逻辑、技术路线以及对业务研发带来的变革等，试图看清楚云计算技术的第二增长曲线。&nbsp;&nbsp;</blockquote><p></p><p></p><p>云计算诞生以来，最为人熟知的比喻是数字时代的“水电煤”，但其实我们至今都未曾达到像使用“水电煤”一样使用云计算，我们还在按照“几核几 G 服务器”的模式来购买云资源，我们还停留在云计算的“汇编时代”。</p><p></p><p>那么，我们如何能进入下一个阶段，以按照理想的方式使用云计算，一如编程语言从汇编时代演变为高级语言时代。</p><p></p><p>Serverless 或许可以。Serverless 的特点之一就是按实际用量计费，更加接近“电网”模式，能让云计算从一种资源真正变成一种能力。</p><p></p><p>可能会有开发者对此嗤之以鼻：“别闹了，这个概念都玩好几年了，如果好用早就用了，还用得着等到现在。”</p><p></p><p>确实如此，我们谈 Serverless 好多年了。阿里云最早的 OSS 对象存储就是一个 Serverless 产品，只不过最近几年出现了函数计算这样通用的 Serverless 计算平台，进而能够将 Serverless 体系产品连接起来，构建一个 Serverless 应用。</p><p></p><p>2017 年到 2018 年，感官上 Serverless 的热度达到了高峰，但与绝大部分新兴技术一样，其开始进入落地艰难期。Serverless 不仅仅是一种技术，而是一种全新的架构，只要有一个环节不是 Serverless 的，对开发者而言这种模式就没有太大意义，因为还需要为这一个环节进行重新设计。这一架构需要的是自底向上的全面重塑，是整个研发链路的全面 Serverless 化。</p><p></p><p>时至今日，这一架构正在被阿里云们变为可能。</p><p></p><h2>新一代云计算架构体系雏形已现</h2><p></p><p></p><p>Serverless 的表现形态或许大同小异，但其底层支撑架构却千差万别，不同的架构带来了不同的性能和稳定性等。</p><p></p><p>对阿里云而言，Serverless 真正蜕变要从 CIPU 开始。</p><p></p><p>今年 6 月，阿里云发布了一款云数据中心专用处理器 CIPU（Cloud Infrastructure Processing Unit），取代 CPU 来管理和加速数据中心的计算、存储和网络资源。CIPU 向下云化管理数据中心硬件，并对计算、存储和网络资源进行加速，向上接入飞天云操作系统，将全球 数百万台服务器变成一台超级计算机，为客户提供更高性能、更低价格、更可靠的云计算服务。</p><p></p><p>在这种新型架构里面，存储、计算、网络通过这种新兴的体系架构互相之间进行通信交换，云的能力、效率、成本几方面都得到大幅改善。</p><p></p><p>以前在 CPU 用软件来管理数百万台服务器接入飞天操作系统，所有的算力都需要和飞天云操作系统耦合，给客户的算力和算力迭代都需要和飞天耦合，需要不断地做软件的适配。CIPU 的到来让算力解耦，真正变成了“即插即用的云计算”。</p><p></p><p>CIPU 诞生的目的是为了管理底层的云基础设施，包括相对应的底层的虚拟化的池化管理。2017 年，阿里云发布了第一代神龙架构，并为之专门开发了 MOC 卡，可以理解为 CIPU 最早期的雏形。</p><p></p><p>计算、存储、网络全部接入这一代的硬件架构后，能够实现数据路径全部都是硬件加速，第一次真正完整地颠覆了原来的“软件定义云”。</p><p></p><p>此外，CIPU 带来一个最明显的标志就是虚拟化的开销真正意义上降到了 0，无论是计算虚拟化还是存储、网络的全面加速。“飞天 +CIPU”的组合性能可提升 20% 以上。</p><p></p><p>在此基础上，阿里云基础设施已经广泛基于 CIPU 架构进行建设，并且构建了全栈自研的基础设施，例如自研 CPU 芯片倚天 710、磐久服务器、EIC 高性能网卡、磐久交换机、磐久液冷一体机、磐久液冷集装箱等自研硬件。</p><p></p><p>去年，阿里巴巴发布了首款“为云而生”的芯片倚天 710。目前，倚天 710 云实例已在多家互联网科技公司大规模应用，算力性价比提升超 30%，单位算力功耗降低 60%，这也是中国首款云上大规模应用的自研 CPU。</p><p></p><p>在今年双 11 期间，天猫双 11 的部分系统就平滑迁移至倚天 710 实例，提供稳定的服务。国内一些知名的科学计算、智能手机行业和互联网等领域的企业在迁移至倚天 710 实例后，性价比均得到了显著提升。</p><p></p><p>未来阿里云还将继续扩大自研 CPU 的部署规模，预计未来两年内 20% 新增算力将使用自研 CPU 芯片倚天 710。</p><p></p><p>时至今日，个别大型企业可能还在自建数据中心，在获取同等性能的情况下成本或许是可控的，但当进入 CIPU 和自研 CPU 构建的时代，企业就会发现即便付出再大的代价也无法搭建出性能可与之比拟的数据中心了。</p><p></p><p>以阿里云网络型负载均衡 NLB 为例，其单实例可以达到 1 亿并发连接，500G 吞吐，这是什么概念？一家互联网企业如果能达到这个规模，在中国是可以进入 TOP 10 的，这是阿里云调动了云上海量资源才可以实现的性能，自建的效率是很难与之媲美的，即便性能硬堆上去了，稳定性也会存在问题。</p><p></p><p>基于底层的全面重塑，我们有理由相信软件架构全面 Serverless 化的未来将至。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a5/a51eb3cb89bf87d5ecaa0b600f165110.png\" /></p><p></p><h2>软件架构全面 Serverless 化的未来已至</h2><p></p><p></p><p>最近几年，微服务改造逐渐完成，其带来的各个层面的复杂性已经在众多场合被反复讨论过了。以微服务为核心的互联网分布式架构，实施的复杂度较高，必须有很好的工具、平台的支撑，这是业界的共识。</p><p></p><p>对用户而言，尽可能消除非业务研发占用的时间是非常迫切的，这正是 Serverless 的核心价值。</p><p></p><p>Serverless 具备三个明显的特点，一是全托管服务，这意味着客户使用抽象的服务化接口，而不是直接面对底层资源，也就没有安装、配置、维护或者更新软硬件的负担。全托管服务通常也提供了内置的容错、安全和可观测能力，用户通常不需要再重新构建这些能力。</p><p></p><p>这与我们常常提到的云托管是有很大差异的，如果采用云托管模式，实际上是在基础设施层构建应用，应用构建的抽象层次是比较低的，因此会带来大量工作，用户自己需要整合不同的组件和服务，需要进行大量的决策和实现，交付的速度会比较慢，需要考虑很多的事情，而且在运维方面有大量的重复工作。</p><p></p><p>如果采用 Serverless 的模式构建应用，也就是相当于在上层 API 的方式构建应用，粘合的逻辑和基础设施管理的工作都由云服务商来承担，用户所需要整合和决策的代价比较低，所需要考虑的主要就是如何将业务逻辑和需求与云服务进行适配来构建应用。基于非常高效的云 API 来构建应用的好处在于构建的成本极低，并且能够实现按天、按小时进行灵活交付，大大降低未来运维的负担。</p><p></p><p>二是自适应弹性，服务能够根据负载大小自动弹性伸缩，大大提升了资源使用效率。</p><p></p><p>三是开篇提到的按实际用量计费，只需根据实际的执行时间、流量或调用次数计费，降低了成本。</p><p></p><p>要想让用户用好 Serverless，单纯在应用运行时层面进行 Serverless 化是远远不够的，应用依赖的下游数据库等系统，如果没有良好的弹性，就会成为系统整体的“短板”。</p><p></p><p>全面实现 Serverless 化取决于整个研发链路上有多少云产品提供了这样的形态。阿里云是国内对 Serverless 探索最早的厂商之一，其于 2017 年推出了函数计算产品 FC，2018 年推出了 Serverless 应用引擎 SAE 和 Serverless 容器服务 ASK，2020 年开源了 Serverless Devs … 其中，函数计算日调用次数超过 200 亿次，有效支撑历年双 11 百万 QPS 洪峰，业务年均增速超 300%，整体规模位居国内首位。</p><p></p><p>截至目前，阿里云有超过 20 款核心产品提供了 Serverless 形态，在弹性速度、计费模型上帮助客户业务更好地驾驭底层算力，节约成本。其最新发布的 Serverless 应用中心提供海量的场景化模板，让 Serverless 应用全生命周期管理更简单。通过使用 Serverless 应用中心，用户在部署应用之前无需进行额外的克隆、构建、打包和发布操作，即可快速部署和管理应用，帮助用户快速联动云上的上下游服务，轻松沉淀最佳实践。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d0/d0eccc85c21c2b25ba2e41e1df5be037.png\" /></p><p></p><h3>数据库：Serverless 最难攻坚的堡垒</h3><p></p><p></p><p>云数据库帮助企业和开发者节省了很大一部分运维精力，但在很多场景下，工作负载并不均衡、波峰波谷差异极大，在预算有限的情况下，我们大多时候依赖持续监控和手动对数据库容量调整来满足业务所需，但这种方式耗时耗力，还可能出问题，这就是 Serverless 化大展身手的场景。</p><p></p><p>在本届云栖大会现场，阿里云数据库团队提出了云原生数据库发展的四个方向：云原生化、平台化、一体化以及智能化。Serverless 正是云原生化的体现。</p><p></p><p>云原生化意味着数据业务加速上云，用户对数据库的需求正从资源视角向能力视角演进，而这就是阿里云数据库做出 All In Serverless 决定的原因。</p><p></p><p>但是，数据库是 Serverless 最“不友好”的应用之一，数据库不仅仅是一个“stateful”的应用，而且是一个“state-heavy”的应用，包括云原生基础设施 Kubernetes 对于 stateful 应用的支持，也是等到 StatefulSet 和 operator 之后才有一个比较好的解决方案。而在这之前数据库都是作为 Serverless 对状态做解耦和状态下沉的工具，也是全栈 Serverless 解决方案中最难攻坚的一个堡垒。</p><p></p><p>要知道，数据库在使用过程中需要满足 ACID 原子性、一致性、隔离性、持久性等特性，同时在线事务型数据库，都是 OL 开头，强调了在线，这两个叠加起来，就决定了数据库实现 Serverless 化是非常有挑战的。</p><p></p><p>但是，阿里云做到了。</p><p></p><p>以阿里云的 PolarDB 为例。PolarDB Serverless 的核心就是通过 RDMA/CIPU 等实现软硬件结合，使得跨节点的内存状态实现融合，基于此实现了 PolarDB 的跨节点在线无感迁移和强一致横向扩展，突破了资源池的单机限制，大幅提升资源利用效率，降低成本。</p><p></p><p>目前，阿里云数据库的 PolarDB、AnalyticDB、RDS 等核心产品已与倚天 710、CIPU、飞天操作系统进行深度融合创新，并全面 Serverless 化，对外更好地提供一站式数据管理与服务。</p><p></p><p>在 Serverless 层面，阿里云数据库团队实现了如下三项突破：</p><p></p><p>PolarDB for MySQL 是业内首创支持跨机 Serverless 服务的云数据库，为解决 Serverless 形态下普遍存在的上限规格过低限制，PolarDB 突破了无感秒切和高性能全局一致性两大技术难点，实现了跨机无感弹升和强一致横向线性弹升，使得上限规格突破了 1000 核以上，带来了数量级的 Serverless 能力提升，最高成本下降可达 95%，使得 Serverless 技术具备支撑企业级业务的能力。RDS MySQL 采用计算存储分离架构，5 秒完成计算资源弹升；计费粒度精确到 1 秒，Serverless 最高实现 70% 成本下降；支持实例自动启停，无负载时仅保留存储资源计费，启动平滑最快 10 秒完成；天然支持了 DataAPI 能力，可以无缝融合 FaaS 提供全栈 Serverless 的解决方案。AnalyticDB 基于资源池化和弹性存储能力，结合 MPP 数据库架构、离在线一体化以及 Serverless 创新技术，支持海量数据毫秒 / 秒级实时分析查询，让数据分析更实时、更高效；最高节省 90% 的总拥有成本 TCO；高度兼容 MySQL/PG，无缝升级 Teradata/Oracle。</p><p></p><p>2022 年 10 月，阿里云数据库作为首家云厂商，参与了中国信通院的 Serverless 能力评测。最终凭借过硬的 Serverless 技术实力，参与评测的 PolarDB for MySQL、RDS MySQL 数据库获得事务型数据库 Serverless 能力最高「先进级」评级；AnalyticDB MySQL 和 AnalyticDB PostgreSQL 获评分析型数据库 Serverless 能力「增强级」评级。</p><p></p><h3>大数据 +AI：向着 Serverless 形态不断演进</h3><p></p><p></p><p>大数据相较于数据库，不仅仅是 online 和 offline 的区别。大数据最大的特性是数据非常的半结构化，很多数据需要用户写代码，而不能完全靠关系代数做 Join、Select 等，大数据是非常稀疏的，并不是每行每列都有。这种情况下如果完全用关系代数是非常低效的，这对计算性能等各个方面都提出了挑战，大数据如何处理动态性变得至关重要，这也是大数据与云计算紧密结合的原因之一。</p><p></p><p>此外，从系统角度帮助用户在不同的资源之间寻求平衡，达到最优性价比，需要与云计算的基础设施紧密结合，通过硬件实现加速。至于硬件选型层面，通用型的硬件加速是值得的，但如果是专用型，成本会急剧升高，这也是云计算非常重要的特点，是否能够利用规模性和集群去做一些事情。</p><p></p><p>以 CIPU 为核心的架构在增效降本层面有非常本质的不同，阿里云的基础设施团队已经意识到大数据和 AI 巨大的算力要求，因此 Spark、Flink 等引擎通过与之相结合可以带来更好的投入产出比。</p><p></p><p>在 Serverless 层面，大数据与 AI 业务存在明显的波峰波谷，Serverless 可以实现更好的弹性，也可以在突发的流量高峰下迅速分配资源。本届云栖大会，阿里云 ODPS 升级为一体化大数据平台，支持大规模批量计算、实时分析等服务，提供实时流式计算、机器学习等多种计算能力，可同时调度超 10 万台以上服务器规模进行并行计算。ODPS 也是目前中国唯一自研、应用最为广泛的一体化大数据平台。</p><p></p><p>2017 年，ODPS 将大规模批处理引擎 MaxCompute 以独立产品形式对外提供服务，MaxCompute 天生是 Serverless 化的，用户可以为使用的计算量计费。机器学习平台 PAI 也会朝着 Serverless 的模式演进，无论用户需要多少机器做训练，底层平台都可以将这些资源管好，阿里云并不是第一天开始做 Serverless，只是一直在试图更加精细化地帮助用户进行训练、计算和分析，高效利用算力资源。</p><p></p><p>如今，开源降低了用户的研发门槛，但要想在云上构建一套完全按量付费又具备极致弹性，同时可以对管控面进行集中化管理，屏蔽所有底层运维复杂性，又具备智能诊断能力，这对用户而言是很难的，阿里云的开源大数据平台在过去与底层基础设施团队进行了密切合作，基于神龙裸金属，加之 Kubernetes 等容器化技术、调度技术、多租户的隔离技术，网络隔离技术及相关适配，让用户做到真正的在云上开箱即用，按量按需所用，这也是阿里云大数据团队一直以来都在坚持的。</p><p></p><h2>开发者在新的架构体系下如何自处？</h2><p></p><p></p><p>当一项技术开始进入大规模落地阶段，我们就需要清楚的认识到，其已经从趋势成为了必然。</p><p></p><p>2020 年天猫双 11，阿里云实现了国内首例 Serverless 在核心业务场景下的大规模落地，扛住了全球最大规模的流量洪峰，创造了 Serverless 落地应用的里程碑。</p><p></p><p>今年天猫双 11，阿里云 Serverless 支撑业务场景更多，范围更广，阿里云函数计算与集团内的运维体系全面实现标准化对接，打通研发的最后一公里，首次实现了业务全链路“ FaaS + BaaS ”的 Serverless 体系化研发，覆盖淘特、淘系、阿里妈妈、1688、高德、飞猪等业务场景，支撑场景数量同比增加 2 倍，峰值流量总数同比增加 3 倍，实现了百万 QPS 的突破，人效提升 40%。本届云栖大会上，函数计算还宣布全面降价，最大幅度达 37%，更普惠的价格受到诸多开发者的青睐。</p><p></p><p>南瓜电影借助 Serverless 应用引擎 SAE 7 天内全面 Serverless 化，零门槛拥抱 K8s，轻松应对热映电影的突发流量，相比传统服务器运维模式，开发运维效率提升 70%，成本下降 40%，扩容效率提升 10 倍以上。</p><p></p><p>这样的例子还有很多，此处不一一列举，但都足以说明 Serverless 已经成为软件研发的必然。</p><p></p><p>对开发者而言，可以在 Serverless 时代充分感受云带来的弹性，充分利用云计算软硬件协同带来的优势，摆脱网络工程师、运维工程师、安全工程师等诸多标签，集中精力做最擅长的事情，云计算将物理世界的安全、网络等能力统统软件化，变成了开发者最为擅长的视角，开发者只需进行合理的整体规划就可以得到更大的效率提升，甚至是需求管理都可以在云平台实现。</p><p></p><p>此外，阿里云将内部优秀的研发流程产品化后通过云平台对外提供，开发者可以借此了解阿里巴巴内部的研发流程实践，并从中获得助力。</p><p></p><p>总的来说，在未来，Serverless 架构比服务器在成本上会更有竞争力，当开发者用了 Serverless 架构时，就已经获得了高可靠，弹性扩缩容的能力。此外，Serverless 的计费模式会更加精确，资源利用率也将逐步提升，确保做到真正的按需使用和付费。因此相比预留资源，在价格上会更有竞争力，更多的开发者会因此选择 Serverless 架构。Serverless 同样有望支持更多类型的硬件，包括 ARM 类型的 CPU、GPU 或者 FPGA 等异构硬件，给开发者提供更有性价比的计算类型。</p><p></p><p>这种架构所带来的影响会持续多久，暂时没有答案。这样一种全新的计算架构体系是否会成为众多云计算厂商争相效仿的第二技术增长曲线，至少在阿里云身上，我们看到了诚意和决心。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d9/d91337b852e9b16ed68d9e07f1b72249.png\" /></p><p></p><p>当下，Serverless 确实是最接近云计算最初设想的模式，唯这一点，就足以让开发者们跃跃欲试了。</p><p></p><p>采访嘉宾：</p><p></p><p>蒋江伟 阿里巴巴集团副总裁、阿里云基础产品事业部负责人</p><p></p><p>贾扬清 &nbsp;阿里巴巴集团副总裁、阿里云计算平台事业部负责人</p><p></p><p>李飞飞 阿里巴巴集团副总裁、阿里云数据库产品事业部负责人</p><p></p><p>其技术团队成员对本文亦有贡献。</p><p></p>",
    "publish_time": "2022-11-10 13:17:05",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Meta暴裁1.1万人：3年烧光2000多亿元，小扎承认犯了错，但仍会继续注资元宇宙",
    "url": "https://www.infoq.cn/article/HV3jCMXQZEdCZUNgeevH",
    "summary": "<p></p><blockquote>Meta疯狂裁员，搞元宇宙三年多，亏损300多亿美元，扎克伯格还能坚持多久？</blockquote><p></p><p></p><p>两年前，疫情刚开始之际，包括<a href=\"https://www.infoq.cn/article/lRRMRzou5ShfEiYpSNKp\"> Zoom</a>\"、谷歌、<a href=\"https://www.infoq.cn/article/pDQ7VpkyM6HJRltYB6FH\">亚马逊</a>\"、Facebook 在内的科技巨头们乘着疫情这股“东风”，营收达到了两位数增长。他们获得了丰厚的利润，于是开始招兵买马，迅速扩张。</p><p></p><p>但由于疫情迟迟不肯“退场”，最开始的欣欣向荣也变了模样。</p><p></p><p>从美国科技巨头们 10 月底发布的季度财报可见，疫情初期的短暂繁荣早已一去不复返。在过去的几天和几周里，大多数科技巨头都宣布大幅停止招聘，甚至在极端情况下进行大规模裁员。在这些科技巨头浩浩荡荡的裁员大潮中，Facebook 母公司<a href=\"https://www.infoq.cn/article/4iDmM3PgXmvELorwQ8M3\"> Meta </a>\"正在迈出最引人注目的一步。</p><p></p><h2>Meta 暴裁 1.1 万人，扎克伯格：我的错！</h2><p></p><p></p><p>据《华尔街日报》报道，Meta 正着手裁员 1.1 万人，约占其员工总数的 13%。为此，公司高管要求员工本周取消非紧急旅行。尽管就裁员百分比而言，裁员幅度明显小于<a href=\"https://www.infoq.cn/article/jm7V0mpaHGLmP6zITIfX\"> Twitter 50% 的裁员幅度</a>\"，但从绝对值来看，预计这将是当前期间科技行业中裁员人数最多的一次。</p><p></p><p>公司 CEO 扎克伯格在周三致员工的一封信中表示，实施裁员的原因是 Meta 收入下滑 ，且科技行业整体态势不佳。</p><p></p><p>就在此次裁员前一周，Twitter 新东家、亿万富豪马斯克刚刚进行过一轮大规模精简。新冠疫情期间迅速扩招的其他不少科技公司，最近也先后进行过裁员。</p><p></p><p>扎克伯格指出，他当初做出了积极的招聘决定，认为在新冠隔离结束后，业务仍会保持快速增长。</p><p></p><p>“但很遗憾，事态的发展与我当初的预期有所偏离。不单电子商务回落到疫情前的水平，而且宏观经济低迷、竞争加剧和广告业务缩水导致我们的收入远低于预期。我的判断是错的，我要对此负责。”</p><p></p><p>与其他社交媒体企业一样，Meta 在新冠疫情期间也享受了一波收益红利，毕竟那段时间人们被困在家中、所以使用手机和电脑的时间大为延长。但随着封控结束，人们开始恢复外出，所以社交媒体的收入增幅有所放缓。</p><p></p><p>另一个令投资者们忧心的现象是，<a href=\"https://www.infoq.cn/article/Zp1iOf6zrw5RuoRIcirI\">Meta 每年向“元宇宙”</a>\"项目投入超 100 亿美元。扎克伯格预测，这个沉浸式的数字世界终将取代智能手机，成为人们与技术交互的主要方式。</p><p></p><p>但这样的想法明显太过激进，自今年年初以来，担心 Meta 步子过大的投资者已经让该公司的股价暴跌超过 71%，目前其股价处于 2015 年以来的最低水平。</p><p></p><p>经济放缓和线上广告的严峻前景，也让高度依赖这部分收入的 Meta 身陷困境。今年夏季，该公司公布了历史上首次季度环比收入下降，而接下来的季度又出现了更严重的收入降幅。</p><p></p><p>其中有些问题确实跟 Meta 自身有关，但有些则来自整体经济和技术环境。</p><p></p><p>以下是扎克伯格致员工邮件全文：</p><p></p><p></p><blockquote>今天我要分享我们在 Meta 历史上做出的一些最困难的改变。我决定将我们的团队规模缩小约 13%，并让超过 1.1 万名有才华的员工离职。我们也在采取一些其他措施来帮助 Meta 成为一家更精简、更高效的公司，包括削减可自由支配的开支，以及将招聘冻结期延长至第一季度。我想要对这些决策以及我们如何走到如此地步的事实而负责。我知道这对于每个人来说都很艰难，我尤其想对受到波及的员工表示歉意。我们为什么会走到如此境地？在疫情爆发之初，世界迅速转向线上，电商的激增导致收入大幅增长。许多人预测，即使在疫情结束后，这种状态也将一直延续下去并有愈发迅猛之势。我也持同样看法，因此决定大幅增加我们在此方面的投资。然而不幸的是，这些投资并没有像我预期的那样发挥作用。不但电商恢复到了以往的趋势，而且宏观经济低迷、竞争加剧和广告业务的流失导致我们的收入远低于我的预期。我做出了错误的判断，我需要为此负责。在当下新环境中，我们需要提高资本效率。我们已将更多资源转移到少数高优先级增长领域，例如我们的 AI 搜索引擎、广告和业务平台，以及我们对元宇宙的长期愿景上。我们已经削减了整个业务的成本，包括缩减预算、减少津贴和缩小我们的房地产版图。我们正在重组团队以提高效率。但仅凭这些措施并不能使公司收支平衡，所以我也做出了裁员这一艰难决定。裁员将如何进行？关于如何进行裁员，哪有什么好办法可想。但我们希望将所有相关信息尽快提供给你们，随后尽我们所能支持你们度过这段时期。每个人都将很快收到一封电子邮件，解释此次裁员对你个人意味着什么。在此之后，每个受影响员工都将有机会参加交流，他们的问题将得到回答，同时还可以参加信息分享会议。在美国的员工，一些具体细节如下：离职赔偿金：我们将为每名被解雇的员工支付 16 周的基本工资，并且每工作一年就会额外获得两周的工资，没有上限。个人休假： 对于尚未使用的个人休假时间，我们将支付补偿。RSU（受限股）的归属：所有受影响员工都将获得截至 2022 年 11 月 15 日应当归属的 RSU。医疗保险： 我们将为受影响员工及其家人支付 6 个月的医疗保险费用。重新就业服务： 我们将与一家外部服务提供商一起，提供为期 3 个月的重新就业支持，包括让员工提前获得尚未公开的招聘线索。移民局支持： 我知道，如果你是持工作签证在这里工作，那么情况会尤其艰难。在签证终止之前会有一个通知期和一些签证宽限期，这意味着每个人都有时间制定计划，处理各自的移民状况。我们有专门的移民专家，可以根据你和你家人的需要协助提供指南。在美国以外，对于受影响员工的支持是类似的。我们将很快结合各地的劳动法，启动单独的流程。考虑到对敏感信息的访问量很大，我们决定，取消今天要离开的员工对 Meta 大多数系统的访问权限。但我们会全天保持电子邮件地址处于可用状态，以便每个人都可以告别。虽然我们将对应用家族和 <a href=\"https://www.infoq.cn/article/osyKjMrRykrkOoFpugg7\">Reality Labs</a>\" 的每个团队都进行了缩减，但一些团队将受到更大的影响。由于我们计划明年雇用更少的人，因此招聘将受到不成比例的影响。同时，我们还在更大幅度地重组业务团队。这并不是对这些团队所做的优秀工作的反馈，而是我们面向未来不得不去做的事情。在接下来的几天里，我们将与各部门 Leader 来讨论这波裁员对于团队的影响。即将离开我们的同事才华横溢，热情满满，对公司和社区产生了重要影响。Meta 的成功离不开所有人的付出，我对此深怀感激。我相信，你们会在其他地方继续完成出色的工作。我们还将做出哪些其他改变？我将裁员视为最后手段，因此我们决定，在进行裁员之前先控制其他的成本来源。总体来看，这将给我们的经营方式带来重要的文化转变。例如，随着我们收缩办公地产版图，对于那些大部分时间远程办公的员工来说，我们将把他们过渡至共享办公桌的模式。在接下来几个月里，我们将启动更多类似的成本削减调整。除了少数例外，我们还将把招聘冻结延长至第一季度。我将观察我们的业务绩效、运营效率和其他宏观经济因素，以决定我们能否在那时恢复招聘，以及恢复至多大程度。这样做将让我们有能力在经济持续下行的情况下控制成本结构，使得成本结构比我们近期向投资者介绍的更加高效。目前，我正在对我们的基础设施开支进行全面评估。随着我们建立人工智能基础设施，我们专注于利用我们的能力提高效率。我们的基础设施仍将继续是 Meta 的重要优势，我相信，我们可以在减少开支的情况下实现这一目标。从根本上来说，我们做出所有这些改变基于两方面原因：我们的营收前景低于我们今年初的预期，以及我们希望确保应用家族和 Reality Labs 业务都能高效经营。我们将如何前进？这是一个令人难过的时刻，让人无可奈何。对于那些即将离开的同事，我想要再次感谢你们为这个地方所做的一切。没有你们的努力工作，我们就不会有今天的成就，我对你们的贡献表示感谢。对于那些留下的员工，我知道，这对你们来说也是一段艰难的时期。我们不仅要向与我们紧密合作过的同事道别，而且你们中的许多人也会对未来感到不确定。我想让你们知道，我们做出这些决定，是为了确保我们可以有一个强有力的未来。我相信，作为一家公司，今天我们被严重低估了。数十亿人使用我们的服务连接在一起，我们的社区也在不断扩大。我们的核心业务是有史以来最赚钱的业务之一，未来潜力巨大。此外，我们正处于领先地位，去开发技术，定义社交连接的未来和下一代计算平台。我们正在从事具有历史意义的工作。我相信，只要我们更高效地去工作，我们将可以走出当前的下滑趋势，变得比以往更强大、更有灵活性。关于我们将如何作为一家更精简的组织去推进我们的高优先级事项，未来几周我们将公布更多信息。现在，我想要再说一次，对于那些将要离开的同事，我非常感谢你们为推进我们的使命所做的一切。</blockquote><p></p><p></p><h2>裁员讯号早已显现</h2><p></p><p></p><p>不断扩张的组织规模、通货膨胀和加息以及投资者的焦虑，在 2022 年三季度报告中汇集在一起导致科技巨头们的股价一路下跌，不少公司陷入亏损的困境中。</p><p></p><p>值得一提的是，Meta 是唯一一家在第三季度报告收入和净利润都下降的科技巨头，面对这样的现状，Meta 的管理者面临的选择要么就是冻结招聘和裁员，要么就是冒着股价持续下跌和对市场完全丧失信心的风险维持现状，扎克伯格最终选择了前者。</p><p></p><p>扎克伯格想要裁员之心，在此之前已有迹可循。</p><p></p><p>第一个裁员讯号出现在今年 4 月底，当时他在季度财报电话会议上告诉投资者，更多的人员流失将使 Meta 成为“一家更好的公司”。几天后，该公司实施了广泛的招聘冻结。</p><p></p><p>在此后的两个月内，公司向每位员工表明，如果他们想要在关注绩效考核和员工评估的情况下保住工作，就要“增加工作强度”。</p><p></p><p>据知情人称，在周三宣布裁员之前，重组正在进行中，某些部门被裁减，管理人员被要求尝试在公司寻找其他工作或离开。虽然员工们已经被警告公司可能会<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247578966&amp;idx=1&amp;sn=988d635f89546763152e8399574f4c48&amp;chksm=fbeb0c99cc9c858f579cf5721828e0bba4050302853d16eec50f9acd30f81af6d1e9fe8ccd0d&amp;scene=27#wechat_redirect\">裁员</a>\" 10%~20%，但他们仍然被要求要对工作投入“200%”的精力。</p><p></p><h2>All in 元宇宙后，Meta付出了惨痛代价</h2><p></p><p></p><p>自扎克伯格在 2021 年宣布 Facebook 将更名为 Meta 并全力转向 Metaverse 以来，Meta 的市值已经下跌了 70% 以上。在 10 月份 Meta 发布了 2022 年第三季度财报后的第二天，Meat 股价又下跌了 24%。财报显示，报告期内，公司营收下降 4% 至 277.14 亿美元。</p><p></p><p>这是 Meta 连续第二个季度出现营收同比下滑。2022 年二季度，Meta 史上首次营收下滑。《华尔街日报》称，近十年以来，Meta 从未出现过连续第四个季度净利润下降的情况。</p><p></p><p>尽管如此，扎克伯格还是加倍下注，他认为元宇宙将成为数字经济的重要组成部分。扎克伯格曾在一次电话会议上表示，“显然，元宇宙是我们长期努力的目标”，并且坚信长期投资元宇宙业务“最终将会得到回报”。</p><p></p><p>预计负责 Metaverse 一切事务的部门 Reality Labs 的亏损将在明年继续亏损。今年到目前为止，Reality Labs 已报告亏损 90 亿美元，其中第三季度亏损近 40 亿美元。该部门在 2021 年损失了 100 亿美元。</p><p></p><p>Reality Labs 从 2019 年到 2022 年至今的净亏损，累计 301.3 亿美元 （约人民币 2186 亿元）。</p><p>2019 年：收入 5.01 亿美元，净亏损 45 亿美元2020 年：收入 11.4 亿美元，净亏损 66.2 亿美元2021 年：收入 22.7 亿美元，净亏损 101.9 亿美元2022 年至今，已亏损 90 亿美元</p><p></p><p>扎克伯格承认，开发元宇宙业务的部分原因是，为了在未来拥有一个平台，可以免受苹果等竞争对手影响。但最主要的原因是，元宇宙能够为科技公司在构建支撑计算平台方面，提供更多创新性。</p><p></p><h2>Meta 的衰败，因“打不过”TikTok？</h2><p></p><p></p><p>Meta 和各家合作广告商也显然正在为经济衰退做好准备。苹果的隐私工具无疑令其雪上加霜，导致 Facebook、Instagram 和 Snap 等社交媒体平台越来越难以在未经用户同意的情况下，跟踪用户位置并向其投放广告。</p><p></p><p>分析企业 Forrester 表示，尽管 Meta 面临着数字广告萎缩和宏观经济衰退的影响，但真正给其致命一击的当数 <a href=\"https://www.infoq.cn/article/wS57dYqTG6oNO9m3Z50p\">TikTok 的快速崛起</a>\"。研究分析师 J.P. Gownder 还不客气地认为，值此性命攸关之时，扎克伯格居然还在向那犹如海市蜃楼的所谓“元宇宙”计划投入数十亿美元。</p><p></p><p>Gownder 指出，“他们正在对未来五到十年内都很难落地的东西砸下重注。但他们的当务之急是解决基础业务问题，大规模裁员只能算是权宜之计。”</p><p></p><p>扎克伯格表示，Meta 正在努力削减其业务成本，并强调此举不会对收入提振计划造成太大影响。</p><p></p><p>除了裁员之外，Meta 公司还将把招聘冻结期延长至 2023 年第一季度。此外，公司还将收缩办公空间。扎克伯格认为，既然有那么多员工一直在居家办公，那不如退掉一部分写字楼，让大家共享办公桌即可。</p><p>未来几个月，Meta 还将有更多成本削减措施出炉。</p><p></p><p>经历了周三的裁员之后，Meta 在全球仍有超过 75000 名员工。这一数字仍远高于 2021 年底的 71970 人，以及 2020 年底的不足 5.9 万人。</p><p></p><p>Meta 股东、Altimeter Capital 公司 CEO Brad Gerstner 上月给扎克伯格写了一封公开信，敦促 Meta 应该勒紧腰带过日子。</p><p></p><p>Gerstner 在信中写道，“Meta 已经人员过剩了——想法太多、声音太多、但工作的紧迫性不足。业务快速增长时，这些问题很容易被掩盖掉。而一旦增长放缓，技术格局发生变化，这种专注力和精益运营的缺失将非常致命。”</p><p></p><p>在信中，Gerstner 建议扎克伯克应压缩成本、关注公司业务。他的建议包括裁撤 20% 的员工，让 Meta 回归 2021 年时的人员规模。</p><p></p><p>目前还不清楚 Meta 及其代表的社交媒体经济是否也处于类似的衰退轨道。十年之前，Facebook 成功将其业务从台式电脑转移到了智能手机，并借此赚得盆满钵满。如今，Meta 希望再次引领从移动到虚拟的新一轮通信平台转型，但整个时代和宏观背景却已经大不同于往昔。</p><p></p><p>Gerstner 在信中写道，“Meta 有三大核心挑战需要克服：Meta 不再是领先的开创者；Meta 的市场主场地位正在减弱；消费者不在乎、其他企业不相信、再加上全球经济下滑，共同让扎克伯格描绘的元宇宙之梦变得黯淡无光。”</p><p></p><p>Meta Platforms 公司股价本周三上涨 5 美元（5.2%），收于 101.47 美元。</p><p></p><p>参考链接：</p><p>https://about.fb.com/news/2022/11/mark-zuckerberg-layoff-message-to-employees/</p><p>https://www.ctvnews.ca/business/facebook-parent-company-meta-laying-off-11-000-employees-1.6145229</p><p>https://www.thehindu.com/business/Industry/facebook-owner-meta-lays-off-13-per-cent-of-its-employees-announces-hiring-freeze-for-q1/article66115274.ece</p><p>https://beatricedailysun.com/news/national/facebook-parent-company-meta-laying-off-13-of-employees/article_c7930051-402c-5e8e-99b0-50b3003cbfdd.html</p><p>https://finance.sina.cn/tech/2022-11-10/detail-imqqsmrp5590092.d.html?fromtech=1</p><p>https://www.washingtonpost.com/technology/2022/11/09/facebook-layoffs/</p>",
    "publish_time": "2022-11-10 14:50:57",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "在华15个“零碳工厂”，施耐德电气如何用技术实现“绿色”目标",
    "url": "https://www.infoq.cn/article/wK91ohatBuULkxsliMaa",
    "summary": "<p>去年，我国提出“3060”双碳目标，“1+N”政策体系逐步落地，在全国，包括北京、上海、广东、深圳等在内已经有31个省市陆续制定了双碳目标。绿色成了工业发展的“基本色”，那么，如何在保持业务发展、产能稳定的同时，减少碳排放？这是对很多制造企业提出的“灵魂拷问”。</p><p></p><p>而谈及“绿色”、“零碳”，不得不提的就是<a href=\"https://www.infoq.cn/article/MDuweEQy7Qr1FNHFXzfN\">施耐德电气</a>\"。</p><p></p><p>作为可持续发展的践行者，施耐德电气将可持续发展融入主营业务的方方面面。施耐德电气长期推进自身的可持续发展转型，将大量绿色的创新产品和数字化技术应用于自身工厂，并取得了不少成果。最直观的是，施耐德电气在全球打造了64家“零碳工厂”，在中国23家工厂中，就有15家已经实现“零碳”。</p><p></p><p>坐落于北京亦庄的施耐德（北京）中低压电器有限公司（以下简称“北京工厂”），就是这15个“零碳工厂”之一，除此之外，它还是工信部认证的国家级“绿色工厂”，以及施耐德电气全球“智慧工厂”项目中的样板工厂。去年，北京工厂还经过了中国船级社质量认证公司的碳中和认证并获颁“碳中和”证书，成为全国首家“碳中和”工厂，是施耐德电气“绿色”发展之路上的又一里程碑。</p><p></p><p>在日前的施耐德电气“创新开放日”之际，InfoQ等媒体一起探访了北京亦庄工厂，看这座“零碳工厂”如何在持续增长的同时，实现节能减排的目标。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/0c/72/0ccbae7e0ac15b9045aee10e2c272772.jpg\" /></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/c4/38/c401be610207e53445ea6ae0decbf238.jpg\" /></p><p></p><p></p><h1>提升能源效率，既靠技术也靠绩效</h1><p></p><p></p><p>根据国际能源署（IEA）发布的《全球能源评估:2021年二氧化碳排放》报告显示，2021年，全球温室气体排放量达到了408亿吨二氧化碳当量，能源相关的二氧化碳排放量达到了363亿吨，占比超过88%。</p><p></p><p>这意味着，能源将是企业实现<a href=\"https://www.infoq.cn/article/a9ChVY8DGJRbXqTHqjah\">绿色生产</a>\"的关键突破口。</p><p></p><p>在北京工厂，施耐德电气主要从三方面着手：第一，部署清洁能源，增加可再生能源的使用；第二，搭建<a href=\"https://www.infoq.cn/news/APV0tYBQq8hC2xc5fWFm\">数字化</a>\"能源监控系统，提升能源使用效率，避免浪费；第三，通过智能调度，优化产线的能源管理，实现能源价值最大化。</p><p></p><p>比如，从源头上，北京工厂部署了施耐德电气在中国最大的光伏项目基地,，增加了清洁能源的使用比重——具体占全厂能源使用的30%，据统计，这样下来每年可以减少超过2000吨的碳排放。但是，碳排放存在于生产的全过程中，更繁重的减排任务主要是对另外70%的传统能源的效率优化上。</p><p></p><p>在施耐德电气看来，数字化技术是能效优化的基础，通过广泛采集生产线上的水、电、气等与能源相关的数据，借助<a href=\"https://xie.infoq.cn/article/83e82b122c7484bb5603d40c4\">大数据</a>\"的监测和分析手段，可以实现对各项能耗指标的可视化管理，根据能耗高峰和低谷进行调优，避免资源浪费。</p><p></p><p>以空调冷机为例，基于冷库预测模型和冷机测试模型，可以预测未来24小时的天气数据、人流数据、室内温度数据等等，根据这些数据，工厂就可以对冷机的开关机策略进行优化，决定在什么时间段开启和关闭，避免在非必要的情况下长时间启动，造成资源浪费。</p><p></p><p>据了解，北京工厂内已经安装了数以万计的传感器，基于全套数字化监控系统，可以对生产全过程产生的各项能耗指标进行持续改善，把各个环节的碳排放降到最低。</p><p></p><p>除此之外，在数据基础上，施耐德电气北京亦庄工厂还通过与第三方服务的打通，实现<a href=\"https://xie.infoq.cn/article/d165605b0a6f5b9b1c3fb331d\">智能调度</a>\"，降低对传统能源的依赖。比如，根据市电实时电价等变量，优化能源使用结构，在用电高峰使用新能源，在用电低谷再切换成传统用电，这一方面节省了用电成本，同时也降低了碳排放。</p><p></p><p>不过，数字化技术固然可以在这一系列节能减排举措中帮助企业解决大量复杂问题，但措施能否顺利落地，关键还在于“人”——即人在其中的决心和驱动力。为此，施耐德电气还为工厂中的不同部门和角色设定了能源绩效KPI，让节能减排这件事与每个人变得息息相关。</p><p></p><p>值得强调的是，这里的能源绩效的设定办法，同样是基于现场能源、能耗数据的积累和测算，而不是拍脑门的“一刀切”，根据不同车间、不同产线和不同班组的具体情况，会有差异化的管理指标。</p><p></p><h1>生产效率优化，反向减少能源消耗</h1><p></p><p></p><p>施耐德电气非常看重软件在绿色生产过程中发挥的价值。在其看来，碳管理是一个系统性工程，必须建立全生命周期的碳管理，其中，软件技术相当于一个“中枢”，可以实时收集、分析、呈现“碳足迹”，在发掘减碳机会的同时，提升生产的效率和能效，达到“控碳”的目的。</p><p></p><p>拿北京工厂来说，这个国家级“绿色工厂”的底层，基于的是施耐德电气在2017年全新升级的EcoStruxure架构与平台，工厂的生产、运营流程和能效等方面的数据都会被整合到这一平台上统一管理。</p><p></p><p>比如对于光伏这样的新能源来说，虽然清洁，但是容易受天气等因素的影响，存在一定的波动性。所以，想要加大新能源使用，前提必须是稳定用电、保障生产，这需要更精细化的管理。拿前文介绍的智能调度场景为例，其背后应用的是施耐德电气的EcoStruxure微网能源顾问平台。</p><p></p><p>该平台基于AI技术，通过运行模型预测控制算法来定义微电网的优化策略。具体来说，算法结合了电价信号、历史数据、天气数据和运行时间表等信息，可以预测工厂微电网边界内的能源供需变化，据此协调光伏发电量与储能系统运作，从而消除电力峰谷差，实时优化能源调度。正是借助这些软件的赋能，施耐德电气才得以从设计、建造到运维，使得全生命周期减碳成为可能。</p><p></p><p>而相比实现能源消耗的全流程可视化管理这种直接了当的手段，工厂的节能减排还有另一个思路，即通过提升工厂的生产效率，反向减少能源消耗。</p><p></p><p>以宝钢为例，借助借助施耐德电气的<a href=\"https://www.infoq.cn/article/Aub92hlkdiu7sBaYryEt\">EcoStruxure</a>\"平台，宝钢对工厂进行了升级改造，最终实现了30%的产量提升。比如，在仓库板坯搬运的场景，通过部署无人起重系统，板坯库倒垛率由原来的30%提升至现在的70%～80%左右，平均日产量达到了10,500吨。</p><p></p><p>这一方面减少了人工成本产生的碳足迹，另一方面，在效率提升之后，仓库的光、电等能源也会得到节约。换句话说，工厂的绿色发展，并不一定要牺牲生产本身，在确保生产有序进行的同时，还可以通过正向的效率提升，反过来推动低碳目标的实现。</p><p></p><h1>自动化是实现全生命周期碳管理的前提</h1><p></p><p></p><p>施耐德电气副总裁、数字化服务业务中国区负责人张磊表示，随着相关政策的陆续落地，碳管理的工作越来越细化到每个行业和每个企业，呈现出差异化的趋势。目前，施耐德电气主要服务于包括工业、楼宇、数据中心、基础设施、家居等市场。</p><p></p><p>以建筑行业为例，通常建筑行业最大的能耗设备就是空调，这意味着，空调的运行数据是楼宇需要重点管理的对象。而工业生产线可能要更复杂，大量的生产装备、降温设备、冷机设备等等，需要更体系化、精细化的能源规划。从企业内部来说，这意味着除了生产过程，还要在研发、库存、运输、回收等各个环节，也融入低碳思想，并部署相关技术来衡量、执行和管理减碳过程；从外部来说，这还涉及供应链和生态伙伴的管理和配合。</p><p></p><p>但是，由于自动化水平的差异，IT与OT发展割裂，目前很多企业没办法在生产的过程中采集到能耗相关的数据，或者不同条线采集到的数据不一致且无法打通，导致无法合理地指导能源管理的优化。所以，在施耐德电气看来，自动化和数字化是对碳足迹进行充分追踪和管理的前提。</p><p></p><p>张磊表示，企业要让软件的价值最大化，其关键是以IT与OT的融合，为软件发挥作用搭建基石。一直以来，施耐德电气都致力于以IT与OT深度融合，结合从规划到落地的咨询服务，助力产业全程减碳。为实现这一目标，施耐德电气中国软件研发中心自去年成立以来，已经对其物联网平台实现了更新升级，其中提供了18项算法服务，实现了99.9%的云服务率，并汇聚了18家技术合作伙伴。</p><p></p><p>而技术的应用，也需要符合企业的长期双碳规划方可发挥效用。“在帮助企业实现<a href=\"https://www.infoq.cn/article/vAYa8LWjQgHtestxjtWO\">双碳</a>\"目标的过程中，施耐德电气一方面会帮助企业用好技术，另一方面也会先通过咨询形式，为企业诊断在能源管理、运营管理中存在的问题，然后再针对问题，确定具体的解决方式——比如只是需要简单改造、上线一些应用软件，还是需要改变整个组织形式——我们认为，这个过程是需要‘先医后药’的。”张磊告诉记者。</p><p></p><p>据了解，2021年施耐德电气推出了五大碳中和服务成果，为企业提供数字化治碳从规划到落地的完整服务。并且，在工业领域，还通过整合智能工厂规划咨询、智能工厂相关的软件系统、底层元器件和设备等能力，形成了绿色<a href=\"https://www.infoq.cn/article/UlxmUYElHHjTsU55rFUP\">智能制造</a>\"解决方案推动工业企业全生命周期效率的提升。</p><p></p><p>“我们发现，对于国内很多制造企业来说，OT是更加迫切的需求。所以，眼下我们最重要的任务就是先帮助他们实现自动化控制，先把数据的真实性问题解决掉，解决好基本管理的需求，再进一步推动后续的数字化转型。”针对转型的现实路径，张磊总结到。在这个过程中，施耐德电气自身既是实践者也是赋能者，作为能源管理和自动化两个领域的“斜杠”专家，其绿色理念也将经由技术和服务输出，推向其它行业。</p><p><img src=\"https://static001.geekbang.org/infoq/3e/3eed209ac0c266e322236335799451ba.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b1/b14f23458ff9974610ea762d40a94e5e.jpeg\" /></p><p></p>",
    "publish_time": "2022-11-10 15:00:15",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]