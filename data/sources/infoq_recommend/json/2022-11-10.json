[
  {
    "title": "Java近期新闻：OpenJDK更新、JDK 20发布计划、GraalVM 22.3、JReleaser 1.3.0",
    "url": "https://www.infoq.cn/article/zjeqoqwH8q8BrAqB7fWJ",
    "summary": "<p></p><h1>OpenJDK</h1><p></p><p></p><p>JEP 434，即<a href=\"https://openjdk.org/jeps/434?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（第二次预览）</a>\"，在过去的一周从Draft 8293649<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-October/007110.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">进入</a>\"到Candidate状态。这个JEP在<a href=\"https://openjdk.java.net/projects/panama/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Panama项目</a>\"中从前到后的演化路径：JEP 424，即<a href=\"https://openjdk.org/jeps/424?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（预览）</a>\"，在JDK 19中交付；JEP 419，即<a href=\"https://openjdk.org/jeps/419?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（第二轮孵化器）</a>\"，在JDK 18中交付；JEP 412，即<a href=\"https://openjdk.org/jeps/412?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">外部函数和内存API（孵化器）</a>\"，在JDK 17中交付。这个JEP提议结合基于反馈所做出的改进在JDK 20中进行第二次预览。更新包括：统一了<a href=\"https://docs.oracle.com/en/java/javase/14/docs/api/jdk.incubator.foreign/jdk/incubator/foreign/MemorySegment.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MemorySegment</a>\"和<a href=\"https://docs.oracle.com/en/java/javase/14/docs/api/jdk.incubator.foreign/jdk/incubator/foreign/MemoryAddress.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MemoryAddress</a>\"接口，也就是说，内存地址由零长度的内存段组成；<a href=\"https://docs.oracle.com/en/java/javase/14/docs/api/jdk.incubator.foreign/jdk/incubator/foreign/MemoryLayout.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MemoryLayout</a>\"封印接口得到增强，方便与JEP 427（<a href=\"https://openjdk.org/jeps/427?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">switch中的模式匹配（第三次预览）</a>\"）结合使用。</p><p></p><p>JEP Draft 8295817，即<a href=\"https://openjdk.org/jeps/8295817?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">虚拟线程（第二次预览）</a>\"，在过去的一周已经进入到Submitted状态。这个JEP属于<a href=\"https://wiki.openjdk.org/display/loom/Main?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Loom项目</a>\"，提议对JEP 425（在JDK 19中交付的<a href=\"https://openjdk.org/jeps/425?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">虚拟线程（预览）</a>\"）进行第二次预览，争取为这个特性的演进获得更多额外的反馈和经验。需要注意的是，除了一小部分来自JEP 425的API在JDK 19中成为永久API（因此不在第二次预览中提出）之外，本次预览没有其他的变更。</p><p></p><p>类似地，JEP Draft 8296037，即<a href=\"https://openjdk.org/jeps/8296037?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">结构化并发（第二轮孵化器）</a>\"，已经进入到Submitted状态。这个JEP也属于Loom项目，它提议对JEP 428（<a href=\"https://openjdk.org/jeps/428?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">结构化并发（孵化器）</a>\"，在JDK 19中交付）进行二次孵化，并在JDK 20中交付，争取为这个特性的演进获得更多额外的反馈和经验。唯一的变化是更新了<a href=\"https://download.java.net/java/early_access/jdk20/docs/api/jdk.incubator.concurrent/jdk/incubator/concurrent/StructuredTaskScope.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">StructuredTaskScope</a>\"类，用以支持在任务作用域中创建的线程继承作用域值。这简化了跨线程共享不可变数据的过程。</p><p></p><h1>JDK 20</h1><p></p><p></p><p>JDK 20<a href=\"https://jdk.java.net/20/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">早期访问版本</a>\"的<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B21?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Build 21</a>\"也在上周发布了，其中包括对各种问题的<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2020%20and%20%22resolved%20in%20build%22%20%3D%20b21%20order%20by%20component%2C%20subcomponent&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">修复</a>\"。关于这个版本的更多细节可以在<a href=\"https://jdk.java.net/20/release-notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"中找到。</p><p></p><p>Oracle Java平台组首席架构师<a href=\"https://www.linkedin.com/in/markreinhold?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Mark Reinhold</a>\"正式<a href=\"https://mail.openjdk.org/pipermail/jdk-dev/2022-October/007108.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">宣布</a>\"JDK 20的发布计划如下：</p><p></p><p>Rampdown Phase One（从主线分叉）：2022年12月8日；Rampdown Phase Two：2023年1月19日；Initial Release Candidate：2023年2月9日；Final Release Candidate：2023年2月23日；General Availability：2023年3月21日。</p><p></p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/20/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JDK 20</a>\"，开发者可以向<a href=\"https://bugreport.java.com/bugreport/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Java Bug数据库</a>\"报告Bug。</p><p></p><h1>Loom项目</h1><p></p><p></p><p>Loom项目<a href=\"https://jdk.java.net/loom/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">早期访问版本</a>\"的Build 20-loom+20-34已经对Java社区可用，并且是基于JDK 20早期访问版本<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B20?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Build 20</a>\"构建的。</p><p></p><h1>Spring Framework</h1><p></p><p></p><p>在通往<a href=\"https://spring.io/projects/spring-integration?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Spring Integration</a>\" 6.0.0的道路上，<a href=\"https://spring.io/blog/2022/10/25/spring-integration-6-0-0-rc1-available?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">第一个候选版本</a>\"的特性包括：RabbitMQ Streams、Kotlin协程和GraalVM多语言JavaScript调用。这个版本还移除了<a href=\"https://spring.io/projects/spring-data-geode?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Spring Data for Apache Geode</a>\"。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/spring-integration/releases/tag/v6.0.0-RC1?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"中找到。</p><p></p><p>面向Eclipse、Visual Studio Code和Theia的Spring Tools 4.16.1已经<a href=\"https://spring.io/blog/2022/10/26/spring-tools-4-16-1-released?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，为Eclipse 2022-12里程碑版本提供了Spring Tools 4的早期访问版本。由于Eclipse 2022-09附带了m2e 2.0的一个主要更新，因此打算从Spring Tools 4.15.3开始升级的开发人员需要遵循这个<a href=\"https://github.com/spring-projects/sts4/wiki/Changelog#important-note-for-upgrading-from-a-previous-installation-on-eclipse?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">迁移指南</a>\"。关于这个版本的更多细节可以在<a href=\"https://github.com/spring-projects/sts4/wiki/Changelog#2022-10-26-4161-release-incl-language-servers-version-1400?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">版本说明</a>\"中找到。</p><p></p><h1>GraalVM</h1><p></p><p></p><p>Oracle Labs<a href=\"https://medium.com/graalvm/graalvm-22-3-is-here-jdk-19-builds-jlink-support-new-monitoring-features-and-more-f6e2b2eeff95?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"了GraalVM 22.3：支持JDK 19和jlink；原生镜像监控和开发者体验方面的更新。正如在JavaOne上宣布的那样，GraalVM CE Java代码将成为OpenJDK的一部分。这是2022年的最后一个特性版本。关于这个版本的更多细节可以在<a href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/vm-22.3.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"和这个YouTube<a href=\"https://youtu.be/BzsdYIOuNWQ?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">视频</a>\"中找到。InfoQ随后将提供更详细的新闻报道。</p><p></p><h1>Open Liberty</h1><p></p><p></p><p>IBM将Open Liberty 22.0.0.11从<a href=\"https://openliberty.io/blog/2022/09/29/22.0.0.11-beta.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Beta</a>\"版<a href=\"https://openliberty.io/blog/2022/10/25/22.0.0.11.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">提升</a>\"为交付版本：支持JDK 19和分布式安全缓存，多个Liberty服务器可以通过使用JCache提供程序来共享缓存。这个版本还解决了由<a href=\"https://rubygems.org/gems/nokogiri/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">nokogiri</a>\" （现已不存在的org.cyberneko.html的一个<a href=\"https://github.com/sparklemotion/nekohtml?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">分支</a>\"）引发的<a href=\"https://nvd.nist.gov/vuln/detail/cve-2022-24839?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">CVE-2022-24839</a>\"漏洞，在解析格式不正确的HTML标记时会抛出<a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/OutOfMemoryError.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">OutOfMemoryError</a>\"异常。</p><p></p><p>Open Liberty 22.0.0.12-beta版本也<a href=\"https://openliberty.io/blog/2022/10/27/22.0.0.12-beta.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"了，提供了对六个新的Jakarta EE 10规范的支持：<a href=\"https://jakarta.ee/specifications/batch/2.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Batch 2.1</a>\"、<a href=\"https://jakarta.ee/specifications/xml-web-services/4.0/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta XML Web Services 4.0</a>\"、<a href=\"https://jakarta.ee/specifications/pages/3.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Server Pages 3.1</a>\"、<a href=\"https://jakarta.ee/specifications/tags/3.0/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Standard Tag Library 3.0</a>\"、<a href=\"https://jakarta.ee/specifications/messaging/3.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta Messaging 3.1</a>\"和<a href=\"https://jakarta.ee/specifications/websocket/2.1/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jakarta WebSocket 2.1</a>\"。在即将发布的MicroProfile 6.0中还支持两个更新的规范：<a href=\"https://github.com/eclipse/microprofile-jwt-auth/blob/master/README.adoc?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JWT Propagation 2.1</a>\"和<a href=\"https://github.com/eclipse/microprofile-metrics/blob/master/README.adoc?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">MicroProfile Metrics 5.0</a>\"。</p><p></p><h1>Eclipse Vert.x</h1><p></p><p></p><p>Eclipse Vert.x 3.9.14版本已经<a href=\"https://vertx.io/blog/eclipse-vert-x-3-9-14/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，包含了依赖项升级：<a href=\"https://www.graphql-java.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">GraphQL Java</a>\" 19.2、<a href=\"https://netty.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Netty</a>\" 4.1.84.Final、<a href=\"https://github.com/protocolbuffers/protobuf/blob/main/java/README.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Protocol Buffers Java</a>\" 3.21.7和<a href=\"https://github.com/FasterXML/jackson-databind#readme?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Jackson Databind</a>\"（解决了<a href=\"https://access.redhat.com/security/cve/cve-2022-42003?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">CVE-2022-42003</a>\"漏洞，即Jackson Databind中的拒绝服务漏洞）。3.9版本系列的生命周期计划在2022年底结束，因此建议开发人员升级到Vert.x 4.x版本。关于这个版本的更多细节可以在<a href=\"https://github.com/vert-x3/wiki/wiki/3.9.14-Release-Notes?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">版本说明</a>\"中找到。</p><p></p><h1>Apache软件基金会</h1><p></p><p></p><p>Apache TomEE 8.0.13已经<a href=\"https://www.mail-archive.com/announce@apache.org/msg07671.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，特性包括：一个关于如何使用属性提供程序的示例；依赖升级——Jakarta Faces 2.3.18、MyFaces 2.3.10、Hibernate Integration 5.6.9.Final、BatchEE 1.0.2、Tomcat 9.0.68和SnakeYAML 1.33。关于这个版本的更多细节可以在<a href=\"https://tomee.apache.org/8.0.13/release-notes.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布说明</a>\"中找到。</p><p></p><h1>JReleaser</h1><p></p><p></p><p><a href=\"https://jreleaser.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JReleaser</a>\"是一个简化创建项目发布的Java辅助工具，它的1.3.0版本已经<a href=\"https://andresalmiray.com/jreleaser-1-3-0-has-been-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">可用</a>\"，特性包括：一个新的WorkflowListener扩展，可以对工作流事件做出反应；增加安装原生镜像组件的选项；支持将JAR和POM部署到Maven兼容的存储库中。关于这个版本的更多细节可以在<a href=\"https://github.com/jreleaser/jreleaser/releases/tag/v1.3.0?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">更新日志</a>\"中找到。</p><p></p><h1>Hibernate</h1><p></p><p></p><p>5.11.11.Final和5.10.13.Final版本的<a href=\"https://hibernate.org/search/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Hibernate Search</a>\"已经<a href=\"https://in.relation.to/2022/10/27/hibernate-search-5-11-11-and-5-10-13/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"，包括依赖项升级：分别是<a href=\"https://hibernate.org/orm?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Hibernate ORM</a>\" 5.4.33.Final和5.3.28.Final。5.10.13版本还<a href=\"https://github.com/spring-projects/spring-framework/issues/26090?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">修复</a>\"了在Spring Boot 2.4.0+和Spring Framework 5.3+中用<a href=\"https://jakarta.ee/specifications/persistence/3.1/apidocs/jakarta.persistence/jakarta/persistence/entitymanager?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">EntityManager</a>\"接口创建<a href=\"https://docs.jboss.org/hibernate/search/5.11/api/org/hibernate/search/FullTextSession.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">FullTextSession</a>\"时抛出的<a href=\"https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/ClassCastException.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">ClassCastException</a>\"。</p><p></p><h1>PrimeFaces</h1><p></p><p></p><p>开源UI组件库实现<a href=\"https://www.primefaces.org/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">PrimeFaces</a>\"已经<a href=\"https://www.primefaces.org/primefaces-7-0-30-8-0-22-10-0-17-11-0-9-and-12-0-1-released/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"了<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+is%3Aclosed+label%3A7.0.30&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">7.0.30</a>\"、<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+is%3Aclosed+label%3A8.0.22&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">8.0.22</a>\"、<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+is%3Aclosed+label%3A10.0.17&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">10.0.17</a>\"、<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+label%3A11.0.9+is%3Aclosed&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">11.0.9</a>\"和<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aissue+label%3A12.0.1+is%3Aclosed&amp;accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">12.0.1</a>\"单点版本。新特性和增强包括：为<a href=\"https://www.javadoc.io/static/org.primefaces/primefaces/12.0.0-RC1/org/primefaces/model/JpaLazyDataModel.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JpaLazyDataModel</a>\"类实现一个IN匹配模式，即filterMatchMode=\"in\"；确保在使用<a href=\"https://www.javadoc.io/static/org.primefaces/primefaces/12.0.0-RC1/org/primefaces/component/selectcheckboxmenu/SelectCheckboxMenu.html?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">SelectCheckboxMenu</a>\"类时，emptyLabel属性不显示文本。</p><p></p><p>已<a href=\"https://www.primefaces.org/primevue-3-18-0-is-out-with-new-accessibility-features/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">发布</a>\"的PrimeVue 3.18.0还提供了这些特性：对所有菜单组件的可访问性增强；<a href=\"https://www.primefaces.org/primevue/fileupload?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">FileUpload</a>\"的模板支持；响应式<a href=\"https://www.primefaces.org/primevue/paginator?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Paginator</a>\"。关于这个版本的更多细节可以在<a href=\"https://github.com/primefaces/primevue/blob/master/CHANGELOG.md?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">更新日志</a>\"中找到。</p><p></p><h1>JDKMon</h1><p></p><p></p><p><a href=\"https://github.com/HanSolo/JDKMon?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">JDKMon</a>\"是一个监控和更新已安装JDK的工具，它的<a href=\"https://github.com/HanSolo/JDKMon/releases/tag/17.0.37?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">17.0.37</a>\"版本已经在上周对Java社区可用。这个工具由Azul首席工程师<a href=\"https://de.linkedin.com/in/gerritgrunwald?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Gerrit Grunwald</a>\"创建，新版本修复了一个检测GraalVM构建的问题。</p><p></p><h1>EclipseCon</h1><p></p><p></p><p><a href=\"https://www.eclipsecon.org/2022?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">EclipseCon 2022</a>\"于上周在德国路德维希堡的<a href=\"https://forum.ludwigsburg.de/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">Schlosspark论坛</a>\"上举行，来自Java社区的<a href=\"https://www.eclipsecon.org/2022/speakers?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">演讲嘉宾</a>\"探讨了Java、开源方式、云原生技术以及质量和安全方面的话题。大会也包含了年度<a href=\"https://www.eclipsecon.org/2022/community-day?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">社区日</a>\"。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/10/java-news-roundup-oct24-2022/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc5NTcwNzQsImZpbGVHVUlEIjoiSm5mVnpmNG5ZdThBcDFsdyIsImlhdCI6MTY2Nzk1Njc3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo4NTA5NTIwOX0.9fQ4yI44wd5QQLZv8_85Xhtv4-M8HKKZQzqwaeEbaM4\">https://www.infoq.com/news/2022/10/java-news-roundup-oct24-2022/</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/kzzbQg5zgissaCcJlfey\">Java 近期新闻：JEP 更新，GraalVM 贡献给 OpenJDK，JavaOne 重启</a>\"</p><p><a href=\"https://www.infoq.cn/article/LlrBgvdmYPGNsVDOZuCZ\">用现代 Java 调整经典设计模式</a>\"</p><p><a href=\"https://www.infoq.cn/article/lpOyO0ClfYLGmmakS3is\">Error Prone 通过检测常见错误帮助改善 Java 代码</a>\"</p>",
    "publish_time": "2022-11-10 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "CnosDB 2.0 云原生时序数据库",
    "url": "https://www.infoq.cn/article/IZAXB0CEKzErLPBayFIa",
    "summary": "<p>试用链接：<a href=\"https://docs.cnosdb.com/guide/quick_start.html\">https://docs.cnosdb.com/guide/quick_start.html</a></p>",
    "publish_time": "2022-11-10 11:19:07",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "当年云计算做出的承诺，Serverless要兑现了吗？",
    "url": "https://www.infoq.cn/article/VeWtua3dTWELlL09tGv4",
    "summary": "<p>嘉宾 | 蒋江伟、贾扬清、李飞飞等</p><p>采访 | 赵钰莹、王一鹏</p><p>编辑 | 赵钰莹、张俊宝</p><p></p><p></p><blockquote>上周，2022 云栖大会召开，阿里云智能总裁张建锋表示，以云为核心的新型计算体系正在形成，软件研发范式正在发生新的变革，Serverless 是其中最重要的趋势之一。Serverless 是一个十分值得探讨的话题，伯克利早在 2019 年就预言这会是云计算下一个十年的发展方向，但时至今日，我们看到的都浅尝 FaaS 及小程序的云开发层面，并未深刻体会到 Serverless 对软件研发范式带来的改变。本届云栖大会上，阿里云宣布全面推动核心产品 Serverless 化，并预测未来 80% 的应用都是由业务人员来开发。作为一种新型生产工具，云计算的应用门槛是否已经降到了一个足够低的临界值？是否已经催生了新技术的“奇点”？借此机会，InfoQ 与阿里云多个技术团队进行了深入交流，以了解其背后的实现逻辑、技术路线以及对业务研发带来的变革等，试图看清楚云计算技术的第二增长曲线。&nbsp;&nbsp;</blockquote><p></p><p></p><p>云计算诞生以来，最为人熟知的比喻是数字时代的“水电煤”，但其实我们至今都未曾达到像使用“水电煤”一样使用云计算，我们还在按照“几核几 G 服务器”的模式来购买云资源，我们还停留在云计算的“汇编时代”。</p><p></p><p>那么，我们如何能进入下一个阶段，以按照理想的方式使用云计算，一如编程语言从汇编时代演变为高级语言时代。</p><p></p><p>Serverless 或许可以。Serverless 的特点之一就是按实际用量计费，更加接近“电网”模式，能让云计算从一种资源真正变成一种能力。</p><p></p><p>可能会有开发者对此嗤之以鼻：“别闹了，这个概念都玩好几年了，如果好用早就用了，还用得着等到现在。”</p><p></p><p>确实如此，我们谈 Serverless 好多年了。阿里云最早的 OSS 对象存储就是一个 Serverless 产品，只不过最近几年出现了函数计算这样通用的 Serverless 计算平台，进而能够将 Serverless 体系产品连接起来，构建一个 Serverless 应用。</p><p></p><p>2017 年到 2018 年，感官上 Serverless 的热度达到了高峰，但与绝大部分新兴技术一样，其开始进入落地艰难期。Serverless 不仅仅是一种技术，而是一种全新的架构，只要有一个环节不是 Serverless 的，对开发者而言这种模式就没有太大意义，因为还需要为这一个环节进行重新设计。这一架构需要的是自底向上的全面重塑，是整个研发链路的全面 Serverless 化。</p><p></p><p>时至今日，这一架构正在被阿里云们变为可能。</p><p></p><h2>新一代云计算架构体系雏形已现</h2><p></p><p></p><p>Serverless 的表现形态或许大同小异，但其底层支撑架构却千差万别，不同的架构带来了不同的性能和稳定性等。</p><p></p><p>对阿里云而言，Serverless 真正蜕变要从 CIPU 开始。</p><p></p><p>今年 6 月，阿里云发布了一款云数据中心专用处理器 CIPU（Cloud Infrastructure Processing Unit），取代 CPU 来管理和加速数据中心的计算、存储和网络资源。CIPU 向下云化管理数据中心硬件，并对计算、存储和网络资源进行加速，向上接入飞天云操作系统，将全球 数百万台服务器变成一台超级计算机，为客户提供更高性能、更低价格、更可靠的云计算服务。</p><p></p><p>在这种新型架构里面，存储、计算、网络通过这种新兴的体系架构互相之间进行通信交换，云的能力、效率、成本几方面都得到大幅改善。</p><p></p><p>以前在 CPU 用软件来管理数百万台服务器接入飞天操作系统，所有的算力都需要和飞天云操作系统耦合，给客户的算力和算力迭代都需要和飞天耦合，需要不断地做软件的适配。CIPU 的到来让算力解耦，真正变成了“即插即用的云计算”。</p><p></p><p>CIPU 诞生的目的是为了管理底层的云基础设施，包括相对应的底层的虚拟化的池化管理。2017 年，阿里云发布了第一代神龙架构，并为之专门开发了 MOC 卡，可以理解为 CIPU 最早期的雏形。</p><p></p><p>计算、存储、网络全部接入这一代的硬件架构后，能够实现数据路径全部都是硬件加速，第一次真正完整地颠覆了原来的“软件定义云”。</p><p></p><p>此外，CIPU 带来一个最明显的标志就是虚拟化的开销真正意义上降到了 0，无论是计算虚拟化还是存储、网络的全面加速。“飞天 +CIPU”的组合性能可提升 20% 以上。</p><p></p><p>在此基础上，阿里云基础设施已经广泛基于 CIPU 架构进行建设，并且构建了全栈自研的基础设施，例如自研 CPU 芯片倚天 710、磐久服务器、EIC 高性能网卡、磐久交换机、磐久液冷一体机、磐久液冷集装箱等自研硬件。</p><p></p><p>去年，阿里巴巴发布了首款“为云而生”的芯片倚天 710。目前，倚天 710 云实例已在多家互联网科技公司大规模应用，算力性价比提升超 30%，单位算力功耗降低 60%，这也是中国首款云上大规模应用的自研 CPU。</p><p></p><p>在今年双 11 期间，天猫双 11 的部分系统就平滑迁移至倚天 710 实例，提供稳定的服务。国内一些知名的科学计算、智能手机行业和互联网等领域的企业在迁移至倚天 710 实例后，性价比均得到了显著提升。</p><p></p><p>未来阿里云还将继续扩大自研 CPU 的部署规模，预计未来两年内 20% 新增算力将使用自研 CPU 芯片倚天 710。</p><p></p><p>时至今日，个别大型企业可能还在自建数据中心，在获取同等性能的情况下成本或许是可控的，但当进入 CIPU 和自研 CPU 构建的时代，企业就会发现即便付出再大的代价也无法搭建出性能可与之比拟的数据中心了。</p><p></p><p>以阿里云网络型负载均衡 NLB 为例，其单实例可以达到 1 亿并发连接，500G 吞吐，这是什么概念？一家互联网企业如果能达到这个规模，在中国是可以进入 TOP 10 的，这是阿里云调动了云上海量资源才可以实现的性能，自建的效率是很难与之媲美的，即便性能硬堆上去了，稳定性也会存在问题。</p><p></p><p>基于底层的全面重塑，我们有理由相信软件架构全面 Serverless 化的未来将至。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/a5/a51eb3cb89bf87d5ecaa0b600f165110.png\" /></p><p></p><h2>软件架构全面 Serverless 化的未来已至</h2><p></p><p></p><p>最近几年，微服务改造逐渐完成，其带来的各个层面的复杂性已经在众多场合被反复讨论过了。以微服务为核心的互联网分布式架构，实施的复杂度较高，必须有很好的工具、平台的支撑，这是业界的共识。</p><p></p><p>对用户而言，尽可能消除非业务研发占用的时间是非常迫切的，这正是 Serverless 的核心价值。</p><p></p><p>Serverless 具备三个明显的特点，一是全托管服务，这意味着客户使用抽象的服务化接口，而不是直接面对底层资源，也就没有安装、配置、维护或者更新软硬件的负担。全托管服务通常也提供了内置的容错、安全和可观测能力，用户通常不需要再重新构建这些能力。</p><p></p><p>这与我们常常提到的云托管是有很大差异的，如果采用云托管模式，实际上是在基础设施层构建应用，应用构建的抽象层次是比较低的，因此会带来大量工作，用户自己需要整合不同的组件和服务，需要进行大量的决策和实现，交付的速度会比较慢，需要考虑很多的事情，而且在运维方面有大量的重复工作。</p><p></p><p>如果采用 Serverless 的模式构建应用，也就是相当于在上层 API 的方式构建应用，粘合的逻辑和基础设施管理的工作都由云服务商来承担，用户所需要整合和决策的代价比较低，所需要考虑的主要就是如何将业务逻辑和需求与云服务进行适配来构建应用。基于非常高效的云 API 来构建应用的好处在于构建的成本极低，并且能够实现按天、按小时进行灵活交付，大大降低未来运维的负担。</p><p></p><p>二是自适应弹性，服务能够根据负载大小自动弹性伸缩，大大提升了资源使用效率。</p><p></p><p>三是开篇提到的按实际用量计费，只需根据实际的执行时间、流量或调用次数计费，降低了成本。</p><p></p><p>要想让用户用好 Serverless，单纯在应用运行时层面进行 Serverless 化是远远不够的，应用依赖的下游数据库等系统，如果没有良好的弹性，就会成为系统整体的“短板”。</p><p></p><p>全面实现 Serverless 化取决于整个研发链路上有多少云产品提供了这样的形态。阿里云是国内对 Serverless 探索最早的厂商之一，其于 2017 年推出了函数计算产品 FC，2018 年推出了 Serverless 应用引擎 SAE 和 Serverless 容器服务 ASK，2020 年开源了 Serverless Devs … 其中，函数计算日调用次数超过 200 亿次，有效支撑历年双 11 百万 QPS 洪峰，业务年均增速超 300%，整体规模位居国内首位。</p><p></p><p>截至目前，阿里云有超过 20 款核心产品提供了 Serverless 形态，在弹性速度、计费模型上帮助客户业务更好地驾驭底层算力，节约成本。其最新发布的 Serverless 应用中心提供海量的场景化模板，让 Serverless 应用全生命周期管理更简单。通过使用 Serverless 应用中心，用户在部署应用之前无需进行额外的克隆、构建、打包和发布操作，即可快速部署和管理应用，帮助用户快速联动云上的上下游服务，轻松沉淀最佳实践。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d0/d0eccc85c21c2b25ba2e41e1df5be037.png\" /></p><p></p><h3>数据库：Serverless 最难攻坚的堡垒</h3><p></p><p></p><p>云数据库帮助企业和开发者节省了很大一部分运维精力，但在很多场景下，工作负载并不均衡、波峰波谷差异极大，在预算有限的情况下，我们大多时候依赖持续监控和手动对数据库容量调整来满足业务所需，但这种方式耗时耗力，还可能出问题，这就是 Serverless 化大展身手的场景。</p><p></p><p>在本届云栖大会现场，阿里云数据库团队提出了云原生数据库发展的四个方向：云原生化、平台化、一体化以及智能化。Serverless 正是云原生化的体现。</p><p></p><p>云原生化意味着数据业务加速上云，用户对数据库的需求正从资源视角向能力视角演进，而这就是阿里云数据库做出 All In Serverless 决定的原因。</p><p></p><p>但是，数据库是 Serverless 最“不友好”的应用之一，数据库不仅仅是一个“stateful”的应用，而且是一个“state-heavy”的应用，包括云原生基础设施 Kubernetes 对于 stateful 应用的支持，也是等到 StatefulSet 和 operator 之后才有一个比较好的解决方案。而在这之前数据库都是作为 Serverless 对状态做解耦和状态下沉的工具，也是全栈 Serverless 解决方案中最难攻坚的一个堡垒。</p><p></p><p>要知道，数据库在使用过程中需要满足 ACID 原子性、一致性、隔离性、持久性等特性，同时在线事务型数据库，都是 OL 开头，强调了在线，这两个叠加起来，就决定了数据库实现 Serverless 化是非常有挑战的。</p><p></p><p>但是，阿里云做到了。</p><p></p><p>以阿里云的 PolarDB 为例。PolarDB Serverless 的核心就是通过 RDMA/CIPU 等实现软硬件结合，使得跨节点的内存状态实现融合，基于此实现了 PolarDB 的跨节点在线无感迁移和强一致横向扩展，突破了资源池的单机限制，大幅提升资源利用效率，降低成本。</p><p></p><p>目前，阿里云数据库的 PolarDB、AnalyticDB、RDS 等核心产品已与倚天 710、CIPU、飞天操作系统进行深度融合创新，并全面 Serverless 化，对外更好地提供一站式数据管理与服务。</p><p></p><p>在 Serverless 层面，阿里云数据库团队实现了如下三项突破：</p><p></p><p>PolarDB for MySQL 是业内首创支持跨机 Serverless 服务的云数据库，为解决 Serverless 形态下普遍存在的上限规格过低限制，PolarDB 突破了无感秒切和高性能全局一致性两大技术难点，实现了跨机无感弹升和强一致横向线性弹升，使得上限规格突破了 1000 核以上，带来了数量级的 Serverless 能力提升，最高成本下降可达 95%，使得 Serverless 技术具备支撑企业级业务的能力。RDS MySQL 采用计算存储分离架构，5 秒完成计算资源弹升；计费粒度精确到 1 秒，Serverless 最高实现 70% 成本下降；支持实例自动启停，无负载时仅保留存储资源计费，启动平滑最快 10 秒完成；天然支持了 DataAPI 能力，可以无缝融合 FaaS 提供全栈 Serverless 的解决方案。AnalyticDB 基于资源池化和弹性存储能力，结合 MPP 数据库架构、离在线一体化以及 Serverless 创新技术，支持海量数据毫秒 / 秒级实时分析查询，让数据分析更实时、更高效；最高节省 90% 的总拥有成本 TCO；高度兼容 MySQL/PG，无缝升级 Teradata/Oracle。</p><p></p><p>2022 年 10 月，阿里云数据库作为首家云厂商，参与了中国信通院的 Serverless 能力评测。最终凭借过硬的 Serverless 技术实力，参与评测的 PolarDB for MySQL、RDS MySQL 数据库获得事务型数据库 Serverless 能力最高「先进级」评级；AnalyticDB MySQL 和 AnalyticDB PostgreSQL 获评分析型数据库 Serverless 能力「增强级」评级。</p><p></p><h3>大数据 +AI：向着 Serverless 形态不断演进</h3><p></p><p></p><p>大数据相较于数据库，不仅仅是 online 和 offline 的区别。大数据最大的特性是数据非常的半结构化，很多数据需要用户写代码，而不能完全靠关系代数做 Join、Select 等，大数据是非常稀疏的，并不是每行每列都有。这种情况下如果完全用关系代数是非常低效的，这对计算性能等各个方面都提出了挑战，大数据如何处理动态性变得至关重要，这也是大数据与云计算紧密结合的原因之一。</p><p></p><p>此外，从系统角度帮助用户在不同的资源之间寻求平衡，达到最优性价比，需要与云计算的基础设施紧密结合，通过硬件实现加速。至于硬件选型层面，通用型的硬件加速是值得的，但如果是专用型，成本会急剧升高，这也是云计算非常重要的特点，是否能够利用规模性和集群去做一些事情。</p><p></p><p>以 CIPU 为核心的架构在增效降本层面有非常本质的不同，阿里云的基础设施团队已经意识到大数据和 AI 巨大的算力要求，因此 Spark、Flink 等引擎通过与之相结合可以带来更好的投入产出比。</p><p></p><p>在 Serverless 层面，大数据与 AI 业务存在明显的波峰波谷，Serverless 可以实现更好的弹性，也可以在突发的流量高峰下迅速分配资源。本届云栖大会，阿里云 ODPS 升级为一体化大数据平台，支持大规模批量计算、实时分析等服务，提供实时流式计算、机器学习等多种计算能力，可同时调度超 10 万台以上服务器规模进行并行计算。ODPS 也是目前中国唯一自研、应用最为广泛的一体化大数据平台。</p><p></p><p>2017 年，ODPS 将大规模批处理引擎 MaxCompute 以独立产品形式对外提供服务，MaxCompute 天生是 Serverless 化的，用户可以为使用的计算量计费。机器学习平台 PAI 也会朝着 Serverless 的模式演进，无论用户需要多少机器做训练，底层平台都可以将这些资源管好，阿里云并不是第一天开始做 Serverless，只是一直在试图更加精细化地帮助用户进行训练、计算和分析，高效利用算力资源。</p><p></p><p>如今，开源降低了用户的研发门槛，但要想在云上构建一套完全按量付费又具备极致弹性，同时可以对管控面进行集中化管理，屏蔽所有底层运维复杂性，又具备智能诊断能力，这对用户而言是很难的，阿里云的开源大数据平台在过去与底层基础设施团队进行了密切合作，基于神龙裸金属，加之 Kubernetes 等容器化技术、调度技术、多租户的隔离技术，网络隔离技术及相关适配，让用户做到真正的在云上开箱即用，按量按需所用，这也是阿里云大数据团队一直以来都在坚持的。</p><p></p><h2>开发者在新的架构体系下如何自处？</h2><p></p><p></p><p>当一项技术开始进入大规模落地阶段，我们就需要清楚的认识到，其已经从趋势成为了必然。</p><p></p><p>2020 年天猫双 11，阿里云实现了国内首例 Serverless 在核心业务场景下的大规模落地，扛住了全球最大规模的流量洪峰，创造了 Serverless 落地应用的里程碑。</p><p></p><p>今年天猫双 11，阿里云 Serverless 支撑业务场景更多，范围更广，阿里云函数计算与集团内的运维体系全面实现标准化对接，打通研发的最后一公里，首次实现了业务全链路“ FaaS + BaaS ”的 Serverless 体系化研发，覆盖淘特、淘系、阿里妈妈、1688、高德、飞猪等业务场景，支撑场景数量同比增加 2 倍，峰值流量总数同比增加 3 倍，实现了百万 QPS 的突破，人效提升 40%。本届云栖大会上，函数计算还宣布全面降价，最大幅度达 37%，更普惠的价格受到诸多开发者的青睐。</p><p></p><p>南瓜电影借助 Serverless 应用引擎 SAE 7 天内全面 Serverless 化，零门槛拥抱 K8s，轻松应对热映电影的突发流量，相比传统服务器运维模式，开发运维效率提升 70%，成本下降 40%，扩容效率提升 10 倍以上。</p><p></p><p>这样的例子还有很多，此处不一一列举，但都足以说明 Serverless 已经成为软件研发的必然。</p><p></p><p>对开发者而言，可以在 Serverless 时代充分感受云带来的弹性，充分利用云计算软硬件协同带来的优势，摆脱网络工程师、运维工程师、安全工程师等诸多标签，集中精力做最擅长的事情，云计算将物理世界的安全、网络等能力统统软件化，变成了开发者最为擅长的视角，开发者只需进行合理的整体规划就可以得到更大的效率提升，甚至是需求管理都可以在云平台实现。</p><p></p><p>此外，阿里云将内部优秀的研发流程产品化后通过云平台对外提供，开发者可以借此了解阿里巴巴内部的研发流程实践，并从中获得助力。</p><p></p><p>总的来说，在未来，Serverless 架构比服务器在成本上会更有竞争力，当开发者用了 Serverless 架构时，就已经获得了高可靠，弹性扩缩容的能力。此外，Serverless 的计费模式会更加精确，资源利用率也将逐步提升，确保做到真正的按需使用和付费。因此相比预留资源，在价格上会更有竞争力，更多的开发者会因此选择 Serverless 架构。Serverless 同样有望支持更多类型的硬件，包括 ARM 类型的 CPU、GPU 或者 FPGA 等异构硬件，给开发者提供更有性价比的计算类型。</p><p></p><p>这种架构所带来的影响会持续多久，暂时没有答案。这样一种全新的计算架构体系是否会成为众多云计算厂商争相效仿的第二技术增长曲线，至少在阿里云身上，我们看到了诚意和决心。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/d9/d91337b852e9b16ed68d9e07f1b72249.png\" /></p><p></p><p>当下，Serverless 确实是最接近云计算最初设想的模式，唯这一点，就足以让开发者们跃跃欲试了。</p><p></p><p>采访嘉宾：</p><p></p><p>蒋江伟 阿里巴巴集团副总裁、阿里云基础产品事业部负责人</p><p></p><p>贾扬清 &nbsp;阿里巴巴集团副总裁、阿里云计算平台事业部负责人</p><p></p><p>李飞飞 阿里巴巴集团副总裁、阿里云数据库产品事业部负责人</p><p></p><p>其技术团队成员对本文亦有贡献。</p><p></p>",
    "publish_time": "2022-11-10 13:17:05",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Meta暴裁1.1万人：3年烧光2000多亿元，小扎承认犯了错，但仍会继续注资元宇宙",
    "url": "https://www.infoq.cn/article/HV3jCMXQZEdCZUNgeevH",
    "summary": "<p></p><blockquote>Meta疯狂裁员，搞元宇宙三年多，亏损300多亿美元，扎克伯格还能坚持多久？</blockquote><p></p><p></p><p>两年前，疫情刚开始之际，包括<a href=\"https://www.infoq.cn/article/lRRMRzou5ShfEiYpSNKp\"> Zoom</a>\"、谷歌、<a href=\"https://www.infoq.cn/article/pDQ7VpkyM6HJRltYB6FH\">亚马逊</a>\"、Facebook 在内的科技巨头们乘着疫情这股“东风”，营收达到了两位数增长。他们获得了丰厚的利润，于是开始招兵买马，迅速扩张。</p><p></p><p>但由于疫情迟迟不肯“退场”，最开始的欣欣向荣也变了模样。</p><p></p><p>从美国科技巨头们 10 月底发布的季度财报可见，疫情初期的短暂繁荣早已一去不复返。在过去的几天和几周里，大多数科技巨头都宣布大幅停止招聘，甚至在极端情况下进行大规模裁员。在这些科技巨头浩浩荡荡的裁员大潮中，Facebook 母公司<a href=\"https://www.infoq.cn/article/4iDmM3PgXmvELorwQ8M3\"> Meta </a>\"正在迈出最引人注目的一步。</p><p></p><h2>Meta 暴裁 1.1 万人，扎克伯格：我的错！</h2><p></p><p></p><p>据《华尔街日报》报道，Meta 正着手裁员 1.1 万人，约占其员工总数的 13%。为此，公司高管要求员工本周取消非紧急旅行。尽管就裁员百分比而言，裁员幅度明显小于<a href=\"https://www.infoq.cn/article/jm7V0mpaHGLmP6zITIfX\"> Twitter 50% 的裁员幅度</a>\"，但从绝对值来看，预计这将是当前期间科技行业中裁员人数最多的一次。</p><p></p><p>公司 CEO 扎克伯格在周三致员工的一封信中表示，实施裁员的原因是 Meta 收入下滑 ，且科技行业整体态势不佳。</p><p></p><p>就在此次裁员前一周，Twitter 新东家、亿万富豪马斯克刚刚进行过一轮大规模精简。新冠疫情期间迅速扩招的其他不少科技公司，最近也先后进行过裁员。</p><p></p><p>扎克伯格指出，他当初做出了积极的招聘决定，认为在新冠隔离结束后，业务仍会保持快速增长。</p><p></p><p>“但很遗憾，事态的发展与我当初的预期有所偏离。不单电子商务回落到疫情前的水平，而且宏观经济低迷、竞争加剧和广告业务缩水导致我们的收入远低于预期。我的判断是错的，我要对此负责。”</p><p></p><p>与其他社交媒体企业一样，Meta 在新冠疫情期间也享受了一波收益红利，毕竟那段时间人们被困在家中、所以使用手机和电脑的时间大为延长。但随着封控结束，人们开始恢复外出，所以社交媒体的收入增幅有所放缓。</p><p></p><p>另一个令投资者们忧心的现象是，<a href=\"https://www.infoq.cn/article/Zp1iOf6zrw5RuoRIcirI\">Meta 每年向“元宇宙”</a>\"项目投入超 100 亿美元。扎克伯格预测，这个沉浸式的数字世界终将取代智能手机，成为人们与技术交互的主要方式。</p><p></p><p>但这样的想法明显太过激进，自今年年初以来，担心 Meta 步子过大的投资者已经让该公司的股价暴跌超过 71%，目前其股价处于 2015 年以来的最低水平。</p><p></p><p>经济放缓和线上广告的严峻前景，也让高度依赖这部分收入的 Meta 身陷困境。今年夏季，该公司公布了历史上首次季度环比收入下降，而接下来的季度又出现了更严重的收入降幅。</p><p></p><p>其中有些问题确实跟 Meta 自身有关，但有些则来自整体经济和技术环境。</p><p></p><p>以下是扎克伯格致员工邮件全文：</p><p></p><p></p><blockquote>今天我要分享我们在 Meta 历史上做出的一些最困难的改变。我决定将我们的团队规模缩小约 13%，并让超过 1.1 万名有才华的员工离职。我们也在采取一些其他措施来帮助 Meta 成为一家更精简、更高效的公司，包括削减可自由支配的开支，以及将招聘冻结期延长至第一季度。我想要对这些决策以及我们如何走到如此地步的事实而负责。我知道这对于每个人来说都很艰难，我尤其想对受到波及的员工表示歉意。我们为什么会走到如此境地？在疫情爆发之初，世界迅速转向线上，电商的激增导致收入大幅增长。许多人预测，即使在疫情结束后，这种状态也将一直延续下去并有愈发迅猛之势。我也持同样看法，因此决定大幅增加我们在此方面的投资。然而不幸的是，这些投资并没有像我预期的那样发挥作用。不但电商恢复到了以往的趋势，而且宏观经济低迷、竞争加剧和广告业务的流失导致我们的收入远低于我的预期。我做出了错误的判断，我需要为此负责。在当下新环境中，我们需要提高资本效率。我们已将更多资源转移到少数高优先级增长领域，例如我们的 AI 搜索引擎、广告和业务平台，以及我们对元宇宙的长期愿景上。我们已经削减了整个业务的成本，包括缩减预算、减少津贴和缩小我们的房地产版图。我们正在重组团队以提高效率。但仅凭这些措施并不能使公司收支平衡，所以我也做出了裁员这一艰难决定。裁员将如何进行？关于如何进行裁员，哪有什么好办法可想。但我们希望将所有相关信息尽快提供给你们，随后尽我们所能支持你们度过这段时期。每个人都将很快收到一封电子邮件，解释此次裁员对你个人意味着什么。在此之后，每个受影响员工都将有机会参加交流，他们的问题将得到回答，同时还可以参加信息分享会议。在美国的员工，一些具体细节如下：离职赔偿金：我们将为每名被解雇的员工支付 16 周的基本工资，并且每工作一年就会额外获得两周的工资，没有上限。个人休假： 对于尚未使用的个人休假时间，我们将支付补偿。RSU（受限股）的归属：所有受影响员工都将获得截至 2022 年 11 月 15 日应当归属的 RSU。医疗保险： 我们将为受影响员工及其家人支付 6 个月的医疗保险费用。重新就业服务： 我们将与一家外部服务提供商一起，提供为期 3 个月的重新就业支持，包括让员工提前获得尚未公开的招聘线索。移民局支持： 我知道，如果你是持工作签证在这里工作，那么情况会尤其艰难。在签证终止之前会有一个通知期和一些签证宽限期，这意味着每个人都有时间制定计划，处理各自的移民状况。我们有专门的移民专家，可以根据你和你家人的需要协助提供指南。在美国以外，对于受影响员工的支持是类似的。我们将很快结合各地的劳动法，启动单独的流程。考虑到对敏感信息的访问量很大，我们决定，取消今天要离开的员工对 Meta 大多数系统的访问权限。但我们会全天保持电子邮件地址处于可用状态，以便每个人都可以告别。虽然我们将对应用家族和 <a href=\"https://www.infoq.cn/article/osyKjMrRykrkOoFpugg7\">Reality Labs</a>\" 的每个团队都进行了缩减，但一些团队将受到更大的影响。由于我们计划明年雇用更少的人，因此招聘将受到不成比例的影响。同时，我们还在更大幅度地重组业务团队。这并不是对这些团队所做的优秀工作的反馈，而是我们面向未来不得不去做的事情。在接下来的几天里，我们将与各部门 Leader 来讨论这波裁员对于团队的影响。即将离开我们的同事才华横溢，热情满满，对公司和社区产生了重要影响。Meta 的成功离不开所有人的付出，我对此深怀感激。我相信，你们会在其他地方继续完成出色的工作。我们还将做出哪些其他改变？我将裁员视为最后手段，因此我们决定，在进行裁员之前先控制其他的成本来源。总体来看，这将给我们的经营方式带来重要的文化转变。例如，随着我们收缩办公地产版图，对于那些大部分时间远程办公的员工来说，我们将把他们过渡至共享办公桌的模式。在接下来几个月里，我们将启动更多类似的成本削减调整。除了少数例外，我们还将把招聘冻结延长至第一季度。我将观察我们的业务绩效、运营效率和其他宏观经济因素，以决定我们能否在那时恢复招聘，以及恢复至多大程度。这样做将让我们有能力在经济持续下行的情况下控制成本结构，使得成本结构比我们近期向投资者介绍的更加高效。目前，我正在对我们的基础设施开支进行全面评估。随着我们建立人工智能基础设施，我们专注于利用我们的能力提高效率。我们的基础设施仍将继续是 Meta 的重要优势，我相信，我们可以在减少开支的情况下实现这一目标。从根本上来说，我们做出所有这些改变基于两方面原因：我们的营收前景低于我们今年初的预期，以及我们希望确保应用家族和 Reality Labs 业务都能高效经营。我们将如何前进？这是一个令人难过的时刻，让人无可奈何。对于那些即将离开的同事，我想要再次感谢你们为这个地方所做的一切。没有你们的努力工作，我们就不会有今天的成就，我对你们的贡献表示感谢。对于那些留下的员工，我知道，这对你们来说也是一段艰难的时期。我们不仅要向与我们紧密合作过的同事道别，而且你们中的许多人也会对未来感到不确定。我想让你们知道，我们做出这些决定，是为了确保我们可以有一个强有力的未来。我相信，作为一家公司，今天我们被严重低估了。数十亿人使用我们的服务连接在一起，我们的社区也在不断扩大。我们的核心业务是有史以来最赚钱的业务之一，未来潜力巨大。此外，我们正处于领先地位，去开发技术，定义社交连接的未来和下一代计算平台。我们正在从事具有历史意义的工作。我相信，只要我们更高效地去工作，我们将可以走出当前的下滑趋势，变得比以往更强大、更有灵活性。关于我们将如何作为一家更精简的组织去推进我们的高优先级事项，未来几周我们将公布更多信息。现在，我想要再说一次，对于那些将要离开的同事，我非常感谢你们为推进我们的使命所做的一切。</blockquote><p></p><p></p><h2>裁员讯号早已显现</h2><p></p><p></p><p>不断扩张的组织规模、通货膨胀和加息以及投资者的焦虑，在 2022 年三季度报告中汇集在一起导致科技巨头们的股价一路下跌，不少公司陷入亏损的困境中。</p><p></p><p>值得一提的是，Meta 是唯一一家在第三季度报告收入和净利润都下降的科技巨头，面对这样的现状，Meta 的管理者面临的选择要么就是冻结招聘和裁员，要么就是冒着股价持续下跌和对市场完全丧失信心的风险维持现状，扎克伯格最终选择了前者。</p><p></p><p>扎克伯格想要裁员之心，在此之前已有迹可循。</p><p></p><p>第一个裁员讯号出现在今年 4 月底，当时他在季度财报电话会议上告诉投资者，更多的人员流失将使 Meta 成为“一家更好的公司”。几天后，该公司实施了广泛的招聘冻结。</p><p></p><p>在此后的两个月内，公司向每位员工表明，如果他们想要在关注绩效考核和员工评估的情况下保住工作，就要“增加工作强度”。</p><p></p><p>据知情人称，在周三宣布裁员之前，重组正在进行中，某些部门被裁减，管理人员被要求尝试在公司寻找其他工作或离开。虽然员工们已经被警告公司可能会<a href=\"https://mp.weixin.qq.com/s?__biz=MzU1NDA4NjU2MA==&amp;mid=2247578966&amp;idx=1&amp;sn=988d635f89546763152e8399574f4c48&amp;chksm=fbeb0c99cc9c858f579cf5721828e0bba4050302853d16eec50f9acd30f81af6d1e9fe8ccd0d&amp;scene=27#wechat_redirect\">裁员</a>\" 10%~20%，但他们仍然被要求要对工作投入“200%”的精力。</p><p></p><h2>All in 元宇宙后，Meta付出了惨痛代价</h2><p></p><p></p><p>自扎克伯格在 2021 年宣布 Facebook 将更名为 Meta 并全力转向 Metaverse 以来，Meta 的市值已经下跌了 70% 以上。在 10 月份 Meta 发布了 2022 年第三季度财报后的第二天，Meat 股价又下跌了 24%。财报显示，报告期内，公司营收下降 4% 至 277.14 亿美元。</p><p></p><p>这是 Meta 连续第二个季度出现营收同比下滑。2022 年二季度，Meta 史上首次营收下滑。《华尔街日报》称，近十年以来，Meta 从未出现过连续第四个季度净利润下降的情况。</p><p></p><p>尽管如此，扎克伯格还是加倍下注，他认为元宇宙将成为数字经济的重要组成部分。扎克伯格曾在一次电话会议上表示，“显然，元宇宙是我们长期努力的目标”，并且坚信长期投资元宇宙业务“最终将会得到回报”。</p><p></p><p>预计负责 Metaverse 一切事务的部门 Reality Labs 的亏损将在明年继续亏损。今年到目前为止，Reality Labs 已报告亏损 90 亿美元，其中第三季度亏损近 40 亿美元。该部门在 2021 年损失了 100 亿美元。</p><p></p><p>Reality Labs 从 2019 年到 2022 年至今的净亏损，累计 301.3 亿美元 （约人民币 2186 亿元）。</p><p>2019 年：收入 5.01 亿美元，净亏损 45 亿美元2020 年：收入 11.4 亿美元，净亏损 66.2 亿美元2021 年：收入 22.7 亿美元，净亏损 101.9 亿美元2022 年至今，已亏损 90 亿美元</p><p></p><p>扎克伯格承认，开发元宇宙业务的部分原因是，为了在未来拥有一个平台，可以免受苹果等竞争对手影响。但最主要的原因是，元宇宙能够为科技公司在构建支撑计算平台方面，提供更多创新性。</p><p></p><h2>Meta 的衰败，因“打不过”TikTok？</h2><p></p><p></p><p>Meta 和各家合作广告商也显然正在为经济衰退做好准备。苹果的隐私工具无疑令其雪上加霜，导致 Facebook、Instagram 和 Snap 等社交媒体平台越来越难以在未经用户同意的情况下，跟踪用户位置并向其投放广告。</p><p></p><p>分析企业 Forrester 表示，尽管 Meta 面临着数字广告萎缩和宏观经济衰退的影响，但真正给其致命一击的当数 <a href=\"https://www.infoq.cn/article/wS57dYqTG6oNO9m3Z50p\">TikTok 的快速崛起</a>\"。研究分析师 J.P. Gownder 还不客气地认为，值此性命攸关之时，扎克伯格居然还在向那犹如海市蜃楼的所谓“元宇宙”计划投入数十亿美元。</p><p></p><p>Gownder 指出，“他们正在对未来五到十年内都很难落地的东西砸下重注。但他们的当务之急是解决基础业务问题，大规模裁员只能算是权宜之计。”</p><p></p><p>扎克伯格表示，Meta 正在努力削减其业务成本，并强调此举不会对收入提振计划造成太大影响。</p><p></p><p>除了裁员之外，Meta 公司还将把招聘冻结期延长至 2023 年第一季度。此外，公司还将收缩办公空间。扎克伯格认为，既然有那么多员工一直在居家办公，那不如退掉一部分写字楼，让大家共享办公桌即可。</p><p>未来几个月，Meta 还将有更多成本削减措施出炉。</p><p></p><p>经历了周三的裁员之后，Meta 在全球仍有超过 75000 名员工。这一数字仍远高于 2021 年底的 71970 人，以及 2020 年底的不足 5.9 万人。</p><p></p><p>Meta 股东、Altimeter Capital 公司 CEO Brad Gerstner 上月给扎克伯格写了一封公开信，敦促 Meta 应该勒紧腰带过日子。</p><p></p><p>Gerstner 在信中写道，“Meta 已经人员过剩了——想法太多、声音太多、但工作的紧迫性不足。业务快速增长时，这些问题很容易被掩盖掉。而一旦增长放缓，技术格局发生变化，这种专注力和精益运营的缺失将非常致命。”</p><p></p><p>在信中，Gerstner 建议扎克伯克应压缩成本、关注公司业务。他的建议包括裁撤 20% 的员工，让 Meta 回归 2021 年时的人员规模。</p><p></p><p>目前还不清楚 Meta 及其代表的社交媒体经济是否也处于类似的衰退轨道。十年之前，Facebook 成功将其业务从台式电脑转移到了智能手机，并借此赚得盆满钵满。如今，Meta 希望再次引领从移动到虚拟的新一轮通信平台转型，但整个时代和宏观背景却已经大不同于往昔。</p><p></p><p>Gerstner 在信中写道，“Meta 有三大核心挑战需要克服：Meta 不再是领先的开创者；Meta 的市场主场地位正在减弱；消费者不在乎、其他企业不相信、再加上全球经济下滑，共同让扎克伯格描绘的元宇宙之梦变得黯淡无光。”</p><p></p><p>Meta Platforms 公司股价本周三上涨 5 美元（5.2%），收于 101.47 美元。</p><p></p><p>参考链接：</p><p>https://about.fb.com/news/2022/11/mark-zuckerberg-layoff-message-to-employees/</p><p>https://www.ctvnews.ca/business/facebook-parent-company-meta-laying-off-11-000-employees-1.6145229</p><p>https://www.thehindu.com/business/Industry/facebook-owner-meta-lays-off-13-per-cent-of-its-employees-announces-hiring-freeze-for-q1/article66115274.ece</p><p>https://beatricedailysun.com/news/national/facebook-parent-company-meta-laying-off-13-of-employees/article_c7930051-402c-5e8e-99b0-50b3003cbfdd.html</p><p>https://finance.sina.cn/tech/2022-11-10/detail-imqqsmrp5590092.d.html?fromtech=1</p><p>https://www.washingtonpost.com/technology/2022/11/09/facebook-layoffs/</p>",
    "publish_time": "2022-11-10 14:50:57",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "在华15个“零碳工厂”，施耐德电气如何用技术实现“绿色”目标",
    "url": "https://www.infoq.cn/article/wK91ohatBuULkxsliMaa",
    "summary": "<p>去年，我国提出“3060”双碳目标，“1+N”政策体系逐步落地，在全国，包括北京、上海、广东、深圳等在内已经有31个省市陆续制定了双碳目标。绿色成了工业发展的“基本色”，那么，如何在保持业务发展、产能稳定的同时，减少碳排放？这是对很多制造企业提出的“灵魂拷问”。</p><p></p><p>而谈及“绿色”、“零碳”，不得不提的就是<a href=\"https://www.infoq.cn/article/MDuweEQy7Qr1FNHFXzfN\">施耐德电气</a>\"。</p><p></p><p>作为可持续发展的践行者，施耐德电气将可持续发展融入主营业务的方方面面。施耐德电气长期推进自身的可持续发展转型，将大量绿色的创新产品和数字化技术应用于自身工厂，并取得了不少成果。最直观的是，施耐德电气在全球打造了64家“零碳工厂”，在中国23家工厂中，就有15家已经实现“零碳”。</p><p></p><p>坐落于北京亦庄的施耐德（北京）中低压电器有限公司（以下简称“北京工厂”），就是这15个“零碳工厂”之一，除此之外，它还是工信部认证的国家级“绿色工厂”，以及施耐德电气全球“智慧工厂”项目中的样板工厂。去年，北京工厂还经过了中国船级社质量认证公司的碳中和认证并获颁“碳中和”证书，成为全国首家“碳中和”工厂，是施耐德电气“绿色”发展之路上的又一里程碑。</p><p></p><p>在日前的施耐德电气“创新开放日”之际，InfoQ等媒体一起探访了北京亦庄工厂，看这座“零碳工厂”如何在持续增长的同时，实现节能减排的目标。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/0c/72/0ccbae7e0ac15b9045aee10e2c272772.jpg\" /></p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/c4/38/c401be610207e53445ea6ae0decbf238.jpg\" /></p><p></p><p></p><h1>提升能源效率，既靠技术也靠绩效</h1><p></p><p></p><p>根据国际能源署（IEA）发布的《全球能源评估:2021年二氧化碳排放》报告显示，2021年，全球温室气体排放量达到了408亿吨二氧化碳当量，能源相关的二氧化碳排放量达到了363亿吨，占比超过88%。</p><p></p><p>这意味着，能源将是企业实现<a href=\"https://www.infoq.cn/article/a9ChVY8DGJRbXqTHqjah\">绿色生产</a>\"的关键突破口。</p><p></p><p>在北京工厂，施耐德电气主要从三方面着手：第一，部署清洁能源，增加可再生能源的使用；第二，搭建<a href=\"https://www.infoq.cn/news/APV0tYBQq8hC2xc5fWFm\">数字化</a>\"能源监控系统，提升能源使用效率，避免浪费；第三，通过智能调度，优化产线的能源管理，实现能源价值最大化。</p><p></p><p>比如，从源头上，北京工厂部署了施耐德电气在中国最大的光伏项目基地,，增加了清洁能源的使用比重——具体占全厂能源使用的30%，据统计，这样下来每年可以减少超过2000吨的碳排放。但是，碳排放存在于生产的全过程中，更繁重的减排任务主要是对另外70%的传统能源的效率优化上。</p><p></p><p>在施耐德电气看来，数字化技术是能效优化的基础，通过广泛采集生产线上的水、电、气等与能源相关的数据，借助<a href=\"https://xie.infoq.cn/article/83e82b122c7484bb5603d40c4\">大数据</a>\"的监测和分析手段，可以实现对各项能耗指标的可视化管理，根据能耗高峰和低谷进行调优，避免资源浪费。</p><p></p><p>以空调冷机为例，基于冷库预测模型和冷机测试模型，可以预测未来24小时的天气数据、人流数据、室内温度数据等等，根据这些数据，工厂就可以对冷机的开关机策略进行优化，决定在什么时间段开启和关闭，避免在非必要的情况下长时间启动，造成资源浪费。</p><p></p><p>据了解，北京工厂内已经安装了数以万计的传感器，基于全套数字化监控系统，可以对生产全过程产生的各项能耗指标进行持续改善，把各个环节的碳排放降到最低。</p><p></p><p>除此之外，在数据基础上，施耐德电气北京亦庄工厂还通过与第三方服务的打通，实现<a href=\"https://xie.infoq.cn/article/d165605b0a6f5b9b1c3fb331d\">智能调度</a>\"，降低对传统能源的依赖。比如，根据市电实时电价等变量，优化能源使用结构，在用电高峰使用新能源，在用电低谷再切换成传统用电，这一方面节省了用电成本，同时也降低了碳排放。</p><p></p><p>不过，数字化技术固然可以在这一系列节能减排举措中帮助企业解决大量复杂问题，但措施能否顺利落地，关键还在于“人”——即人在其中的决心和驱动力。为此，施耐德电气还为工厂中的不同部门和角色设定了能源绩效KPI，让节能减排这件事与每个人变得息息相关。</p><p></p><p>值得强调的是，这里的能源绩效的设定办法，同样是基于现场能源、能耗数据的积累和测算，而不是拍脑门的“一刀切”，根据不同车间、不同产线和不同班组的具体情况，会有差异化的管理指标。</p><p></p><h1>生产效率优化，反向减少能源消耗</h1><p></p><p></p><p>施耐德电气非常看重软件在绿色生产过程中发挥的价值。在其看来，碳管理是一个系统性工程，必须建立全生命周期的碳管理，其中，软件技术相当于一个“中枢”，可以实时收集、分析、呈现“碳足迹”，在发掘减碳机会的同时，提升生产的效率和能效，达到“控碳”的目的。</p><p></p><p>拿北京工厂来说，这个国家级“绿色工厂”的底层，基于的是施耐德电气在2017年全新升级的EcoStruxure架构与平台，工厂的生产、运营流程和能效等方面的数据都会被整合到这一平台上统一管理。</p><p></p><p>比如对于光伏这样的新能源来说，虽然清洁，但是容易受天气等因素的影响，存在一定的波动性。所以，想要加大新能源使用，前提必须是稳定用电、保障生产，这需要更精细化的管理。拿前文介绍的智能调度场景为例，其背后应用的是施耐德电气的EcoStruxure微网能源顾问平台。</p><p></p><p>该平台基于AI技术，通过运行模型预测控制算法来定义微电网的优化策略。具体来说，算法结合了电价信号、历史数据、天气数据和运行时间表等信息，可以预测工厂微电网边界内的能源供需变化，据此协调光伏发电量与储能系统运作，从而消除电力峰谷差，实时优化能源调度。正是借助这些软件的赋能，施耐德电气才得以从设计、建造到运维，使得全生命周期减碳成为可能。</p><p></p><p>而相比实现能源消耗的全流程可视化管理这种直接了当的手段，工厂的节能减排还有另一个思路，即通过提升工厂的生产效率，反向减少能源消耗。</p><p></p><p>以宝钢为例，借助借助施耐德电气的<a href=\"https://www.infoq.cn/article/Aub92hlkdiu7sBaYryEt\">EcoStruxure</a>\"平台，宝钢对工厂进行了升级改造，最终实现了30%的产量提升。比如，在仓库板坯搬运的场景，通过部署无人起重系统，板坯库倒垛率由原来的30%提升至现在的70%～80%左右，平均日产量达到了10,500吨。</p><p></p><p>这一方面减少了人工成本产生的碳足迹，另一方面，在效率提升之后，仓库的光、电等能源也会得到节约。换句话说，工厂的绿色发展，并不一定要牺牲生产本身，在确保生产有序进行的同时，还可以通过正向的效率提升，反过来推动低碳目标的实现。</p><p></p><h1>自动化是实现全生命周期碳管理的前提</h1><p></p><p></p><p>施耐德电气副总裁、数字化服务业务中国区负责人张磊表示，随着相关政策的陆续落地，碳管理的工作越来越细化到每个行业和每个企业，呈现出差异化的趋势。目前，施耐德电气主要服务于包括工业、楼宇、数据中心、基础设施、家居等市场。</p><p></p><p>以建筑行业为例，通常建筑行业最大的能耗设备就是空调，这意味着，空调的运行数据是楼宇需要重点管理的对象。而工业生产线可能要更复杂，大量的生产装备、降温设备、冷机设备等等，需要更体系化、精细化的能源规划。从企业内部来说，这意味着除了生产过程，还要在研发、库存、运输、回收等各个环节，也融入低碳思想，并部署相关技术来衡量、执行和管理减碳过程；从外部来说，这还涉及供应链和生态伙伴的管理和配合。</p><p></p><p>但是，由于自动化水平的差异，IT与OT发展割裂，目前很多企业没办法在生产的过程中采集到能耗相关的数据，或者不同条线采集到的数据不一致且无法打通，导致无法合理地指导能源管理的优化。所以，在施耐德电气看来，自动化和数字化是对碳足迹进行充分追踪和管理的前提。</p><p></p><p>张磊表示，企业要让软件的价值最大化，其关键是以IT与OT的融合，为软件发挥作用搭建基石。一直以来，施耐德电气都致力于以IT与OT深度融合，结合从规划到落地的咨询服务，助力产业全程减碳。为实现这一目标，施耐德电气中国软件研发中心自去年成立以来，已经对其物联网平台实现了更新升级，其中提供了18项算法服务，实现了99.9%的云服务率，并汇聚了18家技术合作伙伴。</p><p></p><p>而技术的应用，也需要符合企业的长期双碳规划方可发挥效用。“在帮助企业实现<a href=\"https://www.infoq.cn/article/vAYa8LWjQgHtestxjtWO\">双碳</a>\"目标的过程中，施耐德电气一方面会帮助企业用好技术，另一方面也会先通过咨询形式，为企业诊断在能源管理、运营管理中存在的问题，然后再针对问题，确定具体的解决方式——比如只是需要简单改造、上线一些应用软件，还是需要改变整个组织形式——我们认为，这个过程是需要‘先医后药’的。”张磊告诉记者。</p><p></p><p>据了解，2021年施耐德电气推出了五大碳中和服务成果，为企业提供数字化治碳从规划到落地的完整服务。并且，在工业领域，还通过整合智能工厂规划咨询、智能工厂相关的软件系统、底层元器件和设备等能力，形成了绿色<a href=\"https://www.infoq.cn/article/UlxmUYElHHjTsU55rFUP\">智能制造</a>\"解决方案推动工业企业全生命周期效率的提升。</p><p></p><p>“我们发现，对于国内很多制造企业来说，OT是更加迫切的需求。所以，眼下我们最重要的任务就是先帮助他们实现自动化控制，先把数据的真实性问题解决掉，解决好基本管理的需求，再进一步推动后续的数字化转型。”针对转型的现实路径，张磊总结到。在这个过程中，施耐德电气自身既是实践者也是赋能者，作为能源管理和自动化两个领域的“斜杠”专家，其绿色理念也将经由技术和服务输出，推向其它行业。</p><p><img src=\"https://static001.geekbang.org/infoq/3e/3eed209ac0c266e322236335799451ba.jpeg\" /></p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b1/b14f23458ff9974610ea762d40a94e5e.jpeg\" /></p><p></p>",
    "publish_time": "2022-11-10 15:00:15",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "对话iPod之父：这不是互联网最坏的年代",
    "url": "https://www.infoq.cn/article/PLNF4ZHDyqjK29XzgbAl",
    "summary": "<p></p><blockquote>InfoQ 深度专访“iPod 之父” Tony Fadell，全文包括视频访谈实录，以及精华文字整理。&nbsp;&nbsp;</blockquote><p></p><p></p><p>遍数硅谷传奇人物，有 “Stay hungry，stay foolish”的苹果创始人 Steve Jobs, 有“Life is not fair, get used to it”的微软创始人 Bill Gates，也从象棋大师变成万亿富翁的 PayPal 创始人 Peter Thiel。当然，也有筹集资金时遭到 80 名风险投资人拒绝的 Tony Fadell，那时候的 Tony 还不知道自己会成为后来的“iPod 之父”。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/38/38405b705238f8ae9317c67910bac1fb.jpeg\" /></p><p></p><p>1991 年<a href=\"https://www.infoq.cn/article/zRjhvwUVDW*a6hLR2k9o\"> Tony Fadell </a>\"从密歇根大学毕业后，进入苹果分拆的 General Magic 公司工作了三年，与索尼、飞利浦、松下、东芝等“General Magic 联盟”的消费电子公司合作开发了个人手持通讯器系列。</p><p>General Magic 公司于 1990 年代在硅谷运营，在 2000 年代初停业。尽管运营时间并不长，但在硅谷，General Magic 公司曾一度被认为是硅谷中最重要的公司之一，因为正是这家公司设计了第一款智能手机的蓝图，并开创了其他现代技术，如触摸屏和表情符号。</p><p></p><p>Tony 在 General Magic 工作了 4 年，开发个人手持通信技术。</p><p></p><p>1995 年，他被飞利浦聘用，担任首席技术官。</p><p></p><p>又过了四年，1999 年 7 月，Tony 创办了自己的公司 Fuse，以开发“消费电子产品中的戴尔”。他想到的设备之一是基于硬盘的小型音乐播放器和在线音乐商店。然而，为技术筹集资金这件事儿并不容易，Tony 带着 Fuse 这间小公司在问询了 80 多位投资人后，仍未能筹集到足够的资金支持他继续开发新产品。</p><p></p><p>吃了一路闭门羹后，Tony 开始转变思路，他试图依托其他公司继续开发该产品。</p><p></p><p>他主张的产品理念赢得了<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651013707&amp;idx=1&amp;sn=034991154d61ea697974fbc9cdc4945a&amp;chksm=bdbeba188ac9330e624165f8e40c2a4e7ee4023dcf1eb77986ad4b926fd6b58195917df14bc7&amp;scene=27#wechat_redirect\">乔布斯</a>\"的关注，2001 年，Tony 受聘加入了苹果公司，负责监督所有 iPod 硬件、软件和配件的开发，因此他也被称为“iPod 之父”。</p><p></p><p>2008 年，为了更好地照顾家庭，Fadell 离开了苹果公司，重新踏上了自己的创业之路。</p><p></p><p>如今，Tony Fadell 在巴黎从事科技产业投资。在关注科技的同时，他也在努力将科技上的创新推广至农业、环境、能源等产业上。近日，Tony 一大力作《创造：用非传统方式做有价值的事》Build: An Unorthodox Guide to Making Things Worth Making 在中国上市，InfoQ 借此机会专访了这位科技教父（在此由衷感谢出版社的引荐）。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/e4/e430dc8847f0038066b068f5e6dbbd11.jpeg\" /></p><p></p><p>《创造》这本书凝结了 Tony 在硅谷 30 多年的时间里学到的关于领导力、产品设计、创业、如何做决策、成功的秘诀等方面的宝贵经验，在书中，Tony 列举了一些令人印象深刻的例子，比如创造第一部 iPod 和 iPhone 的过程。书里的每一章都旨在帮助读者解决他们目前面临的问题——如何为他们的创业公司获得资金，是否该辞掉现在的工作，屡战屡败后该不该放弃......Tony 认为这本书是一本名副其实的“纸上导师”。</p><p></p><p>在交流的过程中，Tony 表示他撰写《创造》这本书的初衷，就是将那些曾经别人授予他的经验传递给其他需要帮助的人，让这些经验生生不息地留存下去。</p><p></p><p>在 Tony 不断“折腾”的人生里，导师对于他的帮助非常重要。Tony 认为三人行必有我师，并不是名声显赫的大人物才能成为别人的导师，真正的导师并不是直接给出答案，而是努力帮助你从新的角度看待问题。</p><p></p><p>他也强调人的一生都要敢于试错，哪怕试错的成本是很高的，也不能畏惧。在他眼里，低迷期反而有更多潜藏的机会，因为这时很多人都不敢向前、竞争压力会比以往更小。</p><p></p><p>以下为 InfoQ 与 Tony Fadell 的访谈实录，经编辑。</p><p></p><p></p><p></p><h2>导师不会直接给出答案，而是提供新的思路</h2><p></p><p></p><p></p><blockquote>InfoQ：我阅读过这本书后收获颇丰，正如您所说，这本书就像一位“纸上导师”。您在书的序言中提到，每一个有志于做出有益之事的人，都需要有也应该有一位导师。“纸上导师”当然很有帮助，但很多人也希望能在现实生活中找到一位愿意持续给我们提供指导和帮助的导师，您能否和我们分享一下，过去多年对您影响最大的导师都有哪几位？您认为什么样的人适合做导师？</blockquote><p></p><p></p><p>Tony Fadell：我的第一位人生导师是我祖父。除了我祖父，我在学校里、公司里也有不少很好的导师。所以我觉得导师真的不用是那种声名显赫的人物。三人行必有我师，契机让导师和学生走到了一起，两个人会相互选择。</p><p></p><p>总之，导师就是能在你身上发现亮点的人。他们一般比你年长，他们希望能做一点回馈，希望将他们曾经接受过的帮助回馈给其他人。就像我的祖父和其他导师，他们愿意给年轻人机会，这就是真正的导师。</p><p></p><p>我今天之所以有机会坐在这里接受采访，就是因为当初我的那些导师理解我这个人和我的想法，并且愿意支持我。他们从中得不到任何经济利益。他们只是在回馈社会，因为他们自己在年轻时、职场上或者生活中也得到过帮助，这就是互帮互助。比如我最好的导师之一 Bill Campbell，他其实对技术了解有限，但他非常知人善用。他也是 Steve Jobs 的导师，同时还是<a href=\"https://www.infoq.cn/article/aIVqNVKl6VJuHLqqaAs1\">谷歌</a>\"创始人 Larry、Sergei 以及其他很多人的导师。</p><p></p><p>所以导师并不一定要跟你是同行，或者是你所处行业中的专家。他们可以精通人性，可以拥有深沉的智慧。他们掌握的可能是在人际往来当中学到的宝贵知识。</p><p></p><p></p><blockquote>InfoQ：我可不可以理解为，一位好的导师并不是直接给出答案，而是努力帮助你从新的角度看待问题？</blockquote><p></p><p></p><p>Tony Fadell：导师是这样的，能帮助我们扩大视野或者找到不同的审视角度。导师还有另外一重角色，就是要对学生提出问题。他们往往能从直觉中找到正确答案。在导师眼中，最好的学生就是那些在以正确方式思考问题的人。</p><p></p><p>导师和学生会一起讨论问题和解决方案，然后导师对学生的回答给予肯定，导师的意义是让年轻人充满信心。毕竟导师们更有经验，他们大体可以预判这套解决方案是否行得通。其实很多智商情商双高的聪明人都能找到靠谱的解决方案，只是不太确定是否行得通，缺少坚定推进的信心。毕竟这个世界的观点实在太多了，各种各样的说法充斥其中，往往把人的脑子搞得很乱。</p><p></p><p></p><blockquote>InfoQ：您刚刚提到了对您最重要的导师也是 Steve Jobs 的导师。您和 Steve Jobs 共事了多久？您从他身上学到了什么？</blockquote><p></p><p></p><p>Tony Fadell：我跟他共事了 10 年，我们两个人之间的交互非常多。从 Steve Jobs 身上，我学到了人要学会拒绝，学会说 No。只有能够说“不”，说“是”的时候才真正有意义。所以人要珍惜每一次说是和说不的机会，明确理解这背后代表着什么。其实永远不缺好主意，但我们总得否定掉其中的 70% 甚至 80%，然后把所有精力都集中在余下的这 20% 身上，把它做得更好、做到极致。</p><p></p><p>而且有时候需要真正的专注。比如已经选定了一个主意，那就把它做深、做透，别再为了其他事情而分神。不是说其他主意不好，只是现在时机不对。</p><p></p><p></p><blockquote>InfoQ：您遇到了很多值得信赖的导师，真是很幸运的一件事。但在现实生活中，找到适合自己的导师并不容易。在寻找导师这件事上，您有什么经验可以分享吗？</blockquote><p></p><p></p><p>Tony Fadell：我觉得可以先从寻求帮助开始，主动跟你信任的人，或者接触过并曾经寻求过建议的人交流，别害怕向他人征求意见。当然，这种请求也可能会遭到拒绝，但只要我们愿意敞开心扉、敢于示弱，提出问题并征求意见，那么那些你所信任的人、你钦佩的人、出色的人或者在某方面有所建树的人，通常还是愿意有所回馈的。</p><p></p><p>但这么做并不一定能马上帮你找到导师，我们不能急于求成，还是得花时间慢慢建立关系。这事可不像网上订餐那么简单。你得跟人家真正有点交情，这样你才能了解他们，他们也才能了解你。所以你得与导师之间建立信任关系和互动通道。</p><p></p><h2>舒适圈待久了，才最危险</h2><p></p><p></p><p></p><blockquote>InfoQ：我们刚刚谈到了导师的重要性。在您书中，您提到的另外一个关键内容是“试错”。您认为人们在 20 来岁的时候应该多试错，为什么“试错”很重要？</blockquote><p></p><p></p><p>Tony Fadell：我觉得人这辈子都应该多试错，不止是 20 来岁。从我们学说话起，就开始犯错了，学走路时，我们也会犯错。所以这种自打出生就有的状况，为什么非要刻意回避呢？只要我们在挑战自己，那就会一直犯错，直到生命的终点。想要成长的人必须挑战自己，而挑战自己就是从错误中学习。想想我们为什么到一定年龄就都学会走路了？因为我们在不断跌倒中，掌握了走路的技巧。</p><p></p><p></p><blockquote>InfoQ：所以您认为，我们应该永远敢于挑战自己，对吧？</blockquote><p></p><p></p><p>Tony Fadell：没错，永远不要害怕失败。很多人甚至很多团队都不愿意走出舒适区挑战自己，大家永远在做同样的事情，循环往复。我们已经看到很多不愿挑战自我的企业，他们都陷入了困境。</p><p></p><p>当挑战者出现时，守旧者已经失去了承担风险和<a href=\"https://www.infoq.cn/article/I4Chh1ikddL5EhRHKuCh\">推动创新</a>\"的能力。原因就是他们太担心会失败。永远要记住，人类就是通过失败来学习的。</p><p></p><p></p><blockquote>InfoQ：我觉得，很多人之所有不愿意走出舒适圈去挑战自己，是因为失败的后果有时候太过沉重了。</blockquote><p></p><p></p><p>Tony Fadell：确实，所以我们才需要对失败进行风险优化，对吧？我们在蹒跚学步的时候，不可能也不应该指望着靠双脚登上月球吧？我们是先学会爬，然后才学会走，之前还有学翻身、学站立之类的一个个具体过程。其中每个过程都有与之对应的风险，都是正常的。不可能哪个婴儿突然之间就一飞冲天，然后背着降落伞出现在我们面前，对吧？这些都需要时间，不是能够一蹴而就的事情。</p><p></p><p>所以我们才会去冒险，而且把目标设定得比自己当前的水平略高一点。所以当人们决定高空跳伞的时候，他们一定是已经完成了不少前置目标，绝不是一时头脑发热的结果。我们也一样，要保证对风险水平做出正确控制，否则就是鲁莽的冲动而非理智的挑战了。</p><p></p><p></p><blockquote>InfoQ：过去我可能会无条件赞同您的观点，觉得人就应该选择一些有挑战的工作，别单纯看重薪资、企业规模或者岗位稳定性。但最近几年，疫情（Covid-19）带来很多不确定性，许多年轻人在找工作的时候都更愿意找比较稳定、薪资更高的工作，而不是去冒险。对此您怎么看？</blockquote><p></p><p></p><p>Tony Fadell：其实生活中的每个决定都是一种冒险，冒的是未来的险。如果你决定在稳定的企业里找份稳定的工作，或者在没那么稳定的企业里找份回报上限更高的工作，那同样都是在冒险。也许有些人会说，我宁愿拿未来冒险，也要享受当下的安全感。在选择工作时要敢于冒险，而不是选择能赚更多钱、公司名头更大或者更安稳的工作。</p><p></p><p>可能眼下是安全了，但在其他方面也隐藏着其他风险，这其中总要有取舍。对于 20 多岁的年轻人来说，如果你满脑子想的都是眼下的安全，那对未来的长期风险可能会没有任何抵御能力。</p><p></p><p>所以没有哪种决策能真正彻底摆脱风险，风险客观存在、渗透一切。大家只需要考虑短期与长期风险，工作与生活风险，再做出最适合自己的判断。但总之，我建议大家最好能主动把自己推进风险当中。只有这样，才能成长。</p><p></p><p></p><blockquote>InfoQ：有人认为当前这个时代给年轻人的机会已经不如以前那么多了，二三十年前（也就是您年轻的时候）IT 行业遍地都是机会，现在则不然。对此您怎么看？</blockquote><p></p><p></p><p>Tony Fadell：所以说什么叫最佳时机？其实你看看三十年前的中国，在三、四十年前，机会并不算多。如今，每一家电车初创企业都有大量发展机会，每一家软件初创公司也是。我们如今正身处气候危机肆虐的时代，我们必须改变已经熟知的一切，所以现在才是遍地机遇。要记住，挑战少机会才少，我觉得我们现在面临的挑战比以往任何时候都多。</p><p></p><p>所以在抱持一种观点之前，一定要认真想想。在这个世界上，大企业和初创公司之内都在一刻不停地推进创新。我一直相信大企业里也有创新，这个是肯定的。所以到底选哪一边要看大家自己的性格，但其实机会是永远都不缺的。</p><p></p><p>我记得 2000 年左右时来过中国，跟那时候比，现在愿意承担风险的人数和金融市场的增量都在下降。他们确实不像几年前那么有底气了，但生活本就是这个样子，起起落落的循环一直在上演，大家必须得习惯这样的起伏震荡。世界总是在上升和下降周期中往复，现在我们身在下降周期，但上升期还会回来。这才是客观现实。人们必须得接受整体环境并非完美的事实，而且我还知道，投资个人和企业的最佳时机，其实就是在经济低迷期，因为这时候别人普遍没有信心。这时候入场最好，因为竞争压力会比较小。</p><p></p><p>所以我觉得现在的下降期其实是个难得的机会。低迷期当然不好，但大家得知道人的一生会经历很多段低迷期，但后面还是会重归上升。我们需要了解如何驾驭这些浪潮，因为世界既不可能永远上升、也不可能永远停滞。</p><p></p><p></p><blockquote>InfoQ：没错，您说市场上有很多机会，我同意您的说法。但目前也有这样一个事实——职场上 35 岁以上的开发者群体其实很难找到好工作了，他们开始思考要不要转向管理岗。他们时常纠结，“我是否该转型成为技术 leader？”、“我适合当经理吗？”、“我还能不能继续写代码或做开发吗？”，对此您怎么看？</blockquote><p></p><p></p><p>Tony Fadell：是的，这个世界上什么样的人都有。有些人喜欢成为出色的工程师和程序员，他们不愿意管人，这没问题。因为也有一类岗位属于技术负责人，他们要管的不是人，而是非常复杂的技术项目，这就把管理跟管人区分开来了。</p><p></p><p>所以大家得审视自己的内心，想清楚自己到底是要成为经理、技术负责人还是工程师。有些人能从工程师成功转型成经理，我就属于这一类，至少能当个合格的领导者。也有些人是伟大的<a href=\"https://qcon.infoq.cn/2022/shanghai/presentation/5070\">工程师</a>\"，他们更适合做技术领导者，而不是管人的领导者，这也是条不错的职业道路。大家不一定非得去管人才算在组织中获得成功。当然，组织自身的设置也得合理才行。</p><p></p><p>所以，当了经理，就没法做程序员。但当了技术主管，大家就能继续做程序员。经理与程序员的冲突，是他们需要建立团队、发展团队、管理团队，再以高管身份指导团队，这才是经理的职责。到这时，大家的使命就不再是编写出好的代码了。很多人会觉得自己是个出色的程序员，但总被人管着。只要自己成为经理，那就不需要听命于他人了，而成了他人需要听命的人物，但其实大家不应该这么想问题。如果大家真的喜欢编程，那就朝着技术领导者的路径前进，去管<a href=\"https://qcon.infoq.cn/2022/shanghai/track/1468\">技术</a>\"、而不是管人。很多企业都提供这类职业路径。人需要超越年龄的限制，而领导工作本身就是这样一种体现。管理不是刚毕业的年轻人能做的，但随着时间推移，我们将逐渐获得这方面能力，而且并不一定需要去管人。</p><p></p><p>我还想再强调一次，要跟着自己的内心走，做自己最擅长的事。通过观察他人，我意识到自己是个优秀的程序员，也是个优秀的工程师。但如果做经理、负责人和设计师，我可以做得比工程师这个角色更好。我想往那个方向探索，而且一路上也冒了不少风险。这条路走得并不一帆风顺，我也失败过好几次。但我也是这样获得了成长，变成了今天的自己。就是因为我愿意让自己身处风险，因为我的内心知道这就是自己的天赋所在，力量所在。但有些人的强项在于编程，我见过这样的人，他们确实不适合去管人。</p><p></p><p>总之，别指望着自己能同时身兼出色领导者、经理和程序员这几个角色。我在行业内工作了 35 年，从没见过这样完美无瑕、不作取舍的情况。</p><p></p><h2>讲好故事，比做好产品更重要吗？</h2><p></p><p></p><p></p><blockquote>InfoQ：我们的大多数读者都是 IT 从业者。你觉得社会上对他们存在刻板印象吗？比如喜欢穿格子衫、不爱说话，不擅长表达自己之类的？</blockquote><p></p><p></p><p>Tony Fadell：他们不善社交。我觉得你说的这些，总结起来就是他们不善社交。但只要想学习，就得跟其他人交流。学习的过程不能只是埋头做事，在网上看资料，更需要跟其他人交谈。如果不参与交流，大家连自己的导师都找不到。</p><p></p><p>所以如果你身为开发者，那除了工作内容和同行之外，最好能跟其他人多谈谈，把技术价值发散开来，这就是建立良好人际关系的意义。你要保持开放的心态和社交习惯，结识不同的人，了解他们在做些什么、聊聊你能帮他们实现什么，并从他们的工作中学习，看看你要如何把这一切变得更好。再有，他们往往也能帮我们与专业之外的从业者建立联系。</p><p></p><p></p><blockquote>InfoQ：您在书中特别强调一项能力，就是要能讲好故事，不管是在职场上还是在创造产品的时候这项能力都很重要。所以您认为讲好故事比做好产品更重要吗？</blockquote><p></p><p></p><p>Tony Fadell：这两点都很重要。我们要有能力讲好关于自己的故事，让人们对这些故事感兴趣，也引导他们对自己的故事感兴趣。这样你就能聆听他们的故事，把经验带回工作当中，或者从中发现新的机会。</p><p>所以我重申一下，社交的核心就是引导他人讲述自己的故事，再把我们的故事讲给对方听。</p><p></p><p></p><blockquote>InfoQ：我觉得您所描述的应该是那种性格开朗的人，他们健谈、外向、善于表达自己。一般产品经理才是这样的人，开发者好像就不太行。</blockquote><p></p><p></p><p>Tony Fadell：最典型的群体肯定是产品经理。但我觉得任何身处经理、董事、CEO 或者其他高级职位的人，都在做管人、领导人的工作，所以他们就必须善于讲故事。所以如果你想要领导大家，或者想要统一思路成为意见领袖，那就需要脚踏实地地讲好真实故事，并由此引起受众们的普遍共鸣。</p><p></p><p></p><blockquote>InfoQ：我觉得产品经理的职责非常宽泛，他们像是个“多面手”。他们似乎需要了解一切、做好一切。好的产品经理必须能够满足客户的需求，还得擅长讲故事。很难想象，一个人如何能身兼这么多技能？</blockquote><p></p><p></p><p>Tony Fadell：归根结底，产品经理代表的是客户的声音，客户的需求。产品经理自身并不是最好的工程师、最好的销售人员，也不是最好的营销人员或者最好的 CEO。但他们最擅长倾听客户的意见，他们会观察产品、听取工程师的反馈、把握销售人员的主张、听取企业内外各方的观点，把所有意见汇总成一个好故事。</p><p></p><p>但产品经理不一定擅长所有事情。他们也有自己的核心职能，跟工程师或者程序员一样的，专注于做好一类工作。他们只是更了解周遭的事物，不仅仅了解产品管理和代码编写，还要真正了解客户、了解竞争、了解实际情况，也了解怎样的开发要求才属于合理预期。产品经理得负责把这些元素通通整理起来。</p><p></p><p>产品经理确实需要了解很多，但他们不需要在具体方向上成为专家，他们最核心的技能就是理解客户、保持同理心，确保产品开发始终保持在向客户期望推进的正确轨道上。</p><p></p><p></p><blockquote>InfoQ：没错，一位优秀的产品经理应该具备您提到的技能。但这些技能并不容易掌握。目前很多产品经理并无法真正理解客户的想法，他们也常常为此感到焦虑。您能分享一些消除焦虑的方法吗？如果一个人想成为一名优秀的产品经理，但不可能在刚开始就一步到位掌握所有技能，那 Ta 该如何一步步接近目标呢？</blockquote><p></p><p></p><p>Tony Fadell：首先就是边做边学。专家不是天上掉下来的，而是创新的产物，是从无到有的过程。所以如果做的是前所未有的尝试，那就没办法仰仗其他专家，因为这个领域的专家还没出现呢。你得承认自己肯定会犯错，然后不断尝试再尝试。就连 Jobs 也不是做什么都能成功。事实上，他接触的很多东西都失败了，但他的成功太过耀眼，甚至最终改变了世界。如果没有之前经历的那些失败，他就不可能理解并创造出后来的成果。</p><p></p><p>我也是一样。所以我们都得认清一点：别单纯把失败理解成工作没做好，失败其实来自我们对某些事物还不够了解。我们不知道自己在做什么，因为正在做的这些其实是前所未有的事物。如果我们想改变世界，就必须接受这个前提，意识到我们要做的东西之前从来没存在过。我们不可能保证成功，我们知道自己在冒险，而且鼓励这种冒险。别在冒险的过程中贴什么成不成功的标签，只要真正努力过，失败也是种成功。</p><p></p><h2>如何在日常琐碎的工作中寻求创新</h2><p></p><p></p><p></p><blockquote>InfoQ：不同公司有不同的企业文化，比如苹果的家长式文化和谷歌的福利文化，您觉得企业文化有好坏之分吗？</blockquote><p></p><p></p><p>Tony Fadell：好坏取决于你到底想做些什么。如果你身为技术专家，想要为其他创新者提供生产产品，那最好是建立一种能在制造流程中实施创新，不断改进产品质量的文化。这样每次改进都对应着一定的创新，而大部分环节仍然保持在可控范围内。这样就相当于是在复制的过程中，成果也在逐步变得完美。而如果是创新文化，或者身处一家持续创新并不断提出新想法的公司，那就完全是另一码事了。是好是坏，完全取决于你的具体目标。目标决定了文化是否合适，比如在制造业企业，制造商要求的高自动化、低成本和速度提升等目标，其实也可以算是某种创新。</p><p></p><p>但归根结底，创新是必需的，成功也是必需的，这样才能为客户提供完美的可用模板。至于那些身处领先地位，强调创新工作的企业，则需要培养一种真正的创新文化来推进探索新事物、容忍失败、从中学习并承受可达高达 80% 的失败比例。</p><p></p><p>而其余 20% 的成功案例已经足够产生深远影响，并发展出前所未有的业务。相比之下，如果制造企业只有 20% 的产品能够正常交货，那业务肯定就完蛋了。所以具体要取决于业务的性质，但两条路线其实都有创新的存在，唯一的区别在于创新比例。但有时候，创新企业可能会像制造企业那样运作，但这就违背了创新理念，最终导致在市场上失去活力。</p><p></p><p></p><blockquote>InfoQ：但很多人认为 Steven Jobs 在追求创新时甚至有点偏执了，他对优秀产品的要求特别高。记得他当初就明确要求 iPhone 必须不能用实体键盘。那在创新当中，我们该怎么把握这种偏执的程度？</blockquote><p></p><p></p><p>Tony Fadell：其实只要问为什么要这么做就行了。iPhone 到底用不用实体键盘并不重要，重要的是怎样把手机跟移动娱乐完美结合起来。其中移动娱乐的部分就是 iPod，生产力和浏览网络则要靠笔记本电脑。了解到这些，那能同时解决这两大需求的最佳技术是什么？我们要怎么把二者融合起来？答案就是，最好用软件键盘，而非实体键盘。如果把答案设定成黑莓那种带实体键盘的设备，那它就太过侧重消息收发需求了。这意味着我们主要考虑用户的消息发送需求，而且为它牺牲了其他。但智能手机没那么简单，它还要涉及其他很多不同功能。</p><p></p><p>接下来的问题就是，我们要怎么在不妥协的前提下同时实现这么多不同功能。这不是非此即彼，而是全都要的心态。所以我们发现软件键盘才是正确的选择。实体键盘主要关注消息收发体验，而软件键盘能同时面向多种功能。</p><p></p><p></p><blockquote>InfoQ：我们都知道创新的意义，我们也都需要创新。但现在大家也非常强调实用主义，尤其在日常工作非常忙碌的情况下，追求创新是不是有点奢侈？大家到底应该怎么在日常琐碎的工作中追求创新？</blockquote><p></p><p></p><p>Tony Fadell：保持创新的一种好办法就是倾听客户的意见。不是对他们的要求照单全收，而是倾听他们的意见。另外要始终保持初学者的心态。换句话说，不断挑战自己的假设，观察新技术，看这些新成果能实现什么、如何改变产品的运作方式，或者能不能造就一种全新的产品。最典型的例子就是 iPod 出现之前和出现之后，随身听这类产品的命运。有了 iPod，人们就不想要随身听了。所以最好能始终保持初学者心态，验证自己的假设。当前处于领先地位，并不代表未来还能继续处于领先地位。大家必须主动挑战自己，如果不挑战自己并借此成长，那终究会有后起之秀出现把我们彻底击败。</p><p></p><p>很多科技巨头之所以被淘汰，就是因为他们太相信自己正在做的一切，误以为自己永远不会被击倒。</p><p></p><p>&nbsp;InfoQ：您在书中提到，自己非常喜欢编程。所以您最初其实是技术人，但同时您也是一位优秀的产品经理。技术人和产品人的视角分别是怎么看待创新的？这两类人看待创新有什么不同吗？</p><p>Tony Fadell：最大的不同就是，如果一个人的智商非常非常高，那应该就能把技术工作做得很出色。但要想成为一名优秀的产品经理，你就得聆听客户的声音、发挥自己的情商、理解他人的需求。而如果一个人智商和情商双高，那就可以把二者结合起来，创造出新产品并随时保持交流。毕竟我们做的一切技术都要匹配另一端的客户，而且必须得跟他人产生共鸣。我们可不是在给机器人造产品。我们经常会打造一些只有极客喜欢的东西，那些技术很强的极客确实愿意买。但普通客户不感兴趣，因为他们搞不明白。</p><p>所以，最重要的就是既客观又感性，既极客又非极客，这才是正确的思维方式。只有技术与智商和情商共同碰撞，才能造就伟大的产品。毕竟归根结底，购买和使用产品的是人，而不是极客。普通人没在技术院校接受过多年训练，他们也不像机器人那样插上就明白要怎么用。他们是人，得考虑人的特性。</p><p>&nbsp;InfoQ：您分享了不少创新方面的经验。您之前也曾在好几家公司工作过，那这些公司的企业文化会不会影响到人们的思维方式？</p><p>Tony Fadell：肯定会。我们之前也提到，生产心态（即机械的生产流程）就是种企业文化，其中强调的是复制、不可失败，一切必须完美无瑕。</p><p>但也有人希望对创新持开放态度，强调应该坦然接受失败。这要求我们摆脱那种一切拿来即用的固定流程，主动拥抱那种以学习、尝试和失败为核心的成长文化。</p><p>这样的人会努力探索新产品、新服务和新趋势，关注新技术的动向。他们经常失败，但他们愿意尝试。而不少企业其实设计出了大量固化流程，扼杀一切与流程不符的行为，而且任何没有绝对数据支持的创新都会成为被打击的对象。</p><p>不少企业虽然嘴上总在说创新，也会稍稍做点尝试，但却没有坚定的支持意愿。他们可能担心市场反馈不好，把产品批得一文不值。如果 Jobs 在经历之前的失败时就停下脚步，那就没有后来一系列成功的创新成果了。他失败了，但从中学到了经验，再试之下又失败了，他就是这样在失败中不断前进，直到达成最终目标。总之，如果企业的主导方针就是别犯错，那就谈不上什么创新了。</p><p>没有哪家企业能每次都做对。具体流程可以有所区别，但对创新的强调都是共通的。</p><p>&nbsp;InfoQ:：我非常赞同您在 The Verge 的采访中提到的，技术应该用来解决已经存在的问题和痛点，而不是制造新的、原来并不存在的问题。在您看来，追求创新的同时应该如何避免制造出新问题和避免脱离实际需求闭门造车？</p><p>Tony Fadell：有时候难免会这样，我愿称之为意外后果。有时候你并不清楚自己在做什么，直到做完了情况才趋于明朗，因为你无法从微光中窥探到整个世界的全貌。就像我在开发 iPhone 的时候，就没有预见到由它掀起的社交移动革命一样。我们当初想的就是要做点手机游戏、移动通信和网络浏览用例。我不知道它能掀直移动社交革命，更想不到它会改变世界。所以在拿出成果并交给其他创造者之前，其实我们是没法做出准确预判的。所以在创造新技术的时候，没必要做太多的分析、警惕或者担心可能由此引发的一切。由发展产生的问题可以用发展来解决，只要努力控制问题的影响范围就可以了。</p><p>事实证明，只有真正面对和接触问题时，才能真正找到解决办法。所以作为一家企业，遇上了真正的问题，那尝试解决就行了。数字毒害与数字成瘾都是类似的问题。人们会用各种各样的方式使用这些设备，我们需要通过某些机制来把握用户的使用习惯、使用屏幕的方式、玩了多少游戏、发了多少消息，或者是相关的其他衡量指标，为此开发相应的工具就行。</p><p>所以如果作为创造者，意想不到的后果永远都会存在。别因噎废食、为此放弃创新，努力摆脱意想不到的后果，或者至少帮助人们意识到自己的错误选择、引导他们远离不健康的用法就好。</p><p>&nbsp;InfoQ：如今的技术变化非常迅速。您是如何培养和保持自己对技术创新的前瞻性的？</p><p>Tony Fadell：我一直在读书，也经常跟其他人交流，跟各种各样的人交流。我相信总有兴趣点存在，我想知道他们关注什么，打算为哪些新事物投资。更重要的是，我也可以投资那些有志改变世界的企业。所以我会跟这些企业家携手工作，他们教授我关于农业、材料学、金融等各个方面的知识。我从他们身上学到了很多。</p><p>所以对我来说，除了多读书和保持好奇心之外，就是跟最优秀的研究员、工程师和营销人员一起工作。他们会结合行业背景教授我知识，我也会一直坚持学习。最重要的是，我身边总有很多特别聪明的人，他们也有旺盛的好奇心，想要用前所未有的新方式解决问题。我跟他们聊得很多，相信他们也从我身上学到了一些知识。</p><p>&nbsp;InfoQ：您如何看待中国的开发者、技术极客和产品经理群体？您认为他们是怎样的一群人？</p><p>Tony Fadell：他们是创新者。纵观这么多有趣的观点和事物，都出自全世界的聪明头脑，中国也有很多很多聪明的头脑。如今，技术和资金已经在世界各地畅通无阻。我认为人和人没有区别，无论是中国、美国、欧洲还是南美洲，都不乏才华横溢的人们。我也跟中国的杰出技术人共事过，他们教会了我很多。所以我愿意跟任何好奇心旺盛、准备创造未来的人们交流，因为他们总是能提供一些新鲜想法。库克大概是从 2003 年初那会开始造访中国，并在这里投入和开发新产品，我也从那时起跟聪明的中国同行们共事的。</p><p>这是段很好的合作关系，我从中学到了很多。</p>",
    "publish_time": "2022-11-10 15:22:27",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "十问物联网操作系统：爆发前夜，国内为何加速涌现多种物联网操作系统？",
    "url": "https://www.infoq.cn/article/oZsT2Kz7XS1BLml85Ju6",
    "summary": "<p>嘉宾 |&nbsp;郭振宇、王佳、汪礼超、刘寿永</p><p>作者 | 凌敏</p><p></p><p>近几年，随着<a href=\"https://www.infoq.cn/article/fEJyy2uOUM2h3NEUFXG9\">物联网</a>\"浪潮席卷全球，物联网操作系统的市场需求实现了大爆发。数据显示，2015-2020 年，全球物联网操作系统市场规模逐年上升，复合增长率达到了 16.95%。与此同时，本土物联网操作系统也进入蓬勃发展期，市场规模也在逐步提升。</p><p></p><p>极客邦科技双数研究院 InfoQ 研究中心调研发现，在国内主流开源操作系统中，物联网操作系统占据了极大的比重。其中，不少物联网操作系统受到了开发者群体的极大关注，从 GitHub / Gitee Star 数来看，包括 HarmonyOS、TencentOS Tiny、AliOS Things、Rt-Thread 等操作系统的 Star 数均在 3k 以上。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/28/2870190a4adb52e08eb462cc4a85483e.png\" /></p><p></p><p>可以看到，国内物联网操作系统市场已经进入了爆发增长期。那么，在这一趋势下，我们到底应该如何理解物联网操作系统？如何破解“碎片化”难题，做好生态建设？物联网操作系统又将走向怎样的未来？……</p><p></p><p>对此，InfoQ 特邀 <a href=\"https://www.infoq.cn/article/h4g17zGGfVYHzpvrj2gD\">OpenCloudOS 社区</a>\" TOC（技术监督委员会）主席、腾讯云副总裁郭振宇，腾讯操作系统研发负责人王佳，腾讯 <a href=\"https://www.infoq.cn/article/KXfZUJyePHDmJBFL2qme\">TencentOS Tiny</a>\" 项目负责人汪礼超，中科创达首席架构师刘寿永一同解读了大家关注的十个焦点问题，共探物联网操作系统的过去、现在与未来。</p><p></p><h4>InfoQ 第一问：什么是物联网操作系统？</h4><p></p><p></p><p>郭振宇：从传统技术角度看，物联网操作系统往往是指运行在物联网芯片、终端上的基础软件栈。以腾讯物联网操作系统 TencentOS Tiny 为例，主要包括操作系统内核（嵌入式 RTOS、嵌入式 Linux 或者全新的微内核）、基础通信协议（以太网、WiFi、蓝牙、2/3/4/5G、NB-IoT、LoRa 等）、物联网应用层协议（MQTT、CoAP、LWM2M、Matter 等）、常用物联网外网组件（文件系统、KV 存储、安全组件、OTA 升级、功耗管理框架、高级语言引擎等）。</p><p></p><p>简而言之，物联网操作系统就是由传统的嵌入式操作系统内核，与若干物联网相关软件栈组成的终端软件平台。从行业应用角度看，物联网操作系统也定位为物联网的全套软件解决方案。例如，智能家居的物联网操作系统，既包括物联网终端的软件栈，也包括边缘网关的软件栈，还包括云上服务、前端应用等。</p><p></p><p>汪礼超：从技术维度来看，物联网操作系统是由操作系统内核以及常见的物联网协议构成，从而打通互联互通的能力。从长远的意义上来考虑，我们需要在一些行业中打通整个行业级的物联网操作系统，不单单包括终端操作系统，还需要融合物联网典型场景，让用户真正感觉到这套系统的便捷性和实用性。</p><p></p><p>刘寿永：我们以前讲的操作系统一般都是指单体设备，比如提到 PC，我们就想到 Windows；提到服务器，我们就想到 Linux；提到手机，我们就想到 Android、iOS。但物联网本身是一个广义的概念，物联网的设备形态非常多样化，品类非常多，大小功能不尽相同，而且一般具有广泛的连接功能。因此物联网操作系统的概念非常泛化。</p><p></p><p>所谓物联网操作系统，其实是一套端、边、云、网、管一体的系统，在这个系统内部，包含了端侧系统、边侧系统、云侧系统，不同的系统之间通过网络互联，相互协作共同完成。 这样多个系统形成的超级系统，也符合操作系统的定义。因此，从操作系统定义上来讲，整个泛在的物联网系统也是一个大的操作系统。</p><p></p><h4>InfoQ 第二问：物联网操作系统浪潮是从什么时候掀起的？</h4><p></p><p></p><p>郭振宇：物联网操作系统基于物联网的概念，在国内从 2015 年左右掀起浪潮。作为万物互联的核心中枢单元，物联网操作系统是真正打通感知层（传感器及物联网终端）、网络层（物联网通信硬件和协议）、应用层（物联网行业应用）的核心构件。</p><p></p><p>作为产业互联网解决方案中的重要组成部分，腾讯从 2017 年起就在物联网领域建设完整的生态链产品布局。为了降低终端厂商和开发者在二次开发上投入的人力、物力成本，腾讯物联网操作系统也在 2018 年启动研发，能支持多种形态物联网终端业务和数据快速接入腾讯云，最大程度上减少终端厂家和开发者的开发周期和成本，吸引更多物联网终端和数据接入腾讯云物联网平台，促进腾讯物联网生态快速发展。</p><p></p><p>对于差异化的物联网终端和硬件而言，只有通过物联网操作系统的协调，才能实现设备互联互通，从而实现物与物、物与人的全场景连接。</p><p></p><p>刘寿永：物联网操作系统的浪潮应该是随着网络和智能化发展开始的，比如 lora、NB 等等，它们使得一些传统的单体设备可以接入到网络当中，通过联网积累了大量的数据，并对其进行智能化处理。云计算的模式能解决一部分问题，但不是全部，有些实时或者量小的，可以在边缘端直接处理，有些时候则需要协同。因此，网联化和智能化催生了物联网操作系统从单一系统泛化发展。</p><p></p><p>操作系统的关键作用就是屏蔽底层资源，调度任务，给开发者提供统一接口。从硬件的角度上来讲，物联网操作系统能有效地统一利用物联网资源；从开发者的角度来讲，有统一的开发接口来简化系统开发；从消费者的角度来讲，简化部署方式，节省成本。</p><p></p><p>汪礼超：在 2014 年之前，大家普遍称其为嵌入式操作系统，这也是物联网操作系统的前身，目前很多比较知名的物联网操作系统都是基于嵌入式操作系统，做了一些物联网的组件支持，并将其打包到一起。随着物联网概念兴起，物联网操作系统浪潮也随之掀起。</p><p></p><h4>InfoQ 第三问：目前国内外物联网操作系统发展到什么阶段了？</h4><p></p><p></p><p>汪礼超：当前，物联网操作系统乃至整个物联网行业都还处于发展初期阶段，并且也没有形成统一的标准。在生态体系中，还没有出现类似 Android 或 Windows 这样能够占据较大市场份额的操作系统。</p><p></p><p>目前，大家在物联网侧用的比较多的操作系统如 FreeRTOS，它其实是一个裸的 RTOS 内核，并不是真正意义上的物联网操作系统。真正的物联网操作系统能够解决物与物相联，或者物与云、物与人之间的一些交流，真正实现互联互通。</p><p></p><p>刘寿永：可以把物联网操作系统分成五个阶段：</p><p></p><p>第一，概念阶段，这个阶段在当前已经过时了，因为大家普遍都能理解物联网操作系统的概念；第二，初级阶段，就是端边云系统工作，目前也已经实现了。第三，中级阶段，也就是设备的系统协同工作、资源的共享调度，目前我们大部分工作还处于这个阶段。第四，出现分布式 API，它让开发者能真正的开发分布式应用，不关心资源、网络等细节，可以分布式部署。第五，自然交互，物联网操作系统除了刚才提到的端边云一体之外，还需要能进行真正的自然交互，如人物交互、物物交互等等，从而形成真正的数字世界。</p><p></p><h4>InfoQ 第四问：物联网操作系统最大的特点是什么？在设计上和桌面操作系统有哪些区别？</h4><p></p><p></p><p>汪礼超：区别非常明显。比如桌面操作系统会偏向于人机交互，特别是针对 UI 层的需求比较多，具体包括一些高级语言应用的开发等等。但物联网操作系统面向的是物与物之间的交流，需要打通不同的物联网终端或者物联网设备之间的通信，之后再去打通物与平台以及用户的链路。所以在物联网操作系统设计中，最核心的问题就是如何实现互联互通，不仅包括终端与终端之间的互通，还包括终端与平台、云、应用、小程序、App 等多个方面的互通。</p><p></p><p>另一方面，像桌面操作系统面向的对象是人，主要与人打交道。与之相比，物联网以及物联网终端的形态更加复杂，需求也是呈现多样化。这也是“碎片化严重”成了物联网行业共识的原因之一。“碎片化”导致物联网操作系统的各种标准、协议很难统一，而在桌面操作系统等领域，业界已经形成了非常标准的，或者大家公认的一套协议。</p><p></p><h4>InfoQ 第五问：国内外有哪些好用的物联网操作系统？它们各自针对哪些场景？</h4><p></p><p></p><p>刘寿永： 目前国内涌现出了很多物联网操作系统，但更多还处于物联网操作的系统的第三阶段，如 RTT、EdgerOS、OneOS 等。其中，有应用在小终端上（传感器一类），有用在边缘设备上，OpenHarmony 是第一个提出分布式概念，同时支持多种终端的物联网操作系统。在物联网的大潮下，中科创达子公司北京奥思维科技有限公司也推出了自己的物联网操作系统 MILOS，通过中间件（OSWare）在传统的操作系统的基础上，来打造泛在 OS，支持多种传统 OS，有连接、管理、任务调度、分布式应用引擎，并支持场景交互。</p><p></p><h4>InfoQ 第六问：从 0 到 1 搭建一个物联网操作系统，主要存在哪些技术难点？</h4><p></p><p></p><p>汪礼超：以 TencentOS Tiny 为例，TencentOS Tiny 的内核是完全自研的，代码规模大概在 1 万行左右。想要把操作系统做到好用，并且降低开发者入门门槛，仍需要很大工作量。</p><p></p><p>其中，比较有技术难度的地方是如何实现协议栈的互联互通。由于当前并没有形成统一的标准，因此在搭建物联网操作系统时，需要考虑如何让用户体验更好。另外，向下，还要考虑对硬件的兼容性，物联网硬件种类繁多，单就芯片来说就有成千上万种；向上，还要解决物联网操作系统与云端、前端小程序等渠道的交互。</p><p></p><p>刘寿永：现在基本上很难从 0 到 1，其实也没有必要，因为物联网操作系统更关注的是跨设备、跨网络、分布式，不关心单体设备，单体设备的资源由传统的操作来负责就可以了。但这里面也有很多技术难点：比如资源抽象、分布式任务、数据管理等等，需要考虑如何设计分布式应用引擎以支持不同的应用，毕竟单体设备资源是不一样的。</p><p></p><h4>InfoQ 第七问：在全真互联时代，物联网操作系统可能会发生哪些改变？</h4><p></p><p></p><p>王佳： 站在操作系统的角度来讲，全真互联会带来更多虚拟的资源以及数据。当前，传统的操作系统管理的是硬件设备层面的数据输入和输出，在全真互联时代，管理的数据不仅局限于此。对物联网操作系统而言，全真互联是一个比较庞大的全新的场景，不同于过去的智慧城市、智慧家居，它构建了一个新的世界。</p><p></p><h4>InfoQ 第八问：“碎片化”一直是物联网的鲜明特点，造成这一现象的主要原因是什么？这给物联网操作系统带来了哪些挑战？</h4><p></p><p></p><p>刘寿永： 主要是需求多样化、设备多样化、网络多样化等等，这对物联网操作系统有以下挑战：第一，自适应性，是不是可以适配不同的设备，是不是有统一的 API 等等；第二，是交互性，即用户体验，它是不是能真正地解决用户的痛点，物联网操作系统要想爆发，需要找到可以爆发的应用。</p><p></p><h4>InfoQ 第九问：生态是操作系统的根本，物联网操作系统如何做好生态建设，生态里的核心参与者需要做些什么？</h4><p></p><p></p><p>郭振宇： 物联网的发展离不开生态的统一建设与行业标准的落地。要做好物联网操作系统的生态，首先要形成相关技术标准，包括硬件接口标准、内核接口标准、物联网协议标准、应用接口标准等。此外，还需要继续提升物联网操作系统的易用性。我们认为，优秀的物联网操作系统不单单是技术上要有优势，同时需要契合用户需求，实现开发者共建生态。</p><p></p><p>好的操作系统，一定是广大开发者和用户用出来的。物联网操作系统需要发展，需要形成良好的生态，无论是技术生态还是应用生态。物联网操作系统需要做到代码简洁清晰，软件架构及逻辑分明，通过封装、功能模块化降低使用者的入门门槛，不断迭代新功能，修复已知问题，最大程度通过开源协同的方式吸引开发者和产品用户参与进来，从实际产品落地中去发现需求，有针对性地解决实际问题，提升操作系统自身的竞争力，形成良好的技术社区、引导开发者生态和应用生态同步发展。</p><p></p><p>基于这样的生态建设目标，腾讯物联网操作系统也在积极发展开源生态，努力发展合作伙伴，扩展 IoT 应用生态。目前已经与多家 MCU/IP 核厂家达成了合作，支持的物联网硬件平台超过了 80 款，除了 MCU 和模组外，TencentOS Tiny 也积极推进终端产品及项目的落地，目前已经形成了AI智慧农业、智能货柜、智慧会议室等方案，拓展智慧行业生态。</p><p></p><p>我们希望，物联网系统生态能通过合作共赢去建设生态，促进国产物联网操作系统发展，推进物联网行业标准制定，解决物联网发展碎片化的问题。</p><p></p><h4>InfoQ 第十问：您如何看待物联网操作系统在接下来 3-5 年的发展？有哪些趋势值得关注？</h4><p></p><p></p><p>郭振宇：物联网是全真互联的重要技术基石之一。从长期来看，物联网将助力实现人、物、环境、世界之间的无限连接，通过实现远程交互，打造多端感应与互联，助力全真互联的落地。</p><p></p><p>由于物的碎片化比较严重，物联网目前仍处于发展早期阶段。物联网设备需要遵循共同的标准，才能够把不同的物收集到的信息整合起来，实现信息在各部分之间的相互传输。未来，我们认为物联网操作系统会向着统一行业标准的方向发展，通过不同行业的细分领域整合形成技术共识。</p><p></p><p>目前，物联网操作系统以嵌入式操作系统内核 + 物联网组件为主。随着物联网需求的进一步增长，会继续迭代和细分。比如，向微内核的方向发展，支持弹性伸缩、资源隔离，支持不同资源和性能的硬件设备；同时，版本形态会针对不同的行业应用进行定制化，形成差异化发展趋势。比如，在车联网方面，逐步演变成车载系统和全栈车机解决方案。</p><p></p><p>刘寿永：物联网操作系统未来会继续向前演化，从连接走向智能，从智能走向自然，从自然走向真正的数字化。开放协作也会越来越重要，物联网是一个超级系统，各个小系统如何能有效的开放、连接、协同非常重要。数字化是终极目标，无论是 web3、元宇宙、智能助手、工业数字化等，最终都是数字化乃至智能数字化的一部分。</p>",
    "publish_time": "2022-11-10 16:42:11",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "开源项目要做好，技术至上为何还不够？| InfoQ《极客有约》",
    "url": "https://www.infoq.cn/article/U5mis6ScVbcSwvt8RP6c",
    "summary": "<p>KusionStack 是开源的可编程云原生协议栈。KusionStack 中的 Kusion 一词来源于 fusion（意为融合） + kubernetes，是基于云原生基础设施，通过定义云原生可编程接入层，提供包括配置语言、模型界面、自动化工具、最佳实践在内的一整套解决方案，连通云原生基础设施与业务应用，连接定义和使用基础设施的各个团队，串联应用生命周期的研发、测试、集成、发布各个阶段，服务于云原生自动化系统建设，加速云原生落地。</p>\n<p>本期《极客有约》直播，我们邀请到了蚂蚁集团的柴树杉聊聊KusionStack项目的开源项目的管理心得。</p>\n<p><strong>直播大纲</strong></p>\n<p>KusionStack开源的原因？<br />\nKusionStack开源社区的治理策略。<br />\n开源项目成功的关键影响因素有哪些？<br />\nKusionStack在社区建设和治理面临的挑战主要有哪些？</p>\n<p><strong>主持人</strong></p>\n<p>李建盛，Linux基金会亚太区开源布道者团队主席，「开源之道」主创</p>\n<p><strong>对话嘉宾</strong></p>\n<p>柴树杉，KusionStack开源负责人，凹语言作者</p>",
    "publish_time": "2022-11-10 16:55:55",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]