[
  {
    "title": "Terraform 1.3，简化重构体验",
    "url": "https://www.infoq.cn/article/t1OYQuveBtsjPBr6ETdx",
    "summary": "<p><a href=\"https://www.infoq.com/hashicorp/\">HashiCorp</a>\"宣布了<a href=\"https://www.infoq.com/terraform/\">Terraform</a>\" <a href=\"https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules\">1.3版本</a>\"发布，该版本引入带有默认值的可选对象类型属性，并扩展了moved 模块的功能。</p><p></p><p>Terraform的<a href=\"https://www.terraform.io/language/values/variables#type-constraints\">类型约束</a>\"让模块作者能够对输入变量的值进行验证。为处理复杂情况，开发者常用object 类型以允许命名属性集合拥有各自的类型。然而，这也就意味着模块使用者需要为所有属性赋值，甚至包括那些与当前任务无关的。</p><p></p><p>在1.3版本中可以为对象属性赋默认值，这个功能最初是在Terraform 0.14版本中实验性质加入支持。下面的例子中展示了定义变量时如何设置默认值：</p><p><code lang=\"javascript\">variable \"buckets\" {\n  type = list(object({\n    name    = string\n    enabled = optional(bool, true)\n    website = optional(object({\n      index_document = optional(string, \"index.html\")\n      error_document = optional(string, \"error.html\")\n      routing_rules  = optional(string)\n    }), {})\n  }))\n}</code></p><p>&nbsp;</p><p>默认参数是可选的，如果不进行指定，Terraform将使用类型中对应的null 值为默认值。如果指定了非空值为默认值，那么这个属性在接收模块中永远非空。当调用者没有设置默认值或调用者明确将属性值设置为null时，Terraform都会设置默认值。</p><p></p><p>在1.1版本中引入了moved 移动块，为重构配置文件中的资源提供了程序化的手段。Terraform会通过每个模块或资源的地址对比新配置与先前状态，移动或重命名对象都会导致Terraform销毁旧地址的对象并在新地址创建新的对象。而借助配置文件的移动块可以让Terraform将旧地址的已有对象视为是当前属于新地址的对象。</p><p></p><p>这种行为与terraform state mv 命令相同，但移动块允许直接在配置文件内追踪资源的移动。在最初的版本中，移动块只支持在同一本地路径内的模块间重构。1.3版本中通过新增在第三方及不同来源模块中重构资源的功能，取消了这层限制。这也包括了从<a href=\"https://cloud.hashicorp.com/products/terraform\">Terraform云端</a>\"托管的私有注册中心，<a href=\"https://registry.terraform.io/\">Terraform注册中心</a>\"，或者任何source 参数中的选项。</p><p></p><p>1.3版本的发布与<a href=\"https://www.terraform.io/language/v1-compatibility-promises\">Terraform v1.0的兼容性承诺</a>\"相符，该承诺表示，1.x的任何版本更新都不会对工作流产生影响，也不需要升级任何工具。虽然大多用户都不会受这次版本升级的影响，但<a href=\"https://www.terraform.io/language/v1.3.x/upgrade-guides?_gl=1*6xqoci*_ga*MjExNzMxNzQyMy4xNjYzODk4MDA0*_ga_P7S46ZYEKW*MTY2Mzg5ODAwNC4xLjAuMTY2Mzg5ODAwNC4wLjAuMA..\">部分行为</a>\"可能会需要额外的升级步骤。比如在1.3版本中，一些未维护的状态存储后端将被废弃，包括：artifactory 、etcd 、manta ，以及swift 。</p><p></p><p>更多关于1.3版本发布的细节可以参考<a href=\"https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules\">文档</a>\"和<a href=\"https://github.com/hashicorp/terraform/releases/tag/v1.3.0\">版本说明</a>\"。Terraform 1.3目前可从<a href=\"https://www.terraform.io/downloads.html\">HashiCorp官网</a>\"下载，也可以在Terraform云端使用。</p><p></p><p>&nbsp;</p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/09/terraform-simplified-refactoring/\">Terraform 1.3 Release Introduces Simplified Refactoring Experience</a>\"</p><p></p><p>相关阅读：</p><p></p><p><a href=\"https://www.infoq.cn/article/wV78kwciwMAqeVxtAlfy\">基础设施即代码：只是漂移管理还不够</a>\"</p><p><a href=\"https://www.infoq.cn/article/MwasczNiyzIY7VCNlwo1\">Docker 之父：Go、Rust 为什么会成为云原生的主导语言？</a>\"</p>",
    "publish_time": "2022-10-05 10:46:54",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]