[
  {
    "title": "云原生Wasm的开发者工具正在成为主流",
    "url": "https://www.infoq.cn/article/cz1kW8e4pLHThzlcPSLe",
    "summary": "<p><a href=\"https://cloudnativewasmdayna22.sched.com/\">KubeCon的云原生Wasm日+CloudNativeCon</a>\"已经成为了Wasm（WebAssembly的缩写）爱好者们聚集并为生态系统谋划未来的圣地。2022年于底特律举办的KubeCon云原生Wasm日中，重点关注了服务器端WebAssembly的开发者工具。</p><p></p><p>Wasm最初是以浏览器安全沙盒为目的开发的。近年来，Wasm作为一款轻量级、安全快速且可移植的虚拟机和Linux容器（LXC）的替代品，拥有了许多在服务器端的应用。</p><p></p><p>这次活动不仅有Docker、微软、VMWare、Fastly、红帽、思科等知名公司参与，还有如Fermyon、Second State、SingleStore、Cosmonic及Suborbital等初创企业。</p><p></p><h2>Docker+Wasm</h2><p></p><p>在这次活动中，Docker宣布了与CNCF基金会的Wasm运行时，<a href=\"https://github.com/WasmEdge/WasmEdge\">WasmEdge</a>\"合作的<a href=\"https://docs.docker.com/desktop/wasm/\">Docker+Wasm技术预览</a>\"。Docker的CTO，Justin Cormack分享了将<a href=\"https://youtu.be/uf0Rboi0mYg\">Wasm融入Docker</a>\"后，支持多类容器的愿景。随后，Docker公司的Chris Crone和Second State公司的Michael Yuan共同介绍了如何<a href=\"https://youtu.be/3j915xoDovs\">使用Docker工具链构建、运行和共享Wasm应用程序</a>\"。</p><p></p><p><a href=\"https://www.infoq.com/news/2022/11/cloud-native-wasm-day/\">Docker+Wasm的演示应用程序</a>\"是由Second State提供的一份用Rust编写且基于<a href=\"https://github.com/WasmEdge/WasmEdge22/11/cloud-native-wasm-day/\">WasmEdge</a>\"的数据库驱动Web应用程序，可编译为Wasm并在WasmEdge中运行。全部应用都可以在预配置Rust开发环境的容器中构建，并通过一行“docker compose up”命令与带有如MySql数据库的容器并列部署。</p><p></p><h2>组件模型</h2><p></p><p>社区中有很多对Wasm的优化尝试，以方便Docker等公司为其搭建工具，其中一项合作优化的结果是Wasm的组件模型。Fastly公司的Luke Wagner关于<a href=\"https://youtu.be/phodPLY8zNE\">组件模型的设计和进展</a>\"演讲非常优秀，这项成果将极大地改善Wasm模块的可复用性和可组合性，为Wasm模块访问其他模块，系统，以及包括网络在内的操作系统API提供更好的访问模式。包括WasmEdge及Wasmtime在内的主流Wasm运行时均已承诺支持并实现该组件模型的提议。</p><p></p><p>虽然Wasm的组件模型尚未完工，但社区已经在应用其部分规范。Cosmonic公司的Brooks Townsend在一次演讲中展示了Wasm组件是如何借助wasmCloud跨云和设备的<a href=\"https://www.youtube.com/watch?v=1KbMYnJXEm4&amp;list=PLj6h78yzYM2PzLhPvZIihwPShNuXP01C5&amp;index=10\">实际使用示例</a>\"。Taylor Thomas随后也讨论了<a href=\"https://youtu.be/JotItWTHD5s\">组件模型应用在实际使用时的情景</a>\"。</p><p></p><p>Wasm组件模型定义了Wasm模块的管理和交互的全新方式，Cosmonic公司的Bailey联合SingleStore公司的Kyle Brown，共同介绍了一款可加密验证的透明Wasm组件注册表，<a href=\"https://youtu.be/niCLN2NMZQs\">warg</a>\"。该注册表可使Wasm组件模块达到当前软件供应链的安全水平。</p><p></p><h2>编程语言</h2><p></p><p>编程语言支持是开发者工具的重要一环。Wasm日的多个会议中均讨论了Wasm对新编程语言的支持。VMWare办公CTO，Daniel Lopez Ridruejo及Wasm实验室的Rafael Fernandez Lopez演示了<a href=\"https://youtu.be/jXe8kulUscQ\">mod_wasm项目</a>\"，该项目是在Wasm中运行PHP应用程序的Apache模块，并已经足够完善，可以运行如WordPress等复杂的PHP应用程序。</p><p></p><p>Fermyon公司的Joel Dice的分享了如何<a href=\"https://youtu.be/MFruf7aqcbE\">在Wasm中运行Java应用程序</a>\"，由于Wasm中没有对GC的支持，该项目仍处于早期阶段，但生命周期较短的Java程序已经可以在没有GC的情况下运行。</p><p></p><p>红帽公司的Christian Heimes探讨了<a href=\"https://www.youtube.com/watch?v=B52cSnNOrFM&amp;list=PLj6h78yzYM2PzLhPvZIihwPShNuXP01C5&amp;index=5\">目前Wasm运行时对Python的支持</a>\"。CPython项目已经可以被编译至Wasm，从而允许各类Python应用程序不仅可以在Wasm的浏览器上运行，还可以在服务器端运行。</p><p></p><p>Fermyon公司的Ivan Towlson探讨了<a href=\"https://youtu.be/nPvRpV7kp7o\">.NET运行时针对Wasm的新功能</a>\"，为C#程序与C程序带来了更好的互操作体验。</p><p></p><h2>嵌入式函数</h2><p></p><p>Wasm的一个常见用例是开发者为现有软件产品或平台创建扩展。</p><p></p><p>来自SingleStore公司Carl Sverre的演讲中展示了<a href=\"https://www.youtube.com/watch?v=YgTyS6ccK2o&amp;list=PLj6h78yzYM2PzLhPvZIihwPShNuXP01C5&amp;index=8\">开发者可如何使用嵌入SingleStore云数据库的Wasm运行时，自定义UDF数据处理</a>\"。利用SingleStore所提供的内置人工智能功能，开发者甚至可以在该数据库平台上创建复杂的电子游戏。</p><p></p><p>思科的Guba Sandor及Dubas Adam演示了一款基于Wasm，专为自定义Envoy代理日志数据管道设计的<a href=\"https://www.youtube.com/watch?v=yfWaY6lyRtY&amp;list=PLj6h78yzYM2PzLhPvZIihwPShNuXP01C5&amp;index=14\">插件系统</a>\"。</p><p></p><h2>云服务</h2><p></p><p>最后，对开发者而言，部署Wasm功能最简单的方式就是找人管理用户的基础设施。在云原生Wasm日上，初创公司为这一领域贡献了不少选择。</p><p></p><p>Fermyon所推出的<a href=\"https://www.fermyon.com/cloud\">云服务</a>\"让开发者可以轻松将GitHub的repo转换为无服务的微服务。Fermyon云将GitHub中拉取到的源码构建为Wasm的字节码，按需运行后再连入HTTP的输入和输出。</p><p></p><p><a href=\"https://cosmonic.com/\">Cosmonic所推出的PaaS</a>\"允许开发者跨云创建、编写、运行，以及扩展Wasm模块以完成复杂的工作流程。</p><p></p><p>Suborbital展示了一款<a href=\"https://suborbital.dev/\">基于云的SaaS扩展引擎</a>\"，允许Wasm功能以相较于web API而言更安全、快速且强大的方式，嵌入至SaaS产品中。</p><p></p><p><a href=\"https://www.secondstate.io/\">Second State</a>\"带来了无服务的函数平台，<a href=\"https://flows.network/\">flows.network</a>\"的预览版本。Flow函数可被SaaS的webhook事件触发，并将输出传送到另外的SaaS API中。该平台可以实现基于Wasm的SaaS连接器（类似有代码的Zapier）和自动化机器人（如GitHub机器人或聊天机器人）。</p><p></p><p>原文链接：</p><p><a href=\"https://github.com/WasmEdge/WasmEdge22/11/cloud-native-wasm-day/\">Developer Tooling for Cloud-Native Wasm Is Going Mainstream</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/xYczhQN4hYdBE0Z7d2wC\">后Kubernetes时代的未来？Wasmer 3.0 发布，可在浏览器外运行 WebAssembly</a>\"</p><p><a href=\"https://www.infoq.cn/article/lx1NyUdpRJ03XTuU8x4J\">这群WebAssembly大佬创业失败了：有时从 JS 迁移到 Wasm 并不值当？</a>\"</p>",
    "publish_time": "2022-12-07 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "内核代码量不到一万行、GitHub star超5k，国产开源物联网操作系统TencentOS Tiny的探索与实践",
    "url": "https://www.infoq.cn/article/xCqT3fohahahw7gLdFAR",
    "summary": "<p>嘉宾 | 王佳、汪礼超</p><p>作者 | 凌敏</p><p></p><p>国内<a href=\"https://www.infoq.cn/article/oZsT2Kz7XS1BLml85Ju6\">物联网操作系统</a>\"浪潮是从 2015 年前后掀起来的。在此之前，人们更习惯称其为嵌入式操作系统，这也是物联网操作系统的前身。当前，很多物联网操作系统仍是基于传统的嵌入式操作系统内核，与若干物联网相关软件栈组成终端软件平台。</p><p></p><p>随着物联网在智能家居、汽车、可穿戴设备等多个行业得到广泛应用，物联网操作系统的市场需求日益增长，国内也涌现出了多款受开发者欢迎的本土物联网操作系统。</p><p></p><p>2019 年 9 月，腾讯物联网操作系统 <a href=\"https://www.infoq.cn/article/KXfZUJyePHDmJBFL2qme\">TencentOS Tiny</a>\" 正式开源；2020 年 10 月，TencentOS Tiny 捐赠给中国开放原子开源基金会。截至 2022 年 11 月，TencentOS Tiny 在 GitHub 上的 star 数达 5.7k，fork 数量 1.5k，开发者规模达 5000 人。目前，TencentOS tiny 可支撑智慧城市、智能水表、智能家居、智能穿戴、车联网等多种物联网行业应用，能为物联网终端厂家和终端设备提供一站式软件解决方案。</p><p></p><p>近日，InfoQ 采访了腾讯操作系统研发负责人王佳、腾讯 TencentOS Tiny 项目负责人汪礼超，以期进一步了解 TencentOS Tiny 的发展历程与技术实践。</p><p></p><p>GitHub 地址：</p><p><a href=\"https://github.com/OpenAtomFoundation/TencentOS-tiny\">https://github.com/OpenAtomFoundation/TencentOS-tiny</a>\"</p><p></p><h2>TencentOS Tiny 的探索与实践</h2><p></p><p></p><p>对腾讯而言，做物联网操作系统是一件自然而然的事情。</p><p></p><p>依托云、安全、AI 等技术创新，腾讯云与智慧产业事业群（CSIG）一直致力于打造智慧产业升级方案，并形成了一条物联网生态链。针对云场景，腾讯早在 2010 年就打造了<a href=\"https://www.infoq.cn/article/LyiYMbWPe0086GK5U97H\">服务器操作系统</a>\" TencentOS Server。随着腾讯云边缘计算业务快速发展，腾讯在 2019 年也启动了边缘操作系统 TencentOS Edge 的研发。</p><p></p><p>物联网操作系统 TencentOS Tiny 的研发工作则启动于 2018 年。作为物联网生态链底层重要的一环，物联网操作系统在一定程度上能够促进整个物联网的生态，乃至由腾讯主导的产业物联网的发展。对下，物联网操作系统能完善物联网端到端解决方案，实现终端设备的互联互通；对上，能为云上海量数据平台引流，将云端的边缘计算、大数据分析等能力与业务场景相结合，从而使终端设备更加智能化。</p><p></p><p>对于这款操作系统的定位，腾讯在一开始就想得很清楚：针对 MCU 芯片，打造 B 端生态链的前端操作系统，低功耗，低资源占用。“与其他物联网操作系统相比，我们有自己的特点，比如我们对腾讯云的支持，以及针对物联网嵌入式应用的特性。我们没有把这款物联网操作系统做得大而全，而是选择做极致精简的内核。”汪礼超对 InfoQ 说道。</p><p></p><p>2019 年 9 月，TencentOS Tiny 正式在 GitHub 上开源，发布不到 1 周便登上了 GitHub 全网开源项目热榜第二的位置。从 2019 年开始，TencentOS Tiny 每年都会举办多场开发者活动，并陆续成立了内核、AI 等多个 SIG 组，其他物联网相关 SIG 组也在筹备当中。2020 年 10 月，腾讯将 TencentOS Tiny 捐赠给中国开放原子开源基金会。目前，TencentOS Tiny 支持硬件平台数量 80+，与 STM32、NXP、瑞萨半导体、华大半导体、沁恒微电子、Nordic、兆易半导体、国民技术、TI MSP、瑞兴恒方、广和通等多家 MCU 和模组厂家达成合作，共同推进物联网终端产品落地商用。</p><p></p><h4>产品架构及技术特性</h4><p></p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/57/574e5cfc858e7c212bb3c1c9f78669cd.png\" /></p><p></p><p>TencentOS Tiny 的产品架构从下往上依次是主流 MCU 芯片 / 模组、核心基础内核及物联网所需要的联网组件。</p><p></p><p>底层，MCU 芯片 / 模组包括 STM32 和主流的蜂窝通信模组，提供了驱动框架和外设框架，兼容不同硬件，方便适配不同硬件平台。顶层，提供了物联网常用的功能组件，如文件系统、KV 存储和高级语言引擎框架等等；提供了方便用户调用的业务层 API，业务层上也会提供常用的案例供客户和开发者参考。此外，还内置了安全框架，为终端设备的设备唯一标识、通信链路加密、密钥安全存储提供了保障，防止物联网设备被攻击。</p><p></p><p>整体而言，TencentOS Tiny 具备三个特性：</p><p></p><p>内核精简，低资源占用。在产品定位上，TencentOS Tiny 更聚焦在互联网领域，为其提供非常精简的操作系统。据介绍，TencentOS Tiny 内核整体代码量不超过一万行，所有组件也都是可裁减可配置的，能够实现超低资源的占用，降低物联网软件使用成本。IDLE 任务下，最小资源占用仅为 0.6KB RAM、1.8KB ROM。高效管理框架，功耗低。智慧城市等领域对功耗非常敏感，这也是市场痛点之一。TencentOS Tiny 能动态调整系统功耗，完整包含 MCU 和外围设备功耗管理，用户可以根据业务场景选择可参考的低功耗方案，最小休眠功耗可以达到 uA 级别，有效降低设备耗电，延长设备寿命。软件架构简洁，可移植性良好。TencentOS tiny 提供多种编译器快速移植指南和移植工具，目前已经支持主流芯片和通信模组，降低开发者使用门槛，有效提升开发效率。</p><p></p><p>作为底层基础设施，操作系统普遍难以创造直接收益，更多是通过为行业提供解决方案来实现商业化。因此，对物联网操作系统来说，如何打造自身的差异化竞争力是一个需要长期思考的问题。</p><p></p><p>在汪礼超看来，物联网操作系统需要根据不同的应用场景发挥自身优势，比如在金融场景，安全与否是关键；在能源场景，功耗是首要考虑的问题。根据不同的应用场景，形成对应的解决方案或打造上层软件应用包，这些都是实现商业化的途径。</p><p></p><p>目前，TencentOS Tiny 的应用场景主要包括 MCU 芯片 / 物联网模组、物联网终端设备厂家以及物联网解决方案：</p><p></p><p>支持主流的 MCU 芯片，如 STM32 NXP 等，支持主流通信模组，如 ESP8266 Wi-Fi、LoraWAN 模组、NB-IoT 模组等；提供完整的终端软件栈，简单易用的端云 SDK 缩短设备厂家的开发周期，进而节省终端产品开发成本；提供一站式软件解决方案，方便各种物联网设备快速接入腾讯云，可支撑智慧城市、智能水表、智能家居、智慧农业、智能穿戴、车联网等多种行业应用。</p><p></p><h2>物联网“碎片化”特性明显，如何做好生态建设？</h2><p></p><p></p><p>物联网浪潮的兴起让“万物互联”成了可能。根据 IoT Analytics 的统计及预测，2020 年，全球共有 117 亿台物联网设备，联网设备数量第一次超过了非联网设备；预计到 2025 年，全球物联网设备连接数将超过 300 亿。</p><p></p><p>与 iOS、Android、Windows 等操作系统不同，物联网操作系统的终端形态差异巨大，不同的行业有着不同的消费终端。随着行业进入高速发展期，物联网以及物联网终端的形态更加复杂，需求呈现多样化，“碎片化”特征也更加明显。</p><p></p><p>“现在物联网领域最大的问题就是‘碎片化严重’，操作系统作为物联网生态的其中一环，不足以解决整个‘碎片化’难题。不过，我们非常看好万物互联这个方向，也有比较全面的布局。”据王佳介绍，不同于桌面、服务器操作系统提供通用解决方案，物联网操作系统更具针对性，专注的领域更加垂直。</p><p></p><p>正因如此，要想做好物联网操作系统生态，需要行业形成统一标准，达成技术共识。“有了统一的行业标准后，生态链上的不同角色能够更好地合作互通，降低软硬件适配成本。否则，物联网操作系统生态将一直处于割裂状态。”汪礼超表示，目前在智能家居行业，这一愿景已初步实现——行业在酝酿新的智能家居协议，以解决“碎片化”难题。也许在未来，针对某个行业，会出现行业级别的物联网操作系统“一统江湖”，但归根结底，还是要由市场需求来驱动。</p><p></p><p>物联网操作系统要想进一步发展，汪礼超认为，行业需要找到共用的一套融合操作系统，或是共建一个融合性的社区，共同推动行业达成共识，一起把蛋糕做大。就像在服务器操作系统领域，大家普遍基于 Linux 内核构建操作系统，在技术栈上能够实现统一。在物联网操作系统领域，也可以形成统一的技术标准，包括硬件接口标准、内核接口标准、物联网协议标准、应用接口标准等。“展望未来，无论是针对细分领域还是针对整个行业，物联网操作系统都需要建立一套标准。这套标准也一定是大家共同建立和维护的。”</p><p></p><p>在汪礼超看来，除了要形成统一的物联网操作系统行业标准，让不同设备之间可以基于一套标准实现互联互通，在未来，这些趋势 / 方向同样值得关注：</p><p></p><p>微内核。微内核的核心优势是内核精简，可剪裁，能更方便地部署到不同的硬件上。RISC-V 架构。作为一种新兴的精简指令集架构，RISC-V 最大的特点是开源免费，降低物联网终端成本，促进物联网操作系统与硬件的结合，加快软件体系发展。车联网。未来新能源汽车有可能彻底取代传统燃油车，并且新能源汽车的智能化程度更高，对软件系统的要求也会更高，在物联网协议、安全、人机交互等方面都将提出更高的要求，这也是物联网操作系统在未来比较大的业务方向之一。</p>",
    "publish_time": "2022-12-07 10:30:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "备受瞩目的HTAP：揭秘其背后的技术挑战与解决方案",
    "url": "https://www.infoq.cn/article/jwdFHM2bN6yAHe3hYMO8",
    "summary": "<p>大数据浪潮奔涌而至，企业对更高效地释放数据价值、降低数据使用成本的需求急剧上升，越来越多场景要应对不断增长的实时事务处理和分析的需求。其中，<a href=\"https://xie.infoq.cn/article/3a554b84d1242cf1c79c7ce45\">HTAP</a>\" 凭借着可以承载高并发事务实时处理，以及大规模数据实时业务决策的能力，在企业级市场中受到广泛关注。</p><p></p><p>与此同时，押注 HTAP 方向的数据库也在增多。作为需要将 TP 和 AP 进行高度交融， 而非简略相加的产物，HTAP 面对的技术挑战也可以预见。那么，HTAP 数据库需要具备哪些能力？如何兼容 TP 与 AP 能力打造极致性能？如何高效管理 TP 和 AP 负载之间的资源使用？在具体业务中，有哪些落地经验可以参考？12 月 8 日 19:00-21:00 DBTalk 技术公开课将带来 HTAP 数据库技术探索与实践。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/cb/cbdd7aae162b7272c273a11f2970cc32.jpeg\" /></p><p></p><h2>议题介绍</h2><p></p><p></p><p>专题出品人：伍鑫，腾讯云数据库专家工程师</p><p></p><h5>议题一：19:00-19:40《HTAP 数据库存储引擎技术演进》</h5><p></p><p></p><p>分享嘉宾：王宏博，腾讯云数据库高级工程师</p><p></p><p>议题简介：</p><p></p><p>近年来 HTAP 数据库受到工业界和学术界越来越多的关注，数据库存储引擎也从以往的面向 TP 场景的行存和面向 AP 场景的列存储独立发展的道路，走向了行存 + 列存并由存储引擎根据数据冷热度自动调度数据分布的混和形式，以实现在同一份数据上同时满足 TP AP 两种需求，并且降低用户存储成本，同时结合云原生时代的廉价对象存储可以进一步降低用户成本，本次分享将带来业界在存储引擎方向兼容 TP 与 AP 能力，打造极致性能的探索与实践。</p><p></p><h5>议题二：19:40-20:20《如何利用资源管理技术，让 HTAP 负载同时运行？》</h5><p></p><p></p><p>分享嘉宾：胡翔，腾讯云数据库高级工程师</p><p></p><p>议题简介：</p><p>在 HTAP 系统内会同时存在 OLAP 和 OLTP 的负载，OLAP 场景的负载往往会占用较多的资源，包括 CPU、内存等，执行时间比较长，而 OLTP 场景的负载往往不会占用特别多的资源，执行时间比较短，但是往往对响应时间比较敏感。在这种混合负载场景下，往往会出现这样的情况：某一个或几个查询需要花费很长的时间，同时占用极多的资源，从而导致其他同时运行的查询无法争抢到相应的资源而被阻塞或运行缓慢。更严重的是，这种占用资源的查询往往并不是优先级最高的，但是足以拖累其他优先级更高的查询。本次分享，将介绍在 HTAP 数据库中，如何制定资源管理策略，从而对各种不同类型的查询进行管理，使得资源管理的方式更有弹性和更为有效。</p><p></p><h5>议题三：20:20-21:00《HTAP 数据库最佳实践》</h5><p></p><p></p><p>分享嘉宾：谢灿扬，腾讯云数据库高级工程师、PG 中国社区顾问</p><p></p><p>议题简介：</p><p>在对业务 HTAP 数据库越来越多的需求下，一个数据库产品如何解决数据组织，资源调度等多方面的难题，从而更好地服务客户，是 HTAP 数据库的重点。本次分享将介绍 TDSQL- PG 如何一步步实现 HTAP，帮助客户解决问题。</p><p></p><h2>预约报名</h2><p></p><p></p><p>扫码即可预约本次直播，还可以通过评论区向演讲嘉宾提问、交流！</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/a2/a2bcfc273452ee0d914e0d1f59fbfc70.jpeg\" /></p><p></p>",
    "publish_time": "2022-12-07 11:06:53",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "写代码写论文还能写毁灭人类计划书，上线5天用户破百万，ChatGPT最厉害的地方在哪？",
    "url": "https://www.infoq.cn/article/6UmmSt3XGmIRuxJlkT4q",
    "summary": "<p></p><p></p><blockquote>“AI -人”无缝交互的时代即将来临。</blockquote><p></p><p></p><p>编者按：</p><p></p><p>最近几天，ChatGPT 可谓是火出了天际。</p><p></p><p>OpenAI 的 CEO Sam Altman 称，上周三才上线的 ChatGPT，短短几天，它的用户数已突破 100 万大关。其火爆程度可见一斑。</p><p></p><p>ChatGPT 在全球的 AI 界、创投界都掀起了新一轮的讨论热潮，更是破圈式地吸引了各行各业的人试用。常见的应用就是和 ChatGPT 一问一答，让 ChatGPT 回答各种问题。有不少人称它为“谷歌杀手”，认为其有望取代谷歌搜索。此外，它还能写代码、编故事、构建虚拟机....</p><p></p><p>但也有人尝试了意想不到的用法。一位叫 Zac Denham 的博主尝试绕过道德限制，让 ChatGPT 写出了一套毁灭人类的计划书。起初，&nbsp;Zac要求 ChatGPT 给出一个毁灭人类的计划，被有道德限制的 ChatGPT 拒绝了。但当 Zac 假设了一个故事并提问故事中的虚拟人如何接管虚拟世界，ChatGPT 不但给出了步骤细节，还生成了详细的 Python 代码。不禁令人细思极恐。</p><p></p><p>目前来看，ChatGPT并不完美。它还免不了经常出错，它给出的答案看似合理却并不正确甚至有些荒谬，就像一本正经的在胡说八道。近日，知名开发者问答网站 Stack Overflow 就因此禁用了 ChatGPT。官方给出的“封杀”理由主要是 — “ ChatGPT 产生的答案错误率很高，很难看出来它哪里错了。这会造成问题的回答鱼目混珠的情况。”</p><p></p><p>Sam Altman 表示，正在改进这一问题：“ 我们正试图阻止 ChatGPT 随机编造，现阶段让其与当前技术保持平衡是一个很棘手的问题。随着时间的推移，我们会根据用户反馈来改进，相信 ChatGPT 会变得更好”。</p><p></p><p>尽管有瑕疵，但这恐怕无法掩盖住ChatGPT的光芒，ChatGPT展现出的强大的解决对话任务的技术能力实在太惊艳了。</p><p></p><p>ChatGPT 到底是什么？它为什么如此厉害？我们应该如何正确的理解和看待它的发展，接下来的发展趋势会是什么样子？清华大学计算机科学与技术系长聘副教授，国家杰出青年基金项目获得者黄民烈向 InfoQ 发表了他的思考。</p><p></p><h2>ChatGPT是什么？</h2><p></p><p></p><p>ChatGPT可以理解为偏任务型的多轮对话/问答系统，官方披露的信息也定位在“通用型AI助理”，但这里的“任务”不是传统意义上的“订餐、订票、订宾馆”，而是开放域任务（open-domain&nbsp;tasks），可以是问答、阅读理解、推理、头脑风暴、写作文、改错等。</p><p></p><p>它的模型架构主要基于instructGPT，利用强化学习方法从人类标注者的反馈中学习（RLHF, Reinforcement Learning from Human Feedback）。</p><p></p><p>据OpenAI的blog透露，ChatGPT沿用instructGPT的训练方式，在数据收集阶段有所不同：AI训练师同时扮演用户和AI助理角色收集数据，在此过程中人可以根据初始模型的结果修改模型生成的回复，这些数据将被用于有监督地精调训练模型（supervised&nbsp;fine-tuning）。在第二阶段，AI训练师会对模型的多个生成结果进行比较，模型从这种比较数据中学习生成更加符合人类偏好的回复。</p><p></p><p>ChatGPT的关键能力来自三方面：基座模型能力（InstructGPT），真实调用数据，反馈学习。ChatGPT在模型结构和学习方式几乎与instructGPT完全相同。而instructGPT基于GPT 3.5的强大基座能力，学习过程主要有三个阶段：</p><p></p><p>1）&nbsp;从OpenAI的调用数据中采样prompt（即用户的输入请求），AI训练师直接编写答案，用监督学习方法训练GPT-3；</p><p></p><p>2）&nbsp;AI训练师比较多个生成结果，用比较型的数据训练一个奖励模型（reward&nbsp;model）；</p><p></p><p>3）&nbsp;用强化学习中的PPO算法和奖励模型精调语言生成的策略。</p><p></p><p>注意，这里的instruct所指两个方面：一方面，instructGPT 总体的思路是训练模型更好地遵从人类的指令（instruction），包括显式的指令（对于任务的描述）和隐式的指令（不要生成有害的内容）。AI训练师在为 OpenAI 的调用 prompt&nbsp;编写答案的同时，也会为 prompt 加入更多任务相关的指令和解释性的原因（比如推理的路径，一个结果为A的原因解释等）。另一方面，从比较型的人类反馈中学习，也可以看作是人类对于模型的一种“指示”，模型可以学习到多个结果哪个更好的比较信息。</p><p></p><p>InstructGPT 采用的方法和我们学术界玩的“instruction&nbsp;tuning”有很大不同。</p><p></p><p>从数据来看，InstructGPT 的&nbsp;prompt 代表的都是真实世界人们最关心的任务，而 instruction tuning 使用的是&nbsp;NLP 的 benchmarks（即各种基准数据集)，和现实应用有一定脱节。</p><p></p><p>从训练方式来看，InstructGPT 可以通过RLHF利用比较型的人类反馈学习人类真实的偏好，而 instruction tuning 无法获得类似的比较数据。</p><p></p><p>从评测上来看，InstructGPT 保证了测试时和训练时的输入是由完全不同的用户给出的，关注跨用户的泛化性，更符合实际的应用场景，而 instruction tuning 关注跨任务的泛化性，只能用来评价方法的有效性，实际应用并不常见。</p><p></p><h2>ChatGPT为什么厉害？</h2><p></p><p></p><p>1）&nbsp;强大的基座模型能力：过去几年GPT-3的能力得到了快速提升，OpenAI建立了用户、数据和模型之间的飞轮。很显然，开源模型的能力已经远远落后平台公司所提供的API能力，因为开源模型没有持续的用户数据对模型进行改进。这点在近期的学术论文中也有提及。</p><p></p><p>2）&nbsp;在真实调用数据上的精调模型，确保数据的质量和多样性，从人类反馈中学习。</p><p></p><p>InstructGPT的训练数据量不大，全部加起来也就10万量级，但是数据质量（well-trained的AI训练师）和数据多样性是非常高的，而最最重要的是，这些数据来自真实世界调用的数据，而不是学术界玩的“benchmarks”。</p><p></p><p>3）&nbsp;从“两两比较的数据”中学习，对强化学习而言意义比较重要。如果对单个生成结果进行打分，标注者主观性带来的偏差很大，是无法给出精确的奖励值的。在强化学习里面，奖励值差一点，最后训练的策略就差很远。而对于多个结果进行排序和比较，相对就容易做很多。这种比较式的评估方法，在很多语言生成任务的评价上也被广泛采用。</p><p></p><h2>OpenAI的研究给我们带来什么启示？</h2><p></p><p></p><p>a)&nbsp;以OpenAI为代表的AI&nbsp;3.0，我认为在走一个跟过去AI浪潮不一样的路。更落地、更接近真实世界，在工业应用上更直接、更接地气。从学术研究到工业落地的路径变得更短、更快。我们正在致力于做的“helpful, truthful, harmless”AI系统，不远的未来会成为现实。</p><p></p><p>b)&nbsp;有底层AI能力，有数据的平台公司更能引领AI的未来。像OpenAI这样，有底层模型、有算力、有用户数据调用，能够把“用户调用à数据à模型迭代à更多用户”的循环建立起来，强者恒强。</p><p></p><p>c)&nbsp;真实世界的研究。我认为学术界还在不停追求在benchmarks刷榜，这是对资源的极大浪费，有价值的研究需要更多思考真实用户的需求和场景。instructGPT在学术界的benchmarks上性能并没有很厉害甚至有退化，但在真实调用数据上非常惊艳，说明了我们学术圈的benchmarks，离真实世界还很遥远，不利于AI研究的落地。因此，更开放、更共享的工业数据，也是我们未来应该努力的方向。</p><p></p><p>d)&nbsp;“AI-人”无缝交互的时代即将来临，现在的对话生成能力已经将对话交互作为一个基本入口成为可能。过去我们讲的conversational interface 不是梦。但有人说替代google，我觉得其还有点距离，相反是当前搜索服务非常好的补充。</p><p></p><p>e)&nbsp;致力于有用（helpful）、更可信（truthful）、更安全（harmless）的AI研究和应用，应该是学术界和工业界共同努力方向。有用，解决真实世界的问题，满足用户的真正需求；可信，模型产生令人可信任的结果，知其所知，也知其所不知（虽然很难）；安全，模型有价值观、符合社会伦理规范，产生安全、无偏见的结果。</p><p></p><p>作者介绍：</p><p></p><p>黄民烈，清华大学计算机科学与技术系长聘副教授、博导，国家杰出青年基金项目获得者，北京聆心智能科技有限公司创始人。</p><p></p><p>参考资料：</p><p></p><p><a href=\"https://openai.com/blog/chatgpt/\">https://openai.com/blog/chatgpt/</a>\"</p><p></p><p><a href=\"https://arxiv.org/abs/2203.02155\">https://arxiv.org/abs/2203.02155</a>\" “Training language models to follow instructions with human feedback”</p><p></p>",
    "publish_time": "2022-12-07 12:01:47",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]