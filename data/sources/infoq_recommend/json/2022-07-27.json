[
  {
    "title": "Java近期新闻：Eclipse Soteria、Log4j、Hibernate ORM和IntelliJ IDEA",
    "url": "https://www.infoq.cn/article/1mogkOw652yV5IGp1pZ8",
    "summary": "<p>Java近期新闻综述，内容主要涉及JDK 19、JDK 20、Spring项目更新、Open Liberty 22.0.0.7和22.0.0.8-beta、Quarkus 2.10.2、Hibernate ORM 5.6.10、Hibernate Reactive 1.1.7、Eclipse基金会项目更新、ASF项目更新、JDKMon 17.0.31和17.0.29，以及JetBrains产品更新。</p><p></p><h3>JDK 19</h3><p></p><p>JDK 19<a href=\"https://jdk.java.net/19/\">早期访问构建</a>\"版本<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-19%2B30\">Build 30</a>\"于本周发布。相比Build 29，Build 30的主要<a href=\"https://github.com/openjdk/jdk/compare/jdk-19%2B29...jdk-19%2B30\">更新</a>\"包括对多处<a href=\"https://bugs.openjdk.java.net/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2019%20and%20%22resolved%20in%20build%22%20%3D%20b30%20order%20by%20component%2C%20subcomponent\">问题</a>\"的修复。具体细节，参见<a href=\"https://jdk.java.net/19/release-notes\">发布说明</a>\"。</p><p></p><h3>JDK 20</h3><p></p><p>JDK 20<a href=\"https://jdk.java.net/20/\">早期访问构建</a>\"版本<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B5\">Build 5</a>\"也于本周发布。相比Build 4，Build 5的主要<a href=\"https://github.com/openjdk/jdk/compare/jdk-20%2B4...jdk-20%2B5\">更新</a>\"包括对多处<a href=\"https://bugs.openjdk.java.net/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2020%20and%20%22resolved%20in%20build%22%20%3D%20b05%20order%20by%20component%2C%20subcomponent\">问题</a>\"的修复，但发布说明尚未提供。</p><p></p><p>欢迎开发人员通过<a href=\"https://bugreport.java.com/bugreport/\">Java Bug Database</a>\"提交<a href=\"https://openjdk.java.net/projects/jdk/19/\">JDK 19</a>\"和<a href=\"https://openjdk.java.net/projects/jdk/20/\">JDK 20</a>\"的软件缺陷。</p><p></p><h3>Spring Framework</h3><p></p><p><a href=\"https://spring.io/projects/spring-shell\">Spring Shell</a>\"正在通往2.1.0版本的道路上，本周推出了的<a href=\"https://spring.io/blog/2022/07/07/spring-shell-2-1-0-rc1-is-now-available\">第一个候选发行（RC）</a>\"版本，主要特性包括：对<a href=\"https://docs.spring.io/spring-shell/docs/2.1.0-SNAPSHOT/site/reference/htmlsingle/#theming\">主题</a>\"功能和交互模式的重写；对实验性Spring Native的完全支持；确保交互命令在非TTY环境中速错机制（Fail-Fast）的改进。更多细节，参见<a href=\"https://github.com/spring-projects/spring-shell/releases/tag/v2.1.0-RC1\">发布说明</a>\"。</p><p></p><p><a href=\"https://spring.io/projects/spring-kafka\">Spring for Apache Kafka</a>\"&nbsp;2.9.0发布了<a href=\"https://spring.io/blog/2022/07/07/spring-for-apache-kafka-2-9-release-candidate-available\">第一个RC版本</a>\"，交付特性包括：对<a href=\"https://docs.confluent.io/platform/current/clients/\">Kafka Clients</a>\"&nbsp;3.2.0的依赖升级；更稳定的非阻塞式Bootstrap重试；<a href=\"https://docs.spring.io/spring-kafka/docs/2.9.0-RC1/reference/html/#default-eh\">DefaultErrorHandler</a>\"类新提供了seekAfterError属性，用于在高错误率和max.poll.records属性定义了非常大的值时，消除非必要的网络压力。更多细节，参见官方文档的“<a href=\"https://docs.spring.io/spring-kafka/docs/2.9.0-RC1/reference/html/#whats-new-part\">What’s New</a>\"”章节。</p><p></p><h3>Open Liberty</h3><p></p><p>IBM已将<a href=\"https://openliberty.io/blog/2022/06/09/time-based-log-rollover-22007-beta.html\">Open Liberty</a>\"测试（Beta）版<a href=\"https://openliberty.io/blog/2022/07/05/logrecordcontext-22007.html\">升级</a>\"为22.0.0.7版，交付功能包括：在<a href=\"https://www.ibm.com/docs/en/ibm-http-server/9.0.5?topic=SSEQTJ_9.0.5/com.ibm.websphere.javadoc.doc/web/apidocs/com/ibm/websphere/logging/hpel/LogRecordContext.html\">LogRecordContext</a>\"类中添加应用名称和相应JSON条目；将堆栈追踪（stack trace）归并为单一日志事件。</p><p>Open Liberty 22.0.0.8-beta已<a href=\"https://openliberty.io/blog/2022/07/07/beta-release-post.html\">发布</a>\"，特性包括：将堆栈追踪从日志消息中分离，以便于下游日志分析工具读取做可视化。</p><p></p><h3>Quarkus</h3><p></p><p>Red Hat发布了Quarkus 2.10.2.Final的<a href=\"https://quarkus.io/blog/quarkus-2-10-2-final-released/\">第二个维护版本</a>\"，该版本交付包括JReleaser 1.1.0、 Hibernate Reactive 1.1.7.Final, Keycloak 18.0.2、smallrye-common-bom&nbsp;1.13.0、Testcontainers 1.17.3和proto-google-common-protos&nbsp;2.9.1等的修复和升级。更多细节，参见<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.10.2.Final\">变更日志</a>\"。</p><p></p><h3>Hibernate</h3><p></p><p><a href=\"https://hibernate.org/orm/\">Hibernate ORM</a>\"&nbsp;5.6.10.Final版<a href=\"https://in.relation.to/2022/07/07/hibernate-orm-5610-final/\">已发布</a>\"，其特性包括：使用<a href=\"https://docs.jboss.org/hibernate/orm/5.6/javadocs/org/hibernate/persister/entity/AbstractEntityPersister.html\">AbstractEntityPersister</a>\"类中定义的resolveDirtyAttributeIndexes()方法改进了内存分配；修复了关联标注为需级联删除的实体在删除时会抛出异常的软件缺陷。</p><p></p><p><a href=\"https://hibernate.org/reactive/\">Hibernate Reactive</a>\"&nbsp;1.1.7.Final版<a href=\"https://in.relation.to/2022/07/05/hibernate-reactive-1_1_7_Final/\">已发布</a>\"，其中修复了一些广受关注的软件缺陷，包括：使用<a href=\"https://hibernate.org/reactive/documentation/1.0/javadocs/org/hibernate/reactive/mutiny/Mutiny.html\">Mutiny</a>\"接口定义fetch()方法的多对一<a href=\"https://github.com/hibernate/hibernate-reactive/issues/975\">惰性关联（lazy association）</a>\"；针对Microsoft SQL Server的<a href=\"https://github.com/hibernate/hibernate-reactive/issues/1342\">分页问题</a>\"等。</p><p></p><h3>Eclipse基金会</h3><p></p><p><a href=\"https://github.com/eclipse-ee4j/soteria/blob/master/README.md\">Eclipse Soteria</a>\"&nbsp;3.0.0版<a href=\"https://github.com/eclipse-ee4j/soteria/releases/tag/3.0.0-RELEASE\">已发布</a>\"。该版本作为<a href=\"https://jakarta.ee/specifications/security/3.0/\">Jakarta Security 3.0</a>\"的兼容实现，特性包括：对<a href=\"https://weld.cdi-spec.org/\">Weld</a>\"&nbsp;SPI实现的修复；初步实现了<a href=\"https://openid.net/developers/specs/\">OpenId Connect</a>\"；<a href=\"https://junit.org/\">JUnit</a>\"&nbsp;4.13.1和<a href=\"https://jsoup.org/\">JSoup</a>\"&nbsp;1.14.2的依赖更新等。</p><p></p><p><a href=\"https://vertx.io/\">Eclipse Vert.x</a>\"&nbsp;4.3.2<a href=\"https://vertx.io/blog/eclipse-vert-x-4-3-2/\">已发布</a>\"，完成了对Vert.x模块中软件缺陷的修复和依赖更新，包括：vertx-web中的<a href=\"https://www.graphql-java.com/\">GraphQL Java</a>\"&nbsp;18.2、Thymeleaf 3.0.15和<a href=\"https://jte.gg/\">jte</a>\"&nbsp;2.1.1；vertx-grpc中的JUnit 4.13.2和gRPC 1.47.0；vertx-dependencies中的Netty 4.1.78.Final。该版本还给出了一份“<a href=\"https://github.com/vert-x3/wiki/wiki/4.3.2-Deprecations-and-breaking-changes\">禁用和颠覆性更改（deprecation and breaking change）</a>\"”，其中包括近期一些CVE（通用漏洞披露，Common Vulnerabilities &amp; Exposures）中提及的jackson-databind模块使用。更多细节，参见<a href=\"https://github.com/vert-x3/wiki/wiki/4.3.2-Release-Notes\">发布说明</a>\"。</p><p></p><p><a href=\"https://github.com/eclipse/eclipse-collections/blob/master/README.md\">Eclipse Collections</a>\"&nbsp;11.1.0已<a href=\"https://github.com/eclipse/eclipse-collections/releases/tag/11.1.0\">发布</a>\"，特性包括根据Java社区要求添加了新的API，以及一些技术债务的清理，包括：尽可能用API工厂模式替换实现其他工厂模式和依赖项；添加缺失的测试以提高测试的整体覆盖；针对源代码、测试代码和资源的不同目标改进了代码生成逻辑。</p><p></p><h3>Apache软件基金会（ASF）</h3><p></p><p><a href=\"https://myfaces.apache.org/\">Apache MyFaces</a>\"正在通往4.0.0版本的道路上，本周发布了<a href=\"https://www.mail-archive.com/announce@apache.org/msg07433.html\">第一个候选发布版</a>\"。该版本作为<a href=\"https://jakarta.ee/specifications/faces/4.0/\">Jakarta Faces Server 4.0</a>\"的兼容实现，新特性包括：为Java中创建视图提供头等（first-class）支持；给出了一种自动无扩展映射的实现；<a href=\"https://jakarta.ee/specifications/platform/9/apidocs/jakarta/faces/context/facescontext\">FacesContext</a>\"类中的getLifecycle()新方法。更多细节，参见<a href=\"https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=10600&amp;version=12349323\">发布说明</a>\"。</p><p></p><p><a href=\"https://quarkus.io/guides/camel\">Apache Camel on Quarkus</a>\"（Camel Quarkus）2.7.2<a href=\"https://camel.apache.org/blog/2022/07/camel-quarkus-release-2.7.2/\">已发布</a>\"，其中包括Camel 3.14.4、Quarkus 2.7.6.Final和一系列的软件缺陷修复。更多细节，参见<a href=\"https://camel.apache.org/releases/q-2.7.2/\">发布说明</a>\"。</p><p></p><p><a href=\"https://camel.apache.org/\">Apache Camel</a>\"&nbsp;3.18.0已<a href=\"https://camel.apache.org/blog/2022/07/RELEASE-3.18.0/\">发布</a>\"，其中包括117处软件故障修复、改进和依赖升级，涉及Testcontainers 1.17.3、Vert.x 4.3.1、Camel Quarkus 2.10.0和Spring Boot 2.7发布系列。更多细节，参见<a href=\"https://camel.apache.org/releases/release-3.18.0/\">发布说明</a>\"。</p><p></p><p><a href=\"https://logging.apache.org/log4j/\">Apache Log4j</a>\"&nbsp;2.18.0已<a href=\"https://www.mail-archive.com/announce@apache.org/msg07416.html\">发布</a>\"，交付的软件缺陷修复和新特性包括：基于<a href=\"https://logging.apache.org/log4j/2.x/manual/thread-context.html\">Thread Context Map</a>\"定义值做过滤的新类<a href=\"https://logging.apache.org/log4j/2.x/log4j-core/apidocs/org/apache/logging/log4j/core/filter/MutableThreadContextMapFilter.html\">MutableThreadContextMapFilter</a>\"；自定义LMAX Disruptor队列的<a href=\"https://logging.apache.org/log4j/2.x/manual/async.html#WaitStrategy\">WaitStrategy</a>\"配置；支持Log4j 1.x Bridge迁移中添加和检索Appender；支持SMTP Appender中<a href=\"https://jakarta.ee/specifications/mail/2.1/\">Jakarta Mail</a>\"声明。</p><p></p><h3>JDKMon</h3><p></p><p><a href=\"https://github.com/HanSolo/JDKMon\">JDKMon</a>\"的<a href=\"https://github.com/HanSolo/JDKMon/releases/tag/17.0.31\">17.0.31</a>\"和<a href=\"https://github.com/HanSolo/JDKMon/releases/tag/17.0.29\">17.0.29</a>\"版于本周向Java社区提供。JDKMon是一种对所安装JDK进行监控和更新的工具，由Azul首席工程师<a href=\"https://de.linkedin.com/in/gerritgrunwald\">Gerrit Grunwald</a>\"创建。这两个新版本的交付特性包括：对<a href=\"https://github.com/foojayio/discoclient/blob/main/README.md\">DiscoClient</a>\"最新版的依赖更新，其中包括修复了软件包URI直接下载；修复了涉及软件包安装目标机体系结构的相关问题。</p><p></p><h3>JetBrains</h3><p></p><p>创建微服务和Web应用的异步框架<a href=\"https://ktor.io/\">Ktor</a>\"&nbsp;2.0.3版<a href=\"https://twitter.com/JetBrainsKtor/status/1543854529720061955\">发布</a>\"，交付特性包括：一些软件缺陷的修复；框架核心、客户端、服务器端和测试等架构部分的改进和依赖更新。更多细节，参见<a href=\"https://ktor.io/changelog/2.0/\">变更日志</a>\"。</p><p></p><p><a href=\"https://www.jetbrains.com/idea/\">IntelliJ IDEA</a>\"正在通往2022.2版的道路上，本周发布了的一个<a href=\"https://blog.jetbrains.com/idea/2022/07/intellij-idea-2022-2-beta/\">测试版本</a>\"，提供的新特性包括：迁移<a href=\"https://github.com/JetBrains/JetBrainsRuntime/blob/main/README.md\">JetBrains Runtime</a>\"（JBR） 11到JBR17；<a href=\"https://blog.jetbrains.com/idea/2022/06/intellij-idea-2022-2-eap-7/\">改进</a>\"了远程开发；支持Spring Framework 6和Spring Boot 3；提供GraalVM Native Debugger for Java的实验性版本；实现了JSON、YAML及.properties字符串值中的可点击URL等。</p><p></p><p>原文链接：</p><p>&nbsp;<a href=\"https://www.infoq.com/news/2022/07/java-news-roundup-jul04-2022/\">Java News Roundup: Eclipse Soteria 3.0, Log4j, Hibernate ORM, IntelliJ IDEA</a>\"</p>",
    "publish_time": "2022-07-27 09:42:26",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "用“业人一体”思维 推动企业研发提质降本增效 | GTLC 南京",
    "url": "https://www.infoq.cn/article/NjrHUDrY2RrZwQTJkYLu",
    "summary": "<p>2022 年 7 月 16 日，由 <a href=\"https://tgo.infoq.cn/join\">TGO 鲲鹏会</a>\"主办的 <a href=\"https://gtlc.infoq.cn/2022/nanjing/\">GTLC 全球技术领导力峰会·南京站</a>\"成功召开，吸引全球 200 余位 CTO、技术 VP、CEO 等科技领导者参与。会上，前华为 / 阿里人力资源总监、《业务为本》作者襄阳郭丹，为与会嘉宾带来《“业人一体”促进“从乱到治”——企业研发的提质降本增效之路 》的主题分享，他认为在企业中存在大量无序的布朗运动，抵消了能量，降低了效益，因此从管理角度分享个体层面的人员选用、培养和激发，项目层面的节奏、组织和协同，以及企业层面的投资立项、产品管理和代际竞争力打造等内容，最终从无序走向有序。我们将演讲内容整理如下，以飨读者。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/34/2f/348c899b6a219137063cb5f25080242f.jpg\" /></p><p></p><p>大家好，我是襄阳郭丹。现在的我是人力资源管理者的身份，但是在十几年前，我也是一名技术人员。1999 年我在南京大学电子系毕业后，开始从事软硬件研发工作。之后因为华为干部发展的需要，转岗到人力资源，不过一直没有脱离技术和研发体系，只不过是用另外一个视角和身份来看待。</p><p></p><p>在近 20 年的职业生涯里面，我不断的思考技术、研发、管理、人力资源之间的关系，并进行交叉融合的思考和实践。在我所著的《业务为本：华为和阿里的 HRBP 价值创造三层十二式》一书中，旗帜鲜明的提出所有的管理者都要“雌雄同体”、“业人一体”才能打胜仗。同时，人力资源要“业务为本”，让助力业务打赢成为 HR 的信仰。</p><p>今天的分享主要分为五部分，首先是企业日常研发过程中很多不合理的情况，以及我们非常想去改变的一些情况；然后分别从组织、团队、人才，三个层面进行实践的剖析。最后，我想用一些案例来说明技术管理者，业务管理者用“业人一体”的思维去分析团队研发的质量、效率、竞争力等问题。</p><p></p><h3>从乱到治，从无序到有序</h3><p></p><p></p><p>我所说的业务是泛指一切为客户创造价值的主流程，包括销售、研发、供应链等。我说的“人”也不是个体的人，而是人力资源管理的泛称，甚至是以业务为本的人力资源管理的泛称。</p><p></p><p>今天我分享的很多案例，是以软件研发场景为主，这里的软件特指一些中大型的软件系统，具有一定的复杂性，大多会出现在 To B 和 To G 的业务场景中。不过大道至简，在其他软件领域，或是软硬一体的研发领域，也可以有所借鉴。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/a6/5b/a6d982ef355af2f795765ff308a2285b.png\" /></p><p></p><p>这个是软件领域的经典名著《人月神话》中开篇提到的焦油坑。这十几年，无论是身处一线，还是站在人力资源看研发，我越来越多的感触到因为大型软件系统的复杂性，以及企业高层领导的现实性，让这个焦油坑又生出了更多的障碍，使我们的突围更艰难。</p><p></p><p>不仅如此，视为成本为中心、组织运行无限、个体自主崛起等，也是干扰团队突围的障碍。比如，企业经营成功是多要素的结果，但经营不善时研发往往背锅，导致压缩资源投入，可能让企业失去未来；大型组织的管理处于焦灼或无序状态，各个团队的“最优解”，难以组成整体系统的“及格解”。每个团队、子系统、项目都达成了目标，系统却面临来自客户和高层的诟病；个体的崛起让好的创意出来层出不穷，但满足客户需求的产品却难觅踪迹。</p><p></p><p>研发是技术，更是工程，要从“乱”到“治”，从无序走向有序。企业中存在大量的布朗运动，导致能量和能力互相抵消，产生浪费、迟滞进度，甚至导致熵死。激发能量并因势利导，将能量“导流”到主业务流程中，实现力出一孔。</p><p></p><p>在组织能量的激发与有序方面，要对需求洞察有锐力，投资决策有魄力，运作拉通有合力；在团队能量的激发与有序方面，要统一明确的目标，坚定执着的信念，同频节奏的步伐；在个体能量的激发与有序方面，要有软件精兵的画像，温度适宜的土壤，赏罚分明的导向。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/16/16a969d4349a7d5a0baaff14fd383325.png\" /></p><p></p><h3>组织能量的激发与有序</h3><p></p><p></p><p>组织层面我主要从客户和企业的角度讲。一款产品做出来，大多数是商业驱动和技术驱动的，中国企业中商业驱动的现象更多。在研发的整个产品管理过程中，存在两个薄弱环节，第一个是“头”，第二个是“尾”。“头”是洞察和规划，“尾”是上市和生命周期管理。</p><p></p><p>产品管理链路中普遍的问题和场景就是，大多数企业中研发和销售“势同水火”。销售会说这个产品不给力，让我们在外面卖不出去；产品研发说销售的临时需求满天飞，一点专业技术含量都没有。我作为人力资源管理者，经常解决这样的问题。在华为有个比较调侃的话，把销售市场叫 MR.Yes，研发叫 MR.Delay，GTS 叫 MR .Sorry，其实就是一个真实的写照。</p><p></p><p>产品的临时需求满天飞，一方面代表产品受市场欢迎，另一方面说明产品本身的规划也有欠缺。要解决这一问题的话，技术负责人要有系统、完备的规划，研发主干要清晰的，研发主干和分支的关系要理清。如果你知道要去哪儿，全世界都会为你让路。将军赶路，不追小兔。航母舰队远航，遇到袭扰也不会改变航向。</p><p></p><p>在需求洞察方面普遍问题和场景是，在产品规划之初洞察非常散，没有给予规划必要的输入；而规划也形成了虚设，束之高阁，研发间不能形成有效的协同配合。因此，企业要学会统一规划产品蓝图和投资决策，提升产品竞争力。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/5d/f6/5dd24de865b32357432c322ba67392f6.png\" /></p><p></p><p>对于这样一个洞察非常散、天马行空的案例，可完全由战略规划部牵头，把其他的组织里面相关人员通过虚拟工作组的方式运作起来，并且在日常的工作中提出下一个阶段里面要专门研究、尽调的专题。</p><p>做好规划后，就要进行投资决策，目前华为和阿里云都使用做了优化和调整后的 IPD 研发流程。如果产品力不能体系化管理，仅依靠突如其来的灵感，或是一两个特别优秀的产品经理，产品力只是停留在想象之中，无法实现落地。</p><p></p><p>投资决策中普遍存在的问题与场景是，产品的立项通过率奇高，或者是立项全凭领导一句话。企业应建设以市场为导向的产品管理体系，用体系来做产品的立项与管理。</p><p></p><p>产品和项目应该有“产品盘点”，要围绕产品的定位、阶段，去看看自己的投资策略，考核与人效，以及组织策略，这也是业人一体的思考方式；有些企业做了产品盘点，但是盘点后的关停并转很多都停留在口头上，需要拿出应有的魄力。</p><p></p><p>企业对创新的投资方面，华为提出的一个思路是要多批次布局创新，在距离 10 亿光年的地方放一粒芝麻，5 亿光年的地方放一个苹果，1 光年的地方放个西瓜，在 1 万公里的时候就范弗里特弹药量压强投入；在创新组织如何放置方面，无论是在母体中孵化还是独立孵化，都各有利弊。我建议一般先在母体孵化，适当的时候就要从母体里面剥离出来。更多的组织，形成了母体、独立战队，以及组织边界之外的三层创新体系。</p><p></p><p>投资完毕后，就进入到运作的阶段。很多企业的组织是按照销售市场、研发、供应链、GTS&nbsp;等这样去划分的，这是一种自驱式的组织管理方式。但客户关心的是，从客户需求到客户满意的端到端要贯通，因此很多企业，特别是大型的企业，除了有硬性的组织结构之外，还有横向的沿着业务主流程，贯穿总的系统的流程体系，我们把它形象的称为“经线”，经线要拉通。</p><p></p><h3>团队能量的激发与有序</h3><p></p><p></p><p>这部分我主要从项目组和项目组团队的角度来讲解。我们知道一个项目大多是跨职能领域的，他们来自于不同的小团队，身上也背负小团队的目标。统一目标是做整个项目过程中，让团队能够消除浪费的最直接手段。OKR 是统一目标的一个可选手段，另外统一目标也可以有更多的方式，比如，正式的项目组的公文任命，里面要体现他的职责和考核标准等。</p><p></p><p>全功能团队可以把团队里面多兵种的思想意识统一，全功能团队有三个层次。在最下面的最小颗粒度的项目组层面的全功能团队，面向一个业务是独立解耦的，面向管理是简单的，面向项目的成员是一专多能的。有很多软件研发组织，探索了架构全功能、特性全功能等作战模式以解决此问题。这又与人力资源有非常紧密的关系，比如组织的运作、考核、任职资格等。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/25/61/256b26e86277c93012c97d1e6b572a61.jpg\" /></p><p></p><p>比项目的全功能更高一层的是项目组合的全功能。在 2016 年的时候，我去支撑公司的业务一号位，去做华为的协议竞争力如何追平思科，甚至在局部实现领先。当时我们建立的全功能分为龙头、主力、中台、后勤。龙头是协议标准与水平解决方案组，主力是特性全功能战队，中台是联合架构优化团队，后勤是技术项目群运作。参考思科的运作，我们把交特性、推标准、打项目，三个目标汇总到一个联合战队中。</p><p></p><p>在项目组合的全功能之上是兵团全功能。从华为的军团任命来看，就是把基础研究的科学家、技术专家、产品专家、工程专家、销售专家以及交付与服务专家等全部汇聚在一个部门，缩短产品周期，通过军团作战，做深做透一个领域。在华为，这个军团是一个实体团队。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/ba/c8/ba195bd2c6159cd6bdfd51046f04c3c8.jpg\" /></p><p></p><p>有目标之后项目开始推进，在此过程中一定要有坚定的信念和战略，它是让团队在艰难困苦中坚定往前走的核心保障。比如阿里云相信在数字经济时代，互联网是基础设施、数据是生产资料、云计算是公共能力。阿里云在数字经济时代的使命，是构建数字经济的基础设施，通过技术普惠千行百业，让天下没有难做的生意；在华为创立之初，体量还非常小之时，都能提出未来三分天下华为必居其一；中小企业的“星星之火”更需要认同和笃定。</p><p></p><p>有了信念之后，在团队层面还要打出节奏，实现同频共振。项目与项目之间的节奏，可以通过投资立项来决定。对于项目组内部的节奏，如果研发项目的周期一旦变长，就会发现开始的激情会慢慢消磨，整个组织变成温吞水的情况，这时研发主管要与对应的人力资源搭档，一起想如何沿着项目的流程，在关键节点通过一些策划来打出节奏、打出心跳，比如仪式感、排兵布阵、实战中提升能力、及时激励等，把管理工作、技术工作、研发工作真正的融为一体。</p><p></p><h3>个体能量的激发与有序</h3><p></p><p></p><p>接下来我讲一下个体的能量的激发和有序。其实在个体的层面存在很多的无序和浪费，对于个体的能量的激发和有序，也遵循我们人才的选用育留的环节。</p><p></p><p>研发是聪明者的游戏，这是一个纯粹的思维逻辑和个人水平的竞技场。互联网时代，有效比效率更重要。我们可能会费很大力气去培养人，但是对选人却不想花费力气，用几个小时就敲定一个百万级的项目。人才画像和任职资格走向一专多能和全栈，还需要工程师的素质特征。</p><p></p><p>选了人之后，我们要用好人。我认为对于研发主管和技术大咖来讲，一定要在团队中营造合适的土壤，这个土壤的第一个维度就是组织环境和政策。组织环境就是要营造一种追求开放、坦诚的，打破等级和隔阂的宽松的氛围，它可以爆发出每一个人的创造性。对于公司和高层来讲，就是发布一些适合软件规律和软件人才特点的政策。比如，薪酬框架、晋升制度、对错误的包容等。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/54/7e/54f3714515d9d0cdbe6db07bb89ccd7e.jpg\" /></p><p></p><p>土壤二是组织架构和角色分工。个体分工带来了专业的积累和“段到段”效率的提升，然而却造成了研发中传递、依赖、等待的大量浪费。比如，临下班的时候来了一个问题，这个问题传到了&nbsp;A&nbsp;模块，A&nbsp;模块分析后发现是&nbsp;B&nbsp;模块的问题，B&nbsp;模块在另一个城市，通过远程的方式完成传输，B&nbsp;模块分析之后传给了&nbsp;C&nbsp;模块，C&nbsp;模块传给了&nbsp;D&nbsp;模块，后续是&nbsp;D&nbsp;模块和&nbsp;A&nbsp;模块联合定位。折腾了一晚上，重新出了补丁，这个问题才解决。从问题定位中来看能力栈的要求，全栈或均衡成为趋势。</p><p></p><p>值得关注的是，（业务 / 软件）架构决定组织，组织决定人才，人才促进架构，管理者能为个体营造的最直接的环境是——组织架构与分工。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/0d/f6/0d571a2f6368c31b2ca95d31e32b79f6.jpg\" /></p><p></p><p>第三个土壤就是人成长是要流动的，基层要稳定，中高层要流动。一个人在一个岗位上时间太久就产生堕怠，或让进一步发展受限。所以管理者要主动人才盘点，促进合理的多向流动，并实现循环中赋能。</p><p>土壤四是情感纽带形成强大的凝聚力。在组织里面幸福感和快乐就是生产力，很多企业里面的情感纽带存在于主管与员工个体之间，其实我们应该把这种情感纽带变成网状的结构。网状结构就会让人们在困难的环境中，会获得强大的社会支持系统，给他带来能量。</p><p></p><p>在目标方面，要有赏罚分明的导向。我认为说所有的工具和方法论归根到底就是 MBO，即基于目标的管理；目标确定后要进行激励，激励要理解人性、匹配需求；一个组织激励意图是不同的，组织里面的激励资源也是有很多的，需要耐心的去盘点；现在很多企业里面非物质激励做得很火，通用的非物质激励的方式很容易借鉴，但是与业务结合的非物质激励还需要多花心思，需要让业务和人力资源紧密结合起来。</p><p></p><h3>“业人一体”来思考质量、效率、竞争力</h3><p></p><p></p><p>以上是我从组织、团队和个体角度的思考和实践。下面我用几个案例简单总结一下，比如如何通过“业人一体”思考效率和有效。一定要从前端的商业和技术需求，而商业和技术需求跟人力资源之间紧密相关，如建产品管理分部，人员的数量、质量、工作方式情况，云化运维技术管理委员会 TMG 的定位等，所有的人力资源管理和业务管理都不是割裂的。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/70/e2/70d23e544bf76f4cfbfd32d61f7a8ce2.jpg\" /></p><p></p><p>如何思考效率与质量？沿着研发的主流程，比如以产品包交付为例，主管可能考虑需求命中率、技术规划，人力管理同步就要去考虑充实对应的组织和人才等等，让他们真正的结合起来。</p><p></p><p>思考技术竞争力方面，看起来是技术和业务的问题，实际上它是管理的问题。如果不从管理的角度思考技术竞争力，则难以真正落地。所有的技术发展都来自于一个远大的宏图远景的牵引，在此背景下，如何找差距、找方向，如何充实组织、人才，让他们有预算、有抓手、有激励并且有发展，是十分重要的。伟大的项目成功必然会带来很多人才队伍的成长，就和两弹一星催生了很多共和国元勋是一样的。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/26/92/26d68a4c742bc1c0ec52dbcf1444b992.jpg\" /></p><p></p><p>今天我讲的内容，如果是简单的“拿来主义”的话是救不了企业的，所有的企业都要因地制宜。我曾经举过华为和阿里的区别，他们的区别本质还是跟创始人团队和早期的业务有关，这才造成了现在的万般变化。我们分享的很多实践等案例，它都是变化的一种，如果想真正的领悟、借鉴，还是应该修炼内功。</p><p></p><p>任正非提出<a href=\"https://www.sohu.com/a/68768193_343325\">乱中求治、治中求乱</a>\"的思想。对于大多数的企业来讲，存在不同程度的混乱，所以要求治，而只有对固化、僵化的企业，才需要求乱。</p><p></p><p>以上是我今天的分享，非常感谢大家！</p><p></p><h4>关于 TGO 鲲鹏会</h4><p></p><p></p><p>TGO 鲲鹏会是极客邦旗下科技领导者聚集和交流的组织，学员由 CTO、架构师、技术 VP、具有技术背景的 CEO 等组成，目前已经在北京、上海、深圳、广州、杭州、成都、硅谷、南京、台北、厦门、武汉、苏州等 12 个城市定期举办学习活动。</p><p></p><p>TGO 鲲鹏会采用了“学员共建”的组织形式，希望通过“共建、自治”的方式维护各城市的健康发展，为学员提供必要的服务，帮助学员个人更好地学习和成长，助力学员企业之间更好地合作与交流。加入 TGO 鲲鹏会，全方位提升自身价值，成为卓越科技领导者！</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/70/28/703f15f0a59ea2978ea29a98f21be028.png\" /></p><p></p>",
    "publish_time": "2022-07-27 10:39:42",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "谷歌云推动公司盈利但仍爆亏，微软云业务增速放缓",
    "url": "https://www.infoq.cn/article/eNJhNsqP1odV7impoLlp",
    "summary": "<p>&nbsp;</p><p>对于科技企业来说，今年是艰难的一年。</p><p>&nbsp;</p><p>当地时间7月26日，谷歌母公司 Alphabet 公布<a href=\"https://abc.xyz/investor/static/pdf/2022Q2_alphabet_earnings_release.pdf\">第二季度财报</a>\"，营收696.85亿美元，同比增长13%。值得注意的是，与 2020 年相比，2021 年第二季度同比增长 62%。相比之下，今年 13% 的增长显得微不足道，甚至创下了2020年末以来最低同比增速。尽管如此，谷歌美股盘后不降反升，一度涨超5%后收窄至2%。</p><p>&nbsp;</p><p>Alphabet 和⾕歌首席执行官 Sundar Pichai 表⽰，搜索和云业务再次推动了公司的盈利。根据财报，谷歌搜索收入达到 400 亿美元，云收入达到62.76亿美元，比 2021 年第二季度增长 35.6%。但本季度，谷歌云营业利润仍然继续爆亏，损失8.58亿美元。</p><p>&nbsp;</p><p>虽然市场认为谷歌未来增长的驱动力仍是谷歌云，不过谷歌的云业务仍远远落后微软和亚马逊：目前谷歌云仍然在烧钱和亏损阶段，而其竞对运营利润率已达到20%以上。微软同日发布的<a href=\"https://www.microsoft.com/en-us/Investor/earnings/FY-2022-Q4/press-release-webcast\">财报显示，</a>\"Azure和其他云服务收入二季度同比增长40%。</p><p>&nbsp;</p><p>总体看，截至 2022 年 6 月 30 日的季度，微软收入为 519 亿美元，同比增长 12%（按固定汇率计算增长16%）；营业收入为 205 亿美元，同比增长 8%；净收入为 167 亿美元，增长 2%。</p><p>&nbsp;</p><p>不过，微软的云业务增速在放缓。微软执行副总裁兼首席财务官 Amy Hood 表示，微软云业务商业预订量增长 25%，收入为 250 亿美元，同比增长 28%，其中智能云业务收入为 209 亿美元，同比增长 20%，与上年同期30%的同比增速相比，明显放缓。而Azure和其他云服务收入本季度同比增长40%，而上一季度该部门同比增46%。</p><p>&nbsp;&nbsp;</p><p>微软首席财务官Amy Hood表示，不计汇率影响，Azure的增速比今年4月预期的低1个百分点。但微软签署的Azure合约数达到了创纪录的1000万份以上，合约价值10亿美元。</p><p>&nbsp;</p><p>此外，随着经济持续疲软，无论谷歌还是微软都将继续冻结招聘。</p><p>&nbsp;</p><p>近期，谷歌宣布暂时<a href=\"https://www.androidpolice.com/google-pauses-hiring-for-two-weeks/\">实施招聘冻结</a>\"，公司将利用这段时间根据优先级审查空缺职位。在谷歌电话会议中，首席财务官 Ruth Porat 表示，公司在招聘方面的行动将在 2023 年更加明显。而根据外媒报道，微软也在取消许多空缺职位，包括 Azure 云业务和安全软件部门。微软方面也对此回应称，在可预见的未来，招聘冻结将继续，但拒绝评论哪些部门和业务受到影响。</p><p>&nbsp;</p><p>&nbsp;</p>",
    "publish_time": "2022-07-27 10:50:07",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]