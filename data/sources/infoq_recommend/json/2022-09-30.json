[
  {
    "title": "深圳国际金融科技大赛「AI前沿应用与赛事通关法宝」",
    "url": "https://www.infoq.cn/article/RrCRTejeMWrOBkGv75G8",
    "summary": "<p><img alt=\"\" src=\"https://static001.infoq.cn/resource/image/b8/52/b8f9e8f3dca702f4e8b9d5282ca5a652.jpg\" /></p>",
    "publish_time": "2022-09-30 02:01:59",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "AutoML：实践者眼中的理想与现实",
    "url": "https://www.infoq.cn/article/UuVWQbEdeXXm6hNkcNDN",
    "summary": "<p>目前关于自动化机器学习（AutoML）的讨论往往混杂着希望与挫败感。</p><p></p><p>驱动机器学习项目自动化的动力是很崇高的。通过简化开发流程，可以让更多没有受过数据科学训练，或是没有可用数据中心的人们也能够使用机器学习项目。</p><p></p><p>但一些供应商所承诺的端到端自动化目前仍不可用。AutoML可以做到很多事，尤其是建模任务，无论是新手小白还是资深数据科学家都能通过AutoML优化自己的工作。但基于目前人工操作与自动化流程的交互，完全自动化流程对于大多数数据科学项目来说，可能永远不会是最佳的选择。除此之外，AutoML工具在公平性、可解释性以及偏见上的表现也让人不甚满意，这些问题基本是当今人工智能与机器学习的关键所在。AutoML系统应将重点放在减少数据工程师和机器学习操作者在机械性任务上花费的时间，并优化不同专业水平的从业者的交互体验。</p><p></p><p>我与几位同事合作，在ACM CHI的“计算机系统中的人为因素会议”中发表<a href=\"https://dl.acm.org/doi/fullHtml/10.1145/3411764.3445306\">论文</a>\"，研究AutoML融入机器工作流的途径。论文深入研究了16位不同领域的应用者，从业务爱好者到资深从业者，分析了他们在AutoML使用方面的情况。</p><p></p><p>我们通过询问受调查者在使用AutoML工具与否时的工作体验和他们对AutoML工具的看法，目的是更好地了解AutoML用户的需求、AutoML工具的优劣势，以及在机器学习开发过程中人类开发者与自动化流程各自的作用。</p><p></p><h2>AutoML的多面性</h2><p></p><p>将机器学习项目中的部分元素自动化处理的想法很合理。数据科学家们大多都有一个梦想，那就是通过简单易用的过程将数据科学平民化，让更多的人能用得上。现今的AutoML解决方案主要分为三类：云供应商解决方案、商业平台，以及开源项目。</p><p></p><h3>云供应商解决方案</h3><p></p><p>谷歌云AutoML、微软<a href=\"https://www.infoq.cn/topic/Azure\">Azure</a>\"自动化机器学习，以及<a href=\"https://aws.amazon.com/sagemaker/autopilot/\">亚马逊SageMaker Autopilot</a>\"，这些托管式计算资源提供的云解决方案优势大多相差无几：与云数据生态系统整合以提供更多端到端支持、现收现付的定价模式、低门槛且无需担心基础设施问题。但它们同时也给项目带来了常见的云服务难题：缺乏可定制性、固定供应商以及不透明的过程。对非专业科学家或是创新者来说，或许无代码解决方案足够吸引人，但在更高级用户眼中，很多情况下不透明的流程是非常让人困扰的。截至到本文发表，目前只有亚马逊SageMaker Autopilot允许用户导出代码和中间结果。无法控制的模型选择和对所使用模型缺乏可见性让大多用户倍感受挫。</p><p></p><p>无独有偶，谷歌、亚马逊和微软在另一类业务中的的解决方案也有类似问题；云供应商试图将解决方案尽可能端到端化，提供更简单易懂的用户体验，但同时也牺牲掉了可见性和自定义选项。举例来说，谷歌的AutoML只会展示最终模型，没有训练代码或是任何训练中的中间结果。微软Azure虽然提供了更多训练过程的信息，但仍然没有训练代码。</p><p></p><h3>商业平台</h3><p></p><p>最为热门的商用AutoML产品是DataRobot和H2O无驱动人工智能平台，其背后的公司力求为商业用户、数据科学家，以及企业内部的计算使用者提供端到端AI和机器学习平台。他们专注于应用启动或数据结果的即时可用。</p><p></p><h3>开源项目</h3><p></p><p>机器学习领域有很多开源项目。其中较为知名的有<a href=\"https://automl.github.io/auto-sklearn/master/\">Auto-sklearn</a>\"、<a href=\"https://autokeras.com/\">AutoKeras</a>\"以及<a href=\"http://epistasislab.github.io/tpot/\">TPOT</a>\"。开源的过程让数据科学和部署领域的精英汇聚一堂，但其所匮乏的部署后处理往往是商业平台最看中的要点。</p><p></p><h2>AutoML能为项目带来什么</h2><p></p><p>研究的受访者表示，尽管受挫但AutoML仍可以让他们的工作更有成效，其中效果最明显的当属建模任务。虽然大多的AutoML供应商都表示他们的产品是“端到端”的，但预处理和后处理阶段基本不受AutoML影响。</p><p></p><p>预处理部分的数据收集、标记以及整理仍是繁琐的人工处理操作。虽然也有一些工具可以协助特征工程并节约时间，但总的来说，大多数从业者在数据准备阶段并不会使用AutoML。</p><p></p><p>在后处理阶段，AutoML确实能提供一部分部署能力。但部署是在MLOps与DevOps之间自动化互动问题上出了名的难搞。以最常见的后处理任务，报告生成和结果分享为例，虽然云托管的AutoML可以自动生成报告和可视化结果，我们的研究却发现用户仍会选择手动修改默认报告。在另一个常见的后处理任务，模型部署方面，只有托管AutoML工具的用户才能享受自动部署，而其安全性与终端用户的体验仍然受限。</p><p></p><p>还未做到端到端的AutoML实际会限制优化的效率；在平台与流程间移动项目成分是非常耗费时间心神的，并且极易出错。</p><p></p><p>AutoML在超参数调整与模型选择方面则更为常见，也更被偏好。</p><p></p><h2>超参数调整与模型选择</h2><p></p><p>许多项目中的超参数配置的可能膨胀到数十亿的数量等级时，自动化是很好的助手。AutoML工具可以穷举各种可能配置并给出打分情况，以加速流程并提升性能表现。这一点也是AutoML面世之初率先推出的可用功能，这一功能的成熟度大概也是其如此受欢迎的原因。在我们所采访的16位用户中，有11人使用过AutoML的超参数调整功能。</p><p></p><p>在建模阶段优化关键基础可以节省大量时间。而用户也发现，我们不能在交给AutoML任务后不管不顾。这一点其实也是AutoML的特点：在用户界面允许的情况下，我们从前人经验中获取到的知识和对场景认知的理解，可以避免部分死胡同。通过限制AutoML进程的范围，我们可以人为大幅降低该步骤的成本。</p><p></p><p>AutoML在模型选择方面的协助，可以让经验丰富的ML从业者不受自己默认观念的影响，快速测试其他模型。我们研究的一位受访者认为，AutoML的模型选择过程是一个“无假设方法”，不受自己习惯和偏好影响。</p><p></p><p>将AutoML用于模型选择可以提升模型开发和测试的效率，也可以让模型的部署更为有效，尽管后者的效果可能并不是很明显。</p><p></p><p>如果模型选择过程没有人工参与的话，无论是数据获取、转换、验证还是分布，都将会非常耗费资源。能够识别出不适合部署的模型以及宝贵的计算资源是否被浪费是至关重要的，否则可能会导致AutoML管道崩溃。许多AutoML工具并不能理解对自己可用的资源数量，从而造成系统故障。人工介入可以缩减可能的模型数量，但这种介入却又与避开操作者默认假设的观念背道而驰。数据科学家或操作者的一个重要作用在于，辨别哪些实验对AutoML系统有价值，哪些是浪费时间的。</p><p></p><h2>认识人工介入的开发</h2><p></p><p>无论是市场宣传或是名字称呼，AutoML平台似乎都暗示了自动化，但用户体验可不是这么说的。没有什么是可以通过简单按钮解决一切的，我们仍然需要人工介入做出决定。然而，工具与人类一起协作可能会比单打独斗要好很多。</p><p></p><p>通过结合人工与自动化策略，提高模型操作者对最终产品的信心与信任度。我们的受访者表示，运行自动化流程可以验证他们想法，也可以用于快速的原型设计。通过人工流程与AutoML流程的并行进行，展示最终结果与人工操作相符，构建模型操作者对AutoML管道的信任度。</p><p></p><h2>可复用性</h2><p></p><p>从某种角度来说，数据科学家确实颇具工匠精神。可复用的自动化流程和可标准化的代码让组织在即使有人员流动，也能保持机器学习和人工智能项目库的长期有效。组织可以更快地创建新的模型，也能够更公平地对比模型。</p><p></p><h2>背景：AI责任的大问题</h2><p></p><p>在现今人工智能发展的阶段，所有的AI从业者都应该开始考虑偏见和平等性的问题，是从道德到社会方向的推动，切实地减少偏见对建立客户、用户以及公众层面的信任非常重要。</p><p></p><p>可解释性的关键在于，我们作为从业者要如何赢得用户的信任。尽管AutoML厂商在努力搭建非偏见的过程和可解释性，我们还有很长的路要走，我们还没能有效地处理可解释性。如果模型的本质可以被揭露，结果的来源能够确定，那么这将对构建信任有很大帮助，如果发现问题也可以即使解决。光是人类的参与并不能完全消除偏见的存在，但如果没有可见性，我们只会助长偏见的发生。可视化之类的透明化机制能够帮助用户了解并信任AutoML，但这还不足以搭建人类与工具所构建模型之间信任和理解的桥梁，人类需要借助代理才能将对AutoML的理解提升至信任的程度。</p><p></p><p>在我们的调查中，从业者会转而采用完全手动的开发，才能对项目拥有期望的用户代理、可解释性以及信任。</p><p></p><h2>人类和自动化的协作关系</h2><p></p><p>当代端到端AutoML系统的高度复杂性是必然的。它们的用户或许来自各行各业，目标也许各不相同，但大抵都是在高压下做着困难的工作。正如我们的研究所发现的，AutoML在机器学习项目中很可能会让压力倍增。</p><p></p><p>“自动化机器学习”从字面上来看似乎意味着通过一个按钮就可以一站式解决所有问题，但实际上机器学习的从业者才是AutoML最宝贵的贡献者和监督者。人类可以提高其效率、有效性和安全性。因此，我们的研究还确定了一套成功的人类与自动化的协作关系所需要考虑的准则：</p><p></p><p>将自动化的重点放在会消耗数据工程流程中宝贵时间的部分。目前每个数据工程师岗位只有2.5位求职者，相比<a href=\"https://marketing.dice.com/pdf/2020/Dice_2020_Tech_Job_Report.pdf\">DICE 2020年技术工作报告</a>\"，每个数据科学家岗位的4.76位候选人以及每个网页开发岗位的10.8位候选人，数据工程师供不应求。建立与用户间的信任，并为用户提供代理。无法为用户提供可见性和可控性的AutoML系统不能在其能够产生影响的现实场景中使用。用户体验和用户界面的开发应适配用户的专业水平。AutoML的未来趋势是为新手和低代码用户开放更多功能。虽然也有用户能够导出原始模型训练的代码，但大多数情况下都会是分心在低影响力的代码上浪费时间，进行无谓的探索。除此之外，新手在面临查看原始模型训练代码的选项时，AutoML系统应能够自行选择适合的模式，将信息与定制化内容提供给用户。将机器学习行家与“新手模式”相匹配只会让用户因为缺乏控制而倍感挫败，相反，机器学习新手也会因为面对太多自己不了解的东西而分散心神。为专家用户提供可互动、多点触碰的探索模式。迭代是ML从业者习惯和必要的工作方式，工具应当推动而非阻挠这种方式。让平台成为不同利益相关者间的翻译，共享真实。让商业用户与机器学习从业者之间的对话受益于平台与其中共享的词汇。提供一个可信赖的对话空间，减轻ML工程师身上的负担。AutoML系统应寻求人工控制与自动化之间的平衡，在最佳的时机采用自动化，并允许人类在最合适的部分，提供语境意识与领域专业知识。</p><p></p><h2>AutoML准备好了吗？</h2><p></p><p>作为工具的集合，AutoML的能力毋庸置疑，但它还需要更彻底的审查。AutoML的各类功能都可以帮助数据科学家们优化结果，提高效率；AutoML也可以提供快速的原型设计；非专科科学家、创新者和资源受限的组织可以借助其采用机器学习。但目前仍没有一个有效的端到端AutoML解决方案。</p><p></p><p>目前的机器学习自动化重点对吗？应该是超参数调整还是数据工程？预期是否合适？</p><p></p><p>在我们的调查中，从业者更倾向于自动化机器学习开发中较为机械的部分，以加快模型的迭代速度。然而，AutoML系统却似乎更倾向选择让用户拥有最多代理的过程。尤其是在偏见相关的问题上，AutoML供应商和从业者都应该要意识到AutoML在模型开发方面的缺陷。</p><p></p><p>机器学习操作（MLOps）也是非常适合自动化的任务，其中包括数据管道构建、模型服务以及模型监控等任务。这些任务可以帮助用户构建模型，而非是普通地将用户从模型构建过程中移除，后者出于透明化和偏见等原因是很不利的。</p><p></p><p>MLOps是一个新兴的领域，需要大量重复性工程工作，其所使用的工具和流程也相对不明确。由于数据工程人才的短缺，平均需要18个月才能填补一个工作岗位空缺，MLOps的出现代表着自动化和标准化的巨大机遇。</p><p></p><p>因此，与其将重点放在AutoML上，我们不如关注机器学习与人工智能自动化的未来能实现多少AutoMLOps的潜力。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/auto-ml-promise-reality/\">AutoML: the Promise vs. Reality According to Practitioners</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/gNJdNAKYeSyD4K9XVASU\">是时候怼一波 AutoML 了</a>\"</p><p><a href=\"https://www.infoq.cn/article/SFeLLh7sS3iIqAlAAV8o\">基于机器学习的自动化网络流量分析</a>\"</p>",
    "publish_time": "2022-09-30 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "在海外大受欢迎的“现代数据堆栈”到底“现代”在哪里了？｜InfoQ《极客有约》",
    "url": "https://www.infoq.cn/article/IQdSQUTqbmgjV5cel8DC",
    "summary": "<p>近几年，现代数据堆栈的概念在海外大火起来，最有名的就是dbt的CEO Tristan Handy在2020年下半年发表的一篇演讲/文章：“The Modern Data Stack: Past, Present, and Future”(The Modern Data Stack: Past, Present, and Future)。其中将现代数据堆栈分成了三个时代：寒武纪大爆发一期（2012-2016），部署（2016-2020），与寒武纪大爆发二期（2020-2025）。</p>\n<p>国内，红点中国的合伙人刘岚也在今年初发表了一篇文章谈到现代数据栈的发展趋势，国内也已经有了一些在这方面布局的企业。那么，现代数据栈这个概念具体在描述什么？解决什么问题？与我们企业内部构建的数据平台、中台、湖仓一体的架构有什么区别和联系？国内企业有这方面的需求吗？</p>\n<p>直播大纲：</p>\n<p>1.如何理解“现代数据堆栈”这个概念？<br />\n2.与传统方式相比，现代数据栈的本质区别是什么？<br />\n3.现代数据堆栈解决的是什么问题？按照“谁痛谁推进”的原则，这个事儿最直接解放的是企业里哪个角色的生产力？怎么解决的？<br />\n4.我们在过去搭建了数据平台、做了中台、落地了湖仓一体，这些与“现代数据堆栈”有什么区别和联系？<br />\n5.国内外目前对这件事情的热度差别很大，具体是什么原因？</p>",
    "publish_time": "2022-09-30 09:21:31",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "我是如何开发和部署一个Chrome扩展程序的",
    "url": "https://www.infoq.cn/article/UuviPCp804XKhIc479o0",
    "summary": "<p>毫无疑问，Chrome是世界上使用范围最广的浏览器。它以出色的性能、实用的开发工具和丰富的扩展而闻名。</p><p>&nbsp;</p><p>当前，Chrome Web商店中有14万个扩展，其中许多已经为开发人员带来了可观的收入。</p><p>&nbsp;</p><p>虽然开发和部署自己的扩展可能听上去比较麻烦，但我将向你展示那有多么简单。</p><p>&nbsp;</p><p>本文将介绍我自己创建和推出第一个Chrome扩展的整个过程。</p><p>&nbsp;</p><p>只要你对HTML、JavaScript有一些基本的了解，就可以按本文介绍的内容进行操作，因为我会介绍这个过程的每个细节。</p><p>&nbsp;</p><p>让我们开始吧！</p><p></p><h1>提出一个创意</h1><p></p><p></p><p>要创建扩展，第一个重要的步骤是提出一个创意。</p><p>&nbsp;</p><p>我的创意是创建一个扩展，利用<a href=\"https://www.youtube.com/watch?v=7ond5eF7L-I&amp;ab_channel=TechGumbo\">谷歌搜索技巧</a>\"帮助人们更轻松地在谷歌上查找信息。</p><p>&nbsp;</p><p>例如，你可以使用关键字site 指定查询结果的来源站点。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/27/27bd6790e268fb7e0d72de778e01fcc8.png\" /></p><p></p><p>如你所见，当我在搜索关键词中加入site:medium.com 时，所有的结果都来自Medium。我的扩展将提供一个输入界面，省去记忆这些关键字的麻烦。</p><p>&nbsp;</p><p>剧透预警！以下是我的扩展提供的界面：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7b/7b0207e734a60d012af36a7ed0dfdca2.png\" /></p><p></p><p>在输入所需字段并点击“搜索”后，它将打开一个新页签，而搜索查询会包含所有关键字。</p><p>&nbsp;</p><p>这就是我的创意。现在，让我们继续看下技术实现。</p><p></p><h1>创建Manifest.json文件</h1><p></p><p></p><p>Manifest.json 是扩展最重要的部分。它把有关扩展功能和元数据的信息提供给浏览器。</p><p>&nbsp;</p><p>因此，提供正确的manifest.json 文件数据至关重要，否则，浏览器将无法得知扩展如何工作。</p><p>&nbsp;</p><p>manifest.json 文件中有许多字段，但只有manifest_version、name、version 是必须的。<a href=\"https://developer.chrome.com/docs/extensions/mv3/manifest/\">这里</a>\"有一个manifest文件，感兴趣的读者可以看一下。</p><p>&nbsp;</p><p>下面是我的manifest.json&nbsp;文件：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/44/445d6682751fe9ba59920cba8268fa50.png\" /></p><p></p><p>以下是每个属性的简单介绍：</p><p></p><p>manifest_version：扩展的manifest版本。我建议使用版本3，因为版本2谷歌很快就不支持了。name：扩展名称。description：扩展介绍。version：扩展版本。谷歌建议初始发布时使用一个小点的版本号，并随着时间推移逐步增大。action/default_popup：定义点击扩展时将打开哪个模态窗口。在这个例子中，我创建了一个popup.html文件作为默认模态窗口（稍后会有详细介绍）。icons：扩展的图标。 谷歌建议使用3种图标尺寸，用于在不同的场景下显示扩展：16x16用于收藏夹、48x48用于扩展管理页、128x128用于Chrome Web商店。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/04/04511f9c9019e79696775fddf861ccd9.png\" /></p><p></p><p>我为扩展制作的图标</p><p>&nbsp;</p><p>根据项目，manifest.json 文件可能会复杂得多。不过，对于我的扩展，这就够了。尽量简单！</p><p></p><h1>将扩展加载到浏览器</h1><p></p><p></p><p>在创建好manifest.json 文件后，下一步是将扩展连接到浏览器。</p><p>&nbsp;</p><p>进入扩展管理页-&gt;保证已开启开发者模式-&gt;点击“加载已解压的扩展程序”。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/1a/1a2d34ff1999aabcff7079db82b26938.png\" /></p><p></p><p>&nbsp;</p><p>然后，选择包含manifest.json 文件的项目文件夹。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/7b/7b62e6402e91df718bb18257d72d6e7a.png\" /></p><p></p><p>&nbsp;</p><p>之后，在扩展管理页上就可以看到新添加的扩展了。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/99/994e2fca1326f2b9425f472a10641e83.png\" /></p><p></p><p>&nbsp;</p><p>我建议将扩展固定到工具栏，那样变更测试会简单些。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b2/b282ace4a9ba72c28f6c6c8c4f6bcbe9.png\" /></p><p></p><p>现在，让我们继续看下功能实现部分的代码。</p><p>&nbsp;</p><p></p><h1>创建弹出模态窗口（HTML）</h1><p></p><p></p><p>从上面介绍的manifest.json 文件中可以看到，default_popup 指向popup.html 文件。该文件包含弹出界面的<a href=\"https://www.w3schools.com/html/\">HTML</a>\"&nbsp;代码。</p><p>&nbsp;</p><p>popup.html文件内容如下所示：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/ba/ba22fad280e228783fcbcc5fccb257ed.png\" /></p><p></p><p>上图展示了每个输入元素在HTML中是如何编码的。为了节省时间，样式使用了<a href=\"https://www.w3schools.com/whatis/whatis_bootstrap.asp\">Bootst</a>\"<a href=\"https://www.w3schools.com/whatis/whatis_bootstrap.asp\">rap</a>\"。</p><p>&nbsp;</p><p>这里需要重点注意的是每个元素都有一个id。我们将使用这些id来获取元素的数据，在点击按钮时执行搜索动作。</p><p>&nbsp;</p><p>那也是我们接下来要介绍的内容，获取输入值，执行搜索动作。</p><p></p><h1>编写弹出逻辑（JavaScript）</h1><p></p><p></p><p>我的扩展逻辑相当简单。它将根据输入值生成搜索查询。</p><p>&nbsp;</p><p>例如，如果搜索值是“how to make money”，而结果来自“medium.com”，那么搜索查询将是“how to make money site:medium.com”。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/70/70e76bbfdefc7f0e56b4570d903ee4b0.png\" /></p><p></p><p>&nbsp;</p><p>下面是代码：</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/01/012898af10b7cda8ee6955d7c0a7cf5f.png\" /></p><p></p><p>如你所见，我将输入值串联起来生成最终的搜索查询。在生成最终的搜索关键词后，打开一个包含该查询的新页签。</p><p>&nbsp;</p><p>逻辑就这些。最后一步是将扩展发布到Chrome Web商店。</p><p></p><h1>发布扩展</h1><p></p><p></p><p>为了将扩展发布到Chrome Web商店，我们需要<a href=\"https://chrome.google.com/webstore/devconsole/register\">注册一个开发者账号</a>\"，并一次性支付5美元的注册费。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/97/97d0ab96638b4a22e4d4ae299d6567be.png\" /></p><p></p><p>&nbsp;</p><p>然后，进入“开发人员面板（Developer Dashboard）”，点击“新建项（New Item）”，创建一个新扩展。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/19/191c685a1ae76ecf49f6827815f4fb3c.png\" /></p><p></p><p>&nbsp;</p><p>接下来，需要填写有关扩展的信息，如描述、类别等。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/c9/c9d21f2d4092da77653f450d83708d70.png\" /></p><p></p><p>&nbsp;</p><p>当一切准备就绪，只需点击提交进行扩展发布审核。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/d9/d93ad9aa4d932754ba34748a9263b2f3.png\" /></p><p></p><p>&nbsp;</p><p>谷歌审核大概需要1到2天。审核通过后，就可以通过商店安装了。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/64/6400c828fd1432a3103e419a2a38abfd.png\" /></p><p></p><p>经过一段时间的等待，我的扩展审批通过并公开发布了（<a href=\"https://chrome.google.com/webstore/detail/smart-search/pnjffcaegchofakchdjegmbokcanhbfe#:~:text=Smart%20Search&amp;text=Google%20search%20tricks-,Smart%20Search%20helps%20find%20information%20on%20Google%20easier%20by%20utilizing,search%20for%20an%20exact%20term.\">试用</a>\"）。</p><p>&nbsp;</p><p>本文要介绍的内容就这些，希望对你有所帮助。感谢阅读！</p><p></p><p>原文链接：</p><p>&nbsp;</p><p><a href=\"https://medium.com/geekculture/how-i-build-and-publish-a-chrome-extension-e8fe37c0f578\">https://medium.com/geekculture/how-i-build-and-publish-a-chrome-extension-e8fe37c0f578</a>\"</p><p>&nbsp;</p>",
    "publish_time": "2022-09-30 09:37:06",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Kubernetes 安全防护终极指南",
    "url": "https://www.infoq.cn/article/IDAGRlr1RAeLg8l6sZTy",
    "summary": "<p>Kubernetes 安全防护终极指南将带您了解保护容器部属安全的重要意义、 Kubernetes 的运行机制、漏洞和攻击载体等关键信息。本指南还提供了包含 Tesla 漏洞事件以及 Kubelet 被攻击事件在内的真实案例。</p>\n<p>除此之外，我们在指南最后整理了一份 CI/CD 生产线中和运行时期间 Kubernetes 部署的安全防护概要快速检查清单，帮助您确保 Kubernetes 部署中的基础设施和应用容器的安全。</p>\n<p>以下为本白皮书目录：</p>\n<p>一、保护容器部署安全的重要意义<br />\n二、Kubernetes 的运行机制<br />\n三、Kubernetes 漏洞和攻击载体<br />\n四、保护整个流水线<br />\n五、CI/CD 生产线安全防护<br />\n六、Kubernetes 节点生产准备<br />\n七、Kubernetes 运行时容器安全防护<br />\n八、Kubernetes 系统和资源安全防护<br />\n九、Kubernetes 环境的审核与合规——安全态势<br />\n十、应用的运行时安全防护——NEUVECTOR 容器安全平台<br />\n十一、Kubernetes 安全防护自动化——这可能吗？<br />\n十二、满足 PCI、GDPR、SOC 2、HIPAA、NIST 合规性要求<br />\n十三、开源 Kubernetes 安全防护工具<br />\n十四、运行时 Kubernetes 安全防护检查清单</p>",
    "publish_time": "2022-09-30 11:45:25",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]