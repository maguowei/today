[
  {
    "title": "Java近期新闻： JReleaser 1.2、Spring Batch、PrimeFaces、Quarkus、JobRunr与Apache Beam",
    "url": "https://www.infoq.cn/article/lf8oLh7w0pphOigclNdG",
    "summary": "<p>最近，Java社区相对比较平静，本期的新闻包括JDK 19、JDK 20、Spring Batch 5.0.0-M5、Quarkus 2.11.3、JReleaser 1.2.0、PrimeFaces 12.0.0-M3、JobRunr 5.1.8、Apache Beam 2.14.0和Apache Johnzon 1.2.19。</p><p></p><h4>JDK 19</h4><p></p><p><a href=\"https://openjdk.org/projects/jdk/19/\">JDK 19</a>\"依然处于<a href=\"https://openjdk.java.net/jeps/3#rc\">发布候选</a>\"阶段，预计GA版本会在2022年9月20日发布。<a href=\"https://jdk.java.net/19/release-notes\">发布说明</a>\"包含了文档的链接，比如<a href=\"https://cr.openjdk.java.net/~iris/se/19/latestSpec//api/index.html\">完整的API规范</a>\"以及一个<a href=\"https://cr.openjdk.java.net/~iris/se/19/latestSpec/apidiffs/overview-summary.html\">标注的API规范</a>\"，后者对比了JDK 18（<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-18%2B36\">Build 36</a>\"）和JDK 19（<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-19%2B36\">Build 36</a>\"）的差异。InfoQ会持续跟进，提供更详细的新闻。</p><p></p><h4>JDK 20</h4><p></p><p>JDK 20的<a href=\"https://jdk.java.net/20/\">早期访问构建</a>\"版本<a href=\"https://github.com/openjdk/jdk/releases/tag/jdk-20%2B12\">Build 12</a>\"发布，它是对Build 11的<a href=\"https://github.com/openjdk/jdk/compare/jdk-20%2B11...jdk-20%2B12\">更新</a>\"，包括对各种<a href=\"https://bugs.openjdk.org/issues/?jql=project%20%3D%20JDK%20AND%20fixversion%20%3D%2020%20and%20%22resolved%20in%20build%22%20%3D%20b12%20order%20by%20component%2C%20subcomponent\">问题</a>\"的修复。关于该版本的更多细节，请参阅<a href=\"https://jdk.java.net/20/release-notes\">发布说明</a>\"。</p><p></p><p>对于<a href=\"https://openjdk.java.net/projects/jdk/19/\">JDK 19</a>\"和<a href=\"https://openjdk.java.net/projects/jdk/20/\">JDK 20</a>\"，鼓励开发者通过<a href=\"https://bugreport.java.com/bugreport/\">Java Bug数据库</a>\"报告缺陷。</p><p></p><h4>Spring框架</h4><p></p><p>经过前段时间的忙碌，最近Spring团队比较安静。</p><p></p><p>在通向<a href=\"https://spring.io/projects/spring-batch\">Spring Batch</a>\"&nbsp;5.0.0的道路上，<a href=\"https://spring.io/blog/2022/08/24/spring-batch-5-0-0-m5-is-available-now\">第五个里程碑版本</a>\"发布，其更新包括：删除<a href=\"https://docs.spring.io/spring-batch/docs/current/api/org/springframework/batch/test/JobLauncherTestUtils.html\">JobLauncherTestUtils</a>\"中Job的自动装配，迁移至JUnit Jupiter以及文档的改进。这个发布版本还升级了依赖，包括Spring Framework 6.0.0-M5、Spring Data 2022.0.0-M5、Spring Integration 6.0.0-M4、Spring AMQP 3.0.0-M3、Spring for Apache Kafka 3.0.0-M5、Micrometer 1.10.0-M4和Hibernate 6.1.2.Final。最后，Spring Batch 5.0.0-M5还弃用了两项内容，分别是用于游标/分页的Hibernate&nbsp;<a href=\"https://docs.spring.io/spring-batch/docs/current/reference/html/readersAndWriters.html#itemReader\">ItemReader</a>\"和<a href=\"https://docs.spring.io/spring-batch/docs/current/reference/html/readersAndWriters.html#itemWriter\">ItemWriter</a>\"接口，取而代之的是基于Jakarta Persistence规范的接口，另外，因为发现在JUnit中存在两个提供相同功能的静态方法，<a href=\"https://docs.spring.io/spring-batch/docs/current/api/org/springframework/batch/test/AssertFile.html\">AssertFile</a>\"类也被弃用。关于该版本的更多信息，请参阅<a href=\"https://github.com/spring-projects/spring-batch/releases/tag/5.0.0-M5\">发布说明</a>\"。</p><p></p><h4>Quarkus</h4><p></p><p>Red Hat<a href=\"https://quarkus.io/blog/quarkus-2-11-3-final-released/\">发布了</a>\"Quarkus 2.11.3.Final，该版本对<a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2108396\">CVE-2022-2466</a>\"进行了全面修复，该漏洞是在<a href=\"https://quarkus.io/guides/smallrye-graphql\">SmallRye GraphQL</a>\"服务器扩展中发现的，它会导致服务器请求无法正确终止。此外，还对mariadb-java-client&nbsp;3.0.7、postgresql&nbsp;42.4.1和42.4.2以及mysql-connector-java&nbsp;8.0.30进行了升级。关于该版本的更多信息，请参阅<a href=\"https://github.com/quarkusio/quarkus/releases/tag/2.11.3.Final\">发布说明</a>\"。</p><p></p><h4>JReleaser</h4><p></p><p><a href=\"https://jreleaser.org/\">JReleaser</a>\"&nbsp;1.2.0版本<a href=\"https://andresalmiray.com/jreleaser-1-2-0-has-been-released/\">发布</a>\"&nbsp;，它是一个简化项目发布的Java工具，该版本的特性包括：支持将<a href=\"https://flatpak.org/\">Flatpak</a>\"作为打包器；允许basedir作为一个命名模板；允许通过Twitter4J在Twitter上发布消息文件，在这个过程中每一行都会是一条单独的消息，并且会跳过空行；它会通过日志发现-add-launcher参数没有传入，进而提供了配置未使用的自定义启动器的方案。另外，还有很多的依赖升级，包括jsonschema&nbsp;4.26.0、github-api&nbsp;1.308、slf4j&nbsp;2.0.0、aws-java-sdk&nbsp;1.12.270 and 1.12.290和jsoup&nbsp;1.15.3。关于该版本的更多信息，请参阅<a href=\"https://github.com/jreleaser/jreleaser/releases/tag/v1.2.0\">发布说明</a>\"。</p><p></p><h4>PrimeFaces</h4><p></p><p>在通往<a href=\"https://www.primefaces.org/\">PrimeFaces</a>\"&nbsp;12.0.0的道路上，<a href=\"https://twitter.com/primefaces/status/1562367103772282880\">第三个候选版本</a>\"已经发布，其特性包括：修复了<a href=\"https://primefaces.github.io/primefaces/11_0_0/#/components/autocomplete\">AutoComplete</a>\"组件在<a href=\"https://myfaces.apache.org/\">Apache MyFaces</a>\"上无法运行的问题；新的showMinMaxRange属性，允许导航范围超过最小/最大日期，其默认值为true；<a href=\"https://primefaces.github.io/primefaces/11_0_0/#/components/datatable\">DataTable</a>\"组件提供了新的showSelectAll属性，在列的标题中会显示“select all checkbox”。更多细节可以在<a href=\"https://github.com/primefaces/primefaces/issues?q=is%3Aclosed+milestone%3A12.0.0-RC3\">问题列表</a>\"中找到。</p><p></p><h4>JobRunr</h4><p></p><p><a href=\"https://www.jobrunr.io/\">JobRunr</a>\"的创始人和主要开发者<a href=\"https://www.linkedin.com/in/ronalddehuysser/\">Ronald Dehuysser</a>\"发布了<a href=\"https://github.com/jobrunr/jobrunr/releases/tag/v5.1.8\">5.1.8版本</a>\"，这是一个在Java中执行后台进程的工具，该版本包含了为后台job服务器关闭指标的功能。</p><p></p><h4>Apache软件基金会</h4><p></p><p>Apache Beam 2.41.0版本<a href=\"https://www.mail-archive.com/announce@apache.org/msg07525.html\">发布</a>\"，它包含了大量的缺陷修正，并且为Python&nbsp;<a href=\"https://beam.apache.org/documentation/transforms/python/elementwise/runinference/\">RunInference</a>\"转换为Java提供了对<a href=\"https://beam.apache.org/releases/javadoc/2.0.0/org/apache/beam/sdk/values/KV.html\">KV</a>\"类的支持。关于该版本的更多信息，请参阅<a href=\"https://beam.apache.org/blog/beam-2.41.0/\">发布说明</a>\"。关于Apache Beam的更深入介绍可以参阅InfoQ的<a href=\"https://www.infoq.cn/article/DNHzwEIkQyJgShdGHz6L\">技术文章</a>\"。</p><p></p><p><a href=\"https://johnzon.apache.org/\">Apache Johnzon</a>\"的1.2.19版本发布，该项目完整实现了JSR 353，即<a href=\"https://jcp.org/en/jsr/detail?id=353\">Java API for JSON Processing</a>\"（JSON-P），和JSR 367，即<a href=\"https://jcp.org/en/jsr/detail?id=367\">Java API for JSON Binding</a>\"（JSON-B）规范，<a href=\"https://twitter.com/rmannibucau/status/1561611201108484097\">发布</a>\"的特性包括：在<a href=\"https://johnzon.apache.org/apidocs/org/apache/johnzon/jsonschema/generator/PojoGenerator.html\">PojoGenerator</a>\"类中对枚举的基本支持；在onEnum回调中添加JSON-Schema；能够确保枚举使用JsonbProperty时，导入它；暴露PojoGenerator类中的toJavaName()方法给子类。关于该版本的更多信息，请参阅<a href=\"https://johnzon.apache.org/changelog.html\">发布说明</a>\"。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/news/2022/08/java-news-roundup-aug22-2022/\">Java News Roundup: JReleaser 1.2, Spring Batch, PrimeFaces, Quarkus, JobRunr, Apache Beam</a>\"</p>",
    "publish_time": "2022-09-13 09:07:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "Stack Overflow 2022报告：亚马逊云科技的软件开发“武器库”",
    "url": "https://www.infoq.cn/article/69cDiK84CkeW7CEZXg9j",
    "summary": "<p></p><p>前不久，备受期待的 Stack Overflow 2022 年度开发者调查报告终于出炉。作为软件开发行业最具专业性和影响力的开发者调研活动，Stack Overflow 收集了全球 180 个国家和地区的开发人员反馈，涵盖流行的操作系统、编程语言、框架和库、云平台、数据库、机器学习技术等多个细分主题。</p><p></p><p>Stack Overflow 在报告中表示，收回的 5 万 6 千份有效回复体现出了一些对塑造当今软件开发和实践的工具和环境的深刻见解（great insights）。这些结果也有助于我们在技术选型和开发环境选型时进行参考，因此我们摘取了部分亮点进行解读。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f0/f0af2106a2bc8e11805bbc200c7025fc.jpeg\" /></p><p></p><p></p><h2>云原生开发</h2><p></p><p></p><p>Stack Overflow 年度报告的“云平台”调查问题希望了解开发者在过去一年中主要在哪些云平台中进行开发工作。在针对专业开发者群体中，亚马逊云科技以 51.01% 的比例位列第一，其次是 Azure、Google Cloud 以及 Firebase。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/82/82d634a683fbcdbfbe8230e15a3bd65b.jpeg\" /></p><p></p><p></p><h3>从本地开发到云原生开发的演进</h3><p></p><p></p><p>在调查结果中，有的平台在 IDE 和云端开发环境上特别有优势，有的平台是基于云原生的平台即服务（PaaS），使软件开发人员可以无需担心底层基础架构就能轻松部署代码，有的是用于创建移动和 Web 应用程序的统一后端即服务 (BaaS) 平台。</p><p></p><p>处于第一位的是亚马逊云科技。亚马逊多年持续投入建设云开发环境，也有对应的一些产品。亚马逊云科技于 2017 年发布了 Cloud9 IDE，前身是一个著名的 WebIDE 开发平台。2019 年，亚马逊云科技发布了 Cloud Development Kit（CDK）云开发工具包，它是一项基础设施即代码服务，封装了亚马逊云服务的配置细节和粘合逻辑。另外，亚马逊还提供了基于云开发平台的 Serverless 架构、DevOps 一体化等诸多功能，实现生态的闭环。</p><p></p><p>从 Stack Overflow 的报告可以看出，基于云的开发平台，已经成为了各厂商的必争之地。虽然本地化开发目前还很普遍，但是云开发也有一些显著的好处。比如说在传统的软件开发方法中，开发者一般是在自己的电脑上进行开发和测试，然后在物理机或云上运行，但一些 CPU 和内存密集型的任务，在某些情况下编译或测试可能非常耗时且占用大量资源。然而大多数工程师的电脑有 CPU 和内存的限制，编译会浪费大量时间。开发环境上云之后，云服务就足以解决存储、计算资源上的弹性需求，云上按需计费也能节省边际成本。</p><p></p><p>另外，云上协同开发还可以让团队之间共享统一的预定义环境，不需要一而再地处理不同的平台、工具、版本和依赖项，一致的编译、测试环境让团队成员无需配置复杂环境即可上手，甚至可以突破时间、地域限制，让处于全球范围内、不同工作时间的开发团队使用统一的、定制的环境。云开发也意味着应用程序从开发、集成到测试、部署和生产都在使用一致的环境，有助于减少可能在生产中暴露出来的错误和其他问题的数量。</p><p></p><p>自前几年起，Kubernetes 和 Docker 开始流行，容器化技术让应用程序更加具有可移植性，这意味着它可以在任何云环境上运行，并且只需少量集成工作。而随着云原生技术的发展，原始定义现在可以扩展到包括一系列技术，而不是与容器严格相关，例如 Serverless 和流式传输等，能够让开发者更充分利用云计算模型，在云中设计、开发和运行工作负载也更加容易。</p><p></p><p></p><h3>Serverless 架构</h3><p></p><p></p><p>Serverless 是云原生技术发展的高级阶段。Serverless 最早的框架产品源于 2014 年亚马逊推出的 Amazon Lambda。Lambda 的推出开启了云计算的新时代，之后所有的大厂都在跟进，比如微软、谷歌、IBM 都先后推出自己的 Serverless 产品。在这之后，Serverless 也从愿景层面逐步走向落地，在企业里应用开来。</p><p></p><p>从最初认为 Serverless 是 FaaS（函数即服务），到 FaaS（函数即服务）和 BaaS（后端即服务）的集合，人们对 Serverless 的认知不断的变得清晰。对亚马逊云科技这样的云厂商而言，Serverless 不仅局限于计算服务，而是指一种端到端的架构。除了我们比较常提起的 Lambda 外，还覆盖了计算、存储、网络、容器、数据库等，集成多个方面的服务，才能快速地构建现代化应用。</p><p></p><p>开发人员在使用 Serverless 服务和架构时，只需要关注业务逻辑，不再需要部署、管理或扩展服务器。云服务本身可以快速、无缝地自动扩展，以适应流量峰值。</p><p></p><p>事件驱动型架构（EDA）是一个典型的 Serverless 架构，常见于使用微服务的现代应用程序，或者有解耦组件的任何应用程序。它以事件为媒介，实现组件或服务之间最大松耦合的方式。现在的企业，普遍采用了微服务架构，而结合微服务和事件驱动架构，能更好地解决关键业务的实时、可扩展等问题。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/f5/f53d8727d4ba4515224221c2c31fc903.png\" /></p><p></p><p>事件驱动型架构有三个主要组成部分：事件发起者、事件路由器和事件使用者。事件源产生事件，并将事件发布至事件路由器。事件路由器进行事件筛选并推送给相应的事件使用者。事件使用者或者处理事件，或者受事件影响，并为之采取相应的操作。通过此架构，事件源和事件使用者解耦，从而使它们能够独立扩展、更新和部署。</p><p></p><p>使用事件驱动型架构的优势也是十分明显的，通过解耦，使服务之间相互独立，利于扩展和提高可用性。同时，使用事件路由器 Amazon EventBridge 或 Amazon Simple Notification Service（SNS）将帮助筛选并将事件推送给使用者，无需编写自定义代码，大幅提升开发的敏捷性。</p><p></p><p>这种架构对于成本的优化也是显著的，事件是按需发生的，这意味着我们无需为空闲资源付费。比如上图中的作为事件使用者的 Lambda 函数，只需要为 Lambda 处理事件时的函数请求数量和执行代码所花费的持续时间付费。</p><p></p><p>随着 Serverless 各方面的功能和性能的提升，其采用率也在持续增长。据 Datadog 2021 年发布的无服务器状态报告，开发人员正加速采用无服务器架构：2019 年之后 Amazon Lambda 的使用率显著增加，2021 年初，Amazon Lambda 函数的平均每天调用频率是两年前的 3.5 倍，且半数 Amazon Web Services 新用户已采用 Amazon Lambda。而据 Amazon Web Services 公布的数据显示，亚马逊已有数十万家客户在各种场景下用 Amazon Lambda 来构建他们的服务。</p><p></p><p></p><h3>低代码平台</h3><p></p><p></p><p>Serverless 是一种范式转变，可以减少服务器运维工作，如果再加上减少手动编码的方式，我们就能够更快地进行业务开发和交付。各云厂商近几年都在低代码开发平台上投入了不少力量，亚马逊也于 2017 年发布了 Amazon Amplify。</p><p></p><p>从云计算开始，技术发展在不断将底层平台进行抽象，低代码平台通过将底层平台云化，屏蔽复杂的使用规则，用 BaaS 层接口提供后端服务，让开发者将重心放到业务流程和界面定制上。也因此，低代码的核心部分之一是前端开发。Amazon Amplify 平台采用的是集成 UI 原型设计平台 Figma 的方式，允许设计师和前端开发人员在设计和开发活动上进行协作。例如，开发人员只需将新的组件设计从 Figma 拖放到 Amplify Studio 的应用程序中，设计好的 UI 会自动转换为 JavaScript 或 TypeScript，让开发人员可以完全控制应用程序的设计和功能。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/c4/c406b646228c773e751f67b40127475b.jpeg\" /></p><p></p><p>低代码开发平台的另一优势是加速全栈开发的速度。我们可以看到 Stack Overflow 的报告涉及的技术越来越多，也说明了随着应用程序的复杂性增加，我们开发人员需要在开发过程中处理越来越多的事情，包括框架和平台的选择、安全配置、数据库、CI/CD 部署等等。对于开发人员来说，全栈开发变得非常复杂，需要具备非常全面的技能。但通过低代码提供的堆栈环境，以及全生命周期管理能力，让开发人员可以以简单的方式管理从 UI 设计、代码开发到部署的端到端应用程序开发，进一步降低全栈开发难度。在 Amazon Amplify 中，它是通过 CLI 命令等方法实现快速地创建后端和数据库（在内部使用 Lamda、S3 和 DynamoDB），从而在短时间内完成一套全栈 Web 和移动应用程序。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/36/3615da0f26da877bd94f1cfdb7b62d9a.jpeg\" /></p><p></p><p>低代码还能减少对 AI 或机器学习专业人员的依赖，可以降低 AI 应用的失败率。在亚马逊的低代码平台中就提供了如 AI/ML、mapping 等服务。我们可以在构建的全栈应用程序时，轻松调用 Analytics 功能，收集事件数据分析用户操作，然后调用 AI/ML 服务“预测”用户的下一步操作。或者也可以根据自己的需求调用其它比如文字翻译、语音识别、图像处理等云服务。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/65/6582b37163cfe8ce8649e4fce4dc5b81.jpeg\" /></p><p></p><p></p><h2>机器学习</h2><p></p><p></p><p>在低代码平台中，对 AI/ML 服务的调用，也是在释放人工智能的力量。人工智能的应用现在越来越普遍，渗透到了企业的各种业务场景应用当中，发挥着重要且积极的影响。日常开发中，我们也会经常遇到需要应用 AI/ML 技术的地方，而云上的机器学习服务更加齐全，不仅提供了多样性的选择，而且还兼顾了易用性。</p><p></p><p>机器学习技术的普及也和云计算的发展密不可分。一方面，机器学习有着庞大的计算和数据存储需求，几乎机器学习的每一步训练与推断都需要庞大的云端集群来提供算力或存储资源支持。而云服务提供商凭借海量的集群资源，以及按需按消耗付费的计价模型，再加上这几年云服务持续的降低成本，让机器学习与人工智能已经变成了人人都用的服务。</p><p></p><p>另一方面，云服务厂商在机器学习的工具库上，提供了非常好的深度和广度，来满足用户的不同需求。机器学习本身是一个“Right tools for the right job”的事情，需要根据具体的业务和场景，选择最合适的工具。亚马逊云科技采取开放包容的工具选择策略，让云端可以和客户的整个环境做到良好的集成。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/e9/e9af405082c411a95ad8d8c85cdf2b5e.jpeg\" /></p><p></p><p>从机器学习技术栈的 3 个层面分别阐述：</p><p></p><p>在底层机器学习框架方面，云厂商需要支持各种主流的机器学习基础框架和标准接口，如 TensorFlow、PyTorch、Apache MXNet、Gluon、Keras 等。这些框架也都出现在了今年 Stack Overflow 年度报告“受开发者欢迎的库”调查结果中。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9d/9defe56a6f7d5527484cab4dd298eb1f.jpeg\" /></p><p></p><p>而亚马逊云科技不仅支持上述机器学习基础框架和接口，还针对 TensorFlow、PyTorch 和 MXNet 三个主流框架进行了专门的优化适配，并支持通过 Amazon Glue、Amazon Kinesis 等数据接口集成来最大限度方便框架的使用。这些设计使其可以方便地支持开发者以及数据科学家们运行流行机器学习框架以及运行使用多种框架。</p><p></p><p>在底层计算层也是如此，无论是 AI 芯片还是计算实例，云厂商也可以让用户根据不同的应用场景，根据自己的实际需求自由选择各种 GPU 实例、ARM 实例、机器学习专用推理芯片。</p><p></p><p>在上层 AI 服务层面，开发者可以根据自身需求，在云上有选择的使用各种 AI/ML 服务，比如文本分析、代码检查、聊天机器人、需求预测、文档分析、企业搜索、反欺诈、图像视频分析、个性化推荐、实时翻译、文本语言转换、转录，等等。为自己的系统应用补充所需要的智能化组件，通过简单的 API 调用即刻补足智能拼图缺失的一角。</p><p></p><p>在承上启下的中间层，像 <a href=\"https://xie.infoq.cn/article/a1b34421f3183d3bc1d8e59db\">Amazon SageMaker</a>\" 这样的工具平台，提供了一项全托管端到端机器学习服务，这也是亚马逊云科技机器学习服务层面的核心产品，可帮助数据科学家、开发人员以及机器学习专家快速构建、训练并托管规模化机器学习模型。开发者只需要关心自己输入什么数据，自己想用什么框架和什么算法，其他的各种参数调优什么的脏活儿就让机器自己用机器学习来做，减轻了机器学习流行中数据清洗、建模等步骤的复杂性。</p><p></p><p>随着机器学习应用变得普遍，各种 MLOps 工具也变得越来越多，而且机器学习项目的开发工作流程仍然非常反复，所以对于开发人员来说，管理工作还具有挑战性。</p><p></p><p>例如，当尝试一种新算法或调整超参数时，开发人员和数据科学家通常在 Amazon SageMaker 上进行成千上万次实验，需要手动管理所有实验。随着时间的流逝，追踪性能最佳的模型和利用在实验过程得出的经验教训变得越来越困难。</p><p></p><p>2020 年， SageMaker Studio 正式发布，这是亚马逊云科技创建的一个全集成的 ML 开发环境——也是业界首创。它统一了 ML 开发所需的所有工具，将数百种机器学习功能，包含训练好的模型、设置好的容器镜像，都集成到基于 Web 的开发环境 Amazon SageMaker Studio 中。</p><p></p><p>开发人员可以通过单个窗格管理整个 ML 工作流，在可视化界面中编写代码、跟踪实验、可视化数据，以及针对 ML 工作流进行调试和监控，不需要切换来切换去，从而极大地提高了开发效率。</p><p></p><p>这种集成并简化后的开发环境对机器学习初学者也特别友好。以 Stack Overflow 报告最受开发者喜爱的 Hugging Face Transformers 为例，其官方网站默认使用 Amazon SageMaker 来训练和部署模型，提供了相应的<a href=\"https://xie.infoq.cn/article/fb833598f8919e89fd1168264\">入门指导</a>\"。Hugging Face 提供的深度学习容器（DLC）与 SageMaker 结合，可以让开发者跳过从头开始构建和优化训练环境的复杂过程，立即开始训练模型。在亚马逊云服务上，免费注册账户，然后用 Huggingface Sagemaker，只需简单几行代码就可以开始训练并部署 Hugging Face Transformers 模型。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/c1/c1d717ed026bed33bbbc1c886b5b586d.jpeg\" /></p><p></p><p></p><h2>云数据库</h2><p></p><p></p><p>在 Stack Overflow 的报告中，还有一项特别有意思的调查项目，即“薪资待遇最好的技术”，其中在针对编程语言的统计中，使用 Clojure 语言的开发者收入最高；在针对框架和库的统计中，Apache Spark、Apache Kafka 和 Hadoop 排行最高，说明大数据类的工作收入较高；在针对数据库的统计中，DynamoDB 数据库开发者的薪水是最高的。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/99/99201a2b2626b7e0d7e8cd1fdcf4b757.jpeg\" /></p><p></p><p>在这里就不得不介绍一下薪酬最高的开发数据库 DynamoDB 是何许人也，DynamoDB 是非关系型数据库的开山鼻祖，它起源于亚马逊于 2007 年发表的一篇划时代论文《Dynamo: Amazon’s Highly Available Key-value Store》。这篇论文影响了很多 NoSQL 数据库的设计，<a href=\"https://www.infoq.cn/article/aws-dynamodb-dive-in\">也最大程度地将 consistent hashing 这个概念从学术界引入了工业界</a>\"。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/8a/8a6a0cc2f7795c9a6f5356740169e9de.jpeg\" /></p><p></p><p>Dynamo 论文推动了行业大规模变迁至非关系型数据库，并最终促成新一代的适用于互联网的云数据库 DynamoDB 的诞生。现在，DynamoDB 可处理每日超过 10 万亿请求和每秒超过 2000 万峰值请求，并且还具有详细的企业级特性，如支持 ACID 事务，使用户能够大规模构建业务关键型应用程序，从而被众多企业应用到核心业务中。今天有许多全球发展最快的企业，如 Lyft、Redfin、Disney、Zoom 等企业，都依靠 DynamoDB 的规模和性能来支持其关键任务负载。</p><p></p><p>在今年 7 月的 USENIX ATC’22 上，Amazon DynamoDB 团队再次发布了他们的新论文《 A Scalable, Predictably Performant, and Fully Managed NoSQL Database Service》，论文里包含了云数据库跨分区吞吐量的均匀分布是如何设计的，如何用多 Paxos 来保持副本同步的机制，MemDS 分布式缓存的设计方法等硬核内容。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/06/06fab638a25eaf2968b1c2f2367019cd.jpeg\" /></p><p></p><p>DynamoDB 的架构</p><p></p><p>更难得的是，这篇论文还涵盖了 DynamoDB 的架构设计，以及它如何不断演进以满足客户的需求，这种涉及演进的论文相对也比较少见。</p><p></p><p>过去 10 多年，该数据库的研发人员加入了包括二级索引支持、可扩展流式数据捕获、自适应容量等等功能。不断增加的功能，不仅涉及底层可用性、持久性、安全性和规模等，还包括易用性等。这些功能让用户不再需要配置集群，只需创建一个表存储数据，即可轻松实现无缝缩放。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/54/54a036ec338eeb54079dd19c477b809a.jpeg\" /></p><p></p><p>DynamoDB 的发展</p><p></p><p>从工程角度看，这应该是近年来大规模分布式系统最实用的论文之一，其中包含的那些云数据库设计方法，估计也会给业界带来一些启发。</p><p></p><p></p><h2>写在最后</h2><p></p><p></p><p>我们从 Stack Overflow 调查报告出发，介绍了当前的开发工具、开发环境热点技术方向。</p><p></p><p>出色的开发工具也是软件开发者的生产力放大器。现在软件开发几乎渗透到了经济的各个领域，甚至可以说未来每个公司都会是软件公司。而开发软件必须要有好用的开发工具，如果说软件是技术进步的助推器，那么开发工具是技术进步的二阶助推器: 助推器的助推器。</p><p></p><p>随着云原生时代的来临，以及组织代码规模的扩张，开发模式不断变得复杂，也促进一些大型企业，特别是云厂商提供更好的开发环境。同时云服务提供商通过将自己的服务，集成到流行的开发工具中，使得开发者能够使用自己熟悉的工具来管理云服务。对于云厂商来说，开发工具对于开发成本的优化，以及软件交付效率的提升，可以通过用户得到千百倍的放大，为用户带来巨大的经济价值，从而也能进一步促进云厂商自身的发展。</p><p></p><p>“云平台”、云数据库这些排行榜是云计算行业的一个缩影，Stack Overflow 开发者调查报告反馈出亚马逊云科技为开发者提供了称心应手的软件开发“武器库“，而这些开发工具收到了来自不同开发者的多方面的积极评价，这离不开亚马逊云科技对开发者的重视和对开发工具不断打磨与创新。当我们评估用什么云服务时，也不妨同时看看企业是否重视工具的打造，所提供的开发工具是否趁手，毕竟这两个之间是互相促进的，“双驱动”带来的效率提升会更加可观。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9e/9e8d5e25aac3673ef79f502e7d09cbdf.jpeg\" /></p><p></p><p>作为云计算领域的行业风向标活动，2022 亚马逊云科技中国峰会将于 10 月 13 日 -10 月 14 日于线上举办，与会者有机会与国内外尖端技术讲师、构建者、业界领袖面对面深入交流，全面了解亚马逊云科技在云开发、人工智能、机器学习、数据库、大数据分析、物联网、安全等方面最新的云计算解决方案。点击链接了解更多详情：<a href=\"https://summit.awsevents.cn/2022/signin?source=I4txnunRTQh30eQ4v/ulfA==&amp;tab=1&amp;type=2\">https://summit.awsevents.cn/2022/signin?source=I4txnunRTQh30eQ4v/ulfA==&amp;tab=1&amp;type=2</a>\"</p><p></p><p>参考链接：</p><p></p><p>参考链接：</p><p><a href=\"https://aws.amazon.com/cn/solutions/case-studies/redfin/\">https://aws.amazon.com/cn/solutions/case-studies/redfin/</a>\"</p><p><a href=\"https://aws.amazon.com/cn/solutions/case-studies/lyft/\">https://aws.amazon.com/cn/solutions/case-studies/lyft/</a>\"</p><p><a href=\"https://aws.amazon.com/cn/dynamodb/\">https://aws.amazon.com/cn/dynamodb/</a>\"</p><p><a href=\"https://aws.amazon.com/cn/blogs/china/machine-learning-plugs-wings-for-digital-transformation/\">https://aws.amazon.com/cn/blogs/china/machine-learning-plugs-wings-for-digital-transformation/</a>\"</p><p><a href=\"https://aws.amazon.com/cn/amplify/studio/\">https://aws.amazon.com/cn/amplify/studio/</a>\"</p><p><a href=\"https://www.youtube.com/watch?v=T4MQrRDo20w\">https://www.youtube.com/watch?v=T4MQrRDo20w</a>\"</p><p><a href=\"https://www.cirrushq.com/wp-content/uploads/2022/03/AWS-UG-EDI-Amplify-Studio.pdf\">https://www.cirrushq.com/wp-content/uploads/2022/03/AWS-UG-EDI-Amplify-Studio.pdf</a>\"</p><p><a href=\"https://xie.infoq.cn/article/a1b34421f3183d3bc1d8e59db\">https://xie.infoq.cn/article/a1b34421f3183d3bc1d8e59db</a>\"</p><p><a href=\"https://xie.infoq.cn/article/fb833598f8919e89fd1168264\">https://xie.infoq.cn/article/fb833598f8919e89fd1168264</a>\"</p><p>https://www.infoq.cn/article/aws-dynamodb-dive-in</p>",
    "publish_time": "2022-09-13 11:02:06",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "里程碑！PyTorch正式加入Linux基金会，社区治理这一核心将不会改变",
    "url": "https://www.infoq.cn/article/OYS7T01SgBBZvCqNT04E",
    "summary": "<p>当地时间9月12日，Linux基金会在其官网宣布，PyTorch已经正式加入Linux基金会。</p><p></p><h2>PyTorch正式加入Linux基金会</h2><p></p><p>&nbsp;</p><p><img src=\"https://static001.geekbang.org/infoq/cf/cf9c37347d63bf34453fc6de1bed5371.png\" /></p><p></p><p>&nbsp;</p><p>Linux基金会表示，其实很难用一篇文章来描述清楚PyTorch的加入对基金会的意义有多么重大，但还是希望尽可能将其表达出来。</p><p>&nbsp;</p><p>以下为基金会全文：</p><p>&nbsp;</p><p><a href=\"https://www.infoq.cn/article/TblGFGRIjAKLu6JKYBqv\">PyTorch</a>\" 是当今世界上最重要和最成功的机器学习软件项目之一。我们很高兴与项目维护者、贡献者和社区合作，将PyTorch带入到一个中立的“家园”，在那里它可以继续强劲地增长并快速地创新。我们感谢Meta团队孵化出了PyTorch并让它成长为一个庞大的生态系统，更要感谢 Meta团队对于Linux 基金会的信任，正因为有了这样的信任才让PyTorch加入<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651130293&amp;idx=2&amp;sn=fd6dc3927e04a667860941633c52d7de&amp;chksm=bdb8f1e68acf78f00aafa670e4803a74f24c2a2e8f8eff59d50ed1948a0cb8e7922f57b3785f&amp;scene=27#wechat_redirect\">Linux</a>\"成为可能，才让这场史诗般的旅程得以呈现。</p><p>&nbsp;</p><p>人工智能、机器学习和深度学习对于当前和未来的技术创新至关重要。与人工智能、机器学习社区和它们生成的代码相关的一切都将飞速发展起来。<a href=\"https://archsummit.infoq.cn/2022/hangzhou/track/1272\">AI/ML</a>\"也是一个真正“开源优先”的生态系统。大多数流行的 AI 和 ML 工具和框架都是<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2651136062&amp;idx=4&amp;sn=14910cd2372b3c08e5b09a1225648b9e&amp;chksm=bdb8d86d8acf517bd272ece0155eca8e5714ff6e047a2dc194b4734099ea80c3d0186f28a629&amp;scene=27#wechat_redirect\">开源</a>\"的。社区十分重视透明度和开源精神。在开发让AI和ML落地的工具和解决方案时，开源社区正在并且未来也将发挥着主导作用，随着时间的推移，开源社区将使这些工具和解决方案变得更好</p><p>&nbsp;</p><p>&nbsp;基于上述所有原因，Linux 基金会明白，在人工智能和<a href=\"https://archsummit.infoq.cn/2022/hangzhou/track/1280\">机器学习</a>\"领域，开源是重中之重。Linux 基金会已经托管并与许多项目合作，这些项​​目要么直接为基础 AI/ML 项目（LF AI 和数据）做出贡献，要么为其用例做出贡献并与其平台集成。（例如，LF Networking、AGL、Delta Lake、RISC-V、CNCF、Hyperledger）。&nbsp;</p><p>&nbsp;</p><p>PyTorch正是扩展并建立在这些努力之上。显然，PyTorch 是用于开发、测试和部署 AI/ML 和深度学习应用程序的最重要的基础平台之一。如果你需要在 AI 中构建一些东西，如果你需要一个库或一个模块，那么 PyTorch 中很可能会为此提供一些东西。任何一款AI应用程序中，都可能有着PyTorch的身影。从提高疾病诊断和心脏病发作的准确性，到<a href=\"https://www.infoq.cn/article/UuQUfYXAdEuQt36MsD0e\">自动驾驶</a>\"汽车的机器学习框架，再到天文学家的图像质量评估工具，PyTorch 无处不在。</p><p></p><p>&nbsp;</p><p>PyTorch最初由Meta的AI团队孵化，在以社区为中心的管理之下，PyTorch现已发展成为一个由贡献者和用户组成的庞大社区。PyTorch 的精髓之处（以及它的维护者的功劳）在于，它的确是如今许多AI和ML项目的基础平台，它是一把真正的瑞士军刀。正如开发人员在 Linux 之上构建了我们今天所知的大量技术一样，许多AI/ML 社区也是在 <a href=\"https://www.infoq.cn/article/7Azz9NMpjuI4zmV4S4oC\">PyTorch </a>\"之上构建而成。PyTorch进一步支持了新兴技术和不断变化的用户需求。截至 2022 年 8 月，PyTorch 是世界上与 Linux 内核和 <a href=\"https://qcon.infoq.cn/2022/beijing/track/1291\">Kubernetes</a>\" 并列的五个增长最快的开源软件社区之一。从 2021 年 8 月到 2022 年 8 月，PyTorch 统计了超过 6.5万次提交.&nbsp;超过 2400 名贡献者以提交问题或PR或编写文档的方式参与了这项工作。这些数字使 PyTorch 成为历史上最成功的开源项目之一。&nbsp;</p><p>&nbsp;</p><p>像 PyTorch 这样有可能成为关键技术基础平台的项目，保持中立对它更有益处。中立性和真正的社区所有权使 Linux 和 Kubernetes 在变得更加成熟的同时继续加速和增长，从而超越预期。用户、维护者和社区开始将它们视为可以永久依赖和信任的公共资源的。通过创建一个中立的家园——PyTorch 基金会，我们共同为PyTorch打造了一个透明、社区治理和规模无可限量的未来。</p><p></p><h2>加入后，PyTorch不会有大的改变</h2><p></p><p></p><p>作为 Linux 基金会的一部分，PyTorch 及其社区将受益于我们的许多计划和支持社区，例如培训和认证计划（我们已经在进行中）、社区研究（例如我们的项目旅程报告），当然还有其他社区活动等。PyTorch 社区将在<a href=\"https://www.infoq.cn/article/8V7UcWWhXXeCg6xOsKvQ\"> Linux 基金会</a>\"内部和周围工作，PyTorch社区也有一个可以访问LFX 协作门户的入口，我们将为PyTorch社区提供指导并帮助 PyTorch 社区确定未来的领导者、寻找潜在的员工、并观察共享的社区动态。</p><p></p><p>PyTorch 通过良好的维护和开源社区管理达到了目前的状态。我们不会改变 PyTorch 的任何优点。事实上，我们迫不及待地想向 Meta 和 PyTorch 社区学习，以改善基金会其他项目的经验和成果。对于那些想要更深入地了解我们的 PyTorch 基金会计划的人，我邀请您加入 Soumith Chintala（PyTorch 的联合创始人）和 Ibrahim Haddad 博士（PyTorch 基金会的执行董事），在周四进行题为PyTorch 的现场讨论：开源 AI/ML 的基础。</p><p>&nbsp;</p><p>我们感谢 Meta 对“将火炬传递给我们”（双关语）的信任。与社区一起，我们可以构建（甚至更多）非常伟大的东西，并为支撑我们现在和未来生活的宝贵技术的全球遗产增添光彩。欢迎，PyTorch！我们等不及要开始了。</p><p></p><p>参考链接：</p><p></p><p>https://linuxfoundation.org/blog/welcoming-pytorch-to-the-linux-foundation/</p>",
    "publish_time": "2022-09-13 12:23:37",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "历时三年替换掉二十年老系统，这个团队选择“一次性到位” | 卓越技术团队访谈录",
    "url": "https://www.infoq.cn/article/SbPCPlTopJQsGAv1IPmB",
    "summary": "<p></p><p>作者 | Tina</p><p>采访嘉宾 | 沈勇毅、孔伟、苏彦春</p><p></p><p>作为传统 IT 铁三角的核心腹地，金融行业过去十年的“去 IOE”运动备受关注。这种在过去 30 年中被广泛使用的集中式架构逐渐难以适应金融业务的线上化、数字化、智能化需求，正在逐渐被替换。因为需要修改底层技术，涉及到很多代码的重写、技术架构的重组和迁移，去 IOE 基本上是一种“小步慢走”的过程，本身就是 5-10 年的工作。</p><p></p><p>金融行业的变革从银行开始，逐渐带动了保险行业。这几年保险行业的数字化转型走得特别快，一众头部保险公司都在自我改革以适应时代的改变。</p><p></p><p>金融企业的数字化转型，通常是规划长远、实施复杂的项目，需要有懂技术、有大型项目经验的人，做出既稳妥又大胆的决策，而一般的企业不可能无限制在技术上进行投入，那么在投入有限、人才缺乏、技术实力储备不足等刚性约束条件下，转型之路究竟该怎么走？绝大多数机构并没有清晰的答案。</p><p></p><p>作为一家中型金融机构，民生人寿保险也曾面临上述困难。2019 年的时候，民生开启了一场快节奏、深层次的数字化转型，将用了近二十年的架构，一举搬上了混合云架构上。原来需要 5-10 年时间的项目，也只花了 3 年就宣告完成。民生保险探索出来的这条数字化转型路径，或许也能给亟需变革的其他中小型企业带来一点启发。</p><p></p><p></p><h2>重构核心系统，一次性到位进行转型</h2><p></p><p></p><p>在 1955 年首届财富 500 强名单中，只有 12.2% 的公司在 2014 年仍然保持在该位置。虽然一些下滑是因为品牌重塑或并购，但其中大部分反映了许多曾经的大牌未能在现代社会中生存下来的事实。在技术不断进步的环境中，未以正确的方式接受变革并进行创新，这些衰亡的企业是带有警示意义的例子。</p><p></p><p>一般企业都是循序渐进的发展，但是新技术的革新，让企业的 IT 环境可能进行革命性的变化，没有壮士断腕的决心，可能真的无法适应业务的发展而被淘汰。</p><p></p><p>一边是当前企业都有变革的压力，另一边是金融企业里的特殊现状。</p><p></p><p>金融行业有自己的特性，使用的是一些成熟的技术或者在其它领域已经应用多年的技术。而现在，数字化转型普遍是将已有互联网的技术、流程、实践置于服务的构思和交付方式的核心。这也就是说，彻底、全面的转型意味着“不破不立”。</p><p></p><p>民生人寿保险面临的状况也是如此。在 2003 年成立的时候，受制于当时的技术环境，民生人寿保险采用了传统的 IOE 架构，以及单体应用。技术架构的层面发展到现在，已经变得陈旧，应用之间的耦合度也非常高，很难去适应现在快速业务的变化。</p><p></p><p>在过去二十年的时间里，民生保险在集中化的 Oracle 数据库中积累了大量数据，但各方面的指标口径没有进行统一，数据也缺少标准治理。</p><p></p><p>民生保险的转型目标是，用“民生保险”公众号和官网将 90% 常用的业务实现线上处理、用“掌上民生”实现保单销售全流程线上化，通过引入人工智能实现运营服务的自动化，打造了“业务中台”和“数据中台”双中台模式，以支撑公司转向以客户为中心的经营模式。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/47/478eddce5733ac398d782aec3aa3c088.png\" /></p><p></p><p>图源：<a href=\"https://m.gelonghui.com/p/525770\">https://m.gelonghui.com/p/525770</a>\"</p><p></p><p></p><h2>技术选型是项目中最大的风险点</h2><p></p><p></p><p></p><blockquote>寿险行业的数字化转型在此之前并没有成熟的案例。</blockquote><p></p><p></p><p>作为求稳的金融企业之一，民生保险没有在老系统上进行“修修补补”，而是进行彻底变革。民生新一代的 IT 建设分为两大部分，一部分是建设新一代的业务核心系统，另一部分是重建技术架构。</p><p></p><p>在基础架构选型的时候，民生保险探索过多种路径，包括超融合，自己搭建 Kubernetes 集群支撑应用，基于 MySQL、PostgreSQL、CDH 用开源搭建大数据平台，但考虑到使用的效果和维护的成本，最终还是放弃了完全使用开源的实现方式。</p><p></p><p>原来使用的 Oracle 产品有自己的特色，能同时适用于交易场景和分析场景，所以在这一块儿上并没有一个对等的可取代它的软件。</p><p></p><p>现在，互联网的实现思路是将交易型的数据库和分析型的数据库拆解开来，再加上大数据平台去做海量数据的建模或者计算能力的支撑。基于此，民生选择了分布式数据库<a href=\"https://www.infoq.cn/article/YoxwIvkHZ07vijEi6W9M\"> TDSQL</a>\"、TBase 等来<a href=\"https://www.infoq.cn/article/AB_DU5f7OxCWerOKp2Th\">替换掉 </a>\"Oracle。</p><p></p><p>同时考虑到新一代的业务架构是基于分布式 Kubernetes 集群，适应未来 5 到 10 年的发展变化，核心应用比较倡导微服务网格化和基于云的研发应用一体化的模式，所以底层基础架构一开始定位为公有云服务。</p><p></p><p>但在把主流国内云厂商看了一遍之后，从数据资产的私有化来考虑，发现公有云的方式不完全满足现在金融行业的需求，于是民生保险跟腾讯深度合作，为大部分的数据和核心应用建立了一个私有云，再用公有云承载对外流量，以及实现活动场景下的弹性扩展预留。</p><p></p><p>新一代业务系统和新一代云数据中心都是采用的最新的技术，跨度很大，选择新技术也意味着接受挑战。针对复杂的技术和业务场景面临很多未知的情况，前期在做第一轮试验性“掌上民生”App 产品时候，怎么运行，怎么快速解决技术上的问题，没有一个可以用来参考的标准，还需要充分融合整个应用架构和云平台 PaaS 的能力，来寻找一个最佳的均衡点，所以这个项目中最大的风险也是来自于初期。</p><p></p><p>整体的架构设计和探索“花了大概 5、6 个月的时间才能定下来”，民生保险数据服务部副总沈勇毅表示，这也是整个项目开头最难的一个点。</p><p></p><p>“采用新技术总会有一定的风险，作为吃螃蟹的人，总归是要慢慢摸索”，沈勇毅介绍说。但经过了半年的并行期以后后面就很顺了，因为已经很清晰地知道自己的技术路线怎么走，业务转型的时候要考虑哪些问题，就相对来说按部就班地去做，只是看时间到底拉的多长。</p><p></p><p>传统金融机构的技术架构升级有着复杂的步骤，比如先建立一个数据中心，再建立第二个数据中心，逐步考虑兼容，是一个 5 到 10 年长远的发展过程。民生保险的数字化转型从 2019 年启动，采用比较先进的混合云基础架构和云原生的业务架构，一步到位地实现了两地三中心、同城双活、灾备，到投产上线、存量迁移，总共只花费 3 年时间，创造了一个行业里少见的案例。</p><p></p><p></p><h2>技术投入要讲究一个“均衡点”</h2><p></p><p></p><p></p><blockquote>CXO 控制着整个项目的风险系数。</blockquote><p></p><p></p><p>在企业的<a href=\"https://www.infoq.cn/article/PV03IOu8CgoNldNzGG7Z\">转型过程</a>\"中，技术只是一个应用，任何改变，如果没有考量到“人”的因素，必然无法达到真正的转型。</p><p></p><p>人的因素可以分为两个部分。</p><p></p><p>一方面是面向“消费者”。数字化转型的根本起源是“业务诉求”。因为人口众多，所以各行业都大量增加了线上业务，进行深加工，所以底层的数字化转型它其实不是一个技术层面的推动，它是一个业务层面的推动，是出于业务的需要。</p><p></p><p>民生保险在转型是将视频、图章、监管、报送等等这些系统业务进行线上化，线上业务还需要有数据的二次加工和分析。在具体业务场景上，推动业务层面去使用“新技术”，改变业务模式、运营模式、服务体系，这些都是面向消费者的事情。</p><p></p><p>另一方面，“组织内部的人”更是转型的成败关键。</p><p></p><p>技术和产品的问题总能够去解决，引入新技术不是最难的事情，这可以通过引入比如腾讯这样的云服务商作为合适的合作伙伴，借助于各行各业的经验支撑技术的转型。而业务上的问题，主要靠组织和管理层面。“一把手”董事长的决心和战略决定了“转型”的基调，然后管理层才能从公司层面明确建设目标，制定规划，内部各部门的协调和合作，从顶层向下推动整个公司转型。</p><p></p><p>在数字化转型中，CTO 或 CIO 也起着比较决定性的作用。一方面，作为“总设计师”，他需要根据企业的实际情况来去选择一个最佳的路径。</p><p></p><p>数字化转型的路径不止一种，基础好一点的可能循序渐进，每年可能动一点点，但是它的代价可能是花费的时间会很长很长。之前的基础差一点的，在技术大的变革时代，可能采取相对大胆激进的策略，能够在比较短的时间内能实现弯道超车，达到既定的目标，但是可能执行起来的整体风险也会比较高。一步到位还是逐步迭代，这些需要 CTO 或者 CIO 来做决策和选型。</p><p></p><p>“CTO 控制整个项目的风险系数，在不同的阶段去调整不同的风险”，作为民生保险信息化服务部门负责人，沈勇毅的角色也相当于 CTO 或者 CIO。另一方面，CTO 还需要靠确定整个组织架构，构建符合数字化的新的人才和体系。“民生这个项目的周期跨度 3 年，这也是我们有史以来最长的一个项目。参与的人数也很多，就我们自己民生和各个厂商的参与人数基本上全部加起来高峰的时候有 400-500 号人。”</p><p></p><p>在多厂商的管理上，合作能力的配合上，实施能力的管理上，包括民生自己内部多部门的管理和协调上，其实都有一些挑战。另外是人员能力，涉及到很多新技术引入，虽然很多新技术在互联网行业已经成熟，但对民生这样的一个金融企业来说，这个技术却是全新的。对民生保险来说，项目的实施需要很多懂技术，又有很多有大型项目经验的人员去推动。而且项目实施之后，技术怎么去沉淀，怎么去传承，怎么去保证确保所有的技术迭代和稳定的运转，这都是需要想办法解决的问题。这也是大多数转型中的中小企业需要面对的问题：作为一个甲方企业，不能无限制的在技术上去投入。</p><p></p><p>沈勇毅表示技术人员的投入也要讲究一个“均衡点”，民生的办法是借助于腾讯这样的厂商来接一部分基础云平台的部署和持续运维问题，同时也要清楚双方边界。但在应用层面还是要做到自主可控，培养自己的技术队伍。民生已经有专门的技术架构的团队，也是为了适应整个云的变化，近几年重构了这个团队，从原有的 IOE 的模式直接进行了转型，更多地去实现管理的职能或职责，做好资源分配和运用。</p><p></p><p></p><h2>切割二十年的老系统</h2><p></p><p></p><p>民生保险混合云有着自己的模式，基于国产自主生态的私有云、公有云、信创云混合的新一代基础设施。</p><p></p><p>民生将内部区域划分为几个大功能区，公有云更多是服务一些外网的业务，比如官微、官网、掌上民生。在项目实施过程中，开箱即用的公有云还承担着一个比较大的作用，就是在紧急的时候充当测试环境，毕竟私有云的搭建还包括购买服务器和网络等。</p><p></p><p>办公和核心放在了私有云上，这也是比较传统一些的 IT 交付模式。私有云基于腾讯云专有云全栈解决方案 TCE （Tencent Cloud Enterprise）打造，包括 70% 节点基于通用 x86 架构的私有云和 30% 节点基于全国产芯片为基础的私有云。腾讯专有云和公有云由同源同构的一套代码实现而来。腾讯专有云在金融行业落地时，还在网络、硬件、服务、网络安全、防护上，针对金融用户的属性做了深度定制。</p><p></p><p>作为腾讯云金融的主打技术产品之一，TCE 最早的实践案例可以追溯至微众银行，逐步扩展到交通、工业制造、传媒、零售、政府、泛互联网等行业，打造了建设银行、深证通、中国银联、永辉零售云、央视频等多个行业标杆。据腾讯介绍，TCE 本身历经数十次版本迭代，增强的功能和特性超过 500 项，涉及代码数百万行，也有完整的交付管理流程和自动化工具，从需求调研包括高低阶方案的设计，到基础设施包括云平台的实施，以及数据跟业务的投产迁移。</p><p></p><p>民生保险于今年 5 月 1 号开始切割，当时处于疫情全封闭的状态，数百名项目参与人员居家隔离，实现远程 “云上线”。关键线上业务还挺多，需要去做一些协同和管理。“大家都是各自在家里，去做了一个这么大的切换。这还是挺厉害的”，沈勇毅感慨。</p><p></p><p>项目切换过程中，大家的工作有一个“完整的清单”，每一个任务由谁负责，大家都要清楚自己在做什么，明白自己执行到了哪一个步骤，都需要非常明确和细致。在各个组织结构上分得很清楚，由“总控”去整体把控，底下有各个执行组、指令组，各个平台的支撑组、支持组，还有各模块的用户验证组，以及腾讯也有一支支持队伍，大家不断地相互之间去协调和通信，经历一个月的多轮预演，最后正式切换。</p><p></p><p>难度和风险最大的有两个，第一个技术选型，在第一次引入新技术试错的时候，第二个是最后一次性切割的时候。</p><p></p><p>“按照我们现在整个策略，迁移过程当中绝对不大会有一次性迁掉的那种模式，但是就算分阶段，分步骤慢慢去切割，到最后也有一次整个的最后切割。就像 5 月份‘云切割’就是最终的一个版本，最终的一个全量的扫尾切割。失败的可能性最大的就是存量扫尾切割这一块。”</p><p></p><p>“因为所有的历史的问题，历史的债，肯定需要在那个点上做一个切割和梳理。我们也是一个快 20 年的一个公司，那么积累的历史问题不会少。其实在最后一次迁移过程中，我们还是遇到了一些不一定需要临时去解决的问题，这些问题我们会放到后面慢慢再梳理。”</p><p></p><p>减少风险的办法，就是“最后一次切割之前，一定要把风险看得清楚，把问题理得清楚，再去做这件事情。”</p><p></p><p>如今，“新一代”的业务系统已经稳定运行数月，各方面能力得到了明显提升，也曾在切割之后支撑了民生有史以来并发量最高的一个业务节点。另外，云平台成本提供同样的计算资源的情况下，要比原来至少节省一半以上的成本。且从安全性上来说，应对一些重保也是会比原来要好很多。</p><p></p><p></p><h2>写在最后</h2><p></p><p></p><p>数字化发展和数字化转型已成为全球多个国家的战略。</p><p></p><p>可以说企业进行数字化转型不是可选项，而是必答题。企业数字化转型的动力也是现实的：在疫情时代，数字化协同能让企业能够去高效地运转下去；线上化和新渠道上的用户运营是企业活下去的关键动力；新技术能够更加地降本增效，提升服务体验。</p><p></p><p>民生保险的弹性、稳定的云原生方案，也是保险企业转型的一个典型样本。对比国内外保险行业，沈勇毅认为，无论是全球还是亚洲的同类企业，虽然他们在业务逻辑设计和敏捷方法论上更为先进，但国内企业借助敏捷加上分布式交付，以及云厂商的成熟运转模式，在引入新技术的速度上比国外企业要快不少。</p><p></p><p>服务过几千家金融企业的腾讯专家也表示，不管在保险行业还是在金融行业，甚至在一些现在比较特殊的制造行业来看，中国在各个业务场景，各个行业的业务场景上面是足够丰富的，也是领先于其它国家的。在使用所谓的互联网技术或者使用所谓的数字化转型技术上，几乎所有的行业都不落后于国外，甚至快于国外。</p><p></p><p>最重要的是，互联网企业在创新和创造的过程之后，能将这些技术变成了一种成熟的基础架构技术，赋能给金融行业、制造行业等，让这些技术应用得比国外更快、更强。</p><p></p><p>采访嘉宾：</p><p></p><p>沈勇毅，民生保险数据服务部副总经理</p><p></p><p>孔伟，腾讯云专有云产品中心首席产品架构师</p><p></p><p>苏彦春，腾讯金融云交付总监</p><p></p><p></p><h4>内容推荐</h4><p></p><p></p><p>本文选自《<a href=\"https://www.infoq.cn/minibook/EQzDrPI1dT9G8V6alV1I\">中国卓越技术团队访谈录</a>\"》（2022 年第三季），本期精选了阿里达摩院数据库、得物、华润云、民生保险、众安保险、字节跳动 AppInfra 等技术团队在技术落地、团队建设方面的实践经验及心得体会。</p><p></p><p>《中国卓越技术团队访谈录》是 InfoQ 打造的重磅内容产品，以各个国内优秀企业的 IT 技术团队为线索策划系列采访，希望向外界传递杰出技术团队的做事方法 / 技术实践，让开发者了解他们的知识积累、技术演进、产品锤炼与团队文化等，并从中获得有价值的见解。</p><p></p><p>访谈录现开放长期报名通道，如果你身处传统企业经历了数字化转型变革，或者正在互联网公司进行创新技术的研发，并希望 InfoQ 可以关注和采访你所在的技术团队，可以添加微信：caifangfang_wechat，请注明来意及公司名称。</p><p></p><p><img src=\"https://static001.geekbang.org/wechat/images/9f/9f66c137b5399abf731a2f0a1e31936c\" /></p><p></p><p></p><p></p><p></p><p></p><p>​​​​​​</p><p></p>",
    "publish_time": "2022-09-13 12:24:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]