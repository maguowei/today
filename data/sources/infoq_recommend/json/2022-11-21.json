[
  {
    "title": "Netflix微服务异步迁移：从同步的“请求-响应”模式转换为异步事件",
    "url": "https://www.infoq.cn/article/2oxX1A5kr7l3NUJ9gIhv",
    "summary": "<p>假设我们正在运行一个基于Web的服务。请求处理变慢最终将会导致服务不可用。实际上，并不是所有的请求都需要立即处理。有些请求只要确认已收到即可。你有没有问过自己这样的问题：“我是否能够从异步请求处理中获益？如果确实如此的话，我该如何在一个实时的、大规模的关键任务系统中做出这种转变？”</p><p></p><p>接下来，我将要讨论我们是如何将一个面向用户的系统从基于请求-响应的同步系统迁移为一个异步系统的。我将会介绍是什么原因促使我们开始了这样的旅程，我们做出了哪些系统设计变更，这一过程中的挑战是什么，以及我们做出了哪些设计选择和权衡。最后，我会介绍在上线新系统时我们所使用的验证过程。</p><p></p><h2>原始架构</h2><p></p><p><a href=\"https://netflix.com/\">Netflix</a>\"是一个流视频服务，全球有超过两亿的会员在使用该服务。会员可以在众多支持的设备上观看电视节目、纪录片和电影。在访问Netflix的时候，借助我们的个性化推荐系统，他们能够看到各种选择。用户只需要点击播放按钮，就可以坐下来享受观看电影所带来的乐趣了。</p><p></p><p>我们会在这个电影放映过程中收集很多数据，用于运维和用例分析。其中有些数据会用来支撑我们的产品特性，比如继续观看，该特性允许会员中途停止观看电影，稍后等他回来时，在任何其他设备上都能从这个暂停点继续观看。这些数据还用于个性化和推荐引擎，以及核心业务分析。</p><p></p><p>我将会介绍迁移某个产品特性的经验，也就是浏览历史，该特性允许会员看到他们过去的浏览活动历史并且可以选择隐藏它。我们先看一下迁移之前的现有系统。在较高的层次上来讲，我们有支持不同设备的Netflix客户端，比如手机、台式机、笔记本电脑以及电视，它们在放映过程中会向Netflix云发送消息。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/11%20existing%20architecture-1662732582381.jpeg\" /></p><p></p><p>首先，数据会到达Gateway服务。在这里，它会被发送至Playback API，该API会管理放映会话的生命周期。此外，它还会将放映数据发送至Request Processor层。在Request Processor中，除了其他的任务之外，它会将长期和短期的观看数据存储到持久层中，对我们来说，也就是<a href=\"https://cassandra.apache.org/\">Apache Cassandra</a>\"以及用作缓存层的<a href=\"https://github.com/Netflix/EVCache\">EVCache</a>\"，后者能够让我们实现快速查找。</p><p></p><h2>回压</h2><p></p><p>大多数时候，该系统都能运行得非常好。在极少数情况下，有可能因为网络突发事件，或者某个Cassandra节点暂时运行缓慢，导致正在处理的某个请求被延迟。当这种情况发生时，鉴于此处是同步处理，请求处理线程不得不等待。这反过来又会使上游的Playback API服务变慢，进而使得Gateway网关服务变慢。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/12%20backpressure-1662732582381.jpeg\" /></p><p></p><p>除了云中的重试策略之外，这种速度变慢还会响应到运行在用户设备上的Netflix客户端。有时候，这种现象被称为回压。回压可以表现为系统中的不可用，并且会建立一个客户端必须要进行重试的队列。在这里面，有些数据对我们的工作至关重要，所以我们希望避免数据丢失，例如，如果客户端填充其本地队列时，该队列的容量是有限的，那么就可能会造成数据丢失。</p><p></p><p>我们对该问题的解决方案是在系统中引入异步处理。在Playback API服务和Request Processor之间，我们引入了一个可持久化的队列。现在，当请求传入的时候，它会被放到一个持久化队列中，并且立即确认。这样，就没有必要等待该请求处理完毕了。</p><p></p><p>事实证明，<a href=\"https://kafka.apache.org/\">Apache Kafka</a>\"非常适合这样的场景。Kafka提供了一个日志抽象，像Playback API这样的生产者可以追加日志，然后多个消费者都可以基于偏移量按照自己的节奏从Kafka日志中读取数据。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/15%20new%20architecture-1662732582381.jpeg\" /></p><p></p><p>这听上去很简单。但是，如果只是在两个处理层之间引入Apache Kafka，我们就能宣告大功告成吗？并非如此。Netflix的运营规模达到了每秒钟100万个事件。在这种规模下，我们遇到了异步处理的一些挑战，包括数据丢失、处理延迟、乱序和重复记录，以及偶然性的处理失败。另外，还有涉及Kafka消费者平台的选择以及跨区域方面的设计决策。</p><p></p><h2>挑战：数据丢失</h2><p></p><p>关于数据丢失，有两个潜在的诱因。首先，如果Kafka集群本身不可用，毫无疑问，我们将会丢失数据。解决这个问题的简单方法就是添加一个额外的备用集群。如果主集群由于难以预见的原因而导致不可用的话，发布者（本例中，也就是Playback API）可以将请求发布至备用集群。消费者的请求处理器可以连接至两个Kafka集群，因此不会丢失任何数据。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/16%20standby%20cluster-1662738783532.jpeg\" /></p><p></p><p>显然，这里付出的代价就是额外的成本。对于特定类型的数据来讲，这种行为是可行的。但是，是否所有的数据都需要这样做呢？幸运的是，答案是否定的。我们有两种类型的放映数据。关键数据将会按照这种方式来处理，这证明备用集群的额外成本是值得的。其他不太重要的数据则会只使用一个普通的Kafka集群。由于Kafka本身采用了很多的策略来提升高可用性，所以这足以满足我们的要求。</p><p></p><p>数据丢失的另外一个诱因是发布时间。Kafka具有<a href=\"https://developer.confluent.io/learn-kafka/apache-kafka/partitions/\">多个分区</a>\"来增加可扩展性。每个分区都是由一组叫做broker的服务器来提供服务。其中，有一台服务器会被选为首领（leader）。当发布消息到某个分区时，会将数据发送至首领broker。我们可以仅等待首领确认条目已经持久化到它的存储中，也可以等待跟随者（follower）broker都确认它们也已写入到了持久化存储中。如果我们处理的是关键数据的话，等待分区所有broker的确认是合理的做法。在大规模的场景中，这不仅仅会涉及到多次写入的成本问题。</p><p></p><p>如果丢失了对首领broker的连接，会发生什么呢？在部署新架构仅仅几个月后，我们就遇到了这样的情况。如果在等待某个broker的确认信息时，该broker突然不可用，这显然会降低处理速度。这种速度减慢会导致回压和不可用，这正是我们所要避免的。</p><p></p><p>如果我们只是从首领broker中获取确认信息，将会遇到一个非常有意思的故障场景。如果我们在成功发布后又丢失了对首领broker的连接，会发生什么呢？首领选举会产生一个不同的首领。但是，如果原来首领已确认的条目并没有完全复制到其他broker上，那么这样的首领选举就会造成数据丢失，而这正是我们想要避免的。这叫做不完整的（unclean）broker首领选举。</p><p></p><p>我们是如何处理这种情况的呢？同样，这里需要进行权衡。我们有一个生产者库，它是基于Kafka生产者客户端的一个包装器。这里有两个相关的优化。首先，因为我们使用了non-keyed分区，所以库能够选择它写入的分区。如果某个分区因为首领broker不可用而无法使用它的话，我们的库会写入到不同的分区中。同时，因为分区是在一个under-replicated的broker集合上，也就是首领broker具有的条目比跟随者broker更多，复制还没有全部完成，那么我们的库会选择一个复制情况更好的分区。</p><p></p><p>通过这些策略，我们最终选择了以异步模式写入，即发布者将消息写入内存队列，并异步发送至Kafka。这有助于扩展性能，但是我们希望在同时遇到多个错误的时候，能够有一个最坏情况的数据损失上限。基于内存队列的大小和避免under-replicated分区策略，我们配置了令自己满意的上限。</p><p></p><p>我们监控了数据的持久性，从中可以持续得到4到5个9的可靠性，对于我们来讲，这是可以接受的。如果你的应用不允许丢失任何数据，那么可以选择在接受到所有broker的确认之后，再将该条目视为已处理。</p><p></p><h2>挑战：处理延迟和自动扩展</h2><p></p><p>在我们的系统中引入Kafka会有一个无法避免的副作用，那就是请求处理会有额外的延迟，这包括Playback API发布消息到Kafka以及Request Processor消费消息所需的时间。</p><p></p><p>还有就是数据在Kafka队列中等待的时间。这被称为滞后（lag），它是由消费者工作者节点和流量组成的一个函数。对于给定数量的节点，随着流量的增加，滞后也会随之增加。</p><p></p><p>如果你对峰值流量有一个明确的预估，那么就可以计算出系统中所需的处理节点的数量，以达到可接受的滞后。这样，我们就可以简单配置系统来管理峰值流量，只需“简单地设置即可，无需过多关注”。</p><p></p><p>对于我们来讲，流量在每天的不同时段和每周的不同日子都会有所变化。我们发现峰值的流量是低谷期的5倍。鉴于如此巨大的流量变化，我们希望能够更有效地利用资源，所以选择了自动伸缩。具体来讲，我们会基于流量添加或移除特定数量的消费者处理节点。</p><p></p><p>每当我们改变Kafka主题的消费者数量时，该主题的所有分区会在新的消费者集合之间重新平衡。这里的权衡是资源使用效率与重新平衡的成本。重新平衡会以不同的方式影响到我们。</p><p></p><p>如果你的处理是有状态的，那么必须要做一些复杂的事情。比如，消费者必须要暂停处理，然后获取内存状态，并根据Kafka中的偏移量进行已处理到何处的检查点判断。在分区重平衡之后，消费者会重新加载检查点之后的数据，然后基于检查点的偏移重新开始处理。</p><p></p><p>如果你的处理稍微简单一些，或者以外部方式存储状态，那么你可能会在重平衡进行的时候，继续正常进行处理。这样的话，当重平衡开始时，某些条目正在处理中，它们还没有发送确认消息到Kafka，这些条目将会出现在另外一个处理节点中，因为该节点在重平衡后对应到了这个分区。在最糟糕的场景中，我们会重复处理某些条目。如果你的处理是幂等的或者有其他方式处理重复的项目，那么这并不是什么问题。</p><p></p><p>下一个问题就是，何时以及按照多大的幅度来进行自动扩展？有人可能认为滞后是触发自动扩展的一个好指标。但问题在于，我们无法很容易地通过这个指标进行收缩。当滞后是零的时候，我们如何得知该收缩1个、10个还是50个处理节点呢？一次性移除太多的节点会导致“摇摆（flapping）”，也就是在短时间内一次又一次地移除和重复添加节点。</p><p></p><p>在实践中，很多开发人员会使用某个代理指标，比如CPU利用率。对于我们来讲，事实证明，每秒记录数（records-per-second，RPS）是一个很好的触发器，能够用来实现自动扩展。当系统处于稳定状态时，我们会测量RPS并建立一个基线。然后，当吞吐量相对于该基线发生变化时，我们就可以添加或移除节点了。</p><p></p><p>我们也有不同的模式实现扩展和收缩。我们希望避免在扩展过程中进行重平衡，因为此时已经有大量输入的数据，重平衡会暂时减缓消费者的速度，所以我们希望快速扩展。而收缩可以逐渐完成，因为此时支持的吞吐量要高于实际的值，我们可以接受再平衡带来的减速。</p><p></p><h2>挑战：乱序和重复记录</h2><p></p><p>在分布式系统中，会出现乱序和重复记录的情况。如何解决这个问题取决于应用的具体情况。在我们的场景中，我们使用了会话机制（sessionization），它会收集一个视频放映会话内的事件，该会话有一个明确的开始和结束事件。因此，我们会收集这个边界内该会话的所有事件。</p><p></p><p>对于给定会话内的多个事件，基于数据内的特定属性，我们会对其进行排序并去重。例如，每个事件会有一个递增的ID或来自客户端的时间戳。对于写入操作来说，当事件抵达服务器时，我们能够通过时间戳进行去重。</p><p></p><h2>挑战：偶然性的处理失败</h2><p></p><p>在消费者端，我们还要解决偶尔处理失败的问题。通常情况下，我们不想因为一个失败的条目而中断对整个队列的处理，有时候这种做法叫做队头（head-of-line）阻塞。相反，我们想要把失败的条目放到一边，继续处理队列中的其他内容，稍后再来单独处理它。</p><p></p><p>我们希望系统具备这样的特点，那就是再次尝试之前应该有一个有限的等待时间，没有必要立即进行尝试。我们可以为这些失败的条目使用一个单独的队列，也叫做延迟队列（delay queue）。有多种方式可以实现这一点。我们可以将其写入到另外一个Kafka队列中，然后构建一个延迟执行的处理器。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/27%20delay%20queue-1662738783532.jpeg\" /></p><p></p><p>对于我们来讲，使用<a href=\"https://aws.amazon.com/sqs/\">Amazon Simple Queue Service</a>\"（SQS）很容易实现这一点，因为我们已经在<a href=\"https://aws.amazon.com/ec2/\">Amazon Elastic Compute Cloud</a>\"（EC2）上运行了。我们会将失败的条目提交到SQS队列中，该队列有一项特殊的功能，里面的条目在消费之前，可以指定一个间隔时间。</p><p></p><h2>消费者平台</h2><p></p><p>我们可以使用多种平台来消费和处理来自Kafka的条目。在Netflix，我们使用了三种不同的平台。<a href=\"https://flink.apache.org/\">Apache Flink</a>\"是一个流行的流处理系统。<a href=\"https://netflix.github.io/mantis/\">Mantis</a>\"是Netflix几年前开源的一个流处理系统。最后，Kafka有一个嵌入式的<a href=\"https://cwiki.apache.org/confluence/display/KAFKA/Clients\">消费者客户端</a>\"，借助它我们可以编写微服务，直接处理Kafka中的条目。</p><p>我们首先面临的问题是，哪种平台最好用？最终，我们意识到这个问题本身就是错误的。相反，问题应该是，哪种处理平台在哪种使用场景下最为有利？这三种方式各有优缺点，在不同的场景下，这三种平台我们都用到了。</p><p></p><p>如果要进行复杂的流处理，那么Mantis和Apache Flink非常合适。Apache Flink还内置了对有状态流处理的支持，其中每个节点都可以存储本地状态，例如可以用于会话机制。微服务是很有吸引力的方案，至少对我们来讲是这样的，因为Netflix工程师对微服务生态有良好的支持，涵盖生成或初始化整洁的代码库，到CI/CD流水线和监控。</p><p></p><h2>跨区域的问题</h2><p></p><p>跨区域（cross-region）问题是很重要的，因为Netflix要在多个区域运营。由于我们正在运维的是一个大型的分布式系统，某个区域可能偶尔会出现不可用的情况。我们每年都会进行多次演练，关闭某个区域，确保能够实现跨区域的流量转发。</p><p></p><p>乍看上去，这没有什么问题，如果某个条目本来要发往另外一个区域，我们可以借助跨区域的隧道，将其远程发布到Kafka主题中。通常情况下，这是可行的，但是当我们遇到该区域真正无法使用时，远程发布方式就无法奏效了。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/28%20cross%20region-1662732582381.jpeg\" /></p><p></p><p>我们做了一个简单但微妙的修改，那就是始终希望在本地发布。我们发布到另外一个Kafka主题，并使用区域路由器异步将其发送至另外一个区域中。通过这种方式，某个放映会话的所有事件就可以一起处理了。</p><p></p><h2>测试、验证和上线</h2><p></p><p>现在我们已经解决了挑战，并做了权衡，那么该如何测试和上线的呢？在这个过程中，可以使用<a href=\"https://microsoft.github.io/code-with-engineering-playbook/automated-testing/shadow-testing/\">影子测试（Shadow testing）</a>\"技术。在你的环境中，可能已经使用过类似的策略了。对我们来讲，这包括让Playback API双重写入到现有的同步系统和Apache Kafka中，异步请求处理器会基于Apache Kafka进行消费。然后，我们会有一个验证程序，它能校验正在处理中的请求是一致的。</p><p></p><p>下一步就是确保存储的制品是相同的。为此，我们创建了一个影子Cassandra集群。在这里，我们使用成本来换取足够的信心。如果你能有一个环境，可以相对容易地在短时间内获得额外的资源，那么在上线之前，它可以给你带来额外的信心，对于我们这样的云环境来讲，这一点是很容易实现的。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/19%20shadow%20testing-1662732582381.jpeg\" /></p><p></p><p>最终，我们上线了这个方案，按userId分割流量，也就是说，给定userId的所有流量被持续写入新系统或旧系统。我们从1%的用户数据写入新系统开始，然后逐步增加比例，一直到100%的用户。这使我们的迁移非常顺利，没有对上游或下游系统造成影响。</p><p></p><p>下图显示了我们现在的情况和下一步的发展方向。其中，蓝色的内容，即Playback API、Viewing History Processor和Bookmark Processor以及Kafka，现在已经投入生产。我们还有处理额外数据的其他组成部分，包括Attributes processor和Session Logs服务，它们将会很有趣，因为数据量非常大，比你通常写进Kafka的数据要大得多。我们将有一些新的挑战需要解决。</p><p></p><p><img src=\"https://imgopt.infoq.com/fit-in/1200x2400/filters:quality(80)/filters:no_upscale()/articles/microservices-async-migration/en/resources/110%20future%20work-1662732582381.jpeg\" /></p><p></p><p></p><h2>结论</h2><p></p><p>我们已经看到，异步处理是如何为我们提高可用性和数据质量的，以及在我们的环境中，是如何进行设计选择和权衡的。在实施之后，影子测试和增量上线确保我们能够进行自信和顺利地部署。有了这些信息，请思考如何将这些经验应用到你的环境中，以及在类似的旅程中可能会做出哪些其他的权衡。</p><p></p><h2>作者简介</h2><p></p><p>Sharma Podila是一位软件工程领导、系统建设者、合作者和导师。他在云资源管理、分布式系统、数据基础设施方面有很深的造诣，并在交付跨功能的大规模分布式系统方面有着丰富的成功经历。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/microservices-async-migration/\">Microservices to Async Processing Migration at Scale</a>\"</p><p></p><p>相关阅读：</p><p><a href=\"https://www.infoq.cn/article/JC8GL4g4OHL1WFISs4g1\">Netflix基于Redis、Kafka和Elasticsearch构建高吞吐优先队列Timesone</a>\"</p><p><a href=\"https://www.infoq.cn/article/MXfmbyJkSmDkIHNRJb5Q\">破天荒！Netflix 为软件工程师引入细分职级，已有不少老员工因对新职级不满离职</a>\"</p><p><a href=\"https://www.infoq.cn/article/wMuuGUleIPIIDhWGibu5\">Netflix工作10年，我收获的一些关键经验</a>\"</p>",
    "publish_time": "2022-11-21 08:00:00",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "大型企业如何建设自主可控的数智化平台？",
    "url": "https://www.infoq.cn/article/1q20RyHVsgS7xi4k1yVc",
    "summary": "<p>“坚决打赢关键核心技术攻坚战，以高水平科技自立自强推动经济社会发展”、“着力提升产业链供应链韧性和安全水平”，这是二十大报告中重点提出的两个问题。就 IT 产业而言，其供应链稳定的重要性不但超出了 IT 产业本身，而且直接关乎到下游各行各业的稳定和发展，关乎到整个经济发展和社会稳定。</p><p>&nbsp;</p><p>央企及龙头国资企业作为国民经济发展的中坚力量，在政策加技术的双轮驱动下，积极投身于数智化转型浪潮。通过安全可控、自主创新的技术体系，构建能够实现国产化价值替代的“中国方案”，成为我国企业实现数智化转型与商业创新的必然选择。</p><p>&nbsp;</p><p>从信息化到数智化，从上一代企业信息化应用系统 ERP 到新一代数智商业创新平台 BIP，企业服务的产品结构与形态都发生了巨大变化，其中平台底座变得越发重要、多元、强大。国央企数智化价值替换的核心诉求之一就是通过构建数智化平台底座，打造统一数智化支撑。数智化底座可以满足企业自身管理需要，做到一“屏”尽览无障碍、一“网”打尽无遗漏、消除信息孤岛，实现互联互通无梗阻，向着数字化管理、智能化决策的目标迈进。</p><p></p><p></p><h2>自主可控为数智底座提出更多要求</h2><p></p><p></p><p>&nbsp;</p><p>自主可控技术就是依靠自身研发设计，全面掌握产品核心技术，实现信息系统从硬件到软件的自主研发、生产、升级、维护的全程可控。数智化自主可控对数智底座提出了更多要求：</p><p>&nbsp;</p><p>一，实现自主可控管理安全。在自主可控技术实现之前，首先要先解决自主可控的管理，没有严格的管理手段即便再安全的产品也会漏洞百出。安全管理意味着责任切实落实问责机制，而信息安全管理体系的建立正是解决这些管理和治理层面问题的最佳途径；</p><p>&nbsp;</p><p>二，实现自主可控网络安全。主要包括通信安全、区域边界安全、计算环境安全；</p><p>&nbsp;</p><p>三，实现自主可控开发安全。当企业客户的需求不能通过采购现有信息安全系统或产品满足时，需要供应商在信息安全系统设计的基础上，按照软件安全开发流程开发系统或产品；</p><p>&nbsp;</p><p>四，实现自主可控数据安全。数字经济时代下，数据成为了当下企业组织重要的资产之一，企业组织需要施行行之有效的数据安全管理，计划、制定、执行相关安全策略和规程，确保数据和信息资产在使用过程中有恰当的认证，授权等措施，最终目标是保护信息资产符合隐私及保密法规要求，并与业务要求相一致；</p><p>&nbsp;</p><p>五，实现自主可控授权认证安全。身份验证可以说是安全界的核心，授权认证安全包括用户身份认证和授权、身份管理、欺诈检测治理。</p><p></p><p></p><h2>自主创新，实现真正的国产化价值替代</h2><p></p><p></p><p>&nbsp;</p><p>掌握核心技术的知识产权实现产品自主可控需要坚持自主发展和创新发展，没有自主创新就没有核心竞争力，就难以与跨国公司竞争，这就需要在关键核心技术上加强技术的创新和积累，重点技术攻关。</p><p>&nbsp;</p><p>用友作为“国产化价值替代”的主张者与引领者，一直坚持产品的自主研发和设计，为以央国企为代表的大型企业提供了自主创新的企业数智化新底座——用友iuap，真正实现国产化价值替代，帮助更多中国企业迈向世界一流。</p><p>&nbsp;</p><p>早在 2014 年，用友 iuap 推出国内第一款纯云原生 PaaS 平台，完全采用微服务架构开发运维一体化，公有云优先、然后再快速专属化私有化的方法。用友是第一家也是唯一一家把互联网化云计算技术完整实践到企业服务领域并成功实现从公有云到私有云敏捷工程化的厂商。</p><p>&nbsp;</p><p>目前，用友 iuap 已实现多项技术突破，并基于最新的互联网技术体系、产业级社会化视角，打造企业数智化新底座，帮助企业实现技术、业务、决策的深度融合，最终实现企业效率和收益的提高。其中，5 项首创和领先的技术包括：首创 YMS 云中间件技术，实现跨云技术突破和多云适配能力；首创云上云下一体的持续交付体系，让企业私有云平台体验到公有云的更新效率，让云下应用升级像 AppStore 一样简单；领先的多租户、多数据中心技术，实现了多云异构的“云上管理、云下运行”。同时，针对超大型企业客户，按需提供灵活定制代码服务；自研多维数据引擎（存算一体），实现 100%自主安全可控，支持千亿级数据规模下的“多准则、多币种、主附表”快速合并，一键出表；安全可信的国产化信创适配，为企业客户提供稳固可信、自主可控的数智化平台服务。</p><p></p><p></p><h2>安全可控，为数智化提供安全保障</h2><p></p><p></p><p>&nbsp;</p><p>信创作为我国 IT 产业发展升级采取的长期计划，旨在实现“自主可控、安全可靠”的发展目标，同时也是国家经济数字化转型、提升产业链发展的关键。目前，我国信创产业已经从“可用”进入“好用”阶段，国产 IT 基础设施和软硬件也进行了大量的适配工作。有研究机构预测，未来三年，行业信创以及央国企信创建设将迎来全面加速。</p><p>&nbsp;</p><p>用友把网络安全、数据安全、隐私保护作为公司业务和运营的底线要求，视用户数据安全和用户隐私保护为用友最重要的安全原则和战略方向，通过不断优化技术和提升开发能力，竭诚为客户提供安全、稳定、可靠、合规的 SaaS 化应用服务产品。用友建立了自己强大的开发团队与安全团队，夯实了数智化底座，确保产品自主研发，自主创新、安全可控。通过完善的服务体系与产品体系，帮助大型企业实现安全可控的全面数智化。</p><p>&nbsp;</p><p>一、统一镜像源。基于用友沉淀的信创技术资产，基于技术平台所部署的应用，统一使用技术平台维护的基础镜像，针对项目中各种漏洞和风险，随时适配并提供解决方案；</p><p>&nbsp;</p><p>二、交叉编译。基于用友信创的最佳实践，采用 x86 交叉编译 ARM 架构源码，简化开发过程中对底层组件的开发适配工作；</p><p>&nbsp;</p><p>三、多系统兼容运行。基于用友的最佳实践，在基于 Yum、RPM 管理机制的国产系统中进行离线包制作，满足各类离线系统细微差异中的环境部署；</p><p>&nbsp;</p><p>四、数据库适配技术。基于用友最佳实践，采用统一数据库适配转换层，进行语法、关键字、函数的转换，应用层无感知，并支持横向扩展，降低适配难度，提高适配效率；</p><p>&nbsp;</p><p>五、交付部署。在部署方案上，支持多套环境部署架构。生产环境承载着正式的业务访问，该区域所有业务与中间件均采用集群架构部署，避免单点故障，提升业务可用性。在预发和生产独立部署 K8S 集群，同时 Ingress 链路分离保证业务稳定性。中间件、数据存储、业务资源池都是集群部署，支持高可用。</p><p></p><p>用友 iuap 遵循国家网络安全、信息安全、数据安全等安全理念，强化安全建设能力，提升安全保障水平。用友 iuap 通过国家等保 2.0 等认证，可以确保系统符合云服务客户数据、用户个人信息等存储于中国境内，如需出境遵循国家相关规定等要求。同时，通过中国信息安全测评中心最高等级（级别：EAL3+）信息技术产品安全评测证书，这是国内首个，也是目前唯一达到该安全等级认证的应用软件产品。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/70/70a7a96c9c8f189e95649aa9ff0a62a9.png\" /></p><p></p><p>同时，用友推动国产化软硬件全面适配，用友 iuap 平台秉承创新、开放的理念，携手合作伙伴共建产业链生态。用友联合龙芯中科、统信软件、达梦数据库、东方通、人大金仓、中国长城、飞腾信息、麒麟软件、奇安信、瀚高等国产化厂商，发布用友信创全栈适配成果 3.0，标志着用友在信创领域取得了显著成果，也进一步展示了用友持续推进国产化替代的决心。用友 iuap 已全面适配国内主流国产化厂商的 210 项信创产品。</p><p></p><h2>数智化+信创化，推动央国企实现真正的价值替代</h2><p></p><p></p><p>2020 年起，我国信创进入大规模落地推广阶段。国家提出“2+8+N”信创体系，包括党政+金融、电信、电力、石油、交通、教育、医疗、航空航天八大关键行业+信创产品全面应用。2022 年信创产业开启规模化应用，2023 年开始，金融、运营商、电力等八大关键行业的国产化有望加速。</p><p>&nbsp;</p><p>央国企作为我国经济发展的重要推动力，成为信创发展的首要阵地。在今年下发的 79 号文中，要求全面完成综合办公系统和重要基础设施替代。要求所有央企、国企、地方国企，全面落实信创替代。其中 OA、门户、邮箱、纪检、党建、档案管理要求全面替换；战略决策、ERP、风控管理、CRM 经营管理系统等要求应替就替；生产制造、研发系统要求能替就替。</p><p>&nbsp;</p><p>用友认为真正的国产替代不仅仅是把 ERP、CRM 等软件换成国内的，而是要以新的思路、新的应用将数智化与信创化相结合，形成中国企业真正的价值替代，扎实推动国有企业实现质量更好、效益更优、竞争力更强、影响力更大的发展。</p><p>&nbsp;</p><p>目前各行业应用从应用软件的信创化逐渐过渡到基于平台的全面信创化。用友 iuap 作为企业数智化新底座从平台自主创新到信创产业生态融合，基于信创的技术使能，重构云化底层平台及上层应用，加速信创产业的发展，全面提升企事业单位的信创水平。</p><p>&nbsp;</p><p>用友 iuap 为企业与公共组织提供多态融合的综合性企业云服务与定制化解决方案，涵盖智能财务、数字人力、敏捷供应链、智慧采购、智能制造、数字营销、数智研发、数字项目、数智资产、协同办公等核心领域云应用场景，纵深金融、政务、建筑、医疗、能源、汽车等多行业深度应用全生命周期管理，实现行业云的全面布局。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/3b/3bdfaf6b04030ccb8d77b8d838188356.png\" /></p><p></p><p>用友基于丰富的行业经验，聚焦安全可控、自主创新、数智化平台建设等信创发展重点方向，配备央企专家团队，全面开展央企信创服务工作，已经为近 65%的中央企业提供数字化产品、服务及解决方案。</p><p>&nbsp;</p><p>比如，某工业集团基于用友 iuap，构建了信创体系下的合并报表。在隔离网络的情况，统一核算平台，统一核算主数据，统一财务报表，包括管理报表，同时满足国产化要求；某烟草公司，基于用友 iuap 构建信创体系下的人力数字化。基于国产化的数智化底座，围绕人力数据建立了稳态经营管理服务及敏态创新服务基础，实现内部组织、人事、薪酬等业务流程和数据协同；某水电集团，搭建了国产芯片、操作系统、数据库信创底座，基于信创底座以及用友 iuap 数智化新底座，打造企业中台，实现资源共享、标准管理，以支撑企业业务模式变革和快速创新，提升企业效率和快速响应能力。</p><p>&nbsp;</p><p>作为中国和全球领先的企业和公共组织云服务与软件提供商，用友一直采用自主创新的信息技术，来打造服务企业业务与管理升级的产品与方案。数智商业时代，用友通过企业数智化新底座用友 iuap 帮助大型企业完成自主可控的数智化平台建设，真正实现国产化价值替代，迈向高质量发展！</p>",
    "publish_time": "2022-11-21 09:53:40",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "《如果我夺冠了》",
    "url": "https://www.infoq.cn/article/aZqMEOpiTkJlBu3fL0d2",
    "summary": "<p>咳咳，大家好，我是<a href=\"https://www.infoq.cn/article/7ejrDIB7r5KRIuLwaRPd\">2022 深圳国际金融科技大赛——西丽湖金融科技大学生挑战赛</a>\"组委会最受同学们喜爱、最最帅气的（没错，我自封的）小助手，上周大赛初赛完美收官，我们共接到了来自 360+ 所高校的 1300+ 名同学报名，他们共组成了 500+ 支队伍。开赛以来，不少参赛同学常常来找我聊天互动，我深深地感受到了大家对本次大赛的热情和必胜的决心！</p><p></p><p>于是，小助手我随机采访了一些看起来准备十分充分的夺冠种子型选手，聊了一下他们对于夺冠后生活的憧憬...</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/60/602edf7e4864f2b0ece7971ef37c67d5.jpeg\" /></p><p></p><p></p><h2>#01</h2><p></p><p>夺冠拿到奖杯，</p><p>下了领奖台的第一件事你要做什么？</p><p></p><p>以下访谈信息取材于北京理工大学李同学、桂林电子科技大学卜同学、耿同学。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/9a/9a71ddd001f11b5b69abed7d77140da5.jpeg\" /></p><p></p><h4>所以原因是？</h4><p></p><p></p><p><a href=\"https://www.infoq.cn/article/amRrNh9XruvaPjY90RWO\">2022 深圳国际金融科技大赛（ FinTechathon ）—— 西丽湖金融科技大学生挑战赛</a>\"为进入决赛的同学提供 100 余张可双向选择的实习面试直通卡，助力高校人才实现更充分、更高质量的就业目标，构建产学研一体化人才培养模式，以构建金融科技人才培育生态圈。</p><p></p><p>以下为大赛官网刚刚更新的一版，同学们可以使用“实习面试直通卡”的岗位：</p><p><img src=\"https://static001.geekbang.org/infoq/52/528b67fb1e5cf58eb1268e94705d6233.jpeg\" /></p><p></p><p></p><h2>#02</h2><p></p><p>夺冠之后</p><p>你将发一条怎样的朋友圈？</p><p></p><p>以下访谈信息取材于东南大学颜同学、南特高等商学院李同学、广东技术师范大学张同学。</p><p><img src=\"https://static001.geekbang.org/infoq/54/548b8c86b8d6ff555b4b33f759c5aae9.jpeg\" /></p><p></p><h5>所以究竟哪里不一样？</h5><p></p><p></p><p><a href=\"https://www.infoq.cn/article/xlshY7xzPkVyq5rK4BtT\">2022 深圳国际金融科技大赛（ FinTechathon ）—— 西丽湖金融科技大学生挑战赛</a>\"所颁发的区块链数字证书，为所有获奖者提供具有唯一标识的数字化获奖凭证。获奖选手可随时查看和下载，校方、招聘企业等也可以扫码快速验证证书真伪，达到可信验证、高效互通的效果。未来，区块链数字证书可进一步拓展到奖学金认证、技能培训认证等场景，为金融科技人才专业资格与资质提供便捷的查验与认证通道，助力构建金融科技人才培养可信体系。</p><p></p><p>该数字证书基于微众区块链技术，采用国产安全可控开源平台FISCO BCOS为底层链，上链获奖信息防篡改、可追溯、数据来源可信任。微众区块链、深圳大学微众金融科技实验室、深圳市金融区块链发展促进会（金链盟）为该数字证书提供技术支持。&nbsp;</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/b4/b4b7f3161be6f2694f24ba008abd8e47.png\" /></p><p></p><p></p><p></p><h2>#03</h2><p></p><p>拿到奖金后，你有什么安排？</p><p></p><p>以下访谈信息取材于深圳大学刘同学、北京外国语大学邓同学、清华大学赵同学。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/79/794578eccc603e5f22833df15d8f7d7c.jpeg\" /></p><p></p><h4>所以到底有多少奖金？</h4><p></p><p></p><p>2022 深圳国际金融科技大赛（ FinTechathon ）—— 西丽湖金融科技大学生挑战赛设置总额超过 69 万元人民币的赛事奖金，激励高校人才持续积极投入到金融科技创新事业中。人工智能赛道、区块链赛道、产品经理赛道将分别有10支队伍进入决赛，决赛现场将产生一等奖、二等奖、三等奖各一队。获得一等奖的团队可以获得奖金100,000元；获得二等奖的团队可以获得奖金80,000元；获得三等奖的团队将获得奖金50,000元。</p><p></p><p>所以，你以为</p><p>2022 深圳国际金融科技大赛</p><p>（ FinTechathon ）——</p><p>西丽湖金融科技大学生挑战赛的现场</p><p>只有炫酷的奖杯和区块链证书、</p><p>丰厚的奖金、挑花眼的实习岗位？</p><p></p><p>NO NO NO...</p><p>11.29-11.30，决赛历时 2 天</p><p>任同学们尽情释放自己的才华风采</p><p>36h 编程马拉松、现场答辩...</p><p>全程高能，无限热血！</p><p></p><p>可以浅浅感受一下上届大赛的现场 ↓</p><p></p><p></p><p>本届大赛作为首届金融科技节的重要一环</p><p>这场全球高校都共同参与进来了的世界级竞赛</p><p>来自中科院、深圳大学、武汉大学、西南财经大学、</p><p>华南理工大学、微众银行等学企单位的</p><p>数十位科研专家会来到决赛现场担任评委嘉宾</p><p>在第一时间为参赛团队指点迷津！</p><p></p><p>通过 2 天决赛，决出获胜队伍后</p><p>大赛官方将在&nbsp;12.1 下午举行</p><p>第二届湾区金融科技高校分论坛暨</p><p>2022 深圳国际金融科技大赛</p><p>——西丽湖金融科技大学生挑战赛颁奖典礼</p><p></p><p>届时大赛奖杯、区块链证书、</p><p>69w+ 奖金池、100+ 实习岗位都将集中亮相！</p><p>让同学们在领奖台上尽享高光时刻！</p><p></p><p>话不多说，让我们共同期待</p><p>11 月 29 日，决赛场见！</p>",
    "publish_time": "2022-11-21 10:34:28",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "AI 辅助编程创业7年后，Kite 宣布停止：未能使用AI 达成10倍突破、50 万开发人员不会付费使用",
    "url": "https://www.infoq.cn/article/jp6bYxMWR53wFuMSRpp3",
    "summary": "<p>当地时间11 月 16 日， AI 辅助编程初创公司<a href=\"https://www.kite.com/blog/product/kite-is-saying-farewell/\">Kite 宣布将</a>\"停止开发 Kite，且不再支持 Kite 软件。从2014&nbsp;年至2021年，Kite 创始人Adam Smith 对公司这七年的失败原因进行了总结。</p><p>&nbsp;</p><p>第一，企业未能实现 AI 辅助编程的愿景。 Smith 认为进入市场早了 10 年，意味着相关技术尚未准备好。</p><p>&nbsp;</p><p>“我们构建了当时最先进的 AI 来帮助开发人员，但由于 ML on code 的技术水平不够好，因此它的改进没有达到突破所需的 10 倍。”Smith 表示，最大的问题是最先进的模型也不理解代码的结构，例如非本地上下文。</p><p>&nbsp;</p><p>“我们在更优的代码模型方面取得了一些进展，但问题是工程密集型的。构建一个能够可靠合成代码的生产级工具可能花费超过 1 亿美元，目前还没人尝试过。”Smith 认为，即使是由 Github 与 OpenAI 合作构建的<a href=\"https://www.infoq.cn/article/x8rOEIh9fzXiskf1LMAj\">Github Copilot</a>\"虽然表现出很好的前景，但仍有很长的路要走。</p><p>&nbsp;</p><p>Smith 指出，如果不使用 AI 将开发人员生产力提高 10 倍的话，Kite 可以建立成功的业务，但Kite 并没有这样做。</p><p>&nbsp;</p><p>第二，Kite 没有建立商业化业务。</p><p>&nbsp;</p><p>根据介绍，Kite创业的顺序是先建立团队，然后研发产品，之后进行分销，最后是货币化。“因为我们的产品构建很难，所以我们先建立了一个世界级的工程团队。这点我们做得非常成功。然后我们专注于产品研发。直到 2019 年，即公司成立五年后，经过多次重大工程迭代才让产品与市场契合。然后我们扩大了用户群。这点我们执行得非常好，每月活跃开发者增加到了 500,000 名，营销支出几乎为零。然而，我们的产品未能产生收入，50 万开发人员不会付费使用它。”</p><p>&nbsp;</p><p>Kite 团队得出的结论是，个人开发者不为工具付费。经理人可能会这样做，但他们只想为离散的新功能买单，即让他们开发人员的编写代码速度提高 18% 这点，并不能引起他们足够强烈的共鸣。</p><p>&nbsp;</p><p>随后，Kite 探索了业务转型，并找到了一个新方向——代码搜索。“但经过七年的紧张工作和早期创业的压力，我们的团队太累了，无法追求这个支点，我们决定找到一个软着陆点。”Kite 说道。</p><p>&nbsp;</p><p>对于投资者，Smith 表示，“感谢您对我们的信任，很抱歉没有成功。我知道我们的投资者将继续为新业务提供资金，即使很大一部分没有成功。我很庆幸生活在一个投资者承担此类风险的世界中，因为这种冒险是进步的必要组成部分。”</p><p>&nbsp;</p><p>对于团队，Smith 也对没有成功一事表示抱歉。“我们拿着低于市场水平的薪水来延长跑道，并且长时间工作，尤其是在公司成立初期。我们团队成员的背景都非常优秀，招聘人员一直给我们打电话，在其他地方提供更高的职位和机会。”</p><p>&nbsp;</p><p>&nbsp;</p><p>“我们迫不及待地希望 AI 彻底改变编程。”Smith表示，“虽然 Kite 是该领域的先驱，但我们并不是将其落地的公司。这不是我们开始时希望的结果，但我们所有进行实验的人的勇气和贡献依然值得歌颂。”</p><p>&nbsp;</p><p>目前， Kite 的大部分代码都已在 <a href=\"https://github.com/kiteco\">GitHub 上开源</a>\"，包括其数据驱动的 Python 类型推理引擎、Python 公共包分析器、桌面软件、编辑器集成、Github 爬虫和分析器等等。</p><p></p><p></p><p>参考资料：</p><p>https://www.kite.com/blog/product/kite-is-saying-farewell/</p>",
    "publish_time": "2022-11-21 10:39:25",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "汽车“元宇宙”的初尝试",
    "url": "https://www.infoq.cn/article/id8Bz202Zpw3jeiTY28T",
    "summary": "<p>元宇宙的概念自 2021 年下半年以来就一直热度不减。根据 IDC 预测数据，从 2020 至 2024 的 5 年间，全球虚拟现实产业规模年均增长率将达到 54%。元宇宙犹如时代的列车呼啸而至，众多互联网巨头争相“搭乘“，而一直在寻找数字化转型解决方案的汽车行业也不甘落后，车企们纷纷在元宇宙领域施展拳脚。于是，InfoQ 特别采访了汽车之家主机厂事业部技术总监陈超，深度了解一下元宇宙技术在汽车行业的应用与实践。</p><p>&nbsp;</p><p>陈超认为，“汽车元宇宙是以数字孪生的汽车为中心，通过布置虚实结合的环境再结合智能数字人组成而成的可与现实世界交互的虚拟世界。”</p><p>&nbsp;</p><p>作为国内领先的汽车消费者在线服务平台，<a href=\"https://www.infoq.cn/article/oBSd1zNsBz8alRiH73k4\">汽车之家</a>\"积极尝试为用户带来全新的感官体验，通过虚拟数字人的方式充分发挥其情感链接价值，提供多元的品牌营销场景，拉紧了用户与品牌之间的共同纽带；又借助元宇宙技术，使用户能够在汽车之家能源空间站完成浏览、对比、试驾多个品牌新能源汽车的一站式操作；此外还采用 3D 虚拟展馆技术赋能“中国春季云车展”和“818 全球超级车展”，以颠覆性的创新能力和强大的科技实力展示了自己在元宇宙领域内的底蕴。</p><p>&nbsp;</p><p></p><h2>一、通过“虚拟数字人”讲好汽车品牌故事</h2><p></p><p>&nbsp;</p><p>借助虚拟数字人这一元宇宙载体，汽车品牌可以通过在虚拟空间进行互动，把过去无法实现的创意和效果得以实践，全方位展示品牌故事，并且可以和其他生态在虚拟空间进行联名创新。今年818 汽车节中，汽车之家 AI 体验官宫玖羽、汽车之家品牌代言人谷爱凌“数字人”陆续亮相。</p><p>&nbsp;</p><p><img src=\"https://static001.infoq.cn/resource/image/33/bd/33de401eaeb910452b0eb604b73b14bd.png\" /></p><p></p><p>二者在 3D 人物模型方面区别比较大，宫玖羽是之家内部完全虚构的一个人物角色，在设计的时候更偏重往人物虚拟化 IP 方向打造，以突出人物独特性；谷爱凌则是由专业模型制作团队 1:1 真人复刻还原的孪生数字人形象，由于谷爱凌是一个家喻户晓的体育明星，所以对模型细节的要求很高。为了更真实的还原谷爱凌的形象，其终版人物模型三角面数量高达 1 亿多个，同时还要对谷爱凌的表情、动作和声纹进行了数据采集，应用了动作绑定和 TTS 等 AI 技术。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/29/72/290cbd5266c83d1fda5fb3a7bba12172.png\" /></p><p></p><p>“超写实虚拟人需要尽量逼真写实还原真人效果，让用户感觉到是在和一个真人互动。”陈超表示，这其中涉及到高精模型制作、丰富的真人表情、流畅的动作、真人语音效果对话、智能实时对话等技术实现：</p><p>&nbsp;</p><p>在人物形象方面，谷爱凌对真人形象的细节还原度较高，只采集本人的声纹数据；宫玖羽则更多侧重打磨人物个性 IP，对多套真人声纹数据进行采集，可以随意切换不同版本的声音；在全流程实时渲染方面，两款虚拟人都应用了汽车之家自研的高性能 3D 实时渲染技术，依托云端高性能 GPU 显卡主机做实时渲染，以高清视频流的方式推送到各个边缘设备节点，提升渲染性能的同时可以覆盖支持更多低端边缘设备；在音频识别方面，汽车之家打造的这两款虚拟人可以理解普通话、四川话等多种方言，并能流畅地使用方言和用户进行对话。</p><p>&nbsp;</p><p>当然，虚拟数字人不是独立存在的，它需要依托于场景、车等其他虚拟化，大量级的实时渲染对服务器造成了很大压力，并且拓展性也非常差。为此，汽车之家实现了一套信号融合架构，把之前一台设备、一套技术框架内的运算任务都通过高清视频信号的方式接入到 3D 元宇宙车展中，并针对其中涉及到的漫反射和透视问题编写定制化脚本，优化视觉感受。</p><p>&nbsp;</p><p>未来，<a href=\"https://xie.infoq.cn/article/14e0bde8d7ed3c04f25601a46\">汽车之家</a>\"除了通过持续升级数据样本和算法模型来提升虚拟人的智能化水平，让数字人更智能、更懂用户外，还会把数字人推广到全息舱、MR、真人、虚拟人混流直播等更多的场景中，让虚拟人技术赋能整个汽车行业。</p><p></p><p></p><h2>二、“全息体验仓”颠覆汽车行业传统营销方式</h2><p></p><p>&nbsp;</p><p>“虚拟数字人+虚拟场景”等虚拟元素链接到实际营销活动中已十分普遍，不仅为品牌和企业提供了年轻化营销的创新思路，也为各行业如何用虚拟营销与 Z 世代产生链接带来更多启发，除了虚拟数字人之外，汽车之家还将虚拟场景链接到了实际营销当中，不断提升消费者的体验，在汽车之家能源空间站上海体验店中一站式浏览、对比和试驾多个品牌的新能源汽车。</p><p>&nbsp;</p><p>空间站中最大的亮点就是“全息体验舱”，“全息技术”是“全息体验舱“的关键所在，汽车之家调研了国内外的一些 3D 虚拟化呈现技术，通过对比发现全息膜与环境非常契合，但考虑到全息膜上的舞台剧十分逼真，而汽车对效果的要求更高，汽车是否适合全息膜的场景尚未可知。为此，汽车之家专门做了一辆车通过视频的方式投射到全息膜上进行测试，发现效果差强人意，着手选用高级别的硬件在总部搭建了测试版全息舱，精心挑选供应商、硬件设备、3D 程序、中控指令台等，之后再对物理空间、图像文字清晰度、灯光、音响和背景亮度等进行打磨，最终在面前呈现了一台栩栩如生的汽车。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/97/3d/97460cfac317c5223af4fee66211483d.png\" /></p><p></p><p>正如陈超所说，真正的狭义全息技术并不常见，它起于全息照相技术，应用于全息光栅光波导技术中，全息照相的过程十分复杂，很难为普通消费者所用，目前国内外消费级的狭义定义全息产品还没有。大部分的消费级产品分两类，一类是借助近眼显示设备和 3D 实时渲染技术呈现的“感知全息”，比如 Oculus 和 Hololens，这种目前国内外都有不错的消费级产品落地。还有一类就是我们说的类全息平面投影，通过借助半透半反的膜层把平面显示器的内容反射到观察者眼中，营造出立体感。好处是对用户设备没有要求，比较适合展厅类效果呈现。</p><p>&nbsp;</p><p>纵观整个全息技术领域，目前要实现真正的狭义上的全息技术还存在较多的技术难点，如全息照相技术中所使用的全息光栅镜片的曝光制备技术，对光学实验环境有着很高的要求，无法在消费级产品中大规模量产。一个比较可行的方案是拓展AR 类全息技术，例如 Magic Leap 公司的光场全息技术，但是这项技术对 AR 眼镜硬件设备的要求也很高。</p><p>&nbsp;</p><p>目前，<a href=\"https://www.infoq.cn/article/8Xg8HDBIAducvy6AueKE\">汽车之家</a>\"在 3D 车的呈现方面专门针对类全息平面做了深度的效果优化，汽车之家在国内类全息平面投影技术的使用和整合程度上来说已是领先水平。未来，汽车之家上线接入更多的全息车辆，持续打磨更好的全息效果，并通过结合虚拟数字人和全息投影来打造更多的全息场景。</p><p></p><p></p><h2>三、“3D 虚拟展馆”打造用车、看车新体验</h2><p></p><p>&nbsp;</p><p>虚拟展馆是指在互联网平台上发布的利用VR 技术构建的数字化展览馆，是互联网新技术与传统会展领域的新融合。它是一种三维互动体验方式，不仅突破了时空限制，节约了建造成本，还可以发挥无限的想象创意，使观众能够随时随地在网络平台上感受展馆及展品，用仿真互动的方式体验“身临其境，畅游无限”的精彩。</p><p>&nbsp;</p><p>汽车之家从三个方面应用3D 虚拟展馆技术赋能车展，首先，打造了一个通用的 3D 展馆和 3D 模型技术中台，依托中台的低代码能力完成展馆的分钟级搭建，同时提供 2D/2.5D 层自定义能力，支持自助搭建各种不同效果的展厅，极大提升车展上线效率；其次，进行车展 3D 功能组件化封装，抽象地提炼出了 50 余个 3D 功能组件供多个展馆间进行快捷方便的复用；第三，将外部合作业务以插件化的方式接入，汽车之家设计了一套通用的插件化接入机制，实现外部合作业务，通过编写插件的方式快速接入展馆。</p><p></p><p><img src=\"https://static001.infoq.cn/resource/image/89/60/896aa92ff8b2da26172bcb514f4e8560.png\" /></p><p></p><p>然而，罗马非一日建成，在 3D 虚拟展馆技术方面，汽车之家也进行了大量探索。比如手机是我们目前最常使用的设备，但手机的内容表现力往往受屏幕尺寸、电池、处理器（CPU、GPU）以及带宽等因素的限制，为了能让用户尽情在手机上逛展看车，汽车之家做了如下探索：</p><p>在视觉方面，大量使用 2.5D 技术，同时，使用懒加载技术从各种方面替用户节省带宽；在 3D 技术应用方面，通过贴图压缩、模型压缩、GC、增加大量场景可承载内容等大量改进来补足引擎基础能力，加载速度也因此提升了 80%；采用并优化了智能逛展、智能讲车和用户智能推荐等智能化技术，让用户能够轻松逛展。</p><p>&nbsp;</p><p>当下，汽车之家仍在致力于攻克虚拟数字人和 3D 云渲染等技术。陈超表示，“未来汽车之家将把所有的 2D 产品体验升级成 3D 体验，期望给用户带来完全不一样的看车、买车、用车和换车体验。”</p><p></p><p></p><h2>四、写在最后</h2><p></p><p>&nbsp;</p><p>过去几年，汽车之家在元宇宙领域不断“秀肌肉”的同时，也为汽车产业发展注入了新动力，让人们的看车、试车变得有趣、便捷。我们甚至可以大胆畅想，在元宇宙发展成熟的未来，在一台五菱宏光上甚至也能模拟出开 F1 的快感，这种快感绝非如今的模拟声浪技术，而是真正集视觉、触觉和听觉于一体的体验。</p><p>&nbsp;</p><p>回溯根本，元宇宙是物理世界、虚拟世界和人类社会三者高度融合的世界，主要有3 项核心技术：一是扩展现实技术，包括 VR 和 AR，用以提供沉浸式的体验；二是数字孪生，把现实世界镜像到虚拟世界里面去；三是区块链技术，以搭建经济体系。然而目前元宇宙无论是底层技术还是应用场景上都还远未达成熟形态，整体发展尚处初级阶段，汽车元宇宙亦然。</p><p>&nbsp;</p><p>当下，随着新能源汽车等智能化汽车的异军突起，汽车上承载的功能会越来越多，比如自动驾驶、模拟各个虚拟场景等，这必然对硬件的输入输出能力、芯片的算力、云计算能力等各方面都有非常高的要求，整个也是未来一段时间内智能汽车行业亟须解决的课题。而车企如果能与元宇宙结合得当，将会给行业带来更多的机会与未来。</p>",
    "publish_time": "2022-11-21 10:47:22",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]