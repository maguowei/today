[
  {
    "title": "网易智企：如何做好 to B 服务这件事",
    "url": "https://www.infoq.cn/article/CTK8kyEqEJ2843oo4fxk",
    "summary": "<p>早在2002年，网易 POPO 即时通讯软件就已上线，到了2013 年，网易又曾与中国电信合力打造易信，沉淀了即时通讯相关的技术。随着移动互联网时代到来，网易各类 C 端产品也相继涌现，在与内部其他事业部的打磨中，又进一步积累了企业级 IM 云服务的实践经验。2015 年，提供融合通信云服务的<a href=\"https://xie.infoq.cn/article/32c79a1f939eda19552157f79\">网易云信</a>\"顺势推出，其将已经验证过的通信与音视频 PaaS 化服务推向市场。</p><p>&nbsp;</p><p>作为网易智企的第一块业务，成立七年的网易云信累计服务了超过&nbsp;150 万企业开发者，成功发送了&nbsp;20000 亿条消息，全球注册应用数超&nbsp;58 万，累计覆盖智能终端 SDK 数超过&nbsp;224 亿。</p><p></p><p><img src=\"https://static001.geekbang.org/infoq/22/22a669deb5794f2c8f13c733aa799526.png\" /></p><p></p><p>网易云信能取得如此成绩的原因之一便是顺应了互联网的发展趋势。2015 年，随着“互联网+”战略的首次正式提出，中国移动互联网迎来了爆发式增长，各大巨头也纷纷开始发力 to B 业务，网易智企便是网易的 to B 的“先锋”。</p><p>&nbsp;</p><p>当时，国内通信基础设施持续完善，带来了通信质量提升，为更多场景与互联网高效连接提供了重要保障。同时，传统企业快速接纳“互联网+”创新模式，极大丰富了移动互联网的应用与服务。这为网易云信的诞生提供了土壤。</p><p>&nbsp;</p><p>在这个服务过程中，网易也看到了信息安全的重要性，网易智企旗下主打安全牌的网易易盾也应运而生。</p><p>&nbsp;</p><p>网易易盾最初的想法是拦截垃圾邮件，但随着形形色色的内容涌现，有害内容增多、真假信息掺杂的情况逐渐成为横亘在业务发展道路上的一座大山，内容风控的重要性和必要性开始被广泛接受。网易易盾也开始向着成为一套解决各类数字风控痛点的体系化产品演进。</p><p>&nbsp;</p><p>如今，网易易盾终端覆盖量超 25 亿，累计检测数据量超 2 万亿，处理移动安全风险超 1400 亿，抵御外挂威胁超&nbsp;700 亿。</p><p>&nbsp;</p><p>顺应时代、“做正确的事”，被市场验证是有效的，这个理念也被刻进了网易智企的成长基因中。</p><p>&nbsp;</p><p></p><h2>深入技术</h2><p></p><p>&nbsp;</p><p>当前，在各行各业数字化深度推进的当下，技术的深度挖掘和普及应用成为不可逆转的趋势。</p><p>&nbsp;</p><p>在过去七年，网易云信紧密围绕 IM 即时通讯和音视频两大核心技术，不仅在大规模分布式传输网络、高性能通信服务、高效视频编码、智能音频处理、弱网体验保障等云通信关键技术上取得了诸多突破，还在与客户深度碰撞的场景化技术上不断优化，比如：智码超清技术、音频空间音效、语音/视频特效、虚拟形象等。</p><p>&nbsp;</p><p>除此之外，网易云信在计算机视觉、机器学习等 AI 技术与传统算法和基础通信能力结合等方面进行着持续探索，获得了海内外各项赛事、顶级学术会议、权威机构的广泛认可。</p><p>&nbsp;</p><p>今年，网易云信&nbsp;AI 音频研究成果获得了全球顶级声学、语音及信号处理会议 ICASSP 2022 认可，并受邀在会议上向学术和工业界做研究报告；在全球计算机视觉和模式识别领域顶级会议 CVPR 上，网易云信的视频超分技术以明显优势获得冠军。</p><p>&nbsp;</p><p>同时，网易易盾多年来一直积极参与多项国家/行业标准的起草制定，如参与起草信通院《人脸信息处理合规操作指南》、参编中国科学院信息工程研究所《信息安全技术-互联网信息服务安全通用要求》（国标）、参与起草人社部、公安部《网络与信息安全管理员国家职业技能标准》（国标）等。</p><p>&nbsp;</p><p>2021年，在安全行业门户FreeBuf发布的《CCSIP 2021中国网络安全产业全景图》(第二版)中，网易易盾全产品线再次入选恶意内容检测、舆情检测、业务反欺诈、账户安全等多个分类。</p><p>&nbsp;</p><p>近日，随着跨区域的线上沟通、远程协同办公、远程医疗、在线教育等新场景线上场景的激增，网易智企融合两大业务的技术优势，推出了安全通一站式解决方案。用户只需将客户端集成网易云信 SDK 即可与通信服务建立连接，并直接对接网易易盾内容安全服务。由于通信服务管理和内容安全检测服务是混合部署的，所以一定程度上也帮助用户降低了成本。</p><p>&nbsp;</p><p>另外，网易智企也在今年推出了<a href=\"https://www.infoq.cn/article/gQfuWEDMSjw15YdoyoD5\">“易+”开源计划</a>\"，先后开源了网易会议组件、低延时直播方案、<a href=\"https://xie.infoq.cn/article/b0009682428e7799589e3bf2c\">GameSentry</a>\" 等工具。其中，网易会议组件能帮助各行各业用户快速构建稳定可靠、高清易用的专属会议系统；低延时直播方案成为业界首个开源的低延时直播方案，推动着直播行业的整体发展；GameSentry 则是游戏安全战场的“哨兵”，守护游戏安全的第一道防线。</p><p>&nbsp;</p><p>&nbsp;</p><p></p><h2>理解场景</h2><p></p><p>&nbsp;</p><p>网易副总裁、网易智企总经理阮良也曾在交流中表示，to B 面对的是一个个特定行业、特定场景里的组织，最大的挑战在于是否真的了解客户，是否真的理解场景。</p><p>&nbsp;</p><p>网易智企的思路是，先从擅长的领域切入，比如泛互联网中的游戏，再逐渐拓展到传统行业。</p><p>&nbsp;</p><p>作为在全球拥有超过 1 亿注册用户的头部游戏分发平台，火烈鸟网络前不久与网易智企合作，希望寻求一整套完备的解决方案，既能履行好企业合规要求和未成年人保护义务，又能与用户形成更好的交互方式，提升用户游戏体验，进而促进新的增长。</p><p>&nbsp;</p><p>网易智企为火烈鸟网络提供了一套“组合拳”：网易易盾的内容安全机审和号码认证、网易云信的 IM 专业版，以及网易云商的一体化服务营销。</p><p>&nbsp;</p><p>除了泛互联网行业，在传统行业的“互联网+”场景中，网易智企也在发挥着技术价值。网易智企与新华三展开深度合作，联合共创软硬一体的医医协作解决方案。</p><p>&nbsp;</p><p>在远程病理诊断中，借助新华三云屏终端载体，病理切片图像转化为 4K 超高清视频信号，并通过 4K 视频会议系统实时传输，让专家在千里之外完成病理阅片、出具专业的诊断意见。</p><p>&nbsp;</p><p>为解决疫情下的就业问题，网易智企为滨江区人力社保局定制了一个“零接触云招聘”系统，以线上视频面试代替了线下面对面交流。除此之外，网易智企还先后在浙江、河南等地落地了人工审核基地，构建起了全国性的互联网内容审核服务网络，释放了更多的就业机会。</p><p>&nbsp;</p><p>面对未来未知的机遇和挑战，网易智企如何更好地发展与应对，我们拭目以待。</p>",
    "publish_time": "2022-11-07 11:41:24",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "为什么说可观察性是解锁GitOps的关键",
    "url": "https://www.infoq.cn/article/TTDS1pC6Cz6MRqJTpMir",
    "summary": "<p>GitOps是一种新的软件开发范式，承诺简化和完全自动化软件部署过程。GitOps不依赖IT人员或笨拙的脚本来配置环境，而是将所有环境定义成代码，并通过一致和可预测的方式一起部署环境和应用程序。所有的东西都放在源代码控制系统中，使用的是大多数开发人员都熟悉的工具。</p><p></p><p>GitOps承诺可以大幅提升开发人员的生产力。但就像任何新的技术一样，挑战存在于细节之中。GitOps的一个复杂之处在于确保活动环境的充分可见性，以便确保环境可以与所需的配置保持同步。在本文中，我将解释为什么可观察性对GitOps如此重要，以及GitOps平台ArgoCD是如何解决可观察性问题的。</p><p></p><h2>什么是持续交付和持续部署</h2><p></p><p></p><p><a href=\"https://continuousdelivery.com/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">持续交付</a>\"为生产部署准备好环境，只需按下一个按钮就可以部署变更。使用传统的方式，通常是将变更合并到主分支（也就是所谓的推送部署）。</p><p></p><p>在新的GitOps环境中，通过向集中式环境代码库提交变更来触发部署（也就是所谓的拉取部署）。</p><p></p><p>持续交付负责构建可以部署到生产环境中的工件。这是持续集成（CI）之后的下一步。它准备了一个即将用于部署的软件版本，然后等待团队评估变更并决定是否发布它。</p><p></p><p>持续部署向前迈进了一步，不需要等待人工评估新版本和按下发布按钮。在持续部署中，每个变更都会被自动测试，如果满足某些预定的质量标准，就会自动部署到生产环境中。</p><p></p><h2>什么是GitOps</h2><p></p><p></p><p><a href=\"https://codefresh.io/learn/gitops/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">GitOps模型</a>\"要求使用源代码控制系统（通常是基于Git）进行应用程序和基础设施的配置管理。Git版本控制系统作为GitOps的唯一事实来源。基于这个单一的事实来源，GitOps使用声明性配置调整生产环境来匹配所需的状态。</p><p></p><p>GitOps通过Git拉取请求自动管理基础设施的配置和部署。它依赖包含系统完整状态的Git代码库来实现对系统状态变更的完整审计跟踪。</p><p></p><p>GitOps更强调开发者经验，开发团队可以使用他们熟悉的过程和工具来管理基础设施。GitOps在选择工具方面提供了几乎全面的灵活性。</p><p></p><h2>GitOps的好处是什么</h2><p></p><p></p><p>使用GitOps有很多方面的原因，大多数都与更快、更可靠、更高质量交付软件的能力有关。以下是经常被提及的GitOps的好处。</p><p></p><p>提高生产力——GitOps通过集成反馈循环实现了完全自动化的持续部署，与传统的CI/CD管道相比，这缩短了部署时间。DORA研究小组的<a href=\"https://cloud.google.com/devops/state-of-devops?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">DevOps状态报告</a>\"显示，表现最好的DevOps团队有四个特点：高部署频率（DF）、低变更发布时间（MLT）、低恢复服务时间（MTTR）和低变更失败率（CR）。GitOps可以直接改进这四个指标。改进了开发者体验——在操作Kubernetes集群时，GitOps不需要执行kubectl命令。开发人员不必了解和维护Kubernetes的内部机制，他们可以使用熟悉的工具（如Git）声明式地管理Kubernetes更新和特性，Kubernetes集群中的任何操作都是由GitOps控制器自动执行的。新加入的开发人员可以更快上手，并在几天（而不是几个月）内提升工作效率，有经验的开发人员可以继续利用他们已掌握的与现有工具相关的知识。提升了稳定性——在GitOps工作流中，所有的变更都会自动创建审计日志。这种可审核性提升了稳定性，因为我们可以很容易看到哪些变更导致了生产问题。这还可用于遵循任何必要的标准，如SOC 2。改进的可靠性和回滚——Git提供了回滚和fork特性，让团队可以实现可靠和可重复的回滚。因为Git是集群配置的事实来源，所以团队只有一个可用恢复生产问题的单一来源。这将恢复时间从几小时缩短到了几分钟。一致性和标准化——GitOps提供了一种通过一致的方式修改基础设施、应用程序和Kubernetes插件的模型，提供了跨企业的可见性，并确保所有团队都有一致的端到端工作流。安全保证——Git可以签署变更并证明作者和来源，还可以提供强大的加密来跟踪和管理变更。这为Kubernetes集群的完整性和安全性提供了高度的信任。</p><p></p><h2>什么是可观察性以及它如何为GitOps提供支持</h2><p></p><p></p><p>在云原生应用程序架构中，传统的监控方法已经达到了极限。现在的焦点正在从监控转移到可观察性。</p><p></p><p>系统监控根据预定义的指标来确定系统的运行状况，从而检测出一组已知的问题。例如，<a href=\"https://www.tigera.io/learn/guides/container-security/docker-container-monitoring/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">容器监控</a>\"旨在回答两个问题：出了什么问题，以及为什么会出问题。随着时间的推移，我们可以通过分析容器在问题发生之前预测和预防问题的发生。<a href=\"https://www.infoq.com/articles/cloud-native-observability/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">可观察性</a>\"旨在基于三个关键元素（日志、指标和跟踪）来了解系统状态。可观察性是系统的一个特征——就像系统的伸缩性、可靠性或安全性一样，它也可以是可观察的。在云原生环境中，从一开始就应该将可观察性构建到应用程序中。</p><p></p><p>监控和可观察性紧密相连。可观察的系统更容易被监控。监控是可观察性的一部分，有效的监控是有效的可观察系统所带来的结果。</p><p></p><p>可观察性通过以下三个主要元素来提供洞见。</p><p></p><p>日志——提供离散的系统事件的记录。指标——在设定的时间间隔内度量和处理数值和统计数据。跟踪——提供事件序列来反映逻辑路径。</p><p></p><p>这三种类型的洞见为大多数关键问题提供了答案，包括部署的当前状态与预期状态的比较。它们对系统的所有方面——从预期的架构和配置到UI、资源和行为——来说都很重要。</p><p></p><h4>GitOps对可观察性的需求</h4><p></p><p></p><p>GitOps模型强调简化复杂的Kubernetes管理任务的能力。其核心概念是通过对集中式Git代码库的变更触发生产环境部署，并完全自动化地修改Kubernetes集群。</p><p></p><p>要启用真正的GitOps过程，需要两种类型的可观察性。</p><p></p><p>内部可观察性——例如，GitOps控制器需要知道Kubernetes集群中发生了什么，以便与所需的配置进行比较并做出调整。外部可观察性——在集群内外运行的其他系统需要知道GitOps系统的自动化工作流。为此，GitOps系统需要发布能够被云原生监控系统消费的指标。</p><p></p><h4>内部可观察性的工作原理</h4><p></p><p></p><p>在GitOps过程中，Git是系统预期状态的唯一事实来源，而可观察性为系统的实际状态提供了唯一事实来源。因此，它可以帮助GitOps开发人员了解系统的状态。</p><p></p><p>例如，如果你打算基于Git代码库中的部署清单在集群中运行三个NGINX pod。GitOps系统将使用Kubernetes控制器来确定实际运行的pod数量及其当前的配置。如果它检测到错误的实例数量或对pod配置做出了任何修改（这被称为配置漂移），它会创建一个“diff警报”。</p><p></p><p>一旦系统感知到发生了漂移（即期望和实际实例数量之间的不匹配），diff警报可以触发相关的Kubernetes控制器。控制器将尝试同步实际状态和期望状态。等到diff警报消失，系统就会认为实际状态与期望状态匹配，这意味着应用程序已经“同步”了。</p><p></p><p>整个过程的关键之处是感知到漂移。如果你不知道系统处于不同步状态，就无法同步或修复状态。因此，内部可观察性对于GitOps和确保实际状态保持同步来说是至关重要的。</p><p></p><h4>外部可观察性的工作原理</h4><p></p><p></p><p>外部可观察性有三个要素。</p><p></p><p>需要在Kubernetes集群中运行监控系统。有一些成熟的工具支持云原生环境——常见的一个选择是Prometheus。一个根据Git配置来修改集群的GitOps控制器。由GitOps控制器或相关系统发布的指标。</p><p></p><p>有了这三个元素，监控系统就可以从集群的GitOps自动化系统中获取指标，主动通知生态系统的其他部分正在发生哪些变更。换句话说，其他系统会收到应用程序正在同步的“提示”，而不是在回顾时才发现它并产生不必要的警告。</p><p></p><p>我们将以流行的GitOps项目<a href=\"https://argoproj.github.io/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">Argo</a>\"为例。</p><p></p><h2>Argo是什么</h2><p></p><p></p><p>Argo是一个开源项目集合，帮助开发人员更快、更安全地交付软件。Argo是Kubernetes原生的，这让开发人员可以轻松地部署和发布他们自己的应用程序。</p><p></p><p>Argo支持使用高级的渐进式部署策略进行持续部署，开发人员可以定义发布服务所需的一系列操作。</p><p></p><p><a href=\"https://argoproj.github.io/cd/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">Argo CD</a>\"是一个基于GitOps的Kubernetes持续部署工具。配置逻辑保存在Git中，开发人员可以使用已有的基于Git的开发、审查和批准工作流来处理他们的代码。Argo CD没有提供持续集成能力，但它可以集成CI系统。<a href=\"https://argoproj.github.io/rollouts/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">Argo Rollouts</a>\"是为Kubernetes构建的增量式交付控制器。它支持渐进式部署策略，包括金丝雀部署、蓝/绿部署和A/B测试。<a href=\"https://argoproj.github.io/workflows/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">Argo Workflows</a>\"是一个容器原生的工作流引擎，用于编排Kubernetes上的并行任务。<a href=\"https://argoproj.github.io/events/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">Argo Events</a>\"是一个事件驱动的工作流自动化框架和依赖管理器，可以管理来自各种来源的事件，包括Kubernetes资源、Argo工作流和无服务器工作负载。</p><p></p><p>在GitOps工作流中，Argo促进了应用程序的部署和生命周期管理过程。它让开发人员能够无缝地操作环境和基础设施、自动化部署、回滚，并让故障排除变得更容易。</p><p></p><h2>Argo为GitOps赋能</h2><p></p><p></p><p>Argo使用Kubernetes清单持续监控Git代码库、验证提交、主动从代码库获取变更，并将它们与集群资源进行同步。这个同步协调过程确保集群配置的状态始终与Git中描述的状态匹配。</p><p></p><p>这就是GitOps的确切定义——Argo可以帮助团队在他们现有的Kubernetes集群中轻松地实现完整的GitOps过程，而不需要改变现有的工作流程。</p><p></p><p>此外，Argo还消除了常见的配置漂移问题。当集群中的元素随着时间的推移偏离期望的配置时，就会出现配置漂移。这些意外的配置差异是导致部署失败的一个最常见的原因。Argo可以自动消除配置漂移，或者至少显示出集群的部署历史，以便识别出漂移并导致漂移的变更。</p><p></p><p>最后，Argo旨在为Kubernetes开发人员提供更好的体验，让他们能够在轻松应用高级部署策略的同时保持熟悉的用户体验。它被实现为Kubernetes自定义资源定义（CRD），这意味着它就像现有的Kubernetes对象一样，具有开发人员可以使用的扩展。</p><p></p><p>总的来说，Argo让GitOps的实施变得更容易，原因如下。</p><p></p><p>更高效的工作流程——开发人员可以使用熟悉的流程和工具部署代码。改进的可靠性和一致性——使用自动化代理来确保Git中定义的期望状态与集群的状态相同。提高生产力——完全自动化的CD和不复杂的设置。降低了部署的复杂性——部署变成了发生在幕后的透明的过程。渐进式交付——在传统设置中，设置蓝/绿或金丝雀部署等策略非常困难，而这些在Argo中都是现成的。</p><p></p><p>Argo CD：内置可观察性的GitOps</p><p></p><h4>Argo CD的内部可观察性</h4><p></p><p></p><p>Argo CD通过Kubernetes API Server来接收有关资源状态和运行状况的信息。当它检测到当前集群状态和Git中的配置不一致时，它将经历三个阶段。</p><p></p><p>预同步（Pre-sync）——检查变更是否有效，是否需要对集群做出修改；同步（Sync）——对集群做出修改；后同步（Post-sync）——验证修改是否正确。</p><p></p><p>这个过程包含了一次或多次对整个集群进行走查，找到漂移，并对漂移做出反应。每一次走查中的资源的顺序是按照类型（命名空间，然后是Kubernetes资源，然后是自定义资源）和名称来决定的。</p><p></p><p>在每一波走查中，如果有任何资源不同步，Argo CD将对其进行调整，然后继续扫描集群。请注意，如果第一波走查中的资源不正常，则应用程序可能无法成功同步。</p><p></p><p>Argo CD在每一波同步走查之间会有延迟，以便让其他控制器有机会对变化做出反应。这也防止Argo CD在更新以反映当前对象状态之前过快地评估资源运行状况。</p><p></p><h4>Argo CD和Argo Workflows中的外部可观察性</h4><p></p><p></p><p>Argo CD提供了通知功能，让你可以持续监控Argo CD应用程序，并接收有关应用程序状态发生重大变化的警报。它提供了一种灵活的使用模板和触发器设置通知的方式——你可以定义通知的内容以及Argo CD应该何时发送通知。</p><p></p><p>Argo的另一部分是Argo Workflows，它让你可以自动化Kubernetes集群中与CI/CD管道相关的任务。Argo Workflows可以生成几个默认的控制器指标，你也可以定义自定义指标来提供与工作流状态有关的信息。</p><p></p><p>Argo Workflows可以生成两种类型的指标。</p><p></p><p>控制器指标——提供与控制器状态有关的信息。自定义指标——提供与工作流状态有关的信息。你可以使用工作流规范定义自定义指标。指标生成器的所有者负责生成自定义指标。</p><p></p><p>例如，你可以定义自定义的Prometheus指标，并在工作流或模板级别应用它们。这些指标在各种情况下都很有用。</p><p></p><p>强制应用阈值——跟踪你的模板或工作流的持续时间，并在它们超过阈值时收到警报。跟踪故障——查看你的模板或工作流在特定时间内发生故障的频率。指标报告——为内部指标设置报告，如模型训练分数和错误率。</p><p></p><h2>结论</h2><p></p><p></p><p>GitOps正逐渐成为主流的开发实践。我解释了为什么可观察性是GitOps系统不可分割的一部分，并描述了两种类型的可观察性。</p><p></p><p>内部可观察性——GitOps控制器需要识别集群中的配置漂移并纠正它们。外部可观察性——需要将GitOps控制器所做的变更通知给运维人员和其他系统。</p><p></p><p>我还简要地展示了如何在一个流行的开源GitOps平台——Argo中实现这两者。</p><p></p><p>GitOps基于几种复杂的机制，了解它们的最好方法是使用Argo CD进行一次测试。也可以参考官方<a href=\"https://argo-cd.readthedocs.io/en/stable/getting_started/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">入门教程</a>\"，它展示了如何安装Argo CD以及将一个小应用程序部署到Kubernetes集群中。尝试“搞乱”你的测试集群，看看Argo如何获取变更并将集群恢复到你想要的状态。</p><p></p><p>要更深入地了解Argo CD同步过程，请参阅官方文档中关于<a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/sync-waves/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">同步阶段和同步波</a>\"的介绍。</p><p></p><p></p><h3>作者简介</h3><p></p><p></p><p>Gilad David Maayan是一名技术作家，曾与150多家技术公司合作，包括SAP、Imperva、Samsung NEXT、NetApp和Check Point，为开发人员和IT管理者提供与技术和思想领导力相关的内容。</p><p></p><p>原文链接：</p><p><a href=\"https://www.infoq.com/articles/observability-gitops/?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE2Njc3OTI1NzQsImZpbGVHVUlEIjoicWZBQVc0ZFkyVVE2VnZsbiIsImlhdCI6MTY2Nzc5MjI3NCwiaXNzIjoidXBsb2FkZXJfYWNjZXNzX3Jlc291cmNlIiwidXNlcklkIjo2MjMyOH0.CKrD_Nl4vwWmLF2Z5yeuWtN-lT6T9JX7pcrzC52M1uQ\">https://www.infoq.com/articles/observability-gitops/</a>\"</p>",
    "publish_time": "2022-11-07 11:47:43",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]