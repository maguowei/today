[
  {
    "title": "云南红塔银行新核心系统全面上云",
    "url": "https://www.infoq.cn/article/XZBN6lFCveUkJOV7xvJ8",
    "summary": "<p>7月8日消息，云南红塔银行全新一代核心系统日前正式在云上投产上线。该系统采用分布式、微服务技术架构打造，部署在由云南红塔银行联合腾讯云打造的私有云平台上，并实现了全集业务双活态运行。新系统的上线，让红塔银行具备了服务亿级客户、每天亿级交易量的“双亿”能力。</p><p>&nbsp;</p><p>核心系统是银行软件系统的核心和基础，也是银行实现产品服务、业务流程、财务核算管理、风险管控等核心功能的支撑，因此核心系统也被称为银行的“心脏”。</p><p>&nbsp;</p><p>2021年4月，由于原有核心系统难以满足业务发展需求，云南红塔银行启动了新一代核心系统项目群的开发建设，并决定与腾讯云合作，在新核心系统中统筹运用云计算、微服务等先进技术，构建满足未来业务发展需要的金融科技能力。</p><p>&nbsp;</p><p>首次实现双活业务架构</p><p>&nbsp;</p><p>双方合作建设的私有云平台为红塔银行首次实现双活业务架构提供了底层支撑。</p><p>&nbsp;</p><p>据悉，红塔银行原有的核心系统采用的是主备架构模式，其业务在底层由一个数据中心承载，而另外一个数据中心的功能是备份数据；新核心系统则计划采用更先进的双活架构模式，也就是让底层资源两个数据中心同时承载业务，互为备份，并实时同步数据，以实现更高的业务可靠性。</p><p>&nbsp;</p><p>为了实现这个目标，红塔银行通过腾讯云TCE提供的统一云管理平台，基于同城两个数据中心构建统一的计算、存储和网络资源，并在数据中心之间实现网络互联，支撑业务实现全功能对等部署，确保业务请求可以发送到任一数据中心部署的核心应用中，实现全集业务双活状态运行。</p><p>&nbsp;</p><p>在数据层面，腾讯云还支撑红塔银行构建了横跨双数据中心的全局对象存储，支撑所有非结构化数据的存储，让核心系统不再依赖于传统的存储异步复制技术，确保业务对象文件零丢失。</p><p>&nbsp;</p><p>此外，红塔银行也依托私有云平台，打造了自动化和灰度发布、PaaS层弹性扩容等能力，并建设配套的可观察系统，具备了一站式从业务视角发现问题，技术视角诊断问题的快速故障处理能力。</p><p>&nbsp;</p><p>助力全行技术架构标准化</p><p>&nbsp;</p><p>在底层资源之上，红塔银行还联合腾讯云构建了全行统一的微服务开发框架，并将腾讯云TCE云平台中的PaaS服务作为技术开发标准化组件，为全行技术架构的标准化奠定了基础。</p><p>&nbsp;</p><p>此次核心系统开发，红塔银行依托腾讯云API网关、服务调用框架、服务注册中心、配置中心、熔断限流、服务治理、链路追踪、监控告警、日志分析等组件，对核心系统进行微服务化改造。在统一、开放的微服务框架下，系统业务只需要少量适配就可接入，并能实现模块化开发和灵活发布。</p><p>&nbsp;</p><p>红塔银行还借助构建新一代核心业务的契机，联合腾讯云建设全行统一消息服务总线，通过消息发布的形式对交易链路上的任务进行优化，助力核心系统实现平均每分钟处理约50万笔联机交易、交易平均响应时间不高于300毫秒的性能。</p><p>&nbsp;</p><p>“新核心系统在云上投产，代表着红塔银行构建了一套支撑未来8~10年业务发展需要的强大核心业务系统，为红塔银行‘产业银行+科技银行’双轮驱动铸造了一个坚实的底座，也为未来全行经营和管理数字化转型插上了腾飞的翅膀。”红塔银行党委副书记、行长张振民表示。</p><p>&nbsp;</p><p>目前，腾讯云已经服务了金融全业务领域客户。在银行领域，腾讯云已经与中国人民银行、六大国有行建立了合作关系；头部商业银行中90%客户在数字化转型中均采用腾讯云的方案，其中7成应用在核心或关键业务领域。</p><p>&nbsp;</p>",
    "publish_time": "2022-07-09 16:30:37",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  },
  {
    "title": "从忽略到重视，Stack Overflow改变了对单元测试的态度",
    "url": "https://www.infoq.cn/article/9OSwTpG2SxfEPHSFfKoU",
    "summary": "<p>在很长一段时间里，Stack Overflow都忽略了单元测试，但现在Stack Overflow正在努力改变这种状况。</p><p>&nbsp;</p><p>在早期的时候，Stack Overflow是一个以快速精益运营为主的网站，像所有初创公司一样，优先考虑对企业最重要的质量属性，单元测试这样的事情被搁置到一旁。如果存在Bug，主要靠用户在使用中发现并报告给他们，Stack Overflow开发人员再进行修复或解决。&nbsp;</p><p>&nbsp;</p><p>Stack Overflow认为单元测试是一种自动化测试，测试最小的代码片段以确保其正常运行，不会与进程外的依赖项对话。企业最佳实践是应该有大量的单元测试，中等数量的集成测试，并且只有少数端到端测试。&nbsp;但以前Stack Overflow几乎没有单元测试，&nbsp;虽然Stack Overflow有集成测试套件，但测试基础设施尤其是单元测试，远远落后于产品的成熟度。&nbsp;</p><p>&nbsp;</p><p>几年前，Stack Overflow为Teams Enterprise 推出了付费产品，企业用户并不愿意在生产时发现并报告错误了。而且在未来规划中，Stack Overflow需要一个弹性代码库，在必要时重构代码，测试代码是让开发者创建干净代码的基础，而且Stack Overflow未来还想强制执行代码“clean beach rule”来保持代码的干净整洁。另外，编写良好的测试可作为一种文档形式，新加入的成员也可以通读测试并准确了解相关代码在做什么。所以他们不得不改变策略，对单元测试予以重视。</p><p>&nbsp;</p><p>Stack Overflow开始完善软件开发流程，但也并没有试图突然对已经部署在生产中的每一段代码进行测试覆盖，毕竟之前大部分代码都经过了开发者社区的实战测试。&nbsp;</p><p>&nbsp;</p><p>Stack Overflow针对未来发展规划，在数据库层面提供了一种方法来指示测试何时提取模拟数据。因为使用Dapper和.NET 中的实体框架来管理数据库连接，因此Stack Overflow创建了一个扩展接口DbContext，以便可以将模拟数据视为数据库连接。&nbsp;另外还引入了一个builder而不是constructor，为测试创建模拟站点数据。并且在前端实现了一个<a href=\"https://jestjs.io/\">Jest</a>\"来测试代码，并将它引入了所有的前端代码中。最后，他们还在 Stack Overflow for Teams 实例中设置了一个测试手册，详细介绍了如何编写良好的单元和集成测试。</p><p>&nbsp;</p><p>Stack Overflow表示编写一个好的单元测试并不是那么难，这些改变也意味着他们的代码质量变得越来越重要。</p><p>&nbsp;</p><p>了解更多：</p><p><a href=\"https://stackoverflow.blog/2022/07/04/how-stack-overflow-is-leveling-up-its-unit-testing-game/\">https://stackoverflow.blog/2022/07/04/how-stack-overflow-is-leveling-up-its-unit-testing-game/</a>\"</p><p>&nbsp;</p><p>&nbsp;</p>",
    "publish_time": "2022-07-09 16:33:58",
    "source": {
      "name": "infoq_recommend",
      "desc": "InfoQ推荐",
      "icon": "https://raw.githubusercontent.com/maguowei/today/master/imgs/icon/infoq.png"
    }
  }
]